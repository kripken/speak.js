// eSpeak and other code here are under the GNU GPL.
function generateSpeech(text, args) {
  var self = { text: text, args: args, ret: null };
  (function() {

  var Module = {};
  Module['noInitialRun'] = true;
  var phontab=[94,0,0,0,109,0,0,0,0,0,0,0,98,97,115,101,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
95,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,37,0,0,0,0,0,0,0,0,0,2,1,0,0,
1,0,37,37,0,0,0,0,0,0,0,0,3,1,0,0,0,0,44,0,0,0,0,0,0,0,0,0,4,1,
0,0,2,0,44,44,0,0,0,0,0,0,0,0,5,1,0,0,3,0,39,0,0,0,0,0,0,0,0,0,
6,1,0,0,4,0,39,39,0,0,0,0,0,0,0,0,7,1,0,0,5,0,61,0,0,0,0,0,0,0,
0,0,8,1,0,0,2,0,95,58,0,0,0,0,0,0,0,0,9,0,10,0,37,1,95,0,0,0,0,0,
0,0,0,0,10,0,10,0,12,1,95,33,0,0,64,0,0,0,0,0,11,0,10,0,17,1,58,0,0,0,
0,0,0,0,0,0,12,9,0,0,35,0,64,0,0,0,2,0,0,0,12,0,13,2,28,28,70,0,64,45,
0,0,2,0,16,0,14,0,14,2,28,28,90,0,124,124,0,0,0,0,0,0,0,0,15,0,0,0,0,9,
42,0,0,0,16,64,132,0,138,2,16,5,0,0,0,3,49,0,0,0,0,0,0,0,0,0,17,0,0,0,
0,0,35,88,49,0,40,0,4,0,59,0,18,6,0,0,0,3,63,0,0,0,72,0,12,0,2,0,19,4,
0,0,0,3,45,0,0,0,0,0,0,0,0,0,20,9,0,0,0,0,95,94,95,0,0,0,0,0,0,0,
21,0,10,0,5,1,95,88,49,0,0,0,0,0,0,0,22,0,10,0,5,1,95,124,0,0,0,0,0,0,
0,0,23,0,10,0,0,5,95,58,58,0,0,0,0,0,0,0,24,0,10,0,75,1,116,35,0,0,0,0,
0,0,0,0,25,0,0,0,0,0,39,33,0,0,0,0,0,0,0,0,26,1,0,0,6,0,95,59,95,0,
0,0,0,0,0,0,27,0,10,0,100,1,35,64,0,0,0,0,0,0,0,0,28,9,0,0,0,0,35,97,
0,0,0,0,0,0,0,0,29,9,0,0,0,0,35,101,0,0,0,0,0,0,0,0,30,9,0,0,0,0,
35,105,0,0,0,0,0,0,0,0,31,9,0,0,0,0,35,111,0,0,0,0,0,0,0,0,32,9,0,0,
0,0,35,117,0,0,0,0,0,0,0,0,33,9,0,0,0,0,114,0,0,0,0,0,128,0,71,0,34,3,
0,0,0,7,97,0,0,0,0,0,0,0,23,0,35,2,29,29,90,0,101,0,0,0,0,0,0,0,25,0,
36,2,30,30,85,0,105,0,0,0,0,0,0,0,27,0,37,2,31,31,85,0,59,0,0,0,0,2,0,0,
155,1,38,3,0,0,0,0,111,0,0,0,0,0,0,0,30,0,39,2,32,32,85,0,117,0,0,0,0,0,
0,0,32,0,40,2,33,33,85,0,109,45,0,0,0,0,0,0,34,0,41,2,28,28,85,4,110,45,0,0,
0,0,0,0,44,0,42,2,28,28,85,4,78,45,0,0,0,0,0,0,54,0,43,2,30,30,95,4,114,45,
0,0,2,0,0,0,61,0,44,2,28,28,110,0,108,45,0,0,2,0,0,0,66,0,45,2,28,28,100,0,
114,47,0,0,0,0,128,0,101,0,46,3,0,0,0,2,116,0,0,0,8,0,4,0,245,4,47,4,0,72,
0,2,112,0,0,0,8,0,1,0,219,4,48,4,0,71,0,2,107,0,0,0,8,0,8,0,57,5,49,4,
0,81,0,2,110,0,0,0,16,0,4,0,220,1,50,8,0,0,0,4,82,0,0,0,128,0,0,0,119,0,
51,3,0,0,0,6,82,50,0,0,128,0,0,0,136,0,52,3,0,0,0,6,82,51,0,0,128,0,0,0,
150,0,53,3,0,0,30,6,114,34,0,0,16,0,10,0,180,0,54,7,0,0,0,6,108,0,0,0,0,0,
0,0,206,0,55,3,0,0,0,7,108,47,0,0,0,0,0,0,246,0,56,3,0,0,0,7,106,0,0,0,
0,2,0,0,126,1,57,3,31,0,0,7,119,0,0,0,0,0,0,0,91,1,58,3,0,0,0,7,108,47,
50,0,0,0,0,0,13,1,59,3,0,0,0,7,108,47,51,0,0,0,0,0,37,1,60,3,0,0,0,7,
108,94,0,0,0,0,0,0,54,1,61,3,0,0,50,7,108,46,0,0,0,0,5,0,78,1,62,3,0,0,
0,7,76,47,0,0,0,0,0,0,13,1,63,3,0,0,0,7,76,0,0,0,0,0,0,0,82,1,64,3,
0,0,0,7,109,0,0,0,16,0,1,0,180,1,65,8,0,0,0,4,110,46,0,0,16,0,5,0,1,2,
66,8,50,0,0,4,110,94,0,0,16,2,7,0,39,2,67,8,0,0,0,4,78,0,0,0,16,0,8,0,
79,2,68,8,0,0,0,8,42,42,0,0,0,0,132,0,122,2,69,3,0,0,0,3,114,46,0,0,0,0,
5,0,183,2,70,3,0,0,0,3,98,0,0,0,16,0,1,0,196,2,71,5,0,48,0,5,100,0,0,0,
16,0,4,0,15,3,72,5,0,47,0,5,100,91,0,0,16,0,3,0,36,3,73,5,0,74,0,5,116,91,
0,0,8,0,3,0,10,5,74,4,0,73,0,2,100,90,0,0,48,0,6,0,63,3,75,5,0,76,0,5,
116,83,0,0,40,0,6,0,23,5,76,4,0,75,0,2,100,90,59,0,48,2,6,0,84,3,77,5,0,78,
0,5,116,83,59,0,40,2,7,0,32,5,78,4,0,77,0,2,74,0,0,0,48,2,7,0,120,3,79,5,
0,80,0,5,99,0,0,0,8,2,7,0,44,5,80,4,0,79,0,2,103,0,0,0,16,0,8,0,153,3,
81,5,0,49,0,5,66,0,0,0,16,0,1,0,174,3,82,7,0,83,0,6,102,0,0,0,8,0,2,0,
106,5,83,6,0,84,0,3,118,0,0,0,16,0,2,0,204,3,84,7,0,83,0,6,118,35,0,0,16,0,
2,0,241,3,85,7,0,83,0,6,68,0,0,0,16,0,3,0,0,4,86,7,0,87,0,6,84,0,0,0,
8,0,3,0,115,5,87,6,0,86,0,3,122,0,0,0,48,0,4,0,19,4,88,7,0,89,0,6,115,0,
0,0,40,0,4,0,128,5,89,6,0,88,0,3,90,0,0,0,48,0,6,0,43,4,90,7,0,91,0,6,
83,0,0,0,40,0,6,0,146,5,91,6,0,90,0,3,122,46,0,0,48,0,6,0,73,4,92,7,0,93,
0,6,115,46,0,0,40,0,6,0,159,5,93,6,0,92,0,3,122,59,0,0,48,2,7,0,105,4,94,7,
0,95,0,6,115,59,0,0,40,2,7,0,174,5,95,6,0,94,0,3,90,59,0,0,48,2,7,0,125,4,
96,7,0,97,0,6,83,59,0,0,40,2,7,0,189,5,97,6,0,96,0,3,74,94,0,0,16,2,7,0,
145,4,98,7,0,99,0,6,67,0,0,0,8,2,7,0,224,5,99,6,0,0,0,3,81,0,0,0,16,0,
8,0,159,4,100,7,0,101,0,6,120,0,0,0,8,0,8,0,237,5,101,6,0,100,0,3,81,94,0,0,
16,0,8,0,189,4,102,7,0,0,0,6,81,34,0,0,16,0,10,0,207,4,103,7,0,0,0,6,113,0,
0,0,8,0,10,0,90,5,104,4,0,0,0,2,108,35,0,0,8,0,4,0,204,5,105,6,0,0,0,3,
88,0,0,0,8,0,10,0,250,5,106,6,0,103,0,3,104,0,0,0,8,0,12,0,255,5,107,6,0,0,
0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,1,0,0,0,0,0,0,99,111,110,115,
111,110,97,110,116,115,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,116,115,
0,0,40,0,4,0,21,6,108,4,0,109,0,2,100,122,0,0,48,0,4,0,34,6,109,5,0,108,0,5,
112,45,0,0,8,0,1,0,55,6,110,4,0,71,0,2,112,104,0,0,8,0,1,0,74,6,111,4,0,71,
0,2,116,45,0,0,8,0,4,0,90,6,112,4,0,72,0,2,99,50,0,0,40,0,7,0,103,6,113,4,
0,0,0,2,107,45,0,0,8,0,8,0,116,6,114,4,0,81,0,2,107,104,0,0,8,0,8,0,129,6,
115,4,0,81,0,2,107,35,0,0,8,0,8,0,145,6,116,4,0,81,0,2,115,50,0,0,40,0,4,0,
167,6,117,6,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,1,0,0,0,0,
0,0,98,97,115,101,50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,97,0,0,0,0,0,0,0,176,6,35,2,29,29,95,0,101,0,0,0,0,0,0,0,185,6,
36,2,30,30,90,0,105,0,0,0,0,0,0,0,189,6,37,2,31,31,85,0,111,0,0,0,0,0,0,0,
192,6,39,2,32,32,90,0,117,0,0,0,0,0,0,0,196,6,40,2,33,33,90,0,116,0,0,0,8,0,
3,0,245,6,47,4,0,72,0,2,112,0,0,0,8,0,1,0,226,6,48,4,0,71,0,2,107,0,0,0,
8,0,8,0,29,7,49,4,0,81,0,2,100,0,0,0,16,0,3,0,2,7,72,5,0,47,0,5,97,47,
0,0,0,0,0,0,183,6,108,2,28,28,95,0,69,0,0,0,0,0,0,0,187,6,109,2,30,30,90,0,
79,0,0,0,0,0,0,0,194,6,110,2,32,32,90,0,85,0,0,0,0,0,0,0,198,6,111,2,33,33,
90,0,121,0,0,0,0,0,0,0,200,6,112,2,31,31,90,0,89,0,0,0,0,0,0,0,202,6,113,2,
28,28,90,0,97,85,0,0,0,0,0,0,204,6,114,2,29,33,135,0,101,85,0,0,0,0,0,0,206,6,
115,2,30,33,130,0,105,85,0,0,0,0,0,0,208,6,116,2,31,33,120,0,97,73,0,0,0,0,0,0,
210,6,117,2,29,31,125,0,101,73,0,0,0,0,0,0,212,6,118,2,30,31,125,0,69,73,0,0,0,0,
0,0,214,6,119,2,30,31,115,0,111,73,0,0,0,0,0,0,216,6,120,2,32,31,120,0,117,73,0,0,
0,0,0,0,218,6,121,2,33,31,120,0,119,50,0,0,0,0,0,0,220,6,122,3,0,0,0,7,116,115,
0,0,40,0,4,0,21,6,123,4,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
56,1,0,0,0,0,0,0,101,110,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,64,0,0,0,2,0,0,0,152,7,13,2,28,28,70,0,116,35,0,0,
16,0,4,0,54,7,25,5,0,0,0,5,97,0,0,0,0,0,0,0,179,7,35,2,29,29,80,0,105,0,
0,0,0,0,0,0,220,7,37,2,31,31,70,0,114,45,0,0,0,0,128,0,125,7,44,3,0,0,0,0,
108,0,0,0,0,0,0,0,91,7,55,3,0,0,0,7,116,50,0,0,16,0,4,0,52,7,108,5,0,0,
0,0,100,35,0,0,8,0,4,0,81,7,109,4,0,0,0,0,122,35,0,0,40,0,4,0,86,7,110,6,
0,0,0,0,103,45,0,0,16,0,8,0,104,7,111,5,0,0,0,5,122,47,50,0,48,0,4,0,145,7,
112,7,0,0,0,6,73,50,0,0,2,0,0,0,210,7,113,2,31,31,65,0,51,0,0,0,2,0,0,0,
158,7,114,2,28,28,70,0,64,50,0,0,2,0,0,0,163,7,115,2,28,28,60,0,64,53,0,0,2,0,
0,0,167,7,116,2,28,28,70,0,85,0,0,0,0,0,0,0,242,7,117,2,32,32,75,0,64,76,0,0,
2,0,0,0,172,7,118,2,28,55,80,0,97,35,0,0,2,0,0,0,185,7,119,2,28,28,75,0,97,97,
0,0,0,0,0,0,189,7,120,2,29,29,92,0,65,58,0,0,0,0,0,0,244,7,121,2,29,29,115,0,
69,0,0,0,0,0,0,0,196,7,122,2,30,30,70,0,69,35,0,0,0,0,0,0,199,7,123,2,30,30,
90,0,73,0,0,0,0,0,0,0,207,7,124,2,31,31,65,0,73,35,0,0,2,0,0,0,215,7,125,2,
31,31,65,0,48,0,0,0,0,0,0,0,225,7,126,2,32,32,70,0,48,35,0,0,0,0,0,0,228,7,
127,2,32,32,90,0,48,50,0,0,0,0,0,0,237,7,128,2,32,32,70,0,86,0,0,0,0,0,0,0,
239,7,129,2,29,28,70,0,65,64,0,0,0,0,0,0,247,7,130,2,29,29,115,0,51,58,0,0,0,0,
0,0,253,7,131,2,28,28,105,0,105,58,0,0,0,0,0,0,1,8,132,2,31,31,87,0,79,58,0,0,
0,0,0,0,7,8,133,2,32,32,115,0,79,0,0,0,0,0,0,0,10,8,134,2,32,32,100,0,79,64,
0,0,0,0,0,0,13,8,135,2,32,32,120,0,111,64,0,0,0,0,0,0,19,8,136,2,32,32,125,0,
117,58,0,0,0,0,0,0,27,8,137,2,33,33,105,0,97,85,0,0,0,0,0,0,34,8,138,2,29,33,
115,0,111,85,0,0,0,0,0,0,36,8,139,2,28,33,110,0,97,73,0,0,0,0,0,0,41,8,140,2,
29,31,120,0,101,73,0,0,0,0,0,0,45,8,141,2,30,31,105,0,79,73,0,0,0,0,0,0,47,8,
142,2,32,31,115,0,101,64,0,0,0,0,0,0,49,8,143,2,30,28,115,0,105,64,0,0,0,0,0,0,
52,8,144,2,31,28,125,0,105,64,51,0,0,0,0,0,55,8,145,2,31,28,125,0,85,64,0,0,0,0,
0,0,60,8,146,2,33,28,100,0,97,73,64,0,0,0,0,0,66,8,147,2,29,28,140,0,97,73,51,0,
0,0,0,0,69,8,148,2,29,28,140,0,97,85,64,0,0,0,0,0,71,8,149,2,29,28,140,0,73,82,
0,0,0,0,0,0,74,8,150,2,28,28,95,0,86,82,0,0,0,0,0,0,83,8,151,2,28,28,105,0,
111,58,0,0,0,0,0,0,92,8,152,2,32,32,110,0,65,126,0,0,0,0,0,0,94,8,153,2,29,29,
130,0,79,126,0,0,0,0,0,0,96,8,154,2,32,32,120,0,101,58,0,0,0,0,0,0,98,8,155,2,
30,30,105,0,64,35,0,0,2,0,0,0,100,8,156,2,31,31,65,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,33,4,0,0,0,0,0,0,101,110,45,110,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,97,0,0,0,0,0,0,0,111,8,35,2,29,29,
70,0,105,0,0,0,0,0,0,0,123,8,37,2,31,31,75,0,78,0,0,0,16,0,8,0,102,8,68,8,
0,0,0,8,73,50,0,0,2,0,0,0,120,8,113,2,31,31,70,0,51,0,0,0,2,0,0,0,106,8,
114,2,28,28,70,0,85,0,0,0,0,0,0,0,133,8,117,2,32,32,85,0,97,35,0,0,2,0,0,0,
135,8,119,2,28,28,70,0,97,97,0,0,0,0,0,0,149,8,120,2,29,29,75,0,65,58,0,0,0,0,
0,0,140,8,121,2,29,28,120,0,69,0,0,0,0,0,0,0,114,8,122,2,29,29,75,0,73,0,0,0,
0,0,0,0,117,8,124,2,31,31,65,0,48,0,0,0,0,0,0,0,125,8,126,2,32,32,75,0,86,0,
0,0,0,0,0,0,128,8,129,2,32,32,70,0,65,64,0,0,0,0,0,0,143,8,130,2,29,28,125,0,
51,58,0,0,0,0,0,0,153,8,131,2,28,28,115,0,105,58,0,0,0,0,0,0,157,8,132,2,31,31,
87,0,79,58,0,0,0,0,0,0,163,8,133,2,32,32,120,0,79,0,0,0,0,0,0,0,179,8,134,2,
32,32,75,0,79,64,0,0,0,0,0,0,167,8,135,2,32,28,120,0,111,64,0,0,0,0,0,0,173,8,
136,2,32,28,120,0,117,58,0,0,0,0,0,0,182,8,137,2,33,33,100,0,97,85,0,0,0,0,0,0,
184,8,138,2,30,33,115,0,111,85,0,0,0,0,0,0,189,8,139,2,32,32,110,0,97,73,0,0,0,0,
0,0,194,8,140,2,29,31,115,0,101,73,0,0,0,0,0,0,196,8,141,2,31,31,105,0,79,73,0,0,
0,0,0,0,201,8,142,2,32,31,115,0,101,64,0,0,0,0,0,0,203,8,143,2,30,28,110,0,105,64,
0,0,0,0,0,0,206,8,144,2,31,28,120,0,85,64,0,0,0,0,0,0,209,8,146,2,33,28,100,0,
97,73,64,0,0,0,0,0,212,8,147,2,29,28,140,0,97,73,51,0,0,0,0,0,215,8,148,2,29,28,
140,0,97,85,64,0,0,0,0,0,217,8,149,2,29,28,140,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,41,4,0,0,0,0,0,0,101,110,45,117,115,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,0,0,0,2,0,0,0,225,8,13,2,28,28,65,0,
63,0,0,0,72,0,12,0,193,9,19,4,0,0,0,1,97,0,0,0,0,0,0,0,236,8,35,2,30,28,
105,0,105,0,0,0,2,0,0,0,7,9,37,2,31,31,85,0,114,47,0,0,0,0,0,0,0,0,46,3,
0,0,0,2,116,0,0,0,8,0,4,0,156,9,47,4,0,72,0,2,116,50,0,0,8,0,4,0,245,4,
108,4,0,0,0,2,73,50,0,0,2,0,0,0,255,8,113,2,31,31,80,0,51,0,0,0,2,0,0,0,
220,8,114,2,28,28,105,0,64,50,0,0,2,0,0,0,232,8,115,2,28,28,60,0,85,0,0,0,0,0,
0,0,23,9,117,2,32,32,72,0,97,35,0,0,2,0,0,0,244,8,119,2,28,28,75,0,97,97,0,0,
0,0,0,0,236,8,120,2,30,28,105,0,65,58,0,0,0,0,0,0,25,9,121,2,29,29,100,0,69,0,
0,0,0,0,0,0,248,8,122,2,30,30,95,0,73,0,0,0,0,0,0,0,251,8,124,2,31,31,80,0,
73,35,0,0,2,0,0,0,2,9,125,2,31,31,80,0,48,0,0,0,0,0,0,0,10,9,126,2,29,29,
100,0,48,50,0,0,0,0,0,0,18,9,128,2,32,32,70,0,86,0,0,0,0,0,0,0,20,9,129,2,
29,28,85,0,65,64,0,0,0,0,0,0,30,9,130,2,29,29,90,0,51,58,0,0,0,0,0,0,43,9,
131,2,28,28,120,0,105,58,0,0,0,0,0,0,47,9,132,2,31,31,85,0,79,58,0,0,0,0,0,0,
50,9,133,2,32,32,100,0,79,0,0,0,0,0,0,0,79,9,134,2,32,32,100,0,79,64,0,0,0,0,
0,0,56,9,135,2,32,28,125,0,111,64,0,0,0,0,0,0,68,9,136,2,32,28,125,0,117,58,0,0,
0,0,0,0,82,9,137,2,33,33,95,0,97,85,0,0,0,0,0,0,84,9,138,2,29,32,117,0,111,85,
0,0,0,0,0,0,86,9,139,2,28,33,115,0,97,73,0,0,0,0,0,0,88,9,140,2,29,31,120,0,
101,73,0,0,0,0,0,0,93,9,141,2,30,31,110,0,79,73,0,0,0,0,0,0,95,9,142,2,32,31,
135,0,101,64,0,0,0,0,0,0,97,9,143,2,30,28,140,0,105,64,0,0,0,0,0,0,107,9,144,2,
31,28,125,0,105,64,51,0,0,0,0,0,109,9,145,2,31,28,140,0,85,64,0,0,0,0,0,0,119,9,
146,2,28,28,125,0,97,73,64,0,0,0,0,0,129,9,147,2,29,28,150,0,97,73,51,0,0,0,0,0,
136,9,148,2,29,28,155,0,97,85,64,0,0,0,0,0,143,9,149,2,29,28,150,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,42,4,0,0,0,0,0,0,101,110,45,115,99,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,0,0,0,2,0,0,0,203,9,
13,2,28,28,70,0,114,0,0,0,128,0,128,0,152,10,34,3,0,0,0,7,97,0,0,0,0,0,0,0,
223,9,35,2,29,29,100,0,105,0,0,0,0,0,0,0,0,10,37,2,31,30,75,0,114,47,0,0,0,0,
0,0,150,10,46,3,0,0,0,2,73,50,0,0,2,0,0,0,251,9,113,2,28,28,55,0,51,0,0,0,
2,0,0,0,206,9,114,2,28,28,70,0,64,50,0,0,2,0,0,0,214,9,115,2,28,28,60,0,64,53,
0,0,2,0,0,0,218,9,116,2,28,28,70,0,85,0,0,0,0,0,0,0,13,10,117,2,33,33,70,0,
64,76,0,0,2,0,0,0,143,10,118,2,28,55,80,0,97,35,0,0,2,0,0,0,230,9,119,2,28,28,
70,0,97,97,0,0,0,0,0,0,235,9,120,2,29,29,110,0,65,58,0,0,0,0,0,0,17,10,121,2,
29,29,110,0,69,0,0,0,0,0,0,0,240,9,122,2,30,30,85,0,73,0,0,0,0,0,0,0,243,9,
124,2,28,28,55,0,73,35,0,0,0,0,0,0,254,9,125,2,28,28,90,0,48,0,0,0,0,0,0,0,
5,10,126,2,32,32,100,0,48,50,0,0,0,0,0,0,8,10,128,2,32,32,70,0,86,0,0,0,0,0,
0,0,10,10,129,2,29,28,70,0,65,64,0,0,0,0,0,0,27,10,130,2,29,28,125,0,51,58,0,0,
0,0,0,0,35,10,131,2,30,28,115,0,105,58,0,0,0,0,0,0,40,10,132,2,31,31,65,0,79,58,
0,0,0,0,0,0,49,10,133,2,32,32,100,0,79,0,0,0,0,0,0,0,69,10,134,2,32,32,75,0,
79,64,0,0,0,0,0,0,55,10,135,2,32,28,115,0,111,64,0,0,0,0,0,0,62,10,136,2,32,28,
115,0,117,58,0,0,0,0,0,0,72,10,137,2,33,33,80,0,97,85,0,0,0,0,0,0,84,10,138,2,
29,33,100,0,111,85,0,0,0,0,0,0,89,10,139,2,32,33,95,0,97,73,0,0,0,0,0,0,94,10,
140,2,29,31,95,0,101,73,0,0,0,0,0,0,104,10,141,2,30,31,95,0,79,73,0,0,0,0,0,0,
109,10,142,2,32,31,105,0,101,64,0,0,0,0,0,0,111,10,143,2,30,28,110,0,105,64,51,0,0,0,
0,0,118,10,145,2,31,28,120,0,85,64,0,0,0,0,0,0,125,10,146,2,33,28,90,0,97,73,64,0,
0,0,0,0,138,10,147,2,29,28,135,0,97,73,51,0,0,0,0,0,141,10,148,2,29,28,140,0,97,85,
64,0,0,0,0,0,135,10,149,2,29,28,135,0,97,47,0,0,0,0,0,0,227,9,157,2,29,29,80,0,
97,73,50,0,0,0,0,0,102,10,158,2,29,31,120,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,34,4,0,0,0,0,0,0,101,110,45,114,112,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,64,0,0,0,2,0,0,0,159,10,13,2,28,28,70,0,97,0,
0,0,0,0,0,0,179,10,35,2,29,29,87,0,105,0,0,0,0,0,0,0,193,10,37,2,31,31,70,0,
73,50,0,0,2,0,0,0,190,10,113,2,31,31,65,0,51,0,0,0,2,0,0,0,165,10,114,2,28,28,
70,0,64,50,0,0,2,0,0,0,170,10,115,2,28,28,60,0,64,53,0,0,2,0,0,0,174,10,116,2,
28,28,70,0,85,0,0,0,0,0,0,0,202,10,117,2,32,32,75,0,97,35,0,0,2,0,0,0,204,10,
119,2,28,28,75,0,97,97,0,0,0,0,0,0,218,10,120,2,29,29,100,0,65,58,0,0,0,0,0,0,
209,10,121,2,29,29,120,0,69,0,0,0,0,0,0,0,184,10,122,2,30,30,70,0,73,0,0,0,0,0,
0,0,187,10,124,2,31,31,65,0,48,0,0,0,0,0,0,0,196,10,126,2,32,32,70,0,86,0,0,0,
0,0,0,0,199,10,129,2,29,28,70,0,65,64,0,0,0,0,0,0,212,10,130,2,29,29,120,0,51,58,
0,0,0,0,0,0,223,10,131,2,28,28,105,0,105,58,0,0,0,0,32,0,227,10,132,2,31,31,87,0,
79,58,0,0,0,0,0,0,233,10,133,2,32,32,115,0,79,0,0,0,0,0,0,0,243,10,134,2,32,32,
75,0,79,64,0,0,0,0,0,0,237,10,135,2,32,28,115,0,117,58,0,0,0,0,0,0,246,10,137,2,
33,33,95,0,97,85,0,0,0,0,0,0,248,10,138,2,29,33,115,0,111,85,0,0,0,0,0,0,250,10,
139,2,28,33,110,0,97,73,0,0,0,0,0,0,255,10,140,2,29,31,115,0,101,73,0,0,0,0,0,0,
4,11,141,2,31,31,110,0,79,73,0,0,0,0,0,0,6,11,142,2,32,31,115,0,101,64,0,0,0,0,
0,0,8,11,143,2,30,28,110,0,105,64,0,0,0,0,0,0,11,11,144,2,31,28,120,0,85,64,0,0,
0,0,0,0,14,11,146,2,33,28,115,0,97,73,64,0,0,0,0,0,20,11,147,2,29,28,135,0,97,73,
51,0,0,0,0,0,23,11,148,2,29,28,140,0,97,85,64,0,0,0,0,0,25,11,149,2,29,28,135,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,4,0,0,0,0,0,0,101,110,45,119,109,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,97,0,0,0,
0,0,0,0,32,11,35,2,29,29,80,0,105,0,0,0,0,0,0,0,45,11,37,2,31,31,110,0,78,0,
0,0,16,0,8,0,28,11,68,8,0,0,0,8,73,50,0,0,2,0,0,0,38,11,113,2,31,31,70,0,
85,0,0,0,0,0,0,0,58,11,117,2,33,33,75,0,97,35,0,0,2,0,0,0,61,11,119,2,28,28,
70,0,97,97,0,0,0,0,0,0,74,11,120,2,29,29,80,0,65,58,0,0,0,0,0,0,65,11,121,2,
29,29,120,0,69,0,0,0,0,0,0,0,35,11,122,2,30,30,75,0,73,0,0,0,0,0,0,0,38,11,
124,2,31,31,70,0,48,0,0,0,0,0,0,0,48,11,126,2,32,32,70,0,48,50,0,0,0,0,0,0,
51,11,128,2,32,32,70,0,86,0,0,0,0,0,0,0,53,11,129,2,32,32,70,0,65,64,0,0,0,0,
0,0,68,11,130,2,29,29,120,0,51,58,0,0,0,0,0,0,78,11,131,2,28,28,125,0,105,58,0,0,
0,0,0,0,82,11,132,2,30,31,110,0,79,58,0,0,0,0,0,0,87,11,133,2,32,32,120,0,79,0,
0,0,0,0,0,0,97,11,134,2,32,32,75,0,79,64,0,0,0,0,0,0,91,11,135,2,32,28,120,0,
117,58,0,0,0,0,0,0,100,11,137,2,33,33,100,0,97,85,0,0,0,0,0,0,105,11,138,2,29,33,
115,0,111,85,0,0,0,0,0,0,110,11,139,2,28,33,110,0,97,73,0,0,0,0,0,0,115,11,140,2,
32,31,120,0,101,73,0,0,0,0,0,0,120,11,141,2,28,31,120,0,79,73,0,0,0,0,0,0,125,11,
142,2,32,31,115,0,101,64,0,0,0,0,0,0,130,11,143,2,28,28,120,0,105,64,0,0,0,0,0,0,
136,11,144,2,31,28,120,0,85,64,0,0,0,0,0,0,139,11,146,2,33,28,100,0,97,73,64,0,0,0,
0,0,142,11,147,2,29,28,140,0,97,73,51,0,0,0,0,0,145,11,148,2,29,28,140,0,97,85,64,0,
0,0,0,0,147,11,149,2,29,28,140,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,30,4,
0,0,0,0,0,0,101,110,45,119,105,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,64,0,0,0,2,0,0,0,150,11,13,2,28,28,70,0,97,0,0,0,0,0,
0,0,157,11,35,2,29,29,80,0,105,0,0,0,0,0,0,0,168,11,37,2,31,31,75,0,108,0,0,0,
0,0,0,0,206,0,55,3,0,0,0,7,73,50,0,0,2,0,0,0,165,11,113,2,31,31,70,0,64,50,
0,0,2,0,0,0,153,11,115,2,28,28,60,0,85,0,0,0,0,0,0,0,175,11,117,2,32,32,75,0,
97,35,0,0,2,0,0,0,177,11,119,2,28,28,70,0,97,97,0,0,0,0,0,0,184,11,120,2,29,29,
105,0,65,58,0,0,0,0,0,0,179,11,121,2,29,28,120,0,69,0,0,0,0,0,0,0,159,11,122,2,
30,30,85,0,73,0,0,0,0,0,0,0,162,11,124,2,31,31,70,0,48,0,0,0,0,0,0,0,171,11,
126,2,29,29,70,0,86,0,0,0,0,0,0,0,173,11,129,2,32,32,70,0,65,64,0,0,0,0,0,0,
181,11,130,2,29,28,130,0,51,58,0,0,0,0,0,0,186,11,131,2,32,32,120,0,105,58,0,0,0,0,
0,0,189,11,132,2,31,31,95,0,79,58,0,0,0,0,0,0,192,11,133,2,32,32,120,0,79,0,0,0,
0,0,0,0,200,11,134,2,32,32,75,0,79,64,0,0,0,0,0,0,194,11,135,2,32,28,120,0,111,64,
0,0,0,0,0,0,197,11,136,2,32,28,120,0,117,58,0,0,0,0,0,0,202,11,137,2,33,33,95,0,
97,85,0,0,0,0,0,0,204,11,138,2,29,33,115,0,111,85,0,0,0,0,0,0,206,11,139,2,32,32,
115,0,97,73,0,0,0,0,0,0,208,11,140,2,29,31,115,0,101,73,0,0,0,0,0,0,210,11,141,2,
31,31,105,0,79,73,0,0,0,0,0,0,212,11,142,2,32,31,115,0,101,64,0,0,0,0,0,0,214,11,
143,2,30,28,110,0,105,64,0,0,0,0,0,0,217,11,144,2,31,29,120,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,39,1,0,0,0,0,0,0,97,102,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,58,0,0,0,0,0,0,0,0,0,12,9,
0,0,70,0,64,0,0,0,2,0,0,0,220,11,13,2,28,28,70,0,114,0,0,0,128,0,128,0,81,12,
34,3,0,0,0,6,97,0,0,0,0,0,0,0,227,11,35,2,29,29,70,0,105,0,0,0,0,0,0,0,
14,12,37,2,31,31,50,0,117,0,0,0,0,0,0,0,246,11,40,2,33,33,55,0,114,47,0,0,0,0,
0,0,109,12,46,3,0,0,0,7,108,0,0,0,0,0,0,0,91,7,55,3,0,0,0,7,99,0,0,0,
8,2,7,0,118,12,80,4,0,81,0,2,69,0,0,0,0,0,0,0,231,11,108,2,30,30,70,0,73,0,
0,0,0,0,0,0,233,11,109,2,28,28,70,0,79,0,0,0,0,0,0,0,242,11,110,2,32,32,70,0,
87,0,0,0,0,0,0,0,244,11,111,2,28,28,70,0,38,0,0,0,0,0,0,0,248,11,112,2,30,30,
75,0,38,58,0,0,0,0,0,0,253,11,113,2,30,30,140,0,64,76,0,0,2,0,0,0,2,12,114,2,
28,55,80,0,65,58,0,0,0,0,0,0,7,12,115,2,29,29,140,0,101,64,0,0,0,0,0,0,9,12,
116,2,31,28,115,0,111,64,0,0,0,0,0,0,17,12,117,2,33,28,125,0,121,0,0,0,0,0,0,0,
22,12,118,2,31,31,90,0,105,117,0,0,0,0,0,0,24,12,119,2,31,33,110,0,64,85,0,0,0,0,
0,0,26,12,120,2,28,33,85,0,97,73,0,0,0,0,0,0,28,12,121,2,29,31,110,0,65,73,0,0,
0,0,0,0,31,12,122,2,29,31,155,0,101,73,0,0,0,0,0,0,34,12,123,2,30,31,85,0,79,73,
0,0,0,0,0,0,40,12,124,2,32,31,115,0,111,73,0,0,0,0,0,0,43,12,125,2,32,31,145,0,
117,73,0,0,0,0,0,0,49,12,126,2,33,31,120,0,89,121,0,0,0,0,0,0,52,12,127,2,28,31,
110,0,89,64,0,0,0,0,0,0,55,12,128,2,31,28,105,0,97,85,0,0,0,0,0,0,57,12,129,2,
29,33,115,0,101,58,0,0,0,0,0,0,59,12,130,2,30,30,105,0,79,58,0,0,0,0,0,0,61,12,
131,2,32,32,140,0,51,58,0,0,0,0,0,0,63,12,132,2,28,28,115,0,65,126,0,0,0,0,0,0,
65,12,133,2,29,29,120,0,101,126,0,0,0,0,0,0,67,12,134,2,30,30,120,0,111,126,0,0,0,0,
0,0,69,12,135,2,32,32,120,0,120,50,0,0,8,0,8,0,71,12,136,6,0,0,0,3,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,29,1,0,0,0,0,0,0,99,121,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,114,0,0,0,128,0,0,0,
209,12,34,3,0,0,0,6,97,0,0,0,0,0,0,0,128,12,35,2,29,29,75,0,103,0,0,0,16,0,
8,0,221,12,81,5,0,49,0,5,69,0,0,0,0,0,0,0,130,12,108,2,30,30,75,0,73,0,0,0,
0,0,0,0,132,12,109,2,31,31,75,0,89,0,0,0,0,0,0,0,136,12,110,2,31,31,75,0,79,0,
0,0,0,0,0,0,138,12,111,2,32,32,75,0,85,0,0,0,0,0,0,0,140,12,112,2,33,33,75,0,
86,0,0,0,0,0,0,0,142,12,113,2,28,28,75,0,105,58,0,0,0,0,0,0,144,12,114,2,31,31,
90,0,121,58,0,0,0,0,0,0,147,12,115,2,31,31,90,0,117,58,0,0,0,0,0,0,153,12,116,2,
33,33,95,0,101,58,0,0,0,0,0,0,156,12,117,2,30,30,105,0,111,58,0,0,0,0,0,0,159,12,
118,2,32,32,105,0,65,58,0,0,0,0,0,0,162,12,119,2,29,29,115,0,65,89,0,0,0,0,0,0,
165,12,120,2,29,31,125,0,97,73,0,0,0,0,0,0,170,12,121,2,29,31,105,0,97,89,0,0,0,0,
0,0,172,12,122,2,29,31,105,0,97,85,0,0,0,0,0,0,177,12,123,2,29,33,105,0,64,73,0,0,
0,0,0,0,179,12,124,2,28,31,105,0,64,89,0,0,0,0,0,0,181,12,125,2,28,31,105,0,101,85,
0,0,0,0,0,0,186,12,126,2,30,33,105,0,73,117,0,0,0,0,0,0,188,12,127,2,31,33,105,0,
89,117,0,0,0,0,0,0,190,12,128,2,31,33,105,0,79,73,0,0,0,0,0,0,195,12,129,2,32,31,
105,0,79,89,0,0,0,0,0,0,197,12,130,2,32,31,105,0,117,73,0,0,0,0,0,0,202,12,131,2,
33,31,105,0,117,89,0,0,0,0,0,0,204,12,132,2,33,31,105,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,30,1,0,0,0,0,0,0,103,97,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,0,0,0,2,0,0,0,242,12,13,2,28,28,
55,0,97,0,0,0,0,0,0,0,10,13,35,2,29,29,82,0,105,0,0,0,2,0,0,0,24,13,37,2,
31,31,22,0,59,0,0,0,0,2,0,0,77,13,38,3,0,0,0,0,105,58,0,0,0,0,0,0,57,13,
108,2,31,31,115,0,73,0,0,0,0,0,0,0,22,13,109,2,31,31,65,0,101,58,0,0,0,0,0,0,
55,13,110,2,30,30,115,0,64,47,0,0,0,0,0,0,8,13,111,2,28,28,65,0,97,35,0,0,0,0,
0,0,12,13,112,2,28,28,65,0,69,0,0,0,0,0,0,0,17,13,113,2,30,30,77,0,69,35,0,0,
0,0,0,0,19,13,114,2,28,28,65,0,79,0,0,0,0,0,0,0,29,13,115,2,29,28,77,0,79,35,
0,0,0,0,0,0,31,13,116,2,28,28,65,0,85,0,0,0,0,0,0,0,34,13,117,2,33,33,77,0,
85,35,0,0,0,0,0,0,36,13,118,2,28,28,65,0,117,49,0,0,0,0,0,0,39,13,119,2,33,33,
27,0,48,0,0,0,0,0,0,0,44,13,120,2,29,29,97,0,48,35,0,0,0,0,0,0,48,13,121,2,
28,28,65,0,111,58,0,0,0,0,0,0,51,13,122,2,32,32,105,0,65,58,0,0,0,0,0,0,53,13,
123,2,29,29,110,0,117,58,0,0,0,0,0,0,59,13,124,2,33,33,115,0,64,85,0,0,0,0,0,0,
61,13,125,2,28,33,130,0,105,64,0,0,0,0,0,0,63,13,126,2,31,28,130,0,117,64,0,0,0,0,
0,0,65,13,127,2,33,28,130,0,97,73,0,0,0,0,0,0,67,13,128,2,29,31,137,0,97,73,35,0,
0,0,0,0,69,13,129,2,28,28,65,0,97,85,0,0,0,0,0,0,72,13,130,2,29,33,150,0,97,85,
35,0,0,0,0,0,74,13,131,2,28,28,65,0,101,73,0,0,0,0,0,0,45,8,132,2,30,31,105,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,1,0,0,48,236,3,0,100,101,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,0,0,0,
2,0,0,0,100,13,13,2,28,28,60,0,114,0,0,0,16,0,132,0,248,13,34,5,0,0,0,6,97,0,
0,0,0,0,0,0,112,13,35,2,29,29,55,0,108,47,0,0,0,0,0,0,202,13,56,3,0,0,0,7,
106,0,0,0,0,2,0,0,219,13,57,3,0,0,0,7,98,0,0,0,48,0,4,0,24,14,71,7,0,48,
0,0,100,0,0,0,16,0,4,0,29,14,72,5,0,47,0,0,103,0,0,0,16,0,8,0,34,14,81,5,
0,49,0,0,51,0,0,0,2,0,0,16,108,13,108,2,28,28,80,0,69,0,0,0,0,0,0,0,116,13,
109,2,30,30,60,0,69,50,0,0,0,0,0,0,120,13,110,2,30,30,60,0,73,0,0,0,0,0,0,0,
125,13,111,2,31,31,60,0,73,58,0,0,0,0,0,0,130,13,112,2,31,31,95,0,79,0,0,0,0,0,
0,0,132,13,113,2,32,32,60,0,85,0,0,0,0,0,0,0,136,13,114,2,33,33,60,0,85,82,0,0,
0,0,0,16,15,14,115,2,33,28,90,0,65,58,0,0,0,0,0,0,143,13,116,2,29,29,125,0,65,0,
0,0,0,0,0,0,145,13,117,2,29,29,125,0,105,58,0,0,0,0,0,0,148,13,118,2,31,31,90,0,
105,50,0,0,0,0,0,0,153,13,119,2,31,31,90,0,117,58,0,0,0,0,0,0,159,13,120,2,33,33,
95,0,97,85,0,0,0,0,0,0,161,13,121,2,29,33,110,0,97,73,0,0,0,0,0,0,163,13,122,2,
29,31,105,0,69,73,0,0,0,0,0,0,165,13,123,2,30,31,105,0,79,89,0,0,0,0,0,0,167,13,
124,2,32,31,110,0,69,58,0,0,0,0,0,0,169,13,125,2,30,30,100,0,101,58,0,0,0,0,0,0,
171,13,126,2,30,30,100,0,111,58,0,0,0,0,0,0,173,13,127,2,32,32,105,0,121,58,0,0,0,0,
0,0,175,13,128,2,33,33,100,0,121,0,0,0,0,0,0,0,177,13,129,2,33,33,55,0,89,58,0,0,
0,0,0,0,183,13,130,2,28,28,90,0,87,0,0,0,0,0,0,0,185,13,131,2,28,28,75,0,116,115,
0,0,40,0,4,0,21,6,132,4,0,0,0,2,112,70,0,0,8,0,1,0,189,13,133,4,0,0,0,2,
103,35,0,0,8,2,7,0,197,13,134,6,0,0,0,3,105,82,0,0,0,0,0,16,10,14,135,2,31,28,
120,0,111,85,0,0,0,0,0,0,86,9,136,2,28,33,115,0,65,126,0,0,0,0,0,0,20,14,137,2,
29,29,130,0,108,50,0,0,0,0,0,0,22,14,138,3,0,0,0,7,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,13,1,0,0,0,0,0,0,101,111,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,97,0,0,0,0,0,0,0,39,14,35,2,29,29,
90,0,101,0,0,0,0,0,0,0,41,14,36,2,30,30,85,0,105,0,0,0,0,0,0,0,43,14,37,2,
31,31,85,0,111,0,0,0,0,0,0,0,46,14,39,2,32,32,85,0,117,0,0,0,0,0,0,0,51,14,
40,2,33,33,85,0,97,85,0,0,0,0,0,0,53,14,108,2,29,33,125,0,101,85,0,0,0,0,0,0,
55,14,109,2,30,33,125,0,97,73,0,0,0,0,0,0,57,14,110,2,29,31,125,0,101,73,0,0,0,0,
0,0,59,14,111,2,30,31,125,0,111,73,0,0,0,0,0,0,61,14,112,2,32,31,125,0,117,73,0,0,
0,0,0,0,63,14,113,2,33,31,125,0,116,115,0,0,40,0,4,0,21,6,114,4,0,0,0,2,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,15,0,0,0,0,0,0,106,98,111,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,101,0,0,0,0,0,
0,0,65,14,36,2,30,30,85,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,0,0,
0,0,0,0,110,99,105,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,58,0,0,0,0,0,0,0,0,0,12,9,0,0,150,0,101,0,0,0,0,0,0,0,
67,14,36,2,30,30,85,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,41,1,0,0,0,0,
0,0,102,105,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,58,0,0,0,0,0,0,0,0,0,12,9,0,0,80,0,114,0,0,0,128,0,0,0,119,0,
34,3,0,0,0,6,97,0,0,0,0,0,0,0,80,14,35,2,29,29,85,0,101,0,0,0,0,0,0,0,
76,14,36,2,30,30,75,0,105,0,0,0,0,0,0,0,69,14,37,2,31,31,70,0,111,0,0,0,0,0,
0,0,84,14,39,2,32,32,77,0,117,0,0,0,0,0,0,0,88,14,40,2,33,33,70,0,116,0,0,0,
8,0,3,0,10,5,47,4,0,72,0,2,112,0,0,0,8,0,1,0,226,6,48,4,0,71,0,2,107,0,
0,0,8,0,8,0,29,7,49,4,0,81,0,2,82,50,0,0,128,0,0,0,132,14,52,3,0,0,0,6,
100,0,0,0,16,0,3,0,159,14,72,5,0,47,0,5,118,0,0,0,16,0,2,0,146,14,84,7,0,83,
0,6,104,0,0,0,8,0,12,0,186,14,107,6,0,0,0,3,73,0,0,0,0,0,0,0,73,14,108,2,
31,31,70,0,38,0,0,0,0,0,0,0,78,14,109,2,29,29,75,0,97,50,0,0,0,0,0,0,82,14,
110,2,29,29,85,0,89,0,0,0,0,0,0,0,86,14,111,2,28,28,77,0,117,49,0,0,0,0,0,0,
90,14,112,2,33,33,70,0,85,0,0,0,0,0,0,0,92,14,113,2,33,33,70,0,121,0,0,0,0,0,
0,0,94,14,114,2,33,33,75,0,97,105,0,0,0,0,32,0,96,14,115,2,29,31,155,0,38,105,0,0,
0,0,32,0,98,14,116,2,29,31,145,0,111,105,0,0,0,0,32,0,100,14,117,2,32,31,140,0,101,105,
0,0,0,0,32,0,102,14,118,2,30,31,140,0,89,105,0,0,0,0,32,0,104,14,119,2,28,31,135,0,
117,105,0,0,0,0,32,0,106,14,120,2,33,31,135,0,121,105,0,0,0,0,32,0,108,14,121,2,33,31,
135,0,97,117,0,0,0,0,32,0,110,14,122,2,29,33,150,0,111,117,0,0,0,0,32,0,112,14,123,2,
32,33,140,0,101,117,0,0,0,0,32,0,114,14,124,2,30,33,140,0,105,117,0,0,0,0,32,0,116,14,
125,2,31,33,140,0,38,121,0,0,0,0,32,0,118,14,126,2,29,33,140,0,101,121,0,0,0,0,32,0,
120,14,127,2,30,33,140,0,89,121,0,0,0,0,32,0,122,14,128,2,28,33,135,0,105,121,0,0,0,0,
32,0,124,14,129,2,31,33,130,0,117,111,0,0,0,0,32,0,126,14,130,2,33,32,140,0,105,101,0,0,
0,0,32,0,128,14,131,2,31,30,140,0,121,89,0,0,0,0,32,0,130,14,132,2,33,28,140,0,115,50,
0,0,40,0,4,0,167,6,133,6,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
40,1,0,0,0,0,0,0,101,116,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,58,0,0,0,0,0,0,0,0,0,12,9,0,0,80,0,114,0,0,0,
0,0,0,0,57,15,34,3,0,0,0,2,97,0,0,0,0,0,0,0,206,14,35,2,29,29,85,0,101,0,
0,0,0,0,0,0,212,14,36,2,30,30,80,0,105,0,0,0,0,0,0,0,218,14,37,2,31,31,70,0,
111,0,0,0,0,0,0,0,226,14,39,2,32,32,80,0,117,0,0,0,0,0,0,0,232,14,40,2,33,33,
72,0,116,0,0,0,8,0,67,0,17,15,47,4,0,72,0,5,112,0,0,0,8,0,1,0,226,6,48,4,
0,71,0,2,107,0,0,0,8,0,8,0,67,15,49,4,0,81,0,5,100,0,0,0,16,0,3,0,30,15,
72,5,0,47,0,5,118,0,0,0,16,0,2,0,4,15,84,7,0,83,0,6,104,0,0,0,8,0,12,0,
93,15,107,6,0,0,0,3,97,58,0,0,0,0,0,0,208,14,108,2,29,29,170,0,65,49,0,0,0,0,
0,0,210,14,109,2,29,29,127,0,101,58,0,0,0,0,0,0,214,14,110,2,30,30,160,0,69,49,0,0,
0,0,0,0,216,14,111,2,30,30,120,0,105,58,0,0,0,0,0,0,220,14,112,2,31,31,140,0,73,49,
0,0,0,0,0,0,222,14,113,2,31,31,105,0,105,49,0,0,0,0,0,0,224,14,114,2,31,31,15,0,
111,58,0,0,0,0,0,0,228,14,115,2,32,32,160,0,79,49,0,0,0,0,0,0,230,14,116,2,32,32,
112,0,117,58,0,0,0,0,0,0,234,14,117,2,33,33,145,0,85,49,0,0,0,0,0,0,236,14,118,2,
33,33,109,0,56,0,0,0,0,0,0,0,238,14,119,2,28,28,82,0,56,58,0,0,0,0,0,0,240,14,
120,2,28,28,165,0,38,0,0,0,0,0,0,0,242,14,121,2,29,29,87,0,38,58,0,0,0,0,0,0,
244,14,122,2,29,29,175,0,89,0,0,0,0,0,0,0,246,14,123,2,28,28,82,0,89,58,0,0,0,0,
0,0,248,14,124,2,28,28,165,0,121,0,0,0,0,0,0,0,250,14,125,2,33,33,72,0,121,58,0,0,
0,0,0,0,252,14,126,2,33,33,145,0,38,105,0,0,0,0,32,0,254,14,127,2,29,31,157,0,89,105,
0,0,0,0,32,0,0,15,128,2,28,31,152,0,121,105,0,0,0,0,32,0,2,15,129,2,33,31,142,0,
115,50,0,0,40,0,4,0,167,6,130,6,0,0,0,3,115,94,0,0,40,2,4,0,113,15,131,6,0,88,
0,3,116,94,0,0,8,2,7,0,123,15,132,4,0,133,0,5,100,94,0,0,16,2,4,0,136,15,133,5,
0,132,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,1,0,0,104,82,4,0,102,114,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
58,0,0,0,0,0,0,0,0,0,12,9,0,0,20,0,64,0,0,0,0,0,0,0,173,16,13,2,28,28,
85,0,64,45,0,0,2,0,0,0,175,16,14,2,28,28,65,0,114,0,0,0,16,0,138,1,250,15,34,7,
109,0,0,7,97,0,0,0,0,0,0,0,177,16,35,2,29,29,90,0,101,0,0,0,0,0,0,0,185,16,
36,2,30,30,90,0,105,0,0,0,0,2,0,0,205,16,37,2,31,31,90,0,111,0,0,0,0,0,0,0,
244,16,39,2,32,32,90,0,117,0,0,0,0,0,0,0,11,17,40,2,33,33,90,0,114,47,0,0,16,0,
138,0,19,16,46,7,109,0,0,7,116,0,0,0,8,0,4,0,110,18,47,4,110,72,0,2,112,0,0,0,
8,0,1,0,41,18,48,4,110,71,0,2,107,0,0,0,8,0,8,0,227,17,49,4,110,81,25,2,110,0,
0,0,16,0,4,0,252,17,50,8,0,0,0,4,108,0,0,0,0,0,0,0,86,16,55,3,108,0,0,7,
108,47,0,0,0,0,5,0,127,16,56,3,108,0,0,7,119,0,0,0,0,0,0,0,37,17,58,2,33,33,
90,0,108,47,50,0,0,0,0,0,153,16,59,3,108,0,0,0,98,0,0,0,16,0,1,0,102,17,71,5,
110,48,0,6,100,0,0,0,16,0,4,0,154,17,72,5,110,47,0,5,103,0,0,0,16,0,8,0,195,17,
81,5,110,49,0,5,102,0,0,0,8,0,2,0,186,17,83,6,110,84,0,3,118,0,0,0,16,0,2,0,
151,18,84,7,110,83,45,6,122,0,0,0,48,0,4,0,184,18,88,7,0,89,0,6,115,0,0,0,40,0,
4,0,77,18,89,6,0,88,0,3,83,0,0,0,40,0,6,0,95,18,91,6,110,90,0,3,35,108,0,0,
0,0,0,0,0,0,108,9,0,0,0,0,35,114,0,0,0,0,0,0,0,0,109,9,0,0,0,0,35,99,
70,82,0,0,0,0,0,0,110,9,0,0,0,0,121,0,0,0,0,0,0,0,20,17,111,2,33,33,90,0,
69,0,0,0,0,0,0,0,197,16,112,2,30,30,90,0,65,126,0,0,0,0,0,0,91,17,113,2,29,29,
95,0,69,126,0,0,0,0,0,0,93,17,114,2,30,30,95,0,87,126,0,0,0,0,0,0,100,17,115,2,
28,28,95,0,79,126,0,0,0,0,0,0,98,17,116,2,32,32,95,0,87,0,0,0,0,0,0,0,31,17,
117,2,28,28,90,0,106,47,0,0,0,0,0,0,229,16,118,2,31,31,40,0,114,47,50,0,0,0,138,1,
63,16,119,3,109,0,0,0,114,50,0,0,16,0,138,0,12,16,120,7,109,0,0,0,97,45,0,0,2,0,
0,0,183,16,121,2,29,29,65,0,97,35,0,0,2,0,0,0,185,7,122,2,28,28,75,0,101,45,0,0,
2,0,0,0,195,16,123,2,30,30,65,0,69,45,0,0,2,0,0,0,203,16,124,2,30,30,65,0,73,0,
0,0,0,0,0,0,207,7,125,2,31,31,65,0,73,50,0,0,2,0,0,0,210,7,126,2,31,31,65,0,
79,0,0,0,0,0,0,0,254,16,127,2,32,32,85,0,111,85,0,0,0,0,0,0,36,8,128,2,28,33,
110,0,117,58,0,0,0,0,0,0,18,17,129,2,33,33,120,0,121,45,0,0,2,0,0,0,29,17,130,2,
33,33,65,0,87,50,0,0,2,0,0,0,33,17,131,2,28,28,50,0,89,0,0,0,0,0,0,0,35,17,
132,2,28,28,85,0,119,47,0,0,0,0,0,0,56,17,133,3,0,0,0,7,110,50,0,0,16,0,4,0,
35,18,134,8,0,0,0,0,85,0,0,0,0,0,0,0,11,17,135,2,33,33,90,0,121,34,0,0,0,0,
0,0,20,17,136,2,33,33,90,0,69,58,0,0,0,0,0,0,197,16,137,2,30,30,90,0,65,0,0,0,
0,0,0,0,177,16,138,2,29,29,90,0,112,50,0,0,8,0,1,0,65,18,139,4,0,0,0,2,116,50,
0,0,8,0,4,0,128,18,140,4,0,0,0,2,116,51,0,0,8,0,4,0,143,18,141,4,0,0,0,2,
86,0,0,0,0,0,0,0,181,18,142,2,29,28,70,0,122,50,0,0,48,0,4,0,204,18,143,7,0,0,
0,0,122,51,0,0,48,0,4,0,215,18,144,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,11,20,0,0,0,0,0,0,102,114,45,99,97,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,58,0,0,0,0,0,0,0,0,0,12,9,0,0,35,0,
117,0,0,0,0,0,0,0,226,18,40,2,33,33,87,0,82,0,0,0,128,0,0,0,241,18,51,3,0,0,
0,7,69,0,0,0,0,0,0,0,224,18,112,2,30,30,82,0,69,126,0,0,0,0,0,0,228,18,114,2,
30,30,96,0,73,0,0,0,0,0,0,0,230,18,125,2,31,31,79,0,85,0,0,0,0,0,0,0,233,18,
135,2,33,33,75,0,121,34,0,0,0,0,0,0,235,18,136,2,33,33,70,0,69,58,0,0,0,0,0,0,
237,18,137,2,28,30,115,0,65,0,0,0,0,0,0,0,239,18,138,2,29,29,83,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,37,1,0,0,0,0,0,0,110,108,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,0,0,0,2,0,0,0,251,18,
13,2,28,28,62,0,114,0,0,0,128,0,0,0,136,0,34,3,0,0,0,6,97,0,0,0,0,0,0,0,
26,19,35,2,29,29,75,0,105,0,0,0,0,0,0,0,253,18,37,2,31,31,65,0,117,0,0,0,0,0,
0,0,5,19,40,2,33,33,75,0,116,0,0,0,8,0,4,0,81,19,47,4,0,72,0,2,112,0,0,0,
8,0,1,0,101,19,48,4,0,71,0,2,107,0,0,0,8,0,8,0,116,6,49,4,0,0,0,2,108,0,
0,0,0,0,0,0,91,7,55,3,0,0,0,7,98,0,0,0,16,0,1,0,110,19,71,5,0,48,0,5,
100,0,0,0,16,0,4,0,90,19,72,5,0,47,0,5,122,0,0,0,48,0,4,0,130,19,88,7,0,89,
0,6,115,0,0,0,40,0,4,0,121,19,89,6,0,88,0,3,81,0,0,0,16,0,8,0,54,19,100,7,
0,101,0,6,73,0,0,0,0,0,0,0,255,18,108,2,31,31,65,0,121,0,0,0,0,0,0,0,1,19,
109,2,33,33,90,0,56,0,0,0,0,0,0,0,3,19,110,2,33,33,70,0,69,0,0,0,0,0,0,0,
7,19,111,2,30,30,70,0,69,50,0,0,0,0,0,0,9,19,112,2,30,30,70,0,79,0,0,0,0,0,
0,0,12,19,113,2,32,32,70,0,79,58,0,0,0,0,0,0,14,19,114,2,32,32,105,0,97,58,0,0,
0,0,0,0,16,19,115,2,29,29,105,0,65,0,0,0,0,0,0,0,28,19,116,2,29,29,75,0,65,126,
0,0,0,0,0,0,91,17,117,2,29,29,95,0,79,126,0,0,0,0,0,0,33,19,118,2,32,32,95,0,
101,58,0,0,0,0,0,0,35,19,119,2,30,31,95,0,101,35,0,0,0,0,0,0,37,19,120,2,30,31,
95,0,89,58,0,0,0,0,0,0,40,19,121,2,28,28,110,0,111,58,0,0,0,0,0,0,42,19,122,2,
32,33,75,0,69,73,0,0,0,0,0,0,44,19,123,2,29,31,105,0,87,121,0,0,0,0,0,0,46,19,
124,2,28,33,110,0,86,85,0,0,0,0,0,0,48,19,125,2,29,32,110,0,101,85,0,0,0,0,0,0,
50,19,126,2,30,33,110,0,121,85,0,0,0,0,0,0,52,19,127,2,33,33,110,0,33,0,0,0,0,0,
0,0,78,19,128,0,10,0,12,1,120,50,0,0,8,0,8,0,71,12,129,6,0,0,0,3,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,58,1,0,0,0,0,0,0,104,105,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,58,0,0,0,0,0,0,0,
0,0,12,9,0,0,50,0,64,0,0,0,0,0,0,16,141,19,13,2,28,28,65,0,116,35,0,0,8,0,
3,0,26,20,25,4,0,72,0,2,114,0,0,0,0,0,128,0,175,20,34,3,0,0,0,3,97,0,0,0,
0,0,32,0,229,19,35,2,29,29,70,0,101,0,0,0,0,0,0,0,216,19,36,2,30,30,70,0,105,0,
0,0,0,0,0,0,208,19,37,2,31,31,115,0,111,0,0,0,0,0,0,0,233,19,39,2,32,32,70,0,
116,0,0,0,8,0,3,0,10,5,47,4,0,72,0,2,112,0,0,0,8,0,1,0,55,6,48,4,0,0,
0,2,107,0,0,0,8,0,8,0,116,6,49,4,0,81,0,2,98,0,0,0,16,0,1,0,196,2,71,5,
0,0,0,5,100,0,0,0,16,0,3,0,36,3,72,5,0,47,0,5,74,0,0,0,48,2,7,0,120,3,
79,5,0,0,0,5,99,0,0,0,40,0,6,0,122,20,80,4,0,75,0,2,103,0,0,0,16,0,8,0,
153,3,81,5,0,49,0,5,118,0,0,0,16,0,2,0,241,3,84,7,0,83,0,6,72,0,0,0,8,0,
12,0,255,5,108,6,0,0,0,3,86,0,0,0,0,0,0,16,151,19,109,2,28,28,70,0,64,51,0,0,
0,0,0,16,200,19,110,2,28,28,65,0,64,50,0,0,0,0,0,16,198,19,111,2,28,28,65,0,105,58,
0,0,0,0,32,0,203,19,112,2,31,31,115,0,73,0,0,0,0,0,0,0,211,19,113,2,31,31,50,0,
101,58,0,0,0,0,32,0,214,19,114,2,30,30,110,0,69,58,0,0,0,0,32,0,218,19,115,2,30,30,
110,0,69,0,0,0,0,0,0,0,220,19,116,2,30,30,70,0,38,58,0,0,0,0,32,0,222,19,117,2,
29,29,110,0,97,58,0,0,0,0,32,0,224,19,118,2,29,29,100,0,111,58,0,0,0,0,32,0,231,19,
119,2,32,32,113,0,79,58,0,0,0,0,32,0,235,19,120,2,32,32,105,0,79,0,0,0,0,0,0,0,
237,19,121,2,32,32,70,0,85,0,0,0,0,0,0,0,239,19,122,2,33,33,70,0,117,58,0,0,0,0,
32,0,241,19,123,2,33,33,115,0,105,126,0,0,0,0,32,0,243,19,124,2,31,31,110,0,73,126,0,0,
0,0,32,0,245,19,125,2,31,31,85,0,101,126,0,0,0,0,32,0,247,19,126,2,30,30,110,0,69,126,
0,0,0,0,32,0,249,19,127,2,30,30,110,0,97,126,0,0,0,0,32,0,251,19,128,2,29,29,110,0,
86,126,0,0,0,0,32,0,253,19,129,2,28,28,110,0,79,126,0,0,0,0,32,0,255,19,130,2,32,32,
110,0,111,126,0,0,0,0,32,0,1,20,131,2,32,32,110,0,85,126,0,0,0,0,0,0,3,20,132,2,
33,33,85,0,117,126,0,0,0,0,32,0,5,20,133,2,33,33,110,0,97,73,0,0,0,0,32,0,7,20,
134,2,28,31,120,0,97,85,0,0,0,0,32,0,9,20,135,2,29,33,120,0,112,35,0,0,8,0,1,0,
74,6,136,4,0,0,0,2,98,35,0,0,16,0,1,0,11,20,137,5,0,136,0,5,100,35,0,0,16,0,
3,0,39,20,138,5,0,25,0,5,116,46,0,0,8,0,5,0,54,20,139,4,0,140,0,2,100,46,0,0,
16,0,5,0,81,20,140,5,0,139,0,5,116,46,35,0,8,0,5,0,66,20,141,4,0,142,0,2,100,46,
35,0,16,0,5,0,104,20,142,5,0,141,0,5,99,35,0,0,40,2,7,0,131,20,143,4,0,77,0,2,
74,35,0,0,48,0,7,0,137,20,144,5,0,143,0,5,107,35,0,0,8,0,8,0,145,6,145,4,0,146,
0,2,103,35,0,0,16,0,3,0,152,20,146,5,0,145,0,5,35,88,50,0,40,0,4,0,173,20,147,6,
0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,23,0,0,0,0,0,0,98,110,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
97,0,0,0,0,0,0,0,216,20,35,2,29,29,112,0,101,0,0,0,0,0,0,0,226,20,36,2,30,30,
105,0,105,0,0,0,0,0,0,0,222,20,37,2,31,31,105,0,111,0,0,0,0,0,0,0,230,20,39,2,
32,32,105,0,117,0,0,0,0,0,0,0,224,20,40,2,33,33,105,0,116,83,0,0,40,0,6,0,236,20,
76,4,0,75,0,2,86,0,0,0,0,0,0,16,190,20,109,2,32,32,100,0,79,0,0,0,0,0,0,0,
234,20,121,2,32,32,100,0,38,0,0,0,0,0,0,0,228,20,148,2,29,29,105,0,116,83,35,0,40,0,
6,0,245,20,149,4,0,75,0,2,126,0,0,0,0,0,0,0,0,0,150,9,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,18,23,0,0,0,0,0,0,110,101,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,97,0,0,0,0,0,32,0,
16,21,35,2,29,29,115,0,101,0,0,0,0,0,0,0,14,21,36,2,30,30,90,0,105,0,0,0,0,0,
0,0,11,21,37,2,31,31,80,0,111,0,0,0,0,0,0,0,18,21,39,2,32,32,90,0,117,0,0,0,
0,0,0,0,20,21,40,2,33,33,80,0,86,0,0,0,0,0,0,0,254,20,109,2,28,28,80,0,64,51,
0,0,0,0,0,0,4,21,110,2,28,28,70,0,97,73,0,0,0,0,32,0,22,21,134,2,29,31,120,0,
97,85,0,0,0,0,32,0,24,21,135,2,29,33,120,0,64,47,0,0,0,0,0,0,6,21,148,2,28,28,
65,0,101,73,0,0,0,0,32,0,26,21,149,2,30,31,120,0,101,85,0,0,0,0,32,0,28,21,150,2,
30,33,120,0,86,73,0,0,0,0,32,0,30,21,151,2,28,31,120,0,86,85,0,0,0,0,32,0,32,21,
152,2,28,33,120,0,111,73,0,0,0,0,32,0,34,21,153,2,32,31,120,0,111,85,0,0,0,0,32,0,
36,21,154,2,32,33,120,0,117,73,0,0,0,0,32,0,38,21,155,2,33,31,120,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,6,23,0,0,0,0,0,0,117,114,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,58,0,0,0,0,0,0,0,0,0,
12,9,0,0,60,0,64,0,0,0,0,0,0,16,40,21,13,2,28,28,65,0,86,0,0,0,0,0,0,16,
46,21,109,2,28,28,75,0,64,51,0,0,0,0,0,16,51,21,110,2,28,28,75,0,64,50,0,0,0,0,
0,16,49,21,111,2,28,28,75,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,23,0,0,
0,0,0,0,112,97,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,64,0,0,0,0,0,0,0,57,21,13,2,28,28,65,0,97,0,0,0,0,0,32,0,
78,21,35,2,29,29,110,0,101,0,0,0,0,0,32,0,74,21,36,2,30,30,110,0,105,0,0,0,0,0,
32,0,68,21,37,2,31,31,110,0,117,0,0,0,0,0,32,0,86,21,40,2,33,33,110,0,118,0,0,0,
16,0,2,0,204,3,84,7,0,0,0,6,86,0,0,0,0,0,0,0,62,21,109,2,28,28,65,0,73,0,
0,0,0,0,0,0,71,21,113,2,31,31,75,0,69,0,0,0,0,0,32,0,76,21,116,2,30,30,100,0,
111,58,0,0,0,0,32,0,82,21,119,2,32,32,110,0,79,0,0,0,0,0,32,0,80,21,121,2,32,32,
100,0,85,0,0,0,0,0,0,0,84,21,122,2,33,33,75,0,43,0,0,0,0,0,0,0,54,21,148,1,
5,30,0,0,101,73,0,0,0,0,0,0,45,8,149,2,30,31,105,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,24,23,0,0,0,0,0,0,116,97,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,58,0,0,0,0,0,0,0,0,0,12,9,0,0,
25,0,64,0,0,0,0,0,0,0,88,21,13,2,28,28,65,0,97,0,0,0,0,0,0,0,90,21,35,2,
29,29,65,0,101,0,0,0,0,0,0,0,107,21,36,2,30,30,65,0,105,0,0,0,0,0,0,0,111,21,
37,2,31,31,65,0,111,0,0,0,0,0,0,0,119,21,39,2,32,32,65,0,117,0,0,0,0,0,0,0,
123,21,40,2,33,33,55,0,116,0,0,0,8,0,3,0,245,6,47,4,0,0,0,2,118,0,0,0,16,0,
2,0,204,3,84,7,0,0,0,6,122,46,0,0,48,0,6,0,148,21,92,7,0,93,0,6,86,0,0,0,
0,0,0,0,93,21,109,2,28,28,65,0,105,58,0,0,0,0,0,0,117,21,112,2,31,31,135,0,101,58,
0,0,0,0,0,0,109,21,114,2,30,30,125,0,97,58,0,0,0,0,0,0,105,21,118,2,29,29,150,0,
111,58,0,0,0,0,0,0,121,21,119,2,32,32,150,0,85,0,0,0,0,0,0,0,128,21,122,2,33,33,
55,0,117,58,0,0,0,0,0,0,132,21,123,2,33,33,140,0,97,73,0,0,0,0,0,0,142,21,134,2,
29,31,140,0,97,85,0,0,0,0,0,0,144,21,135,2,29,33,135,0,86,35,0,0,0,0,0,0,100,21,
148,2,28,28,65,0,35,0,0,0,0,0,0,0,146,21,149,9,0,0,0,0,117,50,0,0,0,0,0,0,
126,21,150,2,33,33,55,0,85,58,0,0,0,0,0,0,138,21,151,2,33,33,135,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,17,23,0,0,0,0,0,0,107,110,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,0,0,0,0,0,0,0,153,21,
13,2,29,29,65,0,114,0,0,0,0,0,128,0,71,0,34,3,0,0,0,7,97,0,0,0,0,0,32,0,
155,21,35,2,28,29,65,0,101,0,0,0,0,0,0,0,161,21,36,2,30,30,65,0,105,0,0,0,0,0,
0,0,165,21,37,2,31,31,65,0,111,0,0,0,0,0,0,0,169,21,39,2,32,32,65,0,117,0,0,0,
0,0,0,0,173,21,40,2,33,33,55,0,100,0,0,0,16,0,3,0,181,21,72,5,0,74,0,5,118,0,
0,0,16,0,2,0,204,3,84,7,0,0,0,6,105,58,0,0,0,0,0,0,167,21,112,2,31,31,135,0,
101,58,0,0,0,0,0,0,163,21,114,2,30,30,135,0,97,58,0,0,0,0,0,0,159,21,118,2,29,29,
150,0,111,58,0,0,0,0,0,0,171,21,119,2,32,32,150,0,117,58,0,0,0,0,0,0,175,21,123,2,
33,33,140,0,97,73,0,0,0,0,32,0,177,21,134,2,29,31,140,0,97,85,0,0,0,0,32,0,179,21,
135,2,29,33,135,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,30,23,0,0,0,0,0,0,
109,108,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,64,0,0,0,0,0,0,0,208,21,13,2,28,28,65,0,114,0,0,0,0,0,132,0,122,2,34,3,
0,0,0,3,97,0,0,0,0,0,0,0,214,21,35,2,29,29,65,0,101,0,0,0,0,0,0,0,233,21,
36,2,30,30,65,0,105,0,0,0,0,0,0,0,237,21,37,2,31,31,65,0,111,0,0,0,0,0,0,0,
243,21,39,2,32,32,65,0,117,0,0,0,0,0,0,0,247,21,40,2,33,33,55,0,116,0,0,0,8,0,
3,0,136,22,47,4,0,72,0,2,112,0,0,0,8,0,1,0,127,22,48,4,0,71,0,2,107,0,0,0,
8,0,8,0,145,22,49,4,0,81,0,2,82,0,0,0,128,0,0,0,136,0,51,3,0,0,0,6,118,0,
0,0,16,0,2,0,204,3,84,7,0,0,0,6,105,58,0,0,0,0,32,0,241,21,112,2,31,31,135,0,
73,0,0,0,0,0,0,0,239,21,113,2,31,31,65,0,101,58,0,0,0,0,32,0,235,21,114,2,30,30,
135,0,97,58,0,0,0,0,32,0,231,21,118,2,29,29,150,0,111,58,0,0,0,0,32,0,245,21,119,2,
32,32,150,0,117,58,0,0,0,0,32,0,249,21,123,2,33,33,140,0,97,73,0,0,0,0,32,0,251,21,
134,2,29,31,140,0,97,85,0,0,0,0,32,0,253,21,135,2,29,33,135,0,98,35,0,0,8,0,1,2,
255,21,137,4,0,71,0,2,100,35,0,0,8,0,3,2,23,22,138,4,0,72,0,2,116,46,35,0,8,0,
5,0,44,22,141,4,0,142,0,2,100,46,35,0,8,0,5,2,59,22,142,4,0,142,0,2,74,35,0,0,
40,2,7,2,80,22,144,4,0,143,0,2,103,35,0,0,8,0,8,2,97,22,146,4,0,0,0,2,121,0,
0,0,2,0,0,0,210,21,148,2,28,28,40,0,97,35,0,0,0,0,0,0,229,21,149,2,29,29,90,0,
100,50,0,0,16,0,4,0,15,3,150,5,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,25,1,0,0,0,0,0,0,104,117,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,105,0,0,0,0,0,0,0,158,22,37,2,31,31,70,0,111,0,
0,0,0,0,0,0,161,22,39,2,32,32,65,0,117,0,0,0,0,0,0,0,163,22,40,2,33,33,65,0,
116,0,0,0,8,0,3,0,193,22,47,4,0,72,0,2,112,0,0,0,8,0,1,0,55,6,48,4,0,71,
0,2,107,0,0,0,8,0,8,0,116,6,49,4,0,81,0,2,108,0,0,0,0,0,0,0,238,22,55,3,
0,0,0,7,100,0,0,0,16,0,3,0,211,22,72,5,0,47,0,5,99,0,0,0,40,0,7,0,103,6,
80,4,0,79,0,2,65,0,0,0,0,0,0,0,154,22,108,2,32,32,70,0,69,0,0,0,0,0,0,0,
156,22,109,2,30,30,70,0,89,0,0,0,0,0,0,0,165,22,110,2,28,28,65,0,121,0,0,0,0,0,
0,0,167,22,111,2,33,33,65,0,105,58,0,0,0,0,0,0,169,22,112,2,31,31,110,0,101,58,0,0,
0,0,0,0,171,22,113,2,30,30,120,0,97,58,0,0,0,0,0,0,173,22,114,2,29,29,135,0,111,58,
0,0,0,0,0,0,175,22,115,2,32,32,130,0,117,58,0,0,0,0,0,0,177,22,116,2,33,33,120,0,
121,58,0,0,0,0,0,0,179,22,117,2,33,33,120,0,89,58,0,0,0,0,0,0,181,22,118,2,28,28,
130,0,116,115,0,0,40,0,4,0,183,22,119,4,0,0,0,2,100,122,0,0,48,0,4,0,34,6,120,5,
0,119,0,5,116,50,0,0,8,0,3,0,206,22,121,4,0,0,0,2,115,50,0,0,40,0,4,0,167,6,
122,6,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,42,1,0,0,0,0,0,0,
108,116,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,64,0,0,0,0,0,0,0,1,23,13,2,28,28,60,0,114,0,0,0,192,0,132,0,72,23,34,3,
0,0,40,0,97,0,0,0,0,0,0,0,3,23,35,2,29,29,60,0,101,0,0,0,0,0,0,0,9,23,
36,2,30,30,90,0,105,0,0,0,0,0,0,0,25,23,37,2,31,31,50,0,111,0,0,0,0,0,0,0,
32,23,39,2,32,32,60,0,117,0,0,0,0,0,0,0,40,23,40,2,33,33,55,0,116,0,0,0,8,0,
3,0,80,23,47,4,0,72,0,2,108,0,0,0,2,0,0,0,192,23,55,2,28,28,150,0,119,0,0,0,
0,0,0,0,44,23,58,2,33,33,90,0,100,0,0,0,16,0,3,0,106,23,72,5,0,47,0,5,65,0,
0,0,0,0,0,0,5,23,108,2,29,29,40,0,97,58,0,0,0,0,32,0,7,23,109,2,29,29,175,0,
69,0,0,0,0,0,0,0,14,23,110,2,30,30,40,0,101,58,0,0,0,0,0,0,19,23,111,2,30,30,
150,0,101,101,0,0,0,0,32,0,21,23,112,2,30,30,130,0,101,65,0,0,0,0,32,0,23,23,113,2,
30,29,145,0,73,0,0,0,0,0,0,0,28,23,114,2,31,31,35,0,105,58,0,0,0,0,0,0,30,23,
115,2,31,31,150,0,79,0,0,0,0,0,0,0,34,23,116,2,32,32,35,0,111,58,0,0,0,0,0,0,
36,23,117,2,32,32,150,0,85,0,0,0,0,0,0,0,38,23,118,2,33,33,35,0,117,58,0,0,0,0,
0,0,42,23,119,2,33,33,165,0,87,0,0,0,0,0,0,0,46,23,120,2,33,33,50,0,97,105,0,0,
0,0,32,0,48,23,121,2,29,31,155,0,101,105,0,0,0,0,32,0,50,23,122,2,30,31,150,0,97,117,
0,0,0,0,32,0,52,23,123,2,29,33,150,0,117,111,0,0,0,0,32,0,54,23,124,2,33,29,150,0,
111,105,0,0,0,0,32,0,56,23,125,2,32,31,145,0,117,105,0,0,0,0,32,0,58,23,126,2,33,31,
145,0,105,101,0,0,0,0,32,0,60,23,127,2,31,30,145,0,97,85,0,0,0,0,0,0,62,23,128,2,
29,33,135,0,101,85,0,0,0,0,0,0,64,23,129,2,30,33,130,0,111,85,0,0,0,0,0,0,66,23,
130,2,32,33,130,0,97,73,0,0,0,0,0,0,68,23,131,2,29,31,135,0,101,73,0,0,0,0,0,0,
70,23,132,2,30,31,130,0,116,115,0,0,40,0,4,0,21,6,133,4,0,0,0,2,116,59,0,0,8,2,
7,0,93,23,134,4,0,135,0,2,100,59,0,0,16,2,4,0,133,23,135,5,0,134,0,5,110,59,0,0,
0,2,0,0,160,23,136,3,0,0,0,0,108,59,0,0,0,2,5,0,188,23,137,3,0,0,40,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,29,1,0,0,0,0,0,0,108,118,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,0,0,0,0,0,
0,0,197,23,13,2,28,28,60,0,97,0,0,0,0,0,0,0,213,23,35,2,29,29,60,0,101,0,0,0,
0,0,0,0,205,23,36,2,30,30,60,0,105,0,0,0,0,0,0,0,199,23,37,2,31,31,55,0,111,0,
0,0,0,0,0,0,222,23,39,2,32,32,60,0,117,0,0,0,0,0,0,0,226,23,40,2,33,33,55,0,
116,0,0,0,8,0,68,0,15,24,47,4,0,72,0,2,112,0,0,0,8,0,1,0,28,24,48,4,0,71,
0,2,107,0,0,0,8,0,8,0,44,24,49,4,0,81,0,2,82,50,0,0,128,0,0,0,246,23,52,3,
0,0,0,6,105,58,0,0,0,0,0,0,202,23,108,2,31,31,150,0,101,58,0,0,0,0,0,0,207,23,
109,2,30,30,165,0,38,0,0,0,0,0,0,0,209,23,110,2,29,29,60,0,38,58,0,0,0,0,0,0,
211,23,111,2,29,29,165,0,97,35,0,0,0,0,0,0,218,23,112,2,29,29,60,0,97,58,0,0,0,0,
0,0,216,23,113,2,29,29,175,0,111,58,0,0,0,0,0,0,224,23,114,2,32,32,165,0,117,58,0,0,
0,0,0,0,228,23,115,2,33,33,165,0,97,105,0,0,0,0,32,0,230,23,116,2,29,31,155,0,101,105,
0,0,0,0,32,0,232,23,117,2,30,31,150,0,97,117,0,0,0,0,32,0,234,23,118,2,29,33,150,0,
117,111,0,0,0,0,32,0,236,23,119,2,33,29,150,0,111,105,0,0,0,0,32,0,238,23,120,2,32,31,
145,0,117,105,0,0,0,0,32,0,240,23,121,2,33,31,145,0,105,101,0,0,0,0,32,0,242,23,122,2,
31,30,145,0,105,117,0,0,0,0,32,0,244,23,123,2,31,33,145,0,116,115,0,0,40,0,68,0,2,24,
124,4,0,0,0,2,115,50,0,0,40,0,4,0,64,24,125,6,0,0,0,3,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,22,1,0,0,0,0,0,0,112,108,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,97,0,0,0,0,0,0,0,74,24,35,2,
29,29,95,0,105,0,0,0,0,0,0,0,88,24,37,2,31,31,85,0,117,0,0,0,0,0,0,0,93,24,
40,2,33,33,90,0,116,0,0,0,8,0,3,0,117,24,47,4,0,72,0,2,82,0,0,0,128,0,0,0,
103,24,51,3,0,0,0,6,119,0,0,0,0,0,0,0,209,24,58,3,0,0,0,7,100,0,0,0,16,0,
3,0,143,24,72,5,0,47,0,5,102,0,0,0,8,0,2,0,215,24,83,6,0,84,0,3,97,35,0,0,
0,0,0,0,77,24,108,2,29,29,85,0,69,0,0,0,0,0,0,0,81,24,109,2,30,30,90,0,69,35,
0,0,0,0,0,0,86,24,110,2,30,30,90,0,79,0,0,0,0,0,0,0,91,24,111,2,32,32,90,0,
121,0,0,0,0,0,0,0,95,24,112,2,31,31,90,0,69,126,0,0,0,0,0,0,99,24,113,2,30,33,
125,0,79,126,0,0,0,0,0,0,101,24,114,2,32,32,125,0,116,59,0,0,8,2,7,0,130,24,115,4,
0,116,0,2,100,59,0,0,16,2,4,0,170,24,116,5,0,115,0,5,116,115,0,0,40,0,4,0,21,6,
117,4,0,118,0,2,100,122,0,0,48,0,4,0,197,24,118,5,0,117,0,5,116,115,59,0,40,2,7,0,
203,24,119,4,0,120,0,2,100,122,59,0,48,2,6,0,84,3,120,5,0,119,0,5,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,28,34,0,0,0,0,0,0,115,107,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,97,0,0,0,0,0,0,0,239,24,
35,2,29,29,60,0,101,0,0,0,0,0,0,0,235,24,36,2,30,30,60,0,105,0,0,0,0,0,0,0,
227,24,37,2,31,31,50,0,111,0,0,0,0,0,0,0,247,24,39,2,32,32,60,0,117,0,0,0,0,0,
0,0,251,24,40,2,33,33,55,0,114,45,0,0,0,0,0,0,9,25,44,2,28,28,100,0,108,45,0,0,
0,0,0,0,51,25,45,2,28,28,70,0,116,0,0,0,8,0,4,0,62,25,47,4,0,72,0,2,112,0,
0,0,8,0,1,0,75,25,48,4,0,71,0,2,107,0,0,0,8,0,8,0,29,7,49,4,0,0,0,2,
108,0,0,0,0,0,0,0,91,7,55,3,0,0,0,7,119,0,0,0,0,0,0,0,220,6,58,3,0,0,
0,7,105,58,0,0,0,0,0,0,230,24,121,2,31,31,130,0,38,0,0,0,0,0,0,0,233,24,122,2,
30,30,60,0,101,58,0,0,0,0,0,0,237,24,123,2,30,30,145,0,97,58,0,0,0,0,0,0,245,24,
124,2,29,29,145,0,111,58,0,0,0,0,0,0,249,24,125,2,32,32,145,0,117,58,0,0,0,0,0,0,
253,24,126,2,33,33,140,0,97,85,0,0,0,0,0,0,255,24,127,2,29,33,135,0,101,85,0,0,0,0,
0,0,1,25,128,2,30,33,130,0,111,85,0,0,0,0,0,0,3,25,129,2,32,33,130,0,97,73,0,0,
0,0,0,0,5,25,130,2,29,31,135,0,101,73,0,0,0,0,0,0,7,25,131,2,30,31,130,0,114,58,
0,0,0,0,0,0,14,25,132,2,28,28,150,0,82,94,0,0,48,0,6,0,20,25,133,7,0,0,0,6,
82,94,47,0,48,0,6,0,35,25,134,7,0,0,0,6,108,58,0,0,0,0,0,0,56,25,135,2,28,28,
125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,35,0,0,0,0,0,0,99,115,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,101,0,
0,0,0,0,0,0,91,25,36,2,30,30,60,0,111,0,0,0,0,0,0,0,95,25,39,2,32,32,60,0,
114,45,0,0,0,0,0,0,101,25,44,2,28,28,60,0,97,58,0,0,0,0,0,0,93,25,124,2,29,29,
145,0,117,58,0,0,0,0,0,0,97,25,126,2,33,33,140,0,111,85,0,0,0,0,0,0,99,25,129,2,
32,33,130,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,35,0,0,0,0,0,0,104,114,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
64,0,0,0,0,0,0,0,199,25,13,2,28,28,70,0,97,0,0,0,0,0,0,0,203,25,35,2,29,29,
80,0,101,0,0,0,0,0,0,0,212,25,36,2,30,30,70,0,105,0,0,0,0,0,0,0,214,25,37,2,
31,31,60,0,111,0,0,0,0,0,0,0,221,25,39,2,32,32,70,0,117,0,0,0,0,0,0,0,223,25,
40,2,33,33,70,0,116,0,0,0,8,0,3,0,230,25,47,4,0,72,0,2,82,0,0,0,128,0,0,0,
119,0,51,3,0,0,0,6,100,0,0,0,16,0,4,0,243,25,72,5,0,47,0,5,100,90,0,0,48,0,
6,0,158,25,75,5,0,76,0,5,116,83,0,0,40,0,6,0,119,25,76,4,0,75,0,2,100,90,59,0,
48,2,6,0,179,25,77,5,0,78,0,5,116,83,59,0,40,2,7,0,128,25,78,4,0,77,0,2,90,0,
0,0,48,0,6,0,140,25,90,7,0,91,0,6,83,0,0,0,40,0,6,0,106,25,91,6,0,90,0,3,
120,0,0,0,8,0,8,0,14,26,101,6,0,100,0,3,69,0,0,0,0,0,0,0,210,25,109,2,30,30,
70,0,38,0,0,0,0,0,0,0,208,25,122,2,29,29,70,0,97,73,0,0,0,0,0,0,228,25,130,2,
29,31,125,0,64,50,0,0,0,0,0,0,201,25,136,2,28,28,70,0,65,0,0,0,0,0,0,0,206,25,
137,2,29,29,80,0,73,0,0,0,0,0,0,0,218,25,138,2,31,31,60,0,85,0,0,0,0,0,0,0,
226,25,139,2,33,33,70,0,114,42,0,0,2,0,16,0,24,26,140,2,28,28,25,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,3,37,0,0,0,0,0,0,109,107,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,100,90,59,0,48,2,7,0,39,26,
77,5,0,78,0,5,107,94,0,0,8,0,7,0,29,26,141,4,0,0,0,2,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,14,37,0,0,0,0,0,0,115,114,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,116,0,0,0,8,0,3,0,80,26,47,4,
0,72,0,2,100,0,0,0,16,0,4,0,93,26,72,5,0,47,0,5,100,90,0,0,48,0,6,0,135,26,
75,5,0,76,0,5,116,83,0,0,40,0,6,0,164,26,76,4,0,75,0,2,100,90,59,0,48,2,6,0,
150,26,77,5,0,78,0,5,116,83,59,0,40,2,7,0,170,26,78,4,0,77,0,2,90,0,0,0,48,0,
6,0,179,26,90,7,0,91,0,6,83,0,0,0,40,0,6,0,197,26,91,6,0,90,0,3,38,0,0,0,
0,0,0,0,62,26,122,2,29,29,70,0,73,0,0,0,0,0,0,0,59,26,138,2,31,31,60,0,114,42,
0,0,128,0,0,0,66,26,140,3,0,0,0,6,120,35,0,0,8,0,8,0,114,26,141,6,0,0,0,3,
104,35,0,0,8,0,8,0,123,26,142,6,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,49,1,0,0,0,0,0,0,114,117,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,114,0,0,0,192,0,132,0,43,27,34,3,0,0,40,0,97,0,
0,0,0,0,0,0,242,27,35,2,29,29,50,0,101,0,0,0,0,0,0,0,195,27,36,2,30,30,50,0,
105,0,0,0,0,0,0,0,98,27,37,2,31,31,90,0,111,0,0,0,0,0,0,0,177,27,39,2,32,32,
50,0,117,0,0,0,0,0,0,0,186,27,40,2,33,33,40,0,116,0,0,0,8,0,3,0,117,24,47,4,
0,0,0,2,112,0,0,0,8,0,1,0,55,6,48,4,0,0,0,2,107,0,0,0,8,0,8,0,116,6,
49,4,0,0,0,2,108,0,0,0,0,0,5,0,241,26,55,3,0,0,20,7,108,94,0,0,0,2,5,0,
245,26,61,3,0,0,40,0,100,0,0,0,16,0,3,0,143,24,72,5,0,0,0,5,100,90,59,0,48,2,
7,0,51,27,77,5,0,78,0,5,116,83,59,0,40,2,7,0,65,27,78,4,0,77,0,2,103,0,0,0,
16,0,8,2,210,26,81,5,0,49,0,5,115,0,0,0,40,0,4,0,249,26,89,6,0,0,0,3,115,59,
0,0,40,0,4,0,128,5,95,6,0,0,0,3,120,0,0,0,8,0,8,0,231,26,101,6,0,0,0,3,
110,95,0,0,16,0,4,0,220,1,108,8,0,0,0,4,110,35,0,0,16,2,7,0,3,27,109,8,0,0,
0,4,116,115,0,0,40,0,4,0,21,6,110,4,0,0,0,2,116,59,0,0,8,2,7,0,130,24,111,4,
0,0,0,2,100,59,0,0,16,2,4,0,170,24,112,5,0,0,0,5,109,59,0,0,16,0,1,0,71,27,
113,8,0,0,0,4,73,94,0,0,2,0,16,0,91,27,114,2,31,31,35,0,121,0,0,0,0,0,0,0,
110,27,115,2,31,31,50,0,73,35,0,0,0,0,0,0,103,27,116,2,31,31,40,0,73,0,0,0,0,0,
0,0,112,27,117,2,31,31,40,0,73,50,0,0,0,0,0,0,121,27,118,2,31,31,40,0,73,51,0,0,
0,0,0,0,127,27,119,2,31,31,40,0,106,97,0,0,0,0,0,0,212,27,120,2,31,29,90,0,69,0,
0,0,0,0,0,0,138,27,121,2,30,30,50,0,69,35,0,0,0,0,0,0,140,27,122,2,30,30,50,0,
69,50,0,0,0,0,0,0,149,27,123,2,30,30,40,0,69,51,0,0,0,0,0,0,166,27,124,2,30,30,
40,0,69,37,0,0,0,0,0,0,175,27,125,2,0,0,90,0,86,0,0,0,2,0,0,0,5,28,126,2,
29,28,40,0,79,0,0,0,0,0,0,0,180,27,127,2,32,32,40,0,56,0,0,0,0,0,0,0,192,27,
128,2,32,32,50,0,117,35,0,0,0,0,0,0,188,27,129,2,33,33,40,0,117,34,0,0,0,0,0,0,
190,27,130,2,33,33,75,0,106,117,0,0,0,0,0,0,210,27,131,2,33,33,95,0,106,97,35,0,0,0,
0,0,220,27,132,2,31,29,90,0,86,35,0,0,2,0,0,0,227,27,133,2,29,28,40,0,65,0,0,0,
0,0,0,0,240,27,134,2,29,29,50,0,89,0,0,0,2,0,0,0,238,27,135,2,33,33,70,0,97,35,
0,0,0,0,0,0,17,28,136,2,29,29,50,0,82,52,0,0,0,0,0,0,19,28,137,3,0,0,0,6,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,34,0,0,0,0,0,0,98,103,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,0,0,0,
0,0,0,0,42,28,13,2,28,28,70,0,114,0,0,0,128,0,0,0,136,0,34,3,0,0,0,6,97,0,
0,0,0,0,0,0,47,28,35,2,29,29,75,0,101,0,0,0,0,0,0,0,37,28,36,2,30,30,70,0,
105,0,0,0,0,0,0,0,31,28,37,2,31,31,65,0,111,0,0,0,0,0,0,0,60,28,39,2,32,32,
70,0,117,0,0,0,0,0,0,0,65,28,40,2,33,33,70,0,108,0,0,0,0,0,0,0,91,7,55,3,
0,0,0,7,76,0,0,0,0,0,0,0,82,1,64,3,0,0,0,7,120,0,0,0,8,0,8,0,237,5,
101,6,0,0,0,3,1,0,0,0,0,0,0,0,0,0,119,14,0,0,0,0,103,35,0,0,16,0,8,2,
210,26,121,5,0,0,0,5,103,59,0,0,16,2,8,0,70,28,122,5,0,49,0,5,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,21,3,0,0,0,0,0,0,105,116,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,58,0,0,0,0,0,0,0,0,0,
12,9,0,0,25,0,97,0,0,0,0,0,0,0,91,28,35,2,29,29,80,0,101,0,0,0,0,0,0,0,
99,28,36,2,30,30,75,0,105,0,0,0,0,0,0,0,112,28,37,2,31,31,70,0,111,0,0,0,0,0,
0,0,121,28,39,2,32,32,75,0,117,0,0,0,0,0,0,0,134,28,40,2,33,33,75,0,108,94,0,0,
0,0,0,0,54,1,61,3,0,0,65,7,97,47,0,0,0,0,0,0,94,28,108,2,28,28,70,0,69,0,
0,0,0,0,0,0,109,28,109,2,30,30,72,0,79,0,0,0,0,0,0,0,131,28,110,2,32,32,75,0,
85,0,0,0,0,0,0,0,137,28,111,2,33,33,70,0,97,85,0,0,0,0,0,0,139,28,114,2,29,32,
150,0,97,73,0,0,0,0,0,0,141,28,117,2,29,31,125,0,111,73,0,0,0,0,0,0,143,28,120,2,
32,31,115,0,116,115,0,0,40,0,4,0,21,6,123,4,0,123,0,2,101,47,0,0,0,0,0,0,102,28,
124,2,30,30,70,0,105,35,0,0,0,0,0,0,115,28,125,2,31,31,72,0,73,0,0,0,0,0,0,0,
118,28,126,2,31,31,70,0,111,47,0,0,0,0,0,0,124,28,127,2,32,32,70,0,100,122,0,0,48,0,
4,0,34,6,128,5,0,88,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,1,0,0,
0,0,0,0,108,97,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,97,0,0,0,0,0,0,0,145,28,35,2,29,29,85,0,112,0,0,0,8,0,1,0,
55,6,48,4,0,71,0,2,108,0,0,0,0,0,0,0,91,7,55,3,0,0,0,7,69,0,0,0,0,0,
0,0,147,28,108,2,30,30,85,0,73,0,0,0,0,0,0,0,149,28,109,2,31,31,75,0,79,0,0,0,
0,0,0,0,152,28,110,2,32,32,80,0,85,0,0,0,0,0,0,0,154,28,111,2,33,33,80,0,97,58,
0,0,0,0,0,0,156,28,112,2,29,29,135,0,101,58,0,0,0,0,0,0,158,28,113,2,30,30,130,0,
105,58,0,0,0,0,0,0,160,28,114,2,31,31,120,0,111,58,0,0,0,0,0,0,162,28,115,2,32,32,
125,0,117,58,0,0,0,0,0,0,164,28,116,2,33,33,125,0,121,0,0,0,0,0,0,0,166,28,117,2,
31,31,75,0,121,58,0,0,0,0,0,0,168,28,118,2,31,31,125,0,97,85,0,0,0,0,0,0,170,28,
119,2,29,33,135,0,97,73,0,0,0,0,0,0,172,28,120,2,29,31,135,0,101,73,0,0,0,0,0,0,
174,28,121,2,30,31,135,0,69,85,0,0,0,0,0,0,176,28,122,2,30,33,135,0,79,73,0,0,0,0,
0,0,178,28,123,2,32,31,125,0,60,104,62,0,8,0,12,0,180,28,124,6,0,0,25,3,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,15,3,0,0,0,0,0,0,101,115,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,114,0,0,0,16,64,132,0,
63,29,34,5,0,0,0,3,97,0,0,0,0,0,0,0,202,28,35,2,29,29,100,0,101,0,0,0,0,0,
0,0,204,28,36,2,30,30,100,0,105,0,0,0,0,0,0,0,208,28,37,2,31,31,95,0,111,0,0,0,
0,0,0,0,211,28,39,2,32,32,100,0,117,0,0,0,0,0,0,0,215,28,40,2,33,33,100,0,98,0,
0,0,16,0,1,0,4,29,71,5,0,0,0,0,100,0,0,0,16,0,3,0,247,28,72,5,0,0,0,0,
103,0,0,0,16,0,8,0,217,28,81,5,0,49,0,5,118,35,0,0,16,0,2,0,43,29,85,7,0,83,
0,6,68,0,0,0,16,0,3,0,16,29,86,7,0,87,0,6,115,0,0,0,40,0,4,0,25,29,89,6,
0,88,0,3,69,0,0,0,0,0,0,0,206,28,109,2,30,30,100,0,79,0,0,0,0,0,0,0,213,28,
110,2,32,32,100,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,44,0,0,0,0,0,0,
101,115,45,108,97,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,84,0,0,0,40,0,4,0,70,29,87,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,11,44,0,0,0,0,0,0,99,97,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,97,0,0,0,0,0,0,0,72,29,35,2,29,29,90,0,
101,0,0,0,0,0,0,0,79,29,36,2,30,30,85,0,111,0,0,0,0,0,0,0,90,29,39,2,32,32,
85,0,117,0,0,0,0,0,0,0,95,29,40,2,33,33,80,0,108,0,0,0,0,0,0,0,91,7,55,3,
0,0,0,7,69,0,0,0,0,0,0,0,82,29,109,2,30,30,90,0,79,0,0,0,0,0,0,0,87,29,
110,2,32,32,85,0,85,0,0,0,2,0,0,0,93,29,111,2,33,33,80,0,97,35,0,0,2,0,0,0,
75,29,124,2,28,28,85,0,69,50,0,0,0,0,0,0,85,29,125,2,30,30,90,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,5,44,0,0,0,0,0,0,97,110,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,116,35,0,0,8,0,3,0,98,29,
25,4,0,0,0,0,69,0,0,0,0,0,0,0,103,29,109,2,30,30,85,0,79,0,0,0,0,0,0,0,
108,29,110,2,32,32,85,0,101,35,0,0,0,0,0,0,105,29,124,2,30,30,100,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,29,3,0,0,0,0,0,0,112,116,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,42,0,0,0,16,0,4,0,197,29,
16,5,0,0,0,6,101,0,0,0,0,0,0,0,154,29,36,2,30,30,80,0,117,0,0,0,0,0,0,0,
166,29,40,2,33,33,80,0,114,45,0,0,0,0,128,0,125,7,44,3,0,0,0,0,108,0,0,0,0,0,
0,0,91,7,55,3,0,0,0,7,120,0,0,0,8,0,12,0,187,29,101,6,0,0,0,3,69,0,0,0,
0,0,0,0,152,29,109,2,30,30,85,0,79,0,0,0,0,0,0,0,164,29,110,2,32,32,85,0,85,0,
0,0,0,0,0,0,168,29,111,2,33,33,70,0,121,0,0,0,0,0,0,0,156,29,112,2,31,31,55,0,
101,85,0,0,0,0,0,0,183,29,115,2,30,33,115,0,97,73,0,0,0,0,0,0,174,29,117,2,29,31,
115,0,101,73,0,0,0,0,0,0,177,29,118,2,30,31,105,0,73,0,0,0,2,0,0,0,110,29,124,2,
31,31,45,0,101,126,0,0,0,0,0,0,112,29,125,2,30,30,120,0,105,126,0,0,0,0,0,0,114,29,
126,2,31,31,120,0,111,126,0,0,0,0,0,0,117,29,127,2,32,32,120,0,117,126,0,0,0,0,0,0,
119,29,128,2,33,33,90,0,38,126,0,0,0,0,0,0,121,29,129,2,28,28,90,0,38,85,126,0,0,0,
0,0,130,29,130,2,28,33,120,0,111,73,126,0,0,0,0,0,137,29,131,2,32,31,130,0,38,0,0,0,
0,0,0,0,144,29,132,2,28,28,90,0,38,47,0,0,0,0,0,0,146,29,133,2,28,28,90,0,65,0,
0,0,0,0,0,0,150,29,134,2,29,29,100,0,105,47,0,0,0,0,0,0,159,29,135,2,31,31,75,0,
79,73,0,0,0,0,0,0,180,29,136,2,32,31,115,0,69,85,0,0,0,0,0,0,185,29,137,2,30,33,
115,0,115,35,0,0,40,0,4,0,192,29,138,6,0,88,0,3,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,20,48,0,0,0,0,0,0,112,116,45,112,116,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,97,0,0,0,0,0,0,0,224,29,35,2,29,29,90,0,
101,0,0,0,0,0,0,0,242,29,36,2,30,30,90,0,105,0,0,0,0,0,0,0,249,29,37,2,31,31,
85,0,111,0,0,0,0,0,0,0,5,30,39,2,32,32,90,0,117,0,0,0,0,0,0,0,8,30,40,2,
33,33,90,0,82,0,0,0,0,0,128,0,71,0,51,3,0,0,0,7,119,0,0,0,0,0,0,0,220,6,
58,3,0,0,0,7,120,0,0,0,128,0,0,0,18,30,101,3,0,0,0,7,69,0,0,0,0,0,0,0,
239,29,109,2,30,30,90,0,79,0,0,0,0,0,0,0,3,30,110,2,32,32,90,0,85,0,0,0,0,0,
0,0,10,30,111,2,33,33,65,0,121,0,0,0,0,0,0,0,245,29,112,2,28,28,65,0,38,126,0,0,
0,0,0,0,227,29,129,2,30,28,120,0,38,85,126,0,0,0,0,0,232,29,130,2,28,33,120,0,38,0,
0,0,2,0,0,0,214,29,132,2,28,28,90,0,38,47,0,0,0,0,0,0,218,29,133,2,28,28,90,0,
105,47,0,0,0,0,0,0,252,29,135,2,31,31,65,0,69,85,0,0,0,0,0,0,16,30,137,2,30,33,
115,0,115,35,0,0,40,0,6,0,30,30,138,6,0,90,0,3,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,36,3,0,0,0,0,0,0,114,111,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,0,0,0,0,0,0,0,64,30,13,2,28,28,85,0,
114,0,0,0,128,0,0,0,92,30,34,3,0,0,0,7,97,0,0,0,0,0,0,0,62,30,35,2,29,29,
90,0,101,0,0,0,0,0,0,0,56,30,36,2,30,30,90,0,111,0,0,0,0,0,0,0,66,30,39,2,
32,32,85,0,117,0,0,0,0,0,0,0,68,30,40,2,33,33,80,0,122,59,0,0,48,0,4,0,247,30,
94,7,0,95,0,6,115,59,0,0,40,0,4,0,166,30,95,6,0,94,0,3,90,59,0,0,48,0,6,0,
5,31,96,7,0,97,0,6,83,59,0,0,40,0,6,0,176,30,97,6,0,96,0,3,121,0,0,0,0,0,
0,0,58,30,112,2,28,28,90,0,89,0,0,0,0,0,0,0,70,30,113,2,28,28,90,0,73,94,0,0,
2,0,0,0,35,30,124,2,31,31,35,0,108,59,0,0,0,0,0,0,117,30,125,3,0,0,0,7,109,59,
0,0,16,0,1,0,124,30,126,8,0,0,0,4,110,59,0,0,16,0,4,0,131,30,127,8,0,0,0,4,
105,47,0,0,0,0,0,0,52,30,128,2,31,31,75,0,64,73,0,0,0,0,0,0,72,30,129,2,28,31,
125,0,64,85,0,0,0,0,0,0,74,30,130,2,28,33,130,0,111,85,0,0,0,0,0,0,76,30,131,2,
32,33,130,0,105,73,0,0,0,0,0,0,78,30,132,2,31,31,125,0,121,73,0,0,0,0,0,0,80,30,
133,2,28,31,105,0,121,85,0,0,0,0,0,0,82,30,134,2,28,33,115,0,101,97,0,0,0,0,0,0,
84,30,135,2,30,29,125,0,101,111,0,0,0,0,0,0,86,30,136,2,30,32,135,0,101,91,117,0,0,0,
0,0,88,30,137,2,30,33,125,0,79,97,0,0,0,0,0,0,90,30,138,2,32,29,125,0,112,59,0,0,
8,0,1,0,138,30,139,4,0,71,0,2,116,59,0,0,8,0,3,0,145,30,140,4,0,72,0,2,116,115,
59,0,40,0,4,0,152,30,141,4,0,0,0,2,102,59,0,0,8,0,2,0,159,30,142,6,0,84,0,3,
98,59,0,0,16,0,1,0,186,30,143,5,0,139,0,5,100,59,0,0,16,0,3,0,200,30,144,5,0,140,
0,5,42,59,0,0,16,0,4,0,211,30,145,5,0,0,0,2,118,59,0,0,16,0,2,0,229,30,146,7,
0,142,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,3,0,0,0,0,0,0,101,108,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
114,0,0,0,128,0,0,0,150,0,34,3,0,0,30,6,97,0,0,0,0,0,0,0,23,31,35,2,29,29,
70,0,101,0,0,0,0,0,0,0,32,31,36,2,30,30,70,0,105,0,0,0,0,0,0,0,34,31,37,2,
31,31,70,0,111,0,0,0,0,0,0,0,37,31,39,2,32,32,75,0,117,0,0,0,0,0,0,0,39,31,
40,2,33,33,80,0,116,0,0,0,8,0,4,0,41,31,47,4,0,72,0,2,107,0,0,0,8,0,8,0,
54,31,49,4,0,81,0,2,100,0,0,0,16,0,4,0,15,3,72,5,0,47,0,5,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,12,3,0,0,0,0,0,0,103,114,99,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,58,0,0,0,0,0,0,0,0,0,
12,9,0,0,50,0,101,0,0,0,0,0,0,0,75,31,36,2,30,30,70,0,111,0,0,0,0,0,0,0,
79,31,39,2,32,32,70,0,102,0,0,0,8,0,1,0,91,31,83,4,0,0,0,2,69,0,0,0,0,0,
0,0,77,31,109,2,30,30,75,0,79,0,0,0,0,0,0,0,81,31,110,2,32,32,75,0,121,0,0,0,
0,0,0,0,73,31,112,2,31,31,80,0,69,85,0,0,0,0,0,0,83,31,124,2,30,33,115,0,79,73,
0,0,0,0,0,0,85,31,125,2,32,31,115,0,79,85,0,0,0,0,0,0,87,31,126,2,32,33,115,0,
121,73,0,0,0,0,0,0,89,31,127,2,31,31,115,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,22,1,0,0,0,0,0,0,115,118,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,97,0,0,0,0,0,0,0,134,31,35,2,29,29,70,0,105,58,
0,0,0,0,0,0,97,31,108,2,31,31,90,0,73,0,0,0,0,0,0,0,103,31,109,2,31,31,65,0,
101,58,0,0,0,0,0,0,106,31,110,2,30,30,105,0,69,0,0,0,0,0,0,0,108,31,111,2,30,30,
70,0,69,45,0,0,2,0,0,0,116,31,112,2,28,28,70,0,69,58,0,0,0,0,0,0,111,31,113,2,
30,28,110,0,69,51,0,0,0,0,0,0,113,31,114,2,30,30,70,0,121,58,0,0,0,0,0,0,120,31,
115,2,33,33,110,0,121,0,0,0,0,0,0,0,122,31,116,2,33,33,70,0,117,45,0,0,0,0,0,0,
124,31,117,2,33,33,100,0,89,58,0,0,0,0,0,0,128,31,118,2,28,28,110,0,87,0,0,0,0,0,
0,0,130,31,119,2,28,28,70,0,56,0,0,0,0,0,0,0,132,31,120,2,33,33,70,0,38,0,0,0,
0,0,0,0,140,31,121,2,29,29,70,0,65,58,0,0,0,0,0,0,142,31,122,2,29,29,125,0,79,0,
0,0,0,0,0,0,144,31,123,2,32,32,70,0,111,58,0,0,0,0,0,0,146,31,124,2,32,32,105,0,
85,0,0,0,0,0,0,0,148,31,125,2,33,33,70,0,117,58,0,0,0,0,0,0,150,31,126,2,33,33,
105,0,115,120,0,0,8,0,8,0,152,31,127,6,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,28,1,0,0,0,0,0,0,110,111,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,0,0,0,2,0,0,0,162,31,13,2,28,28,60,0,
97,0,0,0,0,0,0,0,190,31,35,2,29,29,60,0,97,35,0,0,2,0,0,0,164,31,108,2,28,29,
60,0,73,0,0,0,0,0,0,0,166,31,109,2,31,31,50,0,105,58,0,0,0,0,0,0,169,31,110,2,
31,31,115,0,121,0,0,0,0,0,0,0,175,31,111,2,33,33,60,0,121,58,0,0,0,0,0,0,177,31,
112,2,33,33,130,0,87,0,0,0,0,0,0,0,179,31,113,2,28,28,60,0,89,58,0,0,0,0,0,0,
181,31,114,2,28,28,130,0,69,0,0,0,0,0,0,0,183,31,115,2,30,30,60,0,69,58,0,0,0,0,
0,0,186,31,116,2,30,30,135,0,101,58,0,0,0,0,0,0,188,31,117,2,30,30,125,0,97,58,0,0,
0,0,0,0,192,31,118,2,29,29,135,0,65,0,0,0,0,0,0,0,194,31,119,2,29,29,65,0,65,58,
0,0,0,0,0,0,196,31,120,2,29,29,140,0,79,0,0,0,0,0,0,0,198,31,121,2,32,32,60,0,
111,58,0,0,0,0,0,0,200,31,122,2,32,32,135,0,85,0,0,0,0,0,0,0,202,31,123,2,33,33,
60,0,117,58,0,0,0,0,0,0,204,31,124,2,33,33,120,0,117,45,0,0,0,0,0,0,206,31,125,2,
33,33,60,0,117,45,58,0,0,0,0,0,210,31,126,2,33,33,130,0,65,73,0,0,0,0,0,0,215,31,
127,2,29,31,135,0,97,73,0,0,0,0,0,0,218,31,128,2,29,31,135,0,79,73,0,0,0,0,0,0,
221,31,129,2,32,31,135,0,117,45,73,0,0,0,0,0,224,31,130,2,33,31,135,0,89,121,0,0,0,0,
0,0,230,31,131,2,28,33,135,0,97,85,0,0,0,0,0,0,232,31,132,2,29,33,135,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,42,1,0,0,0,0,0,0,105,115,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,58,0,0,0,0,0,0,0,
0,0,12,9,0,0,55,0,97,0,0,0,0,0,0,0,252,31,35,2,28,28,65,0,105,0,0,0,0,0,
0,0,234,31,37,2,31,31,65,0,117,0,0,0,0,0,0,0,6,32,40,2,33,33,65,0,98,0,0,0,
8,0,1,0,133,32,71,4,0,0,0,5,100,0,0,0,8,0,4,0,143,32,72,4,0,0,0,5,103,0,
0,0,8,0,8,0,156,32,81,4,0,0,0,5,118,0,0,0,16,0,2,0,241,3,84,7,0,83,0,6,
108,35,0,0,8,0,4,0,110,32,105,6,0,0,0,3,105,58,0,0,0,0,0,0,237,31,108,2,31,31,
115,0,73,0,0,0,0,0,0,0,241,31,109,2,31,31,65,0,73,58,0,0,0,0,0,0,244,31,110,2,
31,31,115,0,69,0,0,0,0,0,0,0,248,31,111,2,30,30,65,0,69,58,0,0,0,0,0,0,250,31,
112,2,30,30,65,0,97,58,0,0,0,0,0,0,254,31,113,2,29,29,115,0,79,0,0,0,0,0,0,0,
1,32,114,2,32,32,65,0,79,58,0,0,0,0,0,0,3,32,115,2,32,32,115,0,117,58,0,0,0,0,
0,0,8,32,116,2,33,33,115,0,121,0,0,0,0,0,0,0,11,32,117,2,28,28,65,0,121,58,0,0,
0,0,0,0,13,32,118,2,31,31,115,0,87,0,0,0,0,0,0,0,16,32,119,2,28,28,65,0,87,58,
0,0,0,0,0,0,18,32,120,2,28,28,65,0,97,73,0,0,0,0,0,0,21,32,121,2,29,31,85,0,
97,73,58,0,0,0,0,0,23,32,122,2,29,31,115,0,101,73,0,0,0,0,0,0,26,32,123,2,30,31,
85,0,101,73,58,0,0,0,0,0,28,32,124,2,30,31,115,0,97,85,0,0,0,0,0,0,31,32,125,2,
29,33,85,0,97,85,58,0,0,0,0,0,33,32,126,2,29,33,115,0,111,85,0,0,0,0,0,0,36,32,
127,2,32,33,85,0,111,85,58,0,0,0,0,0,38,32,128,2,32,33,115,0,89,121,0,0,0,0,0,0,
41,32,129,2,28,31,75,0,89,121,58,0,0,0,0,0,43,32,130,2,28,31,110,0,79,73,0,0,0,0,
0,0,46,32,131,2,32,31,105,0,121,73,0,0,0,0,0,0,48,32,132,2,31,31,90,0,109,35,0,0,
16,0,1,0,50,32,133,8,0,0,0,6,110,35,0,0,16,0,4,0,58,32,134,8,0,0,0,6,110,94,
35,0,16,2,7,0,79,32,135,8,0,0,0,6,78,35,0,0,16,0,8,0,88,32,136,8,0,0,0,6,
116,108,35,0,8,0,4,0,114,32,137,4,0,0,0,2,114,35,0,0,0,0,0,0,127,32,138,3,0,0,
0,2,115,50,0,0,40,0,4,0,167,6,139,6,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,57,1,0,0,0,0,0,0,118,105,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,0,0,0,0,0,0,0,249,32,13,2,28,29,90,0,
64,45,0,0,0,0,0,0,58,33,14,2,32,31,75,0,49,0,0,0,0,0,0,0,169,32,17,1,34,36,
0,0,97,0,0,0,0,0,0,0,194,32,35,2,28,28,70,0,101,0,0,0,0,0,0,0,205,32,36,2,
30,30,70,0,105,0,0,0,0,0,0,0,207,32,37,2,31,31,90,0,111,0,0,0,0,0,0,0,228,32,
39,2,32,32,90,0,117,0,0,0,0,0,0,0,235,32,40,2,33,33,90,0,116,0,0,0,8,0,4,0,
78,33,47,4,0,0,0,2,112,0,0,0,8,0,1,0,116,33,48,4,0,0,0,2,110,0,0,0,16,0,
4,0,126,33,50,8,0,0,37,4,108,0,0,0,0,0,0,0,72,33,55,3,0,0,0,0,116,91,0,0,
8,0,3,0,136,33,74,4,0,73,2,2,99,0,0,0,8,2,7,0,106,33,80,4,0,0,1,2,50,0,
0,0,0,0,0,0,172,32,108,1,8,30,0,0,51,0,0,0,0,0,0,0,175,32,109,1,30,60,0,0,
52,0,0,0,0,0,0,0,178,32,110,1,10,55,0,0,53,0,0,0,0,0,0,0,181,32,111,1,28,58,
0,0,54,0,0,0,0,0,0,0,186,32,112,1,25,60,0,0,55,0,0,0,0,0,0,0,191,32,113,1,
35,40,0,0,97,58,0,0,0,0,0,0,196,32,114,2,29,29,90,0,69,0,0,0,0,0,0,0,203,32,
115,2,30,30,70,0,79,0,0,0,0,0,0,0,221,32,116,2,32,32,90,0,107,104,0,0,8,0,8,0,
62,33,117,6,0,0,0,3,121,0,0,0,0,0,0,0,242,32,118,2,33,33,90,0,64,58,0,0,0,0,
0,0,2,33,119,2,28,28,70,0,97,73,0,0,0,0,0,0,4,33,120,2,29,31,70,0,97,58,73,0,
0,0,0,0,6,33,121,2,29,31,100,0,64,73,0,0,0,0,0,0,8,33,122,2,28,31,100,0,64,58,
73,0,0,0,0,0,10,33,123,2,28,31,100,0,101,73,0,0,0,0,0,0,12,33,124,2,30,31,70,0,
69,73,0,0,0,0,0,0,14,33,125,2,30,31,70,0,79,73,0,0,0,0,0,0,16,33,126,2,32,31,
100,0,111,73,0,0,0,0,0,0,18,33,127,2,32,31,100,0,117,73,0,0,0,0,0,0,20,33,128,2,
33,31,100,0,121,73,0,0,0,0,0,0,22,33,129,2,33,31,100,0,97,85,0,0,0,0,0,0,24,33,
130,2,29,33,75,0,97,58,85,0,0,0,0,0,26,33,131,2,29,33,75,0,101,85,0,0,0,0,0,0,
28,33,132,2,30,33,75,0,69,85,0,0,0,0,0,0,30,33,133,2,30,33,75,0,105,85,0,0,0,0,
0,0,32,33,134,2,31,33,70,0,64,85,0,0,0,0,0,0,34,33,135,2,28,33,70,0,64,58,85,0,
0,0,0,0,36,33,136,2,28,33,70,0,105,64,0,0,0,0,0,0,38,33,137,2,31,28,70,0,121,64,
0,0,0,0,0,0,40,33,138,2,31,28,70,0,117,64,0,0,0,0,0,0,42,33,139,2,33,28,50,0,
111,35,0,0,0,0,0,0,44,33,140,2,32,32,70,0,79,35,0,0,0,0,0,0,46,33,141,2,32,32,
70,0,111,64,0,0,0,0,0,0,48,33,142,2,32,29,70,0,111,38,0,0,0,0,0,0,50,33,143,2,
32,32,70,0,105,69,0,0,0,0,0,0,52,33,144,2,31,30,70,0,79,105,0,0,0,0,0,0,54,33,
145,2,32,31,70,0,79,45,0,0,0,0,0,0,56,33,146,2,32,31,75,0,117,45,0,0,0,0,0,0,
60,33,147,2,33,33,75,0,99,114,0,0,40,0,6,0,88,33,148,4,0,0,0,2,100,95,0,0,16,0,
4,0,94,33,149,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,56,0,0,
0,0,0,0,118,105,45,104,117,101,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,64,0,0,0,0,0,0,0,185,33,13,2,28,29,75,0,49,0,0,0,0,0,0,0,
149,33,17,1,10,60,0,0,105,0,0,0,0,0,0,0,176,33,37,2,31,31,75,0,110,0,0,0,16,0,
4,0,199,33,50,8,0,0,37,4,50,0,0,0,0,0,0,0,152,33,108,1,20,25,0,0,51,0,0,0,
0,0,0,0,157,33,109,1,2,10,0,0,52,0,0,0,0,0,0,0,160,33,110,1,5,10,0,0,53,0,
0,0,0,0,0,0,163,33,111,1,10,15,0,0,54,0,0,0,0,0,0,0,168,33,112,1,10,25,0,0,
55,0,0,0,0,0,0,0,173,33,113,1,5,40,0,0,97,58,0,0,0,0,0,0,182,33,114,2,29,29,
75,0,69,0,0,0,0,0,0,0,179,33,115,2,30,30,75,0,79,0,0,0,0,0,0,0,191,33,116,2,
32,32,75,0,64,58,0,0,0,0,0,0,188,33,119,2,28,28,75,0,64,58,73,0,0,0,0,0,204,33,
123,2,28,31,100,0,79,105,0,0,0,0,0,0,195,33,145,2,32,31,50,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,18,56,0,0,0,0,0,0,118,105,45,115,103,110,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,0,0,0,0,0,0,0,243,33,13,2,
28,29,75,0,49,0,0,0,0,0,0,0,208,33,17,1,20,35,0,0,105,0,0,0,0,0,0,0,231,33,
37,2,31,31,75,0,111,0,0,0,0,0,0,0,5,34,39,2,32,32,90,0,50,0,0,0,0,0,0,0,
211,33,108,1,10,20,0,0,51,0,0,0,0,0,0,0,214,33,109,1,45,80,0,0,52,0,0,0,0,0,
0,0,217,33,110,1,45,50,0,0,53,0,0,0,0,0,0,0,222,33,111,1,30,75,0,0,54,0,0,0,
0,0,0,0,225,33,112,1,20,25,0,0,55,0,0,0,0,0,0,0,228,33,113,1,40,42,0,0,97,58,
0,0,0,0,0,0,239,33,114,2,29,29,75,0,69,0,0,0,0,0,0,0,235,33,115,2,30,30,75,0,
79,0,0,0,0,0,0,0,249,33,116,2,32,32,40,0,121,0,0,0,0,0,0,0,1,34,118,2,33,33,
90,0,64,58,0,0,0,0,0,0,246,33,119,2,28,28,75,0,64,58,73,0,0,0,0,0,9,34,123,2,
28,31,100,0,79,105,0,0,0,0,0,0,253,33,145,2,32,31,50,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,41,1,0,0,0,0,0,0,122,104,121,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,0,0,0,0,0,0,0,13,34,17,1,50,50,
0,0,97,0,0,0,0,0,0,0,115,34,35,2,28,28,75,0,101,0,0,0,0,0,0,0,121,34,36,2,
30,30,110,0,105,0,0,0,0,0,0,0,129,34,37,2,31,31,95,0,111,0,0,0,0,0,0,0,146,34,
39,2,32,32,85,0,117,0,0,0,0,0,0,0,156,34,40,2,33,33,85,0,116,0,0,0,8,0,4,0,
92,34,47,4,0,0,0,2,112,0,0,0,8,0,1,0,79,34,48,4,0,0,0,2,107,0,0,0,8,0,
8,0,53,34,49,4,0,0,0,2,99,0,0,0,40,0,6,0,44,34,80,4,0,0,0,2,122,0,0,0,
40,0,4,0,34,34,88,4,0,0,0,2,50,0,0,0,0,0,0,0,16,34,108,1,30,50,0,0,51,0,
0,0,0,0,0,0,19,34,109,1,30,30,0,0,52,0,0,0,0,0,0,0,22,34,110,1,10,20,0,0,
53,0,0,0,0,0,0,0,25,34,111,1,10,30,0,0,54,0,0,0,0,0,0,0,28,34,112,1,20,20,
0,0,55,0,0,0,0,0,0,0,31,34,113,1,30,50,0,0,97,97,0,0,0,0,0,0,105,34,114,2,
29,29,115,0,97,97,105,0,0,0,0,0,107,34,115,2,29,31,135,0,97,97,117,0,0,0,0,0,109,34,
116,2,29,33,130,0,97,110,103,0,0,0,0,0,111,34,117,2,29,29,110,0,97,97,110,103,0,0,0,0,
113,34,118,2,29,29,135,0,97,105,0,0,0,0,0,0,117,34,119,2,28,31,100,0,97,117,0,0,0,0,
0,0,119,34,120,2,29,33,100,0,101,105,0,0,0,0,0,0,123,34,121,2,30,31,110,0,101,110,103,0,
0,0,0,0,125,34,122,2,30,30,110,0,101,117,0,0,0,0,0,0,127,34,123,2,30,33,130,0,105,110,
103,0,0,0,0,0,138,34,124,2,31,31,110,0,105,117,0,0,0,0,0,0,140,34,125,2,31,33,100,0,
110,103,0,0,0,0,0,0,142,34,126,2,0,0,175,0,111,101,110,103,0,0,0,0,148,34,127,2,32,30,
140,0,111,105,0,0,0,0,0,0,150,34,128,2,32,31,100,0,111,117,0,0,0,0,0,0,152,34,129,2,
32,33,100,0,111,110,103,0,0,0,0,0,154,34,130,2,32,32,110,0,117,110,103,0,0,0,0,0,162,34,
131,2,33,33,100,0,117,105,0,0,0,0,0,0,164,34,132,2,33,31,110,0,111,101,0,0,0,0,0,0,
166,34,133,2,28,28,115,0,101,111,0,0,0,0,0,0,168,34,134,2,28,28,85,0,101,111,105,0,0,0,
0,0,170,34,135,2,28,31,110,0,121,117,0,0,0,0,0,0,172,34,136,2,33,33,110,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,64,1,0,0,0,0,0,0,122,104,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,0,0,0,0,0,0,0,
188,35,13,2,28,28,100,0,97,0,0,0,0,0,0,0,174,35,35,2,29,29,125,0,105,0,0,0,0,0,
0,0,199,35,37,2,31,31,125,0,111,0,0,0,0,0,0,0,221,35,39,2,32,32,125,0,117,0,0,0,
0,0,0,0,232,35,40,2,33,33,125,0,78,45,0,0,0,0,0,0,172,35,43,2,68,68,125,0,116,0,
0,0,8,0,4,0,53,35,47,4,0,0,0,2,112,0,0,0,8,0,1,0,27,35,48,4,0,0,0,2,
107,0,0,0,8,0,10,0,73,35,49,4,0,0,0,2,110,0,0,0,16,0,4,0,204,34,50,8,0,0,
0,2,108,0,0,0,0,0,0,0,250,34,55,3,0,0,0,2,106,0,0,0,0,2,0,0,1,35,57,3,
0,0,0,1,78,0,0,0,16,0,8,0,226,34,68,8,0,0,0,7,116,83,59,0,40,2,7,0,93,35,
78,4,0,0,0,2,102,0,0,0,8,0,2,0,47,35,83,6,0,0,0,2,115,46,0,0,40,0,6,0,
119,35,93,6,0,0,0,3,83,59,0,0,40,0,6,0,111,35,97,6,0,0,0,2,49,49,0,0,0,0,
0,0,174,34,108,1,9,12,0,0,50,49,0,0,0,0,0,0,177,34,109,1,10,20,0,0,50,49,52,0,
0,0,0,0,180,34,110,1,18,42,0,0,50,50,0,0,0,0,0,0,183,34,111,1,20,22,0,0,51,51,
0,0,0,0,0,0,186,34,112,1,30,32,0,0,51,53,0,0,0,0,0,0,189,34,113,1,30,50,0,0,
52,52,0,0,0,0,0,0,192,34,114,1,38,41,0,0,53,49,0,0,0,0,0,0,195,34,115,1,10,50,
0,0,53,51,0,0,0,0,0,0,198,34,116,1,30,50,0,0,53,53,0,0,0,0,0,0,201,34,117,1,
50,55,0,0,112,104,0,0,8,0,1,0,37,35,118,4,0,0,0,2,116,104,0,0,8,0,4,0,63,35,
119,4,0,0,0,2,107,104,0,0,8,0,10,0,83,35,120,4,0,0,0,2,116,83,59,104,40,2,7,0,
102,35,121,4,0,0,0,2,116,115,0,0,40,0,4,0,132,35,122,4,0,0,0,2,116,115,104,0,40,0,
4,0,142,35,123,4,0,0,0,2,116,115,46,0,40,0,6,0,152,35,124,6,0,0,0,3,116,115,46,104,
40,0,6,0,162,35,125,6,0,0,0,3,65,0,0,0,0,0,0,0,179,35,126,2,29,29,125,0,97,105,
0,0,0,0,0,0,184,35,127,2,29,31,125,0,65,117,0,0,0,0,0,0,186,35,128,2,29,33,125,0,
64,114,0,0,0,0,0,0,193,35,129,2,28,28,175,0,69,0,0,0,0,0,0,0,195,35,130,2,30,30,
125,0,101,105,0,0,0,0,0,0,197,35,131,2,30,31,125,0,105,91,0,0,0,0,0,0,207,35,132,2,
31,31,125,0,105,46,0,0,0,0,0,0,209,35,133,2,31,31,125,0,105,65,0,0,0,0,0,0,211,35,
134,2,31,29,125,0,105,65,117,0,0,0,0,0,213,35,135,2,31,33,125,0,105,69,0,0,0,0,0,0,
215,35,136,2,31,30,125,0,105,111,0,0,0,0,0,0,217,35,137,2,31,32,125,0,105,111,117,0,0,0,
0,0,219,35,138,2,31,33,125,0,111,45,0,0,0,0,0,0,226,35,139,2,32,32,125,0,111,117,0,0,
0,0,0,0,228,35,140,2,32,33,125,0,111,110,103,0,0,0,0,0,230,35,141,2,32,32,250,0,117,65,
0,0,0,0,0,0,237,35,142,2,33,29,125,0,117,97,0,0,0,0,0,0,239,35,143,2,33,29,125,0,
117,97,105,0,0,0,0,0,241,35,144,2,33,31,125,0,117,64,0,0,0,0,0,0,243,35,145,2,33,28,
115,0,117,101,105,0,0,0,0,0,245,35,146,2,33,31,125,0,117,111,0,0,0,0,0,0,247,35,147,2,
33,32,140,0,121,0,0,0,0,0,0,0,249,35,148,2,31,33,125,0,121,117,0,0,0,0,0,0,254,35,
149,2,31,33,125,0,121,38,0,0,0,0,0,0,0,36,150,2,31,30,125,0,121,69,0,0,0,0,0,0,
2,36,151,2,31,30,125,0,121,64,0,0,0,0,0,0,4,36,152,2,31,28,125,0,121,105,0,0,0,0,
0,0,6,36,153,2,31,31,125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,1,0,0,
0,0,0,0,115,119,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,97,0,0,0,0,0,0,0,12,36,35,2,29,29,105,0,101,0,0,0,0,0,0,0,
10,36,36,2,30,30,105,0,105,0,0,0,0,0,0,0,8,36,37,2,31,31,100,0,111,0,0,0,0,0,
0,0,14,36,39,2,32,32,105,0,117,0,0,0,0,0,0,0,16,36,40,2,33,33,100,0,116,0,0,0,
8,0,4,0,36,36,47,4,0,72,0,2,112,0,0,0,8,0,1,0,76,36,48,4,0,71,0,2,107,0,
0,0,8,0,8,0,157,36,49,4,0,81,0,2,119,0,0,0,0,0,0,0,140,36,58,3,0,0,0,7,
110,94,0,0,16,2,7,0,86,36,67,8,0,0,0,4,78,0,0,0,16,0,8,0,113,36,68,8,0,0,
0,8,100,0,0,0,16,0,3,0,2,7,72,5,0,0,0,5,74,0,0,0,48,2,7,0,172,36,79,5,
0,80,0,5,103,0,0,0,16,0,8,0,197,36,81,5,0,49,0,5,84,0,0,0,8,0,3,0,46,36,
87,6,0,86,0,3,122,0,0,0,48,0,4,0,18,36,88,7,0,89,0,6,115,0,0,0,40,0,4,0,
66,36,89,6,0,88,0,3,83,0,0,0,40,0,6,0,56,36,91,6,0,90,0,3,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,20,3,0,0,0,0,0,0,116,114,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,58,0,0,0,0,0,0,0,0,0,
12,9,0,0,70,0,64,0,0,0,0,0,0,0,32,37,13,2,28,28,90,0,97,0,0,0,0,0,0,0,
12,37,35,2,29,29,100,0,101,0,0,0,0,0,0,0,240,36,36,2,30,30,100,0,105,0,0,0,0,0,
0,0,212,36,37,2,31,31,90,0,111,0,0,0,0,0,0,0,36,37,39,2,32,32,100,0,117,0,0,0,
0,0,0,0,18,37,40,2,33,33,90,0,82,0,0,0,128,0,0,0,84,37,51,3,0,0,0,6,74,0,
0,0,16,0,6,0,63,37,79,5,0,0,0,5,99,0,0,0,8,0,7,0,50,37,80,4,0,0,0,2,
69,0,0,0,0,0,0,0,6,37,109,2,30,30,100,0,79,0,0,0,0,0,0,0,48,37,110,2,32,32,
100,0,85,0,0,0,0,0,0,0,30,37,111,2,33,33,90,0,121,0,0,0,0,0,0,0,226,36,112,2,
33,33,90,0,89,0,0,0,0,0,0,0,238,36,113,2,33,33,90,0,73,0,0,0,0,0,0,0,224,36,
124,2,31,31,90,0,38,0,0,0,0,0,0,0,8,37,125,2,29,29,100,0,87,0,0,0,0,0,0,0,
10,37,126,2,28,28,100,0,71,0,0,0,0,0,128,0,101,0,127,3,0,0,0,7,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,18,3,0,0,0,0,0,0,107,117,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,97,0,0,0,0,0,0,0,103,37,
35,2,29,29,105,0,101,0,0,0,0,0,0,0,97,37,36,2,30,30,110,0,105,0,0,0,0,0,0,0,
90,37,37,2,31,31,95,0,111,0,0,0,0,0,0,0,107,37,39,2,32,32,110,0,117,0,0,0,0,0,
0,0,111,37,40,2,33,33,100,0,74,0,0,0,16,0,6,0,144,37,79,5,0,80,0,5,99,0,0,0,
8,0,7,0,131,37,80,4,0,79,0,2,120,0,0,0,8,0,8,0,121,37,101,6,0,0,0,3,69,0,
0,0,0,0,0,0,99,37,109,2,29,29,75,0,85,0,0,0,0,0,0,0,109,37,111,2,33,33,65,0,
121,0,0,0,0,0,0,0,113,37,112,2,33,33,80,0,101,85,0,0,0,0,0,0,117,37,115,2,30,31,
140,0,101,73,0,0,0,0,0,0,115,37,118,2,30,31,140,0,73,0,0,0,0,0,0,0,92,37,124,2,
28,28,55,0,69,35,0,0,0,0,0,0,101,37,125,2,30,30,70,0,56,0,0,0,0,0,0,0,105,37,
126,2,28,28,80,0,86,0,0,0,0,0,0,0,119,37,127,2,28,28,80,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,16,3,0,0,0,0,0,0,105,100,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,0,0,0,2,0,0,0,159,37,13,2,
28,28,70,0,97,0,0,0,0,0,0,0,163,37,35,2,29,29,90,0,101,0,0,0,0,0,0,0,177,37,
36,2,30,30,90,0,105,0,0,0,0,0,0,0,181,37,37,2,31,31,90,0,111,0,0,0,0,0,0,0,
189,37,39,2,32,32,90,0,117,0,0,0,0,0,0,0,193,37,40,2,33,33,90,0,100,0,0,0,16,0,
4,0,15,3,72,5,0,47,0,5,69,0,0,0,0,0,0,0,168,37,109,2,30,30,90,0,79,0,0,0,
0,0,0,0,185,37,110,2,32,32,90,0,97,85,0,0,0,0,0,0,211,37,114,2,29,33,120,0,97,73,
0,0,0,0,0,0,197,37,117,2,29,31,120,0,101,73,0,0,0,0,0,0,203,37,118,2,30,31,120,0,
69,50,0,0,0,0,0,0,173,37,124,2,30,30,90,0,79,73,0,0,0,0,0,0,205,37,125,2,32,31,
120,0,64,85,0,0,0,0,0,0,217,37,126,2,28,33,120,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,33,1,0,0,0,0,0,0,115,113,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,0,0,0,0,0,0,0,219,37,13,2,28,28,75,0,
97,0,0,0,0,0,0,0,232,37,35,2,29,29,85,0,101,0,0,0,0,0,0,0,248,37,36,2,30,30,
85,0,105,0,0,0,0,0,0,0,253,37,37,2,31,31,70,0,117,0,0,0,0,0,0,0,20,38,40,2,
33,33,80,0,116,0,0,0,8,0,3,0,10,5,47,4,0,72,0,2,112,0,0,0,8,0,1,0,71,38,
48,4,0,71,0,2,107,0,0,0,8,0,8,0,148,38,49,4,0,81,0,2,119,0,0,0,0,0,0,0,
67,38,58,3,0,0,0,7,76,0,0,0,0,0,0,0,34,38,64,3,0,0,0,7,100,0,0,0,16,0,
4,0,87,38,72,5,0,47,0,5,100,90,59,0,48,2,6,0,128,38,77,5,0,78,0,5,99,0,0,0,
40,2,7,0,32,5,80,4,0,77,0,2,122,0,0,0,48,0,4,0,114,38,88,7,0,89,0,6,64,47,
0,0,0,0,0,0,221,37,108,2,28,28,50,0,86,0,0,0,0,0,0,0,223,37,109,2,28,28,85,0,
73,35,0,0,0,0,0,0,229,37,110,2,28,28,85,0,97,47,0,0,0,0,0,0,237,37,111,2,29,29,
85,0,65,0,0,0,0,0,0,0,239,37,112,2,29,29,85,0,69,0,0,0,0,0,0,0,244,37,113,2,
30,30,85,0,69,35,0,0,0,0,0,0,246,37,114,2,28,28,85,0,73,0,0,0,0,0,0,0,11,38,
115,2,31,31,70,0,121,0,0,0,0,0,0,0,13,38,116,2,33,33,80,0,79,0,0,0,0,0,0,0,
15,38,117,2,32,32,85,0,97,73,0,0,0,0,0,0,22,38,118,2,29,31,110,0,101,73,0,0,0,0,
0,0,24,38,119,2,30,31,110,0,79,73,0,0,0,0,0,0,26,38,120,2,32,31,110,0,121,69,0,0,
0,0,0,0,28,38,121,2,33,30,120,0,108,47,52,0,0,0,0,0,30,38,122,3,0,0,0,7,108,108,
0,0,0,0,0,0,54,38,123,3,0,0,0,7,116,115,0,0,40,0,4,0,21,6,124,4,0,125,0,2,
100,122,0,0,48,0,4,0,34,6,125,5,0,124,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,24,1,0,0,0,0,0,0,104,121,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,64,0,0,0,2,0,0,0,161,38,13,2,28,28,80,0,116,35,
0,0,8,0,4,0,245,4,25,4,0,0,0,2,97,0,0,0,0,0,0,0,169,38,35,2,29,29,100,0,
101,0,0,0,0,0,0,0,167,38,36,2,30,30,90,0,105,0,0,0,0,0,0,0,163,38,37,2,31,31,
80,0,111,0,0,0,0,0,0,0,171,38,39,2,32,32,90,0,117,0,0,0,0,0,0,0,173,38,40,2,
33,33,90,0,116,0,0,0,8,0,3,0,10,5,47,4,0,0,0,2,112,0,0,0,8,0,1,0,55,6,
48,4,0,0,0,2,107,0,0,0,8,0,8,0,116,6,49,4,0,0,0,2,116,83,0,0,40,0,6,0,
193,38,76,4,0,75,0,2,81,0,0,0,16,0,10,0,207,4,100,7,0,0,0,6,121,0,0,0,0,0,
0,0,165,38,108,2,31,31,80,0,87,0,0,0,0,0,0,0,175,38,109,2,28,28,90,0,97,73,0,0,
0,0,0,0,177,38,110,2,29,31,120,0,101,73,0,0,0,0,0,0,179,38,111,2,30,31,120,0,105,64,
0,0,0,0,0,0,181,38,112,2,31,28,120,0,112,35,0,0,8,0,1,0,74,6,113,4,0,0,0,2,
116,115,35,0,40,0,4,0,21,6,114,4,0,0,0,2,107,35,0,0,8,0,8,0,57,5,115,4,0,0,
0,2,100,122,0,0,48,0,4,0,34,6,116,5,0,117,0,5,116,115,0,0,40,0,4,0,183,38,117,4,
0,0,0,2,116,83,35,0,40,0,6,0,23,5,118,4,0,0,0,2,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,45,1,0,0,0,0,0,0,100,97,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,0,0,0,2,0,0,0,168,40,13,2,28,28,
30,0,64,45,0,0,2,0,16,0,171,40,14,2,28,28,90,0,114,0,0,0,0,0,0,0,162,41,34,3,
0,0,0,7,101,0,0,0,0,0,0,0,208,40,36,2,30,30,70,0,105,0,0,0,0,0,0,0,197,40,
37,2,31,31,70,0,111,0,0,0,0,0,0,0,54,41,39,2,32,32,70,0,117,0,0,0,0,0,0,0,
37,41,40,2,33,33,70,0,116,0,0,0,8,0,4,0,242,41,47,4,0,72,0,7,112,0,0,0,8,0,
1,0,216,41,48,4,0,71,0,7,82,0,0,0,0,0,0,0,197,41,51,3,0,0,0,6,108,0,0,0,
0,0,0,0,156,41,55,3,0,0,0,7,106,0,0,0,0,2,0,0,3,42,57,3,0,0,0,7,108,47,
51,0,0,0,0,0,160,41,60,3,0,0,40,7,118,0,0,0,16,0,2,0,241,3,84,7,0,83,0,6,
115,0,0,0,40,0,4,0,201,41,89,6,0,88,0,3,86,0,0,0,0,0,0,0,82,41,108,2,28,28,
70,0,63,86,0,0,0,0,0,0,86,41,109,2,28,28,70,0,51,45,0,0,0,0,0,0,192,40,110,3,
0,0,0,7,63,105,0,0,0,0,0,0,201,40,111,2,31,31,70,0,51,0,0,0,2,0,0,0,190,40,
112,2,29,29,20,0,73,0,0,0,0,0,0,0,205,40,113,2,31,31,65,0,63,101,0,0,0,0,0,0,
212,40,114,2,30,30,70,0,69,0,0,0,0,0,0,0,216,40,115,2,30,30,70,0,63,69,0,0,0,0,
0,0,234,40,116,2,30,30,70,0,38,0,0,0,0,0,0,0,240,40,117,2,30,30,70,0,63,38,0,0,
0,0,0,0,4,41,118,2,30,30,70,0,38,35,0,0,0,0,0,0,10,41,119,2,30,30,70,0,63,38,
35,0,0,0,0,0,16,41,120,2,30,30,70,0,65,0,0,0,0,0,0,0,22,41,121,2,29,29,70,0,
63,65,0,0,0,0,0,0,30,41,122,2,29,29,70,0,63,117,0,0,0,0,0,0,50,41,123,2,33,33,
70,0,63,111,0,0,0,0,0,0,63,41,124,2,32,32,70,0,79,0,0,0,0,0,0,0,67,41,125,2,
32,32,70,0,63,79,0,0,0,0,0,0,76,41,126,2,32,32,70,0,48,0,0,0,0,0,0,0,90,41,
127,2,32,32,70,0,63,48,0,0,0,0,0,0,96,41,128,2,32,32,70,0,121,0,0,0,0,0,0,0,
102,41,129,2,31,31,70,0,63,121,0,0,0,0,0,0,106,41,130,2,31,31,70,0,89,0,0,0,0,0,
0,0,110,41,131,2,31,31,70,0,87,0,0,0,0,0,0,0,117,41,132,2,28,28,70,0,63,87,0,0,
0,0,0,0,121,41,133,2,28,28,70,0,87,35,0,0,0,0,0,0,125,41,134,2,28,28,70,0,63,87,
35,0,0,0,0,0,129,41,135,2,28,28,70,0,97,73,0,0,0,0,0,0,133,41,136,2,29,31,150,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,1,0,0,0,0,0,0,107,97,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,0,0,0,
2,0,0,0,38,42,13,2,28,28,60,0,116,35,0,0,8,0,4,0,245,4,25,4,0,0,0,2,114,0,
0,0,128,0,0,0,119,0,34,3,0,0,0,6,97,0,0,0,0,0,0,0,47,42,35,2,29,29,90,0,
101,0,0,0,0,0,0,0,42,42,36,2,30,30,90,0,105,0,0,0,0,0,0,0,40,42,37,2,31,31,
80,0,111,0,0,0,0,0,0,0,52,42,39,2,32,32,90,0,117,0,0,0,0,0,0,0,54,42,40,2,
33,33,90,0,116,0,0,0,8,0,4,0,90,6,47,4,0,0,0,2,112,0,0,0,8,0,1,0,55,6,
48,4,0,0,0,2,107,0,0,0,8,0,8,0,116,6,49,4,0,0,0,2,99,0,0,0,40,0,7,0,
103,6,80,4,0,0,0,2,81,0,0,0,16,0,8,0,88,42,100,7,0,101,0,6,112,35,0,0,8,0,
1,0,74,6,108,4,0,0,0,2,116,115,35,0,40,0,4,0,21,6,109,4,0,0,0,2,107,35,0,0,
8,0,8,0,56,42,110,4,0,81,0,2,100,122,0,0,48,0,4,0,34,6,111,5,0,112,0,5,116,115,
0,0,40,0,4,0,78,42,112,4,0,0,0,2,81,50,0,0,16,0,8,0,100,42,113,7,0,101,0,6,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,1,0,0,0,0,0,0,102,97,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,97,0,0,0,
0,0,0,0,118,42,35,2,31,31,80,0,101,0,0,0,0,0,0,0,120,42,36,2,31,31,80,0,105,0,
0,0,0,0,0,0,114,42,37,2,31,31,100,0,111,0,0,0,0,0,0,0,122,42,39,2,31,31,80,0,
117,0,0,0,0,0,0,0,116,42,40,2,31,31,100,0,65,0,0,0,0,0,0,0,112,42,108,2,31,31,
100,0,101,73,0,0,0,0,0,0,124,42,109,2,31,31,110,0,111,85,0,0,0,0,0,0,126,42,110,2,
31,31,110,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,3,0,0,0,0,0,0,114,119,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
58,0,0,0,0,0,0,0,0,0,12,9,0,0,60,0,97,0,0,0,0,0,0,0,128,42,35,2,29,29,
90,0,101,0,0,0,0,0,0,0,141,42,36,2,30,30,85,0,105,0,0,0,0,0,0,0,147,42,37,2,
31,31,75,0,111,0,0,0,0,0,0,0,153,42,39,2,32,32,85,0,117,0,0,0,0,0,0,0,159,42,
40,2,33,33,80,0,97,47,0,0,0,0,0,0,135,42,108,2,28,28,90,0,97,35,0,0,0,0,0,0,
165,42,124,2,28,28,50,0,101,35,0,0,0,0,0,0,169,42,125,2,30,30,50,0,105,35,0,0,0,0,
0,0,173,42,126,2,31,31,50,0,111,35,0,0,0,0,0,0,177,42,127,2,32,32,50,0,117,35,0,0,
0,0,0,0,181,42,128,2,33,33,50,0,43,0,0,0,0,0,0,0,185,42,129,1,0,30,0,0,43,50,
0,0,0,0,0,0,188,42,130,1,0,30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
8,1,0,0,0,0,0,0,112,114,115,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,105,0,0,0,0,0,0,0,191,42,37,2,31,31,85,0,111,0,0,0,
0,0,0,0,198,42,39,2,32,32,85,0,117,0,0,0,0,0,0,0,200,42,40,2,33,33,85,0,69,0,
0,0,0,0,0,0,194,42,108,2,30,30,85,0,65,0,0,0,0,0,0,0,196,42,109,2,29,29,90,0,
101,73,0,0,0,0,0,0,202,42,110,2,30,31,105,0,97,85,0,0,0,0,0,0,204,42,111,2,29,33,
115,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,34,0,0,0,0,0,0,115,108,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,58,0,
0,0,0,0,0,0,0,0,12,9,0,0,25,0,64,0,0,0,0,0,0,0,206,42,13,2,28,28,80,0,
97,0,0,0,0,0,0,0,212,42,35,2,29,29,85,0,101,0,0,0,0,0,0,0,217,42,36,2,30,30,
85,0,105,0,0,0,0,0,0,0,208,42,37,2,31,31,80,0,111,0,0,0,0,0,0,0,228,42,39,2,
32,32,85,0,117,0,0,0,0,0,0,0,210,42,40,2,33,33,80,0,116,0,0,0,8,0,3,0,238,42,
47,4,0,72,0,2,107,0,0,0,8,0,8,0,252,42,49,4,0,81,0,2,118,0,0,0,16,0,2,0,
241,3,84,7,0,0,0,6,69,0,0,0,0,0,0,0,222,42,109,2,30,30,80,0,69,35,0,0,0,0,
0,0,224,42,110,2,30,30,80,0,79,0,0,0,0,0,0,0,233,42,111,2,32,32,85,0,121,0,0,0,
0,0,0,0,32,43,112,2,31,31,85,0,101,43,0,0,0,0,0,0,220,42,121,2,30,30,90,0,111,43,
0,0,0,0,0,0,231,42,122,2,32,32,90,0,82,94,0,0,48,0,6,0,20,25,123,7,0,0,0,6,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,45,1,0,0,0,0,0,0,103,100,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,0,0,0,
2,0,0,0,36,43,13,2,28,28,65,0,42,0,0,0,16,0,4,0,143,43,16,5,0,0,0,5,97,0,
0,0,0,0,0,0,57,43,35,2,29,29,65,0,101,0,0,0,0,0,0,0,47,43,36,2,30,30,65,0,
105,0,0,0,0,0,0,0,41,43,37,2,31,31,65,0,111,0,0,0,0,0,0,0,68,43,39,2,32,32,
65,0,117,0,0,0,0,0,0,0,73,43,40,2,33,33,65,0,116,0,0,0,8,0,3,0,26,20,47,4,
0,0,0,2,82,0,0,0,128,0,0,0,136,0,51,3,0,0,0,6,98,0,0,0,8,0,1,0,133,32,
71,4,0,0,0,5,100,0,0,0,8,0,4,0,143,32,72,4,0,0,0,5,103,0,0,0,8,0,8,0,
156,32,81,4,0,0,0,5,83,0,0,0,40,2,7,0,138,43,91,6,0,0,0,0,73,0,0,0,2,0,
0,0,34,43,108,2,31,31,65,0,105,58,0,0,0,0,32,0,38,43,109,2,31,31,120,0,101,58,0,0,
0,0,32,0,44,43,110,2,30,30,120,0,69,58,0,0,0,0,32,0,50,43,111,2,30,30,120,0,69,0,
0,0,0,0,0,0,52,43,112,2,30,30,65,0,97,58,0,0,0,0,32,0,54,43,113,2,29,29,120,0,
97,50,0,0,0,0,0,0,60,43,114,2,29,29,65,0,79,58,0,0,0,0,32,0,62,43,115,2,32,32,
120,0,79,0,0,0,0,0,0,0,64,43,116,2,32,32,65,0,111,58,0,0,0,0,32,0,66,43,117,2,
32,32,120,0,117,58,0,0,0,0,32,0,70,43,118,2,33,33,120,0,117,45,0,0,0,0,32,0,79,43,
119,2,28,28,65,0,111,45,0,0,0,0,0,0,88,43,120,2,28,28,65,0,105,64,0,0,0,0,32,0,
93,43,121,2,31,28,120,0,105,97,0,0,0,0,32,0,96,43,122,2,31,28,120,0,117,64,0,0,0,0,
32,0,99,43,123,2,33,28,120,0,97,73,0,0,0,0,32,0,101,43,124,2,29,31,120,0,101,73,0,0,
0,0,32,0,104,43,125,2,30,31,120,0,64,73,0,0,0,0,32,0,106,43,126,2,28,31,120,0,117,45,
73,0,0,0,32,0,108,43,127,2,28,31,120,0,97,85,0,0,0,0,32,0,113,43,128,2,29,33,120,0,
79,85,0,0,0,0,32,0,116,43,129,2,28,33,120,0,100,59,0,0,40,0,6,0,122,20,130,4,0,0,
0,2,103,59,0,0,8,0,8,0,118,43,131,4,0,0,0,0,107,59,0,0,8,0,8,0,128,43,132,4,
0,0,0,0,116,59,0,0,40,2,7,0,131,20,133,4,0,0,0,2,110,91,0,0,16,0,4,0,220,1,
134,8,0,0,0,4,42,59,0,0,16,0,3,0,0,4,135,7,0,0,0,6,38,0,0,0,2,0,0,0,
170,43,136,2,28,28,65,0,35,0,0,0,8,0,12,0,208,43,137,6,0,0,0,0,104,35,0,0,8,0,
12,0,227,43,138,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,1,0,0,
0,0,0,0,110,115,111,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,97,0,0,0,0,0,0,0,236,43,35,2,28,28,90,0,101,0,0,0,0,0,0,0,
234,43,36,2,30,30,90,0,105,0,0,0,0,0,0,0,232,43,37,2,31,31,55,0,111,0,0,0,0,0,
0,0,238,43,39,2,32,32,90,0,117,0,0,0,0,0,0,0,240,43,40,2,33,33,85,0,116,0,0,0,
8,0,3,0,245,6,47,4,0,0,0,2,100,0,0,0,16,0,3,0,2,7,72,5,0,0,0,5,85,0,
0,0,0,0,0,0,198,6,108,2,33,33,90,0,69,0,0,0,0,0,0,0,187,6,109,2,30,30,90,0,
75,0,0,0,8,0,4,0,242,43,110,6,0,0,0,3,120,50,0,0,8,0,8,0,71,12,111,6,0,0,
0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,20,0,0,0,0,0,0,104,116,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,97,0,
0,0,0,0,0,0,4,44,35,2,29,29,85,0,101,0,0,0,0,0,0,0,6,44,36,2,30,30,85,0,
105,0,0,0,0,0,0,0,10,44,37,2,31,31,80,0,111,0,0,0,0,0,0,0,13,44,39,2,32,32,
85,0,117,0,0,0,0,0,0,0,17,44,40,2,33,33,90,0,69,0,0,0,0,0,0,0,8,44,112,2,
30,30,85,0,65,126,0,0,0,0,0,0,19,44,113,2,29,29,100,0,69,126,0,0,0,0,0,0,21,44,
114,2,30,30,100,0,79,126,0,0,0,0,0,0,23,44,116,2,32,32,100,0,79,0,0,0,0,0,0,0,
15,44,127,2,32,32,85,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,62,0,0,0,0,
0,0,97,122,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,64,0,0,0,0,0,0,0,47,44,13,2,28,28,90,0,97,0,0,0,0,0,0,0,42,44,
35,2,29,29,100,0,101,0,0,0,0,0,0,0,27,44,36,2,30,30,100,0,105,0,0,0,0,0,0,0,
25,44,37,2,31,31,90,0,111,0,0,0,0,0,0,0,40,44,39,2,32,32,100,0,117,0,0,0,0,0,
0,0,38,44,40,2,33,33,90,0,121,0,0,0,0,0,0,0,34,44,112,2,33,33,100,0,38,0,0,0,
0,0,0,0,29,44,125,2,30,30,100,0,87,0,0,0,0,0,0,0,36,44,126,2,28,28,100,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,1,0,0,0,0,0,0,97,107,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,97,0,0,0,0,0,
0,0,57,44,35,2,29,29,85,0,101,0,0,0,0,0,0,0,53,44,36,2,30,30,85,0,105,0,0,0,
0,0,0,0,51,44,37,2,31,31,85,0,111,0,0,0,0,0,0,0,61,44,39,2,32,32,85,0,117,0,
0,0,0,0,0,0,63,44,40,2,33,33,85,0,69,0,0,0,0,0,0,0,55,44,108,2,30,30,85,0,
79,0,0,0,0,0,0,0,59,44,109,2,32,32,85,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,15,1,0,0,0,0,0,0,97,109,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,64,0,0,0,0,0,0,0,79,44,13,2,28,28,110,0,114,0,
0,0,128,0,0,0,136,0,34,3,0,0,0,6,97,0,0,0,0,0,0,0,74,44,35,2,29,29,110,0,
101,0,0,0,0,0,0,0,68,44,36,2,30,30,110,0,105,0,0,0,0,0,0,0,65,44,37,2,31,31,
100,0,111,0,0,0,0,0,0,0,84,44,39,2,32,32,110,0,117,0,0,0,0,0,0,0,86,44,40,2,
33,33,110,0,98,0,0,0,16,0,1,0,98,44,71,5,0,0,0,0,120,0,0,0,8,0,8,0,136,44,
101,6,0,0,0,3,121,0,0,0,0,0,0,0,70,44,108,2,28,28,90,0,112,96,0,0,8,0,1,0,
88,44,109,4,0,71,0,2,116,96,0,0,8,0,4,0,104,44,110,4,0,72,0,2,116,83,96,0,40,0,
6,0,117,44,111,4,0,75,0,2,107,96,0,0,8,0,8,0,126,44,112,4,0,0,0,2,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,18,1,0,0,0,0,0,0,119,111,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,0,0,0,0,0,0,0,
142,44,13,2,28,28,70,0,97,0,0,0,0,0,0,0,160,44,35,2,29,29,70,0,101,0,0,0,0,0,
0,0,152,44,36,2,30,30,70,0,105,0,0,0,0,0,0,0,146,44,37,2,31,31,70,0,111,0,0,0,
0,0,0,0,168,44,39,2,32,32,70,0,117,0,0,0,0,0,0,0,172,44,40,2,33,33,70,0,64,58,
0,0,0,0,0,0,144,44,108,2,28,28,135,0,105,58,0,0,0,0,0,0,149,44,109,2,31,31,135,0,
101,58,0,0,0,0,0,0,154,44,110,2,30,30,135,0,69,0,0,0,0,0,0,0,156,44,111,2,30,30,
70,0,69,58,0,0,0,0,0,0,158,44,112,2,30,30,135,0,97,58,0,0,0,0,0,0,162,44,113,2,
29,29,135,0,79,0,0,0,0,0,0,0,164,44,114,2,32,32,70,0,79,58,0,0,0,0,0,0,166,44,
115,2,32,32,135,0,111,58,0,0,0,0,0,0,170,44,116,2,32,32,135,0,117,58,0,0,0,0,0,0,
174,44,117,2,33,33,135,0,115,50,0,0,40,0,4,0,167,6,118,6,0,0,0,3,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,14,23,0,0,0,0,0,0,100,118,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,97,0,0,0,0,0,0,0,176,44,
35,2,29,29,65,0,101,0,0,0,0,0,0,0,181,44,36,2,30,30,65,0,105,0,0,0,0,0,0,0,
185,44,37,2,31,31,65,0,111,0,0,0,0,0,0,0,189,44,39,2,32,32,65,0,117,0,0,0,0,0,
0,0,193,44,40,2,33,33,55,0,116,0,0,0,8,0,3,0,245,6,47,4,0,0,0,2,118,0,0,0,
16,0,2,0,204,3,84,7,0,0,0,6,105,58,0,0,0,0,0,0,187,44,112,2,31,31,135,0,101,58,
0,0,0,0,0,0,183,44,114,2,30,30,125,0,97,58,0,0,0,0,0,0,179,44,118,2,29,29,150,0,
111,58,0,0,0,0,0,0,191,44,119,2,32,32,150,0,117,58,0,0,0,0,0,0,195,44,123,2,33,33,
145,0,97,73,0,0,0,0,0,0,197,44,134,2,29,31,140,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,18,23,0,0,0,0,0,0,116,101,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,0,0,0,0,0,0,0,199,44,13,2,29,29,65,0,
114,0,0,0,128,0,0,0,136,0,34,3,0,0,0,6,97,0,0,0,0,0,32,0,201,44,35,2,29,29,
65,0,101,0,0,0,0,0,0,0,205,44,36,2,30,30,65,0,105,0,0,0,0,0,0,0,209,44,37,2,
31,31,65,0,111,0,0,0,0,0,0,0,213,44,39,2,32,32,65,0,117,0,0,0,0,0,0,0,217,44,
40,2,33,33,55,0,118,0,0,0,16,0,2,0,204,3,84,7,0,0,0,6,105,58,0,0,0,0,0,0,
211,44,112,2,31,31,135,0,101,58,0,0,0,0,0,0,207,44,114,2,30,30,135,0,97,58,0,0,0,0,
0,0,203,44,118,2,29,29,150,0,111,58,0,0,0,0,0,0,215,44,119,2,32,32,150,0,117,58,0,0,
0,0,0,0,219,44,123,2,33,33,140,0,97,73,0,0,0,0,32,0,221,44,134,2,29,31,140,0,97,85,
0,0,0,0,32,0,223,44,135,2,29,33,135,0,116,46,35,0,8,0,5,0,225,44,141,4,0,142,0,2,
100,46,35,0,16,0,5,0,240,44,142,5,0,141,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,24,23,0,0,0,0,0,0,115,105,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,64,0,0,0,0,0,0,0,2,45,13,2,29,29,75,0,114,0,
0,0,0,0,128,0,71,0,34,3,0,0,0,7,97,0,0,0,0,0,32,0,4,45,35,2,29,29,75,0,
101,0,0,0,0,0,0,0,15,45,36,2,30,30,75,0,105,0,0,0,0,0,0,0,19,45,37,2,31,31,
75,0,111,0,0,0,0,0,0,0,23,45,39,2,32,32,75,0,117,0,0,0,0,0,0,0,27,45,40,2,
33,33,65,0,116,0,0,0,8,0,3,0,245,6,47,4,0,0,0,2,118,0,0,0,16,0,2,0,204,3,
84,7,0,0,0,6,105,58,0,0,0,0,0,0,21,45,112,2,31,31,150,0,101,58,0,0,0,0,0,0,
17,45,114,2,30,30,150,0,38,58,0,0,0,0,0,0,13,45,117,2,30,30,150,0,97,58,0,0,0,0,
0,0,9,45,118,2,29,29,150,0,111,58,0,0,0,0,0,0,25,45,119,2,32,32,150,0,117,58,0,0,
0,0,0,0,29,45,123,2,33,33,150,0,97,73,0,0,0,0,32,0,31,45,134,2,29,31,150,0,97,85,
0,0,0,0,32,0,33,45,135,2,29,33,150,0,38,0,0,0,0,0,0,0,11,45,148,2,30,30,75,0,
109,35,0,0,16,0,1,0,35,45,149,8,0,0,0,4,110,35,0,0,16,0,4,0,41,45,150,8,0,0,
0,4,110,46,35,0,16,0,5,0,47,45,151,8,50,0,0,4,110,94,35,0,16,2,7,0,53,45,152,8,
0,0,0,4,78,35,0,0,16,0,8,0,59,45,153,8,0,0,0,8,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,7,23,0,0,0,0,0,0,103,117,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,86,0,0,0,0,0,0,16,73,45,109,2,28,28,
70,0,111,58,0,0,0,0,32,0,113,45,119,2,32,32,113,0,97,73,0,0,0,0,32,0,65,45,134,2,
28,31,120,0,97,85,0,0,0,0,32,0,69,45,135,2,29,33,120,0,97,73,126,0,0,0,32,0,67,45,
148,2,28,31,135,0,97,85,126,0,0,0,32,0,71,45,149,2,29,33,150,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,12,24,0,0,0,0,0,0,97,115,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,97,0,0,0,0,0,0,0,133,45,35,2,
29,29,112,0,101,0,0,0,0,0,0,0,139,45,36,2,30,30,105,0,105,0,0,0,0,0,0,0,135,45,
37,2,31,31,105,0,111,0,0,0,0,0,0,0,143,45,39,2,32,32,105,0,117,0,0,0,0,0,0,0,
137,45,40,2,33,33,105,0,116,83,0,0,40,0,6,0,23,5,76,4,0,0,0,2,86,0,0,0,0,0,
0,16,115,45,109,2,32,32,100,0,79,0,0,0,0,0,0,0,147,45,121,2,32,32,100,0,38,0,0,0,
0,0,0,0,141,45,148,2,29,29,105,0,116,83,35,0,40,0,6,0,23,5,149,4,0,0,0,2,126,0,
0,0,0,0,0,0,0,0,150,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
12,24,0,0,0,0,0,0,111,114,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,97,0,0,0,0,0,0,0,153,45,35,2,29,29,112,0,101,0,0,0,
0,0,0,0,163,45,36,2,30,30,105,0,105,0,0,0,0,0,0,0,159,45,37,2,31,31,105,0,111,0,
0,0,0,0,0,0,167,45,39,2,32,32,105,0,117,0,0,0,0,0,0,0,161,45,40,2,33,33,105,0,
116,83,0,0,40,0,6,0,173,45,76,4,0,75,0,2,86,0,0,0,0,0,0,16,149,45,109,2,32,32,
100,0,79,0,0,0,0,0,0,0,171,45,121,2,32,32,100,0,38,0,0,0,0,0,0,0,165,45,148,2,
29,29,105,0,116,83,35,0,40,0,6,0,182,45,149,4,0,75,0,2,126,0,0,0,0,0,0,0,0,0,
150,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,24,0,0,0,0,0,0,
109,110,105,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,97,0,0,0,0,0,0,0,191,45,35,2,29,29,112,0,101,0,0,0,0,0,0,0,201,45,36,2,
30,30,105,0,105,0,0,0,0,0,0,0,197,45,37,2,31,31,105,0,111,0,0,0,0,0,0,0,205,45,
39,2,32,32,105,0,117,0,0,0,0,0,0,0,199,45,40,2,33,33,105,0,116,83,0,0,40,0,6,0,
211,45,76,4,0,75,0,2,79,0,0,0,0,0,0,0,209,45,121,2,32,32,100,0,38,0,0,0,0,0,
0,0,203,45,148,2,29,29,105,0,116,83,35,0,40,0,6,0,220,45,149,4,0,75,0,2,126,0,0,0,
0,0,0,0,0,0,150,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27,1,
0,0,0,0,0,0,116,110,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,64,0,0,0,2,0,0,0,4,46,13,2,28,28,70,0,114,0,0,0,128,0,
128,0,129,46,34,3,0,0,0,6,97,0,0,0,0,0,0,0,31,46,35,2,29,29,90,0,101,0,0,0,
0,0,0,0,19,46,36,2,30,30,90,0,105,0,0,0,0,0,0,0,11,46,37,2,31,31,85,0,111,0,
0,0,0,0,0,0,43,46,39,2,32,32,90,0,117,0,0,0,0,0,0,0,46,46,40,2,33,33,85,0,
114,45,0,0,0,0,128,0,240,45,44,3,0,0,0,0,114,47,0,0,0,0,0,0,157,46,46,3,0,0,
0,7,116,0,0,0,8,0,3,0,245,6,47,4,0,0,0,2,108,0,0,0,0,0,0,0,91,7,55,3,
0,0,0,7,100,0,0,0,16,0,3,0,2,7,72,5,0,0,0,5,116,83,0,0,40,0,6,0,166,46,
76,4,0,75,0,2,116,83,59,0,40,2,7,0,175,46,78,4,0,77,0,2,73,0,0,0,0,0,0,0,
13,46,108,2,31,31,65,0,73,50,0,0,2,0,0,0,16,46,109,2,31,31,65,0,101,64,0,0,0,0,
0,0,22,46,110,2,31,28,115,0,69,0,0,0,2,0,0,0,28,46,111,2,30,30,70,0,65,64,0,0,
0,0,0,0,35,46,112,2,29,29,115,0,79,0,0,0,0,0,0,0,41,46,113,2,32,32,70,0,85,0,
0,0,0,0,0,0,48,46,114,2,32,32,75,0,116,115,0,0,40,0,4,0,50,46,115,4,0,0,0,2,
107,104,0,0,8,0,8,0,63,46,116,4,0,81,0,2,107,45,0,0,8,0,8,0,79,46,117,4,0,81,
0,2,75,0,0,0,8,0,4,0,92,46,118,6,0,0,0,3,112,104,0,0,8,0,1,0,110,46,119,4,
0,71,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,1,0,0,0,0,0,0,109,116,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
58,0,0,0,0,0,0,0,0,0,12,9,0,0,80,0,97,0,0,0,0,0,0,0,196,46,35,2,29,29,
85,0,101,0,0,0,0,0,0,0,194,46,36,2,30,30,75,0,105,0,0,0,0,0,32,0,210,46,37,2,
29,31,145,0,111,0,0,0,0,0,0,0,198,46,39,2,32,32,77,0,117,0,0,0,0,0,0,0,202,46,
40,2,33,33,70,0,112,0,0,0,8,0,1,0,226,6,48,4,0,71,0,2,107,0,0,0,8,0,8,0,
29,7,49,4,0,81,0,2,100,0,0,0,16,0,3,0,255,46,72,5,0,47,0,5,118,0,0,0,16,0,
2,0,242,46,84,7,0,83,0,6,104,0,0,0,8,0,12,0,26,47,107,6,0,0,0,3,73,0,0,0,
0,0,0,0,191,46,108,2,31,31,65,0,89,0,0,0,0,0,0,0,200,46,109,2,28,28,77,0,85,0,
0,0,0,0,0,0,204,46,110,2,33,33,70,0,121,0,0,0,0,0,0,0,206,46,111,2,33,33,75,0,
97,105,0,0,0,0,32,0,208,46,112,2,29,31,155,0,111,105,0,0,0,0,32,0,212,46,113,2,32,31,
140,0,101,105,0,0,0,0,32,0,214,46,114,2,30,31,140,0,89,105,0,0,0,0,32,0,216,46,115,2,
28,31,135,0,117,105,0,0,0,0,32,0,218,46,116,2,33,31,135,0,121,105,0,0,0,0,32,0,220,46,
117,2,33,31,135,0,97,117,0,0,0,0,32,0,222,46,118,2,29,33,150,0,111,117,0,0,0,0,32,0,
224,46,119,2,32,33,140,0,101,117,0,0,0,0,32,0,226,46,120,2,30,33,140,0,105,117,0,0,0,0,
32,0,228,46,121,2,31,33,140,0,101,121,0,0,0,0,32,0,230,46,122,2,30,33,140,0,89,121,0,0,
0,0,32,0,232,46,123,2,28,33,135,0,105,121,0,0,0,0,32,0,234,46,124,2,31,33,130,0,117,111,
0,0,0,0,32,0,236,46,125,2,33,32,140,0,105,101,0,0,0,0,32,0,238,46,126,2,31,30,140,0,
121,89,0,0,0,0,32,0,240,46,127,2,33,28,140,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,10,23,0,0,0,0,0,0,98,111,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,97,0,0,0,0,0,0,0,46,47,35,2,29,29,90,0,101,0,
0,0,0,0,0,0,48,47,36,2,30,30,90,0,105,0,0,0,0,0,0,0,50,47,37,2,31,31,90,0,
111,0,0,0,0,0,0,0,52,47,39,2,32,32,90,0,117,0,0,0,0,0,0,0,54,47,40,2,33,33,
90,0,116,115,0,0,40,0,4,0,56,47,148,4,0,149,0,2,100,122,0,0,48,0,4,0,69,47,149,5,
0,148,0,5,116,115,35,0,40,0,4,0,90,47,150,4,0,149,0,2,100,122,35,0,48,0,4,0,103,47,
151,5,0,148,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,1,0,0,0,0,0,0,
107,107,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,114,0,0,0,128,0,0,0,136,0,34,3,0,0,0,6,97,0,0,0,0,0,0,0,142,47,35,2,
29,29,100,0,101,0,0,0,0,0,0,16,146,47,36,2,30,30,100,0,105,0,0,0,0,0,0,0,150,47,
37,2,31,31,90,0,111,0,0,0,0,0,0,0,152,47,39,2,32,32,100,0,117,0,0,0,0,0,0,0,
156,47,40,2,33,33,100,0,116,0,0,0,8,0,3,0,245,6,47,4,0,0,0,2,108,0,0,0,0,0,
0,0,168,47,55,3,0,0,0,0,76,0,0,0,0,0,0,0,54,38,64,3,0,0,0,7,88,0,0,0,
8,0,10,0,158,47,106,6,0,0,0,3,73,0,0,0,0,0,0,16,124,47,108,2,28,28,50,0,56,0,
0,0,0,0,0,0,128,47,109,2,28,28,50,0,117,35,0,0,0,0,0,16,132,47,110,2,13,13,50,0,
85,0,0,0,0,0,0,0,136,47,111,2,33,33,50,0,65,0,0,0,0,0,0,0,140,47,112,2,29,29,
100,0,38,0,0,0,0,0,0,16,144,47,113,2,29,29,100,0,69,0,0,0,0,0,0,0,148,47,114,2,
13,13,100,0,89,0,0,0,0,0,0,16,154,47,115,2,28,28,100,0,71,0,0,0,16,0,10,0,180,0,
116,7,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,1,0,0,0,0,0,0,
116,116,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,114,0,0,0,128,0,0,0,136,0,34,3,0,0,0,6,97,0,0,0,0,0,0,0,214,47,35,2,
29,29,90,0,101,0,0,0,0,0,0,16,181,47,36,2,28,28,55,0,105,0,0,0,0,0,0,16,175,47,
37,2,31,31,90,0,111,0,0,0,0,0,0,32,185,47,39,2,32,32,55,0,117,0,0,0,0,0,0,32,
179,47,40,2,33,33,90,0,116,0,0,0,8,0,3,0,245,6,47,4,0,0,0,2,107,0,0,0,8,0,
8,0,235,47,49,4,0,0,0,0,108,0,0,0,0,0,0,0,251,47,55,3,0,0,0,0,100,0,0,0,
16,0,3,0,36,3,72,5,0,0,0,5,103,0,0,0,16,0,8,0,243,47,81,7,0,0,0,0,121,0,
0,0,0,0,0,16,177,47,108,2,33,33,90,0,87,0,0,0,0,0,0,16,183,47,109,2,28,28,55,0,
86,0,0,0,0,0,0,32,187,47,110,2,28,28,55,0,38,0,0,0,0,0,0,16,191,47,111,2,30,30,
90,0,65,0,0,0,0,0,0,32,193,47,112,2,29,29,90,0,48,0,0,0,0,0,0,32,208,47,113,2,
32,32,90,0,101,58,0,0,0,0,0,16,210,47,114,2,30,30,120,0,73,0,0,0,0,0,0,16,212,47,
115,2,31,31,55,0,117,50,0,0,0,0,0,0,221,47,116,2,33,33,90,0,101,50,0,0,0,0,0,0,
229,47,117,2,28,28,50,0,71,0,0,0,16,0,10,0,207,4,118,7,0,0,0,6,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,19,1,0,0,0,0,0,0,107,111,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,0,0,0,0,0,0,0,11,48,
13,2,28,28,100,0,42,0,0,0,16,0,132,0,67,48,16,5,0,0,0,3,97,0,0,0,0,0,0,0,
3,48,35,2,29,29,100,0,111,0,0,0,0,0,0,0,15,48,39,2,32,32,100,0,117,0,0,0,0,0,
0,0,19,48,40,2,33,33,100,0,100,90,59,0,48,2,6,0,56,48,77,5,0,0,0,2,116,83,59,0,
40,2,6,0,47,48,78,4,0,0,0,2,69,0,0,0,0,0,0,0,7,48,108,2,30,30,100,0,117,45,
0,0,0,0,0,0,23,48,109,2,33,33,100,0,107,45,0,0,8,0,8,0,27,48,110,4,0,0,50,3,
107,104,0,0,8,0,8,0,129,6,111,4,0,0,0,2,116,45,0,0,8,0,4,0,37,48,112,4,0,0,
0,3,112,45,0,0,8,0,1,0,55,6,113,4,0,0,0,2,112,104,0,0,8,0,1,0,74,6,114,4,
0,0,0,2,115,45,0,0,40,0,4,0,128,5,115,6,0,0,0,3,113,45,0,0,8,0,10,0,90,5,
116,4,0,0,0,2,116,83,59,45,40,2,7,0,32,5,117,4,0,0,0,2,100,45,0,0,16,0,4,0,
15,3,118,5,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,1,0,0,0,0,
0,0,107,108,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,58,0,0,0,0,0,0,0,0,0,12,9,0,0,60,0,114,0,0,0,16,0,10,0,180,0,
34,7,0,0,0,6,97,0,0,0,0,0,0,0,83,48,35,2,29,29,75,0,101,0,0,0,0,0,0,0,
208,40,36,2,30,30,70,0,105,0,0,0,0,0,0,0,90,48,37,2,31,31,75,0,111,0,0,0,0,0,
0,0,92,48,39,2,32,32,75,0,117,0,0,0,0,0,0,0,94,48,40,2,33,33,75,0,69,0,0,0,
0,0,0,0,85,48,108,2,30,30,75,0,97,73,0,0,0,0,0,0,96,48,109,2,29,31,125,0,38,0,
0,0,0,0,0,0,240,40,110,2,30,30,70,0,86,0,0,0,0,0,0,0,82,41,111,2,28,28,70,0,
79,0,0,0,0,0,0,0,67,41,112,2,32,32,70,0,121,0,0,0,0,0,0,0,102,41,113,2,31,31,
70,0,87,0,0,0,0,0,0,0,117,41,114,2,28,28,70,0,51,0,0,0,2,0,0,0,190,40,115,2,
29,29,20,0,116,108,35,0,8,0,4,0,98,48,116,4,0,0,0,2,116,115,0,0,40,0,4,0,21,6,
117,4,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,3,0,0,0,0,0,0,
101,117,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,114,0,0,0,16,64,132,0,219,48,34,5,0,0,0,3,97,0,0,0,0,0,0,0,111,48,35,2,
29,29,100,0,101,0,0,0,0,0,0,0,117,48,36,2,30,30,100,0,105,0,0,0,0,0,0,0,119,48,
37,2,31,31,95,0,111,0,0,0,0,0,0,0,122,48,39,2,32,32,100,0,117,0,0,0,0,0,0,0,
124,48,40,2,33,33,100,0,116,0,0,0,8,0,3,0,202,48,47,4,0,0,0,2,98,0,0,0,16,0,
1,0,4,29,71,5,0,0,0,0,100,0,0,0,16,0,3,0,247,28,72,5,0,0,0,0,103,0,0,0,
16,0,8,0,217,28,81,5,0,0,0,5,122,0,0,0,40,0,4,0,143,48,88,6,0,0,0,3,115,0,
0,0,40,0,4,0,128,48,89,6,0,0,0,3,89,0,0,0,0,0,0,0,126,48,113,2,28,28,100,0,
116,115,0,0,40,0,4,0,171,48,123,4,0,0,0,2,97,50,0,0,0,0,0,0,113,48,124,2,29,29,
100,0,116,122,0,0,40,0,4,0,187,48,125,4,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0];
var phonindex=[1,72,1,0,0,161,213,131,0,0,0,0,0,162,18,130,0,0,0,0,0,192,2,0,0,176,86,0,2,13,
153,201,16,52,34,36,1,13,0,32,25,10,0,176,135,0,0,176,184,0,0,176,249,0,38,5,0,176,58,1,
0,176,123,1,0,176,188,1,3,13,204,109,0,169,134,40,95,10,2,47,0,176,253,1,0,176,94,2,3,13,
204,110,0,169,134,40,95,10,2,47,0,176,191,2,0,176,16,3,4,13,139,197,169,204,0,176,97,3,192,195,
178,3,3,13,204,114,0,169,0,176,53,4,3,13,204,108,0,169,0,176,134,4,2,13,185,201,138,41,46,1,
6,106,16,223,199,4,16,223,248,4,16,223,41,5,16,223,90,5,16,223,139,5,16,223,188,5,2,39,224,236,
237,5,0,39,0,176,14,6,47,48,48,48,49,32,0,176,63,6,0,176,96,6,50,34,5,104,0,176,145,6,
0,240,178,6,47,48,48,48,49,32,0,176,136,11,138,39,0,176,185,11,0,176,234,11,0,240,178,6,1,13,
0,114,52,36,1,13,0,32,0,161,25,3,75,1,96,170,0,162,18,34,75,9,96,170,0,176,11,12,16,244,
60,12,1,13,0,114,0,161,25,3,73,1,98,170,0,162,18,34,73,9,98,170,0,176,255,13,32,243,64,14,
1,13,0,114,0,161,25,3,64,9,118,90,0,162,18,2,64,9,98,90,6,106,16,223,199,4,16,223,248,4,
16,223,41,5,16,223,90,5,16,223,139,5,16,223,188,5,2,39,224,236,237,5,0,176,255,13,0,240,219,16,
2,13,128,202,138,41,5,104,0,176,236,17,32,243,45,18,0,176,236,17,176,244,45,18,6,106,0,208,239,21,
0,208,32,22,0,208,65,22,96,223,98,22,0,208,147,22,0,208,212,22,1,0,138,41,56,1,138,41,17,104,
6,108,64,236,5,23,128,237,70,23,32,238,135,23,32,238,184,23,128,237,249,23,128,237,74,24,0,176,139,24,
1,0,0,145,192,0,28,32,224,236,172,24,4,96,2,39,128,237,172,24,0,39,0,176,205,24,47,32,0,176,
254,24,56,32,0,176,31,25,0,176,64,25,2,41,55,1,6,108,64,236,5,23,128,237,70,23,32,238,135,23,
32,238,184,23,128,237,249,23,128,237,74,24,57,37,0,176,135,23,58,37,0,176,135,23,0,176,139,24,2,41,
55,1,0,145,192,0,57,37,0,176,97,25,58,37,0,176,146,25,6,108,64,236,211,25,224,236,20,26,128,237,
97,25,32,238,85,26,224,236,150,26,128,237,146,25,1,0,2,41,55,1,6,108,0,224,231,26,0,224,8,27,
0,224,41,27,0,224,74,27,0,224,123,27,192,238,172,27,0,176,139,24,2,13,142,202,1,162,30,82,0,0,
0,0,6,106,0,208,205,27,0,208,254,27,0,208,47,28,0,208,96,28,0,208,145,28,0,208,210,28,0,39,
0,176,19,29,0,176,84,29,2,13,173,201,0,176,149,29,138,41,63,1,128,237,198,29,0,39,0,176,247,29,
0,176,56,30,2,41,23,104,6,106,0,208,105,30,0,208,154,30,0,208,203,30,0,208,252,30,0,208,45,31,
0,208,94,31,32,238,143,31,8,44,3,104,0,176,176,31,0,176,209,31,11,96,0,162,25,18,0,0,0,0,
31,32,3,104,0,176,2,32,0,176,67,32,1,0,2,43,21,104,6,106,0,208,116,32,0,208,181,32,0,208,
246,32,0,208,55,33,0,208,104,33,0,208,185,33,32,238,234,33,0,39,3,104,0,176,11,34,7,96,0,162,
35,18,0,0,0,0,0,176,44,34,1,0,31,32,1,13,0,32,138,41,1,1,6,106,0,208,93,34,0,208,
142,34,0,208,191,34,0,208,240,34,0,208,33,35,0,208,98,35,31,32,128,237,147,35,0,39,0,176,180,35,
1,0,0,162,18,34,75,9,84,65,2,47,11,104,0,161,25,3,75,1,212,114,133,41,3,104,0,176,213,35,
0,176,22,36,6,106,0,208,87,36,0,208,152,36,0,208,217,36,0,208,26,37,0,208,107,37,0,208,172,37,
138,39,3,43,0,176,237,37,0,39,0,176,30,38,138,41,0,176,63,38,1,0,0,162,146,50,77,9,94,162,
2,47,7,104,0,161,25,3,79,1,222,154,0,176,112,38,6,106,0,208,177,38,0,208,242,38,0,208,51,39,
0,208,116,39,0,208,181,39,0,208,246,39,138,39,3,43,0,176,55,40,0,55,50,32,0,176,104,40,138,41,
0,176,137,40,1,0,2,13,179,201,0,161,153,18,69,73,98,170,0,162,146,50,69,73,98,170,2,47,0,176,
186,40,6,106,0,208,251,40,0,208,60,41,0,208,125,41,0,208,190,41,0,208,255,41,0,208,64,42,138,39,
3,43,0,176,55,40,0,55,66,32,0,176,129,42,138,41,0,176,162,42,1,0,2,13,178,201,0,162,23,114,
81,13,114,205,2,47,5,104,0,208,211,42,0,176,244,42,6,106,0,208,53,43,0,208,150,43,0,208,231,43,
0,208,72,44,0,208,169,44,0,208,26,45,0,39,0,176,123,45,138,41,10,104,67,36,3,104,37,10,4,96,
67,37,2,104,50,10,0,176,156,45,1,0,0,162,148,50,75,13,110,189,2,47,11,104,0,161,25,3,79,1,
42,172,133,41,3,104,0,176,237,45,0,176,46,46,6,106,0,208,111,46,0,208,160,46,0,208,209,46,0,208,
2,47,0,208,51,47,0,208,100,47,31,32,128,237,149,47,138,39,3,43,0,176,198,47,0,39,0,176,231,47,
138,41,0,176,8,48,1,0,2,13,190,201,0,162,136,20,73,13,96,170,0,161,10,19,77,9,96,170,31,48,
30,32,0,176,57,48,0,176,138,48,2,13,190,201,14,37,1,13,0,114,30,50,31,34,13,104,0,161,25,3,
75,1,94,170,0,176,219,48,96,249,178,6,0,176,219,48,96,249,178,6,0,161,25,3,75,9,94,170,29,34,
5,104,0,176,12,49,128,252,178,6,34,34,0,176,77,49,0,162,153,20,75,13,222,169,0,161,25,3,75,1,
94,170,0,176,12,49,128,252,178,6,0,162,136,20,71,77,220,169,0,161,10,19,71,9,220,169,138,41,0,176,
110,49,0,176,191,49,0,162,18,34,73,9,84,73,1,47,0,176,16,50,2,47,15,104,0,161,213,3,73,5,
84,73,133,41,5,104,0,176,65,50,0,240,114,50,0,176,65,50,0,240,120,51,133,41,5,104,0,176,209,51,
0,240,114,50,14,34,5,104,0,176,2,52,0,240,120,51,28,34,5,104,0,176,67,52,0,240,120,51,29,34,
5,104,0,176,132,52,0,240,120,51,30,34,5,104,0,176,197,52,0,240,120,51,31,34,5,104,0,176,6,53,
0,240,120,51,32,34,5,104,0,176,71,53,0,240,120,51,33,34,5,104,0,176,136,53,0,240,120,51,0,176,
201,53,0,240,120,51,0,161,213,3,77,5,98,170,0,162,18,34,77,9,98,170,1,47,0,176,10,54,133,41,
5,104,0,176,59,54,0,240,108,54,0,176,118,55,0,240,167,55,0,161,213,3,76,9,94,170,0,162,18,2,
76,9,94,170,1,47,0,176,10,54,133,41,5,104,0,176,59,54,0,240,108,54,34,34,5,104,0,176,77,49,
64,246,46,56,0,176,118,55,64,246,46,56,0,161,213,3,81,9,238,188,0,162,18,34,81,9,46,173,1,47,
0,176,231,56,133,41,5,104,0,176,24,57,0,240,73,57,0,176,215,59,0,240,8,60,3,13,202,100,0,145,
0,161,227,83,85,9,246,221,0,162,18,2,85,9,246,221,1,47,0,176,231,56,2,47,11,104,133,41,5,104,
0,176,24,57,0,240,73,57,0,176,215,59,0,240,11,61,133,41,5,104,0,176,24,57,0,240,73,57,0,176,
215,59,0,240,11,61,0,161,227,83,85,9,246,221,0,162,18,2,85,41,246,221,1,47,0,176,35,62,2,47,
11,104,133,41,5,104,0,176,84,62,48,242,8,60,0,176,133,62,208,242,8,60,133,41,5,104,0,176,182,62,
48,242,8,60,0,176,231,62,208,242,8,60,0,161,213,3,73,9,238,172,0,162,18,34,73,9,46,173,1,47,
0,176,24,63,133,41,5,104,0,176,73,63,0,240,122,63,0,176,106,64,96,249,155,64,0,161,25,3,173,9,
84,90,0,162,25,18,13,9,84,73,2,47,11,104,133,41,5,104,0,176,61,65,0,240,110,65,0,176,174,67,
0,240,110,65,133,41,5,104,0,176,223,67,0,240,110,65,0,176,16,68,0,240,110,65,0,161,25,3,169,1,
84,90,0,162,25,18,9,1,84,73,2,47,15,104,0,162,25,50,9,5,84,73,133,41,5,104,0,176,61,65,
0,240,110,65,0,176,65,68,96,249,110,65,133,41,5,104,0,176,223,67,0,240,110,65,134,40,3,43,35,10,
0,176,114,68,0,240,110,65,2,13,139,202,0,161,25,3,169,1,84,90,0,162,25,18,9,1,84,73,133,41,
0,176,179,68,0,176,228,68,0,162,25,18,13,1,98,170,2,47,0,161,25,3,15,0,90,170,133,41,5,104,
0,176,37,69,0,240,86,69,0,176,152,71,0,240,86,69,0,162,25,18,13,1,98,170,2,47,9,104,0,161,
25,3,15,0,92,170,0,162,25,50,13,5,92,170,133,41,5,104,0,176,201,71,96,244,250,71,0,176,167,74,
80,245,250,71,0,161,25,3,75,1,232,171,0,162,18,34,75,9,232,171,2,47,11,104,133,41,5,104,0,176,
216,74,0,240,9,75,0,176,99,77,32,248,9,75,133,41,5,104,0,176,148,77,0,240,9,75,0,176,197,77,
32,248,9,75,2,13,144,202,0,161,25,3,73,1,100,171,0,162,18,34,73,9,100,171,2,47,11,104,133,41,
5,104,0,176,216,74,0,240,246,77,0,176,99,77,0,240,246,77,133,41,5,104,0,176,148,77,0,240,246,77,
0,176,197,77,0,240,246,77,2,13,145,202,0,161,35,83,85,9,246,221,0,162,18,34,73,9,46,173,133,41,
5,104,0,176,26,80,0,245,75,80,0,176,12,83,0,245,61,83,2,13,145,202,0,161,35,83,85,9,246,221,
0,162,18,34,73,9,46,173,133,41,5,104,0,176,26,80,0,240,139,85,0,176,12,83,0,245,61,88,2,13,
157,202,0,161,25,3,51,5,246,221,0,162,50,18,51,5,246,221,0,176,138,90,144,241,203,90,0,161,25,3,
77,9,238,188,0,162,18,34,73,9,46,173,2,47,11,104,133,41,5,104,0,176,145,92,0,240,194,92,0,176,
197,94,0,240,246,94,133,41,5,104,0,176,249,96,0,240,194,92,0,176,42,97,0,240,246,94,0,161,25,3,
83,9,246,221,0,162,18,34,83,9,54,220,133,41,5,104,0,176,249,96,0,240,194,92,0,176,42,97,0,240,
246,94,2,13,129,202,133,41,5,104,0,176,91,97,192,243,156,97,0,176,91,97,0,245,156,97,0,161,213,26,
75,1,84,115,0,162,210,18,73,1,84,65,133,41,0,192,91,100,34,34,96,196,95,102,51,50,52,34,0,192,
95,102,14,34,0,192,113,103,55,34,0,192,60,104,0,192,58,105,0,161,213,3,77,1,98,170,0,162,146,18,
77,1,98,162,133,41,0,192,22,106,34,50,51,50,52,34,0,192,70,107,14,34,32,195,30,109,160,197,34,110,
0,161,21,28,77,5,158,162,0,162,146,18,77,1,94,162,133,41,48,194,30,109,96,196,47,111,0,161,213,3,
77,1,238,188,133,41,0,192,226,111,0,192,50,114,3,13,201,116,0,149,0,161,227,83,85,1,246,221,133,41,
0,192,194,115,0,192,194,115,0,161,227,83,85,1,246,221,0,162,25,18,51,37,246,221,133,41,224,193,131,117,
96,201,150,118,0,161,213,3,75,1,238,172,0,162,146,18,75,1,110,189,2,47,0,162,146,18,75,1,238,172,
133,41,0,192,66,119,34,50,51,50,52,34,0,192,113,120,31,50,38,34,0,192,1,122,55,34,0,192,115,123,
14,34,96,196,255,124,0,192,52,126,6,161,213,19,73,5,226,155,2,162,146,20,73,5,98,155,133,41,128,194,
105,127,33,34,0,197,196,127,0,195,105,127,0,162,18,2,75,1,84,65,0,41,0,192,12,128,0,192,192,130,
0,161,25,3,77,1,98,170,0,162,146,18,77,1,98,162,0,41,0,192,188,132,0,192,220,134,0,161,25,3,
77,1,98,170,0,162,146,18,77,1,98,162,0,41,0,192,250,71,48,50,47,50,49,34,0,192,2,137,0,192,
46,139,0,161,25,3,77,1,106,172,0,162,18,2,77,1,106,172,0,41,0,192,22,141,0,192,194,143,2,13,
130,202,0,161,25,3,73,1,100,171,0,162,18,2,73,1,100,171,0,41,192,195,46,146,160,197,46,146,2,13,
130,202,0,161,35,83,51,5,246,221,0,162,35,82,51,5,246,221,0,41,0,192,75,80,0,192,61,83,2,13,
149,201,0,161,35,83,51,5,246,221,0,162,18,66,51,5,246,221,0,41,0,192,139,85,0,192,61,88,2,13,
172,201,6,106,0,208,239,21,0,208,32,22,0,208,65,22,96,223,98,22,0,208,147,22,0,208,212,22,2,39,
128,237,172,24,192,195,149,148,0,161,25,3,51,1,246,221,0,162,146,18,51,1,246,221,0,41,0,192,38,151,
0,192,203,90,0,161,25,3,77,1,238,188,0,162,146,18,77,1,110,189,0,41,192,195,112,153,64,193,71,156,
0,41,96,196,156,97,0,197,156,97,1,13,0,104,28,34,0,192,140,158,29,34,0,192,225,159,30,34,0,192,
128,161,31,34,0,192,37,163,32,34,0,192,139,164,33,34,0,192,58,166,96,196,3,168,0,161,213,3,77,1,
98,170,0,162,146,18,77,1,98,162,133,41,0,192,174,169,0,192,6,172,0,161,217,19,77,5,98,170,0,162,
18,2,77,9,98,170,1,47,0,176,10,54,133,41,5,104,0,176,201,71,192,243,174,169,0,176,157,174,192,248,
6,172,0,161,213,3,75,1,84,115,0,162,210,19,73,1,84,65,55,34,0,192,60,104,87,41,0,192,95,102,
133,41,0,197,206,174,0,192,113,103,0,161,213,3,75,1,84,115,0,162,210,19,73,1,84,65,133,41,0,192,
91,100,55,34,0,192,60,104,0,192,29,175,0,161,213,3,77,1,98,170,0,162,146,18,77,1,98,162,133,41,
0,192,22,106,0,192,94,176,0,161,227,83,85,1,246,221,0,162,18,2,85,33,246,221,133,41,0,192,239,176,
160,197,32,178,0,161,213,3,76,1,238,172,0,162,146,18,76,1,110,189,133,41,32,195,255,124,192,195,255,124,
0,161,213,3,76,1,238,172,0,162,146,18,76,1,110,189,133,41,32,195,237,178,55,34,0,192,115,123,160,197,
237,178,0,161,213,3,76,5,92,139,0,162,146,18,76,1,110,189,133,41,128,194,237,178,30,52,31,36,128,194,
174,180,32,52,33,36,144,193,136,182,224,193,136,182,1,0,0,161,25,3,77,1,98,170,133,41,0,192,250,71,
0,192,169,184,128,40,4,104,108,1,0,176,149,186,0,176,214,186,0,176,149,186,0,176,249,0,0,176,23,187,
38,5,0,176,58,1,0,176,104,187,0,176,185,187,0,176,250,187,0,176,59,188,0,176,124,188,0,176,205,188,
0,176,14,189,0,176,111,189,0,176,192,189,0,176,33,190,0,176,114,190,0,176,195,190,0,176,36,191,0,176,
149,191,0,145,91,1,2,41,0,176,230,191,1,0,0,161,213,3,75,1,84,115,0,162,210,19,73,1,84,65,
133,41,0,197,206,174,87,41,0,192,95,102,55,34,0,192,60,104,0,192,113,103,0,161,213,3,77,1,96,170,
0,162,146,18,77,1,96,162,133,41,224,193,30,109,192,195,23,192,0,161,213,3,76,9,94,170,0,162,18,2,
76,9,94,170,1,47,0,176,10,54,133,41,5,104,0,176,59,54,0,240,108,54,87,41,5,104,0,176,77,49,
224,246,46,56,0,176,118,55,224,246,46,56,0,161,213,3,77,1,238,188,0,162,146,18,77,1,110,189,133,41,
0,192,66,119,87,41,0,192,113,120,31,50,38,34,0,192,1,122,55,34,0,192,115,123,96,196,255,124,47,1,
1,0,2,13,190,201,0,161,213,3,77,5,98,170,0,162,18,2,77,9,98,170,2,47,9,104,1,47,3,104,
0,176,173,192,0,176,222,192,96,244,167,55,1,47,0,176,15,193,0,176,64,193,32,243,167,55,140,39,72,1,
2,96,47,1,1,0,140,39,88,1,2,96,89,1,1,0,2,43,3,0,8,104,2,55,57,48,58,32,3,104,
59,1,2,96,56,1,0,145,206,0,1,0,0,161,213,3,73,9,238,172,0,162,18,34,73,9,46,173,1,47,
0,176,24,63,133,41,5,104,0,176,73,63,0,240,113,193,0,176,106,64,0,240,113,193,2,13,185,201,6,106,
0,208,97,194,0,208,146,194,0,208,195,194,0,208,4,195,0,208,53,195,0,208,102,195,2,39,64,236,237,5,
0,176,96,6,69,39,113,3,140,39,3,0,89,1,88,1,1,0,44,5,136,40,0,176,151,195,0,176,86,0,
0,145,152,7,2,13,153,201,1,0,2,41,113,1,13,1,1,0,2,57,0,41,117,1,13,1,1,0,4,13,
201,1,108,153,0,145,192,0,0,176,216,195,119,16,129,40,0,176,9,196,0,176,184,0,2,13,144,201,0,176,
74,196,1,13,0,97,3,47,121,1,44,5,0,176,184,0,113,16,0,176,139,196,129,40,2,45,7,0,131,45,
7,0,13,1,122,1,1,0,38,5,0,176,204,196,3,47,124,1,38,5,0,176,13,197,3,47,124,1,38,5,
113,1,1,0,1,13,0,105,38,5,0,176,78,197,13,16,0,176,143,197,129,40,2,45,7,0,129,45,7,0,
3,0,13,1,126,1,1,0,126,1,1,0,13,16,0,176,208,197,0,176,17,198,44,5,0,176,82,198,4,13,
145,201,144,203,44,5,0,176,82,198,44,5,13,16,0,176,179,198,38,5,58,32,0,208,4,199,0,176,69,199,
13,16,0,176,150,199,13,16,0,176,150,199,4,13,148,201,144,203,44,5,0,176,150,199,4,13,148,201,144,203,
3,47,135,1,44,5,0,176,150,199,59,34,0,176,231,199,57,37,90,10,0,176,56,200,0,176,137,200,4,13,
153,201,138,202,0,176,234,200,29,34,38,4,0,176,75,201,0,176,195,190,0,176,188,201,44,5,0,176,23,187,
44,5,0,176,45,202,3,47,144,1,44,5,0,176,45,202,44,5,129,40,0,176,142,202,0,176,223,202,44,5,
0,176,64,203,147,1,1,0,44,5,0,176,177,203,4,13,153,201,185,201,44,36,2,13,153,201,44,5,0,176,
18,204,4,13,140,202,185,201,44,36,2,13,140,202,44,5,0,176,99,204,0,176,104,187,0,176,180,204,0,176,
5,205,0,176,249,0,0,176,86,205,111,5,0,145,79,2,1,0,2,13,153,201,44,5,0,176,135,205,119,16,
0,176,184,0,113,16,0,176,184,205,38,5,0,176,249,205,38,5,0,176,249,205,0,176,58,206,13,16,0,176,
123,206,2,13,138,202,13,16,0,176,188,206,0,176,17,198,2,13,144,201,44,5,0,176,74,196,44,5,0,176,
253,206,4,13,145,201,144,203,44,5,0,176,253,206,1,13,0,97,0,176,184,0,44,5,13,16,0,176,78,207,
38,5,58,32,0,208,4,199,0,176,58,1,44,5,13,16,0,176,159,207,4,13,148,201,144,203,44,5,0,176,
240,207,4,13,148,201,144,203,44,5,0,176,240,207,13,16,0,176,150,199,0,176,49,208,4,13,166,195,138,202,
0,176,130,208,3,13,203,111,0,144,0,176,104,187,0,176,211,208,3,13,203,101,0,144,0,176,249,0,0,176,
188,201,44,5,0,176,52,209,44,5,0,176,133,209,44,5,0,176,223,202,44,5,0,176,64,203,147,1,1,0,
44,5,0,176,177,203,2,13,154,201,44,5,0,176,246,209,87,41,114,1,136,40,0,176,151,195,0,176,55,210,
2,41,113,1,0,176,104,210,2,13,166,195,119,16,8,41,0,176,153,210,0,176,234,210,2,13,144,201,0,176,
74,196,113,16,0,176,43,211,38,5,113,16,0,176,13,197,38,5,0,176,108,211,3,13,181,225,0,187,0,176,
173,211,38,5,0,176,238,211,4,13,145,201,144,203,13,16,34,34,133,1,0,176,47,212,129,1,1,0,13,16,
0,176,112,212,0,176,177,212,34,36,0,176,242,212,0,176,47,212,7,13,201,2,203,145,201,144,0,185,44,34,
4,13,145,201,144,203,130,10,44,5,0,176,242,212,44,5,114,16,0,176,83,213,38,5,0,176,69,199,13,16,
34,36,0,176,164,213,0,176,5,214,7,13,201,2,203,148,201,144,0,185,34,36,4,13,148,201,144,203,34,5,
0,176,164,213,6,13,111,2,144,203,185,201,34,36,3,13,203,111,0,144,34,5,0,176,70,214,13,16,0,176,
151,214,0,176,216,214,0,176,41,215,0,176,122,215,29,50,32,34,38,4,0,176,203,215,0,176,44,216,0,176,
125,216,5,13,201,1,201,155,0,185,34,36,2,13,155,201,34,5,0,176,222,216,0,176,45,202,5,13,201,1,
201,170,0,185,34,36,2,13,170,201,34,5,0,176,63,217,5,13,202,1,201,138,0,185,44,36,2,13,138,202,
44,5,0,176,160,217,5,13,201,97,201,170,0,153,44,5,0,176,241,217,5,13,201,97,201,170,0,154,44,5,
0,176,82,218,7,13,201,97,202,170,201,138,0,185,34,36,5,13,201,97,202,170,0,138,34,5,0,176,195,218,
0,161,213,3,77,1,98,170,0,162,146,18,77,1,98,162,2,43,129,41,14,104,50,54,6,0,3,0,131,36,
9,104,2,44,3,104,25,1,5,96,50,37,3,104,192,195,34,110,133,41,0,192,22,106,34,50,51,50,52,34,
0,192,70,107,14,34,32,195,30,109,160,197,34,110,0,161,213,131,0,0,0,0,0,162,18,130,0,0,0,0,
0,192,2,0,44,5,0,176,86,205,2,41,13,1,44,5,0,41,0,176,99,204,0,176,52,219,2,41,113,1,
13,1,1,0,2,57,0,41,117,1,13,1,1,0,119,16,157,18,0,176,117,219,119,16,0,176,117,219,2,13,
144,201,44,5,0,176,149,186,2,13,58,97,44,5,0,176,117,219,113,16,0,176,182,219,59,34,5,104,32,238,
211,25,0,176,86,205,0,176,247,219,0,145,243,9,1,0,113,1,1,0,1,13,0,101,38,5,0,176,56,220,
13,16,0,176,121,220,129,1,1,0,13,16,0,176,186,220,2,13,137,202,0,176,251,220,2,13,58,97,44,5,
34,34,4,104,125,10,0,176,60,221,0,176,117,219,3,13,203,97,0,144,34,36,3,0,34,4,0,176,60,221,
151,18,1,13,0,101,0,176,173,221,38,5,58,32,0,208,4,199,7,57,0,41,90,10,0,176,14,222,13,16,
34,34,0,176,70,214,0,176,123,1,2,13,148,201,34,36,3,0,34,4,0,176,79,222,1,13,0,111,34,36,
3,0,34,4,0,176,79,222,13,16,0,176,5,214,4,13,137,202,144,203,7,41,100,10,0,41,4,104,100,10,
0,176,251,220,0,176,144,222,4,13,140,202,137,202,0,176,209,222,3,13,203,111,0,144,0,176,34,223,2,57,
7,41,158,1,59,34,0,176,115,223,0,176,212,223,0,176,212,223,3,13,203,101,0,144,0,176,58,206,0,176,
53,224,1,13,0,101,34,36,3,0,34,4,0,176,150,224,2,13,170,201,34,36,3,0,34,4,0,176,231,224,
4,13,137,202,185,201,44,34,2,13,137,202,120,10,44,5,0,176,56,225,44,5,0,176,177,203,44,5,0,176,
115,223,147,1,1,0,3,13,153,201,0,108,0,145,192,0,0,176,137,225,0,176,0,0,138,41,46,1,0,145,
71,0,1,13,0,114,1,0,44,5,136,40,0,176,202,225,0,176,86,0,0,145,159,10,2,13,153,201,1,0,
2,41,113,1,0,176,202,225,2,57,0,41,117,1,0,176,202,225,2,13,166,195,119,16,0,176,251,225,113,16,
0,176,60,226,38,5,0,176,249,205,38,5,0,176,249,205,38,5,0,176,238,211,13,16,0,176,5,214,13,16,
0,176,125,226,0,176,190,226,2,13,144,201,44,5,0,176,202,225,44,5,0,176,255,226,4,13,145,201,144,203,
44,5,0,176,255,226,4,13,145,201,144,203,0,176,255,226,13,16,44,5,0,176,80,227,38,5,58,32,0,208,
4,199,0,176,58,1,13,16,44,5,0,176,159,207,4,13,148,201,144,203,44,5,0,176,159,207,13,16,0,176,
150,199,0,176,161,227,0,176,226,227,4,13,153,201,138,202,0,176,67,228,29,50,32,34,38,4,0,176,148,228,
0,176,5,229,0,176,125,216,44,5,0,176,86,229,44,5,0,176,167,229,4,13,148,201,144,203,44,5,0,176,
8,230,44,5,0,176,64,203,147,1,1,0,44,5,0,176,73,230,111,5,0,145,79,2,1,0,119,16,0,176,
184,0,113,16,0,176,249,0,38,5,55,50,59,34,0,176,249,205,0,176,170,230,38,5,0,176,58,1,13,16,
0,176,185,187,129,1,1,0,2,13,138,202,13,16,0,176,188,206,23,5,0,176,17,198,2,13,144,201,0,176,
74,196,44,5,0,176,253,206,4,13,145,201,144,203,44,5,0,176,253,206,1,13,0,97,0,176,184,0,13,16,
44,5,0,176,205,188,2,13,105,101,38,5,0,176,219,230,13,16,44,5,0,176,159,207,4,13,148,201,144,203,
44,5,0,176,159,207,13,16,0,176,159,207,3,13,153,201,0,117,0,176,44,231,4,13,166,195,138,202,0,176,
130,208,4,13,140,202,138,202,0,176,125,231,4,13,148,201,170,201,0,176,125,216,3,13,203,101,0,144,0,176,
222,231,3,13,201,111,0,170,0,176,36,191,4,13,156,201,144,203,44,5,0,176,179,198,44,5,0,176,47,232,
44,5,0,176,223,202,44,5,0,176,144,232,147,1,1,0,44,5,0,176,177,203,44,5,0,176,1,233,2,41,
113,1,0,176,1,233,0,176,214,186,113,16,0,176,249,0,38,5,0,176,170,230,38,5,0,176,170,230,38,5,
0,176,58,1,0,176,151,214,0,176,185,187,0,176,66,233,0,176,149,186,0,176,214,186,44,5,0,176,214,186,
0,176,214,186,44,5,0,176,185,187,38,5,0,176,131,233,0,176,123,1,44,5,0,176,123,1,44,5,0,176,
196,233,0,176,123,1,0,176,188,1,0,176,21,234,0,176,104,187,0,176,33,190,0,176,249,0,0,176,53,224,
44,5,0,176,150,224,44,5,0,176,102,234,46,34,4,104,95,10,0,176,183,234,0,176,232,234,2,13,144,201,
0,176,208,197,0,176,25,235,2,13,153,201,46,34,4,104,95,10,0,176,183,234,0,176,90,235,0,176,139,235,
0,176,188,235,0,176,253,235,59,34,32,238,46,236,0,176,95,236,59,34,32,238,46,236,0,176,95,236,3,13,
153,201,0,108,0,176,216,195,0,176,144,236,3,13,201,105,0,153,0,176,209,236,38,5,0,176,50,237,4,13,
138,202,153,201,0,176,115,237,0,176,212,237,0,176,21,238,0,176,134,238,38,5,0,176,231,238,38,5,0,176,
72,239,4,13,155,201,170,201,38,5,0,176,185,239,38,5,0,176,10,240,4,13,138,202,170,201,38,5,0,176,
123,240,38,5,0,176,236,240,38,5,0,176,77,241,0,176,174,241,0,176,137,200,0,176,249,0,0,176,159,207,
0,176,179,198,0,176,255,241,0,176,80,242,0,176,145,242,0,161,25,3,173,1,238,188,0,162,146,18,173,1,
110,189,192,195,226,242,0,161,25,3,64,9,118,90,0,162,18,2,64,9,98,90,6,106,16,223,199,4,16,223,
248,4,16,223,41,5,16,223,90,5,16,223,139,5,16,223,188,5,2,39,224,236,237,5,0,176,255,13,64,246,
219,16,13,48,109,32,2,104,5,96,0,176,234,11,0,240,178,6,1,0,0,161,213,3,83,1,246,221,0,162,
146,18,83,1,246,221,0,192,1,122,0,176,184,0,0,176,56,245,2,13,168,201,0,176,121,245,0,176,173,211,
0,176,121,220,0,176,250,187,0,176,86,0,109,18,0,176,58,1,4,13,168,201,144,203,110,18,0,176,186,245,
112,18,0,176,188,1,108,18,0,176,249,0,111,18,0,176,251,245,35,18,0,176,82,198,4,13,145,201,168,201,
0,176,72,239,0,176,75,201,3,13,201,97,0,168,0,176,75,201,0,176,14,189,0,176,185,239,4,13,153,201,
168,201,0,176,185,239,0,176,111,189,0,176,76,246,3,13,168,201,0,117,0,176,76,246,0,176,188,201,4,13,
148,201,168,201,0,176,188,201,0,176,157,246,3,13,201,117,0,168,0,176,157,246,0,161,25,3,75,1,96,170,
0,162,18,34,75,9,96,170,0,176,11,12,16,244,60,12,0,161,213,3,73,9,238,172,0,162,18,34,73,9,
46,173,1,47,0,176,24,63,133,41,5,104,0,176,73,63,192,248,122,63,0,176,106,64,96,249,155,64,108,34,
4,104,40,10,0,176,183,234,109,34,4,104,40,10,0,176,183,234,110,34,4,104,40,10,0,176,183,234,108,32,
4,104,30,10,0,176,183,234,0,176,232,234,0,176,86,0,0,176,254,246,2,13,144,201,35,19,0,176,74,196,
0,176,60,226,113,19,111,1,1,0,0,176,204,196,3,13,204,105,0,175,0,176,78,197,0,176,186,220,115,19,
112,1,1,0,0,176,17,198,117,19,111,1,1,0,3,13,204,117,0,134,0,176,188,1,1,13,0,65,0,176,
47,212,120,19,112,1,1,0,0,176,104,187,0,176,82,198,0,176,249,0,0,176,58,1,0,176,250,187,0,176,
63,247,0,176,133,209,0,176,160,247,0,176,33,190,128,19,112,1,1,0,0,176,14,189,130,19,0,176,14,189,
31,32,1,13,0,32,6,106,0,208,93,34,0,208,142,34,0,208,191,34,0,208,240,34,0,208,33,35,0,208,
98,35,31,32,128,237,147,35,0,39,0,176,180,35,1,0,34,34,5,104,2,42,2,104,2,96,108,1,0,176,
55,210,139,40,105,10,0,176,74,196,87,41,62,10,0,176,184,0,16,34,67,10,0,176,25,235,13,16,16,34,
67,10,0,176,25,235,16,34,67,10,38,5,0,176,249,205,0,176,249,205,16,34,67,10,0,176,123,1,16,34,
67,10,34,34,138,42,115,1,0,176,59,188,0,176,1,248,35,17,0,176,1,248,58,32,0,208,4,199,0,176,
82,248,111,18,58,32,0,208,4,199,0,176,82,248,0,176,188,1,0,176,147,248,0,176,244,248,0,176,195,190,
0,176,36,191,0,176,69,249,0,176,58,206,0,176,104,187,0,176,124,188,2,13,143,202,16,34,57,10,0,176,
134,249,0,176,205,188,16,34,80,10,0,176,188,235,2,13,102,112,0,162,18,2,75,1,84,65,0,192,192,130,
140,43,81,1,2,96,99,1,1,0,2,41,55,1,6,108,64,236,5,23,128,237,70,23,32,238,135,23,32,238,
184,23,128,237,249,23,128,237,74,24,0,176,199,249,2,41,21,104,6,106,0,208,116,32,0,208,181,32,0,208,
246,32,0,208,55,33,0,208,104,33,0,208,185,33,32,238,234,33,0,39,3,104,0,176,232,249,7,96,0,162,
35,18,0,0,0,0,0,176,44,34,1,0,14,37,2,104,11,96,2,43,9,104,2,44,3,104,51,1,5,96,
47,37,2,104,2,96,14,3,92,39,1,1,0,145,138,2,1,0,3,13,201,105,0,144,0,176,9,250,4,13,
138,202,144,201,0,176,106,250,0,176,187,250,55,1,1,0,138,34,48,1,0,145,196,2,1,0,138,34,47,1,
0,145,15,3,1,0,138,34,49,1,0,145,153,3,1,0,0,176,214,186,0,176,25,235,38,5,0,176,58,1,
136,40,0,176,104,187,0,176,159,207,0,176,188,1,0,176,14,189,0,176,111,189,0,176,33,190,0,176,16,251,
0,176,10,240,0,176,149,191,0,176,25,235,0,176,25,235,38,5,108,17,0,176,97,251,38,5,0,176,121,245,
0,176,25,235,0,176,251,225,0,176,162,251,0,176,151,214,0,176,159,207,0,176,205,188,0,176,250,187,0,176,
227,251,0,176,36,252,0,176,124,188,0,176,101,252,0,176,198,252,0,176,188,201,0,176,16,251,0,176,23,253,
0,176,104,253,0,176,185,253,0,176,10,254,0,176,107,254,0,176,188,254,0,176,13,255,0,176,110,255,0,176,
191,255,1,176,16,0,1,176,97,0,1,176,178,0,0,176,102,234,1,176,3,1,1,13,0,114,0,161,25,3,
73,1,98,170,0,162,18,34,73,9,98,170,1,176,84,1,32,243,64,14,0,161,25,3,169,1,84,90,0,162,
25,18,9,1,84,73,133,41,0,176,223,67,0,176,114,68,0,161,213,3,79,9,98,155,0,162,146,18,79,9,
98,155,1,47,0,176,10,54,133,41,5,104,0,176,59,54,0,240,108,54,34,34,5,104,0,176,77,49,192,243,
46,56,0,176,118,55,192,243,46,56,28,34,0,192,140,158,29,34,0,192,225,159,30,34,0,192,128,161,31,34,
0,192,37,163,32,34,97,196,149,1,33,34,1,197,149,1,96,196,3,168,0,176,162,251,1,176,209,3,0,176,
47,212,0,176,247,219,1,176,18,4,1,176,83,4,1,176,148,4,1,176,213,4,0,176,121,245,1,176,22,5,
0,176,8,230,0,176,104,187,0,176,185,187,1,176,87,5,1,176,152,5,1,176,217,5,1,176,26,6,1,176,
91,6,0,176,251,225,0,176,251,225,0,176,205,188,0,176,205,188,0,176,124,188,0,176,124,188,0,176,198,252,
1,176,156,6,0,176,185,253,0,161,25,3,169,1,84,90,0,162,25,18,9,1,84,73,133,41,0,176,223,67,
0,176,114,68,0,161,21,29,77,5,158,162,0,162,146,18,77,1,94,162,133,41,192,195,30,109,0,197,47,111,
0,161,213,3,79,9,98,155,0,162,146,18,79,9,98,155,1,47,0,176,10,54,133,41,5,104,0,176,59,54,
0,240,108,54,34,34,5,104,0,176,77,49,192,243,46,56,0,176,118,55,192,243,46,56,50,34,5,104,0,176,
145,6,0,240,178,6,0,176,234,11,0,240,178,6,0,161,213,3,77,1,238,188,0,162,146,18,77,1,110,189,
0,41,0,192,255,124,31,50,61,34,128,194,1,122,55,34,128,194,115,123,34,34,128,194,113,120,49,34,160,192,
255,124,64,193,255,124,28,34,0,192,140,158,29,34,0,192,225,159,30,34,0,192,128,161,31,34,0,192,37,163,
32,34,0,192,139,164,33,34,0,192,58,166,96,196,3,168,0,161,25,3,77,1,98,170,0,162,146,18,77,1,
98,162,1,192,237,6,0,161,227,83,85,1,246,221,0,162,25,18,51,37,246,221,133,41,192,195,131,117,0,197,
47,111,0,161,232,83,83,9,246,221,0,162,50,82,83,41,246,221,1,47,1,176,26,9,133,41,5,104,0,176,
59,54,129,242,75,9,87,41,5,104,0,176,77,49,1,245,75,9,0,176,118,55,1,245,75,9,111,32,1,224,
80,10,33,96,112,32,1,224,113,10,29,96,113,32,1,224,146,10,25,96,114,48,115,32,1,224,179,10,20,96,
116,32,1,224,228,10,16,96,2,39,14,104,6,108,1,224,21,11,1,224,54,11,1,224,87,11,1,224,120,11,
1,224,153,11,1,224,186,11,1,0,112,34,1,208,219,11,46,96,117,34,1,208,252,11,42,96,113,34,1,208,
29,12,38,96,114,50,115,34,1,208,62,12,33,96,111,34,1,208,95,12,29,96,58,34,1,208,128,12,25,96,
116,34,1,208,161,12,21,96,57,50,118,34,1,208,194,12,16,96,2,41,14,104,6,106,1,208,227,12,1,208,
4,13,1,208,37,13,1,208,70,13,1,208,103,13,1,208,136,13,1,0,0,161,25,3,71,1,222,185,2,13,
129,202,138,41,46,1,4,96,138,55,0,39,119,1,0,145,163,15,0,145,200,15,1,176,169,13,2,13,129,202,
138,41,1,1,2,96,34,1,1,0,2,13,129,202,47,53,48,53,49,37,5,104,1,176,202,13,240,240,178,6,
138,39,5,104,1,176,251,13,240,240,178,6,6,108,1,224,28,14,1,224,61,14,1,224,94,14,1,224,127,14,
1,224,160,14,1,224,193,14,111,32,1,224,226,14,8,41,5,104,1,176,3,15,64,241,178,6,109,34,15,10,
1,176,52,15,64,241,178,6,0,161,25,3,71,1,222,185,2,13,129,202,0,145,200,15,83,53,49,53,48,53,
89,53,47,53,91,37,1,176,85,15,110,37,1,176,150,15,40,10,1,176,169,13,1,0,138,41,56,1,3,96,
110,37,59,1,6,106,0,208,239,21,96,223,32,22,16,223,65,22,16,223,98,22,97,223,215,15,192,222,212,22,
28,32,224,236,172,24,4,96,2,39,128,237,172,24,0,55,134,40,0,176,205,24,87,55,8,39,0,176,205,24,
47,32,0,176,254,24,56,32,0,176,31,25,0,176,64,25,2,41,55,1,111,37,1,224,248,15,16,96,2,44,
14,104,6,108,0,224,231,26,0,224,8,27,0,224,41,27,0,224,74,27,0,224,123,27,0,224,172,27,109,32,
0,176,205,24,0,176,139,24,138,41,56,1,6,106,0,208,239,21,96,223,32,22,16,223,65,22,16,223,98,22,
96,223,147,22,192,222,212,22,47,32,0,176,254,24,0,176,64,25,1,176,25,16,1,176,25,16,2,43,110,10,
2,96,85,10,1,176,74,16,81,181,74,16,56,34,192,238,172,24,5,96,2,41,100,10,2,96,85,10,0,176,
69,249,0,176,69,249,57,36,95,10,2,96,85,10,0,176,60,226,0,176,60,226,119,53,59,37,5,104,2,43,
2,104,120,10,16,96,109,37,2,43,8,104,31,36,4,104,110,10,38,5,2,96,118,1,6,96,2,43,57,1,
3,96,75,10,38,5,1,176,148,4,6,106,0,208,116,32,0,208,181,32,0,208,246,32,0,208,55,33,0,208,
104,33,0,208,185,33,1,176,139,16,2,41,110,10,2,96,85,10,139,40,1,176,204,16,0,176,104,187,1,0,
139,40,1,176,29,17,108,36,138,42,1,176,29,17,109,36,138,42,1,176,29,17,0,176,8,230,2,57,57,34,
110,10,2,96,90,10,1,176,87,5,1,176,87,5,114,52,31,36,4,104,55,10,0,181,124,188,90,10,0,176,
124,188,0,176,124,188,0,176,151,195,0,176,151,195,0,176,205,188,109,48,108,37,15,104,6,106,0,208,105,30,
1,208,94,17,0,208,203,30,0,208,252,30,0,208,45,31,0,208,94,31,2,96,133,1,1,0,2,41,23,104,
6,106,0,208,105,30,1,208,94,17,0,208,203,30,0,208,252,30,0,208,45,31,0,208,94,31,32,238,143,31,
0,39,3,104,0,176,209,31,0,176,209,31,11,96,0,162,25,18,0,0,0,0,31,32,3,104,0,176,2,32,
0,176,67,32,1,0,0,176,187,250,134,34,0,176,60,226,1,176,143,17,1,176,224,17,1,176,143,17,0,161,
213,3,173,9,84,90,0,162,18,34,73,9,84,73,2,47,15,104,0,161,213,3,73,5,84,73,133,41,5,104,
0,176,65,50,0,240,114,50,0,176,65,50,0,240,120,51,1,47,7,104,109,36,3,104,1,176,49,18,0,176,
16,50,133,57,55,34,5,104,0,176,209,51,0,240,114,50,56,34,0,176,201,53,109,34,5,104,1,176,98,18,
32,243,120,51,0,176,201,53,96,244,120,51,0,161,21,29,77,5,98,170,0,162,18,2,77,9,98,170,1,47,
7,104,109,36,3,104,1,176,131,18,0,176,10,54,133,41,5,104,0,176,59,54,32,243,108,54,109,36,5,104,
0,176,77,49,32,243,108,54,0,176,118,55,128,242,167,55,0,162,18,2,171,1,84,65,0,41,0,192,12,128,
0,197,192,130,0,161,213,3,73,9,238,172,0,162,18,34,73,5,46,173,1,47,7,104,109,36,3,104,1,176,
180,18,0,176,24,63,133,41,5,104,0,176,73,63,0,240,122,63,109,36,5,104,1,176,229,18,65,241,22,19,
0,176,106,64,65,241,22,19,0,161,213,3,77,1,238,188,0,162,146,18,77,1,110,189,133,41,0,192,66,119,
31,50,38,34,208,194,1,122,108,34,128,194,115,123,109,34,4,104,22,10,32,195,52,126,128,194,52,126,0,162,
146,50,77,9,98,162,2,47,7,104,0,161,25,3,79,1,222,154,0,176,112,38,6,106,0,208,177,38,0,208,
242,38,0,208,51,39,0,208,116,39,0,208,181,39,0,208,246,39,138,39,3,43,0,176,55,40,0,55,50,32,
0,176,104,40,138,41,4,104,60,10,1,176,198,19,1,0,58,50,2,41,50,1,2,96,1,1,1,0,0,161,
213,26,75,1,84,115,0,162,210,18,73,1,84,65,133,41,0,197,91,100,14,34,96,196,113,103,108,34,32,195,
60,104,109,34,4,104,20,10,0,197,91,100,160,197,206,174,0,161,213,26,75,1,84,115,0,162,210,18,73,1,
84,65,138,41,1,1,208,194,58,105,0,161,25,3,77,1,98,170,0,162,146,18,77,1,98,162,0,41,208,194,
250,71,48,50,47,50,49,34,208,194,2,137,208,194,46,139,0,161,25,3,77,1,102,172,0,162,18,2,77,1,
102,172,47,37,30,10,0,41,208,194,22,141,208,194,194,143,0,161,213,3,77,1,98,170,0,162,146,18,77,1,
98,162,133,41,128,194,22,106,109,34,4,104,20,10,33,195,247,19,128,194,94,176,0,161,213,3,77,1,96,170,
0,162,146,18,77,1,96,162,2,57,58,50,57,34,224,193,94,176,1,1,1,0,0,41,47,1,5,96,138,41,
1,1,2,96,140,1,1,0,0,161,25,3,169,1,84,90,0,162,18,2,169,1,84,73,2,47,4,104,0,145,
204,3,1,0,133,41,5,104,0,176,223,67,0,240,110,65,134,40,3,43,35,10,4,96,133,52,109,36,30,10,
0,176,114,68,192,243,110,65,13,16,0,176,208,197,0,162,25,18,13,1,98,170,88,36,0,176,10,54,133,57,
0,41,5,104,0,176,201,71,208,242,250,71,47,37,30,10,0,176,167,74,208,242,250,71,2,57,133,50,57,34,
6,104,35,10,0,176,167,74,128,242,46,139,1,1,1,0,0,41,89,1,6,96,2,57,133,34,88,1,2,96,
1,1,1,0,0,176,60,226,0,176,250,187,1,176,199,20,38,5,0,176,249,205,0,176,66,233,1,176,24,21,
1,176,89,21,1,176,209,3,0,161,25,3,71,1,222,185,138,41,46,1,1,176,170,21,128,247,178,6,0,176,
55,210,0,176,82,248,0,176,249,205,0,176,124,188,0,176,205,188,0,176,250,187,0,176,25,235,13,16,0,176,
56,245,1,176,235,21,1,176,235,21,129,40,7,104,136,40,3,104,1,176,44,22,1,176,109,22,0,176,184,0,
0,176,214,186,129,40,1,176,44,22,0,176,47,212,0,176,5,205,0,176,114,190,13,17,119,1,1,0,1,176,
174,22,1,176,239,22,0,176,195,190,0,176,110,255,0,176,21,234,0,176,111,189,1,176,64,23,0,161,25,3,
73,9,238,172,0,162,18,34,73,9,46,173,101,37,1,1,140,43,2,104,2,96,101,1,133,41,5,104,0,176,
249,96,0,240,194,92,1,176,161,23,193,248,210,23,1,13,0,32,1,0,136,40,5,104,47,50,72,34,2,104,
128,1,0,145,90,6,1,0,136,40,5,104,47,50,72,34,2,104,128,1,128,32,47,1,0,145,15,3,1,0,
136,40,5,104,48,50,71,34,2,104,128,1,0,145,55,6,1,0,136,40,5,104,48,50,71,34,2,104,128,1,
128,32,48,1,0,145,196,2,1,0,136,40,5,104,89,50,88,34,2,104,128,1,0,145,128,5,1,0,136,40,
5,104,89,50,88,34,2,104,128,1,128,32,89,1,0,145,19,4,1,0,14,16,108,50,108,32,0,176,202,225,
57,34,0,176,125,226,1,176,5,26,134,40,4,104,0,176,125,226,1,0,130,40,32,104,65,10,136,40,141,40,
3,0,2,104,1,1,108,32,2,104,13,1,2,45,10,0,92,45,7,0,3,0,6,104,138,43,136,41,2,104,
2,96,1,1,73,39,108,34,3,0,3,104,110,1,6,96,34,32,3,104,111,1,2,96,13,1,108,50,108,32,
0,176,202,225,58,32,0,176,186,220,0,176,125,226,0,176,202,225,14,16,0,176,86,205,129,40,37,1,38,5,
0,176,131,233,38,5,0,176,170,230,38,5,0,176,121,245,0,176,58,206,0,176,58,206,1,176,70,26,0,176,
60,226,0,176,251,225,57,36,1,176,151,26,0,176,162,251,0,176,74,196,0,176,251,245,0,176,104,187,0,176,
185,187,0,176,143,197,0,176,66,233,0,176,250,187,1,176,216,26,1,176,25,27,0,176,80,242,0,176,153,210,
1,176,90,27,1,176,155,27,0,176,5,205,1,176,220,27,1,176,45,28,1,176,45,28,0,176,198,252,1,176,
110,28,0,161,213,3,75,1,84,115,0,162,210,19,73,1,84,65,1,47,0,176,16,50,0,176,2,52,96,244,
29,175,0,161,21,28,77,1,94,170,0,162,146,18,77,1,94,162,133,41,48,194,30,109,32,195,30,109,0,161,
213,3,77,1,94,170,0,162,146,18,77,1,94,162,1,47,0,176,10,54,1,176,207,28,128,242,30,109,2,13,
136,202,0,161,213,3,71,1,100,170,0,162,146,18,71,65,100,162,0,192,94,176,4,13,136,202,176,202,0,161,
213,3,75,1,100,170,0,162,146,18,71,65,100,162,141,36,139,1,1,197,0,29,2,13,150,201,0,161,213,3,
71,5,100,170,0,162,18,2,71,69,100,170,1,47,1,176,131,18,133,41,5,104,0,176,59,54,0,240,108,54,
0,176,77,49,0,240,167,55,4,13,150,201,176,202,0,161,213,3,71,5,100,170,0,162,18,2,71,69,100,170,
1,47,1,176,131,18,0,176,77,49,0,240,34,110,0,161,213,3,77,1,238,188,133,41,0,192,226,111,1,192,
129,30,0,145,32,5,3,13,202,99,0,176,1,0,0,161,227,83,85,1,246,221,0,162,18,2,85,33,246,221,
1,47,0,176,35,62,0,176,35,62,0,240,194,115,0,161,149,18,76,5,238,172,0,162,146,18,76,1,110,189,
1,47,1,176,177,31,133,41,5,104,1,176,177,31,48,242,237,178,1,176,177,31,32,243,237,178,193,195,226,31,
136,40,0,145,101,0,9,96,2,44,5,104,138,59,109,36,2,104,16,1,0,145,71,0,2,13,190,201,1,0,
136,40,138,44,2,45,10,0,1,1,141,40,18,104,37,54,7,0,40,38,7,0,2,104,39,1,34,37,2,45,
7,0,8,104,136,45,7,0,109,38,7,0,2,104,2,96,39,1,121,1,1,0,136,40,129,40,1,176,44,22,
0,176,117,219,1,176,174,32,0,176,188,1,0,176,249,0,1,176,239,32,58,36,85,10,0,176,104,187,1,176,
48,33,0,161,213,3,77,1,238,188,133,41,1,192,113,33,1,192,113,33,0,161,213,3,77,1,238,188,133,41,
0,192,226,111,0,192,50,114,13,18,108,34,0,176,202,225,1,176,5,26,0,176,86,205,108,34,0,176,202,225,
1,176,5,26,38,5,0,176,58,1,0,176,249,0,0,176,162,251,0,176,8,230,0,176,250,187,1,176,131,34,
1,176,110,28,0,176,195,190,0,176,111,189,1,176,228,34,0,176,134,238,0,176,36,191,0,176,107,254,0,176,
149,191,14,16,108,34,0,176,202,225,1,176,5,26,0,145,151,19,1,0,0,176,202,225,14,16,0,176,86,205,
4,146,20,141,1,0,108,34,0,176,202,225,1,176,5,26,13,18,108,34,0,176,202,225,0,176,125,226,38,5,
0,176,131,233,38,5,0,176,121,245,0,176,58,206,0,176,56,245,0,176,162,251,0,176,185,187,0,176,104,187,
0,176,66,233,0,176,250,187,0,176,208,197,109,18,0,176,184,0,2,13,140,202,136,41,65,34,13,1,0,176,
125,226,2,59,149,36,1,1,109,1,1,0,1,176,151,26,0,176,249,0,0,176,249,0,136,40,130,40,1,176,
101,35,1,176,174,32,0,176,58,1,0,176,104,187,0,176,104,187,122,18,1,176,166,35,1,176,166,35,2,13,
137,202,1,176,231,35,40,44,2,104,2,96,151,18,1,176,166,35,2,13,137,202,1,176,231,35,1,176,40,36,
0,176,137,200,1,1,1,0,0,145,73,4,2,13,187,201,1,0,0,176,86,0,2,13,144,201,1,176,44,22,
0,176,117,219,0,176,249,0,0,176,249,0,1,176,174,32,0,176,58,1,0,176,104,187,0,176,104,187,0,176,
66,233,0,176,66,233,0,176,33,190,1,176,110,28,0,161,213,3,76,9,94,170,0,162,18,2,76,9,94,170,
1,47,0,176,10,54,133,41,5,104,0,176,59,54,0,240,108,54,34,34,5,104,0,176,77,49,64,246,46,56,
32,179,118,55,192,243,23,192,0,176,202,225,2,13,168,201,128,183,251,220,2,13,144,201,131,56,141,56,136,40,
1,176,109,22,13,17,65,34,136,41,2,104,13,1,0,176,74,196,1,0,35,1,1,0,1,176,151,26,0,176,
249,0,0,176,249,0,1,176,174,32,0,176,249,205,0,176,58,1,0,176,104,187,0,176,104,187,0,176,188,1,
0,176,188,1,0,176,33,190,1,176,110,28,0,161,213,3,75,1,84,115,0,162,210,19,73,1,84,65,1,47,
7,104,2,44,3,104,0,176,16,50,1,176,137,36,133,41,0,192,91,100,55,34,0,192,60,104,0,192,29,175,
0,161,21,28,77,1,94,170,0,162,146,18,77,1,94,162,1,47,7,104,2,44,3,104,0,176,10,54,1,176,
137,36,133,41,48,194,30,109,32,195,30,109,4,13,136,202,176,202,0,161,213,3,75,1,100,170,0,162,146,18,
71,65,100,162,141,36,139,1,1,197,0,29,4,13,136,202,176,202,0,161,213,3,75,1,100,170,0,162,146,18,
71,65,100,162,1,47,7,104,2,44,3,104,1,176,131,18,1,176,137,36,1,197,0,29,0,161,227,83,85,1,
246,221,1,47,7,104,2,44,3,104,0,176,35,62,1,176,137,36,133,41,0,192,194,115,0,192,194,115,0,161,
213,3,76,5,92,139,0,162,146,18,76,1,110,189,1,47,7,104,2,44,3,104,0,176,24,63,1,176,137,36,
133,41,128,194,237,178,30,52,31,36,128,194,174,180,32,52,33,36,144,193,136,182,224,193,136,182,1,0,134,40,
0,145,219,4,5,96,136,40,141,40,3,0,71,1,1,0,134,40,0,145,245,4,5,96,136,40,141,40,3,0,
72,1,1,0,134,40,0,145,57,5,5,96,136,40,141,40,3,0,81,1,1,0,0,176,5,214,0,176,60,226,
38,5,0,176,97,251,0,176,8,230,0,176,66,233,1,176,218,36,0,176,134,249,0,176,58,1,1,176,27,37,
0,176,184,0,0,176,251,245,0,176,250,187,0,176,124,188,0,176,205,188,0,161,213,3,77,1,98,170,0,162,
146,18,77,1,98,162,0,192,6,172,0,161,213,3,77,1,96,170,0,162,146,18,77,1,96,162,133,41,208,194,
30,109,32,195,30,109,47,34,0,192,2,0,47,1,1,0,0,161,213,3,76,9,94,170,0,162,18,2,76,9,
94,170,1,47,0,176,10,54,133,41,5,104,0,176,59,54,0,240,46,56,34,34,5,104,0,176,77,49,224,246,
46,56,0,176,118,55,224,246,46,56,138,41,56,1,0,145,192,0,28,32,224,236,172,24,4,96,2,39,128,237,
172,24,0,39,0,176,205,24,47,32,0,176,254,24,0,176,64,25,1,176,26,6,0,176,117,219,0,176,117,219,
0,176,117,219,0,41,0,176,23,187,0,176,60,226,0,41,0,176,23,187,0,176,60,226,0,176,60,226,1,176,
92,37,1,176,173,37,114,19,0,176,50,237,0,176,50,237,1,176,174,32,0,176,159,207,0,176,159,207,0,176,
159,207,0,176,188,1,0,176,188,1,0,176,250,187,0,176,188,1,0,176,188,1,1,176,131,34,0,176,16,251,
0,176,10,254,1,176,254,37,0,176,188,201,0,176,149,191,1,176,95,38,0,176,14,189,0,176,111,189,1,176,
176,38,0,176,33,190,1,176,1,39,2,44,2,104,2,96,14,3,0,181,255,13,32,243,64,14,0,161,213,3,
77,1,96,170,0,162,146,18,77,1,96,162,133,41,48,194,30,109,192,195,30,109,0,161,227,83,85,1,246,221,
0,162,25,18,51,37,246,221,133,41,224,193,131,117,192,195,131,117,0,161,213,3,76,9,94,170,0,162,18,2,
76,9,94,170,1,47,0,176,10,54,133,41,5,104,0,176,59,54,0,240,108,54,87,41,5,104,0,176,77,49,
224,246,46,56,0,176,118,55,224,246,46,56,0,161,232,83,83,9,246,221,0,162,50,82,83,41,246,221,1,47,
1,176,26,9,133,41,5,104,0,176,59,54,129,242,75,9,87,41,5,104,0,176,77,49,1,245,75,9,0,176,
118,55,1,245,75,9,6,106,0,208,53,43,0,208,150,43,0,208,231,43,0,208,72,44,0,208,169,44,0,208,
26,45,0,39,0,176,123,45,138,41,10,104,67,36,3,104,37,10,4,96,67,37,2,104,50,10,0,176,156,45,
1,0,2,13,173,201,0,176,149,29,3,13,204,108,0,169,0,176,134,4,1,176,26,6,38,5,1,176,174,32,
38,5,1,176,174,32,0,176,60,226,0,176,60,226,0,176,251,225,0,176,251,225,112,16,0,176,117,219,0,176,
117,219,2,13,144,201,0,176,112,212,0,176,159,207,0,176,159,207,0,176,188,1,0,176,188,1,1,176,131,34,
0,176,16,251,0,176,10,254,1,176,254,37,0,176,188,201,0,176,149,191,1,176,95,38,0,176,13,255,0,161,
25,3,73,1,98,170,0,162,18,34,73,9,98,170,0,176,255,13,32,243,64,14,0,161,213,3,77,1,98,170,
0,162,146,18,77,1,98,162,133,41,0,192,174,169,161,197,82,39,0,161,213,3,77,1,98,170,0,162,146,18,
77,1,98,162,133,41,0,192,22,106,48,199,94,176,0,161,213,3,75,1,84,115,0,162,210,19,73,1,84,65,
133,41,0,197,206,174,55,34,0,192,60,104,128,199,113,103,0,161,213,3,77,1,238,188,0,162,146,18,77,1,
110,189,133,41,0,192,66,119,31,50,61,34,0,192,1,122,55,34,0,192,115,123,192,195,255,124,0,161,25,3,
77,1,98,170,0,162,146,18,77,1,98,162,0,192,169,184,108,16,0,176,184,0,2,13,144,201,1,176,44,22,
0,41,0,176,23,187,0,176,60,226,1,176,134,40,38,5,1,176,213,4,1,176,48,33,0,176,250,187,2,13,
168,201,1,176,199,40,1,176,8,41,1,176,105,41,1,13,0,114,0,161,25,3,73,1,98,170,0,162,18,34,
73,9,98,170,0,176,255,13,32,243,64,14,0,161,213,3,77,1,96,170,0,162,146,18,77,1,96,162,133,41,
48,194,30,109,192,195,30,109,0,161,227,83,85,1,246,221,0,162,25,18,51,37,246,221,133,41,224,193,131,117,
192,195,131,117,0,161,213,3,76,9,94,170,0,162,18,2,76,9,94,170,1,47,0,176,10,54,133,41,5,104,
0,176,59,54,0,240,108,54,87,41,5,104,0,176,77,49,224,246,46,56,0,176,118,55,224,246,46,56,0,161,
232,83,83,9,246,221,0,162,50,82,83,41,246,221,1,47,1,176,26,9,133,41,5,104,0,176,59,54,129,242,
75,9,87,41,5,104,0,176,77,49,1,245,75,9,0,176,118,55,1,245,75,9,0,145,34,6,3,13,202,100,
0,145,1,0,0,145,32,5,3,13,201,116,0,149,1,0,0,145,91,1,2,41,0,176,230,191,1,0,0,162,
18,2,75,1,84,65,133,41,0,192,12,128,89,34,0,202,192,130,192,200,192,130,38,5,0,176,121,245,38,5,
0,176,50,237,1,176,202,41,0,176,25,235,0,176,60,226,136,40,129,40,0,176,9,196,0,176,184,0,0,176,
184,0,0,176,159,207,0,176,159,207,0,176,227,251,0,176,250,187,0,176,14,189,0,176,111,189,1,176,176,38,
0,176,33,190,1,176,1,39,3,13,204,114,0,169,0,176,53,4,5,13,204,114,203,169,0,144,0,176,53,4,
3,13,204,114,0,157,0,161,25,3,73,1,98,170,0,162,18,34,73,9,98,170,0,176,197,77,33,243,251,41,
5,13,204,114,204,157,0,138,0,161,25,3,73,1,98,170,0,162,18,34,73,9,98,170,1,176,166,44,145,241,
251,41,3,13,204,108,0,169,0,176,134,4,5,13,204,108,203,169,0,144,0,176,134,4,0,161,213,3,77,1,
98,170,0,162,146,18,77,1,98,162,133,41,0,192,22,106,0,192,94,176,0,161,213,3,75,1,84,115,0,162,
210,19,73,1,84,65,133,41,0,197,113,103,55,34,0,192,60,104,128,199,113,103,0,176,60,226,0,176,117,219,
0,176,121,220,0,176,188,1,1,176,215,44,3,13,204,114,0,169,0,176,53,4,0,161,25,3,77,1,106,172,
0,162,18,2,77,1,106,172,133,41,161,197,40,45,225,198,40,45,0,161,213,3,77,1,102,156,133,41,129,194,
141,47,33,195,141,47,3,13,201,116,0,149,0,161,227,83,85,1,114,205,133,41,33,195,80,49,33,195,80,49,
0,161,25,3,75,1,232,171,0,162,18,34,75,9,232,171,133,41,5,104,0,176,148,77,1,245,40,45,0,176,
197,77,97,249,40,45,0,161,213,3,81,9,102,172,0,162,18,34,81,9,102,172,1,47,0,176,231,56,133,41,
5,104,0,176,24,57,33,243,141,47,1,176,240,50,1,245,141,47,3,13,202,100,0,145,0,161,227,83,85,9,
114,205,1,47,0,176,231,56,133,41,5,104,0,176,24,57,33,243,80,49,1,176,240,50,1,245,80,49,1,176,
25,16,0,176,1,233,122,18,0,176,184,0,0,176,184,0,1,176,44,22,0,176,60,226,0,176,249,0,138,18,
38,5,1,176,174,32,38,5,0,176,121,245,0,176,159,207,139,18,0,176,250,187,0,176,227,251,0,176,33,190,
0,161,213,3,77,1,96,170,0,162,146,18,77,1,96,162,133,41,48,194,30,109,32,195,30,109,0,161,21,28,
77,9,98,170,0,162,18,2,77,9,98,170,1,47,0,176,10,54,133,41,5,104,0,176,59,54,0,240,108,54,
34,34,5,104,0,176,77,49,0,240,167,55,0,176,118,55,32,243,167,55,0,161,25,3,77,1,238,188,0,162,
146,18,77,1,110,189,208,194,71,156,1,13,0,32,16,4,0,176,135,0,0,161,213,3,87,1,246,221,0,162,
146,18,87,1,246,221,0,192,1,122,3,13,202,100,0,145,0,161,227,83,85,9,246,221,1,47,0,176,231,56,
133,41,5,104,0,176,24,57,0,240,73,57,0,176,215,59,0,240,11,61,38,5,0,176,170,230,2,13,144,201,
0,176,149,186,1,13,0,114,0,161,25,3,73,1,98,170,0,162,18,34,73,9,98,170,0,176,255,13,32,243,
64,14,0,161,213,3,77,1,96,170,0,162,146,18,77,1,96,162,133,41,49,194,33,51,33,195,33,51,0,161,
21,28,77,9,98,170,0,162,18,2,77,9,98,170,1,47,0,176,10,54,133,41,5,104,1,176,239,51,1,240,
33,51,1,176,239,51,33,243,33,51,31,50,30,34,1,192,32,52,2,41,1,192,24,55,97,196,24,55,28,34,
0,192,140,158,31,50,30,34,1,192,32,52,2,41,1,192,24,55,97,196,24,55,0,161,213,3,81,9,238,188,
0,162,18,34,81,9,46,173,1,47,0,176,231,56,0,176,215,59,1,240,56,57,3,13,202,100,0,145,0,161,
227,83,85,9,246,221,1,47,0,176,231,56,0,176,215,59,1,240,12,60,0,161,213,3,77,1,238,188,33,195,
251,61,3,13,201,116,0,149,0,161,227,83,85,1,246,221,1,192,12,60,0,161,25,3,75,1,232,171,0,162,
18,34,75,9,232,171,133,41,5,104,0,176,197,77,33,243,56,57,0,176,197,77,193,243,56,57,0,161,25,3,
77,1,106,172,0,162,18,2,77,1,106,172,133,41,193,195,56,57,97,196,56,57,0,161,213,3,73,9,238,172,
0,162,18,34,73,9,46,173,1,47,0,176,24,63,133,41,5,104,0,176,73,63,0,240,122,63,0,176,106,64,
161,245,65,64,0,161,25,3,77,1,238,188,0,162,146,18,77,1,110,189,224,193,71,156,2,13,173,201,0,176,
149,29,2,13,173,201,0,176,149,29,0,161,25,3,77,1,98,170,0,162,146,18,77,1,98,162,0,192,46,139,
2,13,178,201,0,162,23,114,81,13,114,205,2,47,5,104,0,208,211,42,0,176,244,42,6,106,0,208,53,43,
0,208,150,43,0,208,231,43,0,208,72,44,0,208,169,44,0,208,26,45,0,39,0,176,123,45,138,41,10,104,
67,36,3,104,37,10,4,96,67,37,2,104,50,10,0,176,156,45,1,0,2,44,2,104,2,96,14,3,0,181,
255,13,32,243,64,14,0,161,227,83,85,9,246,221,1,47,0,176,231,56,133,41,5,104,0,176,24,57,0,240,
73,57,1,0,0,161,227,83,85,1,246,221,0,192,194,115,0,162,18,34,75,9,84,65,2,47,11,104,0,161,
25,3,75,1,212,114,133,41,3,104,0,176,213,35,0,176,22,36,0,208,26,37,0,176,237,37,2,41,38,1,
113,32,1,176,187,64,1,176,12,65,90,32,115,1,25,10,1,176,61,65,132,45,7,0,117,1,132,40,37,1,
1,176,126,65,1,176,175,65,132,40,6,104,57,37,3,104,35,1,2,96,37,1,1,176,61,65,132,40,36,1,
73,44,117,1,1,176,61,65,132,40,6,104,57,37,3,104,36,1,2,96,120,1,73,44,117,1,1,176,61,65,
1,176,240,65,132,40,6,104,57,37,3,104,36,1,2,96,121,1,1,176,49,66,132,45,7,0,6,104,57,32,
3,104,119,1,2,96,122,1,132,40,6,104,57,37,3,104,36,1,2,96,121,1,1,176,114,66,132,45,7,0,
117,1,132,40,36,1,73,44,123,1,1,176,114,66,122,1,1,0,126,18,1,176,179,66,73,44,128,1,132,40,
39,1,1,176,244,66,1,176,37,67,1,176,102,67,1,176,183,67,126,18,1,176,8,68,90,32,3,104,115,18,
121,1,91,32,3,104,115,18,121,1,110,32,3,104,115,18,121,1,37,18,1,176,92,37,1,176,57,68,132,40,
4,104,100,10,1,176,122,68,0,176,45,202,1,0,132,40,0,176,251,225,73,44,2,104,117,1,1,0,132,40,
6,104,57,37,3,104,134,1,2,96,120,1,73,44,126,1,0,176,208,197,0,176,173,211,1,176,219,68,57,37,
2,104,12,96,132,40,7,104,73,44,3,104,120,1,2,96,134,1,4,96,73,44,2,104,117,1,136,40,0,176,
74,196,1,176,28,69,132,45,7,0,35,1,132,40,6,104,57,37,3,104,35,1,2,96,134,1,0,176,208,197,
0,176,74,196,0,161,153,55,75,1,94,170,0,162,18,2,75,9,94,170,1,176,93,69,33,243,158,69,38,5,
130,40,1,176,101,35,1,176,174,32,130,40,0,176,25,235,0,176,60,226,130,40,0,176,52,219,1,176,5,26,
130,40,10,104,131,45,7,0,3,104,1,176,109,22,2,13,144,201,0,176,125,226,0,176,184,0,130,40,0,176,
8,230,0,176,123,1,130,40,0,176,227,251,0,176,250,187,0,161,213,3,85,5,110,173,0,162,18,34,85,37,
110,173,1,47,0,176,24,63,133,41,5,104,0,176,73,63,0,240,122,63,0,176,106,64,96,249,155,64,108,18,
0,176,184,0,136,40,1,176,109,22,1,176,151,26,124,18,0,176,58,206,8,59,3,43,0,176,25,235,0,176,
249,0,1,0,124,17,0,176,60,226,38,5,0,176,58,1,1,18,37,1,1,0,38,5,0,176,97,251,127,18,
0,176,104,187,8,59,3,43,0,176,159,207,0,176,104,187,1,0,127,17,0,176,185,187,111,18,0,176,250,187,
0,176,250,187,0,176,41,215,0,176,33,190,0,176,36,191,1,176,151,26,0,176,23,187,38,5,1,176,101,35,
0,176,104,187,0,176,188,1,0,176,117,219,0,176,249,0,0,176,82,248,0,176,251,245,1,176,87,5,0,176,
124,188,1,176,95,70,0,176,21,234,1,176,89,21,0,176,114,190,1,176,176,70,0,176,36,191,2,13,176,202,
28,34,0,192,140,158,29,34,0,192,225,159,30,34,0,192,128,161,31,34,0,192,37,163,32,34,0,192,139,164,
33,34,0,192,58,166,96,196,3,168,0,176,254,246,0,176,25,235,0,176,25,235,38,5,0,176,58,1,0,176,
123,1,0,176,123,1,1,176,87,5,0,161,213,3,73,9,238,172,0,162,18,34,73,9,46,173,2,57,87,57,
3,41,6,104,0,55,8,39,2,104,2,96,100,1,1,47,0,176,24,63,133,41,5,104,0,176,73,63,0,240,
122,63,0,176,106,64,0,240,155,64,2,57,87,57,57,34,7,104,0,55,8,55,55,32,2,104,2,96,86,1,
0,145,2,7,1,0,2,57,87,57,3,41,6,104,0,55,8,39,2,104,2,96,82,1,0,145,196,2,1,0,
0,145,0,4,133,41,5,104,0,176,37,69,48,242,86,69,1,0,0,161,25,3,77,1,98,170,0,162,146,18,
77,1,98,162,0,41,192,195,250,71,48,50,47,50,49,34,0,192,2,137,0,197,46,139,2,13,139,202,0,161,
25,3,169,5,84,90,0,162,5,18,9,1,84,73,133,41,5,104,0,176,223,67,0,245,110,65,1,176,1,71,
0,245,110,65,2,13,190,201,2,43,69,1,0,145,138,2,1,0,89,1,1,0,124,17,1,176,50,71,2,13,
144,201,0,176,74,196,13,17,0,176,249,0,13,17,0,176,60,226,0,176,60,226,111,17,0,176,123,1,111,17,
0,176,104,187,0,176,59,188,111,17,0,176,250,187,131,45,8,0,3,0,47,1,1,0,0,176,23,187,36,19,
1,1,1,0,0,176,185,187,0,176,170,230,0,176,80,242,38,5,1,176,115,71,1,176,220,27,1,176,45,28,
4,13,144,201,131,204,139,40,1,176,180,71,1,176,245,71,1,0,8,13,144,201,131,204,138,202,131,204,1,176,
54,72,7,13,204,111,201,131,204,170,0,131,1,176,135,72,0,176,74,196,2,41,1,1,0,176,74,196,0,176,
214,186,0,176,95,236,0,176,249,0,38,5,0,176,170,230,2,41,57,1,38,5,0,176,170,230,0,176,143,197,
0,176,250,187,136,40,137,40,2,41,58,1,0,176,66,233,38,5,0,176,33,190,38,5,0,176,114,190,38,5,
1,176,248,72,0,176,111,189,1,176,105,73,0,145,255,5,1,13,0,120,1,0,0,145,128,5,1,13,0,115,
1,0,2,13,190,201,0,161,213,3,79,5,98,170,0,162,18,2,79,9,98,170,1,47,0,176,15,193,0,176,
64,193,128,242,167,55,2,13,144,201,0,176,74,196,2,13,144,201,2,41,1,1,0,176,74,196,132,18,0,176,
214,186,4,13,144,201,131,204,0,176,153,210,8,13,144,201,131,204,138,202,131,204,1,176,54,72,112,17,0,176,
60,226,112,17,0,176,249,0,2,13,168,201,1,176,186,73,38,5,0,176,58,1,2,13,168,201,2,41,1,1,
38,5,1,176,186,73,0,176,123,206,40,18,0,176,104,187,1,176,166,35,136,40,137,40,2,41,58,1,1,176,
166,35,1,176,176,70,2,13,129,202,0,161,25,3,71,1,222,185,138,41,46,1,1,176,251,73,128,247,178,6,
0,145,146,5,2,13,131,202,1,0,2,13,178,202,2,41,38,1,125,32,4,104,30,10,1,176,60,74,126,32,
1,176,187,64,127,32,1,176,125,74,1,176,190,74,124,18,38,5,0,176,58,1,0,176,25,235,2,13,168,201,
1,176,186,73,0,176,214,186,0,176,202,225,1,176,239,74,0,176,227,251,0,176,205,188,0,176,222,231,0,176,
63,247,1,176,176,38,1,176,48,75,1,176,161,75,1,176,242,75,1,176,173,37,1,176,67,76,1,176,164,76,
1,176,245,76,138,41,46,1,6,106,16,223,199,4,16,223,248,4,16,223,41,5,16,223,90,5,16,223,139,5,
16,223,188,5,2,39,224,236,237,5,47,48,48,48,49,32,0,176,136,11,0,176,185,11,0,145,206,0,0,162,
18,2,0,32,0,0,1,0,0,145,180,1,0,162,18,34,83,41,84,65,1,0,0,145,220,1,0,162,146,50,
83,41,98,162,1,0,0,145,226,6,0,162,210,19,73,33,84,65,1,0,0,145,245,6,0,162,146,18,79,33,
98,164,1,0,0,145,21,6,0,162,146,18,77,33,98,162,1,0,0,145,106,5,0,162,18,2,75,33,84,65,
1,0,0,161,25,3,77,1,98,170,0,162,146,18,77,33,98,162,32,195,61,83,0,161,25,3,77,1,106,172,
0,162,18,2,77,33,106,172,0,192,61,88,0,162,18,34,73,41,84,73,31,34,5,104,0,176,6,53,0,240,
120,51,0,176,201,53,0,240,120,51,0,145,2,7,0,161,213,3,79,9,98,172,0,162,18,2,79,41,98,172,
1,0,0,162,136,20,73,45,98,170,31,34,9,104,0,161,25,3,71,1,98,170,1,176,70,77,0,240,178,6,
1,176,119,77,0,240,178,6,0,161,25,3,169,1,84,90,0,162,25,18,9,33,84,73,133,41,5,104,0,176,
223,67,0,240,110,65,0,176,114,68,0,240,110,65,0,162,25,18,13,33,98,170,133,41,5,104,0,176,201,71,
0,240,250,71,0,176,167,74,0,240,250,71,0,161,25,3,75,33,232,171,0,162,18,34,75,9,232,171,133,41,
5,104,0,176,148,77,0,240,9,75,0,176,197,77,0,240,9,75,136,40,130,40,35,34,1,1,128,40,0,176,
254,246,0,176,214,186,0,176,25,235,38,5,0,176,58,1,0,176,123,1,0,176,250,187,0,161,213,26,77,5,
96,170,0,162,146,18,77,1,96,162,133,41,1,192,168,77,1,192,168,77,0,161,213,3,77,1,238,188,0,162,
146,18,77,1,110,189,133,41,0,192,66,119,87,41,0,192,113,120,55,34,0,192,115,123,96,196,255,124,0,176,
134,249,0,176,249,0,0,176,23,187,0,176,104,187,0,176,143,197,1,176,105,73,1,176,248,72,1,176,215,44,
0,176,185,253,0,162,18,2,75,1,84,65,0,192,192,130,38,5,58,32,0,208,4,199,0,176,82,248,38,5,
0,176,121,245,0,176,58,206,112,17,0,176,184,205,0,176,23,187,13,16,1,176,202,41,2,13,153,201,1,176,
83,4,1,176,235,77,1,176,60,78,2,13,137,202,1,176,125,78,1,176,218,36,1,176,190,78,0,176,177,212,
130,40,136,40,1,176,44,22,1,176,151,26,0,176,251,225,1,176,239,78,0,176,123,1,0,176,104,187,0,176,
36,252,0,176,250,187,0,161,25,3,179,1,110,189,0,162,146,18,179,1,110,189,193,195,48,79,0,176,55,210,
0,176,202,225,38,5,0,176,121,245,38,5,58,32,0,208,4,199,0,176,58,1,1,176,24,21,1,176,66,81,
1,176,131,81,1,176,196,81,13,16,0,176,60,226,0,176,23,187,0,176,58,206,1,176,5,82,1,176,5,82,
1,176,209,3,1,176,209,3,0,176,123,1,0,176,251,245,0,176,66,233,0,176,250,187,2,13,137,202,1,176,
70,82,4,13,137,202,144,203,1,176,135,82,38,5,0,176,53,224,38,5,1,176,216,82,38,5,0,176,188,201,
4,13,137,202,170,201,38,5,0,176,185,253,1,176,41,83,1,176,122,83,38,5,0,176,170,230,38,5,37,18,
0,176,97,251,38,5,0,176,249,205,38,5,109,18,0,176,249,205,0,176,60,226,0,176,182,219,1,176,44,22,
35,18,0,176,47,212,1,176,48,33,114,18,0,176,196,233,0,176,227,251,40,18,0,176,250,187,1,176,235,83,
117,18,0,176,134,249,1,176,44,84,119,18,1,176,44,84,0,176,212,223,121,18,0,176,212,223,0,176,114,190,
123,18,0,176,114,190,0,176,10,254,125,18,0,176,10,254,1,176,109,84,127,18,1,176,109,84,1,176,174,84,
129,18,1,176,174,84,0,176,36,191,0,176,134,249,2,13,35,109,0,162,18,34,75,9,84,65,1,176,255,84,
2,13,35,110,0,162,146,50,77,9,98,162,6,106,0,208,177,38,0,208,242,38,0,208,51,39,0,208,116,39,
0,208,181,39,0,208,246,39,1,176,64,85,3,13,178,201,0,35,0,162,18,98,81,13,110,189,1,176,129,85,
3,13,139,197,0,35,0,162,148,50,75,13,110,189,6,106,0,208,111,46,0,208,160,46,0,208,209,46,0,208,
2,47,0,208,51,47,0,208,100,47,1,176,194,85,2,13,35,108,144,193,149,148,3,13,108,116,0,35,0,161,
213,3,77,1,98,170,0,162,146,18,77,1,98,162,33,195,3,86,2,13,35,114,1,176,93,88,0,240,178,6,
0,161,213,26,75,5,84,90,0,162,18,34,73,9,84,74,0,192,120,51,0,161,213,3,77,9,98,170,0,162,
18,2,77,9,98,170,133,41,0,192,108,54,0,197,167,55,0,161,213,3,73,9,238,172,0,162,18,34,73,9,
46,173,133,41,0,192,122,63,96,201,155,64,5,146,248,97,1,0,5,146,120,98,1,0,5,146,248,98,1,0,
5,146,120,99,1,0,5,146,248,99,5,147,120,100,1,0,4,146,20,141,5,147,248,100,1,0,5,146,120,98,
1,0,0,176,254,246,67,50,80,34,50,10,2,96,70,10,0,176,9,196,0,176,182,219,0,176,249,0,38,5,
58,37,0,208,252,30,67,50,80,34,4,104,50,10,1,176,25,27,70,10,0,176,97,251,1,0,117,50,68,34,
40,10,2,96,70,10,0,176,196,233,117,50,68,34,55,10,2,96,70,10,0,176,104,187,117,50,68,34,60,10,
2,96,70,10,193,179,45,28,117,50,68,34,60,10,2,96,90,10,1,176,94,89,117,50,68,50,67,50,80,34,
60,10,2,96,70,10,0,176,52,219,1,176,159,89,1,176,224,89,0,176,33,190,1,176,156,6,0,176,23,253,
0,176,114,190,0,176,195,190,1,176,49,90,0,176,36,191,0,176,149,191,1,176,130,90,1,176,211,90,0,176,
137,200,0,176,111,189,1,176,105,73,0,176,192,189,0,176,63,247,0,176,44,231,1,176,52,91,1,176,3,1,
0,176,223,202,1,176,54,72,1,176,149,91,1,176,245,76,1,176,230,91,1,176,55,92,0,176,125,216,1,176,
135,72,0,176,222,231,97,180,136,92,0,161,15,19,83,1,238,188,0,162,146,18,83,1,110,189,81,192,201,92,
0,161,8,19,77,1,98,170,1,176,60,93,0,161,200,19,77,1,98,170,0,162,146,18,77,1,98,162,33,195,
125,93,0,161,200,19,77,1,238,188,161,192,249,94,2,13,151,201,0,161,200,19,77,5,98,170,0,162,15,50,
77,9,98,170,1,192,181,95,0,161,200,51,85,1,246,221,0,162,8,18,51,37,246,221,81,192,30,97,0,161,
213,26,75,1,84,115,0,162,210,18,73,1,84,65,160,192,206,174,0,161,200,58,75,1,84,115,0,162,136,50,
77,9,98,162,0,176,162,42,0,161,8,28,77,5,158,162,0,162,136,18,77,1,94,162,133,41,81,192,168,77,
96,196,47,111,5,146,248,97,1,0,5,146,120,98,5,147,248,100,1,0,5,146,120,99,1,0,4,146,20,141,
1,0,4,146,20,141,5,147,248,100,1,0,4,146,20,141,5,147,248,100,1,0,5,146,248,97,1,0,0,145,
207,32,1,0,0,145,203,32,1,0,0,145,196,32,1,0,0,145,249,32,1,0,0,145,2,33,1,0,0,145,
221,32,0,176,139,235,0,145,54,33,0,176,10,240,0,161,200,48,75,1,84,115,1,0,0,145,10,33,1,176,
16,0,5,146,212,137,1,0,5,146,120,98,1,0,5,146,248,98,1,0,5,146,120,99,5,147,120,100,1,0,
5,146,248,99,1,0,4,146,20,141,1,0,5,146,120,98,1,0,0,145,207,32,0,176,186,245,0,145,203,32,
0,176,23,187,0,145,196,32,1,176,149,98,0,145,249,32,1,0,0,145,2,33,1,0,0,145,221,32,0,176,
159,207,0,145,54,33,0,176,10,240,0,145,242,32,0,176,251,220,0,145,228,32,1,176,230,98,0,145,10,33,
1,176,16,0,5,146,248,97,1,0,5,146,248,98,1,0,5,146,248,97,1,0,5,146,120,98,1,0,5,146,
248,98,1,0,5,146,248,97,1,0,5,146,120,98,1,0,0,161,213,3,77,1,98,170,0,162,146,18,77,1,
98,162,0,192,6,172,0,161,213,3,77,1,238,188,133,41,0,192,226,111,0,192,50,114,0,161,213,3,75,1,
238,172,0,162,146,18,75,5,110,189,133,41,0,192,0,0,31,34,0,192,1,122,34,50,51,34,0,192,113,120,
55,34,0,192,115,123,14,34,96,196,255,124,0,192,52,126,0,161,213,19,75,1,84,115,0,162,210,18,73,5,
84,65,133,41,0,192,0,0,0,192,58,105,0,161,213,3,81,1,98,170,0,162,146,18,77,5,98,162,133,41,
0,192,0,0,0,192,34,110,1,176,209,3,1,176,131,34,0,176,21,234,1,176,39,99,1,176,168,99,0,176,
74,196,0,176,222,231,1,176,57,100,0,176,23,187,0,176,114,190,1,176,154,100,1,176,105,73,38,5,49,52,
68,36,4,104,75,10,0,176,249,205,0,176,58,1,1,176,27,101,0,176,192,189,2,41,68,1,1,176,172,101,
0,176,123,1,1,176,253,101,0,176,188,201,0,176,107,254,1,176,110,102,49,52,68,36,0,176,66,233,0,176,
250,187,1,176,207,102,0,176,149,191,0,176,205,188,1,176,48,103,0,176,77,241,0,176,124,188,5,146,212,137,
1,0,5,146,120,98,1,0,5,146,248,99,1,0,5,146,120,98,1,0,5,146,120,98,1,0,5,146,248,98,
1,0,5,146,248,98,1,0,5,146,120,98,1,0,5,146,120,98,1,0,5,146,248,97,1,0,0,162,146,50,
77,9,98,162,6,106,0,208,177,38,0,208,242,38,0,208,51,39,0,208,116,39,0,208,181,39,0,208,246,39,
138,41,1,176,198,19,0,176,104,40,0,162,25,50,87,9,230,171,6,106,0,208,111,46,0,208,160,46,0,208,
209,46,0,208,2,47,0,208,51,47,0,208,100,47,0,39,0,176,231,47,138,41,1,176,113,103,1,0,0,145,
192,0,31,36,0,208,98,22,0,176,205,24,2,41,18,104,6,106,0,208,116,32,0,208,181,32,0,208,246,32,
0,208,55,33,0,208,104,33,0,208,185,33,32,238,234,33,0,176,11,34,0,162,35,18,0,0,0,0,0,176,
44,34,1,0,0,161,213,26,75,1,84,115,0,162,210,18,73,1,84,65,0,192,113,103,0,161,213,26,75,1,
84,115,0,162,210,18,73,1,84,65,0,192,29,175,0,162,18,2,75,1,84,65,0,192,192,130,0,161,21,21,
77,1,98,170,0,162,146,18,77,1,98,162,129,194,168,77,0,161,213,3,77,1,98,170,0,162,146,18,77,1,
98,162,0,192,22,106,2,161,213,3,73,5,226,155,2,162,210,19,73,5,226,155,177,196,162,103,2,161,213,3,
73,5,226,155,2,162,210,19,73,5,226,155,0,197,237,178,3,13,201,116,0,149,0,161,213,3,85,1,246,221,
1,192,81,104,4,13,201,116,104,149,0,161,213,3,85,1,246,221,1,197,101,106,2,13,149,201,0,161,25,3,
85,1,246,221,65,193,56,57,0,161,25,3,73,1,100,171,0,162,18,2,73,1,100,171,133,41,32,195,46,146,
32,195,46,146,0,161,213,3,77,1,98,170,0,162,146,18,77,1,98,162,97,196,53,109,0,161,213,3,77,1,
98,170,0,162,146,18,77,1,98,162,192,195,6,172,0,161,25,3,73,1,100,171,0,162,18,2,73,1,100,171,
1,192,83,111,0,161,25,3,73,1,100,171,0,162,18,2,73,1,100,171,1,192,78,114,1,176,113,103,68,34,
1,176,134,117,0,176,184,0,68,34,0,176,82,198,0,176,117,219,0,176,148,228,1,176,199,117,68,34,1,176,
5,26,0,176,78,207,0,176,99,204,0,176,56,245,0,176,44,216,68,34,0,176,204,196,50,34,1,176,101,35,
0,176,58,1,1,176,22,5,1,176,24,118,1,176,89,118,1,176,170,118,1,176,11,119,1,176,92,119,1,176,
173,119,68,34,0,176,5,205,0,176,196,233,1,176,14,120,0,176,122,215,1,176,110,102,68,34,1,176,45,28,
0,176,250,187,1,176,79,120,1,176,245,76,1,176,160,120,0,176,115,237,1,176,1,121,1,176,98,121,68,34,
0,176,253,235,1,176,95,70,1,176,64,23,1,176,195,121,1,176,20,122,1,176,101,122,0,176,185,253,0,176,
58,1,0,176,25,235,1,176,151,26,1,176,182,122,1,176,87,5,0,162,25,18,13,1,98,170,2,47,9,104,
0,161,25,3,15,0,92,170,0,162,25,50,13,5,92,170,0,176,26,80,176,244,61,83,0,161,213,3,77,1,
98,170,0,162,146,18,77,1,98,162,97,196,247,122,0,161,25,3,77,1,98,170,0,162,146,18,77,1,98,162,
32,195,188,132,0,161,25,3,77,1,106,172,0,162,18,2,77,1,106,172,1,192,40,45,0,161,25,3,77,1,
98,170,0,162,146,18,77,1,98,162,192,195,250,71,0,161,213,26,75,1,84,115,0,162,210,18,73,1,84,65,
0,192,58,105,2,13,178,201,0,162,23,114,81,13,114,205,2,47,5,104,0,208,211,42,0,176,244,42,6,106,
0,208,53,43,0,208,150,43,0,208,231,43,0,208,72,44,0,208,169,44,0,208,26,45,0,176,156,45,0,162,
148,50,75,13,110,189,2,47,7,104,0,161,25,3,79,1,42,172,0,176,46,46,6,106,0,208,111,46,0,208,
160,46,0,208,209,46,0,208,2,47,0,208,51,47,0,208,100,47,32,179,8,48,6,106,0,208,105,30,0,208,
154,30,0,208,203,30,0,208,252,30,0,208,45,31,0,208,94,31,32,238,143,31,0,176,230,191,0,161,213,3,
75,1,238,172,0,162,146,18,75,1,110,189,2,47,0,162,146,18,75,1,238,172,32,195,66,119,0,161,227,83,
85,9,246,221,0,162,18,2,85,41,246,221,2,47,5,104,0,176,133,62,208,242,73,57,138,41,5,104,0,176,
231,62,208,242,73,57,0,176,231,62,208,242,73,57,1,0,0,161,213,3,73,9,238,172,0,162,18,34,73,9,
46,173,1,47,0,176,24,63,0,176,106,64,32,243,155,64,144,40,2,104,8,96,139,40,2,104,124,1,138,41,
138,42,2,104,124,1,1,176,174,32,1,176,101,35,144,40,2,104,8,96,139,40,2,104,113,1,138,41,138,42,
2,104,113,1,1,176,235,77,0,176,144,222,144,40,2,104,18,96,136,57,138,45,6,0,7,104,87,57,8,57,
55,50,64,34,2,104,125,1,139,40,2,104,109,1,138,41,138,42,2,104,109,1,0,176,25,235,0,176,60,226,
1,176,202,41,0,176,205,188,129,40,136,40,1,176,44,22,0,176,1,248,144,40,2,104,8,96,139,40,2,104,
111,1,138,41,138,42,2,104,111,1,0,176,227,251,0,176,59,188,2,13,175,201,1,176,135,123,144,40,2,104,
8,96,139,40,2,104,110,1,138,41,138,42,2,104,110,1,0,176,8,230,0,176,123,1,0,161,222,19,87,1,
246,204,0,162,18,2,85,1,118,205,133,41,0,197,1,122,0,192,1,122,1,47,0,176,35,62,0,161,213,3,
85,9,246,221,0,162,18,2,85,41,246,221,2,47,5,104,0,176,133,62,192,243,1,122,0,176,231,62,192,243,
1,122,2,44,2,43,16,1,0,145,119,0,1,0,1,176,174,32,57,34,0,176,249,205,0,176,173,211,1,176,
27,37,1,176,202,41,0,176,56,245,0,176,151,214,1,176,200,123,1,176,9,124,1,176,74,124,1,176,166,35,
1,176,235,77,1,176,1,39,0,176,130,208,0,176,208,197,0,161,25,3,173,1,238,188,0,162,146,18,173,1,
110,189,192,195,226,242,0,161,222,19,87,1,246,204,0,162,18,2,85,1,118,205,133,41,0,197,1,122,0,192,
1,122,0,161,213,3,85,9,246,221,0,162,18,2,85,41,246,221,1,47,0,176,35,62,0,176,231,62,192,243,
1,122,13,32,23,3,0,176,202,225,35,32,23,3,108,17,0,176,184,0,30,32,23,3,13,17,0,176,60,226,
30,32,23,3,0,176,60,226,30,32,23,3,0,176,249,0,37,32,23,3,1,176,174,32,32,32,23,3,0,176,
123,1,32,32,23,3,0,176,104,187,40,32,23,3,0,176,188,1,2,39,23,3,2,41,23,4,0,176,33,190,
0,176,16,251,2,39,23,3,2,41,23,4,0,176,188,201,2,39,23,3,2,41,23,4,0,176,14,189,0,176,
234,200,1,176,159,89,1,176,159,89,13,17,107,34,1,176,139,124,1,176,159,89,13,17,0,176,249,205,128,40,
0,176,74,196,0,176,117,219,0,176,74,196,128,40,0,176,74,196,0,176,144,236,1,176,204,124,1,176,83,4,
130,40,0,176,25,235,0,176,249,0,59,34,5,104,224,236,85,26,0,176,173,211,60,34,5,104,32,238,74,27,
0,176,78,197,1,176,213,4,0,176,170,230,0,176,124,188,130,40,0,176,159,207,1,176,48,33,0,176,250,187,
1,176,131,34,0,176,44,216,1,176,49,90,1,176,13,125,2,41,55,1,1,176,94,125,138,41,122,1,6,106,
0,208,205,27,0,208,254,27,0,208,47,28,0,208,96,28,0,208,145,28,0,208,210,28,0,39,0,176,19,29,
1,176,175,125,138,41,59,1,0,145,192,0,28,32,224,236,172,24,4,96,2,39,128,237,172,24,1,176,240,125,
0,145,91,1,0,176,230,191,0,161,213,3,75,1,84,115,0,162,210,19,73,1,84,65,133,41,0,197,206,174,
55,34,0,192,60,104,128,199,113,103,0,161,21,28,75,9,98,170,0,162,18,2,77,9,98,170,1,47,0,176,
10,54,133,41,5,104,0,176,59,54,0,240,108,54,34,34,5,104,0,176,77,49,32,243,167,55,0,176,118,55,
32,243,167,55,0,162,25,18,13,1,98,170,133,41,5,104,0,176,201,71,0,240,250,71,0,176,167,74,0,240,
46,139,3,13,202,100,0,145,0,161,227,83,85,9,246,221,1,47,0,176,231,56,133,41,5,104,0,176,24,57,
0,240,194,115,0,176,215,59,96,249,194,115,0,161,213,3,77,1,238,188,0,162,146,18,77,1,110,189,133,41,
0,192,66,119,0,192,255,124,0,176,86,0,0,176,58,1,0,176,134,249,0,176,60,226,1,176,209,3,0,176,
104,187,0,176,250,187,0,176,188,235,0,176,33,190,0,176,195,190,0,176,133,209,0,161,213,3,77,1,98,170,
0,162,146,18,77,1,98,162,1,192,82,39,0,161,213,3,77,1,238,188,133,41,193,195,129,30,1,192,129,30,
134,40,50,36,11,104,14,54,6,0,108,38,6,0,6,104,136,45,6,0,3,104,85,10,1,0,60,37,141,40,
13,104,131,40,6,104,50,10,68,36,2,104,246,12,1,0,140,43,138,43,3,104,50,10,1,0,109,33,3,0,
11,104,140,44,140,43,8,104,14,38,6,0,5,104,141,40,3,104,50,10,1,0,140,44,138,44,8,104,138,43,
14,38,6,0,86,38,9,0,2,104,50,10,14,36,86,38,6,0,136,45,6,0,90,10,132,40,142,40,11,104,
140,43,138,43,8,104,140,45,6,0,138,45,6,0,3,104,55,10,1,0,140,44,140,43,43,104,138,44,138,43,
40,104,136,43,3,0,37,104,57,38,6,0,3,0,51,37,3,0,18,104,34,36,3,0,110,36,3,0,13,104,
131,40,11,104,141,40,9,104,138,43,3,0,138,45,6,0,3,0,3,104,55,10,1,0,51,37,12,104,132,40,
68,36,3,0,3,104,45,10,1,0,132,40,68,36,3,104,37,10,1,0,138,44,89,36,138,45,6,0,14,38,
9,0,50,10,91,37,140,43,138,43,50,10,51,53,110,53,34,37,16,104,138,43,5,104,141,40,3,104,55,10,
1,0,136,40,3,104,60,10,1,0,140,43,138,43,3,104,55,10,1,0,68,36,50,10,138,43,47,54,6,0,
72,38,6,0,12,104,14,54,9,0,108,54,9,0,109,38,9,0,5,104,141,40,3,104,55,10,1,0,138,43,
60,38,6,0,14,54,9,0,108,38,9,0,55,10,60,36,14,38,9,0,9,104,57,38,6,0,3,0,5,104,
140,45,6,0,2,104,50,10,49,52,81,36,14,38,6,0,5,104,111,33,3,104,50,10,1,0,132,40,141,40,
3,0,19,104,49,36,3,0,81,36,3,0,14,104,68,36,3,0,138,45,6,0,3,0,8,104,140,43,3,0,
140,45,6,0,3,0,2,104,85,10,1,0,60,38,8,0,40,38,10,0,3,104,175,10,1,0,40,38,10,0,
60,37,16,104,136,40,3,0,13,104,47,36,3,0,72,36,3,0,8,104,89,36,3,0,91,36,3,0,3,104,
162,10,1,0,72,37,14,36,7,104,86,38,6,0,3,0,3,104,175,10,1,0,76,37,140,43,138,43,3,104,
90,10,1,0,140,43,14,38,6,0,86,38,9,0,3,104,90,10,1,0,140,44,140,43,16,104,138,44,138,43,
13,104,51,37,3,0,34,37,3,0,110,37,3,0,4,104,90,10,1,0,3,96,60,10,1,0,134,40,21,104,
80,10,136,40,2,104,90,10,138,43,138,45,6,0,138,45,9,0,2,104,70,10,108,36,139,43,2,104,120,10,
138,43,14,38,6,0,2,104,112,10,14,52,109,36,112,10,138,43,14,38,6,0,16,104,141,40,8,104,140,44,
140,43,3,104,90,10,2,96,112,10,1,0,142,40,3,0,132,40,3,104,70,10,1,0,86,36,14,38,6,0,
6,104,132,40,3,0,3,104,112,10,1,0,138,43,109,54,6,0,108,54,6,0,14,38,6,0,112,10,140,44,
140,43,42,104,138,44,138,43,39,104,51,37,3,0,34,37,3,0,110,37,3,0,60,37,3,0,12,104,140,45,
6,0,3,0,3,104,90,10,1,0,138,45,6,0,2,104,60,10,14,96,60,37,3,0,132,40,10,104,51,37,
3,0,34,37,3,0,110,37,3,0,3,104,60,10,1,0,51,37,134,44,3,104,90,10,1,0,107,37,138,43,
138,45,6,0,14,38,9,0,3,104,55,10,1,0,14,52,108,36,4,104,141,40,2,104,112,10,60,37,140,43,
138,43,3,104,90,10,1,0,138,43,37,38,6,0,3,104,112,10,1,0,86,36,14,38,6,0,50,38,9,0,
4,104,141,40,2,104,90,10,60,37,138,43,14,104,14,38,6,0,3,0,108,38,6,0,3,0,109,38,6,0,
3,0,3,104,50,10,2,96,80,10,60,37,140,43,138,43,65,10,34,53,51,53,110,37,5,104,65,10,14,36,
2,104,120,10,68,36,9,104,51,37,3,0,34,37,3,0,110,37,3,0,2,104,70,10,138,43,138,45,6,0,
12,104,60,36,3,0,9,104,34,36,3,0,51,37,3,0,110,37,3,0,2,104,55,10,1,0,11,5,0,176,
86,205,2,13,153,201,16,52,34,36,1,13,0,32,25,10,50,36,7,10,138,44,136,40,7,10,37,37,136,40,
7,10,2,43,13,1,0,176,135,0,0,176,74,196,4,13,144,201,175,204,1,176,33,126,0,145,162,39,0,176,
97,251,0,145,202,38,0,176,97,251,38,5,0,176,204,196,0,145,162,39,0,176,249,0,0,145,202,38,0,176,
249,0,136,40,11,5,108,36,112,10,51,53,34,53,110,37,108,38,6,0,112,10,0,145,162,39,110,36,108,38,
6,0,50,10,0,176,25,235,2,13,181,206,0,145,202,38,0,176,25,235,1,13,0,97,138,43,14,54,6,0,
13,38,6,0,6,104,50,38,9,0,3,0,2,104,112,10,14,52,108,36,130,10,0,145,162,39,0,176,56,245,
1,13,0,97,0,145,202,38,0,176,56,245,1,13,0,97,0,145,162,39,0,176,251,225,2,13,97,63,0,145,
202,38,0,176,251,225,2,13,145,201,0,145,162,39,121,36,112,10,0,176,9,196,3,13,201,63,0,145,0,145,
202,38,0,176,9,196,14,52,108,52,14,54,6,0,108,38,6,0,112,10,134,40,3,0,0,145,162,39,0,176,
250,187,0,145,202,38,0,176,250,187,108,54,6,0,14,38,6,0,112,10,0,145,162,39,0,176,251,245,0,145,
202,38,0,176,251,245,2,13,146,201,125,52,126,36,112,10,0,145,162,39,1,176,230,98,2,13,146,201,0,145,
202,38,1,176,230,98,0,145,162,39,0,176,186,220,0,145,202,38,0,176,186,220,2,13,148,201,0,145,162,39,
0,176,121,220,2,13,148,201,0,145,202,38,0,176,121,220,0,145,162,39,0,176,124,188,0,145,202,38,0,176,
124,188,108,52,14,36,112,10,0,145,162,39,1,176,24,21,0,145,162,39,0,176,188,235,0,145,202,38,0,176,
188,235,0,145,162,39,0,176,52,219,0,145,202,38,0,176,52,219,112,35,3,0,108,35,3,0,14,35,3,0,
138,43,112,10,112,52,108,52,13,52,14,36,140,10,136,40,70,10,138,43,14,54,6,0,108,38,6,0,95,10,
0,176,33,190,55,36,1,104,60,1,1,0,0,176,139,24,4,13,144,201,175,204,2,43,109,36,3,0,108,36,
3,0,14,36,3,0,51,1,108,53,109,37,136,40,11,1,108,53,109,37,89,36,136,43,1,1,108,53,109,37,
50,36,14,38,6,0,1,1,108,52,109,36,136,41,4,104,132,44,2,104,1,1,1,176,33,126,2,13,129,202,
1,176,82,126,0,161,25,3,77,1,98,170,0,162,146,18,77,1,98,162,48,50,47,50,49,34,0,192,2,137,
0,192,46,139,0,161,213,26,75,1,84,115,0,162,210,18,73,1,84,65,133,41,0,192,113,103,34,34,96,196,
95,102,51,50,52,34,0,192,95,102,14,34,0,192,113,103,55,34,0,192,60,104,0,192,58,105,0,161,213,3,
77,1,98,170,0,162,146,18,77,1,98,162,34,50,51,50,52,34,0,192,70,107,136,40,1,104,160,197,34,110,
136,40,11,5,2,43,25,104,6,106,0,208,116,32,0,208,181,32,0,208,246,32,0,208,55,33,0,208,104,33,
0,208,185,33,0,162,35,18,0,0,0,0,32,238,234,33,0,39,3,104,0,176,11,34,7,96,0,162,35,18,
0,0,0,0,0,176,44,34,1,0,0,176,86,0,0,176,58,1,136,40,0,176,60,226,0,176,184,205,129,40,
1,176,44,22,0,176,117,219,0,176,159,207,0,176,250,187,0,161,213,3,76,5,92,139,0,162,146,18,76,1,
110,189,133,41,128,194,237,178,30,52,31,36,128,194,174,180,32,52,33,36,225,193,147,126,48,194,136,182,1,0,
0,161,213,3,77,1,98,170,0,162,146,18,77,1,98,162,1,192,82,39,0,161,25,3,77,9,238,188,0,162,
18,34,73,9,46,173,0,176,42,97,64,246,156,97,0,161,25,3,77,9,238,188,0,162,18,34,73,9,46,173,
0,176,42,97,32,243,226,242,0,176,5,214,0,176,58,1,1,176,87,5,0,176,251,225,0,176,25,235,0,176,
8,230,0,176,16,251,1,176,176,38,2,41,1,1,0,41,124,1,108,18,0,176,214,186,2,41,1,1,0,41,
124,1,0,176,149,186,2,41,1,1,0,41,125,1,0,176,249,0,2,41,1,1,0,41,126,1,0,176,58,1,
2,41,1,1,0,41,127,1,0,176,104,187,2,41,1,1,0,41,128,1,0,176,250,187,2,41,1,1,0,176,
149,186,2,41,1,1,0,176,249,0,2,41,1,1,0,176,58,1,2,41,1,1,0,176,104,187,2,41,1,1,
0,176,250,187,5,146,120,98,1,0,6,146,124,2,1,0,38,5,0,176,58,1,0,176,60,226,0,176,144,236,
0,176,123,1,0,176,188,1,0,176,195,190,0,176,137,200,0,176,86,0,0,176,121,245,0,176,227,251,129,40,
0,176,9,196,0,176,184,0,109,17,0,176,58,206,36,1,1,0,0,176,60,226,130,40,13,1,0,176,60,226,
111,17,1,176,204,16,39,1,1,0,131,40,0,176,123,206,0,176,185,187,0,161,213,3,77,1,96,170,0,162,
146,18,77,1,96,162,133,41,2,44,128,194,30,109,192,195,30,109,0,161,213,3,75,1,238,172,0,162,146,18,
75,1,110,189,2,47,0,162,146,18,75,1,238,172,136,40,0,192,52,126,133,41,0,192,66,119,34,50,51,50,
52,34,0,192,113,120,31,50,38,34,0,192,1,122,55,34,0,192,115,123,14,34,96,196,255,124,0,192,52,126,
0,176,124,188,0,176,249,205,0,176,151,195,37,17,0,176,58,1,108,17,1,176,174,32,13,17,0,176,249,0,
13,17,0,176,249,0,0,176,184,205,0,176,184,205,35,17,0,176,47,212,13,17,0,176,184,0,0,176,184,0,
0,176,121,220,0,176,121,220,0,176,104,187,0,176,251,245,40,17,1,176,87,5,1,176,87,5,2,13,175,201,
1,176,87,5,2,13,175,201,1,176,87,5,2,13,164,201,13,17,1,176,26,6,2,13,164,201,13,17,1,176,
26,6,13,18,0,176,133,209,13,18,0,176,9,250,0,176,160,247,13,17,0,176,33,190,0,176,114,190,1,176,
156,6,4,13,175,201,170,201,1,176,130,90,13,17,1,176,211,90,0,176,134,238,0,161,227,83,85,1,246,221,
0,162,25,18,51,37,246,221,33,200,191,128,0,161,227,83,85,1,246,221,0,162,25,18,51,37,246,221,0,192,
1,122,0,145,189,5,2,13,131,202,1,0,2,13,190,201,0,161,213,3,77,5,98,170,0,162,18,2,77,9,
98,170,2,47,9,104,1,47,3,104,0,176,173,192,0,176,222,192,96,244,167,55,1,47,0,176,15,193,0,176,
64,193,144,241,167,55,35,38,8,0,35,1,33,96,112,38,8,0,7,104,16,32,3,104,35,1,2,96,112,1,
24,96,116,38,8,0,116,1,20,96,37,38,8,0,37,1,16,96,36,38,8,0,36,1,12,96,40,38,8,0,
40,1,8,96,119,38,8,0,119,1,4,96,120,38,8,0,120,1,1,1,1,0,2,60,3,0,130,56,85,45,
8,0,1,1,12,96,131,52,132,36,3,104,99,1,7,96,81,52,49,36,3,104,101,1,2,96,107,1,1,0,
2,41,107,1,2,96,1,1,1,0,0,176,58,1,0,176,25,235,1,176,44,22,0,176,123,206,1,176,217,5,
6,106,0,208,239,21,0,208,32,22,0,208,65,22,96,223,98,22,0,208,147,22,0,208,212,22,2,39,128,237,
172,24,1,197,194,129,81,181,74,16,1,176,9,135,0,176,60,226,38,5,1,176,148,4,1,176,204,16,1,176,
29,17,1,176,87,5,0,176,187,250,1,176,143,17,1,176,220,27,1,176,101,35,0,176,25,235,136,40,1,176,
74,135,0,176,251,225,0,176,124,188,1,176,218,36,0,176,227,251,1,176,29,17,136,40,0,176,149,186,0,176,
162,251,2,13,175,201,1,176,135,123,0,176,58,1,1,176,9,135,0,176,139,196,0,176,162,251,0,176,121,220,
0,176,104,187,0,176,188,1,38,5,1,176,101,35,0,176,25,235,2,13,168,201,1,176,199,40,73,43,0,176,
244,248,1,176,50,71,73,43,0,176,185,239,0,176,86,205,1,176,239,74,0,176,227,251,4,161,213,3,75,1,
84,115,0,162,210,19,73,1,84,65,0,192,113,103,2,44,2,43,82,1,0,145,196,2,1,0,4,161,213,3,
77,1,98,170,0,162,146,18,77,1,98,162,133,41,0,192,22,106,96,196,47,111,4,161,213,3,77,1,228,154,
133,41,1,197,129,30,1,197,129,30,6,161,213,3,75,1,162,162,0,162,146,18,75,1,110,189,193,195,139,135,
31,37,99,1,3,96,0,145,237,5,1,0,0,176,86,0,0,176,86,0,38,5,0,176,170,230,38,5,0,176,
58,1,0,176,249,0,0,176,249,0,0,176,139,196,0,176,139,196,0,176,149,186,1,176,50,71,0,176,123,1,
0,176,123,1,0,176,104,187,0,176,104,187,0,176,227,251,0,176,188,1,109,16,0,176,149,186,0,176,149,186,
0,176,249,0,0,176,249,0,1,176,174,32,0,176,58,1,0,176,8,230,0,176,8,230,1,176,166,35,1,176,
166,35,1,176,40,36,0,176,86,0,1,176,44,22,1,176,151,26,0,176,25,235,0,176,249,0,1,176,174,32,
0,176,58,1,0,176,104,187,0,176,104,187,1,176,166,35,1,176,166,35,0,176,33,190,1,176,110,28,4,13,
136,202,176,202,0,161,213,3,75,1,100,170,0,162,146,18,71,65,100,162,141,36,139,1,1,197,0,29,4,13,
150,201,176,202,0,161,213,3,76,5,100,170,0,162,18,2,71,69,100,170,1,47,1,176,131,18,33,179,119,137,
1,245,0,29,0,176,202,225,2,13,144,201,13,18,1,176,44,22,0,176,117,219,1,176,202,41,1,176,202,41,
0,176,60,226,0,176,25,235,1,176,174,32,0,176,58,1,0,176,159,207,0,176,159,207,1,176,166,35,1,176,
166,35,1,176,40,36,1,176,110,28,3,13,181,225,0,144,0,145,180,1,1,0,3,13,129,226,0,191,0,145,
220,1,1,0,3,13,182,225,0,175,0,145,1,2,1,0,3,13,182,225,0,174,0,145,39,2,1,0,3,13,
181,225,0,145,0,145,79,2,1,0,1,176,168,137,1,176,9,138,1,176,90,138,1,176,187,138,134,40,4,104,
0,176,208,197,1,0,130,40,29,104,65,10,136,40,141,40,3,0,2,104,1,1,2,45,10,0,92,45,7,0,
3,0,6,104,138,43,136,41,2,104,2,96,1,1,73,39,108,34,3,0,3,104,110,1,6,96,34,32,3,104,
111,1,2,96,13,1,58,32,0,176,186,220,0,176,208,197,0,176,104,187,136,40,138,44,2,45,10,0,1,1,
141,40,10,104,37,54,7,0,40,38,7,0,2,104,39,1,34,37,2,104,39,1,121,1,1,0,0,176,117,219,
1,176,174,32,0,176,188,1,0,176,249,0,1,176,239,32,58,36,85,10,0,176,104,187,1,176,48,33,136,40,
138,44,121,1,1,0,136,40,129,40,1,176,44,22,0,176,117,219,1,176,174,32,0,176,188,1,0,176,249,0,
1,176,239,32,58,36,85,10,0,176,104,187,1,176,48,33,0,161,213,3,77,1,238,188,133,41,1,192,113,33,
1,192,113,33,0,161,213,3,77,1,238,188,133,41,0,192,226,111,0,192,50,114,136,40,129,40,1,176,44,22,
0,176,117,219,1,176,174,32,0,176,188,1,0,176,249,0,1,176,239,32,58,36,85,10,0,176,104,187,1,176,
48,33,0,161,213,3,77,1,238,188,133,41,1,192,113,33,1,192,113,33,0,161,213,3,77,1,238,188,133,41,
0,192,226,111,0,192,50,114,2,43,2,104,6,96,138,39,3,104,56,1,2,96,59,1,0,145,206,0,1,0,
2,13,185,201,6,106,0,208,97,194,0,208,146,194,0,208,195,194,0,208,4,195,0,208,53,195,0,208,102,195,
2,39,64,236,237,5,0,176,96,6,46,34,4,104,95,10,1,176,12,139,1,176,61,139,0,176,249,205,38,5,
1,176,110,139,38,5,0,176,13,197,55,17,1,176,83,4,3,13,201,105,0,153,44,5,0,176,209,236,109,16,
0,176,139,196,1,13,0,97,1,176,151,26,4,13,145,201,144,203,44,5,0,176,82,198,0,176,159,207,114,17,
0,176,123,206,1,176,217,5,0,176,17,198,0,161,213,3,77,1,98,170,0,162,146,18,77,1,98,162,133,41,
0,192,174,169,0,192,6,172,0,161,213,3,76,1,238,172,0,162,146,18,76,1,110,189,133,41,32,195,237,178,
55,34,0,192,115,123,160,197,237,178,0,161,213,3,76,1,238,172,0,162,146,18,76,1,110,189,133,41,32,195,
255,124,192,195,255,124,6,106,0,208,239,21,0,208,32,22,0,208,65,22,96,223,98,22,0,208,147,22,0,208,
212,22,2,39,128,237,172,24,1,197,194,129,0,161,213,3,75,1,84,115,0,162,210,19,73,1,84,65,133,41,
0,192,91,100,34,34,0,192,95,102,55,34,0,192,60,104,0,192,29,175,0,161,25,3,64,9,118,90,0,162,
18,2,64,9,98,90,6,106,16,223,199,4,16,223,248,4,16,223,41,5,16,223,90,5,16,223,139,5,16,223,
188,5,2,39,224,236,237,5,0,176,255,13,64,246,219,16,13,48,108,32,2,104,5,96,0,176,234,11,0,240,
178,6,1,0,0,161,213,3,77,1,238,188,133,41,0,192,226,111,0,192,50,114,3,13,201,116,0,149,0,161,
227,83,85,1,246,221,133,41,0,192,194,115,0,192,194,115,38,5,108,17,0,176,97,251,38,5,0,176,204,196,
0,176,25,235,0,176,162,251,0,176,159,207,0,176,205,188,0,176,250,187,0,176,36,252,0,176,124,188,0,176,
101,252,0,176,198,252,0,176,188,201,0,176,16,251,0,176,23,253,0,176,104,253,0,176,185,253,0,176,10,254,
0,176,107,254,0,176,188,254,0,176,13,255,0,176,191,255,1,176,16,0,1,176,97,0,1,176,178,0,0,176,
102,234,1,176,3,1,0,161,25,3,169,1,84,90,0,162,25,18,9,1,84,73,133,41,0,176,223,67,0,176,
114,68,0,161,213,3,79,9,98,155,0,162,146,18,79,9,98,155,1,47,0,176,10,54,133,41,5,104,0,176,
59,54,0,240,108,54,34,34,5,104,0,176,77,49,192,243,46,56,0,176,118,55,192,243,46,56,28,34,0,192,
140,158,29,34,0,192,225,159,30,34,0,192,128,161,31,34,0,192,37,163,32,34,97,196,149,1,33,34,1,197,
149,1,96,196,3,168,0,176,184,0,0,176,25,235,0,176,58,1,0,176,104,187,0,176,188,1,0,161,213,3,
77,1,98,170,0,162,146,18,77,1,98,162,133,41,1,192,82,39,1,192,82,39,0,161,217,19,77,5,98,170,
0,162,18,2,77,9,98,170,1,47,0,176,10,54,133,41,5,104,0,176,201,71,193,243,82,39,0,176,157,174,
193,248,82,39,0,161,213,3,77,1,98,170,0,162,146,18,77,1,98,162,133,41,0,192,174,169,0,192,6,172,
0,161,217,19,77,5,98,170,0,162,18,2,77,9,98,170,1,47,0,176,10,54,133,41,5,104,0,176,201,71,
192,243,174,169,0,176,157,174,192,248,6,172,136,40,70,10,0,176,173,211,136,40,70,10,1,176,14,120,136,40,
70,10,0,176,216,214,136,40,70,10,0,176,59,188,0,176,162,251,1,176,151,26,0,176,56,245,1,176,159,139,
0,176,1,233,1,176,0,140,0,176,34,223,1,176,65,140,1,176,152,5,0,161,25,3,173,1,238,188,0,162,
146,18,173,1,110,189,192,195,226,242,92,43,2,104,2,96,64,1,0,145,206,0,1,0,0,176,58,1,0,176,
124,188,0,176,188,1,0,176,173,211,0,176,188,235,0,176,8,230,2,13,175,201,1,176,159,89,0,176,184,205,
58,36,3,0,144,40,3,0,9,104,141,40,2,104,113,1,113,38,8,0,142,40,2,104,113,1,0,176,47,212,
0,176,5,214,1,176,9,135,0,176,249,205,92,61,8,0,92,45,7,0,111,1,112,1,1,0,92,61,8,0,
92,45,7,0,108,1,2,96,40,1,1,0,93,45,7,0,110,1,2,96,36,1,1,0,93,61,8,0,93,45,
7,0,104,1,0,145,57,5,1,0,93,61,8,0,93,45,7,0,118,1,2,96,100,1,1,0,93,61,8,0,
93,45,7,0,64,1,0,145,206,0,1,0,2,13,144,201,0,176,47,212,2,13,155,201,0,176,139,196,2,13,
140,202,0,176,121,220,1,13,0,111,1,176,204,16,1,13,0,117,0,176,250,187,2,13,175,201,1,176,22,5,
2,161,213,3,73,5,226,155,2,162,210,19,73,5,226,155,177,196,162,103,0,161,21,21,77,1,98,170,0,162,
146,18,77,1,98,162,129,194,130,140,3,13,201,116,0,149,0,161,213,3,85,1,246,221,1,192,80,49,3,13,
202,100,0,145,0,161,213,3,85,1,246,221,0,176,215,59,0,240,11,61,2,13,190,201,0,162,136,20,73,13,
96,170,0,161,10,19,77,9,96,170,31,48,30,32,0,176,57,48,0,176,138,48,0,176,184,0,136,40,0,176,
247,219,0,176,249,0,0,176,58,1,0,176,104,187,1,176,87,5,0,176,33,190,3,13,108,116,0,35,0,161,
213,3,77,1,98,170,0,162,146,18,77,1,98,162,33,195,3,86,0,176,254,246,29,34,1,1,0,176,254,246,
0,176,25,235,38,5,0,176,58,1,0,176,123,1,1,176,87,5,0,176,205,188,2,13,130,202,0,161,25,3,
77,1,98,170,0,162,146,18,77,1,98,162,0,41,192,195,46,146,160,197,46,146,1,13,0,115,0,161,25,3,
77,1,98,170,0,162,146,18,77,1,98,162,88,34,4,104,125,2,1,1,9,96,81,34,49,2,6,96,72,34,
47,2,3,96,71,34,48,2,0,41,192,195,250,71,0,197,46,139,3,13,202,116,0,130,0,161,213,3,77,1,
98,170,0,162,146,18,77,1,98,162,133,41,0,192,174,169,0,192,6,172,2,13,115,116,0,161,213,3,77,1,
98,170,0,162,146,18,77,1,98,162,133,41,0,192,174,169,0,192,6,172,81,34,4,104,49,2,1,1,10,96,
72,34,4,104,47,2,1,1,5,96,88,34,3,104,125,2,1,1,0,145,245,6,1,0,2,13,190,201,2,43,
69,1,0,145,138,2,1,0];
var phondata=[1,72,1,0,34,86,0,0,74,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,139,0,3,0,1,0,112,0,13,2,161,5,36,9,188,12,
116,14,96,27,50,60,34,66,80,45,47,36,18,8,167,150,135,120,120,120,197,120,120,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,3,0,116,0,13,2,161,5,
36,9,188,12,116,14,96,27,90,86,41,79,96,54,56,43,23,8,167,150,135,120,120,120,197,120,120,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,116,0,
13,2,161,5,36,9,188,12,116,14,96,27,0,46,30,58,70,39,41,32,16,9,167,150,135,120,120,120,197,120,
120,44,45,70,130,55,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,
140,0,3,0,1,0,116,0,13,2,161,5,36,9,188,12,116,14,96,27,50,20,19,38,46,26,27,20,10,4,
167,150,135,120,120,120,197,120,120,44,45,70,130,54,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,250,0,0,3,0,116,0,13,2,161,5,36,9,188,12,116,14,96,27,90,29,23,45,55,31,
32,24,13,4,167,150,135,120,120,120,197,120,120,44,45,70,130,54,0,0,0,0,40,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,250,0,0,1,0,116,0,13,2,161,5,36,9,188,12,116,14,96,27,0,15,
16,33,40,22,23,18,9,5,167,150,135,120,120,120,197,120,120,44,45,70,130,50,0,0,0,0,40,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,151,0,4,0,1,0,16,1,136,3,40,5,140,10,
112,13,35,15,32,28,46,51,33,67,55,37,25,22,8,7,217,150,105,120,120,120,255,180,150,44,65,70,130,53,
0,0,0,0,50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,3,0,32,1,136,3,
40,5,140,10,112,13,191,14,32,28,40,90,42,92,73,54,41,26,12,6,217,155,105,120,120,120,247,170,165,44,
65,75,130,54,0,0,0,0,50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,
32,1,136,3,40,5,140,10,112,13,191,14,32,28,65,79,39,86,68,50,38,24,11,5,217,155,105,120,120,120,
247,170,165,44,65,75,130,53,0,0,0,0,50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,
0,0,1,0,16,1,128,3,60,5,100,10,112,13,191,14,160,28,0,49,35,68,55,35,32,24,7,8,217,135,
105,120,120,120,255,165,165,44,65,70,130,53,0,0,0,0,50,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,250,0,0,200,0,4,0,1,0,200,0,200,1,188,7,236,9,32,13,136,14,128,28,50,41,26,55,
55,55,47,35,11,5,185,107,127,120,120,120,185,107,127,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,250,0,0,3,0,200,0,200,1,188,7,236,9,32,13,136,14,128,28,
80,78,36,76,76,76,65,49,15,7,185,107,127,120,120,120,185,107,127,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,200,0,192,1,188,7,236,9,32,13,
136,14,128,28,70,67,33,69,69,69,59,45,13,6,185,107,127,120,120,120,185,107,127,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,200,0,184,1,188,7,
236,9,32,13,136,14,128,28,0,30,22,47,47,47,40,30,9,4,185,107,127,120,120,120,185,107,127,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,0,0,4,0,
33,0,152,0,32,1,224,8,24,11,72,13,0,15,160,26,52,44,9,65,57,58,53,28,13,6,175,105,120,120,
120,120,175,90,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,250,0,0,3,0,152,0,24,1,232,8,24,11,72,13,0,15,160,26,75,67,11,81,66,66,66,35,17,8,
167,105,120,120,120,120,167,90,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,250,0,0,1,0,152,0,24,1,232,8,24,11,72,13,0,15,160,26,69,54,10,73,59,59,
59,31,15,7,167,105,120,120,120,120,167,90,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,250,0,0,1,0,118,0,240,0,35,9,24,11,72,13,30,15,112,26,0,27,
7,48,43,42,42,23,10,6,171,105,112,120,120,120,175,135,120,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,160,0,4,0,1,0,192,0,40,2,92,3,100,10,
164,11,96,14,159,27,50,57,23,57,62,34,32,19,12,4,172,142,135,120,120,120,167,135,135,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,3,0,192,0,40,2,
92,3,100,10,164,11,96,14,159,27,60,121,34,82,90,49,47,27,18,7,172,142,135,120,120,120,167,135,135,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,
192,0,40,2,112,3,100,10,164,11,96,14,159,27,50,73,29,70,64,42,40,23,15,6,172,142,135,120,120,120,
167,135,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,
0,0,1,0,192,0,40,2,112,3,100,10,164,11,96,14,159,27,0,41,22,52,48,32,30,17,11,4,172,142,
135,120,120,120,167,135,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,250,0,0,120,0,4,0,1,0,176,0,64,1,92,3,56,9,12,13,60,15,144,26,50,39,6,64,
43,21,21,30,12,7,177,125,102,120,120,120,177,125,117,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,250,0,0,3,0,176,0,64,1,92,3,56,9,12,13,60,15,144,26,
70,55,7,77,51,25,25,36,14,9,177,125,102,120,120,120,177,125,117,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,176,0,64,1,92,3,156,9,12,13,
60,15,144,26,50,40,6,65,43,21,21,31,12,7,177,125,102,120,120,120,177,125,117,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,176,0,64,1,92,3,
156,9,12,13,60,15,144,26,0,26,5,52,35,17,17,25,10,6,177,125,102,120,120,120,177,125,117,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,120,0,6,0,
1,0,116,0,0,2,20,5,36,9,188,12,116,14,96,27,20,22,20,39,48,27,28,21,10,4,167,150,135,120,
120,120,197,120,120,44,45,70,130,54,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,250,0,0,3,0,116,0,0,2,20,5,36,9,188,12,116,14,96,27,0,22,20,39,48,27,28,21,10,4,
167,150,135,120,120,120,197,120,120,44,45,70,130,54,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,250,0,0,1,0,116,0,0,2,20,5,36,9,188,12,116,14,96,27,0,18,18,35,44,24,
25,19,9,5,167,150,135,120,120,120,197,120,120,44,45,70,130,50,0,0,0,0,40,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,250,0,0,5,0,236,0,216,1,76,4,82,8,172,13,160,15,0,27,60,18,
54,38,23,14,12,14,8,0,120,60,90,120,120,120,30,135,105,44,20,100,100,53,225,0,0,0,60,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,5,0,236,0,216,1,76,4,82,8,172,13,160,15,
0,27,40,17,54,38,23,14,12,14,8,0,120,60,90,120,120,120,30,135,105,44,20,100,100,53,225,0,0,0,
60,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,236,0,216,1,76,4,82,8,
172,13,160,15,0,27,0,17,54,38,23,14,12,14,8,0,120,60,90,120,120,120,30,135,105,44,20,100,100,53,
225,0,0,0,60,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,120,0,6,0,1,0,
116,0,0,2,20,5,36,9,188,12,116,14,96,27,20,22,20,39,48,27,28,21,10,4,167,150,135,120,120,120,
197,120,120,44,45,70,130,54,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,
0,0,3,0,116,0,0,2,20,5,36,9,188,12,116,14,96,27,0,22,20,39,48,27,28,21,10,4,167,150,
135,120,120,120,197,120,120,44,45,70,130,54,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,250,0,0,1,0,116,0,0,2,20,5,36,9,188,12,116,14,96,27,0,18,18,35,44,24,25,19,
9,5,167,150,135,120,120,120,197,120,120,44,45,70,130,50,0,0,0,0,40,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,250,0,0,5,0,196,0,114,1,96,4,16,9,88,12,91,14,32,27,60,17,38,33,
28,24,33,28,7,0,120,60,135,120,120,120,75,75,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,250,0,0,5,0,196,0,114,1,96,4,16,9,88,12,91,14,32,27,
40,17,38,33,28,24,33,28,7,0,120,60,135,120,120,120,75,75,120,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,196,0,114,1,16,4,252,8,200,10,
91,14,32,27,0,14,40,28,20,12,8,8,6,0,120,60,135,120,120,120,75,75,120,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,160,0,5,0,1,0,140,0,
240,1,232,5,76,9,236,12,176,14,77,27,20,18,22,36,40,24,24,18,9,3,160,132,126,120,120,120,197,120,
120,44,45,70,130,54,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,
3,0,140,0,240,1,232,5,76,9,236,12,176,14,77,27,40,18,22,36,40,24,24,18,9,3,160,132,126,120,
120,120,197,120,120,44,45,70,130,54,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,250,0,0,5,0,236,0,224,1,220,5,236,9,172,13,160,15,0,27,60,17,54,38,23,14,12,14,8,0,
120,60,90,120,120,120,30,135,105,44,20,150,150,53,225,0,0,0,60,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,250,0,0,5,0,236,0,224,1,220,5,236,9,172,13,160,15,0,27,40,17,54,38,23,14,
12,14,8,0,120,60,90,120,120,120,30,135,105,44,20,150,150,53,225,0,0,0,60,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,250,0,0,1,0,236,0,224,1,220,5,236,9,172,13,160,15,0,27,0,14,
48,34,20,12,10,12,7,0,120,60,90,120,120,120,30,135,105,44,20,150,150,53,225,0,0,0,60,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,160,0,5,0,1,0,140,0,240,1,232,5,76,9,
236,12,176,14,77,27,20,18,22,36,40,24,24,18,9,3,160,132,126,120,120,120,197,120,120,44,45,70,130,54,
0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,3,0,140,0,240,1,
232,5,76,9,236,12,176,14,77,27,40,18,22,36,40,24,24,18,9,3,160,132,126,120,120,120,197,120,120,44,
45,70,130,54,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,5,0,
236,0,124,1,8,7,236,9,172,13,160,15,0,27,60,23,53,41,24,20,16,13,8,0,132,60,90,120,120,120,
42,135,105,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,
0,0,5,0,236,0,124,1,8,7,236,9,172,13,160,15,0,27,40,23,53,41,24,20,16,13,8,0,132,60,
90,120,120,120,42,135,105,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,250,0,0,1,0,236,0,124,1,244,6,236,9,172,13,160,15,0,27,0,14,42,32,20,16,12,9,
6,0,132,60,90,120,120,120,42,135,105,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,250,0,0,120,0,5,0,1,0,184,0,248,1,32,7,244,9,85,13,104,15,70,26,
20,17,26,32,37,22,22,17,8,2,148,119,137,120,120,120,197,120,120,44,45,70,130,54,0,0,0,0,40,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,3,0,184,0,248,1,32,7,244,9,85,13,
104,15,70,26,0,17,26,32,37,22,22,17,8,2,148,119,137,120,120,120,197,120,120,44,45,70,130,54,0,0,
0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,5,0,236,0,234,1,52,8,
236,9,172,13,160,15,0,27,60,25,57,49,29,20,20,18,10,0,120,60,90,120,120,120,50,135,105,44,20,200,
200,55,230,0,0,0,60,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,5,0,236,0,
234,1,52,8,236,9,172,13,160,15,0,27,40,25,57,49,29,20,20,18,10,0,120,60,90,120,120,120,50,135,
105,44,20,200,200,55,230,0,0,0,60,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,
1,0,236,0,234,1,52,8,236,9,172,13,160,15,0,27,0,15,44,38,23,16,16,14,8,0,120,60,90,120,
120,120,50,135,105,44,20,200,200,55,230,0,0,0,60,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,250,0,0,8,2,70,0,0,0,0,0,0,0,4,14,28,40,46,48,46,38,23,252,211,174,161,177,209,238,
0,14,26,30,17,237,190,160,167,201,232,251,15,51,91,109,92,52,11,239,216,190,166,161,190,247,51,89,101,103,
104,93,52,246,185,151,149,164,184,210,252,50,101,126,115,78,34,251,212,169,136,134,171,231,31,70,95,111,115,96,
50,245,190,158,151,161,180,212,2,57,102,118,104,73,37,254,209,164,137,141,175,223,12,49,76,94,96,75,32,238,
196,173,166,169,182,212,0,48,80,89,78,57,27,247,205,168,149,157,188,229,14,49,78,98,100,80,40,254,219,197,
185,183,195,222,3,39,62,69,63,47,25,253,220,192,179,185,205,231,0,25,47,61,59,41,14,244,222,208,200,202,
213,235,4,28,42,46,42,32,17,253,230,213,208,214,228,245,6,24,39,45,41,26,6,244,229,220,216,219,230,248,
12,29,37,39,35,26,12,251,235,224,221,227,238,252,10,25,36,40,35,22,6,248,235,227,223,227,237,252,10,22,
29,31,27,19,7,249,236,229,227,232,241,253,9,20,28,31,26,17,5,250,240,233,231,234,242,253,7,16,22,23,
21,14,5,252,243,238,237,239,245,252,4,13,18,20,17,12,5,254,248,243,241,243,248,255,5,10,14,15,13,9,
3,254,249,246,245,247,251,0,3,7,10,11,9,6,2,255,251,249,249,250,252,0,2,5,7,7,6,4,1,255,
253,252,252,253,254,0,1,3,3,3,3,1,0,0,0,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,160,0,5,0,1,0,204,0,128,2,176,4,
252,8,240,10,52,18,0,28,45,42,34,58,42,39,34,8,14,5,170,165,137,120,120,120,170,180,137,44,45,70,
130,57,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,3,0,216,0,
136,2,176,4,252,8,227,12,20,15,214,27,55,56,32,63,62,39,39,30,15,6,189,159,136,120,120,120,237,165,
165,44,45,70,130,57,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,
65,0,216,0,136,2,176,4,252,8,227,12,20,15,214,27,80,42,28,55,54,34,34,26,13,5,189,159,136,120,
120,120,237,165,165,44,45,70,130,57,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,250,0,0,1,0,204,0,128,2,176,4,212,8,44,11,20,15,0,28,35,26,26,47,33,27,29,9,11,4,
170,165,137,120,120,120,170,180,137,44,45,70,130,57,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,250,0,0,1,0,204,0,128,2,176,4,212,8,44,11,20,15,0,28,0,26,26,47,33,27,
29,9,11,4,170,165,137,120,120,120,170,180,137,44,45,70,130,57,0,0,0,0,40,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,250,0,0,165,0,4,0,1,0,104,0,96,1,0,5,204,11,192,13,180,15,
32,29,45,37,18,64,39,21,43,25,8,0,155,120,97,120,120,120,95,120,97,44,45,70,130,59,0,0,0,0,
45,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,3,0,104,0,96,1,216,4,204,11,
192,13,180,15,32,29,60,45,20,72,44,24,48,28,9,0,155,120,97,120,120,120,95,120,97,44,45,70,130,59,
0,0,0,0,45,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,104,0,96,1,
176,4,204,11,192,13,180,15,32,29,60,45,20,72,44,24,48,28,9,0,155,120,97,120,120,120,95,120,97,44,
45,70,130,58,0,0,0,0,45,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,
104,0,96,1,176,4,204,11,192,13,180,15,32,29,0,37,18,64,39,21,43,25,8,0,155,120,97,120,120,120,
95,120,97,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,
0,0,75,0,3,0,1,0,244,0,129,1,96,4,24,6,88,12,41,14,192,27,40,40,48,51,44,16,0,0,
10,0,147,80,120,120,120,120,87,95,120,44,45,70,130,54,0,0,0,0,40,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,250,0,0,5,0,228,0,149,1,98,4,224,6,88,12,41,14,192,28,35,65,39,84,
62,33,22,17,16,0,150,90,120,120,120,120,90,90,120,44,45,70,130,56,0,0,0,0,40,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,228,0,13,2,172,5,208,7,88,12,41,14,192,28,
0,85,40,77,109,49,46,29,16,0,120,165,120,120,120,120,60,135,120,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,75,0,3,0,21,0,0,1,184,1,176,4,
64,6,124,11,96,14,224,27,40,26,45,40,47,25,0,16,5,0,150,60,120,120,120,120,105,90,75,44,45,70,
130,54,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,5,0,184,0,
164,1,96,4,168,7,28,12,66,14,96,27,35,61,40,80,60,33,19,14,13,0,157,105,120,120,120,120,112,90,
60,44,45,70,130,56,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,
1,0,184,0,128,2,65,4,232,8,28,12,166,14,96,27,0,99,45,78,119,51,50,35,17,0,120,105,120,120,
120,120,75,90,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,250,0,0,75,0,3,0,5,0,216,0,64,1,236,4,24,6,184,11,166,14,224,26,40,42,43,56,31,15,
0,0,15,0,147,60,150,120,120,120,87,90,90,44,45,70,130,54,0,0,0,0,40,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,250,0,0,5,0,196,0,160,1,236,4,144,6,184,11,236,14,64,27,35,59,
36,76,64,33,32,13,15,0,150,120,105,120,120,120,105,90,78,44,45,70,130,56,0,0,0,0,40,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,228,0,178,2,249,5,232,8,188,12,91,14,
0,28,0,82,40,57,115,64,66,42,14,0,120,165,120,120,120,120,120,165,120,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,80,0,3,0,37,0,216,0,64,1,
236,4,24,6,184,11,166,14,224,26,40,46,46,59,33,16,0,0,10,0,147,60,150,120,120,120,87,90,90,44,
45,70,130,54,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,37,0,
120,0,124,1,117,5,52,8,224,11,166,14,224,26,40,49,19,73,56,36,39,19,12,0,150,165,150,120,120,120,
90,90,90,44,45,70,130,56,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,
0,0,1,0,120,0,84,1,97,8,116,9,12,13,110,15,96,27,0,79,16,75,80,86,84,54,17,0,120,135,
150,120,120,120,60,120,75,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,250,0,0,75,0,3,0,1,0,0,1,184,1,176,4,64,6,124,11,96,14,224,27,40,26,45,40,
47,25,0,16,5,0,150,60,120,120,120,120,105,90,75,44,45,70,130,54,0,0,0,0,40,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,250,0,0,5,0,136,0,49,1,21,4,88,7,48,12,41,14,32,26,
35,47,35,76,55,29,14,14,22,0,150,75,105,120,120,120,60,105,120,44,45,70,130,56,0,0,0,0,40,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,168,0,189,1,123,3,132,8,48,12,
41,14,64,27,0,119,49,103,110,61,48,33,18,0,120,150,105,120,120,120,30,90,120,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,75,0,3,0,1,0,0,1,
184,1,176,4,64,6,124,11,96,14,224,27,40,26,45,40,47,25,0,16,5,0,150,60,120,120,120,120,105,90,
75,44,45,70,130,55,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,
5,0,40,0,54,1,109,4,104,6,128,12,247,13,192,28,35,35,16,59,46,31,31,18,13,0,150,120,120,120,
120,120,150,120,120,44,45,70,130,56,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,250,0,0,1,0,40,0,134,1,205,5,72,8,128,12,247,13,192,28,0,74,16,95,70,33,36,18,13,0,
120,120,120,120,120,120,120,120,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,250,0,0,50,0,2,0,5,0,244,0,174,1,136,4,4,6,124,11,79,16,64,27,50,21,
51,34,39,16,18,7,7,0,120,45,135,120,120,120,60,90,93,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,244,0,174,1,136,4,4,6,124,11,79,16,
64,27,0,21,51,34,39,16,18,7,7,0,120,45,135,120,120,120,60,90,93,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,65,0,3,0,1,0,8,1,184,1,
232,3,160,5,108,12,210,15,224,27,40,16,34,40,26,12,0,4,3,0,120,60,120,120,120,120,75,90,75,44,
35,50,60,52,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,
8,1,184,1,232,3,200,5,48,12,140,15,224,27,25,24,42,44,45,20,8,16,7,0,120,60,120,120,120,120,
75,90,75,44,35,50,60,52,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,
0,0,1,0,8,1,184,1,32,3,200,5,48,12,140,15,224,27,0,26,42,44,45,20,8,16,7,0,120,60,
120,120,120,120,75,90,75,44,45,70,130,53,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,250,0,0,20,0,2,0,1,0,24,1,184,1,233,3,200,5,108,12,210,15,224,27,20,10,34,21,
26,13,5,5,3,0,120,60,120,120,120,120,75,90,75,44,35,50,60,53,0,0,0,0,40,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,24,1,184,1,233,3,200,5,108,12,210,15,224,27,
0,34,61,39,47,24,12,11,7,0,120,60,120,120,120,120,75,90,75,44,45,70,130,53,0,0,0,0,40,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,12,0,3,0,1,0,0,1,184,1,176,4,
64,6,124,11,96,14,224,27,12,27,45,44,40,20,12,16,5,0,150,60,120,120,120,120,105,90,75,44,35,50,
60,53,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,0,1,
184,1,176,4,64,6,124,11,96,14,224,27,0,26,45,40,47,25,12,16,5,0,150,60,120,120,120,120,105,90,
75,44,35,50,60,53,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,
1,0,0,1,184,1,176,4,64,6,124,11,96,14,224,27,0,26,45,40,47,25,20,11,5,0,150,60,120,120,
120,120,105,90,75,44,35,50,60,53,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,250,0,0,40,0,2,0,37,0,184,0,24,2,112,5,72,8,0,10,188,12,136,19,40,17,43,9,14,19,
28,9,9,9,157,125,137,137,150,175,157,125,137,44,45,70,130,52,0,0,0,0,40,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,250,0,0,1,0,184,0,24,2,112,5,248,7,236,9,188,12,131,24,0,17,
42,14,14,32,23,9,4,4,157,125,137,137,150,175,157,125,137,44,45,70,130,52,0,0,0,0,40,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,81,19,12,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,
3,6,9,10,9,4,7,1,249,249,241,233,233,234,251,8,3,8,14,34,32,37,29,26,28,27,13,12,8,253,
3,20,27,20,10,22,17,16,9,3,249,244,234,237,244,242,242,249,4,25,30,28,27,25,38,32,15,6,3,0,
246,247,246,255,249,5,23,31,14,7,14,9,2,1,247,241,238,227,239,248,244,246,254,8,26,28,21,19,22,25,
26,5,3,14,11,7,7,10,24,23,20,31,33,23,20,19,9,3,244,247,237,235,235,237,237,237,236,246,246,242,
245,247,247,243,248,248,231,236,241,244,241,243,5,23,26,28,37,41,35,29,25,23,21,12,5,10,12,16,24,21,
24,29,38,32,15,6,3,1,252,246,246,248,250,2,253,8,12,7,14,18,7,3,247,247,0,0,250,247,1,3,
254,5,15,19,22,16,22,27,21,19,16,18,29,28,16,21,34,39,38,31,32,37,36,23,22,17,10,251,250,11,
9,3,9,10,12,7,0,5,14,5,249,241,245,248,253,253,252,7,251,254,5,9,10,8,250,9,6,8,17,26,
41,43,35,33,51,54,44,34,34,31,25,21,24,42,34,15,22,29,34,31,12,1,255,227,218,220,223,227,222,223,
249,12,11,15,30,36,22,0,251,11,249,232,247,245,0,12,16,49,78,78,83,91,82,70,45,30,23,244,229,243,
247,245,253,255,22,28,13,18,22,254,247,228,220,229,219,209,227,247,253,10,16,24,19,18,255,241,236,240,236,236,
4,31,30,45,78,76,86,85,75,72,57,16,0,239,242,247,250,2,13,18,33,42,33,32,14,1,250,230,209,202,
201,204,222,237,254,0,15,36,34,36,16,245,253,250,240,242,249,7,34,37,58,89,82,68,82,68,47,40,19,3,
251,247,250,254,246,254,14,27,28,15,12,13,253,226,219,223,211,198,204,222,230,232,234,253,0,243,244,253,251,238,
241,4,14,13,20,36,52,51,43,33,30,34,25,20,21,21,22,21,36,60,59,45,31,20,9,254,237,239,228,205,
201,211,226,226,221,246,4,248,252,243,253,238,228,214,216,235,235,241,250,14,25,35,47,63,60,47,39,42,50,34,
14,4,2,248,250,2,21,32,18,10,29,29,15,3,0,255,241,227,211,226,240,232,221,229,249,8,18,18,26,23,
15,16,25,17,7,255,7,2,255,9,20,7,13,20,34,39,38,24,28,37,20,8,12,11,17,17,2,4,8,17,
27,20,26,29,14,7,14,12,243,240,247,255,9,12,18,32,31,22,38,26,13,255,242,248,252,231,240,252,8,18,
17,21,41,45,38,42,30,23,28,9,251,17,22,1,5,26,29,26,32,34,45,15,253,17,11,251,242,237,253,236,
215,6,17,25,56,57,32,53,42,14,44,54,15,14,10,8,1,243,15,33,30,17,16,14,2,240,234,242,225,195,
192,206,225,2,244,239,253,239,246,247,244,2,1,250,255,26,37,37,28,49,52,24,21,16,10,252,237,250,3,3,
14,10,6,20,252,236,238,222,202,182,168,168,183,186,189,213,253,8,41,43,51,75,51,45,54,23,16,15,229,240,
14,5,18,46,51,65,76,61,61,49,34,27,247,227,233,215,223,238,236,2,22,21,60,63,23,20,15,237,236,237,
203,207,215,229,0,6,17,51,61,55,52,35,24,11,253,4,253,234,242,0,1,24,48,66,96,101,104,94,78,68,
55,41,27,9,236,235,244,253,1,253,253,10,19,23,5,1,6,249,223,215,228,223,220,240,244,244,255,0,20,50,
38,44,51,37,44,56,44,49,51,38,57,57,61,87,76,83,82,59,48,30,3,4,247,231,225,214,227,236,226,245,
250,243,243,247,243,253,247,251,255,250,239,249,13,25,29,19,30,40,33,46,63,53,38,45,48,34,23,34,43,39,
45,25,13,26,4,250,249,0,5,227,231,245,242,233,226,219,250,16,251,252,21,14,8,0,1,10,246,242,11,255,
233,245,236,242,2,18,35,45,41,29,37,48,46,33,12,19,21,252,236,244,10,15,22,18,43,62,23,18,36,10,
232,242,217,224,232,211,250,23,254,8,23,37,41,254,253,7,236,213,213,223,244,235,237,7,26,20,25,43,45,33,
16,6,1,236,224,238,4,13,21,17,56,70,37,59,60,29,36,0,213,217,199,176,205,225,237,14,21,28,43,40,
14,4,8,0,228,209,221,227,220,220,248,20,49,66,53,68,66,29,8,8,235,215,224,239,249,253,31,71,51,51,
77,61,24,16,238,206,181,166,173,170,177,245,24,26,55,81,93,88,51,36,34,251,200,196,211,199,212,5,20,34,
58,60,64,85,67,51,14,241,246,195,198,251,220,240,0,254,48,31,250,66,80,27,16,17,10,237,201,235,13,2,
221,227,42,54,35,56,68,86,36,253,34,34,247,234,244,249,250,235,2,51,50,58,63,52,49,45,35,39,250,210,
228,243,247,251,243,239,246,250,250,0,255,254,233,192,190,206,198,189,197,219,249,4,240,0,4,250,1,253,250,14,
32,51,52,27,27,54,71,56,43,48,50,50,1,247,25,12,243,238,236,234,249,225,231,248,220,227,238,215,213,227,
228,249,253,228,0,241,206,224,253,18,48,41,56,84,68,71,89,89,95,98,82,89,59,21,33,18,240,251,238,244,
25,255,246,9,253,254,248,233,255,234,201,216,237,229,237,246,11,36,49,62,73,63,53,73,63,36,27,15,24,9,
16,52,56,33,26,22,19,0,226,235,240,225,219,224,250,13,12,31,82,59,36,44,50,41,8,225,236,239,220,255,
18,27,49,42,57,91,74,40,42,29,5,254,238,240,246,227,245,13,30,31,39,47,67,33,9,12,3,4,5,244,
10,18,255,29,49,32,28,10,9,254,233,236,3,246,236,243,252,2,15,25,41,64,48,19,9,7,1,249,253,10,
9,251,245,21,29,20,24,28,25,21,250,246,13,29,24,28,36,32,47,12,6,47,41,8,15,12,15,23,248,7,
45,6,239,27,24,3,28,21,38,43,255,16,45,1,3,44,25,18,22,238,16,23,236,241,222,186,213,187,172,227,
233,236,248,2,49,44,9,47,42,0,10,233,223,240,216,233,7,248,242,18,25,37,32,29,67,66,31,15,18,24,
12,240,229,247,234,215,208,220,228,208,188,234,238,201,219,235,238,246,217,242,25,244,212,229,252,14,246,250,62,34,
239,255,32,51,36,255,29,51,250,239,13,18,254,255,9,28,21,237,251,20,3,235,243,251,251,233,236,21,6,249,
6,20,25,4,254,9,7,252,239,251,4,243,251,23,25,17,1,21,33,36,17,240,0,11,229,253,38,24,38,16,
2,53,53,42,59,23,4,12,252,6,9,235,0,3,223,234,6,20,17,243,245,13,12,21,35,13,34,23,240,14,
19,2,0,251,237,237,222,238,21,8,16,29,1,25,17,228,23,47,10,22,7,16,33,253,8,75,59,33,47,28,
27,25,12,33,21,245,236,244,2,252,239,0,5,229,225,14,26,15,6,3,22,29,242,252,17,227,229,243,240,0,
1,17,65,79,53,80,79,81,76,64,53,28,242,249,246,253,3,26,88,97,79,94,73,41,44,42,45,35,242,233,
228,218,243,0,31,49,9,51,97,40,10,0,241,12,219,199,224,239,255,252,37,68,59,63,89,99,95,50,2,12,
11,254,227,229,214,185,221,0,21,30,7,238,6,28,9,244,231,236,232,209,219,249,224,193,240,5,250,229,227,16,
35,242,214,5,254,212,231,15,23,13,0,7,52,50,18,18,8,235,235,0,241,211,224,9,36,32,23,50,45,26,
22,26,21,241,209,214,238,240,254,0,5,30,21,31,36,251,249,234,229,229,189,183,248,5,11,59,60,68,94,95,
83,96,69,36,50,28,246,244,0,255,0,19,32,39,21,11,30,22,248,249,237,231,243,216,216,247,251,9,47,33,
46,74,62,72,53,254,3,19,253,243,237,238,8,10,22,60,62,42,41,71,86,67,37,21,33,17,14,15,12,3,
242,36,66,43,14,29,28,31,3,224,232,245,238,251,245,9,20,15,30,70,53,29,12,0,246,228,212,220,237,1,
37,53,58,57,58,67,56,14,4,4,241,245,238,215,213,215,246,21,19,252,6,10,250,3,251,242,246,235,246,255,
242,243,233,0,24,6,255,12,16,13,17,10,249,242,249,239,240,242,233,235,8,29,255,240,9,7,10,21,254,239,
224,193,210,245,243,240,230,247,19,11,252,25,31,33,15,239,230,250,8,0,6,252,236,0,17,14,10,9,7,237,
227,5,22,1,249,235,246,11,5,235,6,8,254,3,231,239,35,11,238,3,7,253,5,4,7,20,244,7,55,38,
38,44,34,42,20,244,20,44,246,228,245,252,254,254,7,37,21,4,18,13,252,8,21,250,213,212,250,15,234,226,
31,57,45,35,56,83,70,25,48,56,14,2,248,236,220,215,255,24,8,38,74,58,44,48,41,41,36,10,225,225,
247,241,232,253,15,20,17,26,46,30,11,0,242,246,238,228,228,239,218,242,31,48,23,11,36,38,15,249,252,0,
0,237,254,11,5,3,21,69,95,55,45,85,70,13,8,11,247,229,210,7,49,237,225,15,32,32,19,10,20,254,
222,249,249,224,216,222,11,18,5,43,75,62,55,47,43,40,0,252,52,30,233,2,21,37,77,73,74,92,66,50,
77,50,2,249,224,223,210,196,228,243,221,242,10,12,12,255,3,27,8,231,221,222,225,219,209,226,228,205,248,29,
33,70,67,57,86,84,93,100,82,72,43,7,16,31,13,15,29,19,20,26,19,55,30,247,5,251,193,171,180,233,
240,226,14,28,17,30,67,92,55,247,242,240,243,234,204,234,9,14,65,104,98,84,75,106,112,53,32,29,226,206,
238,0,11,230,219,35,59,0,246,227,254,0,191,187,203,159,168,231,255,235,231,213,18,33,254,247,239,243,13,6,
26,62,30,9,73,99,109,50,5,40,27,2,0,0,9,9,4,23,36,15,255,11,46,6,192,209,229,228,206,178,
224,5,248,12,57,37,29,239,237,56,40,231,237,241,229,229,225,26,19,242,18,62,44,239,230,31,34,211,199,248,
233,227,217,245,245,210,214,242,24,28,235,246,8,253,9,17,9,5,223,0,50,6,206,236,240,233,250,225,16,18,
220,0,67,45,24,11,33,47,247,224,14,236,201,224,227,229,228,206,36,79,37,53,54,42,81,47,45,43,227,221,
25,14,20,247,215,24,46,38,68,67,36,14,235,238,247,198,173,199,241,10,5,15,34,31,43,71,55,31,246,245,
245,211,190,217,249,9,36,36,59,79,73,98,103,89,60,31,14,249,240,247,8,249,254,28,54,58,52,34,51,38,
250,3,9,246,237,236,230,226,223,1,22,245,247,12,6,31,47,56,52,42,45,48,47,66,79,41,29,53,64,54,
68,57,51,49,20,7,23,40,26,4,9,247,254,47,47,7,2,9,239,207,212,229,237,219,241,3,242,15,41,25,
63,87,55,54,63,59,59,25,253,11,9,45,63,34,55,57,11,80,58,249,220,191,230,253,199,230,244,188,181,211,
9,249,203,223,254,252,187,165,228,0,7,23,38,26,4,245,6,28,6,216,235,13,10,6,22,44,59,47,46,79,
69,11,251,14,247,195,155,163,192,189,194,234,244,252,1,5,31,12,233,233,255,8,233,246,17,16,255,16,24,57,
36,0,7,8,223,212,219,252,253,232,255,36,37,26,45,60,44,38,46,58,32,239,245,27,46,47,68,80,52,32,
38,26,13,245,229,243,234,228,247,4,23,41,41,51,63,33,15,14,8,255,219,217,10,25,8,254,5,21,27,35,
71,56,11,255,10,38,29,248,0,25,238,240,21,29,25,255,244,50,63,16,22,59,69,45,10,58,61,8,22,38,
9,235,206,242,38,18,250,11,247,250,9,0,27,3,206,233,248,228,237,250,241,29,34,53,50,43,68,70,43,46,
47,13,9,23,14,19,251,255,39,58,68,45,21,23,27,21,24,24,235,212,197,189,206,209,191,209,216,244,1,249,
9,27,13,19,30,24,8,242,243,248,235,232,15,54,88,88,98,117,122,112,107,87,50,7,218,240,217,174,192,207,
193,239,255,235,246,242,233,240,206,178,188,191,230,244,225,18,22,15,72,70,46,56,17,0,20,252,237,224,202,1,
33,15,28,26,10,39,40,7,17,241,228,25,247,229,34,6,247,27,9,24,19,229,16,30,217,203,216,168,172,184,
185,190,160,163,229,235,220,255,238,0,23,237,34,59,8,255,3,246,255,243,14,56,36,21,61,72,77,77,61,46,
35,8,248,1,251,206,188,201,228,249,4,7,28,13,224,218,229,199,212,232,208,208,212,220,4,35,29,50,58,58,
58,41,50,48,11,16,17,31,75,53,40,50,76,87,95,82,85,65,31,18,11,35,37,8,0,15,12,1,19,23,
249,227,221,208,194,189,209,227,227,245,254,20,39,41,38,63,75,45,28,42,44,31,6,14,44,37,39,68,87,83,
58,47,60,63,36,252,0,250,212,196,231,235,236,9,30,31,48,24,31,41,248,219,206,182,182,159,179,1,236,237,
70,40,55,113,62,60,68,16,36,32,234,32,61,31,65,69,87,112,76,52,79,48,32,26,252,21,47,242,239,246,
220,218,208,201,254,237,229,246,242,245,230,245,27,224,199,7,247,207,224,235,37,26,248,38,54,24,19,2,16,4,
203,224,38,12,246,18,34,32,24,22,50,29,252,1,253,215,193,186,212,233,229,238,242,1,22,18,11,21,242,226,
228,215,235,241,235,6,41,43,54,44,51,74,48,43,42,242,232,240,231,255,244,237,12,4,253,15,23,34,48,13,
10,239,177,208,249,228,225,223,213,237,2,3,44,54,34,33,46,56,43,11,14,41,35,33,49,39,50,65,39,53,
36,249,16,24,20,2,231,238,14,13,13,24,11,20,33,21,12,252,230,224,249,6,7,13,16,12,32,68,75,52,
62,39,41,55,38,19,13,17,11,12,19,3,12,245,11,251,240,253,245,246,3,246,239,255,7,17,28,246,12,252,
249,15,12,22,17,241,13,44,23,52,67,44,61,64,45,54,10,243,254,243,228,238,237,242,8,254,253,13,24,32,
20,6,2,249,3,5,241,238,245,243,7,23,29,30,0,232,235,227,229,6,2,5,32,20,38,61,40,56,55,28,
33,12,238,219,214,225,210,219,25,54,43,12,15,29,11,252,12,18,245,233,246,9,8,17,48,80,68,48,68,68,
43,44,28,29,18,248,231,249,4,3,241,250,14,8,3,4,242,242,226,216,209,216,206,218,203,222,251,233,2,36,
18,40,52,39,43,27,7,27,3,3,8,236,237,253,2,12,18,24,24,21,37,55,28,1,244,239,233,212,202,204,
197,187,209,227,222,236,12,255,25,18,244,229,229,239,249,233,236,7,25,35,46,43,63,45,20,45,36,14,6,250,
7,16,14,5,13,35,47,54,55,43,26,15,5,8,247,218,225,241,234,232,236,247,252,5,254,19,6,249,237,254,
252,237,238,252,24,37,46,64,53,58,65,63,80,45,0,255,255,240,237,0,24,30,26,51,61,40,51,75,60,40,
39,22,254,237,232,252,16,14,22,46,51,29,17,6,10,5,231,222,223,222,225,233,236,239,3,254,10,33,36,33,
34,19,17,11,10,26,28,27,37,31,20,41,51,33,38,36,21,13,25,23,25,15,1,16,29,8,2,21,28,12,
1,2,255,248,221,200,204,225,216,211,229,1,10,5,29,44,45,30,18,28,28,9,251,250,243,223,244,26,57,52,
53,72,71,52,41,49,57,40,23,18,16,11,0,3,15,19,24,34,33,17,2,253,9,6,245,7,37,39,31,14,
26,59,36,22,37,30,23,15,23,37,26,249,240,244,250,243,227,229,239,232,242,18,30,248,209,244,11,255,241,242,
1,10,0,7,36,52,29,42,69,48,8,253,244,242,230,225,215,203,204,226,8,18,241,230,253,5,235,250,250,238,
236,216,208,244,230,232,15,34,33,21,7,15,18,4,12,9,12,20,12,7,34,8,1,12,31,30,10,249,250,243,
227,228,234,251,2,234,234,252,244,249,252,252,252,221,216,254,251,236,243,241,1,20,27,38,37,31,32,22,6,14,
28,5,251,11,17,13,16,17,48,55,32,30,15,237,229,227,230,222,186,198,254,247,238,23,31,37,48,28,40,42,
5,7,255,248,26,12,249,27,34,22,38,26,19,27,3,0,5,236,236,243,242,3,240,231,13,27,20,24,32,39,
28,251,241,15,255,238,255,2,3,252,244,253,24,19,13,38,41,24,30,34,30,14,7,15,26,6,14,12,11,18,
0,250,252,8,251,245,232,227,239,219,219,2,21,5,0,27,35,40,35,30,35,24,9,0,252,248,248,2,25,28,
10,48,66,54,52,51,52,54,44,21,19,20,7,250,251,11,35,32,7,5,6,12,23,250,243,252,245,232,235,239,
253,0,255,4,19,27,22,16,12,5,246,2,15,248,7,12,17,28,31,34,61,49,30,37,28,16,25,15,12,9,
6,10,34,35,33,37,28,20,8,233,245,254,244,226,211,226,241,242,253,12,24,33,35,39,55,32,249,231,241,250,
237,249,18,32,27,46,58,53,46,46,48,52,34,10,7,0,13,17,14,32,17,5,31,23,18,16,241,240,244,220,
203,211,210,216,230,240,7,9,5,35,36,8,13,7,6,16,14,9,16,255,10,30,28,43,46,17,26,23,249,3,
14,1,6,16,14,21,15,17,26,21,17,27,17,8,21,9,244,251,246,4,25,22,29,45,37,30,24,18,31,33,
15,7,1,243,247,247,244,16,17,9,30,26,10,16,2,247,250,242,248,251,242,251,12,12,29,45,43,40,32,12,
1,239,235,235,243,243,253,15,33,35,38,43,45,39,31,22,5,247,241,234,222,228,236,3,19,12,14,34,24,23,
30,32,45,20,238,238,246,247,252,248,0,8,23,21,22,18,17,23,27,16,20,11,17,4,9,31,35,27,32,25,
17,26,14,7,3,0,6,14,246,240,240,240,247,254,247,252,1,249,0,0,242,242,1,254,255,8,250,244,243,243,
3,24,20,14,10,10,22,26,10,22,25,24,30,25,29,34,25,13,17,8,6,254,252,7,255,243,254,253,254,9,
8,12,21,7,5,12,11,249,236,240,253,0,252,0,10,5,10,10,7,252,3,7,5,7,10,0,6,4,4,23,
25,13,14,14,254,1,3,8,21,17,21,31,12,8,5,1,255,238,228,238,226,228,230,241,247,244,252,24,33,22,
16,15,12,13,4,252,15,14,254,1,7,8,7,13,21,38,23,19,31,25,9,2,7,9,8,251,5,25,12,251,
7,17,25,19,12,14,16,9,8,9,5,1,251,3,2,8,4,4,7,17,17,18,22,27,23,7,5,5,253,244,
253,11,12,5,4,12,27,37,28,29,35,34,18,12,17,19,16,12,15,24,23,24,18,25,22,9,255,10,6,11,
1,6,14,0,7,31,31,39,20,13,18,11,249,250,1,9,13,13,13,19,20,15,27,30,17,4,3,6,8,255,
253,8,19,20,30,52,52,20,13,17,20,3,235,239,250,253,251,248,3,15,18,11,21,13,3,252,255,253,246,234,
243,251,253,11,26,38,39,29,27,37,30,8,1,13,24,10,253,0,9,4,9,30,32,20,17,22,22,6,254,12,
13,0,250,1,8,11,0,2,10,8,247,251,254,7,12,255,2,12,9,12,11,2,8,2,245,2,254,250,0,3,
17,16,18,25,39,36,37,31,14,13,6,251,6,11,0,5,3,0,20,22,11,14,17,13,15,1,253,0,2,0,
5,10,12,16,15,17,22,20,16,8,11,12,11,1,251,253,9,13,14,26,21,15,25,38,28,24,17,11,12,5,
246,5,5,254,3,4,1,2,0,0,3,250,251,7,3,1,7,254,245,249,254,7,3,7,19,17,10,20,24,24,
22,26,30,33,21,21,16,4,12,15,2,4,252,1,0,0,247,252,14,17,17,18,20,12,11,4,5,0,249,244,
246,252,253,253,242,238,254,2,5,12,6,0,5,4,0,4,4,5,8,13,15,12,18,19,28,19,9,14,9,5,
5,10,9,8,11,16,24,30,30,19,26,26,16,16,250,235,241,242,240,249,243,245,250,0,11,23,20,17,23,13,
11,17,6,255,4,12,7,14,14,18,25,25,17,12,7,5,254,6,6,0,252,253,11,11,18,17,23,23,19,11,
1,246,243,239,244,245,246,252,254,2,11,8,7,6,6,10,9,1,248,245,254,10,15,10,15,20,14,15,9,3,
3,255,255,1,1,0,2,10,13,21,9,3,13,6,1,6,253,255,250,254,9,24,19,15,12,10,14,14,10,8,
4,2,9,6,6,8,14,23,24,20,24,25,21,23,13,10,12,7,7,3,251,251,255,2,7,12,17,11,18,15,
23,28,23,16,15,17,19,19,16,18,19,19,16,20,17,15,18,18,16,10,8,10,16,29,19,18,23,14,21,16,
18,11,6,2,4,8,2,1,3,4,9,17,21,27,23,17,18,15,13,15,14,13,11,9,2,4,8,14,22,21,
20,22,23,27,27,24,18,23,19,24,29,20,22,23,21,27,28,21,23,17,11,6,0,0,5,3,7,15,12,12,
14,18,24,25,18,13,7,12,10,4,0,0,255,8,15,14,19,17,15,14,15,14,14,3,6,4,3,3,255,253,
7,19,25,27,33,36,35,35,28,21,16,13,11,9,10,11,12,17,17,19,17,19,19,16,15,13,8,8,4,2,
8,12,17,12,10,10,20,20,17,12,7,14,13,7,6,8,8,11,9,15,21,20,23,25,22,25,18,19,25,23,
10,9,11,9,8,8,14,13,5,2,0,5,1,250,254,0,0,0,76,0,3,0,5,0,8,1,144,1,233,3,
184,6,108,12,210,15,224,27,38,29,45,46,47,25,13,11,7,0,120,60,120,120,120,120,75,90,75,44,45,70,
130,54,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,5,0,8,1,
144,1,233,3,184,6,108,12,210,15,224,27,38,29,45,46,47,25,13,11,7,0,120,60,120,120,120,120,75,90,
75,44,45,70,130,54,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,
1,0,8,1,144,1,233,3,184,6,108,12,210,15,224,27,0,29,45,46,47,25,13,11,7,0,120,60,120,120,
120,120,75,90,75,44,45,70,130,54,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,250,0,0,60,0,3,0,5,0,8,1,144,1,233,3,184,6,108,12,210,15,224,27,30,29,45,46,47,25,
13,11,7,0,120,60,120,120,120,120,75,90,75,44,45,70,130,54,0,0,0,0,40,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,250,0,0,5,0,8,1,144,1,233,3,184,6,108,12,210,15,224,27,30,29,
45,46,47,25,13,11,7,0,120,60,120,120,120,120,75,90,75,44,45,70,130,54,0,0,0,0,40,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,8,1,144,1,233,3,184,6,108,12,210,15,
224,27,0,30,45,46,47,25,13,11,7,0,120,60,120,120,120,120,75,90,75,44,45,70,130,54,0,0,0,0,
40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,60,0,2,0,37,0,184,0,24,2,
112,5,72,8,0,10,188,12,136,19,60,17,24,40,12,16,20,8,8,8,157,125,137,137,150,175,157,125,137,44,
45,70,130,52,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,
184,0,24,2,112,5,248,7,236,9,188,12,131,24,0,4,18,6,9,21,15,6,3,3,157,125,137,137,150,175,
157,125,137,44,45,70,130,50,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,
0,0,90,0,3,0,5,0,4,0,16,1,220,5,156,9,58,14,216,19,224,21,40,5,8,23,10,6,6,6,
4,4,150,125,137,137,150,175,150,125,137,44,45,70,130,54,0,0,0,0,40,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,250,0,0,5,0,4,0,16,1,220,5,156,9,58,14,216,19,224,21,50,6,9,26,
12,7,7,7,5,4,150,125,137,137,150,175,150,125,137,44,45,70,130,54,0,0,0,0,40,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,250,0,0,9,0,4,0,16,1,220,5,156,9,58,14,216,19,224,21,
0,6,9,25,11,6,6,6,5,4,150,125,137,137,150,175,150,125,137,44,45,70,130,54,0,0,0,0,40,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,8,7,36,0,248,248,251,0,6,7,6,3,
0,252,246,241,237,237,237,239,252,2,9,19,29,34,34,31,22,15,7,4,9,17,19,24,30,36,43,61,69,68,
66,52,37,33,25,13,4,249,232,236,250,1,15,18,3,250,242,230,223,217,202,187,185,185,193,210,218,220,224,232,
239,250,3,0,249,242,236,233,237,244,250,3,9,15,25,27,27,26,21,16,10,3,254,246,242,240,241,242,243,243,
245,249,255,0,1,255,250,243,238,236,235,237,239,238,241,246,252,1,3,1,254,251,249,249,247,244,240,235,232,232,
232,232,235,255,25,54,78,82,78,74,67,56,44,27,15,11,16,31,40,50,52,49,44,34,27,18,2,237,218,203,
202,209,218,223,227,226,225,218,216,218,218,219,220,218,215,210,209,214,222,239,0,19,30,34,30,26,17,11,10,10,
10,11,12,18,18,24,27,26,23,19,10,3,250,242,239,236,234,237,237,236,238,243,246,247,249,248,246,244,239,237,
238,243,254,12,21,28,29,25,18,13,9,5,3,3,6,9,14,18,17,21,18,10,5,0,251,249,248,248,250,251,
252,253,255,6,9,8,4,7,19,24,23,21,8,253,246,244,252,255,10,21,22,22,11,5,5,254,247,245,239,235,
232,230,235,223,232,248,0,5,13,23,44,39,32,31,14,255,1,14,31,46,51,68,76,94,114,112,107,91,63,48,
42,34,23,10,248,231,244,3,16,33,21,252,234,215,201,194,186,163,149,147,150,167,185,196,200,207,218,229,249,4,
0,252,242,229,229,232,237,245,4,17,34,48,52,52,47,37,26,17,6,253,246,245,245,246,247,246,245,246,250,255,
1,0,249,237,231,226,228,230,233,233,236,240,248,0,4,4,2,0,254,253,255,254,253,252,251,250,251,252,254,255,
254,255,254,254,254,253,252,252,252,255,0,0,1,2,3,1,1,1,1,2,3,4,5,5,5,4,4,3,1,1,
255,254,252,252,251,251,250,249,250,250,249,249,249,251,249,252,252,251,250,253,255,0,2,4,6,6,6,5,4,4,
2,0,0,0,1,2,4,4,3,1,0,255,253,252,251,251,252,252,253,255,0,2,3,5,5,7,7,8,8,8,
9,10,10,10,10,10,9,8,7,8,10,9,9,6,8,9,10,10,8,5,4,3,3,5,2,255,251,251,0,8,
17,23,24,25,28,31,32,29,18,9,1,255,2,9,14,15,13,11,12,14,14,11,4,250,238,227,217,207,199,199,
202,214,232,244,2,14,23,27,30,20,7,2,253,3,26,38,50,60,64,74,92,117,124,121,109,82,65,60,50,32,
13,244,220,234,254,11,34,25,252,235,215,200,194,184,158,139,134,135,154,178,191,196,202,215,227,247,6,1,253,242,
228,227,232,238,249,8,21,37,52,58,58,55,45,33,22,10,255,247,244,244,245,246,246,244,243,247,254,2,0,249,
238,229,226,225,230,230,233,234,239,248,0,6,7,6,2,0,254,255,0,255,251,249,248,250,251,250,249,249,252,252,
253,253,252,251,251,251,251,250,251,251,251,254,0,1,1,2,3,3,4,4,5,5,5,3,1,0,254,250,248,249,
255,27,48,36,32,9,248,246,226,196,203,231,5,26,28,18,4,252,241,226,218,217,238,6,20,25,22,17,13,2,
241,229,223,228,242,0,8,16,26,25,22,7,242,234,241,252,2,10,14,22,24,16,251,242,249,253,2,3,8,9,
253,232,0,26,23,21,3,1,7,3,1,20,22,21,10,4,249,241,252,0,254,3,251,242,244,247,246,232,233,252,
8,4,0,255,2,6,10,5,7,12,15,10,5,0,248,245,253,0,8,19,33,31,24,11,249,240,234,243,249,249,
252,253,253,246,243,244,250,255,3,13,22,23,7,247,233,233,236,0,22,39,50,52,43,25,9,12,15,22,29,30,
23,18,7,253,250,248,248,3,7,4,5,2,254,246,237,226,218,217,220,228,235,238,239,240,243,246,252,1,0,0,
254,252,252,255,0,0,3,7,9,14,16,19,20,19,17,12,7,3,253,249,249,250,253,255,253,0,0,0,1,0,
254,253,252,250,250,251,249,247,244,246,252,0,3,4,3,1,255,253,251,254,0,254,253,253,248,248,249,251,255,3,
8,8,2,251,244,240,241,247,253,5,13,16,14,6,0,247,241,241,249,2,11,10,10,9,9,4,255,250,246,247,
250,252,0,6,8,3,252,246,245,248,251,0,10,12,8,0,247,246,248,250,254,2,7,8,7,5,8,13,10,7,
0,251,249,249,252,0,5,9,8,7,3,2,1,252,254,255,254,251,249,245,247,250,254,0,3,1,0,253,250,247,
254,3,7,12,15,13,10,7,4,6,7,8,11,16,18,16,14,12,12,12,13,16,16,15,12,9,8,6,4,0,
247,240,237,242,0,14,30,38,42,48,52,56,55,43,32,21,15,18,22,25,26,24,21,22,26,27,23,12,254,238,
223,208,195,187,185,189,200,215,229,242,253,2,6,5,0,241,234,231,236,4,26,42,51,55,63,77,96,105,103,95,
72,55,53,48,34,22,1,233,239,255,8,24,18,247,229,212,203,200,197,177,157,149,148,161,184,199,204,210,219,230,
246,2,254,251,247,242,242,246,250,253,5,12,24,41,51,57,58,49,37,24,11,0,249,246,243,247,246,244,244,244,
250,0,3,252,242,229,219,215,219,221,230,240,243,248,253,251,248,242,241,250,11,24,24,14,255,242,233,231,236,252,
10,12,10,7,0,250,246,242,242,244,246,247,246,243,240,236,232,230,233,247,18,47,74,80,81,78,75,63,40,14,
4,5,21,38,53,55,51,48,38,31,20,10,4,0,247,237,225,222,223,226,230,233,239,239,232,227,225,223,225,229,
231,228,220,216,216,223,236,249,7,14,16,9,0,246,240,238,239,245,254,3,10,15,16,12,3,252,249,249,253,255,
1,2,2,1,0,255,253,251,252,1,6,10,12,14,10,3,249,244,244,239,243,252,9,20,28,26,17,1,251,246,
254,2,5,11,5,8,3,11,15,15,15,11,13,20,26,33,27,18,11,1,0,250,0,4,3,2,6,18,28,23,
12,254,246,237,226,216,214,217,223,234,247,3,10,15,17,15,13,10,2,0,0,7,22,33,38,41,40,44,55,71,
79,79,72,56,44,40,35,25,14,0,240,244,255,7,19,15,255,242,231,221,216,210,193,180,177,179,191,206,215,219,
223,230,237,248,1,254,249,244,237,238,243,249,255,7,16,23,33,36,36,33,27,20,14,8,2,254,251,251,252,252,
251,248,249,250,254,0,0,252,245,239,237,237,240,242,243,245,249,254,0,4,4,1,255,254,0,0,1,0,0,255,
254,255,0,0,0,0,255,255,255,0,0,0,254,0,1,1,2,0,2,3,1,2,3,3,3,2,2,4,4,5,
5,5,3,3,0,0,255,255,252,254,252,252,253,253,254,253,252,252,251,250,248,249,249,250,250,250,251,252,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,95,0,4,0,5,0,116,0,
13,2,161,5,152,8,128,12,212,13,96,27,30,8,14,26,25,12,12,12,7,4,167,150,135,120,120,120,197,120,
120,44,45,70,130,54,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,
5,0,116,0,13,2,161,5,152,8,128,12,212,13,96,27,35,15,19,35,33,16,16,16,9,5,167,150,135,120,
120,120,197,120,120,44,45,70,130,54,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,250,0,0,5,0,116,0,13,2,161,5,152,8,128,12,212,13,96,27,30,15,19,35,33,16,16,16,9,5,
167,150,135,120,120,120,197,120,120,44,45,70,130,54,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,250,0,0,1,0,116,0,13,2,161,5,152,8,128,12,212,13,96,27,0,10,15,29,26,13,
13,13,8,4,167,150,135,120,120,120,197,120,120,44,45,70,130,54,0,0,0,0,40,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,250,0,0,101,10,56,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,
0,1,2,2,2,3,2,1,255,253,250,247,246,246,247,248,250,251,252,252,252,253,253,253,253,252,250,249,250,251,
253,0,5,12,19,22,20,15,9,4,255,250,250,247,245,245,248,251,0,254,253,252,249,244,240,236,234,231,233,238,
245,253,0,4,7,13,16,16,17,20,21,21,18,22,21,19,20,27,31,27,25,25,21,13,10,1,252,246,244,245,
247,245,249,250,251,251,251,250,249,246,245,246,246,245,247,250,252,255,1,4,6,9,8,6,4,3,3,5,5,5,
7,4,3,3,3,3,3,0,252,247,244,247,247,248,252,255,255,250,246,244,240,239,242,242,245,247,247,249,247,246,
244,245,245,247,249,252,255,1,0,2,3,5,5,3,0,252,254,254,251,250,250,250,253,254,253,251,249,248,246,243,
239,234,229,227,226,224,223,227,0,41,84,119,125,120,115,104,88,70,45,26,20,26,46,59,73,76,71,64,49,37,
23,255,222,195,174,173,184,199,207,214,214,214,206,203,206,206,206,207,205,201,194,193,200,210,235,4,33,48,52,44,
35,21,11,9,9,9,10,11,19,20,29,33,32,27,20,8,254,241,231,228,224,223,228,229,228,232,240,245,245,247,
245,240,237,230,227,228,234,249,13,26,35,36,30,20,13,7,2,255,0,4,9,17,21,19,22,18,8,3,253,245,
241,238,240,248,253,0,253,247,248,244,239,231,234,248,253,255,5,254,248,242,236,240,238,253,14,18,18,1,247,250,
247,250,5,9,16,24,30,38,18,16,19,15,5,2,9,32,21,23,37,20,5,0,247,0,6,1,21,21,22,23,
13,8,254,247,244,244,248,253,0,3,5,6,6,6,5,4,1,254,250,247,245,247,248,250,251,252,252,249,250,250,
251,252,252,253,254,254,255,255,252,252,249,249,246,250,251,0,0,0,0,0,254,251,253,251,251,252,255,0,0,0,
0,1,1,1,1,255,255,255,252,255,253,0,0,1,255,0,254,254,254,254,254,255,2,2,0,1,255,255,1,1,
1,1,0,1,3,1,3,3,3,3,3,2,2,2,6,6,6,6,6,5,2,1,1,1,2,2,2,2,2,2,
2,2,2,0,1,255,255,255,1,0,1,255,254,254,254,254,253,253,0,253,0,0,255,252,255,255,254,254,255,1,
1,1,254,253,252,249,248,248,248,249,250,252,253,253,252,252,251,250,250,250,251,253,255,0,2,4,5,6,8,8,
10,9,9,8,7,7,6,6,5,5,5,5,4,4,5,8,8,8,4,4,4,4,4,4,4,4,1,0,1,1,
1,1,1,2,2,2,2,255,255,255,255,255,255,252,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,254,0,254,254,254,1,2,2,2,1,255,255,2,2,2,0,0,0,0,0,
0,0,0,1,1,0,254,254,254,254,255,255,1,0,2,0,255,255,255,0,0,0,0,0,0,0,0,0,0,2,
0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,2,2,0,255,254,254,255,1,2,1,1,1,1,1,
1,1,0,0,0,0,0,3,1,3,0,3,0,0,0,0,0,0,4,4,4,1,1,1,1,254,254,254,255,254,
251,250,251,255,0,2,2,2,2,2,2,1,254,254,253,253,255,0,2,3,4,4,3,2,1,1,0,0,254,252,
252,250,247,247,251,5,49,81,63,56,19,247,243,214,173,187,230,19,49,50,36,15,1,238,212,197,195,225,6,27,
34,29,21,15,0,231,215,206,212,232,253,8,20,35,34,30,9,234,224,235,251,5,17,23,34,37,24,248,234,244,
250,2,3,11,11,248,218,252,35,31,28,2,255,8,3,255,27,30,29,13,4,241,229,245,254,251,4,247,232,235,
241,242,223,224,249,9,254,245,241,247,251,0,248,253,9,18,15,8,253,239,232,244,250,6,22,41,39,30,14,247,
240,236,254,11,15,20,19,13,252,241,236,239,243,247,5,24,31,10,244,220,209,208,232,5,28,40,34,10,236,215,
224,241,2,15,21,20,20,16,10,0,244,237,244,0,9,18,22,21,13,4,255,252,253,1,4,4,2,1,0,255,
254,253,254,255,0,2,5,7,8,8,4,0,0,253,252,253,1,5,9,10,7,6,5,255,251,251,252,0,3,1,
5,5,1,1,255,255,2,6,5,5,5,1,254,247,248,252,0,1,2,2,2,255,252,249,252,0,254,254,253,246,
245,245,249,255,6,14,14,6,250,240,235,236,244,253,9,21,25,21,9,255,242,234,234,244,3,15,13,13,12,11,
4,252,244,239,242,247,252,4,12,15,7,251,242,240,243,248,1,16,19,14,2,246,244,246,248,253,4,11,10,6,
0,1,5,2,255,246,241,240,241,246,254,5,9,5,0,249,247,246,240,246,250,251,250,248,244,247,251,1,5,8,
3,254,248,243,239,249,3,9,16,19,14,9,3,253,255,1,3,10,18,22,19,17,15,15,14,13,14,14,14,13,
11,9,5,0,250,243,239,237,240,250,3,15,22,26,33,34,37,37,30,29,27,25,26,24,20,18,17,16,17,21,
21,17,9,1,249,241,233,228,228,228,231,234,234,236,237,235,233,233,226,225,222,221,224,229,237,248,0,2,2,4,
3,255,254,253,253,252,253,0,4,5,9,9,6,6,3,0,252,249,245,245,242,246,250,255,255,254,249,247,244,247,
253,253,255,255,0,255,252,247,250,0,10,13,12,10,3,254,248,247,253,4,12,19,17,12,6,1,253,255,255,252,
0,253,252,255,255,2,5,3,248,242,236,234,233,239,239,249,6,9,9,5,248,235,225,228,246,20,40,37,22,0,
240,229,226,232,254,17,20,18,13,4,251,245,241,242,245,248,249,246,241,235,228,221,218,222,244,28,71,109,116,116,
110,105,87,53,16,1,4,29,56,80,86,83,79,65,53,35,18,8,0,243,229,212,209,212,219,226,232,239,236,224,
214,210,205,207,209,209,204,192,187,189,201,221,242,8,19,21,10,249,233,222,220,221,232,247,3,15,24,27,22,9,
254,248,249,253,255,2,2,2,0,253,252,248,245,245,253,4,9,11,13,8,255,240,233,233,227,233,246,11,25,36,
31,18,254,246,239,251,0,5,17,12,19,11,16,12,3,254,246,246,254,5,16,14,10,11,2,253,240,242,247,246,
247,253,14,28,22,12,0,0,254,248,244,249,0,7,13,17,22,19,14,9,0,249,251,252,0,5,12,13,13,9,
5,0,254,254,254,255,1,2,2,2,2,2,2,3,6,4,3,0,0,0,1,2,2,2,0,255,254,252,251,251,
252,253,254,255,255,0,0,255,253,251,249,248,248,249,251,252,255,0,0,0,255,255,255,255,255,255,255,255,1,2,
2,2,2,2,2,2,0,2,0,0,0,0,1,0,254,254,254,1,2,3,3,3,3,0,0,0,253,253,254,0,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,5,5,2,5,6,6,6,3,6,6,3,3,4,4,4,
1,1,2,2,3,4,4,1,1,255,255,255,0,253,0,254,254,255,255,255,252,252,253,253,253,250,250,250,250,250,
250,250,250,250,250,250,250,252,249,249,252,252,251,251,254,254,0,0,0,255,255,1,1,0,0,255,255,2,5,5,
4,4,3,2,2,2,2,5,5,5,4,4,3,3,2,2,2,5,5,6,9,9,9,9,5,1,0,1,1,1,
1,1,1,2,2,2,2,2,2,255,255,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,255,255,255,255,255,1,255,255,1,255,1,2,5,2,1,1,1,255,1,1,2,2,2,2,0,0,0,0,0,
0,0,253,253,253,253,254,0,1,1,1,1,0,254,254,0,1,1,255,0,0,254,254,0,0,255,0,0,0,254,
0,0,0,0,3,0,3,0,254,252,249,253,0,255,1,7,27,58,60,55,18,245,221,212,188,188,210,251,40,62,
54,29,5,243,222,205,201,222,1,27,44,43,31,17,0,236,219,210,218,236,0,16,19,24,16,2,240,230,221,246,
16,20,36,22,15,251,237,243,237,0,4,8,9,57,46,9,220,224,247,241,246,254,54,31,11,245,226,245,242,246,
254,249,252,4,10,17,36,255,225,222,243,245,249,27,21,23,13,244,238,232,236,3,12,3,19,11,9,2,239,242,
243,254,5,3,15,22,16,10,3,5,11,17,22,25,25,13,255,240,236,238,254,5,12,12,33,29,71,24,253,231,
240,227,212,220,244,22,24,0,223,234,232,0,240,232,234,237,219,222,239,250,20,15,5,252,0,240,245,255,0,11,
20,17,9,10,9,6,6,8,0,12,14,13,16,11,1,250,250,251,253,0,252,2,3,249,244,240,241,246,250,253,
246,248,248,252,255,254,252,248,246,246,251,251,255,9,17,21,19,11,5,0,253,252,248,252,4,16,22,22,20,9,
4,0,250,249,250,5,11,13,16,11,0,248,248,254,253,4,13,21,21,13,8,4,0,253,0,255,9,19,25,29,
19,13,2,252,252,254,0,5,11,13,10,3,253,250,247,245,243,247,249,254,252,253,252,247,246,246,243,244,248,249,
249,248,245,244,244,247,251,253,3,3,4,250,242,244,250,244,247,254,9,15,19,17,8,255,243,238,237,240,246,2,
17,25,18,8,252,245,239,233,240,252,6,14,11,9,7,255,245,236,236,250,3,12,19,18,10,3,243,227,224,228,
237,254,10,20,18,4,241,230,226,229,235,241,247,250,252,251,248,245,244,246,254,9,19,19,16,9,0,250,248,251,
6,18,29,32,24,18,11,6,3,6,11,22,23,21,24,20,16,9,8,8,9,12,8,0,250,245,248,2,16,39,
54,65,66,62,51,35,19,4,255,0,10,22,28,28,27,20,15,4,253,249,242,234,230,222,217,213,212,215,218,220,
226,228,233,233,230,225,220,215,214,214,220,227,238,249,0,7,12,7,1,252,250,249,249,255,2,8,8,8,7,10,
10,14,18,22,23,23,18,11,6,0,0,254,1,3,12,17,19,19,8,2,248,240,236,240,244,249,253,0,3,2,
1,253,252,251,253,252,255,1,4,7,5,1,0,2,6,7,14,13,9,0,248,243,239,235,237,241,247,1,9,8,
0,246,238,229,227,231,241,252,2,6,7,6,3,254,248,242,244,247,253,0,3,8,3,251,245,243,249,255,7,17,
16,7,251,246,252,253,1,3,6,6,5,2,255,250,246,242,239,238,238,239,237,234,229,217,205,205,241,32,85,113,
111,109,102,98,82,46,23,18,25,46,64,73,80,73,65,54,41,39,34,26,16,253,234,217,208,210,210,214,226,225,
225,221,216,211,207,198,195,194,186,185,187,195,213,233,249,5,7,3,249,245,243,245,251,255,5,11,7,5,4,8,
13,22,27,28,25,21,10,0,248,246,247,250,255,253,254,255,0,254,255,255,251,247,243,238,237,237,244,248,251,254,
253,255,1,4,6,8,7,5,4,5,1,4,4,9,10,9,10,15,9,7,2,0,2,6,7,7,3,255,253,247,
251,2,6,2,250,244,240,247,251,255,1,0,0,254,0,252,255,1,6,3,2,8,7,8,1,1,7,14,11,11,
10,9,4,254,250,0,4,9,7,8,3,254,253,0,253,255,252,254,9,9,12,13,11,4,0,249,248,248,246,253,
1,6,10,6,7,3,251,243,243,244,253,1,1,1,254,2,255,251,251,0,0,0,253,254,254,253,252,252,251,251,
252,254,255,0,0,253,249,245,244,244,247,0,10,22,34,41,37,32,19,10,6,7,12,17,23,24,21,19,16,14,
16,15,17,20,14,8,2,249,243,241,244,246,249,251,253,255,252,250,251,249,246,243,239,232,228,233,238,243,248,248,
248,248,243,239,238,242,242,250,249,248,248,247,246,245,248,252,2,2,9,4,3,3,2,2,2,1,254,0,0,4,
4,9,8,4,4,4,0,0,0,0,64,4,31,0,0,2,7,12,13,8,3,255,251,245,242,243,251,3,7,5,
255,249,248,253,1,6,8,5,0,249,246,252,5,13,12,4,252,248,249,251,255,4,8,8,2,252,251,0,6,7,
4,255,252,252,252,252,253,253,254,255,2,9,15,16,11,3,251,244,240,240,248,3,13,15,9,0,248,243,242,246,
0,8,15,15,9,0,248,245,248,254,1,5,8,8,4,253,246,246,251,2,9,14,14,8,253,239,232,236,248,4,
15,22,20,9,247,230,226,238,3,27,40,39,26,8,247,234,232,245,9,31,51,65,66,45,4,216,186,181,201,235,
10,30,28,7,234,210,202,214,236,2,19,27,24,12,253,237,226,222,227,243,8,30,38,29,8,245,234,237,250,11,
26,32,26,11,253,242,242,249,2,10,15,15,11,5,0,253,250,249,251,0,8,14,16,9,255,244,241,245,251,0,
5,7,6,2,255,252,250,250,252,0,6,9,7,2,255,254,254,0,0,1,2,3,4,4,3,1,0,0,1,2,
3,5,5,3,0,254,253,254,255,0,1,0,253,250,251,254,0,0,0,1,1,0,253,251,252,254,255,255,254,255,
0,255,255,255,255,254,254,0,0,1,0,0,0,2,2,1,0,255,0,0,1,3,4,3,2,1,0,0,0,2,
4,6,6,5,3,3,4,3,0,254,253,254,0,2,2,0,0,1,2,1,0,255,255,0,1,2,0,0,255,0,
255,252,251,251,254,0,1,1,0,0,254,252,252,254,0,1,3,2,0,254,253,254,255,0,1,2,1,0,0,0,
2,3,3,3,2,2,1,1,1,2,2,3,2,0,255,255,1,4,4,2,0,0,0,0,3,15,29,28,0,214,
196,219,4,32,32,16,0,249,241,233,234,252,19,32,23,1,240,233,238,247,0,9,15,16,6,246,235,238,253,13,
23,18,4,250,254,18,45,54,24,223,180,186,233,29,56,55,43,30,14,252,241,244,244,216,165,130,153,228,51,87,
80,59,43,20,234,188,173,199,242,14,23,26,34,39,31,16,9,14,22,19,4,239,223,223,238,254,2,251,240,239,
250,7,14,14,11,4,247,229,219,226,244,3,12,19,29,40,45,44,39,29,11,246,226,217,220,229,236,241,247,255,
2,3,2,5,14,25,28,23,15,10,10,8,0,244,238,240,247,253,2,10,18,23,27,28,24,11,248,230,221,224,
233,243,251,0,3,0,252,248,247,245,244,246,253,12,31,44,41,26,7,250,244,242,244,251,4,9,4,249,238,234,
236,241,247,3,18,29,27,14,1,254,255,252,243,235,234,242,253,4,10,14,15,10,0,243,234,235,244,0,9,14,
13,10,5,255,250,248,249,250,248,246,247,251,2,10,16,17,11,0,246,240,242,251,4,11,10,4,253,248,251,2,
9,13,12,8,3,254,250,247,248,251,254,1,6,11,16,16,10,1,248,243,244,248,253,1,4,6,6,4,1,255,
255,0,3,2,0,253,253,255,4,8,9,5,255,247,243,244,248,254,1,6,12,16,14,7,0,253,250,248,249,253,
2,6,5,1,255,0,2,2,0,254,253,255,0,0,0,0,0,254,253,253,1,6,11,11,7,0,245,238,239,247,
0,6,9,9,9,8,5,2,0,251,247,248,253,3,10,14,11,3,252,246,244,246,251,0,6,9,9,7,2,253,
248,246,247,251,0,6,11,11,5,255,250,248,248,252,1,7,10,8,2,254,249,247,247,250,255,2,5,6,4,0,
249,240,235,236,245,5,26,43,48,39,18,248,227,221,233,4,38,66,75,60,26,244,212,196,199,218,248,16,27,19,
0,232,216,210,214,229,252,17,32,32,19,254,231,216,215,228,252,19,32,30,16,254,238,234,241,0,16,29,30,21,
8,254,248,247,249,254,5,14,19,16,9,0,250,246,246,253,5,11,11,7,1,252,247,244,246,252,4,9,8,3,
254,251,250,253,0,1,3,4,4,3,3,1,0,254,254,0,4,5,5,3,2,1,0,0,0,3,5,6,5,2,
0,252,251,252,255,1,3,3,2,0,254,253,254,255,255,255,255,0,0,255,253,251,250,252,255,0,1,0,255,253,
253,252,252,253,0,1,1,0,0,1,2,2,2,2,1,0,0,1,3,5,5,4,3,3,3,3,1,0,0,1,
2,3,3,2,2,1,0,0,0,1,3,3,3,1,0,0,0,0,0,0,0,0,0,255,253,253,254,255,0,1,
2,0,253,249,247,249,253,0,4,4,4,4,4,3,1,254,251,249,250,254,1,3,3,3,2,0,0,0,0,2,
3,2,0,0,1,3,3,1,0,1,2,3,4,3,1,0,255,252,252,253,0,2,4,3,1,0,0,1,2,1,
0,0,0,254,253,255,1,2,0,251,250,255,3,4,0,254,255,1,2,0,254,252,252,253,253,252,255,7,15,18,
19,25,21,0,232,235,6,26,5,216,200,241,41,58,27,252,5,44,55,13,207,179,145,0,4,0,69,0,208,0,
128,2,160,5,56,9,128,12,148,17,244,26,60,5,21,12,9,15,6,6,0,0,187,125,137,137,150,175,187,125,
137,44,45,70,130,44,0,0,0,0,45,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,
69,0,208,0,128,2,160,5,56,9,128,12,148,17,244,26,45,5,22,12,9,16,6,6,0,0,187,125,137,137,
150,175,187,125,137,44,45,70,130,43,0,0,0,0,45,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,250,0,0,69,0,192,0,24,2,80,5,136,9,128,12,148,17,244,26,40,9,19,25,25,19,6,6,0,0,
187,125,137,137,150,175,187,125,137,44,45,70,130,45,0,0,0,0,45,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,250,0,0,1,0,192,0,24,2,80,5,136,9,128,12,148,17,244,26,0,9,19,25,25,19,
6,6,0,0,187,125,137,137,150,175,187,125,137,44,45,70,130,45,0,0,0,0,45,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,250,0,0,3,15,38,0,253,255,1,1,0,253,252,253,253,255,252,253,0,0,
1,254,252,253,2,10,19,28,37,42,43,32,0,224,200,200,223,243,253,252,247,246,242,244,1,17,31,30,13,0,
245,241,248,255,6,9,9,12,13,15,16,11,6,0,251,248,245,245,244,242,242,242,247,255,7,14,14,8,255,248,
246,248,254,1,2,3,4,5,8,12,17,19,19,16,12,6,253,242,235,234,236,240,243,247,251,253,253,0,4,10,
13,14,12,5,0,255,255,2,7,10,12,10,4,0,254,253,254,254,252,249,245,242,242,245,250,255,4,9,10,9,
8,6,5,5,4,3,2,0,253,252,252,251,253,255,1,5,7,8,5,1,251,247,248,251,1,3,1,0,255,0,
2,6,11,15,14,9,255,244,237,238,244,249,253,255,0,1,254,253,255,3,6,4,5,9,9,4,2,6,21,33,
33,23,2,237,224,221,232,246,0,3,252,241,236,240,252,7,15,18,14,4,252,248,252,1,5,6,8,10,12,12,
12,9,5,255,250,249,251,252,253,250,247,245,247,253,4,8,8,4,254,249,247,250,255,1,3,3,1,1,0,3,
6,9,10,10,8,4,2,0,0,0,0,255,252,251,250,252,254,253,254,254,0,255,253,252,252,254,255,0,4,10,
12,12,9,5,3,1,1,1,1,0,253,249,247,249,251,0,3,4,0,253,251,252,255,1,2,4,6,4,4,3,
3,4,2,0,255,0,2,0,254,250,247,247,250,0,7,9,7,5,2,0,0,0,3,6,4,0,254,252,252,252,
254,1,6,9,6,3,2,254,247,246,248,252,254,252,249,250,252,254,0,6,11,9,5,2,0,6,10,17,29,33,
22,5,240,231,231,236,246,252,253,253,244,241,244,250,4,11,10,8,0,253,252,251,0,4,7,11,11,12,14,11,
9,5,0,255,251,250,251,250,250,250,250,253,0,3,6,5,2,254,247,245,246,250,255,1,3,4,5,6,7,9,
11,9,6,2,0,253,255,3,3,2,3,255,246,246,249,254,2,255,253,253,255,252,249,0,5,7,6,4,6,8,
6,4,3,2,2,2,1,0,0,254,250,247,246,249,254,2,2,0,0,255,254,0,3,7,9,9,5,2,0,0,
0,0,0,0,255,254,253,252,252,253,255,1,4,5,4,5,3,1,1,255,254,255,253,254,0,2,5,7,4,1,
1,1,1,0,255,253,253,253,251,251,255,4,6,7,2,255,250,246,245,247,253,0,0,0,1,2,6,9,14,21,
26,28,22,8,250,237,231,232,238,248,0,1,0,253,252,254,0,2,3,1,254,249,246,248,251,0,7,13,18,20,
19,15,9,2,253,247,244,245,247,251,254,0,0,0,1,4,6,7,6,1,251,245,242,242,247,254,4,10,13,13,
9,6,3,2,2,1,1,0,254,254,255,0,3,1,253,250,252,255,0,0,1,0,253,247,246,253,3,8,11,13,
11,6,1,254,255,0,0,0,0,255,253,252,253,254,0,0,1,0,1,0,253,250,250,254,1,6,8,8,7,5,
0,255,0,1,2,2,2,0,254,250,250,252,0,2,1,0,0,0,0,0,2,5,5,1,255,254,253,254,0,1,
3,3,3,3,4,5,3,3,0,252,250,252,255,1,2,0,254,253,253,251,255,2,4,5,0,250,249,251,254,0,
4,6,6,6,7,10,16,21,18,9,0,244,237,236,238,246,255,1,4,5,4,3,0,0,254,252,252,250,250,253,
252,254,3,7,13,16,14,12,7,2,253,248,247,249,251,253,255,0,3,4,5,6,5,3,255,251,248,248,249,251,
253,0,1,3,6,8,8,8,7,5,1,255,254,253,253,254,255,1,4,4,2,254,252,252,251,248,248,254,2,3,
2,2,4,6,7,7,9,7,0,250,247,251,0,2,2,1,0,254,0,2,4,3,0,248,245,247,252,0,4,6,
6,5,5,6,11,13,6,251,242,245,254,1,3,0,0,253,246,253,0,5,8,4,254,251,253,252,6,11,12,11,
255,246,251,255,255,255,0,3,1,254,3,5,4,5,2,0,3,252,245,247,250,251,5,10,7,7,6,2,0,254,
253,251,248,244,243,249,0,1,8,15,12,11,12,11,13,14,5,252,247,240,240,246,251,2,8,8,4,0,0,0,
253,252,248,245,247,247,251,2,7,7,11,9,10,11,9,5,1,254,250,249,249,251,255,2,4,6,6,5,1,254,
250,248,251,253,253,0,0,0,3,2,1,5,6,4,4,3,2,2,1,0,255,254,255,1,4,5,4,1,251,245,
242,243,251,3,6,8,5,254,251,255,4,8,10,8,2,0,254,250,1,4,1,254,254,1,4,4,0,255,249,240,
243,251,5,16,14,9,4,1,252,244,251,5,9,14,7,0,254,241,236,255,3,3,10,3,252,1,2,249,245,252,
16,23,13,253,244,233,240,1,3,17,28,0,254,12,4,254,3,250,244,3,251,233,239,5,9,3,16,22,7,6,
241,228,255,16,5,254,253,244,248,248,6,20,11,3,244,232,251,5,10,13,6,246,245,0,15,30,38,30,4,239,
230,224,228,249,6,8,10,5,252,255,2,1,254,251,246,249,251,254,6,5,2,5,3,4,12,15,10,6,1,246,
239,243,250,251,255,2,2,7,9,7,9,4,255,252,249,250,0,1,253,1,2,254,0,10,13,11,13,6,251,242,
251,254,248,0,6,252,246,254,254,254,10,9,252,250,253,242,239,0,17,10,6,27,23,0,3,7,251,238,243,250,
247,10,8,245,247,4,0,251,20,32,10,252,248,236,236,238,233,243,32,15,2,29,3,248,5,15,0,1,27,242,
239,213,196,253,20,37,79,92,5,232,236,200,180,193,4,26,12,21,25,12,19,28,235,255,36,3,237,236,235,227,
223,228,248,28,64,58,39,28,255,221,205,201,210,246,255,254,18,32,23,12,21,30,30,13,249,245,246,240,223,236,
255,2,14,21,21,20,22,255,235,232,231,230,239,248,3,8,7,6,8,10,9,6,2,3,0,248,242,244,251,0,
7,14,19,20,14,6,250,245,241,240,240,247,3,9,9,10,8,8,6,3,2,1,251,249,249,248,248,250,1,10,
17,23,16,9,4,247,235,230,232,238,251,2,7,8,9,5,6,3,3,5,6,7,2,254,251,1,253,252,7,19,
11,5,0,251,254,239,232,242,4,1,253,10,16,13,253,251,9,6,1,0,254,254,242,241,18,27,249,243,12,7,
251,255,255,4,255,232,231,255,14,23,15,3,11,18,246,232,247,251,0,0,0,12,17,1,243,248,2,0,2,4,
4,255,247,240,250,8,16,16,8,3,255,249,245,247,247,247,245,252,5,12,11,13,19,16,8,0,253,0,2,254,
248,248,247,247,248,0,10,16,15,9,1,249,244,237,239,250,0,4,7,4,5,6,2,2,0,2,1,0,0,255,
0,1,255,0,2,2,2,5,5,1,255,253,253,251,253,1,1,1,2,1,4,2,254,253,0,1,3,2,1,2,
3,3,0,1,5,6,3,254,248,244,242,243,248,253,4,10,13,10,5,6,2,0,7,4,0,0,248,243,248,0,
8,12,9,2,2,254,250,255,0,254,250,246,246,255,3,2,12,12,5,1,0,252,3,9,3,1,0,252,247,251,
4,7,15,10,255,255,250,241,241,247,248,255,3,254,0,9,14,13,12,11,7,3,252,245,251,0,253,254,253,251,
252,254,255,2,6,7,7,3,253,247,250,254,5,10,13,7,1,249,251,253,254,2,3,0,252,251,251,0,2,4,
3,3,0,254,255,253,1,0,0,4,2,2,4,3,2,11,13,5,255,248,247,248,248,250,255,3,5,6,4,3,
3,254,249,249,251,0,2,1,0,2,255,255,3,5,4,10,9,2,254,251,245,250,255,4,4,4,5,0,252,255,
4,3,255,0,252,255,1,1,3,4,8,5,254,254,0,254,253,4,2,0,0,246,247,0,5,4,9,3,3,249,
240,244,0,0,8,21,11,1,255,253,251,3,9,9,255,249,238,233,237,251,2,17,24,24,7,254,254,3,11,15,
6,252,2,23,46,235,133,179,224,23,75,51,25,25,234,202,2,36,20,15,251,219,230,243,237,2,33,20,6,5,
2,2,14,0,242,243,238,231,249,11,31,41,32,1,244,237,237,240,248,252,251,250,250,3,18,29,26,13,246,241,
246,247,244,252,0,253,0,255,5,13,6,1,7,2,0,245,246,255,3,255,247,250,4,15,20,29,31,12,246,230,
226,232,243,3,14,17,13,7,0,1,2,250,244,238,237,245,1,8,14,18,7,253,251,0,6,9,8,0,246,240,
242,246,3,12,13,13,10,4,4,4,0,252,246,242,245,252,3,10,12,7,3,2,4,7,9,5,255,252,253,255,
253,252,248,248,250,249,255,254,255,254,255,0,1,5,5,7,8,3,1,253,251,254,13,15,10,10,255,244,247,253,
2,4,4,249,244,247,250,255,9,8,0,0,4,0,0,1,254,2,7,3,0,6,7,252,251,249,253,251,3,4,
10,10,246,232,248,9,11,14,27,14,246,227,222,249,12,11,18,22,6,247,244,254,1,251,240,233,246,254,254,2,
0,7,3,0,2,20,33,38,32,21,4,240,226,222,237,2,6,8,10,7,6,6,1,255,247,236,222,223,239,252,
8,20,20,12,3,255,0,7,11,4,249,243,242,243,252,10,20,21,12,4,5,6,4,0,250,249,250,252,0,4,
8,9,2,0,0,1,255,253,249,246,248,248,252,1,8,15,15,12,6,255,249,241,240,242,242,252,0,3,13,11,
10,4,254,0,2,5,6,2,253,244,244,0,5,10,17,13,7,9,254,243,240,242,242,245,2,17,24,11,250,231,
240,10,7,4,3,2,9,16,15,20,28,246,208,197,230,6,16,28,31,9,254,244,226,244,17,19,6,11,7,246,
232,228,245,10,27,20,12,13,5,254,254,249,250,249,241,237,248,0,5,14,16,18,12,254,244,246,246,242,242,245,
254,8,15,14,14,14,4,253,252,6,14,16,11,0,247,237,231,239,255,11,19,21,16,11,1,247,236,232,232,233,
241,0,12,22,24,18,7,251,244,247,252,5,12,11,253,245,247,249,2,10,16,13,4,253,251,1,0,255,255,249,
244,248,0,4,19,14,255,253,253,245,251,1,4,10,7,0,253,3,0,9,6,255,252,244,238,244,250,5,3,254,
0,0,4,24,23,23,13,255,246,244,242,246,236,239,0,5,245,4,14,17,20,6,249,0,12,253,247,255,251,253,
248,0,4,12,13,4,1,4,249,250,243,249,2,253,251,252,9,15,18,9,7,2,247,240,237,243,254,2,9,12,
13,9,8,9,9,0,243,233,237,245,255,7,10,1,4,10,10,12,14,3,241,239,240,249,8,16,8,251,248,245,
253,17,25,12,1,239,226,225,245,4,14,18,16,6,255,255,253,255,6,6,1,1,10,14,15,10,0,249,244,241,
245,0,9,8,5,1,255,251,250,248,246,248,248,249,0,8,13,11,7,0,250,247,253,3,7,10,4,252,253,0,
0,4,8,4,1,0,254,2,4,255,249,245,248,253,8,19,25,19,4,245,238,238,247,5,12,13,6,253,251,253,
255,255,254,0,252,245,246,250,0,0,3,6,6,7,4,2,1,1,254,249,249,247,250,0,4,8,16,15,17,21,
33,35,23,255,228,203,181,175,214,16,67,82,56,8,227,212,208,241,31,60,45,12,236,207,213,226,235,11,43,39,
34,34,23,250,225,212,205,225,249,5,24,36,36,20,7,249,236,241,239,248,5,12,6,253,245,241,233,239,244,2,
21,28,26,14,253,248,253,10,22,39,40,26,2,239,231,234,244,249,249,254,254,255,0,0,254,246,239,233,238,249,
3,11,11,7,254,245,245,254,10,21,20,10,255,248,246,250,1,8,15,15,8,3,1,6,8,11,6,0,251,246,
248,250,253,254,0,0,2,5,11,10,9,2,248,237,230,232,237,247,253,1,4,8,13,14,13,16,10,2,248,246,
249,255,1,8,11,9,6,2,255,0,5,5,1,252,242,244,245,244,255,8,13,13,9,7,3,253,250,249,242,246,
253,5,4,10,8,0,253,8,10,0,2,249,237,240,252,9,5,0,8,12,9,21,38,19,250,226,203,211,231,250,
24,34,27,7,245,231,237,255,250,255,11,10,7,8,18,37,45,30,7,252,234,222,230,245,11,15,4,247,242,251,
0,3,8,1,249,235,224,233,244,250,0,3,9,11,14,18,20,18,11,251,240,236,242,0,10,17,21,17,12,7,
6,6,2,0,252,247,248,245,241,244,252,0,6,9,10,10,8,255,251,247,245,245,247,251,5,10,6,5,254,251,
253,1,2,3,1,255,252,252,254,4,7,2,253,255,7,17,19,12,12,6,243,222,231,246,0,11,18,19,10,249,
234,237,1,19,18,4,242,233,237,248,13,23,24,18,5,250,247,246,250,3,254,247,255,0,255,3,1,255,6,6,
11,20,10,255,247,239,242,0,252,252,6,10,0,3,0,1,11,7,251,247,252,244,250,1,10,10,0,247,244,253,
4,1,255,1,2,0,0,255,6,16,13,15,18,23,13,254,245,239,241,245,245,254,6,5,2,2,0,0,253,245,
241,243,246,247,253,1,8,7,5,5,4,7,7,11,7,4,254,247,247,252,3,11,11,3,1,0,0,3,7,6,
0,253,251,0,0,251,249,255,253,1,13,13,12,8,248,240,241,238,242,252,255,2,5,0,255,10,15,7,6,10,
2,251,251,0,5,249,252,248,253,0,33,20,8,3,240,235,244,253,2,7,249,8,19,2,1,252,240,237,232,254,
24,34,26,11,248,238,245,240,11,23,21,7,1,245,225,213,239,15,22,26,16,249,250,241,243,255,5,13,7,16,
5,246,235,253,255,9,26,19,16,2,240,230,237,253,253,237,226,0,11,24,24,21,1,251,249,241,252,12,4,4,
9,6,8,29,31,13,250,235,231,240,6,10,4,3,252,234,232,251,2,7,8,7,250,248,243,239,248,0,0,2,
11,11,11,13,6,2,253,249,247,250,3,6,9,6,8,3,3,5,9,11,6,0,248,245,243,247,3,10,10,8,
10,6,1,1,0,1,251,244,231,226,230,239,250,3,13,20,20,10,8,6,6,2,254,250,252,255,1,11,16,15,
11,2,1,1,0,247,240,236,235,240,247,1,13,17,17,10,5,6,6,3,6,4,255,245,241,247,252,5,7,6,
1,253,252,245,240,253,11,12,12,6,2,1,0,5,7,10,2,247,243,237,235,248,252,254,0,255,250,249,250,255,
248,252,0,10,17,24,32,45,55,58,47,17,236,205,203,226,2,18,14,248,222,213,218,238,0,13,11,0,247,238,
234,236,241,247,251,4,17,34,45,42,20,253,236,234,237,253,10,16,15,11,7,11,21,27,26,14,3,249,238,233,
231,231,239,245,0,10,20,26,18,3,233,212,211,218,231,247,9,24,26,27,24,24,22,21,16,3,248,239,235,236,
238,249,4,11,18,18,16,12,7,252,238,232,225,228,241,4,24,36,34,22,12,255,245,246,245,245,244,242,245,249,
0,10,11,7,2,2,13,11,0,246,244,240,243,8,26,24,20,9,2,5,250,234,227,226,218,224,236,237,11,27,
26,18,14,13,14,18,33,49,60,44,8,232,202,198,216,248,23,43,38,14,247,234,231,231,225,220,223,227,237,250,
4,16,17,11,3,0,8,17,24,22,10,0,237,230,232,247,13,29,38,37,33,22,6,253,243,238,237,238,246,6,
17,14,10,3,254,253,250,251,255,253,246,228,220,219,225,238,255,15,27,36,37,25,13,5,0,251,249,0,2,2,
5,4,3,0,250,248,250,255,250,247,3,248,237,251,3,14,33,34,19,7,1,255,247,252,255,240,235,250,244,246,
3,250,244,12,21,15,4,253,3,6,242,233,254,19,30,17,3,4,9,249,234,236,246,0,0,255,0,5,6,2,
4,9,1,251,248,241,235,240,239,251,11,9,4,13,21,21,26,29,27,22,10,247,230,230,238,241,252,7,12,12,
11,7,3,255,244,232,226,226,231,240,250,2,8,10,11,12,13,15,16,13,8,1,252,249,247,247,250,253,0,10,
19,25,21,14,3,249,239,240,244,248,255,6,10,13,16,13,7,0,248,247,240,238,240,241,241,245,248,252,2,9,
15,19,13,6,1,253,248,249,0,6,3,9,14,10,14,18,1,252,252,244,243,251,239,250,5,0,4,25,7,6,
255,228,245,5,13,4,247,246,2,251,17,18,5,8,253,229,233,5,9,8,6,234,235,0,8,27,37,19,8,255,
242,236,0,254,247,250,250,247,6,0,2,16,7,245,7,250,241,2,0,247,1,0,254,4,7,253,255,7,15,15,
21,25,17,6,248,235,237,244,247,2,8,8,6,4,2,254,247,240,234,235,243,253,4,4,7,8,3,3,6,6,
6,6,4,2,255,250,247,249,250,255,7,11,13,16,15,8,1,251,250,250,250,247,248,250,0,8,13,13,12,5,
255,253,0,2,4,6,5,253,240,234,236,239,240,245,255,7,11,13,16,11,5,0,251,251,1,5,6,12,16,11,
0,249,243,249,2,9,7,6,3,244,240,246,248,1,16,3,0,9,6,245,253,254,246,251,11,17,16,12,4,246,
245,255,252,238,0,12,0,5,6,253,3,13,245,243,7,8,249,1,254,0,49,0,3,0,5,0,76,0,44,1,
20,5,84,11,112,13,135,15,160,28,10,33,11,58,50,34,55,26,13,0,150,120,120,120,120,120,90,120,75,44,
45,70,130,53,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,5,0,
124,0,184,1,20,5,84,11,52,13,110,15,160,28,39,44,29,70,56,46,61,29,14,0,120,120,120,120,120,120,
60,60,120,44,45,70,130,54,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,
0,0,1,0,208,0,13,2,106,5,84,11,168,12,141,14,160,28,0,90,41,72,106,78,67,41,24,0,120,135,
150,120,120,120,120,165,90,44,45,70,130,56,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,250,0,0,45,0,2,0,5,0,148,0,120,1,100,5,84,11,32,13,135,15,224,28,45,35,32,58,
36,40,51,27,10,0,102,105,127,120,120,120,102,90,127,44,45,70,130,52,0,0,0,0,40,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,84,1,7,3,153,4,84,11,208,12,241,14,224,28,
0,101,47,95,101,61,67,43,20,0,195,135,120,120,120,120,120,105,120,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,45,0,2,0,5,0,208,0,249,1,160,5,
84,11,52,13,135,15,192,28,45,35,33,58,48,44,49,28,11,0,150,120,120,120,120,120,90,120,120,44,45,70,
130,53,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,208,0,
53,2,172,5,84,11,12,13,35,15,192,28,0,98,43,86,110,84,80,43,13,0,120,120,120,120,120,120,90,120,
120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,
65,0,3,0,1,0,104,0,44,1,200,5,84,11,12,13,135,15,32,28,0,31,17,53,34,32,55,26,8,0,
150,120,150,120,120,120,120,105,150,44,45,70,130,53,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,250,0,0,1,0,136,0,184,1,84,6,84,11,92,13,210,15,32,28,65,34,21,63,48,43,
41,21,7,0,150,105,150,120,120,120,120,45,150,44,45,70,130,55,0,0,0,0,40,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,250,0,0,1,0,136,0,104,1,152,8,84,11,32,13,210,15,32,28,0,76,
20,78,80,78,76,34,10,0,150,150,120,120,120,120,120,105,120,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,65,0,4,0,5,0,92,0,69,1,76,4,84,11,
72,13,241,14,160,28,20,32,20,64,39,19,26,31,13,0,150,105,105,120,120,120,90,90,75,44,45,70,130,53,
0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,5,0,92,0,69,1,
232,3,84,11,168,12,141,14,32,27,9,40,22,69,49,42,33,29,14,0,150,105,105,120,120,120,90,90,75,44,
45,70,130,53,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,
156,0,189,1,200,3,84,11,148,12,191,14,32,27,36,51,31,74,65,42,39,24,19,0,150,120,105,120,120,120,
90,90,75,44,45,70,130,55,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,
0,0,1,0,124,0,209,1,112,3,84,11,68,12,191,14,160,26,0,145,39,116,103,71,71,45,26,0,120,120,
120,120,120,120,75,120,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,250,0,0,51,0,3,0,5,0,92,0,19,1,120,5,84,11,52,13,216,14,128,27,12,33,10,60,
36,40,59,33,11,0,150,105,135,120,120,120,75,75,105,44,45,70,130,53,0,0,0,0,40,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,250,0,0,5,0,172,0,144,1,80,5,84,11,32,13,191,14,224,26,
39,45,35,70,52,50,58,33,15,0,150,105,150,120,120,120,75,60,105,44,45,70,130,54,0,0,0,0,40,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,172,0,144,1,70,6,84,11,228,12,
141,14,224,26,0,116,48,135,71,71,67,43,17,0,120,90,150,120,120,120,45,60,105,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,0,0,4,0,1,0,188,0,
8,2,40,5,140,10,128,12,91,14,0,27,34,69,36,83,77,49,57,38,23,0,150,120,120,120,120,120,135,90,
120,44,45,70,130,54,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,
1,0,204,0,8,2,176,4,84,11,208,12,191,14,0,27,44,52,38,68,65,49,50,31,23,0,150,120,120,120,
120,120,135,90,120,44,45,70,130,54,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,250,0,0,1,0,140,0,244,1,176,4,84,11,152,13,104,16,128,27,42,23,21,57,27,25,19,16,11,0,
150,120,120,120,120,120,135,60,120,44,45,70,130,54,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,250,0,0,17,0,140,0,224,1,20,5,84,11,152,13,104,16,0,27,0,20,19,49,26,17,
13,15,8,0,150,150,120,120,120,120,135,60,120,44,45,70,130,53,0,0,0,0,40,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,250,0,0,25,0,4,0,1,0,184,0,93,2,200,3,40,10,68,12,141,14,
160,28,30,70,39,71,86,54,58,35,17,0,150,105,120,120,120,120,150,90,135,44,45,70,130,54,0,0,0,0,
40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,168,0,249,1,176,4,84,11,
168,12,85,15,64,29,25,37,27,62,51,35,37,27,13,0,150,105,120,120,120,120,150,120,135,44,45,70,130,54,
0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,168,0,189,1,
176,4,84,11,228,12,60,15,64,29,60,32,27,57,34,25,30,20,10,0,150,105,120,120,120,120,150,120,135,44,
45,70,130,53,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,17,0,
72,0,149,1,20,5,84,11,52,13,235,15,64,29,0,18,24,48,20,10,10,13,9,0,150,105,120,120,120,120,
105,120,135,44,45,70,130,53,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,
0,0,0,0,3,0,1,0,216,0,68,2,186,4,100,10,32,13,191,14,64,29,33,39,26,55,68,37,42,32,
19,0,150,144,120,120,120,120,150,93,105,44,45,70,130,54,0,0,0,0,40,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,250,0,0,5,0,192,0,249,1,176,4,84,11,228,12,91,14,128,28,75,26,27,44,
44,33,26,19,7,0,150,150,120,120,120,120,150,90,120,44,45,70,130,54,0,0,0,0,40,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,250,0,0,17,0,64,0,189,1,20,5,84,11,52,13,235,15,128,27,
0,19,16,48,32,17,11,10,7,0,150,135,120,120,120,120,120,60,120,44,45,70,130,53,0,0,0,0,40,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,0,0,4,0,1,0,192,0,239,1,70,6,
196,9,12,13,241,14,224,27,40,66,32,77,77,68,57,41,20,0,150,120,120,120,120,120,120,120,150,44,45,70,
130,54,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,33,0,192,0,
239,1,20,5,84,11,92,13,241,14,224,27,45,29,24,58,37,35,28,22,8,0,150,120,120,120,120,120,120,90,
150,44,45,70,130,54,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,
1,0,176,0,219,1,216,4,104,11,92,13,85,15,224,27,45,25,27,53,28,16,19,10,5,0,150,120,120,120,
120,120,120,90,150,44,45,70,130,54,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,250,0,0,17,0,128,0,219,1,40,5,104,11,72,13,85,15,224,27,0,20,22,49,36,11,14,13,7,0,
150,120,120,120,120,120,120,90,105,44,45,70,130,53,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,250,0,0,16,0,5,0,1,0,228,0,38,2,134,3,140,10,88,12,166,14,128,28,33,52,
32,61,59,47,39,22,17,0,150,120,120,120,120,120,150,120,120,44,45,70,130,54,0,0,0,0,40,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,228,0,239,1,116,4,84,11,168,12,10,15,
96,28,16,59,36,73,48,43,42,25,16,0,150,120,120,120,120,120,150,120,120,44,45,70,130,54,0,0,0,0,
40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,180,0,239,1,176,4,84,11,
208,12,166,14,96,28,28,32,27,61,38,29,27,20,11,0,150,120,120,120,120,120,105,120,120,44,45,70,130,54,
0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,5,0,180,0,239,1,
176,4,84,11,208,12,166,14,96,28,45,21,17,59,33,24,22,13,6,0,150,120,75,120,120,120,105,30,120,44,
45,70,130,54,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,17,0,
180,0,179,1,20,5,84,11,32,13,166,14,96,28,0,19,23,46,28,23,16,13,8,0,120,150,105,120,120,120,
75,60,120,44,45,70,130,53,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,
0,0,35,0,4,0,1,0,200,0,159,1,68,3,160,10,28,12,141,14,32,26,44,53,36,69,41,26,30,24,
11,0,150,120,120,120,120,120,105,120,105,44,45,70,130,54,0,0,0,0,40,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,250,0,0,1,0,200,0,99,1,176,4,84,11,108,12,60,15,32,26,55,49,32,69,
34,31,35,24,11,0,150,105,120,120,120,120,75,120,105,44,45,70,130,54,0,0,0,0,40,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,172,0,139,1,176,4,84,11,112,13,60,15,32,26,
35,28,34,51,41,20,24,22,7,0,150,105,120,120,120,120,75,120,105,44,45,70,130,54,0,0,0,0,40,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,17,0,172,0,139,1,20,5,84,11,112,13,
60,15,32,26,0,23,31,47,38,19,22,20,7,0,150,105,120,120,120,120,75,120,105,44,45,70,130,53,0,0,
0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,50,0,2,0,5,0,76,0,
104,1,84,6,84,11,132,13,135,15,32,29,50,17,9,45,22,18,33,19,8,0,155,135,97,120,120,120,95,105,
97,44,45,70,130,53,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,
5,0,76,0,104,1,84,6,84,11,132,13,135,15,32,29,0,12,7,38,23,15,28,16,7,0,150,135,97,120,
120,120,90,105,97,44,45,70,130,53,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,250,0,0,50,0,2,0,5,0,108,0,124,1,230,4,120,10,132,13,135,15,32,29,50,25,12,55,30,20,
36,21,9,0,150,135,120,120,120,120,90,105,75,44,45,70,130,57,0,0,0,0,40,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,250,0,0,1,0,172,0,94,1,175,4,180,10,212,13,185,15,160,28,0,18,
27,41,23,19,23,19,12,0,165,105,135,120,120,120,60,120,105,44,45,70,130,56,0,0,0,0,40,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,70,0,3,0,5,0,204,0,94,1,120,5,84,11,
212,13,185,15,160,28,30,13,22,33,18,15,18,15,10,0,165,105,135,120,120,120,60,120,105,44,45,70,130,52,
0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,5,0,76,0,104,1,
120,5,84,11,132,13,135,15,32,29,40,20,10,49,28,20,36,21,9,0,155,135,120,120,120,120,95,105,75,44,
45,70,130,52,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,
76,0,104,1,120,5,84,11,132,13,135,15,32,29,0,20,10,49,30,20,36,21,9,0,150,135,120,120,120,120,
90,105,75,44,45,70,130,53,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,
0,0,40,0,2,0,5,0,76,0,104,1,230,4,120,10,132,13,135,15,32,29,40,8,6,32,19,13,23,14,
5,0,150,135,120,120,120,120,90,105,75,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,250,0,0,1,0,76,0,104,1,230,4,120,10,132,13,135,15,32,29,0,21,10,49,
30,20,36,21,9,0,150,135,120,120,120,120,90,105,75,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,250,0,0,85,0,2,0,5,0,76,0,104,1,156,4,120,10,132,13,
135,15,32,29,85,14,9,40,27,13,20,10,8,0,150,135,120,120,120,120,90,105,75,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,76,0,104,1,196,4,
120,10,132,13,135,15,32,29,0,23,10,51,32,21,38,23,10,0,150,135,120,120,120,120,90,105,75,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,48,0,2,0,
5,0,76,0,104,1,100,5,120,10,132,13,135,15,32,29,48,13,8,40,25,13,20,10,8,0,150,135,97,120,
120,120,90,105,97,44,45,70,130,53,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,250,0,0,1,0,76,0,104,1,100,5,120,10,132,13,135,15,32,29,0,22,10,51,30,21,38,23,10,0,
150,135,97,120,120,120,90,105,97,44,45,70,130,54,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,250,0,0,0,0,3,0,1,0,216,0,68,2,186,4,100,10,32,13,191,14,64,29,33,39,
26,55,68,37,42,32,19,0,150,144,120,120,120,120,150,93,105,44,45,70,130,54,0,0,0,0,40,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,5,0,192,0,249,1,189,3,120,10,228,12,91,14,
128,28,100,27,27,44,44,33,26,19,7,0,150,150,120,120,120,120,150,90,120,44,45,70,130,53,0,0,0,0,
40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,17,0,64,0,189,1,112,3,200,10,
52,13,235,15,128,27,0,19,16,48,32,17,11,10,7,0,150,135,120,120,120,120,120,60,120,44,45,70,130,52,
0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,35,0,4,0,1,0,
200,0,159,1,68,3,160,10,28,12,141,14,32,26,44,43,32,62,36,23,27,21,9,0,150,120,120,120,120,120,
105,120,105,44,45,70,130,54,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,
0,0,5,0,200,0,88,1,188,2,64,11,108,12,60,15,32,26,60,39,27,58,27,26,29,20,9,0,150,105,
120,120,120,120,75,120,105,44,45,70,130,54,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,250,0,0,5,0,172,0,139,1,200,3,64,11,112,13,60,15,32,26,35,28,34,51,41,20,24,22,
7,0,150,105,120,120,120,120,75,120,105,44,45,70,130,53,0,0,0,0,40,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,250,0,0,17,0,172,0,139,1,200,3,64,11,112,13,60,15,32,26,0,23,31,47,
38,19,22,20,7,0,150,105,120,120,120,120,75,120,105,44,45,70,130,52,0,0,0,0,40,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,250,0,0,0,0,4,0,1,0,188,0,8,2,40,5,140,10,128,12,
91,14,0,27,34,69,36,83,77,49,57,38,23,0,150,120,120,120,120,120,135,90,120,44,45,70,130,54,0,0,
0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,5,0,204,0,8,2,164,4,
140,10,208,12,191,14,0,27,49,52,38,68,65,49,50,31,23,0,150,120,120,120,120,120,135,90,120,44,45,70,
130,53,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,5,0,140,0,
244,1,90,3,84,11,152,13,104,16,128,27,50,25,21,57,27,25,19,16,11,0,150,120,120,120,120,120,135,60,
120,44,45,70,130,53,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,
17,0,140,0,224,1,46,3,84,11,152,13,104,16,0,27,0,22,19,49,26,17,13,15,8,0,150,150,120,120,
120,120,135,60,120,44,45,70,130,52,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,250,0,0,25,0,4,0,1,0,184,0,93,2,200,3,40,10,68,12,141,14,160,28,40,70,39,71,86,54,
58,35,17,0,150,105,120,120,120,120,150,90,135,44,45,70,130,54,0,0,0,0,40,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,250,0,0,5,0,168,0,249,1,156,3,160,10,168,12,85,15,64,29,25,40,
27,62,51,35,37,27,13,0,150,105,120,120,120,120,150,120,135,44,45,70,130,54,0,0,0,0,40,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,5,0,168,0,189,1,24,3,160,10,228,12,60,15,
64,29,75,36,27,57,34,25,30,20,10,0,150,105,120,120,120,120,150,120,135,44,45,70,130,54,0,0,0,0,
40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,17,0,72,0,149,1,68,3,160,10,
52,13,235,15,64,29,0,19,24,48,20,10,10,13,9,0,150,105,120,120,120,120,105,120,135,44,45,70,130,52,
0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,0,0,4,0,1,0,
192,0,239,1,70,6,196,9,12,13,241,14,224,27,40,66,32,77,77,68,57,41,20,0,150,120,120,120,120,120,
120,120,150,44,45,70,130,54,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,
0,0,37,0,192,0,239,1,21,4,4,11,92,13,241,14,224,27,50,29,24,58,37,35,28,22,8,0,150,120,
120,120,120,120,120,90,150,44,45,70,130,53,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,250,0,0,5,0,176,0,219,1,101,3,4,11,92,13,85,15,224,27,50,26,27,53,27,16,19,10,
5,0,150,120,120,120,120,120,120,90,150,44,45,70,130,53,0,0,0,0,40,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,250,0,0,17,0,128,0,219,1,57,3,24,11,72,13,85,15,224,27,0,22,22,49,
32,11,14,13,7,0,150,120,120,120,120,120,120,90,105,44,45,70,130,52,0,0,0,0,40,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,250,0,0,20,0,5,0,1,0,228,0,38,2,134,3,140,10,88,12,
166,14,128,28,33,56,36,60,66,44,44,25,19,0,150,120,120,120,120,120,150,120,120,44,45,70,130,54,0,0,
0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,5,0,228,0,239,1,145,3,
220,10,168,12,10,15,96,28,20,51,36,64,48,43,42,25,16,0,150,120,120,120,120,120,150,120,120,44,45,70,
130,54,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,5,0,180,0,
239,1,35,3,44,11,208,12,166,14,96,28,28,39,27,61,38,29,27,20,11,0,150,120,120,120,120,120,105,120,
120,44,45,70,130,54,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,
5,0,180,0,239,1,115,2,44,11,208,12,166,14,96,28,51,25,17,59,33,24,22,13,6,0,150,120,75,120,
120,120,105,30,120,44,45,70,130,53,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,250,0,0,17,0,72,0,149,1,68,3,160,10,52,13,235,15,64,29,0,19,24,48,20,10,10,13,9,0,
150,105,120,120,120,120,105,120,135,44,45,70,130,52,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,250,0,0,0,0,2,0,5,0,85,0,221,1,77,5,116,10,4,13,85,15,115,27,75,28,
21,51,46,25,22,17,9,3,157,141,126,120,120,120,197,120,120,44,45,70,130,55,0,0,0,0,40,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,17,0,64,0,189,1,20,5,84,11,52,13,235,15,
128,27,0,18,16,48,32,17,11,10,7,0,150,135,120,120,120,120,120,60,120,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,0,0,2,0,5,0,168,0,139,2,
30,5,240,10,82,13,135,15,208,27,75,24,21,49,38,22,14,13,6,4,168,130,128,120,120,120,217,150,105,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,17,0,
64,0,189,1,20,5,84,11,52,13,235,15,128,27,0,18,16,48,32,17,11,10,7,0,150,135,120,120,120,120,
120,60,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,
0,0,0,0,2,0,5,0,192,0,249,1,176,4,84,11,228,12,91,14,128,28,75,26,27,44,44,33,26,20,
7,0,150,150,120,120,120,120,150,90,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,250,0,0,17,0,64,0,189,1,20,5,84,11,52,13,235,15,128,27,0,19,16,48,
32,17,11,10,7,0,150,135,120,120,120,120,120,60,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,250,0,0,0,0,3,0,37,0,149,0,24,1,207,8,214,11,112,13,
134,16,42,27,45,43,8,62,52,48,52,24,16,8,182,120,133,133,142,161,187,125,137,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,5,0,204,0,94,1,120,5,
84,11,212,13,185,15,160,28,45,23,30,44,24,21,24,20,14,0,165,105,135,120,120,120,60,120,105,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,17,0,204,0,
94,1,120,5,84,11,212,13,185,15,160,28,0,23,30,44,24,21,24,20,14,0,165,105,135,120,120,120,60,120,
105,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,
0,0,3,0,37,0,168,0,32,2,132,3,216,9,164,11,141,14,32,27,90,54,32,56,64,39,36,18,14,6,
187,125,137,120,120,120,165,135,135,44,45,70,130,57,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,250,0,0,5,0,76,0,104,1,100,5,120,10,132,13,135,15,32,29,45,19,10,48,30,16,
24,12,10,0,150,135,97,120,120,120,90,105,97,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,250,0,0,17,0,76,0,104,1,100,5,120,10,132,13,135,15,32,29,0,19,
10,48,30,16,24,12,10,0,150,135,97,120,120,120,90,105,97,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,0,0,2,0,5,0,120,0,118,1,6,4,70,10,
32,13,147,15,8,27,75,25,11,50,35,19,16,21,9,5,168,130,128,120,120,120,177,125,102,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,17,0,64,0,189,1,
20,5,84,11,52,13,235,15,128,27,0,18,16,48,32,17,11,10,7,0,150,135,120,120,120,120,120,60,120,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,0,0,
3,0,5,0,148,0,24,1,209,8,68,12,112,13,140,15,112,23,20,21,12,40,14,12,16,9,3,6,110,180,
177,225,247,175,110,180,177,44,45,70,130,54,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,250,0,0,5,0,232,0,128,1,132,8,240,10,112,13,80,15,137,23,40,63,15,78,24,18,27,12,
6,6,110,155,177,225,247,175,110,155,177,44,45,70,130,55,0,0,0,0,40,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,250,0,0,1,0,208,0,8,2,228,7,60,10,72,13,40,15,137,23,0,88,21,93,
36,45,48,24,6,6,110,180,202,225,252,175,110,180,202,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,250,0,0,0,0,3,0,5,0,192,0,160,1,48,7,40,10,32,13,
20,15,137,23,25,12,8,30,19,20,22,17,2,2,150,185,192,222,242,195,150,185,192,44,45,70,130,54,0,0,
0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,5,0,240,0,40,2,44,6,
236,9,188,12,156,14,137,23,42,36,39,48,30,33,29,21,6,6,150,155,192,247,242,195,150,155,192,44,45,70,
130,55,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,212,0,
168,2,216,4,236,9,48,12,116,14,143,22,0,65,48,66,54,33,36,24,6,3,202,155,192,180,242,225,202,155,
192,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,
0,0,3,0,5,0,176,0,80,1,56,9,84,11,112,13,100,15,88,27,20,19,15,32,12,20,18,11,2,5,
177,192,197,235,220,175,177,192,197,44,45,70,130,54,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,250,0,0,5,0,237,0,219,1,0,8,136,10,108,13,54,15,47,28,40,35,24,47,36,36,
28,19,7,6,214,159,176,171,165,144,177,192,197,44,45,70,130,55,0,0,0,0,40,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,250,0,0,1,0,31,1,77,2,255,6,225,9,104,13,15,15,224,28,0,44,
31,56,60,55,42,31,10,6,244,132,159,120,120,120,135,180,150,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,0,0,3,0,5,0,116,0,0,1,16,9,144,11,
212,13,180,15,243,22,25,10,3,30,27,15,15,9,0,3,150,142,140,165,210,175,150,142,140,44,45,70,130,54,
0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,5,0,125,0,25,1,
152,8,44,11,16,14,160,15,243,22,40,20,4,46,28,20,23,12,0,4,150,142,138,143,162,175,150,142,140,44,
45,70,130,55,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,
128,0,40,1,132,8,124,11,32,13,40,15,44,26,0,152,12,116,28,44,69,28,12,8,150,190,200,235,185,157,
150,190,200,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,
0,0,0,0,4,0,37,0,0,1,112,1,153,8,154,11,228,12,216,14,88,27,20,25,9,45,14,12,16,12,
2,4,120,187,137,187,150,237,120,187,137,44,45,70,130,54,0,0,0,0,40,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,250,0,0,37,0,232,0,248,1,240,5,176,9,128,12,216,14,88,27,20,35,31,55,
26,16,16,12,2,4,127,140,182,187,222,237,127,140,182,44,45,70,130,53,0,0,0,0,40,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,250,0,0,37,0,216,0,8,2,136,4,176,9,8,12,216,14,88,27,
35,54,30,69,39,21,21,15,3,6,182,140,182,187,222,237,182,140,182,44,45,70,130,55,0,0,0,0,40,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,232,0,64,2,252,3,120,10,68,12,
216,14,88,27,0,88,27,87,55,27,33,21,6,6,182,155,145,187,222,237,182,155,145,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,15,0,4,0,5,0,140,0,
0,1,96,9,64,11,208,12,100,15,88,27,20,30,10,54,25,10,18,7,3,7,77,147,150,150,150,150,77,147,
150,44,45,70,130,54,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,
5,0,140,0,248,0,96,9,64,11,208,12,100,15,88,27,15,19,8,42,11,11,14,5,2,5,77,147,150,150,
150,150,77,147,150,44,45,70,130,55,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,250,0,0,1,0,140,0,0,1,96,9,64,11,208,12,100,15,88,27,30,26,10,50,25,14,18,7,3,7,
77,147,150,150,150,150,77,147,150,44,45,70,130,55,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,250,0,0,1,0,164,0,32,1,52,8,236,9,168,12,172,14,175,25,0,117,0,112,24,24,
44,36,8,12,150,180,137,137,150,175,150,180,137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,250,0,0,110,0,4,0,5,0,132,0,232,0,232,8,220,10,192,13,180,15,
200,25,35,6,6,24,6,21,24,6,6,0,120,105,120,120,120,120,45,135,120,44,45,70,130,54,0,0,0,0,
40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,5,0,132,0,240,0,185,8,224,11,
72,13,80,15,150,25,50,17,3,45,7,26,30,3,7,0,120,105,150,120,120,120,45,135,90,44,45,70,130,53,
0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,5,0,132,0,232,0,
185,8,224,11,72,13,80,15,150,25,25,23,3,53,3,26,30,3,0,0,120,105,150,120,120,120,45,135,90,44,
45,70,130,54,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,5,0,
132,0,232,0,185,8,224,11,72,13,80,15,0,29,0,15,3,43,3,18,24,3,0,0,120,105,150,120,120,120,
45,135,90,44,45,70,130,54,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,
0,0,145,0,4,0,37,0,132,0,240,0,76,9,28,12,212,13,140,15,225,25,60,20,8,48,17,30,17,17,
8,0,120,105,120,120,120,120,45,135,120,44,45,70,130,54,0,0,0,0,40,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,250,0,0,5,0,132,0,240,0,76,9,28,12,212,13,140,15,225,25,60,20,8,48,
17,30,17,17,8,0,120,105,120,120,120,120,45,135,120,44,45,70,130,54,0,0,0,0,40,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,250,0,0,5,0,132,0,240,0,76,9,28,12,212,13,140,15,225,25,
25,9,6,33,12,21,12,12,6,0,120,105,120,120,120,120,45,135,120,44,45,70,130,54,0,0,0,0,40,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,5,0,132,0,240,0,76,9,28,12,212,13,
140,15,225,25,0,10,6,35,12,22,12,12,6,0,120,105,120,120,120,120,45,135,120,44,45,70,130,54,0,0,
0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,95,0,3,0,5,0,104,0,
64,1,64,6,108,7,192,13,180,15,32,29,55,17,6,44,34,13,17,13,8,0,150,135,97,120,120,120,90,105,
97,44,45,70,130,54,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,
9,0,104,0,64,1,64,6,108,7,192,13,180,15,32,29,40,23,8,52,40,16,20,16,10,0,150,135,97,120,
120,120,90,105,97,44,45,70,130,54,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,250,0,0,1,0,104,0,64,1,64,6,108,7,192,13,180,15,32,29,0,23,8,52,40,16,20,16,10,0,
150,135,97,120,120,120,90,105,97,44,45,70,130,54,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,250,0,0,100,0,3,0,5,0,176,0,184,1,32,3,64,11,32,13,120,15,144,26,50,38,
18,54,39,30,27,24,12,7,162,127,150,120,120,120,162,127,165,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,5,0,176,0,184,1,32,3,64,11,32,13,120,15,
144,26,50,38,18,54,39,30,27,24,12,7,162,127,150,120,120,120,162,127,165,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,176,0,184,1,32,3,64,11,
32,13,120,15,144,26,0,33,16,50,36,28,25,22,11,7,162,127,150,120,120,120,162,127,165,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,90,0,4,0,5,0,
176,0,184,1,32,3,64,11,32,13,120,15,144,26,30,24,14,43,31,24,21,19,9,6,162,127,150,120,120,120,
162,127,165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,
0,0,5,0,176,0,184,1,32,3,64,11,32,13,120,15,144,26,40,33,16,50,36,28,25,22,11,7,162,127,
150,120,120,120,162,127,165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,250,0,0,21,0,176,0,184,1,32,3,64,11,32,13,120,15,144,26,20,30,16,50,28,28,25,22,
11,7,162,127,150,120,120,120,162,127,165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,250,0,0,1,0,176,0,184,1,32,3,64,11,32,13,120,15,144,26,0,33,16,50,
36,28,25,22,11,7,162,127,150,120,120,120,162,127,165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,250,0,0,50,0,3,0,5,0,176,0,184,1,32,3,64,11,32,13,
120,15,144,26,30,33,16,50,36,28,25,22,11,7,162,127,150,120,120,120,162,127,165,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,21,0,176,0,184,1,32,3,
64,11,32,13,120,15,144,26,20,30,16,50,28,28,25,22,11,7,162,127,150,120,120,120,162,127,165,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,176,0,
184,1,32,3,64,11,32,13,120,15,144,26,0,29,15,46,33,26,23,20,10,6,162,127,150,120,120,120,162,127,
165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,
77,0,3,0,5,0,96,0,99,1,214,2,156,9,8,12,135,15,192,27,30,25,8,57,20,14,14,10,8,0,
120,135,90,120,120,120,60,105,180,44,45,70,130,53,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,250,0,0,5,0,192,0,179,1,134,3,212,8,204,11,166,14,192,27,47,45,18,78,33,14,
16,10,4,0,120,111,150,120,120,120,60,81,123,44,45,70,130,55,0,0,0,0,40,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,250,0,0,1,0,208,0,43,2,18,5,132,8,28,12,166,14,192,27,0,76,
39,84,98,46,59,40,11,0,120,150,120,120,120,120,60,120,75,44,45,70,130,56,0,0,0,0,40,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,71,0,3,0,5,0,192,0,179,1,92,3,252,8,
184,11,60,15,32,28,26,43,19,81,28,14,11,8,7,0,120,82,90,120,120,120,75,82,90,44,45,70,130,53,
0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,5,0,208,0,199,1,
132,3,16,9,184,11,60,15,32,28,45,62,31,81,61,30,24,15,8,0,120,120,150,120,120,120,75,90,105,44,
45,70,130,55,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,
16,1,223,2,255,3,20,10,184,11,35,15,224,27,0,122,45,69,106,78,82,48,10,0,120,195,120,120,120,120,
195,120,120,44,45,70,130,55,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,
0,0,70,0,3,0,5,0,100,0,154,1,12,3,96,9,224,11,166,14,128,27,35,41,8,77,28,15,16,12,
7,0,120,120,105,120,120,120,120,75,105,44,45,70,130,53,0,0,0,0,40,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,250,0,0,5,0,228,0,38,2,20,5,192,8,48,12,166,14,128,27,35,65,35,77,
80,45,38,29,8,0,120,120,180,120,120,120,120,120,105,44,45,70,130,55,0,0,0,0,40,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,228,0,78,2,249,5,252,8,128,12,66,14,128,27,
0,91,44,83,109,55,49,34,10,0,120,120,180,120,120,120,120,120,90,44,45,70,130,56,0,0,0,0,40,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,76,0,3,0,37,0,40,0,112,1,68,3,
36,9,28,12,216,14,32,28,40,45,19,77,28,16,16,12,8,0,120,105,120,120,120,120,120,105,120,44,45,70,
130,53,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,37,0,120,0,
112,1,153,4,76,9,148,12,166,14,192,27,36,43,20,76,24,24,26,17,13,0,120,90,120,120,120,120,120,90,
105,44,45,70,130,55,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,
1,0,40,0,79,1,221,7,96,9,208,12,116,14,192,27,0,89,9,86,74,89,97,58,13,0,120,120,120,120,
120,120,120,120,120,44,45,70,130,56,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,250,0,0,73,0,3,0,5,0,112,0,84,1,49,2,236,9,64,11,91,14,160,27,33,29,13,60,24,12,
12,6,5,0,120,135,60,120,120,120,75,90,90,44,45,70,130,53,0,0,0,0,40,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,250,0,0,5,0,136,0,136,1,180,2,0,10,64,11,91,14,160,27,40,35,
24,64,44,25,23,8,11,0,120,105,75,120,120,120,75,105,105,44,45,70,130,55,0,0,0,0,40,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,144,0,184,1,181,2,20,10,64,11,91,14,
32,28,0,93,35,114,65,46,46,17,21,0,120,75,60,120,120,120,75,90,90,44,45,70,130,56,0,0,0,0,
40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,70,0,3,0,5,0,128,0,84,1,
108,2,66,9,164,11,116,14,144,27,33,39,19,69,26,12,12,9,4,0,120,120,90,120,120,120,75,90,90,44,
45,70,130,53,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,5,0,
144,0,120,1,192,3,252,8,28,12,141,14,128,27,37,43,20,77,42,21,23,17,10,0,120,96,129,120,120,120,
75,84,126,44,45,70,130,55,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,
0,0,1,0,144,0,164,1,128,5,152,8,88,12,141,14,128,27,0,119,37,140,62,45,54,39,20,0,120,90,
120,120,120,120,75,60,165,44,45,70,130,56,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,250,0,0,30,0,2,0,1,0,84,0,34,1,217,1,0,10,224,11,10,15,128,27,30,20,4,50,
40,10,9,8,6,0,120,120,60,120,120,120,120,45,75,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,84,0,34,1,217,1,0,10,224,11,10,15,128,27,
0,20,4,50,40,10,9,8,6,0,120,120,60,120,120,120,120,45,75,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,30,0,2,0,5,0,64,0,19,1,206,1,
56,9,28,12,220,15,192,27,30,17,2,43,27,13,8,4,3,0,120,135,90,120,120,120,60,60,120,44,45,70,
130,51,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,84,0,
34,1,217,1,56,9,68,12,100,15,128,27,0,19,4,50,36,16,9,8,6,0,120,120,60,120,120,120,120,45,
75,44,45,70,130,52,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,
55,0,3,0,5,0,64,0,19,1,204,1,56,9,28,12,220,15,192,27,25,11,2,36,21,12,7,3,3,0,
120,135,90,120,120,120,60,60,120,44,45,70,130,50,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,250,0,0,5,0,64,0,19,1,204,1,56,9,28,12,220,15,192,27,30,17,2,45,22,15,
9,4,3,0,120,135,90,120,120,120,60,60,120,44,45,70,130,52,0,0,0,0,40,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,250,0,0,1,0,64,0,19,1,224,1,56,9,28,12,220,15,192,27,0,20,
3,48,28,16,10,5,4,0,120,135,90,120,120,120,60,60,120,44,45,70,130,52,0,0,0,0,40,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,125,0,4,0,37,0,214,0,176,1,161,3,232,8,
88,12,178,14,96,27,45,21,22,44,26,13,19,12,9,5,202,90,150,120,120,120,145,120,135,44,45,70,130,56,
0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,5,0,172,0,112,1,
132,3,192,8,168,12,60,15,96,27,40,18,17,37,28,11,8,8,7,5,200,90,120,120,120,120,200,120,135,44,
45,70,130,56,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,
172,0,112,1,132,3,192,8,168,12,60,15,96,27,40,18,17,37,28,11,8,8,7,5,200,90,120,120,120,120,
200,120,135,44,45,70,130,56,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,
0,0,1,0,172,0,96,1,92,3,192,8,168,12,60,15,96,27,0,13,15,30,23,10,7,7,6,5,200,90,
120,120,120,120,200,120,135,44,45,70,130,55,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,250,0,0,90,0,3,0,37,0,214,0,176,1,161,3,232,8,88,12,178,14,96,27,40,33,26,52,
43,15,22,14,11,7,202,90,150,120,120,120,145,120,135,44,45,70,130,56,0,0,0,0,40,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,250,0,0,21,0,172,0,112,1,132,3,192,8,168,12,60,15,96,27,
50,25,17,45,35,14,10,10,8,7,200,90,120,120,120,120,200,120,135,44,45,70,130,56,0,0,0,0,40,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,172,0,96,1,92,3,192,8,168,12,
60,15,96,27,0,17,15,36,27,12,9,9,7,6,200,90,120,120,120,120,200,120,135,44,45,70,130,55,0,0,
0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,121,0,4,0,5,0,76,0,
255,0,141,8,180,10,32,13,85,15,160,28,21,21,10,48,36,37,48,23,13,0,120,90,105,120,120,120,60,105,
120,44,45,70,130,52,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,
5,0,76,0,255,0,141,8,140,10,248,12,185,15,160,28,40,25,13,52,38,42,54,31,11,0,120,90,105,120,
120,120,60,75,120,44,45,70,130,52,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,250,0,0,5,0,220,0,144,1,89,7,76,9,188,12,141,14,160,28,60,50,36,78,45,57,48,32,8,0,
120,75,120,120,120,120,60,120,135,44,45,70,130,55,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,250,0,0,1,0,220,0,8,2,249,5,172,8,48,12,41,14,160,28,0,76,43,73,97,69,
65,41,13,0,120,120,120,120,120,120,75,120,165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,250,0,0,103,0,4,0,5,0,180,0,29,1,185,8,200,10,32,13,116,14,
0,29,31,20,3,46,21,33,43,24,6,0,120,105,150,120,120,120,45,135,90,44,45,70,130,52,0,0,0,0,
40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,5,0,180,0,149,1,177,7,216,9,
128,12,116,14,0,28,31,28,26,55,37,47,46,28,6,0,120,120,120,120,120,120,45,105,120,44,45,70,130,52,
0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,5,0,196,0,229,1,
136,6,36,9,28,12,116,14,0,28,41,40,33,55,70,54,51,31,7,0,120,120,150,120,120,120,75,105,120,44,
45,70,130,55,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,
228,0,37,3,252,4,232,8,184,11,16,14,224,27,0,82,42,73,109,66,59,44,10,0,120,150,120,120,120,120,
120,90,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,
0,0,115,0,4,0,5,0,116,0,225,0,229,8,64,11,32,13,160,15,192,28,45,20,3,43,33,38,46,30,
7,0,120,105,135,120,120,120,45,150,105,44,45,70,130,52,0,0,0,0,40,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,250,0,0,5,0,132,0,9,1,207,8,160,10,208,12,4,16,192,28,40,24,5,45,
42,48,51,23,5,0,120,105,135,120,120,120,45,150,120,44,45,70,130,52,0,0,0,0,40,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,250,0,0,5,0,164,0,179,1,166,7,176,9,248,12,160,15,192,28,
30,49,33,77,47,57,47,23,4,0,120,117,159,120,120,120,63,90,120,44,45,70,130,55,0,0,0,0,40,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,212,0,53,2,224,6,96,9,168,12,
66,14,192,28,0,82,46,69,100,83,74,46,8,0,120,135,195,120,120,120,90,120,120,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,95,0,3,0,5,0,84,0,
255,0,39,9,164,11,92,13,135,15,224,28,30,18,6,43,28,36,41,26,9,0,120,90,120,120,120,120,75,120,
120,44,45,70,130,51,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,
5,0,84,0,250,0,39,9,164,11,92,13,135,15,64,28,65,20,5,44,34,41,46,23,9,0,120,90,120,120,
120,120,75,105,120,44,45,70,130,53,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,250,0,0,1,0,84,0,59,1,174,8,160,10,208,12,235,15,64,28,0,65,15,83,68,74,78,41,12,0,
120,90,120,120,120,120,75,105,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,250,0,0,125,0,5,0,5,0,136,0,240,0,172,8,224,11,52,13,191,14,32,28,30,22,
9,46,23,27,40,28,13,0,120,120,135,120,120,120,60,90,90,44,45,70,130,52,0,0,0,0,40,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,5,0,136,0,4,1,112,8,80,10,52,13,166,14,
32,28,25,31,9,57,31,27,42,39,12,0,120,120,135,120,120,120,60,90,90,44,45,70,130,52,0,0,0,0,
40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,5,0,136,0,44,1,133,7,96,9,
148,12,41,14,32,28,30,45,16,72,57,48,37,29,15,0,120,120,105,120,120,120,60,90,90,44,45,70,130,54,
0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,5,0,136,0,164,1,
150,5,96,9,48,12,41,14,32,28,40,49,26,80,58,44,38,28,18,0,120,120,90,120,120,120,60,75,135,44,
45,70,130,56,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,
152,0,184,1,178,3,116,9,184,11,41,14,96,27,0,127,48,110,106,80,62,41,26,0,120,120,120,120,120,120,
75,120,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,
0,0,60,0,3,0,5,0,88,0,24,1,6,9,140,10,32,13,191,14,224,28,30,18,9,41,37,34,45,21,
6,0,135,120,135,120,120,120,30,105,75,44,45,70,130,51,0,0,0,0,40,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,250,0,0,5,0,88,0,84,1,188,7,36,9,168,12,191,14,224,28,60,20,5,45,
20,48,40,25,5,0,135,135,135,120,120,120,30,90,75,44,45,70,130,53,0,0,0,0,40,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,168,0,144,1,56,7,212,8,168,12,191,14,224,28,
0,85,34,108,57,76,60,37,9,0,120,105,120,120,120,120,30,75,120,44,45,70,130,56,0,0,0,0,40,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,30,0,2,0,1,0,180,0,29,1,185,8,
200,10,32,13,116,14,0,29,30,19,3,45,21,33,42,24,6,0,120,105,150,120,120,120,45,135,90,44,45,70,
130,58,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,180,0,
29,1,185,8,200,10,32,13,116,14,0,29,0,19,3,45,21,33,42,24,6,0,120,105,150,120,120,120,45,135,
90,44,45,70,130,58,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,
25,0,2,0,5,0,180,0,29,1,185,8,200,10,32,13,116,14,0,29,25,14,3,39,18,28,36,20,6,0,
120,105,150,120,120,120,45,135,90,44,45,70,130,51,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,250,0,0,1,0,180,0,29,1,185,8,200,10,32,13,116,14,0,29,0,25,4,52,24,38,
48,27,8,0,120,105,150,120,120,120,45,135,90,44,45,70,130,52,0,0,0,0,40,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,250,0,0,70,0,3,0,5,0,156,0,99,1,174,8,160,10,92,13,10,15,
32,28,35,21,25,39,40,37,30,20,7,6,167,90,135,120,120,120,122,120,120,44,45,70,130,57,0,0,0,0,
40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,5,0,156,0,72,1,174,8,160,10,
92,13,10,15,32,28,35,17,22,34,35,32,26,17,6,5,167,90,135,120,120,120,122,120,120,44,45,70,130,56,
0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,156,0,72,1,
192,8,160,10,92,13,10,15,32,28,0,17,21,37,23,20,20,14,6,5,167,90,135,120,120,120,122,120,120,44,
45,70,130,55,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,0,0,
3,0,5,0,148,0,24,1,209,8,184,11,112,13,140,15,112,23,20,21,12,40,14,12,16,9,3,6,110,180,
177,225,247,175,110,180,177,44,45,70,130,53,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,250,0,0,5,0,232,0,128,1,132,8,240,10,112,13,80,15,137,23,40,63,15,78,24,18,27,12,
6,6,110,155,177,225,247,175,110,155,177,44,45,70,130,55,0,0,0,0,40,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,250,0,0,1,0,208,0,8,2,228,7,60,10,72,13,40,15,137,23,0,88,21,93,
36,45,48,24,6,6,110,180,202,225,252,175,110,180,202,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,250,0,0,0,0,3,0,5,0,192,0,160,1,48,7,40,10,32,13,
20,15,137,23,25,12,8,30,19,20,22,17,2,2,150,185,192,222,242,195,150,185,192,44,45,70,130,53,0,0,
0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,5,0,240,0,40,2,44,6,
236,9,188,12,156,14,137,23,42,36,39,48,30,33,29,21,6,6,150,155,192,247,242,195,150,155,192,44,45,70,
130,55,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,212,0,
168,2,216,4,236,9,48,12,116,14,143,22,0,65,48,66,54,33,36,24,6,3,202,155,192,180,242,225,202,155,
192,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,
0,0,3,0,5,0,176,0,80,1,212,8,84,11,112,13,100,15,88,27,20,19,15,32,12,20,18,11,2,5,
177,192,197,235,220,175,177,192,197,44,45,70,130,53,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,250,0,0,5,0,237,0,219,1,0,8,136,10,108,13,54,15,47,28,40,35,24,47,36,36,
28,19,7,6,214,159,176,171,165,144,177,192,197,44,45,70,130,55,0,0,0,0,40,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,250,0,0,1,0,31,1,77,2,255,6,225,9,104,13,15,15,224,28,0,44,
31,56,60,55,42,31,10,6,244,132,159,120,120,120,135,180,150,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,0,0,3,0,5,0,116,0,24,1,152,8,44,11,
112,13,120,15,243,22,20,8,3,30,15,15,15,9,0,3,150,142,140,165,210,175,150,142,140,44,45,70,130,53,
0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,5,0,128,0,32,1,
52,8,4,11,28,14,160,15,243,22,40,21,4,48,16,20,24,12,0,4,150,142,137,137,150,175,150,142,137,44,
45,70,130,54,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,
128,0,40,1,132,8,124,11,32,13,40,15,44,26,0,152,12,116,28,44,69,28,12,8,150,190,200,235,185,157,
150,190,200,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,
0,0,0,0,4,0,37,0,0,1,112,1,153,8,154,11,228,12,216,14,88,27,20,25,9,45,14,12,16,12,
2,4,120,187,137,187,150,237,120,187,137,44,45,70,130,53,0,0,0,0,40,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,250,0,0,37,0,232,0,248,1,240,5,176,9,128,12,216,14,88,27,20,35,31,55,
26,16,16,12,2,4,127,140,182,187,222,237,127,140,182,44,45,70,130,53,0,0,0,0,40,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,250,0,0,37,0,216,0,8,2,136,4,176,9,8,12,216,14,88,27,
35,54,30,69,39,21,21,15,3,6,182,140,182,187,222,237,182,140,182,44,45,70,130,55,0,0,0,0,40,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,232,0,64,2,252,3,120,10,68,12,
216,14,88,27,0,88,27,87,55,27,33,21,6,6,182,155,145,187,222,237,182,155,145,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,0,0,3,0,5,0,156,0,
8,1,132,8,120,10,12,13,100,15,62,23,20,30,3,54,17,17,25,9,3,6,150,180,195,170,237,175,150,180,
195,44,45,70,130,53,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,
5,0,184,0,104,1,156,9,64,11,208,12,100,15,62,23,40,61,52,56,24,20,28,16,4,12,77,180,195,170,
237,175,77,180,195,44,45,70,130,55,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,250,0,0,1,0,164,0,32,1,52,8,236,9,168,12,172,14,175,25,0,117,0,112,24,24,44,36,8,12,
150,180,137,137,150,175,150,180,137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,250,0,0,20,0,2,0,1,0,184,0,104,1,243,7,80,10,32,13,216,14,32,27,20,26,
17,56,27,36,40,23,8,0,120,105,135,120,120,120,66,96,105,44,45,70,130,53,0,0,0,0,40,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,184,0,104,1,243,7,80,10,32,13,216,14,
32,27,0,26,17,56,27,36,40,23,8,0,120,105,135,120,120,120,66,96,105,44,45,70,130,53,0,0,0,0,
40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,0,0,2,0,5,0,148,0,8,1,
232,8,68,12,112,13,140,15,186,19,15,18,12,36,14,12,16,9,3,3,110,180,177,225,247,175,110,180,177,44,
45,70,130,50,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,
148,0,24,1,209,8,68,12,112,13,140,15,186,19,0,21,12,40,14,12,16,9,3,3,110,180,177,225,247,175,
110,180,177,44,45,70,130,52,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,
0,0,95,0,4,0,5,0,236,0,216,1,76,4,82,8,172,13,160,15,0,27,45,17,54,38,23,14,12,14,
8,0,120,60,90,120,120,120,30,135,105,44,20,100,100,52,225,0,0,0,65,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,250,0,0,5,0,236,0,216,1,76,4,82,8,172,13,160,15,0,27,50,17,54,38,
23,14,12,14,8,0,120,60,90,120,120,120,30,135,105,44,20,100,100,52,225,0,0,0,65,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,250,0,0,17,0,236,0,216,1,76,4,82,8,172,13,160,15,0,27,
0,17,54,38,23,14,12,14,8,0,120,60,90,120,120,120,30,135,105,44,20,100,100,47,225,0,0,0,65,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,236,0,216,1,76,4,82,8,172,13,
160,15,0,27,0,17,54,38,23,14,12,14,8,0,120,60,90,120,120,120,30,135,105,44,20,100,100,48,225,0,
0,0,65,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,80,0,4,0,5,0,236,0,
216,1,76,4,82,8,172,13,160,15,0,27,45,17,54,38,23,14,12,14,8,0,120,60,90,120,120,120,30,135,
105,44,20,100,100,53,225,0,0,0,60,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,
5,0,236,0,216,1,76,4,82,8,172,13,160,15,0,27,35,17,54,38,23,14,12,14,8,0,120,60,90,120,
120,120,30,135,105,44,20,100,100,53,225,0,0,0,60,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,250,0,0,17,0,236,0,216,1,76,4,82,8,172,13,160,15,0,27,0,17,54,38,23,14,12,14,8,0,
120,60,90,120,120,120,30,135,105,44,20,100,100,53,225,0,0,0,60,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,250,0,0,1,0,236,0,216,1,76,4,82,8,172,13,160,15,0,27,0,17,54,38,23,14,
12,14,8,0,120,60,90,120,120,120,30,135,105,44,20,100,100,53,225,0,0,0,60,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,250,0,0,110,0,4,0,5,0,196,0,114,1,84,4,252,8,88,12,91,14,
32,27,70,18,46,20,38,12,16,16,6,0,125,60,135,120,120,120,80,75,120,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,5,0,196,0,114,1,84,4,252,8,
88,12,91,14,32,27,0,18,46,20,38,12,16,16,6,0,125,60,135,120,120,120,80,75,120,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,244,0,18,2,
208,4,76,9,168,12,91,14,32,27,40,50,46,58,81,45,46,28,8,0,120,75,135,120,120,120,90,105,120,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,
244,0,98,2,172,5,116,9,188,12,141,14,32,27,0,82,48,65,110,71,69,39,13,0,120,135,135,120,120,120,
120,75,90,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,
0,0,110,0,4,0,5,0,196,0,114,1,84,4,252,8,88,12,91,14,32,27,70,18,46,20,38,12,16,16,
6,0,125,60,135,120,120,120,80,75,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,250,0,0,5,0,196,0,114,1,84,4,252,8,88,12,91,14,32,27,0,19,47,20,
38,12,16,16,6,0,125,60,135,120,120,120,80,75,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,252,0,27,3,21,4,120,10,68,12,116,14,192,28,
40,56,51,56,84,43,41,23,13,0,120,120,105,120,120,120,165,60,90,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,12,1,27,3,21,4,24,11,148,12,
216,14,64,29,0,96,55,76,108,65,68,37,17,0,120,120,105,120,120,120,150,60,105,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,110,0,4,0,5,0,196,0,
114,1,84,4,252,8,88,12,91,14,32,27,70,18,46,20,38,12,16,16,6,0,125,60,135,120,120,120,80,75,
120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,
5,0,196,0,114,1,84,4,252,8,88,12,91,14,32,27,0,19,47,20,38,12,16,16,6,0,125,60,135,120,
120,120,80,75,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,250,0,0,1,0,20,1,18,2,205,5,136,9,248,12,191,14,0,28,40,51,49,64,81,61,52,35,12,0,
135,60,120,120,120,120,75,90,105,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,250,0,0,1,0,4,1,98,2,180,6,236,9,72,13,85,15,128,27,0,86,50,69,101,95,
76,39,20,0,120,120,150,120,120,120,120,120,105,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,250,0,0,108,0,5,0,5,0,196,0,114,1,84,4,252,8,88,12,91,14,
32,27,70,18,46,20,38,12,16,16,6,0,125,60,135,120,120,120,80,75,120,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,5,0,196,0,114,1,84,4,252,8,
88,12,91,14,32,27,0,19,47,20,38,12,16,16,6,0,125,60,135,120,120,120,80,75,120,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,216,0,184,1,
169,6,96,9,128,12,66,14,192,27,9,30,38,54,49,44,42,26,10,0,120,105,120,120,120,120,30,105,150,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,
212,0,179,1,155,7,96,9,228,12,216,14,160,27,29,42,42,61,58,67,51,31,11,0,120,105,180,120,120,120,
24,96,99,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,
0,0,1,0,200,0,164,1,141,8,0,10,32,13,110,15,64,27,0,95,63,93,97,97,76,45,16,0,120,105,
120,120,120,120,15,75,75,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,250,0,0,105,0,4,0,5,0,196,0,114,1,84,4,252,8,88,12,91,14,32,27,70,18,46,20,
39,12,16,16,6,0,125,60,135,120,120,120,80,75,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,250,0,0,5,0,196,0,114,1,84,4,252,8,88,12,91,14,32,27,
0,19,47,20,38,12,16,16,6,0,125,60,135,120,120,120,80,75,120,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,5,0,105,0,205,0,208,2,252,8,88,12,
76,14,32,27,35,34,36,32,40,20,20,16,9,0,117,117,153,135,135,120,117,117,153,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,168,0,209,1,68,3,
100,10,104,11,141,14,32,27,0,160,47,105,110,63,58,28,23,0,120,120,135,120,120,120,120,120,120,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,105,0,4,0,
5,0,196,0,114,1,84,4,252,8,88,12,91,14,32,27,70,18,46,20,39,12,16,16,6,0,125,60,135,120,
120,120,80,75,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,250,0,0,5,0,196,0,114,1,84,4,252,8,88,12,91,14,32,27,0,19,47,20,38,12,16,16,6,0,
125,60,135,120,120,120,80,75,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,250,0,0,5,0,105,0,205,0,208,2,252,8,88,12,76,14,32,27,35,34,36,32,40,20,
20,16,9,0,117,117,153,135,135,120,117,117,153,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,250,0,0,1,0,168,0,209,1,68,3,100,10,104,11,141,14,32,27,0,158,
47,105,110,63,58,28,23,0,120,120,135,120,120,120,120,120,120,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,70,0,3,0,5,0,196,0,114,1,84,4,252,8,
88,12,91,14,32,27,70,22,51,28,30,12,16,16,6,0,125,60,135,120,120,120,80,75,120,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,5,0,196,0,114,1,
84,4,252,8,88,12,91,14,32,27,0,22,51,28,30,12,16,16,6,0,125,60,135,120,120,120,80,75,120,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,
184,0,164,1,153,4,132,8,128,12,254,16,64,27,0,6,28,12,16,8,6,4,3,0,120,105,120,120,120,120,
75,180,150,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,
0,0,20,0,2,0,5,0,196,0,114,1,84,4,252,8,88,12,91,14,32,27,20,12,38,22,25,9,12,12,
5,0,120,60,135,120,120,120,75,75,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,250,0,0,1,0,196,0,114,1,84,4,252,8,88,12,91,14,32,27,0,19,48,28,
32,12,16,16,6,0,120,60,135,120,120,120,75,75,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,250,0,0,115,0,3,0,5,0,196,0,114,1,56,4,252,8,88,12,
91,14,32,27,65,18,46,20,36,12,16,16,6,0,125,60,135,120,120,120,80,75,120,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,5,0,196,0,114,1,56,4,
252,8,88,12,91,14,32,27,50,18,48,20,28,12,16,16,6,0,125,60,135,120,120,120,80,75,120,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,196,0,
114,1,36,4,252,8,88,12,91,14,32,27,0,12,40,17,17,6,13,13,5,0,125,60,135,120,120,120,80,75,
120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,
80,0,4,0,5,0,236,0,224,1,220,5,236,9,172,13,160,15,0,27,45,17,54,38,23,14,12,14,8,0,
120,60,90,120,120,120,30,135,105,44,20,150,150,53,225,0,0,0,60,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,250,0,0,5,0,236,0,224,1,220,5,236,9,172,13,160,15,0,27,35,17,54,38,23,14,
12,14,8,0,120,60,90,120,120,120,30,135,105,44,20,150,150,53,225,0,0,0,60,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,250,0,0,1,0,236,0,224,1,220,5,236,9,172,13,160,15,0,27,0,17,
54,38,23,14,12,14,8,0,120,60,90,120,120,120,30,135,105,44,20,150,150,53,225,0,0,0,60,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,236,0,224,1,220,5,236,9,172,13,160,15,
0,27,0,17,54,38,23,14,12,14,8,0,120,60,90,120,120,120,30,135,105,44,20,150,150,53,225,0,0,0,
60,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,94,0,4,0,5,0,236,0,124,1,
114,6,236,9,172,13,160,15,0,27,50,16,48,38,23,14,12,14,8,0,120,60,90,120,120,120,30,135,105,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,
236,0,144,1,114,6,236,9,172,13,160,15,0,27,0,17,52,36,25,18,16,18,11,0,120,60,90,120,120,120,
30,135,105,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,
0,0,1,0,32,1,18,2,4,6,196,9,92,13,135,15,160,27,45,25,37,46,47,47,48,28,7,0,120,75,
135,120,120,120,60,75,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,250,0,0,1,0,240,0,73,2,15,6,176,9,208,12,16,14,160,27,0,99,58,71,121,73,58,41,
11,0,120,120,150,120,120,120,120,90,105,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,250,0,0,115,0,4,0,5,0,236,0,124,1,114,6,236,9,172,13,160,15,0,27,
45,19,54,38,23,14,12,14,8,0,120,60,90,120,120,120,30,135,105,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,5,0,236,0,124,1,114,6,236,9,172,13,
160,15,0,27,20,18,52,38,23,18,16,18,10,0,120,60,90,120,120,120,30,135,105,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,4,1,57,3,216,5,
20,10,172,13,241,14,64,25,50,26,33,43,58,43,44,27,5,0,120,90,135,120,120,120,75,90,90,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,228,0,
137,3,252,4,236,9,188,12,41,14,64,27,0,92,46,74,100,77,70,57,12,0,120,165,135,120,120,120,120,90,
165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,
115,0,4,0,5,0,236,0,124,1,114,6,236,9,172,13,160,15,0,27,50,16,48,38,23,14,12,14,8,0,
120,60,90,120,120,120,30,135,105,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,250,0,0,5,0,176,0,154,1,164,6,20,10,192,13,185,15,224,27,20,18,48,35,19,17,
13,13,7,0,120,30,120,120,120,120,60,120,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,250,0,0,1,0,32,1,78,2,169,6,20,10,192,13,185,15,224,27,45,26,
43,42,55,45,42,29,5,0,120,75,120,120,120,120,90,75,120,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,240,0,58,2,125,6,20,10,92,13,48,17,
224,27,0,73,48,61,95,89,78,33,7,0,120,120,120,120,120,120,90,90,120,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,109,0,4,0,5,0,236,0,124,1,
114,6,236,9,172,13,160,15,0,27,45,17,53,33,23,14,12,14,8,0,120,60,90,120,120,120,30,135,105,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,5,0,
236,0,144,1,214,6,236,9,172,13,160,15,0,27,15,15,52,31,25,18,16,18,11,0,120,60,90,120,120,120,
30,135,105,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,
0,0,1,0,236,0,164,1,122,7,80,10,172,13,235,15,128,27,49,23,43,38,48,50,43,29,9,0,120,75,
90,120,120,120,30,105,165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,250,0,0,1,0,204,0,144,1,97,8,20,10,92,13,135,15,128,27,0,81,57,73,72,90,90,58,
13,0,120,105,150,120,120,120,45,105,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,250,0,0,108,0,4,0,5,0,236,0,124,1,114,6,236,9,172,13,160,15,0,27,
45,19,54,38,23,14,12,14,8,0,120,60,90,120,120,120,30,135,105,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,5,0,220,0,164,1,249,5,196,9,108,12,
141,14,128,24,20,18,52,28,18,19,10,10,8,0,120,45,120,120,120,120,75,105,135,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,252,0,224,1,18,5,
196,9,228,12,41,14,128,25,43,38,54,58,54,38,37,25,12,0,120,60,120,120,120,120,90,105,135,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,12,1,
224,1,178,3,236,9,8,12,222,13,128,25,0,117,65,90,99,67,78,52,17,0,120,75,150,120,120,120,90,120,
105,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,
107,0,4,0,5,0,236,0,124,1,114,6,236,9,172,13,160,15,0,27,45,19,54,38,23,14,12,14,8,0,
120,60,90,120,120,120,30,135,105,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,250,0,0,5,0,236,0,164,1,12,7,236,9,172,13,160,15,0,27,21,17,52,39,23,16,
12,14,8,0,120,60,90,120,120,120,30,150,105,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,250,0,0,1,0,8,1,224,1,169,6,156,9,152,13,166,14,32,27,41,26,
39,45,42,41,51,30,8,0,120,75,120,120,120,120,60,90,120,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,228,0,224,1,125,6,76,9,148,12,66,14,
32,27,0,102,68,83,83,94,100,68,14,0,120,90,120,120,120,120,90,90,120,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,60,0,3,0,5,0,236,0,124,1,
12,7,236,9,172,13,160,15,0,27,60,16,49,35,21,13,11,13,7,0,120,60,90,120,120,120,30,135,105,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,
236,0,124,1,12,7,236,9,172,13,160,15,0,27,0,22,58,41,25,16,13,16,8,0,120,60,90,120,120,120,
30,135,105,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,
0,0,1,0,236,0,124,1,12,7,236,9,172,13,160,15,0,27,0,22,58,41,25,16,13,16,8,0,120,60,
90,120,120,120,30,135,105,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,250,0,0,20,0,2,0,5,0,236,0,124,1,114,6,236,9,172,13,160,15,0,27,20,19,54,38,
23,14,12,14,8,0,120,60,90,120,120,120,30,135,105,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,236,0,124,1,114,6,236,9,172,13,160,15,0,27,
0,19,54,38,23,14,12,14,8,0,120,60,90,120,120,120,30,135,105,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,100,0,3,0,5,0,236,0,124,1,8,7,
236,9,172,13,160,15,0,27,60,23,53,41,24,20,16,13,8,0,132,60,90,120,120,120,42,135,105,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,5,0,236,0,
124,1,8,7,236,9,172,13,160,15,0,27,40,23,53,41,24,20,16,13,8,0,132,60,90,120,120,120,42,135,
105,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,
1,0,236,0,124,1,244,6,236,9,172,13,160,15,0,27,0,14,42,32,20,16,12,9,6,0,132,60,90,120,
120,120,42,135,105,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,250,0,0,75,0,4,0,5,0,236,0,224,1,104,6,136,9,144,11,180,15,0,27,45,17,54,38,23,14,
12,14,8,0,120,60,90,120,120,120,30,135,105,44,20,150,150,55,225,0,0,0,65,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,250,0,0,5,0,236,0,224,1,104,6,136,9,144,11,180,15,0,27,30,17,
54,38,23,14,12,14,8,0,120,60,90,120,120,120,30,135,105,44,20,150,150,55,225,0,0,0,65,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,236,0,224,1,104,6,136,9,144,11,180,15,
0,27,0,17,54,38,23,14,12,14,8,0,120,60,90,120,120,120,30,135,105,44,20,150,150,55,225,0,0,0,
65,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,236,0,224,1,104,6,136,9,
144,11,180,15,0,27,0,17,54,38,23,14,12,14,8,0,120,60,90,120,120,120,30,135,105,44,20,150,150,55,
225,0,0,0,65,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,110,0,4,0,5,0,
236,0,124,1,214,6,112,8,168,12,160,15,0,27,65,19,54,40,23,14,12,16,8,0,120,60,90,120,120,120,
30,135,105,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,
0,0,1,0,236,0,120,1,214,6,152,8,168,12,160,15,0,27,0,19,54,40,23,14,12,16,8,0,120,60,
90,120,120,120,30,135,105,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,250,0,0,1,0,176,0,196,1,24,6,36,9,168,12,10,15,48,27,45,28,40,51,51,29,29,25,
13,3,143,105,112,120,120,120,30,135,105,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,250,0,0,1,0,116,0,13,2,161,5,36,9,188,12,116,14,96,27,0,86,41,79,
96,54,56,43,23,8,167,150,135,120,120,120,197,120,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,250,0,0,130,0,4,0,5,0,236,0,124,1,214,6,112,8,228,12,
160,15,0,27,60,19,54,40,23,14,12,16,8,0,120,60,90,120,120,120,30,135,105,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,5,0,236,0,124,1,214,6,
176,9,228,12,160,15,0,27,20,19,54,40,23,14,12,16,8,0,120,60,90,120,120,120,30,135,105,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,6,1,
130,2,255,5,30,10,72,13,48,15,144,27,50,28,38,56,43,30,23,17,8,2,168,107,97,120,120,120,30,135,
105,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,
1,0,32,1,136,3,40,5,140,10,112,13,191,14,32,28,0,88,41,90,74,54,40,25,12,6,217,155,105,120,
120,120,247,170,165,44,65,75,130,54,0,0,0,0,50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,250,0,0,115,0,4,0,5,0,236,0,124,1,214,6,112,8,228,12,160,15,0,27,50,19,54,40,23,14,
12,16,8,0,120,60,90,120,120,120,30,135,105,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,250,0,0,5,0,236,0,124,1,214,6,36,9,228,12,160,15,0,27,20,19,
54,40,23,14,12,16,8,0,120,60,90,120,120,120,30,135,105,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,22,1,226,1,249,6,0,10,228,12,88,15,
240,27,45,28,41,50,45,38,30,25,9,3,182,96,124,120,120,120,30,135,105,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,64,1,72,2,28,7,0,10,
104,13,15,15,224,28,0,94,44,81,86,79,61,45,15,9,244,132,159,120,120,120,135,180,150,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,109,0,4,0,5,0,
236,0,124,1,214,6,112,8,228,12,160,15,0,27,45,19,54,40,23,14,12,16,8,0,120,60,90,120,120,120,
30,135,105,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,
0,0,5,0,236,0,124,1,214,6,36,9,228,12,160,15,0,27,15,19,54,40,23,14,12,16,8,0,120,60,
90,120,120,120,30,135,105,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,250,0,0,1,0,192,0,126,1,148,7,0,10,228,12,105,15,48,26,49,28,36,57,39,33,30,23,
10,3,140,76,105,131,120,120,30,135,105,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,250,0,0,1,0,148,0,128,1,238,7,50,10,42,13,50,15,96,25,0,112,42,110,
80,73,69,44,18,8,160,92,120,143,120,120,130,95,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,250,0,0,113,0,4,0,5,0,236,0,124,1,214,6,112,8,128,12,
160,15,0,27,50,19,54,40,23,14,12,16,8,0,120,60,90,120,120,120,30,135,105,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,5,0,236,0,124,1,214,6,
36,9,128,12,160,15,0,27,20,19,54,40,23,14,12,16,8,0,120,60,90,120,120,120,30,135,105,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,214,0,
210,1,25,5,216,9,118,12,0,15,79,27,43,28,38,54,50,28,26,19,11,3,146,101,112,120,120,120,30,135,
105,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,
1,0,192,0,40,2,92,3,100,10,164,11,96,14,159,27,0,150,38,92,100,55,53,31,20,8,172,142,135,120,
120,120,167,135,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,250,0,0,107,0,4,0,5,0,236,0,124,1,214,6,112,8,228,12,160,15,0,27,45,19,54,40,23,14,
12,16,8,0,120,60,90,120,120,120,30,135,105,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,250,0,0,5,0,236,0,124,1,214,6,112,8,228,12,160,15,0,27,21,19,
54,40,23,14,12,16,8,0,120,60,90,120,120,120,30,135,105,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,206,0,94,1,25,5,212,8,228,12,110,15,
200,26,41,28,28,57,36,19,18,26,11,4,148,92,96,120,120,120,30,135,105,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,176,0,64,1,92,3,56,9,
12,13,60,15,144,26,0,66,8,84,56,28,28,40,16,10,177,125,102,120,120,120,177,125,117,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,20,0,2,0,5,0,
236,0,124,1,214,6,112,8,72,13,160,15,0,27,20,23,59,44,25,15,13,17,8,0,120,60,90,120,120,120,
30,135,105,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,
0,0,1,0,236,0,124,1,214,6,112,8,228,12,160,15,0,27,0,23,59,44,25,15,13,17,8,0,120,60,
90,120,120,120,30,135,105,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,250,0,0,95,0,3,0,5,0,236,0,152,1,120,5,252,8,28,12,172,13,0,27,55,19,59,30,
17,8,8,4,8,0,120,60,90,120,120,120,30,135,105,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,250,0,0,5,0,236,0,152,1,120,5,252,8,28,12,172,13,0,27,
40,19,59,30,17,8,8,4,8,0,120,60,90,120,120,120,30,135,105,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,236,0,152,1,120,5,252,8,28,12,
172,13,0,27,0,12,48,24,14,7,7,3,7,0,120,60,90,120,120,120,30,135,105,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,50,0,2,0,5,0,204,0,
214,1,252,8,184,11,16,14,160,15,0,27,50,29,60,48,20,24,16,16,10,0,135,60,90,120,120,120,45,135,
105,44,20,150,150,51,220,10,0,0,60,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,
5,0,204,0,214,1,252,8,184,11,16,14,160,15,0,27,0,29,60,48,20,24,16,16,10,0,135,60,90,120,
120,120,45,135,105,44,20,150,150,51,220,10,0,0,60,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,250,0,0,95,0,4,0,5,0,204,0,214,1,92,8,24,11,172,13,160,15,0,27,45,29,60,48,20,24,
16,16,10,0,135,60,90,120,120,120,45,135,105,44,20,150,150,51,220,14,0,0,60,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,250,0,0,5,0,204,0,214,1,92,8,24,11,172,13,160,15,0,27,50,29,
60,48,20,24,16,16,10,0,135,60,90,120,120,120,45,135,105,44,20,150,150,50,220,14,0,0,60,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,5,0,204,0,214,1,252,8,184,11,16,14,4,16,
0,27,0,29,60,48,20,24,16,16,10,0,135,60,90,120,120,120,45,135,105,44,20,150,150,50,220,14,0,0,
60,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,5,0,204,0,214,1,252,8,184,11,
16,14,4,16,0,27,0,29,60,48,20,24,16,16,10,0,135,60,90,120,120,120,45,135,105,44,20,150,150,50,
220,14,0,0,60,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,145,0,6,0,5,0,
204,0,120,1,92,8,124,11,172,13,160,15,0,27,35,22,44,48,20,20,16,16,10,0,135,60,90,120,120,120,
45,135,105,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,
0,0,5,0,204,0,120,1,192,8,28,12,172,13,160,15,0,27,50,22,46,46,21,21,16,16,10,0,135,60,
90,120,120,120,45,135,105,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,250,0,0,1,0,204,0,120,1,252,8,104,11,172,13,160,15,0,27,0,21,46,46,25,21,16,16,
10,0,120,60,90,120,120,120,30,135,105,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,250,0,0,37,0,200,0,112,1,252,8,104,11,172,13,160,15,112,23,20,28,36,32,
24,24,16,16,4,8,110,180,160,200,200,175,110,180,160,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,250,0,0,37,0,204,0,120,1,92,8,124,11,172,13,160,15,0,27,
60,30,60,48,20,24,16,16,10,0,135,60,90,120,120,120,45,135,105,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,116,0,13,2,161,5,36,9,188,12,
116,14,96,27,0,87,41,79,96,54,56,43,23,8,167,150,135,120,120,120,197,120,120,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,100,0,5,0,5,0,204,0,
120,1,92,8,124,11,172,13,160,15,0,27,50,22,44,48,20,20,16,16,10,0,135,60,90,120,120,120,45,135,
105,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,
5,0,204,0,120,1,192,8,28,12,172,13,160,15,0,27,50,22,46,46,21,21,16,16,10,0,135,60,90,120,
120,120,45,135,105,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,250,0,0,1,0,204,0,120,1,252,8,104,11,172,13,160,15,0,27,0,21,46,46,25,21,16,16,10,0,
120,60,90,120,120,120,30,135,105,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,250,0,0,5,0,180,0,29,1,192,8,104,11,172,13,160,15,0,29,80,16,6,42,19,30,
34,22,6,0,120,105,120,120,120,120,45,135,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,250,0,0,5,0,72,1,157,3,40,5,140,10,112,13,191,14,32,28,0,111,
52,100,84,56,48,28,12,8,207,150,105,120,120,120,237,165,165,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,100,0,6,0,5,0,204,0,120,1,92,8,124,11,
172,13,160,15,0,27,50,22,44,48,20,20,16,16,10,0,135,60,90,120,120,120,45,135,105,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,5,0,204,0,120,1,
192,8,28,12,172,13,160,15,0,27,50,22,46,46,21,21,16,16,10,0,135,60,90,120,120,120,45,135,105,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,
204,0,120,1,252,8,104,11,172,13,160,15,0,27,0,21,46,46,25,21,17,16,10,0,120,60,90,120,120,120,
30,135,105,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,
0,0,37,0,184,0,88,1,56,9,112,11,132,13,80,15,162,23,25,31,20,40,20,28,24,18,4,8,177,192,
197,235,220,175,177,192,197,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,250,0,0,5,0,176,0,0,2,36,8,88,10,112,13,160,15,162,23,35,47,30,60,33,40,39,18,
6,6,177,162,152,235,235,207,177,162,152,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,250,0,0,1,0,204,0,88,2,128,7,20,10,72,13,100,15,162,23,0,113,44,103,
54,60,68,28,8,8,120,162,235,235,235,255,120,162,235,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,250,0,0,100,0,6,0,5,0,204,0,120,1,92,8,124,11,172,13,
160,15,0,27,50,22,44,48,20,20,16,16,10,0,135,60,90,120,120,120,45,135,105,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,5,0,204,0,120,1,192,8,
28,12,172,13,160,15,0,27,50,22,46,46,21,21,16,16,10,0,135,60,90,120,120,120,45,135,105,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,204,0,
120,1,252,8,104,11,172,13,160,15,0,27,0,21,46,46,25,21,17,16,10,0,120,60,90,120,120,120,30,135,
105,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,
5,0,204,0,120,1,36,9,204,11,172,13,160,15,0,27,20,26,49,45,22,19,19,15,9,0,128,60,90,120,
120,120,67,135,105,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,250,0,0,5,0,184,0,83,1,232,8,139,11,126,13,98,15,219,26,25,30,33,58,34,39,39,22,12,3,
138,77,101,120,120,120,30,135,105,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,250,0,0,1,0,152,0,24,1,232,8,4,11,52,13,0,15,160,26,0,72,10,83,73,74,
75,36,17,8,167,105,120,120,120,120,167,90,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,250,0,0,100,0,7,0,5,0,204,0,120,1,92,8,124,11,172,13,160,15,
0,27,50,22,44,48,20,20,16,16,10,0,135,60,90,120,120,120,45,135,105,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,5,0,204,0,120,1,192,8,28,12,
172,13,160,15,0,27,50,22,46,46,21,21,16,16,10,0,135,60,90,120,120,120,45,135,105,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,204,0,120,1,
252,8,104,11,172,13,160,15,0,27,0,21,46,46,25,21,17,16,10,0,120,60,90,120,120,120,30,135,105,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,37,0,
160,0,184,1,212,8,104,11,172,13,160,15,37,23,25,29,40,32,32,20,16,16,4,8,150,187,137,187,150,237,
150,187,137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,
0,0,37,0,216,0,248,1,64,6,176,9,68,12,176,14,37,23,25,35,39,48,30,24,21,15,3,6,150,140,
182,187,222,237,150,140,182,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,250,0,0,5,0,216,0,60,2,136,4,176,9,8,12,216,14,218,22,30,70,52,68,52,28,28,20,
4,8,182,140,182,187,222,237,182,140,182,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,250,0,0,1,0,232,0,64,2,252,3,120,10,68,12,216,14,193,22,0,121,36,100,
64,36,44,28,8,8,182,155,145,187,222,237,182,155,145,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,250,0,0,100,0,6,0,5,0,204,0,120,1,92,8,124,11,172,13,
160,15,0,27,50,22,44,48,20,20,16,16,10,0,135,60,90,120,120,120,45,135,105,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,5,0,204,0,120,1,192,8,
28,12,172,13,160,15,0,27,50,22,46,46,21,21,16,16,10,0,135,60,90,120,120,120,45,135,105,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,204,0,
120,1,252,8,104,11,172,13,160,15,0,27,0,23,48,48,26,22,18,17,11,0,120,60,90,120,120,120,30,135,
105,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,
37,0,176,0,120,1,152,8,104,11,172,13,160,15,62,23,25,28,40,28,23,24,16,16,4,8,150,150,170,170,
237,175,150,150,170,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,250,0,0,37,0,167,0,116,1,48,7,186,10,34,13,76,15,61,24,35,40,44,36,28,30,23,19,8,8,
153,164,164,155,202,158,150,180,170,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,250,0,0,1,0,184,0,144,1,172,3,36,9,224,11,136,14,144,26,0,94,36,84,72,44,
40,28,20,10,162,127,150,120,120,120,162,127,165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,250,0,0,15,0,2,0,5,0,204,0,120,1,92,8,124,11,172,13,160,15,
0,27,15,17,45,36,15,18,12,12,7,0,135,60,90,120,120,120,45,135,105,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,204,0,120,1,92,8,124,11,
172,13,160,15,0,27,0,30,60,48,20,24,16,16,10,0,135,60,90,120,120,120,45,135,105,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,150,0,5,0,5,0,
204,0,112,1,92,8,184,11,172,13,160,15,0,27,30,22,44,48,24,8,8,8,10,0,135,60,90,120,120,120,
45,135,105,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,
0,0,5,0,204,0,112,1,172,8,184,11,172,13,160,15,0,27,60,24,48,48,26,8,8,8,13,0,135,60,
90,120,120,120,45,135,105,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,250,0,0,1,0,204,0,112,1,172,8,184,11,172,13,160,15,0,27,30,24,48,48,26,8,8,8,
13,0,135,60,90,120,120,120,45,135,105,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,250,0,0,1,0,204,0,120,1,172,8,184,11,172,13,160,15,0,27,30,19,38,45,
38,30,15,15,9,0,120,60,95,120,120,120,30,135,110,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,250,0,0,37,0,200,0,144,1,172,8,184,11,172,13,160,15,112,23,
0,10,20,20,28,18,10,10,2,5,110,180,160,200,200,175,110,180,160,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,90,0,4,0,5,0,236,0,234,1,52,8,
236,9,172,13,160,15,0,27,45,17,54,38,23,14,12,14,8,0,120,60,90,120,120,120,30,135,105,44,20,200,
200,54,230,0,0,0,60,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,5,0,236,0,
234,1,52,8,236,9,172,13,160,15,0,27,45,17,54,38,23,14,12,14,8,0,120,60,90,120,120,120,30,135,
105,44,20,200,200,54,230,0,0,0,60,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,
1,0,236,0,234,1,52,8,236,9,172,13,160,15,0,27,0,17,54,38,23,14,12,14,8,0,120,60,90,120,
120,120,30,135,105,44,20,200,200,50,230,0,0,0,60,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,250,0,0,1,0,236,0,234,1,52,8,236,9,172,13,160,15,0,27,0,17,54,38,23,14,12,14,8,0,
120,60,90,120,120,120,30,135,105,44,20,200,200,50,230,0,0,0,60,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,250,0,0,90,0,4,0,5,0,236,0,234,1,52,8,236,9,172,13,160,15,0,27,45,17,
54,38,23,14,12,14,8,0,120,60,90,120,120,120,30,135,105,44,20,200,200,55,230,0,0,0,60,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,5,0,236,0,234,1,52,8,236,9,172,13,160,15,
0,27,45,17,54,38,23,14,12,14,8,0,120,60,90,120,120,120,30,135,105,44,20,200,200,55,230,0,0,0,
60,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,236,0,234,1,52,8,236,9,
172,13,160,15,0,27,0,17,54,38,23,14,12,14,8,0,120,60,90,120,120,120,30,135,105,44,20,200,200,55,
230,0,0,0,60,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,236,0,234,1,
52,8,236,9,172,13,160,15,0,27,0,17,54,38,23,14,12,14,8,0,120,60,90,120,120,120,30,135,105,44,
20,200,200,55,230,0,0,0,60,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,129,0,
3,0,5,0,240,0,13,2,248,9,124,11,76,14,23,17,224,23,50,13,43,11,11,5,7,10,3,0,120,90,
165,120,120,120,90,165,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,250,0,0,5,0,240,0,13,2,248,9,124,11,76,14,23,17,224,23,80,13,43,11,11,5,7,10,
3,0,120,90,165,120,120,120,90,165,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,250,0,0,1,0,240,0,73,2,15,6,176,9,208,12,16,14,160,27,0,99,58,71,
121,73,58,41,11,0,120,120,150,120,120,120,120,90,105,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,250,0,0,129,0,3,0,5,0,240,0,13,2,248,9,124,11,76,14,
23,17,224,23,50,13,43,11,11,5,7,10,3,0,120,90,165,120,120,120,90,165,135,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,5,0,240,0,13,2,248,9,
124,11,76,14,23,17,224,23,80,13,43,11,11,5,7,10,3,0,120,90,165,120,120,120,90,165,135,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,228,0,
137,3,252,4,236,9,188,12,41,14,64,27,0,92,46,74,100,77,70,57,12,0,120,165,135,120,120,120,120,90,
165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,
129,0,3,0,5,0,240,0,13,2,248,9,124,11,76,14,23,17,224,23,50,13,43,11,11,5,7,10,3,0,
120,90,165,120,120,120,90,165,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,250,0,0,5,0,240,0,13,2,248,9,124,11,76,14,23,17,224,23,80,13,43,11,11,5,
7,10,3,0,120,90,165,120,120,120,90,165,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,250,0,0,1,0,240,0,58,2,125,6,20,10,92,13,48,17,224,27,0,73,
48,61,95,89,78,33,7,0,120,120,120,120,120,120,90,90,120,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,129,0,3,0,5,0,240,0,13,2,248,9,124,11,
76,14,23,17,224,23,50,13,43,11,11,5,7,10,3,0,120,90,165,120,120,120,90,165,135,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,5,0,240,0,13,2,
248,9,124,11,76,14,23,17,224,23,80,13,43,11,11,10,7,10,3,0,120,90,165,120,120,120,90,165,135,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,
204,0,144,1,97,8,20,10,92,13,135,15,128,27,0,81,57,73,72,90,90,58,13,0,120,105,150,120,120,120,
45,105,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,
0,0,129,0,3,0,5,0,240,0,13,2,248,9,124,11,76,14,23,17,224,23,50,13,43,11,11,5,7,10,
3,0,120,90,165,120,120,120,90,165,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,250,0,0,5,0,240,0,13,2,248,9,124,11,76,14,23,17,224,23,80,13,43,11,
11,5,7,10,3,0,120,90,165,120,120,120,90,165,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,12,1,224,1,178,3,236,9,8,12,222,13,128,25,
0,117,65,90,99,67,78,52,17,0,120,75,150,120,120,120,90,120,105,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,129,0,3,0,5,0,240,0,13,2,248,9,
124,11,76,14,23,17,224,23,50,13,43,11,11,5,7,10,3,0,120,90,165,120,120,120,90,165,135,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,5,0,240,0,
13,2,248,9,124,11,76,14,23,17,224,23,80,13,43,11,11,5,7,10,3,0,120,90,165,120,120,120,90,165,
135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,
1,0,228,0,224,1,125,6,76,9,148,12,66,14,32,27,0,102,68,83,83,94,100,68,14,0,120,90,120,120,
120,120,90,90,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,250,0,0,49,0,3,0,1,0,12,1,249,1,61,9,96,9,152,13,29,16,64,27,50,39,52,19,25,54,
27,19,8,0,150,120,120,120,120,120,135,120,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,250,0,0,1,0,12,1,249,1,61,9,96,9,152,13,29,16,64,27,0,39,
52,19,25,54,27,19,8,0,150,120,120,120,120,120,135,120,120,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,12,1,249,1,61,9,96,9,152,13,29,16,
64,27,0,39,52,19,25,54,27,19,8,0,150,120,120,120,120,120,135,120,120,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,70,0,2,0,5,0,240,0,13,2,
248,9,124,11,76,14,23,17,224,23,70,16,48,16,16,8,8,12,3,0,120,90,165,120,120,120,90,165,135,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,
240,0,13,2,248,9,124,11,76,14,23,17,224,23,0,16,48,16,16,8,8,12,3,0,120,90,165,120,120,120,
90,165,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,
0,0,30,0,2,0,5,0,240,0,13,2,248,9,124,11,76,14,23,17,224,23,30,13,43,11,11,5,7,10,
3,0,120,90,165,120,120,120,90,165,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,250,0,0,1,0,240,0,13,2,248,9,124,11,76,14,23,17,224,23,0,13,43,11,
11,5,7,10,3,0,120,90,165,120,120,120,90,165,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,250,0,0,109,0,3,0,5,0,240,0,13,2,248,9,124,11,212,13,
200,15,224,23,60,24,52,20,19,10,12,8,4,0,162,90,165,120,120,120,132,165,135,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,5,0,240,0,13,2,248,9,
124,11,212,13,200,15,224,23,50,24,52,20,19,10,12,8,4,0,162,90,165,120,120,120,132,165,135,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,240,0,
13,2,248,9,124,11,212,13,160,15,224,23,0,14,40,14,10,5,7,9,3,0,162,90,165,120,120,120,132,165,
135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,
41,0,5,0,1,0,116,0,13,2,64,6,196,9,84,11,72,13,96,27,16,16,18,36,37,24,19,17,9,4,
167,150,135,120,120,120,197,120,120,44,45,70,130,51,0,0,0,0,45,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,250,0,0,17,0,116,0,13,2,64,6,196,9,84,11,72,13,96,27,0,22,22,43,39,24,
22,19,12,4,167,150,135,120,120,120,197,120,120,44,45,70,130,52,0,0,0,0,45,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,250,0,0,5,0,136,0,216,1,64,6,196,9,228,12,60,15,124,21,25,20,
12,40,24,8,0,0,0,0,200,212,187,187,205,175,200,212,187,44,45,70,130,52,0,0,0,0,45,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,136,0,216,1,64,6,196,9,228,12,60,15,
124,21,0,17,12,36,24,8,0,0,0,0,200,212,187,187,205,175,200,212,187,44,45,70,130,51,0,0,0,0,
45,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,136,0,216,1,64,6,196,9,
228,12,60,15,124,21,0,17,12,36,24,8,4,8,0,0,200,212,187,187,205,175,200,212,187,44,45,70,130,51,
0,0,0,0,45,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,53,0,5,0,1,0,
116,0,13,2,176,4,196,9,84,11,72,13,96,27,18,16,18,36,37,24,19,17,9,4,167,150,135,120,120,120,
197,120,120,44,45,70,130,51,0,0,0,0,45,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,
0,0,17,0,116,0,13,2,20,5,196,9,84,11,72,13,96,27,0,22,22,43,39,24,22,19,12,4,167,150,
135,120,120,120,197,120,120,44,45,70,130,52,0,0,0,0,45,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,250,0,0,5,0,136,0,224,1,24,6,196,9,228,12,60,15,124,21,35,20,12,40,24,8,0,0,
0,0,200,212,187,187,205,175,200,212,187,44,45,70,130,52,0,0,0,0,45,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,250,0,0,1,0,136,0,224,1,24,6,196,9,228,12,60,15,124,21,0,16,12,36,
24,8,0,0,0,0,200,212,187,187,205,175,200,212,187,44,45,70,130,51,0,0,0,0,45,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,136,0,224,1,24,6,196,9,228,12,60,15,124,21,
0,16,12,36,24,8,4,8,0,0,200,212,187,187,205,175,200,212,187,44,45,70,130,51,0,0,0,0,45,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,27,0,3,0,5,0,136,0,8,2,64,6,
252,8,184,11,100,15,124,21,28,14,7,36,21,14,14,14,0,0,200,212,187,187,205,175,200,212,187,44,45,70,
130,50,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,136,0,
216,1,64,6,32,8,184,11,100,15,124,21,0,11,3,32,21,7,3,7,0,0,200,212,187,187,205,175,200,212,
187,44,45,70,130,47,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,
1,0,136,0,216,1,64,6,32,8,184,11,100,15,124,21,0,11,3,32,21,7,3,7,0,0,200,212,187,187,
205,175,200,212,187,44,45,70,130,47,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,250,0,0,34,0,4,0,5,0,136,0,8,2,64,6,252,8,184,11,100,15,124,21,12,19,8,40,32,16,
16,16,0,0,200,212,187,187,205,175,200,212,187,44,45,70,130,51,0,0,0,0,40,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,250,0,0,5,0,136,0,8,2,64,6,252,8,184,11,100,15,124,21,22,4,
4,20,16,8,4,8,0,0,200,212,187,187,205,175,200,212,187,44,45,70,130,45,0,0,0,0,40,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,136,0,8,2,64,6,252,8,184,11,100,15,
124,21,0,4,4,20,16,8,4,8,0,0,200,212,187,187,205,175,200,212,187,44,45,70,130,45,0,0,0,0,
40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,136,0,8,2,64,6,252,8,
184,11,100,15,124,21,0,4,4,20,16,8,4,8,0,0,200,212,187,187,205,175,200,212,187,44,45,70,130,45,
0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,35,0,2,0,5,0,
136,0,216,0,220,5,46,9,228,12,24,16,124,21,35,9,16,16,9,6,3,3,0,0,200,212,187,255,255,175,
200,212,187,44,30,50,85,54,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,
0,0,1,0,136,0,216,0,220,5,46,9,228,12,24,16,124,21,0,9,16,16,9,6,3,3,0,0,200,212,
187,255,255,175,200,212,187,44,30,50,85,54,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,250,0,0,105,0,5,0,1,0,116,0,13,2,60,5,208,7,84,11,16,14,96,27,30,13,18,33,
30,22,19,17,9,4,167,150,135,120,120,120,197,120,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,250,0,0,17,0,116,0,13,2,60,5,128,7,40,10,60,15,96,27,
0,19,22,39,33,26,24,8,12,4,167,150,135,120,120,120,197,120,120,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,5,0,136,0,72,2,100,5,108,7,40,10,
244,11,124,21,35,14,16,32,20,20,8,8,0,0,200,212,187,187,205,175,200,212,187,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,5,0,136,0,72,2,100,5,
108,7,40,10,244,11,124,21,40,14,16,32,20,20,8,8,0,0,200,212,187,187,205,175,200,212,187,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,116,0,
13,2,60,5,208,7,84,11,16,14,96,27,0,19,22,39,36,26,23,20,11,5,167,150,135,120,120,120,197,120,
120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,
64,0,5,0,1,0,116,0,13,2,60,5,208,7,84,11,16,14,96,27,30,13,18,33,30,22,19,17,9,4,
167,150,135,120,120,120,197,120,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,250,0,0,17,0,116,0,13,2,60,5,128,7,40,10,60,15,96,27,0,19,22,39,33,26,
24,8,12,4,167,150,135,120,120,120,197,120,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,250,0,0,5,0,136,0,72,2,100,5,108,7,40,10,244,11,124,21,35,14,
16,32,20,20,8,8,0,0,200,212,187,187,205,175,200,212,187,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,136,0,72,2,100,5,108,7,40,10,244,11,
124,21,0,14,16,32,20,20,8,8,0,0,200,212,187,187,205,175,200,212,187,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,136,0,224,1,24,6,252,8,
28,12,116,14,124,21,0,13,12,32,20,16,4,8,0,0,200,212,187,187,205,175,200,212,187,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,58,0,3,0,5,0,
116,0,200,0,26,4,102,8,232,13,24,16,124,21,58,10,21,12,8,4,4,4,0,0,200,212,187,255,255,175,
200,212,187,44,30,55,65,50,0,0,0,0,60,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,
0,0,1,0,116,0,200,0,26,4,102,8,232,13,24,16,124,21,0,10,21,12,8,4,4,4,0,0,200,212,
187,255,255,175,200,212,187,44,30,55,65,50,0,0,0,0,60,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,250,0,0,1,0,116,0,200,0,26,4,102,8,232,13,24,16,124,21,0,10,21,12,8,4,4,4,
0,0,200,212,187,255,255,175,200,212,187,44,30,55,65,50,0,0,0,0,60,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,250,0,0,24,0,3,0,5,0,136,0,200,0,76,4,102,8,232,13,24,16,124,21,
25,18,16,28,12,8,4,4,0,0,200,212,187,255,255,175,200,212,187,44,30,55,65,57,0,0,0,0,40,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,136,0,200,0,76,4,102,8,232,13,
24,16,124,21,0,18,16,28,12,8,4,4,0,0,200,212,187,255,255,175,200,212,187,44,30,55,65,53,0,0,
0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,136,0,200,0,76,4,
102,8,232,13,24,16,124,21,0,18,16,28,12,8,4,4,0,0,200,212,187,255,255,175,200,212,187,44,30,55,
65,53,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,20,4,6,0,
246,249,251,253,4,0,1,6,6,5,3,6,255,2,4,3,1,4,8,7,10,21,15,15,19,23,20,21,12,10,
4,247,235,227,227,216,215,217,220,221,228,237,242,243,248,5,17,22,32,35,30,36,36,40,42,41,39,20,28,26,
14,6,217,231,225,244,244,244,232,233,221,216,190,151,193,5,37,28,23,21,18,20,36,44,39,24,5,2,4,249,
247,235,242,250,2,4,0,255,7,6,22,226,244,13,238,238,232,2,173,187,55,56,26,32,47,45,49,48,53,13,
243,223,220,238,24,24,19,245,213,220,236,212,238,10,14,226,9,8,8,248,234,250,250,235,255,34,0,239,220,192,
202,179,190,213,235,2,33,28,47,87,108,117,88,66,78,53,15,9,29,22,249,243,233,238,247,235,236,241,230,218,
220,206,196,218,229,232,224,228,241,241,239,248,254,255,8,5,1,254,243,5,11,249,249,7,23,21,20,17,29,28,
29,37,35,33,35,42,29,21,22,27,14,2,254,4,244,248,212,208,211,215,216,203,201,215,220,219,231,250,19,20,
26,30,49,56,45,38,28,45,42,0,215,230,239,1,253,250,252,249,237,3,4,8,229,185,201,210,223,233,227,235,
6,33,35,22,21,23,25,30,46,39,23,25,31,37,30,26,27,31,25,32,21,2,232,223,222,219,216,223,217,210,
209,224,247,238,234,245,255,236,239,250,250,231,242,0,18,17,9,12,10,8,10,3,255,3,10,23,25,31,39,32,
23,29,37,45,33,17,10,13,6,252,246,238,249,246,5,254,229,222,223,214,212,216,213,215,217,228,240,1,255,5,
5,14,30,32,7,243,250,255,23,24,22,11,17,26,23,42,42,29,12,252,249,249,247,248,239,249,7,14,7,0,
245,241,250,248,237,238,235,230,232,235,240,0,11,17,26,14,3,2,0,2,10,12,14,3,247,244,2,15,23,9,
0,1,244,253,249,245,248,248,248,248,234,239,241,244,255,0,13,12,3,7,19,25,38,32,21,28,21,11,10,5,
3,6,7,12,2,0,239,229,225,224,216,211,206,207,213,236,0,0,7,8,16,25,21,23,27,16,9,9,17,25,
23,25,20,18,11,8,253,248,252,251,244,243,245,237,246,247,244,254,11,3,250,249,253,244,246,7,11,13,11,13,
25,25,15,19,13,255,254,254,239,225,214,213,217,234,252,0,0,249,2,3,13,14,8,5,4,255,255,251,244,252,
12,25,21,24,12,19,15,8,14,11,13,7,8,11,16,11,1,255,0,6,13,8,248,243,242,234,225,226,233,231,
214,221,224,230,230,233,248,254,12,12,8,3,7,20,25,22,15,16,18,24,24,27,33,27,25,16,12,6,2,2,
253,254,248,242,240,248,6,1,247,228,233,253,3,2,244,248,242,247,249,241,240,238,246,251,11,12,11,247,244,249,
5,9,2,246,248,250,255,0,13,12,25,29,31,46,37,6,250,253,0,6,1,10,4,253,250,252,246,236,238,244,
245,241,242,240,238,233,2,14,11,4,255,0,6,5,11,12,14,16,11,255,2,2,10,0,0,251,241,239,237,232,
232,231,252,16,20,19,16,23,18,18,16,16,7,254,242,240,241,237,250,0,0,16,17,10,253,247,0,254,251,248,
243,247,243,239,248,2,1,11,21,35,39,32,18,3,247,233,235,246,253,246,242,245,3,252,251,6,15,0,249,254,
254,245,247,250,9,13,19,21,21,4,252,5,250,237,236,242,241,235,223,235,250,253,8,20,17,19,30,27,33,38,
30,29,24,17,20,31,14,251,245,233,214,208,198,191,196,213,231,249,243,241,249,5,9,20,39,36,27,13,12,23,
23,29,23,24,24,9,255,236,221,231,255,9,1,6,8,7,1,255,253,12,9,7,252,246,236,232,238,244,1,0,
254,234,237,243,238,242,248,247,254,2,4,2,8,14,27,44,45,38,28,16,9,7,11,4,248,244,244,236,230,240,
237,244,246,248,249,249,245,255,0,6,5,18,23,24,9,11,14,9,255,246,249,241,240,230,224,237,249,0,5,0,
255,0,248,2,13,14,18,5,254,8,17,22,17,18,25,37,23,8,2,241,238,236,238,235,240,239,240,221,232,235,
250,15,14,10,12,4,254,9,23,33,38,26,255,0,2,6,253,244,238,241,247,238,226,225,233,245,237,244,241,246,
248,254,19,45,43,28,22,26,30,39,33,21,1,252,3,0,243,245,243,250,238,241,249,237,228,221,233,234,236,243,
3,1,14,17,20,17,21,31,32,18,0,3,252,239,219,227,241,248,248,7,17,10,7,7,3,11,11,13,255,235,
246,14,25,23,13,255,241,238,248,255,255,246,246,253,244,248,252,13,9,10,6,0,249,244,95,1,17,0,9,7,
6,6,2,0,255,254,254,252,250,252,253,254,255,0,0,3,4,6,7,13,15,19,17,22,236,133,180,12,41,52,
55,56,39,238,156,177,251,32,42,33,7,241,230,252,17,10,17,15,247,236,240,245,248,251,0,7,16,12,9,2,
0,4,3,0,249,247,11,8,250,0,253,250,250,253,252,250,1,4,1,254,255,7,13,14,14,24,29,37,252,193,
183,173,222,24,44,55,53,28,4,248,249,251,254,254,236,232,240,250,255,8,17,15,18,11,251,252,253,1,254,247,
247,250,254,3,3,5,11,12,6,255,253,0,254,246,253,250,253,249,1,6,10,28,19,3,245,203,219,20,20,1,
241,3,22,30,32,36,253,225,225,222,230,238,248,4,11,22,28,29,20,7,243,236,4,4,5,252,224,225,255,10,
11,8,17,18,14,8,2,219,204,227,254,16,39,57,31,5,244,247,255,248,233,226,227,242,253,0,7,16,27,36,
33,26,22,248,211,211,216,236,1,9,9,17,20,27,18,3,248,248,252,252,247,242,244,238,247,4,19,29,31,20,
3,248,247,244,242,235,237,251,7,15,12,8,2,5,4,0,0,255,253,248,248,250,3,7,12,8,11,7,4,252,
246,238,242,241,244,0,251,9,21,17,26,27,15,11,250,231,239,232,229,238,249,3,13,16,11,13,18,18,17,253,
241,245,238,245,246,244,2,12,14,17,14,4,0,250,241,249,0,252,0,245,248,0,8,14,13,8,12,14,4,0,
255,243,241,239,239,252,5,4,2,7,3,7,5,0,1,5,12,20,24,0,70,0,3,0,1,0,116,0,232,0,
232,3,60,10,232,13,24,16,124,21,70,3,12,7,4,2,2,2,0,0,200,212,187,255,255,175,200,212,187,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,
116,0,232,0,232,3,60,10,232,13,24,16,124,21,0,3,12,7,4,2,2,2,0,0,200,212,187,255,255,175,
200,212,187,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,
0,0,1,0,116,0,232,0,232,3,60,10,232,13,24,16,124,21,0,3,12,7,4,2,2,2,0,0,200,212,
187,255,255,175,200,212,187,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,250,0,0,41,0,4,0,1,0,216,0,235,0,197,4,124,11,84,16,160,15,124,21,12,20,30,21,
7,10,7,0,0,0,177,108,147,135,135,0,177,108,147,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,216,0,235,0,197,4,124,11,84,16,160,15,124,21,
0,20,30,21,7,10,7,0,0,0,177,108,147,135,135,0,177,108,147,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,5,0,172,0,4,1,200,3,52,8,248,12,
41,14,32,27,30,30,31,33,30,34,24,24,9,0,120,135,180,120,120,120,120,120,135,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,140,0,244,1,172,5,
36,9,248,12,41,14,32,27,0,28,24,50,44,44,31,31,12,0,120,135,180,120,120,120,120,120,135,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,41,0,4,0,
1,0,216,0,235,0,197,4,124,11,84,16,160,15,124,21,12,20,30,21,7,10,7,0,0,0,177,108,147,135,
135,0,177,108,147,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,250,0,0,1,0,216,0,235,0,197,4,124,11,84,16,160,15,124,21,0,20,30,21,7,10,7,0,0,0,
177,108,147,135,135,0,177,108,147,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,250,0,0,5,0,172,0,4,1,200,3,52,8,248,12,41,14,32,27,30,57,43,45,42,46,
33,33,13,0,120,135,180,120,120,120,120,120,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,250,0,0,1,0,140,0,244,1,172,5,36,9,248,12,41,14,32,27,0,58,
34,72,63,63,45,45,18,0,120,135,180,120,120,120,120,120,135,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,41,0,4,0,1,0,135,0,235,0,212,3,124,11,
84,16,184,16,124,21,12,19,30,21,7,10,7,0,0,0,177,108,147,135,135,0,177,108,147,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,135,0,235,0,
212,3,124,11,84,16,160,15,124,21,0,19,30,21,7,10,7,0,0,0,177,108,147,135,135,0,177,108,147,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,5,0,
36,1,68,2,178,3,196,9,152,13,35,15,64,27,30,37,36,38,45,34,35,16,3,0,165,165,150,120,120,120,
165,120,165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,
0,0,1,0,248,0,137,3,62,5,140,10,112,13,35,15,32,28,0,82,32,89,86,48,32,28,12,0,150,135,
105,120,120,120,210,165,150,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,250,0,0,36,0,4,0,1,0,135,0,235,0,212,3,124,11,84,16,160,15,124,21,12,19,30,21,
7,10,7,0,0,0,177,108,147,135,135,0,177,108,147,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,135,0,235,0,212,3,124,11,84,16,184,16,124,21,
0,19,30,21,7,10,7,0,0,0,177,108,147,135,135,0,177,108,147,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,5,0,240,0,184,1,164,4,192,8,112,13,
10,15,96,27,25,47,45,38,50,55,38,22,6,0,120,165,180,120,120,120,150,150,150,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,240,0,203,2,224,6,
176,9,112,13,10,15,96,27,0,60,40,75,69,67,45,27,8,0,120,135,240,120,120,120,150,105,165,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,46,0,4,0,
1,0,135,0,235,0,252,3,124,11,84,16,184,16,124,21,12,19,30,21,7,10,7,0,0,0,177,108,147,135,
135,0,177,108,147,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,250,0,0,1,0,135,0,235,0,252,3,124,11,84,16,184,16,124,21,0,19,30,21,7,10,7,0,0,0,
177,108,147,135,135,0,177,108,147,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,250,0,0,5,0,60,0,170,0,106,5,112,8,92,13,135,15,160,26,35,33,14,51,44,37,
30,21,6,0,120,120,120,120,120,120,120,105,150,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,250,0,0,1,0,60,0,59,1,174,8,160,10,92,13,135,15,160,26,0,62,
15,79,70,68,55,32,15,0,120,120,120,120,120,120,120,105,150,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,41,0,4,0,1,0,135,0,235,0,212,3,124,11,
84,16,184,16,124,21,12,15,26,18,6,8,6,0,0,0,177,108,147,135,135,0,177,108,147,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,135,0,235,0,
212,3,124,11,84,16,184,16,124,21,0,17,30,18,8,8,8,0,0,0,177,108,147,135,135,0,177,108,147,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,5,0,
200,0,205,0,247,2,212,8,224,11,41,14,160,26,30,54,32,51,37,20,17,12,7,0,117,117,153,135,135,120,
117,117,153,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,
0,0,1,0,232,0,218,2,222,3,60,10,224,11,222,13,160,28,0,54,31,55,68,32,33,22,8,7,230,150,
120,120,120,120,185,105,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,250,0,0,41,0,4,0,1,0,135,0,235,0,212,3,124,11,84,16,160,15,124,21,12,19,30,21,
7,10,7,0,0,0,177,108,147,135,135,0,177,108,147,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,135,0,235,0,212,3,124,11,84,16,184,16,124,21,
0,19,30,21,7,10,7,0,0,0,177,108,147,135,135,0,177,108,147,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,5,0,105,0,205,0,92,3,228,7,208,12,
41,14,96,26,30,43,37,39,37,27,21,15,5,0,117,132,153,135,135,120,117,117,153,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,84,0,104,1,232,3,
212,8,148,12,41,14,64,26,0,57,19,78,58,43,44,40,13,0,120,150,135,120,120,120,60,135,120,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,25,0,4,0,
5,0,116,0,232,0,252,3,60,10,232,13,24,16,124,21,15,9,17,15,4,2,2,2,0,0,200,212,187,255,
255,175,200,212,187,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,250,0,0,1,0,116,0,232,0,252,3,60,10,232,13,24,16,124,21,0,9,17,15,4,2,2,2,0,0,
200,212,187,255,255,175,200,212,187,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,250,0,0,5,0,160,0,4,1,200,3,108,7,248,12,41,14,32,27,10,13,18,25,18,11,
14,14,5,0,120,135,180,120,120,120,120,120,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,250,0,0,1,0,160,0,4,1,200,3,108,7,248,12,41,14,32,27,0,24,
25,34,24,15,19,19,7,0,120,135,180,120,120,120,120,120,135,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,58,0,3,0,5,0,116,0,208,0,104,6,40,10,
232,13,24,16,124,21,58,7,12,16,8,4,0,0,0,0,200,212,187,255,255,175,200,212,187,44,30,50,85,50,
0,0,0,0,60,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,116,0,208,0,
104,6,40,10,232,13,24,16,124,21,0,7,12,16,8,4,0,0,0,0,200,212,187,255,255,175,200,212,187,44,
30,50,85,50,0,0,0,0,60,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,
116,0,208,0,104,6,40,10,232,13,24,16,124,21,0,7,12,16,8,4,0,0,0,0,200,212,187,255,255,175,
200,212,187,44,30,50,85,50,0,0,0,0,60,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,
0,0,70,0,3,0,1,0,116,0,200,0,64,6,40,10,232,13,24,16,124,21,70,3,9,9,4,2,2,2,
0,0,200,212,187,255,255,175,200,212,187,44,45,70,130,50,0,0,0,0,40,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,250,0,0,1,0,116,0,200,0,64,6,40,10,232,13,24,16,124,21,0,3,9,9,
4,2,2,2,0,0,200,212,187,255,255,175,200,212,187,44,45,70,130,49,0,0,0,0,40,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,116,0,200,0,64,6,40,10,232,13,24,16,124,21,
0,3,9,9,4,2,2,2,0,0,200,212,187,255,255,175,200,212,187,44,45,70,130,48,0,0,0,0,40,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,34,4,15,0,254,255,255,0,2,2,0,0,
1,4,3,6,5,8,4,4,5,2,1,251,255,251,250,249,249,246,247,248,252,0,1,3,8,9,12,14,16,14,
18,16,16,15,239,131,222,37,254,20,239,9,11,8,8,12,0,252,1,3,2,250,5,255,6,253,254,5,253,6,
3,10,253,0,253,254,4,244,243,249,255,249,250,2,248,1,8,13,8,18,16,12,22,5,6,12,3,3,233,149,
189,10,14,23,254,18,33,41,2,5,2,249,7,253,255,255,254,255,241,246,245,249,0,9,15,32,32,22,177,166,
39,11,35,1,0,24,10,247,240,1,231,24,251,2,9,2,21,241,247,255,12,250,232,9,8,244,22,249,252,37,
242,235,229,36,248,201,64,231,246,30,0,48,0,239,20,0,242,242,247,7,215,251,34,4,217,254,31,252,14,8,
224,255,24,1,3,21,10,19,2,19,35,225,139,245,38,243,249,234,10,47,227,248,27,243,21,38,46,250,224,24,
255,221,4,21,219,231,241,3,25,238,242,0,3,14,8,3,1,33,10,1,18,245,240,27,230,252,15,236,245,1,
7,245,0,4,229,248,3,5,23,229,4,34,13,6,38,11,230,247,0,8,252,227,205,41,38,202,245,26,236,12,
247,247,15,24,251,228,36,73,217,224,32,1,234,11,251,0,226,241,254,24,7,202,29,31,254,10,11,210,253,55,
232,8,23,238,249,246,29,2,228,242,255,30,233,247,35,255,28,241,242,248,249,2,254,250,20,37,230,242,245,6,
27,239,9,2,18,240,238,247,16,29,240,249,9,241,250,11,12,232,21,31,224,251,14,20,232,234,8,18,13,228,
246,248,30,249,3,16,37,252,215,233,244,31,18,218,34,24,228,4,251,15,7,223,2,11,237,21,0,231,3,11,
24,231,226,62,20,202,17,10,252,245,1,26,0,239,0,28,232,251,0,245,0,235,214,31,16,17,36,254,2,11,
220,249,1,31,15,217,2,252,13,25,243,244,22,225,238,224,7,33,247,4,19,254,17,14,239,244,1,35,239,237,
29,0,0,5,241,242,11,0,7,229,6,255,215,26,17,217,25,51,248,11,240,253,10,15,17,232,222,7,7,253,
8,251,241,8,10,240,33,12,204,8,9,13,239,211,27,33,254,18,6,246,238,245,29,15,244,231,253,39,30,241,
245,0,212,238,22,1,241,221,1,49,38,250,246,10,20,12,0,237,1,5,230,232,18,55,221,199,27,48,253,230,
206,2,31,0,5,251,13,31,2,21,3,227,19,224,245,3,5,36,222,214,60,20,210,12,242,226,18,22,242,222,
38,42,0,17,14,238,239,237,7,21,217,224,33,241,247,39,250,245,10,26,7,229,14,14,215,12,33,242,243,241,
0,45,12,212,237,8,250,244,5,13,8,0,28,22,252,253,239,241,14,19,253,221,233,20,21,9,10,247,222,246,
11,6,255,238,248,36,23,248,12,18,10,2,249,5,235,228,247,248,5,1,255,6,253,2,251,10,2,251,8,250,
11,21,1,4,13,4,253,244,250,246,238,246,245,253,14,11,9,9,8,12,250,244,3,255,249,250,241,16,27,240,
1,17,15,255,224,250,1,0,3,245,254,24,26,7,245,251,3,227,233,1,11,8,250,246,3,23,27,0,255,20,
253,232,252,252,251,7,7,249,253,20,254,236,10,254,243,250,244,4,17,11,8,19,21,249,239,255,254,246,248,243,
2,11,2,4,0,7,16,5,252,244,242,244,248,2,24,15,252,247,5,13,2,248,251,253,248,247,6,15,11,3,
254,255,12,247,230,250,9,15,7,254,249,0,14,13,254,252,248,239,244,253,5,2,3,15,16,0,0,2,252,3,
11,0,243,254,255,246,1,15,4,245,248,0,255,253,249,247,11,14,6,6,0,6,10,5,1,0,243,239,245,0,
15,14,255,254,3,2,250,250,254,247,247,0,255,7,13,4,4,15,6,253,254,255,255,251,252,8,255,253,7,3,
2,2,248,251,252,246,244,249,9,18,7,3,3,10,11,254,246,253,3,1,0,4,5,246,254,12,7,249,241,239,
245,252,8,8,4,7,13,9,6,4,251,242,254,9,2,1,253,253,4,10,3,249,251,0,247,249,251,252,4,2,
11,13,5,2,252,250,0,1,0,0,1,1,8,4,0,3,253,255,254,250,253,243,245,2,1,6,11,9,4,3,
3,255,0,0,0,255,254,0,5,3,254,253,255,255,249,248,252,5,6,1,0,1,8,11,3,255,254,254,0,0,
251,1,3,4,0,252,1,2,0,0,250,0,0,249,252,5,8,5,3,3,7,5,0,0,252,252,255,252,251,1,
9,3,0,1,2,251,249,254,255,255,3,2,253,3,10,6,3,0,255,255,0,2,255,1,0,252,0,0,2,2,
0,0,24,0,3,0,5,0,136,0,200,0,64,6,40,10,232,13,24,16,124,21,25,18,15,28,12,8,4,4,
0,0,200,212,187,255,255,175,200,212,187,44,30,50,85,55,0,0,0,0,40,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,250,0,0,1,0,136,0,200,0,64,6,40,10,232,13,24,16,124,21,0,18,15,28,
16,12,8,4,0,0,200,212,187,255,255,175,200,212,187,44,30,50,85,53,0,0,0,0,40,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,136,0,200,0,64,6,40,10,232,13,24,16,124,21,
0,18,15,28,16,12,8,4,0,0,200,212,187,255,255,175,200,212,187,44,30,50,85,53,0,0,0,0,40,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,21,2,14,0,0,2,6,7,11,10,10,10,
7,244,199,214,83,238,9,4,240,254,255,1,3,18,253,10,1,13,20,15,252,172,182,7,30,69,32,10,239,247,
243,5,15,242,4,240,250,247,3,17,4,251,248,254,11,249,10,2,12,2,0,10,250,8,235,252,252,244,2,1,
246,246,6,13,21,30,24,29,30,176,194,200,246,49,27,30,28,14,236,182,29,22,228,34,239,21,35,236,10,35,
230,170,190,233,43,34,48,41,253,86,225,13,233,192,214,236,236,228,39,255,33,65,21,249,14,20,32,235,150,155,
7,0,119,78,204,33,219,213,249,240,225,60,47,4,244,99,232,169,227,232,246,13,244,20,38,213,41,63,10,61,
190,174,28,187,29,233,31,6,12,255,18,19,33,230,184,74,211,249,48,15,206,212,82,7,222,9,213,250,247,15,
76,253,18,9,168,77,222,206,54,198,23,242,2,35,248,1,13,47,220,30,241,177,103,197,202,36,252,232,73,249,
23,26,183,235,70,24,165,11,234,109,169,237,62,27,184,72,235,241,223,224,49,52,237,176,115,244,18,188,243,246,
35,215,20,70,229,255,177,48,22,37,22,181,227,68,244,185,63,191,53,35,4,233,202,37,28,235,33,13,230,219,
243,255,17,28,58,184,233,247,37,29,2,229,236,25,38,226,248,238,202,90,244,41,197,242,226,104,250,206,37,199,
55,17,181,31,42,201,15,247,21,8,218,44,247,214,11,21,53,203,26,6,197,20,247,18,55,225,168,110,198,232,
45,236,20,21,236,57,237,172,91,189,3,41,190,15,52,235,6,6,253,0,221,70,14,173,24,34,204,45,203,60,
250,199,12,246,101,183,239,16,46,15,12,190,33,206,220,31,42,38,180,242,38,33,233,0,244,53,0,240,7,198,
250,223,17,95,252,207,255,27,13,238,0,9,236,239,255,27,1,245,8,14,41,222,212,242,61,218,223,70,249,3,
11,12,245,223,241,8,38,14,198,230,67,8,238,6,15,1,225,245,1,9,254,9,12,25,249,238,228,45,251,211,
4,19,249,226,40,63,229,215,54,3,200,241,1,248,15,48,197,35,35,2,236,255,27,162,228,67,246,250,39,46,
32,241,213,193,254,242,25,242,249,69,10,244,47,27,196,224,12,237,188,28,54,231,17,58,10,234,237,212,24,248,
248,14,249,43,1,227,7,32,248,222,16,230,197,229,50,0,0,0,221,2,23,0,255,2,250,255,251,0,253,255,
253,252,1,2,2,1,253,8,5,6,7,14,13,12,17,13,16,5,164,135,240,0,35,45,3,43,36,3,19,0,
247,11,247,252,12,228,242,255,240,250,251,3,3,244,8,13,1,248,3,3,2,25,11,0,16,22,6,22,212,179,
243,250,37,8,255,19,4,12,254,239,7,240,219,252,239,251,42,29,42,28,15,28,249,214,226,225,240,240,240,15,
9,245,23,14,4,246,238,11,21,16,5,249,251,23,6,9,5,248,241,251,246,255,227,234,255,5,20,13,0,253,
252,247,42,12,247,248,6,30,30,0,3,18,191,220,208,229,20,255,12,19,5,53,25,245,19,215,7,47,251,12,
213,238,248,247,4,229,37,250,228,246,12,20,37,3,230,33,231,223,243,40,76,233,219,36,242,246,242,41,16,230,
220,215,0,21,251,224,251,54,217,217,22,40,26,42,59,27,220,15,72,244,207,167,168,209,3,239,12,33,63,6,
218,45,55,222,243,44,11,241,23,29,247,250,16,193,238,25,218,204,251,37,16,218,24,18,213,50,43,230,3,22,
230,243,4,43,25,243,18,232,222,32,6,226,228,242,229,212,57,35,249,10,37,251,244,1,18,39,232,230,218,219,
34,255,23,32,43,8,228,237,15,228,235,41,192,231,251,253,36,14,27,46,229,249,239,6,47,216,246,25,244,3,
4,12,11,231,242,236,229,0,250,2,45,32,3,237,242,33,30,21,241,172,232,26,15,18,0,216,3,31,10,10,
10,244,249,245,5,11,247,232,9,7,4,22,5,229,241,4,11,246,17,254,222,15,54,10,1,241,210,37,26,210,
249,235,249,1,40,31,219,239,11,3,41,11,254,247,205,233,54,249,4,18,201,33,16,3,6,211,20,13,220,43,
19,204,7,13,5,38,199,5,6,226,23,9,16,1,245,247,246,28,25,206,2,52,238,246,248,252,22,252,236,3,
5,3,0,229,19,28,244,239,236,31,7,226,17,46,245,242,0,13,25,225,243,249,7,6,223,241,4,10,12,33,
10,252,210,0,56,17,1,254,245,205,241,30,32,230,246,255,245,24,251,238,4,39,37,252,224,0,236,247,10,25,
14,245,228,250,7,19,238,220,29,17,10,6,237,18,6,241,17,7,243,236,236,20,23,4,249,245,28,247,216,0,
0,242,23,8,15,13,243,0,7,16,4,254,6,241,237,248,254,253,13,6,3,248,4,8,238,255,7,13,2,236,
253,3,2,30,7,251,9,246,6,9,229,255,241,253,26,247,239,9,6,16,248,2,24,235,236,251,251,8,9,10,
40,245,246,247,239,4,12,16,239,1,27,255,253,26,231,237,241,243,245,250,245,15,0,12,21,14,44,19,250,24,
221,206,4,224,0,36,18,12,240,245,25,237,236,223,253,11,0,250,1,44,54,18,248,245,237,242,241,253,7,246,
254,0,10,23,7,247,15,2,237,237,238,231,245,3,21,37,15,7,13,18,4,247,234,242,253,245,250,12,9,3,
254,22,13,245,229,233,250,3,251,1,6,4,19,22,14,15,16,243,236,253,3,247,236,238,251,11,19,6,247,247,
249,5,16,5,2,242,251,21,4,10,19,4,239,249,4,0,248,245,240,234,6,11,5,14,12,0,1,3,9,5,
3,245,248,6,2,0,0,0,58,0,3,0,5,0,116,0,240,0,8,7,4,11,224,11,210,15,96,27,58,11,
22,13,9,4,4,4,0,0,200,212,150,250,250,250,200,212,150,44,30,40,135,50,0,0,0,0,60,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,116,0,240,0,8,7,4,11,224,11,210,15,
96,27,0,11,22,13,9,4,4,4,0,0,200,212,150,250,250,250,200,212,150,44,30,40,135,50,0,0,0,0,
60,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,116,0,240,0,8,7,4,11,
224,11,210,15,96,27,0,11,22,13,9,4,4,4,0,0,200,212,150,250,250,250,200,212,150,44,30,40,135,50,
0,0,0,0,60,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,125,0,3,0,5,0,
116,0,4,1,8,7,4,11,224,11,210,15,96,27,125,3,12,7,4,2,2,2,0,0,200,212,187,255,255,175,
200,212,187,44,30,40,135,55,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,
0,0,1,0,116,0,4,1,8,7,4,11,224,11,210,15,96,27,0,3,12,7,4,2,2,2,0,0,200,212,
187,255,255,175,200,212,187,44,30,40,135,55,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,250,0,0,1,0,116,0,4,1,8,7,4,11,224,11,210,15,96,27,0,3,12,7,4,2,2,2,
0,0,200,212,187,255,255,175,200,212,187,44,30,40,135,55,0,0,0,0,40,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,250,0,0,52,10,25,0,0,251,249,253,3,7,7,4,255,1,6,9,9,12,246,222,
236,253,8,13,3,250,246,255,11,19,16,5,249,242,250,5,6,12,1,240,240,254,5,14,7,253,250,254,249,7,
15,253,252,253,253,8,9,0,253,252,247,9,8,4,6,249,246,255,0,1,2,4,2,0,1,253,253,252,0,10,
5,2,4,253,244,2,3,3,11,252,250,253,252,3,3,10,3,251,252,253,253,11,13,251,248,254,249,3,16,2,
251,255,249,246,11,18,6,2,238,250,1,1,18,13,236,233,0,10,14,15,254,240,245,0,16,0,7,4,248,247,
4,11,6,244,244,4,4,18,251,250,4,245,4,8,5,12,236,245,9,11,9,247,250,233,255,24,11,6,237,243,
254,18,27,9,243,238,251,242,16,30,1,255,207,230,46,244,12,30,235,239,9,9,1,7,255,235,10,5,16,21,
242,6,232,227,21,29,233,210,13,16,10,31,241,244,4,232,16,51,21,247,226,232,243,6,12,16,250,215,253,5,
26,15,14,1,235,4,12,21,255,242,244,222,240,35,34,242,248,248,237,255,29,40,249,240,246,239,11,22,17,8,
243,214,226,10,27,21,13,251,239,242,3,11,9,255,0,5,3,245,255,6,249,2,5,2,11,239,244,8,5,1,
4,255,8,2,237,7,6,245,1,10,6,250,3,1,238,251,4,9,17,20,0,234,239,249,1,16,14,6,254,237,
250,252,13,22,255,243,247,252,6,9,253,0,252,252,20,18,253,248,243,244,251,8,20,11,249,244,246,242,15,24,
4,253,239,246,8,12,4,0,2,0,253,251,0,6,1,245,254,15,1,254,0,7,0,237,4,14,254,253,0,1,
5,254,251,11,1,255,254,5,7,248,254,3,247,253,18,5,1,3,239,227,6,38,0,0,0,238,254,7,22,2,
1,238,246,1,5,7,14,8,242,250,243,8,1,255,10,2,0,251,249,253,7,15,8,242,254,8,254,247,3,10,
7,240,244,5,9,11,8,1,220,253,12,15,14,234,16,0,222,15,27,238,247,10,22,245,234,21,14,232,2,10,
254,253,1,254,246,2,9,250,19,12,231,0,255,247,24,254,252,21,243,238,8,14,239,2,1,8,21,227,7,20,
218,250,38,232,255,45,255,218,241,23,247,34,48,191,209,14,39,3,8,7,245,1,233,236,247,49,35,242,18,211,
192,29,45,18,246,255,247,0,250,240,19,18,249,8,252,221,43,14,237,231,228,51,32,222,7,1,230,251,244,29,
51,240,0,220,216,36,19,10,20,222,247,11,249,5,19,238,2,8,233,12,14,4,1,252,235,239,28,12,246,19,
241,230,15,29,9,0,240,227,248,4,12,40,30,236,199,234,16,19,39,1,243,240,252,3,246,27,4,223,245,21,
34,0,234,237,248,14,16,24,252,248,6,233,244,253,10,35,0,239,244,0,254,241,12,34,252,238,15,255,248,1,
0,7,254,2,6,4,249,240,246,10,10,5,15,246,238,6,0,1,4,4,9,12,232,238,10,17,17,249,243,0,
241,252,21,5,18,251,241,255,245,6,20,231,8,47,252,206,248,24,242,8,38,243,244,11,239,236,254,13,36,4,
254,18,238,191,240,64,47,233,238,252,2,244,5,0,252,14,13,254,3,249,237,11,19,255,233,13,16,4,248,221,
242,46,17,218,30,28,223,236,253,241,40,19,240,12,15,209,202,34,39,47,250,188,17,7,208,34,51,241,239,16,
217,3,41,232,228,2,28,31,16,223,229,13,204,221,124,71,215,204,226,221,4,51,34,4,6,0,175,251,50,4,
24,231,232,23,244,234,48,20,222,252,9,251,25,1,218,248,25,227,0,77,47,193,184,252,7,7,54,59,218,195,
235,12,27,25,20,232,246,242,233,27,49,245,230,226,14,29,18,252,247,231,209,15,39,17,56,243,173,245,1,28,
50,20,243,221,210,238,38,38,37,240,195,0,25,249,252,54,14,158,248,47,21,25,247,207,216,48,47,0,14,234,
192,214,47,78,25,253,214,176,234,65,53,37,246,212,182,237,50,50,13,0,244,232,238,7,20,21,12,214,227,44,
39,230,226,250,1,247,24,63,243,200,223,15,37,20,246,235,3,22,0,223,10,29,254,247,237,5,9,2,8,2,
235,250,9,11,0,254,13,254,230,2,19,2,246,2,27,6,233,240,249,6,30,255,239,21,246,233,248,32,34,231,
234,251,0,10,17,3,244,254,2,250,15,17,224,231,17,31,249,247,23,239,245,0,16,33,248,227,216,0,13,42,
50,245,205,208,2,40,30,252,248,253,3,238,0,22,37,249,220,222,2,30,255,24,222,239,39,2,44,25,185,197,
3,253,27,56,72,254,188,200,223,16,42,19,245,248,30,52,243,192,200,219,70,81,17,249,239,182,217,21,73,29,
255,10,196,225,3,29,8,229,48,17,208,43,35,175,222,0,246,69,75,7,186,209,10,3,240,40,254,245,57,226,
201,42,0,225,39,32,202,18,42,225,206,246,54,0,32,20,239,195,191,35,48,20,36,250,244,11,231,194,203,51,
103,36,235,235,233,183,247,36,14,37,35,217,5,0,173,26,47,250,45,0,225,15,235,207,236,9,58,72,12,236,
184,199,239,56,54,40,222,204,43,222,251,61,216,204,34,50,13,232,14,228,202,255,53,38,14,235,241,249,212,10,
17,33,3,236,9,29,242,188,238,31,26,39,33,217,253,25,187,223,36,10,233,49,57,254,213,198,248,253,16,60,
49,223,185,250,43,250,250,21,254,253,232,26,29,233,225,7,7,1,27,4,249,241,237,13,229,228,68,25,230,23,
34,251,213,221,231,235,23,73,44,232,9,243,195,190,18,78,38,5,243,253,185,3,16,237,50,26,4,29,235,209,
212,225,22,67,28,254,32,247,192,207,252,11,57,76,235,187,232,9,17,4,16,26,232,244,21,0,223,219,21,34,
30,36,241,216,232,215,7,68,8,253,253,222,237,30,45,237,225,30,255,230,255,12,4,22,243,234,24,6,2,2,
229,243,43,239,251,39,242,209,32,248,222,52,6,239,14,11,221,238,39,30,215,14,75,164,198,47,2,27,40,255,
233,230,224,229,43,48,245,30,10,221,219,214,49,24,250,58,2,183,12,16,209,36,255,211,44,34,251,252,216,1,
28,2,14,244,226,254,255,253,24,45,25,239,222,196,6,51,14,215,15,33,191,242,76,35,237,228,243,247,233,10,
51,251,215,230,38,83,2,237,232,152,224,81,34,18,32,240,218,241,15,16,18,238,238,212,247,71,34,246,244,12,
215,215,0,58,255,241,10,7,24,11,251,252,219,197,22,46,36,12,210,245,38,231,208,24,60,4,203,216,6,47,
27,5,31,213,192,37,29,2,13,244,190,249,36,50,20,223,226,3,5,232,10,45,227,248,14,28,24,249,182,199,
36,70,29,36,247,152,190,34,83,32,239,0,255,198,210,57,24,241,23,17,0,7,18,182,190,15,35,85,42,234,
233,221,172,7,53,27,11,37,18,193,204,18,3,226,52,35,238,17,20,208,218,247,14,62,24,253,238,220,238,220,
27,65,6,255,5,237,217,236,17,25,4,9,31,11,222,201,239,28,14,34,55,241,190,247,0,213,27,69,250,252,
11,244,241,255,222,217,33,55,34,16,222,225,224,245,30,38,5,0,11,236,221,251,12,253,7,31,250,1,9,246,
252,239,225,10,57,6,242,4,226,239,29,6,34,26,209,226,219,22,37,2,20,9,234,232,235,32,9,218,8,34,
16,6,246,229,255,254,5,3,12,37,233,197,1,44,1,248,16,252,234,6,37,234,233,16,0,249,8,8,250,8,
1,243,15,7,1,9,225,255,3,222,255,46,16,0,26,247,213,231,16,27,2,231,250,13,17,1,13,245,4,0,
207,5,43,250,4,28,235,214,254,31,8,241,250,31,7,224,16,22,223,218,40,25,229,20,17,233,253,247,232,18,
29,253,250,248,255,24,11,5,221,200,1,57,24,20,14,227,225,225,8,14,248,11,15,40,4,242,252,241,208,217,
14,107,55,174,1,20,200,212,40,34,254,32,25,214,215,25,0,231,25,11,251,16,14,244,228,243,246,14,34,4,
254,239,249,14,4,31,0,211,2,14,1,255,222,253,43,13,251,231,249,21,8,252,4,1,1,236,242,28,238,250,
29,17,0,6,17,239,191,242,14,21,44,252,238,1,243,7,6,247,255,10,2,13,18,235,227,15,9,0,4,13,
237,227,23,6,229,3,23,14,26,8,227,227,236,13,25,10,9,17,224,215,255,13,31,253,8,34,240,236,242,241,
6,14,2,21,20,244,222,224,12,24,2,24,35,209,227,3,3,13,8,30,14,241,224,252,3,246,0,0,2,24,
7,250,5,6,243,245,254,4,1,4,250,1,3,9,32,11,226,217,3,19,250,254,4,26,9,217,0,26,1,241,
250,248,253,20,13,12,3,246,230,4,32,7,239,236,244,250,15,20,11,11,253,229,243,2,5,252,16,13,251,247,
251,22,39,237,208,234,246,50,36,3,240,251,230,247,18,6,10,250,220,247,18,38,19,243,251,247,224,249,38,8,
254,15,0,245,12,10,233,228,225,234,56,78,7,247,198,192,9,56,21,5,40,237,176,240,49,42,232,231,31,33,
248,241,248,201,218,29,31,61,43,245,214,210,207,235,43,65,12,15,19,237,217,239,252,242,23,34,3,239,247,255,
11,6,221,245,40,26,250,23,230,198,249,34,24,17,11,230,229,0,16,16,23,239,208,253,20,24,16,17,248,206,
241,3,15,43,4,245,223,6,37,232,235,248,4,7,34,23,9,227,225,240,250,13,32,27,7,225,222,255,18,20,
13,244,245,244,253,9,15,253,249,251,6,26,24,224,209,5,10,21,32,21,3,208,211,17,15,240,1,33,4,231,
5,22,250,236,8,11,254,39,243,220,238,252,20,3,40,22,219,237,245,229,10,48,13,0,34,231,191,235,20,5,
20,50,17,231,235,252,227,6,24,235,2,27,7,241,247,21,4,227,249,38,20,227,223,251,10,24,13,243,3,9,
243,253,16,9,252,240,242,251,255,11,29,21,249,234,244,251,0,6,8,6,0,0,8,2,249,253,234,218,17,49,
33,17,238,222,233,252,14,8,7,1,238,246,23,14,12,7,224,232,15,25,8,244,240,247,252,21,38,16,231,225,
251,254,249,11,15,14,3,233,4,24,255,243,0,246,238,253,20,37,248,235,12,18,242,249,1,238,247,254,14,33,
28,236,230,0,251,245,251,27,22,236,240,15,12,249,3,3,246,3,3,1,255,248,245,255,17,8,6,11,250,239,
249,238,242,28,28,5,12,15,247,231,221,250,20,0,9,16,15,255,231,243,28,6,226,0,0,0,25,6,241,12,
3,249,4,0,252,4,254,231,243,18,35,2,254,251,238,254,9,248,252,12,2,1,13,13,6,249,216,250,19,1,
1,0,5,0,245,18,35,249,220,224,255,27,16,249,254,22,9,248,233,6,21,248,232,253,16,16,5,243,238,4,
21,251,234,23,17,230,253,22,251,250,4,2,9,242,233,3,24,15,6,243,249,17,3,239,238,243,253,6,21,30,
18,253,242,233,244,255,247,5,27,0,0,9,0,248,245,1,5,0,2,5,4,5,253,240,252,10,10,0,0,0,
255,243,241,3,16,17,20,9,241,237,239,232,1,23,14,21,22,9,229,219,235,249,12,23,25,20,1,248,231,227,
0,21,3,250,10,27,254,238,254,253,247,5,21,14,245,227,245,9,12,9,9,5,0,251,254,251,235,242,13,18,
22,18,1,234,237,252,248,0,7,8,14,7,255,0,2,243,244,254,4,7,3,2,4,7,2,0,251,245,254,0,
253,1,9,12,3,254,254,252,249,1,9,255,246,251,8,13,40,0,3,0,5,0,120,0,8,1,8,7,4,11,
224,11,210,15,96,27,40,12,20,17,8,4,4,4,0,0,200,212,187,255,255,175,200,212,187,44,30,40,135,55,
0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,120,0,8,1,
8,7,4,11,224,11,210,15,96,27,0,10,19,16,7,3,3,3,0,0,200,212,187,255,255,175,200,212,187,44,
30,40,135,55,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,
120,0,8,1,8,7,4,11,224,11,210,15,96,27,0,10,19,16,7,3,3,3,0,0,200,212,187,255,255,175,
200,212,187,44,30,40,135,55,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,
0,0,6,4,35,0,3,255,254,0,251,245,255,15,20,0,235,247,0,6,7,6,251,243,21,6,240,255,2,4,
0,9,251,244,4,255,0,1,15,7,245,245,254,9,2,3,1,243,10,10,253,254,0,248,244,8,19,6,250,243,
0,8,2,5,254,2,2,249,251,4,6,251,254,4,10,6,230,247,19,1,3,14,9,240,239,0,10,13,1,248,
249,253,6,254,6,3,243,9,12,5,247,251,2,2,251,1,10,5,248,250,0,251,14,5,9,255,239,243,6,25,
245,245,13,6,246,252,25,13,226,216,35,50,231,204,23,40,240,223,7,38,7,230,231,14,13,244,23,13,239,245,
253,3,8,3,5,1,236,251,8,6,10,2,250,248,252,255,25,10,247,230,241,36,38,234,206,12,28,243,253,15,
253,23,3,211,249,19,9,0,0,12,239,245,26,23,234,219,254,30,22,14,240,226,252,0,0,30,20,249,233,232,
251,29,25,0,249,236,254,26,11,215,234,32,19,252,10,0,236,242,1,14,7,3,10,249,241,251,18,27,238,216,
254,29,34,12,207,232,22,248,15,44,244,201,255,41,248,7,15,232,238,13,47,3,197,212,13,52,36,246,219,1,
43,241,198,248,45,49,244,219,245,17,27,230,200,6,100,29,185,224,19,0,219,39,59,217,207,46,37,193,232,54,
3,230,15,16,253,7,231,222,253,42,44,5,239,216,208,17,60,11,5,0,232,218,244,40,30,4,6,214,232,14,
13,14,253,8,11,233,251,11,253,250,251,19,0,227,36,50,183,202,50,34,21,243,245,228,251,2,21,7,1,248,
7,6,236,246,28,30,220,232,15,19,3,232,252,13,44,255,213,233,2,7,19,26,23,1,196,173,46,95,22,248,
204,174,23,89,20,212,238,246,17,243,11,55,249,201,211,14,48,75,6,176,192,11,45,4,44,26,200,230,250,224,
19,68,26,225,246,223,224,17,45,55,241,164,11,80,9,208,226,234,26,42,3,1,231,13,5,193,224,110,87,184,
207,226,231,68,68,245,178,231,21,9,16,43,2,196,243,34,10,240,22,19,192,217,48,107,226,173,31,252,223,30,
10,12,22,245,202,231,55,83,249,151,199,59,79,4,201,8,44,227,189,20,22,27,69,193,170,42,58,198,252,116,
248,131,233,89,34,177,239,100,42,169,174,24,67,28,5,202,237,17,15,44,222,228,29,237,250,6,7,30,4,210,
245,26,20,252,251,2,237,21,255,239,24,6,221,238,3,15,47,44,228,177,235,41,35,234,239,51,25,211,218,240,
2,32,80,7,188,205,219,62,62,0,246,233,255,228,217,34,108,250,165,12,34,214,220,27,52,15,232,243,0,17,
4,208,208,53,82,236,248,28,214,173,244,46,109,12,179,250,245,217,20,48,3,14,252,248,251,217,230,29,49,8,
244,55,227,174,225,8,51,53,28,249,205,216,246,9,25,40,11,233,15,223,233,20,1,239,37,4,251,46,204,182,
28,54,0,253,14,23,253,190,210,70,32,229,37,232,194,49,31,234,5,245,228,6,30,33,231,225,24,3,249,240,
20,49,198,213,50,28,242,2,233,253,1,9,35,228,246,6,245,10,67,232,183,31,11,222,0,32,26,3,232,236,
30,251,237,17,227,235,39,78,253,199,188,7,43,20,6,2,27,234,192,19,13,247,24,47,18,195,190,46,38,212,
0,67,230,230,8,255,28,2,207,206,45,87,24,201,195,26,247,233,45,37,16,236,179,241,52,33,26,250,183,230,
45,41,23,239,206,235,45,0,252,22,3,227,0,8,236,0,34,41,255,214,196,243,49,55,5,253,247,219,224,4,
30,19,253,46,248,206,5,231,236,45,33,11,249,241,3,3,189,215,64,64,36,238,233,239,178,215,123,79,198,239,
9,225,208,250,49,70,4,223,250,217,228,35,12,24,13,247,252,253,0,226,226,20,27,253,28,42,16,190,157,239,
42,91,38,252,15,204,181,212,41,84,12,204,19,41,0,221,205,236,21,31,23,45,31,206,192,222,253,22,66,37,
234,13,209,220,9,2,24,0,7,36,12,236,215,217,231,35,73,27,214,0,14,227,242,238,31,3,251,45,6,197,
239,40,250,220,17,46,30,231,207,9,3,224,28,43,27,0,191,218,237,10,92,50,187,237,51,215,187,254,68,64,
3,220,232,237,209,21,23,55,50,209,229,19,203,187,32,101,37,237,226,239,213,230,49,16,43,42,203,214,242,223,
38,54,25,237,212,255,3,252,254,40,35,233,190,234,65,25,238,251,1,251,16,15,210,206,28,45,45,32,212,175,
213,54,63,235,248,33,18,233,208,0,16,224,16,52,0,252,0,0,91,4,39,0,249,19,23,0,1,249,239,2,
9,4,7,250,255,2,245,252,14,6,8,0,240,244,5,5,5,6,8,248,247,2,11,241,250,18,7,6,249,239,
249,23,12,242,1,254,249,4,23,248,221,28,21,240,250,2,254,245,10,12,3,5,254,228,249,32,3,251,254,244,
13,13,234,5,12,248,246,0,18,18,243,229,244,35,27,231,232,3,20,10,237,3,14,242,244,7,24,1,248,247,
240,18,8,248,11,8,246,240,8,247,8,28,247,246,1,251,251,5,15,254,251,0,0,2,242,10,30,232,232,17,
20,3,234,246,15,8,1,248,251,15,5,236,2,17,254,229,13,24,252,254,246,250,255,15,8,245,255,5,5,245,
0,11,255,249,5,10,244,243,17,17,248,245,13,253,234,3,24,11,250,242,249,12,9,238,254,16,18,246,232,6,
14,243,11,14,251,242,252,0,2,30,254,235,242,4,19,3,9,246,244,4,255,5,3,7,248,3,6,240,248,18,
19,247,231,0,17,13,255,240,1,3,252,248,38,247,215,13,36,9,225,237,8,12,12,9,250,239,248,12,8,252,
255,6,12,0,233,240,22,20,254,245,241,27,8,232,246,16,3,245,11,15,254,243,1,250,2,0,12,253,248,7,
21,254,228,247,6,13,16,255,8,228,224,40,28,236,246,0,242,28,29,203,226,53,43,231,213,3,5,14,29,254,
209,252,55,237,236,32,243,246,19,226,251,61,0,193,254,65,248,215,0,18,253,14,30,203,230,60,13,203,9,24,
242,13,7,218,2,47,0,229,240,249,28,43,235,200,17,37,241,252,18,251,236,255,9,8,9,254,247,248,8,14,
247,248,2,18,249,232,13,47,248,201,245,32,29,254,238,244,15,25,219,233,51,14,219,250,16,14,249,243,3,253,
11,12,241,4,1,243,1,17,1,254,2,250,241,2,23,16,241,225,0,35,24,232,230,249,7,24,24,247,229,2,
255,241,24,16,238,255,27,245,244,2,237,252,29,21,250,0,239,224,19,31,3,242,237,1,21,12,248,245,0,0,
246,3,19,11,243,249,0,244,25,22,232,216,12,58,7,206,234,36,12,245,2,4,245,250,0,6,28,0,216,252,
47,240,241,249,0,36,12,232,252,242,247,8,27,21,243,253,215,253,46,16,230,229,29,1,237,23,26,241,222,234,
18,27,4,17,24,198,203,50,21,243,25,244,232,34,1,219,248,40,0,249,3,236,12,17,230,14,4,254,17,226,
251,6,3,21,252,253,15,10,203,221,54,39,244,232,8,21,245,216,251,64,248,214,17,38,2,219,226,15,43,239,
244,32,244,237,9,248,8,16,3,245,216,29,50,228,235,0,253,14,33,222,220,26,47,6,218,232,219,52,83,206,
193,33,44,214,223,31,33,0,236,243,254,24,10,221,245,48,7,236,246,247,2,14,25,249,218,246,34,20,247,3,
239,224,8,36,19,239,242,11,245,248,13,4,254,250,8,11,7,249,227,254,26,7,251,4,251,235,15,22,253,254,
243,237,3,26,23,254,242,236,233,23,51,250,216,245,4,17,14,5,252,233,2,26,243,206,6,52,50,15,184,192,
233,56,102,253,206,196,7,62,223,218,83,52,204,155,232,84,63,249,238,236,237,3,239,248,36,27,2,12,17,203,
150,2,124,79,232,189,205,239,19,74,47,195,223,12,233,9,52,0,227,246,9,23,12,234,180,0,89,69,6,149,
184,20,52,64,0,233,224,240,3,17,7,253,15,4,245,5,238,227,12,51,5,236,15,253,190,246,44,69,20,172,
216,29,57,0,202,239,33,40,240,228,15,19,217,254,22,13,3,243,225,255,70,17,181,218,68,42,214,219,249,32,
57,237,216,9,6,220,11,39,9,243,231,244,17,49,31,185,177,36,64,248,3,44,242,192,238,18,0,23,47,241,
231,241,239,20,26,6,248,251,232,237,26,28,12,3,245,228,231,18,21,0,14,251,247,11,255,249,248,2,4,4,
2,251,4,0,7,9,250,253,247,235,249,27,42,2,229,244,6,0,226,254,51,17,221,247,6,6,14,252,228,7,
14,251,0,250,0,28,23,233,220,252,12,7,254,18,16,253,234,249,7,0,1,253,0,245,8,41,16,219,215,7,
18,5,6,236,4,50,15,212,216,242,42,254,12,27,17,226,186,23,35,22,239,243,3,12,5,219,11,9,21,5,
244,240,247,246,11,61,235,220,56,222,170,47,75,7,242,209,199,25,108,29,189,170,227,92,64,225,1,240,210,11,
255,35,23,220,249,243,49,53,205,180,226,39,85,39,224,202,232,250,17,57,16,234,179,0,48,41,10,221,248,236,
248,29,254,4,248,1,19,29,10,211,217,234,13,56,32,247,225,248,50,9,204,184,235,64,83,67,233,155,188,255,
56,85,20,195,183,222,58,104,43,196,172,218,0,53,50,5,248,244,254,0,240,246,246,13,21,10,6,240,249,8,
16,9,231,232,241,10,34,24,13,244,230,245,2,2,249,252,13,16,12,3,250,253,249,235,253,9,251,0,65,0,
3,0,37,0,116,0,240,0,140,10,128,12,116,14,104,16,96,27,65,9,20,12,16,8,4,4,0,0,200,212,
187,250,250,175,200,212,187,44,30,40,135,49,0,0,0,0,60,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,250,0,0,33,0,116,0,240,0,140,10,128,12,116,14,104,16,96,27,0,9,20,12,16,8,4,4,
0,0,200,212,187,250,250,175,200,212,187,44,30,40,135,49,0,0,0,0,60,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,250,0,0,1,0,116,0,240,0,140,10,128,12,116,14,104,16,96,27,0,9,20,12,
16,8,4,4,0,0,200,212,187,250,250,175,200,212,187,44,30,40,135,49,0,0,0,0,60,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,250,0,0,70,0,3,0,5,0,196,0,240,0,208,7,184,11,172,13,
210,15,96,27,70,27,45,20,4,4,3,3,0,0,210,60,120,120,120,120,105,90,120,44,30,40,135,54,0,0,
0,0,50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,196,0,240,0,208,7,
184,11,172,13,210,15,96,27,0,22,41,19,4,4,3,3,0,0,210,60,120,120,120,120,105,90,120,44,30,40,
135,54,0,0,0,0,50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,196,0,
240,0,208,7,184,11,172,13,210,15,96,27,0,18,36,17,3,3,2,2,0,0,210,60,120,120,120,120,105,90,
120,44,30,40,135,50,0,0,0,0,50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,
40,0,3,0,5,0,196,0,240,0,208,7,184,11,172,13,210,15,96,27,40,16,34,16,3,3,2,2,0,0,
210,60,120,120,120,120,105,90,120,44,30,40,135,51,0,0,0,0,50,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,250,0,0,1,0,196,0,240,0,208,7,184,11,172,13,210,15,96,27,0,22,41,19,4,4,
3,3,0,0,210,60,120,120,120,120,105,90,120,44,30,40,135,52,0,0,0,0,50,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,250,0,0,1,0,196,0,240,0,208,7,184,11,172,13,210,15,96,27,0,22,
41,19,4,4,3,3,0,0,210,60,120,120,120,120,105,90,120,44,30,40,135,52,0,0,0,0,50,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,70,0,3,0,5,0,116,0,232,0,140,10,128,12,
116,14,124,16,124,21,70,11,22,13,17,8,4,4,0,0,200,212,187,255,255,175,200,212,187,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,116,0,232,0,
140,10,128,12,116,14,124,16,124,21,0,9,20,12,16,8,4,4,0,0,200,212,187,255,255,175,200,212,187,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,
116,0,232,0,140,10,128,12,116,14,124,16,124,21,0,7,18,10,14,7,3,3,0,0,200,212,187,255,255,175,
200,212,187,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,
0,0,40,0,3,0,5,0,196,0,204,1,140,10,184,11,228,12,210,15,96,27,40,8,30,13,13,3,2,2,
0,0,210,60,120,120,120,120,105,90,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,250,0,0,1,0,132,0,244,1,140,10,184,11,228,12,210,15,96,27,0,7,28,12,
16,8,1,1,1,0,210,75,120,120,120,120,120,90,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,132,0,244,1,140,10,184,11,228,12,210,15,96,27,
0,8,32,12,12,3,1,1,1,0,210,75,120,120,120,120,120,90,120,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,58,0,3,0,5,0,100,0,200,0,188,2,
208,7,72,13,60,15,124,21,58,11,21,12,6,8,4,4,0,0,200,212,187,200,255,175,200,212,187,44,30,75,
140,48,0,0,0,0,60,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,100,0,
200,0,188,2,208,7,72,13,60,15,124,21,0,11,21,12,6,8,4,4,0,0,200,212,187,200,255,175,200,212,
187,44,30,75,140,48,0,0,0,0,60,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,
1,0,100,0,200,0,188,2,208,7,72,13,60,15,124,21,0,11,21,12,6,8,4,4,0,0,200,212,187,200,
255,175,200,212,187,44,30,75,140,48,0,0,0,0,60,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,250,0,0,65,0,3,0,5,0,116,0,200,0,198,7,34,11,232,13,24,16,124,21,65,6,15,15,6,3,
3,3,0,0,100,150,150,150,150,150,100,150,150,44,30,75,140,56,0,0,0,0,40,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,250,0,0,1,0,116,0,200,0,198,7,34,11,232,13,24,16,124,21,0,2,
10,10,4,2,2,2,0,0,100,150,150,150,150,150,100,150,150,44,30,75,140,50,0,0,0,0,40,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,116,0,200,0,198,7,34,11,232,13,24,16,
124,21,0,2,10,10,4,2,2,2,0,0,100,150,150,150,150,150,100,150,150,44,30,75,140,50,0,0,0,0,
40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,185,3,25,0,255,254,255,0,0,2,
3,4,4,4,3,3,3,1,2,1,1,0,0,255,253,251,252,253,254,253,254,255,0,1,4,4,6,4,5,3,
3,5,4,2,0,1,0,255,255,253,252,250,251,249,251,252,255,0,2,3,5,3,5,8,12,13,13,15,16,15,
17,232,132,160,0,57,76,58,15,3,245,227,210,210,248,31,57,52,23,255,233,217,213,237,5,23,26,26,19,1,
240,221,225,240,2,18,31,27,12,250,250,245,243,248,254,4,10,8,14,8,0,239,241,250,0,2,8,10,5,3,
0,254,251,247,247,0,6,10,11,5,1,254,247,255,1,0,2,0,0,4,0,254,248,250,253,254,7,13,9,6,
1,251,249,248,249,253,3,9,14,11,4,251,247,248,245,250,1,7,10,13,5,1,249,244,249,253,0,9,14,14,
6,0,238,246,248,246,250,4,16,16,7,7,4,252,249,243,242,250,1,8,12,8,4,0,246,0,254,4,16,20,
3,222,7,7,253,0,234,233,1,2,18,13,1,0,254,253,0,6,20,22,11,5,0,243,226,224,232,253,14,20,
20,13,2,246,249,252,0,8,7,15,13,254,254,244,236,245,251,9,15,10,14,2,245,250,246,250,2,3,6,5,
0,254,250,252,254,4,16,15,8,252,254,251,248,251,252,2,5,0,2,249,253,0,255,0,1,9,19,8,3,245,
243,247,251,5,6,15,9,250,253,3,241,244,249,11,1,251,25,8,239,4,4,4,14,251,1,19,237,0,0,244,
247,251,251,8,6,238,250,1,8,17,8,253,2,22,12,16,0,250,12,26,12,183,156,200,26,51,34,30,6,12,
2,0,252,243,255,14,30,20,251,218,219,246,251,16,21,20,253,0,4,242,223,232,7,26,28,5,8,7,248,236,
243,14,21,13,6,248,247,236,246,0,15,11,11,10,255,232,192,224,12,33,32,32,28,7,8,255,2,221,206,253,
22,30,2,0,244,234,243,0,10,251,253,9,33,23,252,243,246,0,2,5,12,5,246,242,252,254,0,1,0,254,
255,2,4,7,253,249,2,9,10,4,255,255,251,254,3,7,2,250,250,2,2,247,251,3,3,1,4,2,4,0,
0,3,2,0,0,1,0,250,254,0,7,2,252,1,3,1,252,252,0,1,5,7,8,1,254,248,251,255,1,4,
3,2,3,2,0,252,252,252,1,3,4,0,4,0,2,252,254,0,2,1,0,2,0,2,253,250,7,2,254,3,
253,251,2,4,0,13,2,253,251,247,255,8,1,251,0,4,4,7,254,0,0,254,249,254,0,3,14,9,252,253,
253,246,251,252,255,11,16,8,0,244,252,0,3,4,4,4,255,251,252,1,0,0,252,254,3,5,6,4,255,248,
248,7,2,255,255,12,11,4,254,245,248,252,0,0,7,4,0,0,253,2,0,253,255,0,3,2,2,6,7,254,
253,255,248,250,7,9,2,1,0,4,5,252,244,246,255,1,9,13,0,255,255,0,254,250,0,7,6,2,0,1,
1,254,246,245,2,15,11,255,249,249,5,3,255,254,253,0,8,2,5,1,251,255,0,1,5,1,252,252,0,3,
0,2,8,0,253,0,255,2,253,255,0,0,0,1,2,10,0,251,255,4,7,3,248,246,250,2,11,9,253,245,
255,8,6,1,253,253,3,254,2,0,254,252,2,7,8,2,249,253,0,0,0,3,6,0,254,255,1,1,0,254,
250,254,5,10,9,0,246,252,2,5,5,254,255,0,251,255,4,255,0,3,2,4,254,252,0,0,0,3,2,5,
0,251,0,253,0,0,0,3,3,6,4,0,253,252,250,0,7,3,1,0,254,0,255,253,253,255,3,3,5,5,
0,254,253,251,3,9,7,0,253,252,251,251,253,254,2,8,9,4,2,254,252,254,255,2,5,5,0,255,250,253,
2,2,1,1,0,3,1,0,253,251,254,1,5,5,0,249,254,3,5,4,3,1,254,254,255,0,0,0,0,6,
2,254,253,254,253,0,2,5,7,0,255,254,253,0,0,3,7,4,251,249,254,3,6,3,2,0,254,0,255,252,
252,255,1,5,8,6,2,0,253,251,253,254,3,6,5,4,0,251,253,255,252,0,1,2,5,2,1,0,254,1,
0,2,0,254,0,0,0,255,5,5,2,0,253,0,0,254,254,0,0,0,30,0,3,0,5,0,116,0,200,0,
198,7,34,11,232,13,24,16,124,21,30,11,20,20,8,4,4,4,0,0,100,150,150,150,150,150,100,150,150,44,
30,75,140,56,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,
116,0,200,0,198,7,34,11,232,13,24,16,124,21,0,8,17,17,6,3,3,3,0,0,100,150,150,150,150,150,
100,150,150,44,30,75,140,56,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,
0,0,1,0,116,0,200,0,198,7,34,11,232,13,24,16,124,21,0,8,17,17,6,3,3,3,0,0,100,150,
150,150,150,150,100,150,150,44,30,75,140,56,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,250,0,0,129,2,18,0,1,251,255,247,254,1,6,2,3,251,1,251,4,242,105,120,72,1,211,222,
253,2,233,242,251,41,24,5,226,212,207,247,251,2,11,17,6,240,230,221,237,247,241,0,0,2,0,253,236,226,
232,233,238,248,248,245,235,224,232,224,246,235,41,56,112,108,63,37,185,240,255,45,33,53,62,52,38,242,215,213,
227,228,31,41,40,24,0,228,211,207,233,248,244,9,245,6,222,237,235,235,231,223,254,15,20,5,243,215,254,249,
241,242,6,30,7,35,14,27,250,23,243,0,252,20,23,29,21,8,245,250,248,10,11,4,5,5,249,11,10,242,
239,239,240,253,15,253,253,9,250,0,250,253,235,238,0,255,10,13,1,240,239,243,252,3,10,255,11,14,4,237,
231,245,3,21,9,254,246,6,12,253,240,254,14,15,3,10,17,255,255,248,242,20,41,21,253,251,243,35,45,13,
248,245,249,248,9,19,17,13,248,228,209,227,245,4,234,221,0,10,37,27,251,222,228,224,5,22,25,35,10,251,
244,255,252,3,248,13,22,21,16,0,242,234,240,0,2,14,11,249,255,251,249,252,249,255,233,240,249,240,4,14,
5,0,249,225,236,253,10,8,246,255,5,5,230,234,252,18,24,23,35,35,31,6,5,21,13,9,3,12,14,13,
2,233,221,247,255,247,242,226,7,53,44,33,246,233,1,10,21,241,243,25,29,22,29,244,208,221,216,245,251,19,
243,231,2,3,0,254,225,227,6,26,233,204,213,255,243,219,253,236,235,198,247,240,65,59,40,5,223,18,18,41,
30,32,42,52,55,39,1,245,255,254,30,42,36,37,251,237,232,252,0,1,241,231,224,235,229,217,250,224,203,214,
189,223,233,253,50,31,28,226,5,10,14,2,255,245,37,66,43,33,2,254,3,11,5,1,19,11,5,5,234,4,
252,3,242,253,247,224,246,249,237,223,231,240,0,253,248,254,239,1,253,15,12,1,10,14,28,5,0,11,9,13,
21,11,13,20,11,16,29,11,0,242,249,9,246,253,244,252,254,252,2,238,249,248,255,254,247,248,226,242,235,237,
250,254,240,238,244,251,0,5,4,249,252,6,255,6,6,11,15,25,8,8,30,22,33,17,19,12,25,35,24,9,
13,251,248,4,253,3,13,0,239,241,251,252,245,221,223,232,247,4,239,240,241,246,5,13,249,246,237,239,233,1,
255,235,250,4,0,0,0,252,3,16,20,15,9,19,8,252,4,17,18,1,248,7,11,14,6,0,245,233,253,16,
12,253,236,237,3,12,246,241,0,4,247,2,8,18,13,2,2,7,28,30,24,8,250,4,2,10,3,25,20,2,
7,8,250,0,254,0,0,9,250,4,248,236,237,0,243,226,220,246,246,254,244,244,248,235,234,240,248,247,234,231,
246,253,0,249,250,0,10,251,253,253,11,13,19,16,4,5,9,8,15,25,18,0,0,0,75,0,3,0,21,0,
168,0,220,0,36,4,32,8,72,13,168,17,106,24,40,10,25,14,2,2,5,2,8,5,97,125,137,137,150,175,
97,125,137,44,30,45,60,52,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,
0,0,5,0,168,0,220,0,36,4,32,8,72,13,168,17,106,24,35,10,25,14,2,2,5,2,8,5,97,125,
137,137,150,175,97,125,137,44,30,45,60,52,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,250,0,0,1,0,168,0,220,0,36,4,32,8,72,13,168,17,106,24,0,2,12,7,1,1,2,1,
4,2,97,125,137,137,150,175,97,125,137,44,30,45,60,51,0,0,0,0,40,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,250,0,0,252,8,6,0,250,250,254,7,12,10,10,6,3,0,255,245,254,4,0,254,
255,255,0,0,241,253,7,4,4,18,2,0,0,246,0,12,15,15,251,231,228,233,248,7,16,10,4,17,20,26,
17,251,243,232,235,248,252,243,245,237,250,27,27,38,37,21,250,241,237,234,235,242,236,246,5,14,25,21,0,5,
7,10,12,5,242,233,243,243,246,250,255,14,13,18,24,8,0,245,241,240,2,251,5,10,251,254,1,2,5,255,
4,5,0,15,251,240,246,255,5,5,250,10,8,252,251,248,13,3,9,1,254,253,245,0,7,251,248,6,3,9,
254,250,5,250,0,7,11,5,1,252,248,247,252,252,254,12,7,5,10,247,10,0,246,0,254,249,249,2,1,4,
4,10,4,1,3,6,255,249,250,248,0,2,0,251,9,1,5,1,251,0,2,5,4,255,9,251,0,4,250,255,
253,253,252,8,5,2,253,248,248,8,10,6,3,255,3,7,9,248,247,250,245,254,4,2,11,2,255,0,0,255,
4,0,246,255,6,9,252,4,253,5,14,14,1,246,246,242,245,0,252,251,253,253,251,1,10,21,29,42,45,37,
27,215,152,140,139,204,41,92,107,103,78,38,11,223,187,179,172,191,226,2,42,55,54,40,29,14,19,12,237,218,
212,210,224,253,10,19,27,22,22,19,6,255,244,234,244,8,9,8,248,240,239,241,6,21,15,8,0,8,253,7,
3,244,244,247,248,12,17,4,252,248,243,4,15,12,1,248,249,3,4,255,253,251,255,7,2,0,10,255,230,7,
13,1,16,0,250,244,248,11,10,242,242,11,250,18,17,242,8,253,5,255,1,253,243,241,253,8,4,18,10,255,
0,7,4,246,0,243,243,251,14,1,255,11,3,0,253,7,17,7,247,0,237,251,247,3,7,4,250,2,13,7,
0,0,247,2,5,6,3,240,238,3,16,3,5,252,245,13,9,246,2,250,252,254,253,7,6,9,7,253,255,19,
3,244,237,243,2,3,243,7,4,254,30,10,3,2,1,249,248,247,7,0,239,249,244,7,10,4,13,250,13,16,
253,253,2,249,4,248,250,2,0,251,254,251,1,6,0,5,254,2,10,252,0,12,7,1,1,4,249,3,2,244,
244,242,254,0,244,252,8,15,22,9,9,19,13,1,0,0,244,228,227,230,225,8,20,20,24,19,11,9,9,1,
2,0,246,254,246,238,235,240,237,0,5,24,38,31,25,11,246,235,237,235,238,248,249,0,3,10,12,21,14,13,
8,4,254,246,240,239,239,242,255,3,1,19,7,9,7,3,16,11,3,252,246,245,244,242,237,15,0,239,20,24,
0,14,247,0,8,252,254,17,241,247,14,247,254,252,255,3,253,7,0,3,6,251,0,0,7,4,5,230,255,15,
248,17,253,249,1,251,10,8,1,242,4,254,6,5,252,246,7,255,243,14,0,254,11,255,2,17,0,251,6,245,
234,251,14,253,250,13,4,250,7,251,12,19,242,241,10,0,254,1,247,0,250,252,13,34,0,241,243,235,33,238,
239,28,252,243,41,12,229,4,252,0,244,2,9,241,14,4,253,12,3,245,243,254,11,0,243,1,14,2,0,9,
13,253,238,0,5,15,11,228,232,11,248,254,0,15,10,243,0,20,21,20,254,239,241,233,249,2,255,2,4,249,
20,9,255,14,241,247,12,255,252,15,3,249,5,14,3,246,240,248,252,250,249,247,255,0,1,19,21,19,24,22,
33,21,245,210,184,183,200,248,30,40,44,42,35,29,31,11,249,229,221,234,235,234,230,227,239,10,27,41,48,37,
7,6,250,243,234,240,238,240,0,0,254,3,255,10,7,6,9,15,253,245,0,250,6,7,7,5,253,247,236,237,
5,7,12,5,9,251,8,16,252,249,237,254,7,4,252,13,255,248,253,253,23,7,241,255,250,13,0,234,16,0,
5,0,244,250,6,23,0,0,0,254,14,235,235,245,9,21,2,3,1,245,8,251,34,241,251,4,239,2,0,3,
10,254,243,252,23,6,241,247,18,4,251,1,2,17,224,239,9,11,16,0,249,8,13,3,231,251,255,252,6,7,
254,6,19,241,0,242,248,34,17,245,239,1,245,6,0,0,254,11,235,247,20,19,15,243,249,0,250,7,2,8,
6,251,235,255,248,254,26,253,249,15,247,8,21,224,0,11,253,34,8,229,246,239,246,8,3,23,0,252,28,229,
251,18,237,3,25,246,251,251,5,0,242,5,9,12,5,0,3,244,234,6,7,255,0,240,253,30,255,0,10,8,
3,251,246,1,4,251,0,254,250,255,12,246,253,4,253,6,246,255,7,11,18,6,7,17,252,249,13,242,207,209,
222,236,48,74,47,12,246,229,246,23,13,246,239,221,242,5,14,14,250,235,249,14,37,39,8,233,232,232,233,16,
25,249,245,13,7,10,24,4,235,245,246,236,7,14,3,249,240,5,17,4,9,13,245,250,23,249,238,39,244,224,
7,248,252,246,255,252,6,15,23,10,32,254,220,240,5,239,18,7,228,15,249,6,27,246,239,11,4,21,249,245,
0,243,249,2,10,7,239,27,250,254,20,245,16,248,248,22,248,223,246,6,251,249,11,25,7,14,11,241,2,12,
233,255,3,251,245,244,17,0,252,6,0,9,12,251,250,5,13,232,5,15,233,22,6,219,12,33,241,255,242,243,
18,251,2,20,249,9,244,242,34,3,247,1,250,240,6,4,248,254,254,24,6,254,4,241,23,251,233,243,0,17,
251,1,25,8,246,1,8,231,0,15,223,10,15,16,1,228,6,247,7,34,246,244,12,250,251,0,14,10,243,247,
10,245,9,255,239,3,250,11,28,251,3,6,235,0,4,254,4,250,13,10,254,244,238,5,14,252,3,15,236,243,
251,8,23,31,248,243,5,250,241,21,248,237,5,248,255,12,6,252,254,0,7,2,1,7,255,251,8,17,13,5,
234,252,247,229,251,252,237,252,25,21,33,29,7,235,251,247,8,7,239,235,237,251,1,4,252,10,12,3,23,34,
245,245,237,254,254,243,16,10,238,248,243,26,16,245,6,254,251,2,18,251,238,1,251,2,253,18,2,1,254,0,
252,12,23,232,246,255,4,5,229,246,5,9,12,12,14,2,0,5,250,238,9,0,248,2,222,14,25,238,15,255,
250,18,251,248,34,251,227,21,235,232,42,253,232,35,254,226,23,0,253,14,244,237,9,10,251,25,251,235,9,242,
16,34,231,231,17,17,243,245,10,241,251,22,241,30,7,235,0,30,248,222,41,237,207,57,248,213,65,235,241,40,
15,223,251,247,1,23,233,245,6,12,8,255,8,19,231,13,8,204,16,29,233,7,10,232,6,33,253,223,1,18,
15,249,252,248,10,9,249,228,26,243,16,20,244,246,226,29,8,229,14,12,252,255,2,7,255,255,12,231,11,17,
0,247,0,234,17,253,242,30,245,253,2,248,249,16,13,1,7,251,2,12,245,254,244,240,0,11,11,248,7,251,
255,6,246,8,14,244,15,24,241,246,0,252,9,247,255,11,233,244,23,253,252,3,246,10,14,249,0,253,5,25,
30,26,9,236,196,200,203,246,40,60,26,250,2,1,26,33,7,234,225,233,239,16,32,244,226,219,240,25,40,46,
17,234,255,255,248,2,1,233,230,3,20,18,17,248,232,239,2,21,18,1,238,8,254,251,13,14,232,0,11,232,
18,253,254,14,236,0,9,22,230,9,29,246,250,6,245,247,8,241,238,23,18,242,254,20,11,242,7,5,12,232,
238,8,8,4,12,236,213,32,5,15,35,218,6,46,229,224,11,230,30,231,21,233,246,56,9,224,20,241,9,36,
226,211,30,244,8,253,225,30,24,248,22,244,1,0,8,246,232,9,4,245,24,242,229,44,3,253,245,252,34,231,
240,26,220,14,73,193,223,64,249,249,255,233,1,5,11,14,238,253,16,233,7,24,6,0,242,236,20,2,251,17,
236,231,18,44,231,245,19,238,241,34,243,2,18,239,2,236,18,10,240,15,16,230,0,29,243,236,246,16,5,245,
238,18,48,230,249,0,4,20,24,210,239,29,211,16,5,255,20,250,239,40,231,21,23,222,2,1,253,4,6,227,
244,30,3,15,240,242,6,12,247,20,249,236,251,25,252,19,19,220,11,252,242,22,9,227,255,15,237,249,14,5,
238,12,36,240,5,44,253,241,249,216,239,0,8,6,10,3,248,8,1,9,25,7,240,239,8,1,253,16,253,230,
252,244,0,13,11,20,241,7,25,241,3,4,241,234,7,4,243,20,11,228,6,32,239,253,19,0,241,255,3,10,
230,5,19,229,15,29,225,230,40,21,227,247,43,235,224,41,16,226,14,239,250,2,253,254,16,254,9,246,253,25,
245,13,249,3,245,238,37,244,238,12,3,227,25,9,244,17,239,13,253,0,9,254,241,26,240,230,5,39,253,249,
245,17,0,239,253,7,7,18,212,15,21,229,22,10,236,1,2,252,18,232,30,15,209,9,36,225,241,10,9,254,
253,21,0,238,17,0,244,229,10,43,248,241,24,236,249,5,237,30,10,0,247,237,242,28,4,243,6,24,0,240,
249,246,1,25,252,246,40,233,230,46,224,242,35,240,204,63,23,199,11,40,227,7,23,223,249,51,236,225,26,252,
1,221,29,34,211,17,6,225,34,235,15,43,210,251,37,200,5,16,243,24,255,241,20,17,235,6,20,254,225,7,
230,4,25,236,18,244,248,28,0,17,3,236,254,0,29,8,209,0,6,224,33,10,242,15,245,238,25,1,249,10,
1,15,19,6,250,235,247,254,240,253,232,6,26,248,9,26,0,247,3,3,27,7,246,241,239,1,249,9,240,241,
248,252,16,37,7,23,251,242,8,248,255,10,223,253,242,6,23,5,243,17,11,217,8,44,227,243,22,243,14,15,
219,14,255,241,2,25,253,9,225,252,20,15,248,247,40,232,227,35,248,232,20,244,242,13,22,3,230,10,24,0,
12,7,237,223,255,17,16,230,249,10,238,18,8,4,23,23,220,249,25,245,229,13,6,239,14,22,237,4,253,246,
255,4,5,3,16,248,242,23,249,238,32,236,16,18,228,10,254,251,224,252,46,28,182,1,45,242,2,16,17,248,
228,11,9,226,20,0,4,2,251,3,253,9,4,231,245,20,249,240,29,250,1,32,246,246,8,255,11,250,250,3,
213,34,239,236,50,0,3,0,5,0,168,0,220,0,232,3,32,8,72,13,160,15,106,24,30,10,25,14,2,2,
5,2,8,5,97,125,137,137,150,175,97,125,137,44,45,45,60,54,0,0,0,0,40,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,250,0,0,5,0,168,0,220,0,76,4,32,8,72,13,160,15,106,24,20,10,
25,14,2,2,5,2,8,5,97,125,137,137,150,175,97,125,137,44,45,45,60,55,0,0,0,0,40,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,9,0,168,0,220,0,76,4,32,8,72,13,160,15,
106,24,0,2,12,7,1,1,2,1,4,2,97,125,137,137,150,175,97,125,137,44,45,45,60,55,0,0,0,0,
40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,75,0,3,0,5,0,168,0,160,1,
232,3,216,9,72,13,168,17,81,24,40,6,25,14,2,2,5,2,8,5,97,125,137,137,150,175,97,125,137,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,5,0,
168,0,160,1,232,3,216,9,72,13,168,17,106,24,35,6,25,14,2,2,5,2,8,5,97,125,137,137,150,175,
97,125,137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,
0,0,1,0,168,0,160,1,232,3,216,9,72,13,168,17,56,24,0,1,12,7,1,1,2,1,4,2,97,125,
137,137,150,175,97,125,137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,250,0,0,55,0,3,0,5,0,216,0,168,1,192,3,209,9,56,14,210,16,244,26,30,20,29,29,
22,7,4,2,2,0,187,125,137,137,150,175,187,125,137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,250,0,0,5,0,216,0,168,1,16,4,209,9,56,14,210,16,244,26,
25,16,26,26,19,6,4,2,2,0,187,125,137,137,150,175,187,125,137,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,9,0,216,0,168,1,16,4,209,9,56,14,
210,16,244,26,0,16,26,26,19,6,4,2,2,0,187,125,137,137,150,175,187,125,137,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,80,0,3,0,5,0,168,0,
220,0,76,4,32,8,72,13,160,15,106,24,40,10,25,14,2,2,5,2,8,5,97,125,137,137,150,175,97,125,
137,44,45,45,60,51,0,0,0,0,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,
5,0,168,0,220,0,76,4,32,8,72,13,160,15,106,24,40,10,25,14,2,2,5,2,8,5,97,125,137,137,
150,175,97,125,137,44,45,45,60,52,0,0,0,0,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,250,0,0,17,0,168,0,220,0,76,4,32,8,72,13,160,15,106,24,0,2,12,7,1,1,2,1,4,2,
97,125,137,137,150,175,97,125,137,44,45,45,60,52,0,0,0,0,32,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,250,0,0,98,0,4,0,5,0,168,0,160,1,232,3,216,9,72,13,168,17,81,24,35,6,
25,16,3,3,6,3,6,6,97,125,137,137,150,175,97,125,137,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,5,0,168,0,160,1,232,3,216,9,72,13,168,17,
106,24,40,10,31,19,3,3,7,3,7,11,97,125,137,137,150,175,97,125,137,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,9,0,168,0,160,1,232,3,216,9,
72,13,168,17,106,24,23,10,31,19,3,3,7,3,7,7,97,125,137,137,150,175,97,125,137,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,168,0,160,1,
232,3,216,9,72,13,168,17,106,24,0,10,31,19,3,3,7,3,7,7,97,125,137,137,150,175,97,125,137,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,75,0,
3,0,5,0,168,0,72,1,232,3,96,9,72,13,168,17,106,24,40,7,22,16,11,8,8,2,5,5,97,125,
137,137,150,175,97,125,137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,250,0,0,5,0,168,0,72,1,232,3,96,9,72,13,168,17,106,24,35,7,22,16,11,8,8,2,
5,5,97,125,137,137,150,175,97,125,137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,250,0,0,1,0,168,0,72,1,232,3,96,9,72,13,168,17,106,24,0,1,11,8,
5,4,4,1,2,2,97,125,137,137,150,175,97,125,137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,250,0,0,98,0,4,0,5,0,168,0,72,1,232,3,96,9,72,13,
168,17,106,24,35,8,22,19,12,9,9,3,6,6,97,125,137,137,150,175,97,125,137,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,5,0,168,0,72,1,232,3,
96,9,72,13,168,17,106,24,40,12,27,23,15,11,11,3,7,7,97,125,137,137,150,175,97,125,137,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,9,0,168,0,
72,1,232,3,96,9,72,13,168,17,106,24,23,12,27,23,15,11,11,3,7,7,97,125,137,137,150,175,97,125,
137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,
1,0,168,0,72,1,232,3,96,9,72,13,168,17,106,24,0,12,27,23,15,11,11,3,7,7,97,125,137,137,
150,175,97,125,137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,250,0,0,75,0,3,0,5,0,120,0,14,1,20,5,236,9,58,14,136,19,224,21,45,10,13,26,2,2,
5,5,5,5,150,125,137,137,150,175,150,125,137,44,30,40,85,52,0,0,0,0,40,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,250,0,0,5,0,120,0,14,1,20,5,236,9,58,14,136,19,224,21,30,10,
13,26,2,2,5,5,5,5,150,125,137,137,150,175,150,125,137,44,30,40,85,52,0,0,0,0,40,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,120,0,14,1,20,5,236,9,58,14,136,19,
224,21,0,3,7,15,1,1,3,3,3,3,150,125,137,137,150,175,150,125,137,44,30,40,85,52,0,0,0,0,
40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,3,9,11,0,232,231,247,240,226,237,
245,245,248,248,253,0,7,2,12,20,17,5,255,29,22,0,1,3,13,6,7,7,9,2,251,247,244,11,5,240,
244,242,0,3,245,249,3,3,240,247,19,15,239,240,7,15,15,5,234,233,5,19,5,254,0,253,250,0,21,14,
8,1,253,0,4,11,8,252,251,9,14,6,248,235,253,22,19,245,229,236,235,249,26,22,212,200,240,14,18,14,
1,253,0,7,32,42,2,233,1,2,18,22,14,0,1,10,17,7,252,1,252,253,251,249,239,234,225,238,244,0,
240,235,247,234,234,5,9,0,16,17,24,24,41,25,34,24,5,12,27,17,16,13,255,224,226,238,229,248,254,226,
211,220,218,230,252,251,242,6,18,9,14,21,18,26,41,38,33,31,8,255,5,9,2,1,251,238,241,243,234,243,
245,230,241,0,253,237,242,252,247,4,7,8,16,2,246,9,28,13,0,11,10,13,20,3,252,14,250,243,27,9,
236,252,0,245,235,1,0,245,229,234,252,0,254,1,21,15,248,255,0,7,8,0,10,10,6,250,1,16,21,17,
17,0,242,240,255,252,236,247,252,243,254,252,247,244,7,11,3,2,6,247,236,7,13,18,15,0,3,6,8,7,
21,24,250,235,240,4,5,250,239,239,5,14,15,19,2,244,255,249,204,153,199,249,38,51,13,240,31,57,27,60,
78,16,233,15,13,238,219,211,219,22,36,2,244,234,209,202,248,249,247,225,212,225,10,10,249,29,83,74,50,72,
60,17,223,193,208,0,0,242,2,252,233,246,24,39,42,10,226,224,235,200,178,206,238,254,21,39,30,21,11,7,
40,66,35,237,230,246,255,245,1,22,33,13,8,17,14,225,208,235,2,247,237,219,228,239,243,13,40,25,251,228,
1,12,10,241,253,21,33,18,20,22,1,253,13,18,7,247,235,225,247,9,231,231,250,13,0,233,10,11,17,252,
10,32,2,215,209,0,13,5,18,9,5,3,11,23,5,5,247,244,12,0,0,246,0,5,254,255,255,246,248,10,
0,232,246,244,11,22,255,1,5,21,13,242,236,9,18,250,8,0,246,253,249,6,252,250,13,8,254,3,4,250,
241,6,12,0,250,252,13,4,254,0,5,9,252,244,247,2,0,1,244,238,1,15,253,250,9,30,20,252,12,13,
237,226,250,19,7,246,249,19,19,0,244,2,17,251,234,251,249,239,227,235,4,25,4,254,18,29,4,247,13,19,
5,18,9,0,251,238,238,3,20,5,234,232,246,4,251,241,250,3,254,255,22,24,244,232,4,24,18,6,254,0,
4,4,6,13,6,249,248,8,8,248,236,230,243,5,254,254,7,250,234,255,24,18,3,4,0,252,14,25,252,3,
10,244,245,20,13,231,237,0,0,7,253,237,253,254,255,17,18,24,0,3,237,201,225,31,41,232,236,34,39,240,
219,29,53,9,223,248,249,248,28,255,248,13,8,238,233,6,243,237,1,246,1,8,2,13,17,250,0,6,10,253,
249,1,13,6,251,8,22,7,233,247,0,12,253,217,254,28,5,253,0,1,234,247,11,8,6,2,255,244,4,15,
4,252,245,255,4,244,7,2,255,9,14,1,1,2,240,9,11,244,245,7,28,246,246,17,11,4,7,17,254,231,
239,228,240,255,255,241,254,254,248,1,17,22,23,29,12,244,250,253,243,251,11,20,4,7,7,247,251,17,20,15,
16,11,231,197,211,226,227,252,12,1,250,10,246,238,36,52,16,16,42,27,242,225,243,8,20,253,252,9,9,243,
219,244,20,27,250,237,253,10,225,190,238,68,48,229,231,28,16,199,211,45,72,253,218,251,20,1,233,249,48,61,
246,211,32,62,237,207,9,34,4,227,212,248,10,212,204,23,50,5,228,227,0,33,12,232,5,51,242,222,16,41,
14,243,255,48,43,236,237,30,253,211,214,6,9,254,241,2,248,229,15,10,233,255,1,6,235,9,15,16,6,13,
19,3,14,2,5,7,254,244,246,32,20,212,236,0,246,229,2,12,243,254,248,231,11,32,24,249,5,9,10,10,
250,250,247,239,18,39,9,241,239,19,25,248,252,253,235,232,10,252,231,1,8,230,226,24,254,228,24,18,19,1,
17,22,249,31,25,8,9,245,243,241,12,249,241,244,8,3,237,1,254,223,217,29,38,236,0,2,241,241,15,16,
249,18,253,1,21,20,227,202,6,23,23,9,14,22,23,10,6,43,27,229,229,251,255,232,221,216,222,247,248,249,
241,236,222,240,17,20,8,25,33,59,71,39,30,37,254,235,1,229,199,233,255,3,5,248,208,213,7,39,38,8,
220,194,221,248,2,28,34,0,251,21,33,31,18,255,1,17,13,251,239,240,233,244,255,17,16,253,237,227,246,8,
4,254,7,11,252,7,26,18,16,254,242,6,1,242,237,217,231,6,22,2,4,0,214,241,32,34,15,0,243,10,
23,0,2,14,24,12,255,17,16,240,207,4,6,222,4,255,213,206,9,39,247,240,19,4,241,4,34,5,237,253,
35,25,238,9,46,2,254,1,253,6,8,219,250,23,251,225,246,7,251,235,6,255,228,242,17,8,241,11,21,26,
230,228,50,38,232,0,32,35,238,242,251,255,252,251,246,244,24,0,233,247,10,12,247,238,230,229,16,252,19,40,
7,16,14,241,236,3,5,11,0,238,24,249,241,19,27,26,255,246,245,232,221,239,2,254,24,33,244,223,243,15,
11,0,242,246,16,228,224,29,37,7,246,12,47,29,3,9,30,14,247,9,31,249,205,226,228,220,221,234,235,222,
233,242,246,12,17,15,38,61,31,17,44,46,44,50,9,209,209,2,0,245,240,194,168,220,36,47,19,236,203,234,
31,35,10,241,231,227,11,46,39,11,249,250,19,59,49,247,217,237,2,4,253,245,244,239,240,254,7,255,241,236,
0,3,249,248,235,0,30,24,12,18,26,28,34,19,241,245,249,214,206,246,1,239,250,1,247,254,22,30,35,20,
4,241,216,244,11,22,16,4,10,252,246,0,255,6,13,244,224,4,7,208,228,48,12,13,12,251,5,254,251,2,
255,244,237,26,12,235,13,6,18,246,19,13,245,2,232,2,249,34,250,232,13,239,248,220,23,15,245,5,18,21,
214,7,24,240,241,24,24,236,251,20,3,10,0,239,242,22,236,236,46,19,231,233,9,242,210,18,29,10,2,9,
241,22,10,242,253,1,4,222,239,33,24,251,12,41,233,222,15,17,243,236,10,7,19,6,216,0,37,0,215,245,
253,224,238,249,16,32,14,3,245,12,0,253,26,14,255,20,24,4,253,14,13,17,15,0,245,228,227,229,242,229,
218,214,222,232,250,8,246,2,29,39,53,44,27,63,75,51,46,12,217,205,220,202,206,235,205,182,5,45,5,8,
18,236,0,44,16,230,226,229,240,11,22,17,27,36,13,33,55,23,237,230,248,13,0,227,216,231,249,0,252,6,
16,251,230,251,250,245,238,235,254,24,26,4,5,22,21,52,48,27,5,253,251,221,214,225,230,207,223,24,34,4,
248,4,17,16,17,253,249,252,254,239,239,3,8,26,22,3,31,48,237,232,19,3,208,222,6,237,6,252,246,19,
247,15,5,251,252,237,25,0,222,20,11,12,17,36,244,239,225,8,40,24,8,237,235,215,16,7,224,18,26,253,
6,0,0,249,239,219,30,47,248,202,9,10,227,5,43,36,13,228,16,10,209,224,53,48,222,232,27,227,192,244,
50,51,7,231,254,222,220,25,47,39,233,223,26,10,254,3,227,245,46,18,251,13,228,232,252,16,39,251,220,246,
11,2,222,248,254,8,244,19,22,245,218,231,35,36,23,2,1,249,4,8,14,20,4,13,25,17,12,2,253,221,
221,253,244,196,189,223,244,227,232,1,5,8,17,52,74,48,17,51,74,83,48,254,222,208,204,184,227,243,198,199,
4,7,253,32,7,209,6,62,21,229,220,227,232,30,25,9,43,51,248,1,80,43,228,222,9,10,7,230,217,240,
9,241,242,23,21,235,206,244,255,234,215,243,5,4,1,5,17,8,6,48,56,23,37,20,17,16,13,7,9,245,
176,186,223,240,234,252,15,241,248,19,4,242,15,11,3,18,254,255,252,252,9,31,72,22,0,16,254,215,219,33,
39,10,178,199,244,249,12,0,16,27,30,209,180,2,70,216,229,19,67,23,245,30,5,255,21,0,242,235,235,240,
42,46,185,218,33,21,5,12,15,223,211,228,17,45,24,244,239,242,247,6,5,251,20,31,1,9,0,234,242,7,
22,22,235,193,216,52,22,251,255,14,7,19,245,10,2,247,225,6,30,255,232,254,15,17,13,4,13,222,222,16,
255,242,9,2,254,12,6,255,244,247,238,8,9,227,255,246,241,15,26,32,250,34,43,14,253,22,7,224,3,16,
13,244,216,7,253,226,244,5,213,196,215,238,250,234,254,255,8,35,50,59,69,29,10,70,77,64,8,197,201,226,
201,204,223,208,201,228,6,37,52,12,207,241,57,44,230,228,219,215,6,20,23,53,42,244,6,69,52,241,231,255,
253,244,252,248,239,246,0,243,253,31,6,219,235,9,247,214,222,255,249,236,0,15,11,9,25,52,29,252,9,26,
3,8,29,30,30,9,10,250,239,193,183,231,249,0,233,220,205,236,61,6,255,56,44,247,218,30,254,253,0,10,
63,59,13,234,10,8,225,3,255,220,223,219,0,5,239,3,9,48,42,228,232,235,197,234,11,243,41,17,217,233,
57,103,4,23,39,17,229,215,12,239,5,230,237,5,234,231,0,0,220,30,26,255,1,243,249,13,36,245,244,17,
21,243,15,4,228,232,0,244,18,24,230,245,7,2,34,23,24,19,223,232,249,18,12,226,252,25,7,229,240,26,
32,245,239,237,238,244,247,247,7,255,253,0,8,9,0,28,18,239,252,8,40,252,207,252,37,1,8,27,12,15,
28,14,247,3,5,232,232,6,249,216,214,226,208,209,253,240,207,230,12,23,30,57,55,75,72,55,65,91,73,253,
184,225,203,137,172,222,212,222,0,241,0,72,50,229,4,68,0,199,212,225,255,246,233,2,75,76,0,23,82,32,
243,237,0,10,241,214,220,253,8,0,246,23,31,239,228,0,0,223,215,229,246,10,241,0,29,244,254,35,33,238,
253,54,14,221,244,40,19,2,14,15,33,30,1,33,31,248,218,176,170,202,252,0,80,0,3,0,5,0,120,0,
14,1,20,5,236,9,58,14,136,19,224,21,45,10,9,30,3,3,6,6,6,6,150,125,137,137,150,175,150,125,
137,44,30,40,85,52,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,
5,0,120,0,14,1,20,5,236,9,58,14,136,19,224,21,35,11,9,31,3,3,6,6,7,6,150,125,137,137,
150,175,150,125,137,44,30,40,85,52,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,250,0,0,17,0,120,0,14,1,20,5,236,9,58,14,136,19,224,21,0,11,9,31,3,3,6,6,7,6,
150,125,137,137,150,175,150,125,137,44,30,40,85,52,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,250,0,0,95,0,3,0,5,0,160,0,240,0,160,5,40,10,199,14,36,19,0,25,50,11,
14,23,12,9,7,3,7,7,135,142,160,160,150,175,135,142,160,44,35,30,90,53,0,0,0,0,40,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,5,0,160,0,240,0,160,5,40,10,199,14,36,19,
0,25,45,11,14,23,12,9,7,3,7,7,135,142,160,160,150,175,135,142,160,44,35,30,90,53,0,0,0,0,
40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,160,0,240,0,160,5,40,10,
199,14,36,19,0,25,0,0,2,3,2,1,1,0,1,1,135,142,160,160,150,175,135,142,160,44,35,30,90,45,
0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,173,10,22,0,20,8,
0,249,234,255,245,10,13,6,240,248,2,11,20,245,254,7,6,20,243,251,35,28,247,241,228,15,7,200,227,32,
17,245,205,246,49,49,2,209,19,39,9,227,2,30,6,230,246,8,8,243,221,2,32,25,237,220,251,21,224,11,
22,3,4,223,0,28,12,30,249,234,18,0,22,246,215,19,42,253,225,228,251,8,215,239,24,27,21,247,232,65,
23,216,252,253,41,244,225,9,244,252,249,254,21,19,253,251,245,239,14,246,11,7,220,8,63,5,221,2,9,8,
223,221,16,43,247,208,34,70,249,204,241,30,17,242,245,254,4,9,218,240,68,245,232,9,235,15,12,241,8,16,
22,235,211,41,47,224,228,24,240,251,33,213,231,38,23,254,216,13,60,252,215,4,249,245,51,223,184,38,36,21,
248,214,27,7,236,18,33,242,230,22,23,9,17,203,229,13,234,6,232,11,27,245,236,16,34,241,16,251,2,57,
9,201,233,18,61,255,168,26,20,179,0,23,236,17,10,252,40,17,242,252,235,45,27,202,235,18,20,26,233,223,
33,0,0,254,223,255,243,231,5,31,38,247,210,21,63,18,252,211,254,18,246,245,7,9,203,7,26,1,6,243,
206,255,57,53,225,232,41,236,214,45,65,216,217,1,250,255,19,234,246,250,29,23,237,219,2,33,18,10,13,218,
236,57,43,208,211,25,0,4,249,227,1,35,219,242,18,2,14,235,36,46,254,249,234,0,2,244,252,238,9,20,
246,0,12,16,228,196,22,63,249,220,241,36,37,244,221,18,35,232,0,28,237,239,239,234,11,46,20,199,237,51,
21,225,250,13,251,16,245,220,11,67,238,181,63,26,222,228,5,36,15,231,235,57,249,251,224,230,34,7,22,230,
221,27,28,239,245,252,0,58,254,188,245,47,34,245,243,3,37,213,240,253,226,59,10,205,4,33,233,253,35,9,
221,209,73,69,195,198,29,36,18,216,203,31,27,249,210,44,66,207,205,16,32,45,211,190,48,56,221,201,249,84,
8,198,236,38,37,255,211,247,51,30,215,225,10,5,26,255,221,232,7,11,46,230,230,11,22,15,255,246,246,10,
27,245,238,16,234,251,18,246,25,228,226,21,14,47,219,204,44,10,249,20,216,2,36,255,43,201,238,36,243,5,
31,222,227,27,237,226,40,51,239,202,15,19,226,28,44,223,233,255,39,16,203,252,38,232,24,12,202,23,30,224,
253,14,18,253,201,8,53,230,236,24,2,18,19,214,209,41,31,243,252,17,43,225,193,47,30,227,227,232,56,16,
228,237,217,27,81,220,207,50,32,243,205,0,43,38,207,229,47,1,234,9,232,7,25,245,240,206,19,54,3,235,
225,42,54,225,247,217,7,46,235,232,23,12,22,219,221,87,8,207,194,12,27,244,8,12,17,248,15,249,4,34,
217,205,10,82,17,166,219,51,63,7,208,208,58,22,241,219,209,70,6,215,26,3,24,1,209,1,54,234,215,37,
1,248,13,6,14,8,199,6,55,245,232,210,18,22,242,1,24,2,248,18,248,243,4,31,242,226,12,12,236,0,
32,231,14,48,236,251,226,214,32,37,231,235,3,16,31,249,8,9,235,4,1,237,251,17,244,236,25,7,237,37,
30,214,241,0,38,241,209,46,24,248,198,9,78,238,208,253,7,49,255,147,240,102,20,248,236,249,74,235,205,36,
252,234,32,213,251,21,234,24,245,248,9,28,37,181,246,27,0,27,248,239,19,26,224,253,34,236,231,253,9,20,
243,235,26,246,252,29,241,30,7,179,242,76,14,253,234,230,30,16,210,253,47,19,218,227,10,42,253,194,53,39,
199,8,39,252,229,204,40,39,187,14,32,1,245,255,6,52,4,187,254,2,32,11,223,253,16,3,25,233,212,34,
26,227,235,2,18,251,240,31,40,235,253,9,24,250,204,36,14,193,250,18,248,2,1,2,18,37,3,231,246,5,
235,11,28,235,3,13,3,4,251,207,23,30,250,251,238,12,246,33,11,210,26,2,200,14,29,7,253,235,32,11,
1,26,212,245,34,15,249,235,236,21,247,191,255,68,70,221,133,54,96,227,226,245,251,45,15,226,233,253,60,254,
245,18,220,219,20,6,236,29,254,217,11,38,234,241,50,39,208,243,13,248,5,1,1,29,251,219,238,20,32,253,
214,16,30,227,252,0,242,23,7,235,21,15,238,249,14,15,243,8,18,241,1,19,229,223,29,37,220,213,12,8,
21,15,214,238,61,43,203,242,42,16,227,238,6,8,18,223,202,49,65,185,225,53,11,3,225,11,27,245,0,207,
33,82,205,184,23,61,248,221,252,253,30,246,215,33,55,248,186,248,50,38,233,218,28,19,226,246,14,21,240,221,
37,11,226,8,238,39,30,204,251,26,21,10,213,227,44,36,219,191,24,75,0,221,215,9,55,21,209,233,29,21,
11,211,221,42,29,244,234,244,25,35,229,232,5,11,43,226,223,44,243,231,28,3,0,245,255,248,249,12,45,251,
184,20,40,246,245,254,0,9,0,239,22,32,251,216,249,22,11,0,223,14,21,232,237,16,33,12,237,223,26,20,
234,229,29,252,240,48,4,234,242,9,9,12,249,225,242,40,13,230,251,8,7,25,232,220,18,39,239,237,12,11,
246,14,24,211,32,28,177,243,71,239,245,253,240,25,1,254,18,0,255,254,231,2,43,252,206,224,51,54,218,221,
18,53,3,213,237,33,5,213,24,29,208,242,42,10,13,230,242,16,241,14,11,241,18,40,204,217,38,26,237,225,
24,17,212,9,28,19,12,209,250,33,6,245,232,12,34,218,243,18,22,5,213,9,44,250,222,6,239,28,43,189,
239,57,37,228,179,34,72,227,237,231,25,16,207,247,27,12,16,9,249,12,254,238,9,240,235,32,13,222,242,4,
52,246,222,24,13,30,202,237,13,22,26,237,205,13,55,5,217,202,82,58,151,236,54,12,252,233,236,42,26,230,
246,243,22,12,229,7,1,0,250,9,0,246,9,18,254,10,251,209,6,30,28,230,212,56,22,215,0,5,243,5,
19,252,230,5,28,11,226,240,29,31,239,250,217,6,83,220,202,20,8,37,10,187,252,27,1,32,235,209,17,54,
240,210,16,57,33,186,213,58,33,5,206,214,60,9,204,238,5,49,5,211,11,39,5,235,231,34,30,195,249,71,
241,248,39,223,226,22,2,240,232,24,1,197,17,56,248,235,2,28,52,242,213,245,13,29,231,7,24,218,0,26,
255,233,17,242,221,6,33,247,234,25,1,0,4,21,33,204,17,22,224,39,251,174,2,87,15,185,216,26,50,249,
238,239,20,17,209,4,49,14,232,245,25,16,217,27,7,184,38,42,205,253,58,228,203,8,34,34,245,235,242,3,
36,8,204,246,55,244,231,0,246,41,28,223,228,23,25,2,231,238,20,39,228,196,45,21,208,4,30,241,8,253,
248,22,11,15,4,207,17,47,214,245,255,0,41,1,217,249,246,234,68,8,199,24,28,246,229,20,26,222,14,38,
213,242,53,0,181,24,29,248,15,204,31,10,200,48,27,219,18,255,237,14,19,247,10,2,244,13,249,247,255,234,
23,21,232,252,8,14,249,234,23,18,253,236,233,31,17,241,13,239,236,33,0,254,1,0,251,7,255,244,0,255,
41,221,194,34,60,27,212,183,46,104,214,172,249,76,28,145,3,89,248,235,227,248,71,33,205,213,6,24,252,253,
23,252,249,13,243,10,0,214,254,33,6,0,244,241,25,19,5,10,0,235,220,38,9,220,6,252,246,26,253,10,
28,228,244,0,9,32,231,209,25,0,15,35,235,246,7,8,240,0,23,215,2,79,215,200,50,250,239,16,246,27,
4,202,18,6,231,56,248,222,30,7,9,2,253,250,238,0,21,19,204,251,37,240,218,23,47,240,196,21,85,244,
170,21,55,246,235,245,23,15,4,248,234,236,49,241,189,45,23,233,0,1,9,19,5,25,237,207,18,1,7,30,
224,211,31,61,243,211,5,37,18,221,220,55,250,180,22,51,30,214,223,21,28,14,251,217,248,57,5,204,215,52,
49,239,221,239,58,29,192,220,31,23,243,12,253,238,240,44,10,222,21,3,1,4,30,208,210,58,8,222,10,29,
235,241,18,10,0,246,254,1,10,239,6,23,3,246,4,6,237,25,17,215,209,39,18,242,6,223,249,63,19,228,
230,24,44,233,192,13,30,13,237,230,54,31,200,0,9,232,42,254,196,23,1,246,36,231,241,47,5,242,26,253,
229,255,12,255,237,7,57,218,175,42,61,4,233,222,246,9,14,13,224,11,41,255,227,14,29,239,242,241,19,18,
250,248,223,18,23,2,252,241,13,239,232,7,17,16,245,246,17,11,20,252,235,12,15,228,233,44,2,228,228,248,
63,32,206,216,26,17,19,252,219,14,10,242,9,20,241,13,18,220,250,22,5,251,250,2,251,243,252,16,11,255,
4,2,11,254,245,248,238,30,10,204,25,33,230,3,243,0,43,248,220,39,9,239,254,213,39,30,204,24,4,241,
12,239,16,21,223,241,14,38,253,207,21,39,246,229,253,27,252,245,9,246,17,15,233,241,10,254,16,0,226,29,
6,225,14,2,252,242,8,25,248,13,24,223,228,54,251,245,31,178,239,83,230,239,14,250,8,246,11,35,219,250,
38,218,246,30,10,240,247,17,0,254,25,240,233,20,247,1,252,217,43,21,250,5,223,5,39,242,227,22,12,238,
242,244,24,30,245,1,5,255,7,222,233,51,10,221,231,2,51,53,209,175,35,68,15,203,225,15,251,36,5,205,
255,83,231,201,42,251,14,25,206,223,42,38,255,217,224,34,18,246,255,251,251,9,12,230,7,6,8,24,220,8,
32,236,241,2,13,25,220,243,35,245,230,255,24,30,237,218,10,35,11,231,247,1,4,47,240,189,18,58,24,219,
231,17,8,237,5,1,230,1,9,13,12,229,16,4,248,16,251,3,24,4,209,236,51,43,233,217,0,254,15,253,
4,0,221,255,25,22,5,240,238,246,34,15,232,9,42,253,218,220,36,75,245,173,237,49,249,2,4,204,10,33,
3,255,252,252,22,8,238,4,8,21,253,223,9,23,253,4,239,241,15,240,240,254,24,22,233,237,34,7,248,250,
4,254,28,19,218,5,248,250,24,251,240,241,21,25,237,227,16,253,248,37,10,234,220,13,41,17,237,224,255,20,
29,228,232,9,18,25,242,233,1,27,248,223,22,26,233,247,31,220,235,65,249,227,37,242,202,43,22,234,232,4,
65,253,195,11,19,8,14,225,248,51,239,213,4,254,28,4,232,7,16,12,247,242,3,13,11,245,229,255,7,2,
21,29,247,221,17,43,218,202,25,21,240,251,17,247,247,3,13,0,42,251,220,43,15,205,226,23,19,18,235,203,
29,48,249,217,238,65,6,198,16,12,1,0,214,18,45,17,240,222,20,44,231,208,1,35,27,211,220,26,38,6,
209,3,8,23,16,229,13,243,249,21,251,235,21,34,237,224,252,33,26,236,228,249,10,246,20,4,1,10,222,241,
41,24,235,252,228,23,55,235,198,247,45,40,243,191,22,56,233,221,236,18,33,15,224,235,15,10,16,243,1,10,
250,7,240,239,32,17,237,249,5,5,18,233,233,27,13,234,228,1,41,0,235,15,241,13,37,248,229,2,1,4,
10,29,226,189,27,43,236,250,24,12,254,226,16,7,236,18,245,238,16,15,237,24,14,225,249,19,20,250,226,0,
18,15,1,216,9,31,229,250,25,6,250,4,233,255,21,249,246,246,8,50,247,221,8,12,11,247,3,0,215,4,
55,12,189,233,49,37,243,197,5,54,9,233,223,24,37,239,231,253,27,2,223,11,20,0,247,243,12,8,7,242,
17,2,228,8,23,241,223,27,35,244,229,234,7,43,13,226,238,0,69,16,162,233,78,17,203,247,40,252,217,14,
15,255,32,255,209,251,24,15,4,222,4,38,244,251,241,228,45,23,224,252,9,12,3,221,4,37,5,236,251,255,
16,246,226,19,19,248,250,248,11,24,238,219,37,38,227,238,4,12,4,250,247,2,21,11,242,230,249,20,14,236,
247,27,255,228,1,24,2,4,0,245,11,12,241,1,15,239,5,9,222,7,12,236,27,255,234,14,4,13,5,245,
2,0,0,0,90,0,3,0,5,0,160,0,240,0,160,5,40,10,199,14,36,19,0,25,55,13,16,26,14,10,
8,4,8,8,135,142,160,160,150,175,135,142,160,44,35,30,90,53,0,0,0,0,40,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,250,0,0,5,0,160,0,240,0,160,5,40,10,199,14,36,19,0,25,35,17,
18,29,15,11,9,4,9,9,135,142,160,160,150,175,135,142,160,44,35,30,90,53,0,0,0,0,40,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,9,0,160,0,240,0,160,5,40,10,199,14,36,19,
0,25,0,17,18,29,15,11,9,4,9,9,135,142,160,160,150,175,135,142,160,44,35,30,90,53,0,0,0,0,
40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,86,0,3,0,5,0,160,0,220,0,
48,7,190,10,199,14,148,18,0,25,46,25,31,25,6,2,2,2,9,9,135,142,160,160,150,175,135,142,160,44,
35,30,90,52,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,5,0,
160,0,220,0,48,7,190,10,199,14,148,18,0,25,40,25,31,25,6,2,2,2,9,9,135,142,160,160,150,175,
135,142,160,44,35,30,90,52,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,
0,0,1,0,160,0,220,0,48,7,190,10,199,14,148,18,0,25,0,10,20,15,4,1,1,1,5,5,135,142,
160,160,150,175,135,142,160,44,35,30,90,52,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,250,0,0,99,9,39,0,250,249,253,4,6,5,4,0,253,0,255,254,254,0,0,4,5,3,1,254,
252,254,0,1,3,3,0,0,1,0,254,0,0,0,0,0,3,5,2,253,250,248,253,10,11,7,3,245,242,0,
9,9,3,248,252,0,0,10,12,250,239,13,15,239,236,0,19,16,252,0,11,4,235,223,3,23,10,13,17,243,
235,244,251,20,21,5,236,236,7,7,15,21,249,222,239,17,26,4,253,244,243,5,10,2,12,5,253,239,231,13,
22,2,2,252,0,3,0,249,248,245,3,23,20,0,243,249,242,244,8,26,24,250,235,239,254,10,9,2,9,2,
251,247,250,3,7,3,250,253,12,1,253,2,2,254,254,254,0,0,253,5,8,253,0,7,15,9,237,216,222,3,
53,71,40,223,176,190,244,46,67,35,254,233,234,246,250,243,243,10,38,40,10,229,211,228,1,25,31,18,0,242,
238,242,251,4,18,22,8,246,239,242,255,10,11,5,3,2,0,254,242,240,253,13,24,22,5,237,228,238,255,15,
19,14,6,254,247,242,245,254,7,12,10,4,255,252,252,251,255,0,1,5,7,2,252,251,251,2,10,9,254,246,
249,1,2,6,6,0,2,251,249,7,3,243,249,9,14,8,0,249,255,250,251,0,251,15,27,252,232,254,14,0,
236,255,15,2,8,4,5,247,240,253,254,19,4,4,13,243,236,2,250,6,19,254,13,11,229,225,253,12,27,26,
0,239,236,244,254,19,19,248,250,255,4,12,0,247,251,246,255,11,14,22,241,227,0,16,2,253,5,14,254,233,
245,14,15,4,1,251,252,0,0,0,250,252,5,17,10,0,0,240,238,248,9,26,22,3,241,233,245,5,6,10,
16,8,248,240,240,2,11,8,12,5,244,248,248,2,13,3,251,254,8,6,252,244,250,5,7,11,9,254,246,243,
250,2,3,9,13,12,11,2,230,219,220,4,48,64,43,233,190,201,239,33,49,25,250,241,238,4,16,2,243,237,
251,11,19,18,0,241,243,250,7,21,5,249,239,239,0,15,25,22,253,236,234,244,2,13,12,6,0,1,6,1,
246,239,242,4,20,20,13,247,234,245,255,11,11,2,254,252,1,0,0,0,1,0,1,1,0,0,253,0,6,0,
0,3,0,252,250,0,4,1,8,12,2,241,239,2,7,6,0,255,8,8,5,0,244,235,253,11,3,12,30,252,
222,247,12,11,248,244,13,26,0,219,242,28,15,255,15,254,242,221,231,52,32,248,246,250,17,1,226,234,16,33,
0,239,255,15,21,239,224,0,30,15,236,236,5,25,250,7,18,225,239,20,9,255,0,250,249,248,18,27,0,244,
9,233,203,24,41,249,14,30,250,208,234,9,10,15,12,3,244,7,16,238,219,0,36,11,2,6,239,226,4,16,
16,22,0,235,220,232,25,41,31,3,226,222,237,22,28,252,254,0,253,5,13,10,252,224,225,14,41,22,0,241,
240,241,0,15,10,4,255,253,253,0,7,2,242,245,0,21,31,4,236,235,232,0,30,24,253,246,250,255,10,10,
4,248,221,221,3,51,72,29,213,186,209,0,42,50,18,240,233,245,7,13,2,245,240,251,14,23,12,250,241,243,
254,11,16,7,247,238,244,2,15,22,14,254,236,232,244,9,22,12,3,250,250,2,5,255,243,245,2,14,19,12,
254,242,239,245,2,12,13,13,1,247,245,247,0,10,8,255,253,6,252,251,7,254,250,15,17,249,232,241,1,7,
19,33,6,222,232,5,253,247,17,36,11,241,240,231,248,12,39,9,231,250,1,249,1,8,9,3,1,252,237,246,
24,15,249,249,250,22,18,217,228,29,8,253,34,5,229,222,237,34,36,1,244,255,241,243,255,28,30,240,216,12,
24,253,238,233,27,33,252,247,249,237,248,33,8,208,7,49,8,245,250,232,246,24,248,7,8,249,10,1,247,1,
7,1,8,227,215,26,53,25,234,214,255,21,2,253,6,243,231,23,30,2,248,235,4,7,247,255,7,248,9,9,
253,9,9,242,231,244,13,27,15,10,238,214,8,24,2,3,8,247,235,4,23,254,243,12,10,239,246,9,12,0,
241,249,10,23,5,246,248,244,242,3,19,21,13,249,237,234,249,18,18,5,0,253,241,242,7,18,6,255,7,10,
247,229,225,253,35,41,31,0,216,209,235,13,32,26,7,253,253,249,247,249,249,1,9,17,13,251,243,243,247,7,
22,13,251,242,248,250,255,7,13,14,6,247,243,241,249,9,16,13,5,249,250,0,253,246,249,6,20,17,0,245,
244,241,254,16,15,244,2,29,6,216,228,23,33,250,233,7,32,249,235,1,5,241,254,17,14,12,255,224,237,9,
23,14,253,12,231,212,12,58,16,230,235,9,4,227,255,60,254,192,25,56,5,215,209,247,38,19,4,20,9,243,
192,1,55,239,3,28,224,249,5,252,42,27,214,206,12,16,4,37,243,233,3,254,19,19,233,234,7,0,242,2,
38,44,230,210,253,0,22,250,242,12,8,29,0,233,245,245,239,13,25,26,12,211,254,19,230,243,10,26,18,244,
0,21,233,214,11,1,0,28,51,4,198,248,4,224,243,48,43,252,235,13,250,205,2,20,17,6,250,23,16,225,
204,251,42,33,0,252,19,238,195,242,42,28,18,13,238,231,242,235,13,50,6,232,251,255,6,5,7,244,228,6,
27,32,243,201,5,55,0,216,1,27,243,242,255,8,30,20,240,223,246,255,3,21,17,7,244,244,0,7,251,248,
5,253,2,6,5,8,9,248,240,1,0,244,254,15,15,15,7,242,230,242,0,15,19,9,253,245,251,7,8,249,
242,1,14,4,3,1,245,253,0,1,8,5,254,0,255,244,251,3,17,21,254,231,238,15,10,254,4,0,0,4,
0,0,250,247,253,10,16,7,250,252,245,241,9,25,8,248,245,245,2,2,6,25,5,248,230,215,21,50,4,255,
8,218,243,1,0,29,0,3,20,2,242,233,222,240,34,64,21,226,246,9,212,207,3,61,57,20,224,186,252,28,
10,1,9,245,245,23,16,248,230,249,18,6,235,7,31,5,251,220,238,28,23,248,254,13,236,245,38,12,216,237,
18,2,15,24,246,237,1,254,247,2,29,250,231,16,40,234,206,9,21,36,248,224,22,249,220,12,45,4,227,235,
254,58,17,189,253,36,231,235,28,45,254,207,225,39,53,236,230,223,249,45,18,253,5,237,249,10,5,239,242,18,
37,242,222,29,5,225,4,34,0,232,14,12,224,226,252,48,79,248,177,235,7,5,15,13,23,236,215,29,50,241,
213,239,23,14,237,16,38,244,219,245,5,21,21,3,244,235,243,12,255,0,36,3,246,252,253,248,238,243,13,34,
16,2,249,241,232,252,12,9,12,3,4,242,239,13,23,9,237,232,247,15,25,10,248,250,2,0,238,239,9,38,
23,244,238,243,240,0,17,21,10,247,249,1,249,255,1,250,0,16,11,7,1,234,231,0,27,25,255,243,246,251,
249,2,21,24,0,237,238,248,9,11,0,5,11,252,246,12,3,239,236,3,22,21,248,244,10,5,231,239,21,25,
252,249,6,249,228,0,41,17,238,238,7,13,236,246,5,13,33,254,231,222,255,41,33,251,226,231,3,8,19,18,
236,250,29,245,239,11,1,240,243,3,13,46,23,223,234,233,239,0,31,43,0,215,9,32,239,231,219,244,47,88,
7,179,207,250,44,32,251,6,13,227,196,4,62,50,233,193,255,40,1,242,9,242,255,8,25,18,220,218,21,41,
220,255,38,249,13,223,212,38,26,255,3,252,246,0,9,242,232,3,32,39,14,252,204,166,245,125,18,231,42,7,
201,209,251,0,8,42,75,252,192,228,235,249,39,47,1,240,253,243,205,244,62,54,246,237,252,241,218,248,43,8,
2,6,12,2,244,250,241,246,250,9,8,28,17,241,0,254,239,235,244,21,27,0,2,15,255,218,224,36,43,0,
240,226,245,0,12,30,16,10,249,235,223,233,8,38,50,253,215,243,21,248,236,11,32,10,246,231,228,6,26,22,
20,1,236,242,233,225,3,38,52,26,235,223,227,234,12,27,13,2,5,3,253,248,254,253,241,247,15,29,15,252,
243,238,239,3,20,14,9,255,245,246,1,5,245,251,13,19,10,243,249,9,242,226,2,34,32,0,235,230,249,31,
3,245,14,237,242,28,16,245,238,250,30,5,244,255,248,247,0,7,18,10,3,9,231,223,1,34,4,227,12,34,
248,250,12,240,238,238,7,31,9,10,249,230,250,19,9,18,251,203,3,33,241,240,48,45,209,233,3,19,245,202,
251,59,30,12,26,227,188,237,11,24,43,242,251,21,240,235,250,18,15,254,255,238,227,27,35,0,227,253,34,253,
247,3,248,223,228,38,35,31,17,229,201,0,16,231,252,21,33,27,0,248,227,219,0,3,7,25,62,252,194,15,
217,194,67,80,15,247,222,187,214,8,87,67,8,234,199,218,252,250,7,36,61,42,223,195,201,242,17,47,59,27,
216,213,244,247,11,249,8,52,41,218,187,255,30,243,2,36,33,238,208,252,20,3,237,1,32,18,0,235,233,251,
10,243,9,40,8,255,235,227,244,9,25,20,251,249,2,250,252,252,243,15,21,10,3,247,237,229,246,17,34,38,
15,236,222,222,228,251,27,62,52,5,227,203,200,239,36,55,24,253,246,2,247,240,245,249,252,5,35,29,0,235,
232,241,250,14,30,20,244,231,247,1,7,17,15,250,237,3,9,247,237,0,19,21,9,254,254,235,224,253,31,25,
253,2,10,246,233,246,21,11,238,245,11,29,4,251,244,237,253,22,255,238,10,27,253,245,253,0,252,0,15,5,
234,2,18,244,251,12,9,5,253,248,240,252,13,1,253,6,27,41,206,177,26,54,239,235,56,16,215,232,6,11,
11,251,224,27,37,7,193,255,59,240,201,22,13,243,64,254,211,247,20,253,231,2,22,254,7,32,9,247,188,205,
79,62,195,0,59,222,203,37,30,230,218,45,48,214,215,7,15,1,33,234,253,69,242,146,214,42,103,34,220,229,
17,216,181,13,109,38,203,232,39,253,197,1,247,250,74,64,224,198,247,3,228,197,91,124,195,194,8,248,237,1,
12,36,29,229,224,7,8,241,4,9,15,30,246,211,239,14,9,13,16,14,246,239,247,253,6,245,255,34,14,231,
242,11,32,253,213,228,11,37,34,253,230,238,249,19,0,13,14,224,251,11,248,1,13,14,19,2,233,223,227,4,
36,37,25,2,235,214,230,11,20,2,0,11,17,6,2,0,232,212,240,20,43,38,7,241,232,230,240,3,17,22,
15,0,254,246,242,250,2,5,7,19,2,236,250,8,251,249,8,22,10,236,237,254,6,14,21,0,232,245,10,0,
254,12,8,252,253,1,0,3,254,238,248,18,22,0,86,0,3,0,5,0,160,0,220,0,48,7,190,10,199,14,
148,18,0,25,46,21,29,23,6,2,2,2,8,8,135,142,160,160,150,175,135,142,160,44,35,30,90,53,0,0,
0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,5,0,160,0,220,0,48,7,
190,10,199,14,148,18,0,25,40,24,31,24,6,2,2,2,8,8,135,142,160,160,150,175,135,142,160,44,35,30,
90,53,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,17,0,160,0,
220,0,48,7,190,10,199,14,148,18,0,25,0,24,31,24,6,2,2,2,8,8,135,142,160,160,150,175,135,142,
160,44,35,30,90,53,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,
86,0,3,0,5,0,112,0,112,1,248,8,233,10,169,13,14,18,174,21,46,7,13,26,4,4,5,4,6,6,
92,165,137,137,150,175,92,165,137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,250,0,0,5,0,112,0,112,1,248,8,233,10,169,13,14,18,174,21,40,7,13,26,4,4,
4,4,6,6,92,165,137,137,150,175,92,165,137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,250,0,0,1,0,112,0,112,1,248,8,233,10,169,13,14,18,174,21,0,3,
8,16,2,2,2,2,4,4,92,165,137,137,150,175,92,165,137,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,86,0,3,0,5,0,112,0,112,1,248,8,233,10,
169,13,14,18,174,21,46,6,12,24,5,5,5,4,6,6,92,165,137,137,150,175,92,165,137,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,5,0,112,0,112,1,
248,8,233,10,169,13,14,18,174,21,40,7,13,25,5,5,5,4,6,6,92,165,137,137,150,175,92,165,137,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,9,0,
112,0,112,1,248,8,233,10,169,13,14,18,174,21,0,7,13,25,5,5,5,4,6,6,92,165,137,137,150,175,
92,165,137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,
0,0,139,8,23,0,246,250,253,247,254,0,13,9,16,0,13,6,244,3,251,250,246,246,243,250,1,0,20,24,
26,12,1,245,243,243,241,241,251,247,4,5,12,17,14,13,10,1,2,250,253,245,229,231,248,251,14,18,8,13,
22,12,19,15,248,228,233,246,237,227,0,0,243,19,47,54,27,249,240,246,16,235,212,208,237,16,7,250,10,53,
52,30,252,250,244,255,213,203,226,253,0,30,41,18,2,6,34,17,230,240,239,246,0,240,240,253,8,7,4,12,
30,31,15,251,229,230,232,245,1,13,0,2,15,6,7,250,6,17,0,2,247,237,252,247,250,253,3,14,12,16,
10,17,1,233,239,240,243,243,5,13,19,16,15,4,254,6,243,242,246,238,0,5,16,14,252,254,254,255,8,5,
14,8,251,254,247,238,248,243,252,6,7,20,27,15,1,2,232,254,248,240,253,252,0,3,10,13,6,5,2,0,
1,0,3,245,250,0,248,252,0,252,12,5,255,16,5,8,0,0,0,246,244,249,246,250,255,4,23,14,12,9,
9,4,241,239,233,245,243,253,10,18,12,14,18,10,2,247,0,0,236,236,243,237,242,4,24,21,31,31,22,16,
1,242,216,200,199,220,246,31,50,53,69,51,26,230,198,209,224,238,218,232,255,14,21,25,62,60,49,54,252,215,
154,167,189,193,224,36,96,91,84,87,83,246,170,166,170,170,138,232,53,96,98,72,72,50,4,224,195,182,192,180,
198,247,31,102,103,52,18,0,240,244,215,196,217,250,13,7,251,5,23,32,34,247,253,10,255,4,246,230,238,252,
244,4,0,234,9,39,35,18,251,245,7,253,243,228,252,0,254,251,247,254,2,18,31,20,20,1,254,244,238,216,
243,5,246,239,255,27,40,36,20,6,249,250,232,215,220,248,251,5,34,24,31,22,6,250,242,241,249,246,229,236,
255,10,28,14,13,5,12,7,5,243,240,239,241,249,254,251,11,16,17,16,15,0,253,252,245,239,240,253,0,253,
9,7,14,12,13,3,251,0,240,241,3,252,6,250,252,0,13,0,4,13,11,1,6,248,247,242,250,254,245,3,
0,18,1,11,15,6,11,247,242,252,241,252,238,255,1,7,18,22,9,1,0,6,0,248,237,241,248,0,254,13,
7,254,15,13,13,250,244,251,247,4,16,18,0,236,235,238,249,241,246,20,55,73,66,228,171,190,226,232,13,53,
40,16,6,4,3,234,215,208,12,28,31,37,26,249,250,10,224,205,214,232,6,44,32,24,23,29,12,250,0,223,
227,246,230,233,248,15,23,9,11,21,10,12,17,32,255,1,250,220,206,199,224,236,246,16,76,112,54,31,24,27,
235,139,131,158,218,251,40,74,85,89,84,59,5,190,179,172,165,179,237,36,73,89,67,50,21,232,221,202,198,236,
251,17,20,21,5,14,14,4,248,239,255,3,2,248,247,243,7,19,0,18,7,15,5,246,223,229,221,248,16,33,
40,34,19,7,236,220,233,239,228,251,7,26,24,35,6,249,237,251,4,1,0,0,239,244,6,255,12,2,6,5,
0,10,3,240,238,6,9,0,4,255,251,12,255,3,252,248,248,1,9,3,4,14,4,250,250,251,0,244,0,255,
17,4,251,9,0,254,254,8,248,1,252,0,0,3,254,1,8,10,255,0,2,243,243,244,6,10,7,7,16,9,
7,254,251,239,232,240,241,2,16,45,25,21,252,0,251,217,220,233,254,4,19,19,31,40,13,23,223,210,214,243,
240,228,30,57,51,13,234,1,16,237,235,232,240,12,245,226,251,41,48,24,3,9,2,0,240,207,214,238,230,226,
75,76,45,40,25,15,188,143,168,215,12,59,94,90,55,6,224,185,189,216,222,246,12,46,82,52,24,242,229,217,
231,245,239,212,12,40,22,11,253,8,43,0,246,255,243,232,235,233,246,5,3,19,33,28,20,3,2,243,250,245,
197,209,7,24,23,27,17,27,1,4,5,242,235,238,228,235,242,3,36,51,25,20,251,250,233,231,239,237,238,2,
19,25,15,23,13,12,5,242,224,227,240,239,242,23,42,42,0,254,4,246,1,241,228,242,248,11,18,23,9,248,
244,251,3,13,4,255,0,250,3,254,254,242,247,5,6,8,15,255,1,5,7,1,249,233,236,10,21,8,0,251,
253,250,3,3,6,3,5,4,10,251,248,247,251,250,3,0,247,8,21,5,2,6,248,255,7,251,252,254,246,248,
243,254,20,23,6,10,10,0,245,246,235,250,251,252,9,3,11,17,13,6,5,246,239,243,249,2,2,7,15,21,
227,205,249,47,44,13,16,23,252,198,176,239,21,249,2,22,59,49,22,10,255,234,202,182,211,245,35,47,29,13,
20,46,22,242,215,225,241,249,240,218,255,29,43,30,5,238,6,23,18,6,242,203,204,253,27,10,227,0,47,63,
46,6,219,192,211,240,249,25,45,36,11,253,226,248,251,239,242,7,18,29,22,253,246,255,214,244,19,23,17,242,
233,239,0,14,26,3,1,22,12,243,220,248,11,254,244,242,1,3,19,12,2,14,22,7,243,239,6,250,248,210,
214,251,21,57,49,19,12,7,249,246,226,218,231,230,0,8,10,25,36,34,30,24,0,235,213,196,195,253,20,23,
30,25,31,39,15,2,228,206,225,233,243,5,15,23,25,25,17,8,244,242,242,238,240,253,254,9,3,8,17,15,
19,1,243,250,249,241,249,246,250,2,0,19,19,17,14,10,4,247,230,224,236,247,7,16,18,12,11,12,13,246,
247,2,250,245,250,244,1,0,4,7,252,7,7,10,9,6,5,1,251,247,252,243,231,247,0,9,22,14,19,9,
245,255,12,9,237,234,250,2,4,254,247,238,253,12,25,0,254,35,45,31,224,228,238,214,190,209,4,59,39,58,
51,43,7,237,212,200,212,227,245,230,10,39,60,80,50,6,199,184,180,246,21,30,52,56,252,196,243,246,253,208,
250,79,39,254,238,6,11,4,230,234,230,246,43,22,9,233,210,235,19,20,56,40,16,248,228,232,231,231,242,242,
241,4,21,29,33,36,43,0,243,239,251,220,192,219,0,255,6,26,42,44,57,25,0,250,230,208,205,203,224,3,
15,25,39,52,32,33,23,4,236,206,205,216,221,220,24,24,34,52,48,42,16,254,231,210,179,214,250,248,20,36,
27,55,42,23,0,221,191,218,231,252,8,21,33,8,22,23,17,255,231,227,229,250,0,1,248,18,16,21,21,6,
253,248,239,247,248,240,240,252,12,29,25,16,4,0,239,239,237,248,254,4,9,21,15,6,251,241,246,248,0,2,
1,7,15,4,5,255,252,240,247,8,8,0,242,254,0,1,18,17,15,13,247,241,245,243,226,233,4,14,35,33,
35,18,232,234,229,230,223,251,2,19,21,65,75,233,214,220,186,204,7,54,28,31,39,44,18,214,206,203,215,185,
29,81,80,55,23,232,168,183,0,42,42,20,7,254,220,204,223,23,31,37,42,42,15,201,221,220,229,217,243,58,
79,51,251,0,247,200,192,213,253,25,57,66,44,30,26,2,173,139,139,201,31,85,98,113,98,65,206,136,169,188,
203,195,245,61,100,88,50,30,254,222,211,220,242,222,221,255,17,12,0,12,49,37,13,8,0,233,225,222,235,250,
4,17,21,15,251,238,251,20,26,16,14,4,247,222,226,232,245,252,3,16,45,53,15,250,245,223,235,229,236,249,
21,26,34,20,1,238,237,239,247,4,15,11,4,11,4,245,240,236,244,4,30,30,5,250,251,251,247,251,242,250,
255,12,23,16,5,248,243,254,255,0,0,254,1,252,246,7,12,7,0,5,5,0,0,2,251,238,244,0,251,9,
13,13,17,10,0,252,247,236,248,254,242,255,18,13,7,15,7,6,243,235,254,1,1,255,242,4,23,12,6,233,
227,13,23,27,0,223,238,17,8,248,16,17,248,224,216,251,39,53,29,1,220,227,237,8,41,0,238,251,242,218,
252,33,45,48,251,240,254,248,229,234,253,240,254,4,12,15,21,22,26,5,250,242,0,238,229,218,238,8,244,254,
41,63,62,32,254,246,223,196,170,199,221,7,58,113,86,39,2,1,223,181,180,208,221,1,33,64,58,46,36,38,
229,171,206,214,233,255,28,30,34,40,42,28,223,207,217,215,212,242,46,54,68,55,18,225,206,205,213,219,225,21,
53,54,68,43,17,219,202,195,209,239,11,16,28,30,27,42,9,239,233,233,241,0,248,234,249,250,24,25,25,24,
27,253,252,227,218,228,236,240,0,34,41,46,43,11,236,234,213,206,233,244,10,24,33,36,28,10,0,247,228,236,
230,241,11,9,11,2,3,7,9,6,13,0,249,1,248,241,247,250,252,7,6,12,10,17,1,239,247,254,4,255,
253,247,9,23,9,3,250,235,237,248,247,248,12,26,46,26,251,237,240,248,236,218,249,21,25,28,2,240,230,5,
15,30,2,2,24,251,217,213,252,5,9,4,22,17,220,242,15,33,27,49,43,204,174,202,248,29,236,244,12,32,
39,44,26,24,10,232,210,201,223,217,231,6,6,48,90,77,49,254,208,171,181,204,1,17,32,57,51,18,245,1,
240,221,225,241,243,241,54,66,28,251,255,218,217,227,233,248,25,24,26,43,39,21,245,207,211,203,227,246,31,72,
42,27,253,239,231,239,245,242,251,230,8,42,40,26,248,222,235,250,251,15,2,1,253,253,0,13,7,248,253,7,
11,18,13,239,222,217,245,7,25,16,19,9,16,29,252,227,235,224,239,247,10,12,25,27,13,254,0,252,248,249,
237,242,11,9,17,3,252,254,0,0,0,242,255,8,9,7,7,251,4,6,255,250,247,244,248,0,245,13,9,14,
19,14,0,0,253,243,236,8,5,0,255,254,6,253,2,3,252,251,10,7,250,251,0,8,252,253,252,5,0,10,
8,252,249,0,95,0,3,0,5,0,112,0,14,1,96,9,24,11,116,14,132,18,174,21,50,6,16,16,7,7,
7,5,8,8,92,165,137,137,150,175,92,165,137,44,40,35,90,45,0,0,0,0,45,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,250,0,0,5,0,112,0,14,1,156,9,64,11,116,14,132,18,174,21,45,6,
16,16,7,7,7,5,8,8,92,165,137,137,150,175,92,165,137,44,40,35,90,45,0,0,0,0,45,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,9,0,112,0,14,1,156,9,64,11,116,14,132,18,
174,21,0,2,10,10,4,4,4,3,5,5,92,165,137,137,150,175,92,165,137,44,45,70,130,41,0,0,0,0,
45,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,255,10,12,0,26,20,0,44,51,8,
205,214,4,227,231,197,61,250,248,60,17,8,205,177,211,6,198,41,41,248,35,44,252,19,250,141,190,234,239,22,
8,36,50,8,4,223,209,231,202,153,24,15,39,81,25,176,31,31,159,202,200,19,193,33,94,217,12,59,205,231,
13,208,210,203,59,83,222,75,17,220,82,226,220,30,252,236,22,29,71,35,20,69,232,253,32,2,227,237,10,20,
17,71,18,233,21,25,192,234,251,229,222,23,39,35,233,225,245,15,179,225,0,215,216,30,4,15,205,242,246,244,
0,218,18,4,228,215,255,22,45,248,23,51,10,220,205,6,33,222,50,223,240,75,6,253,55,8,243,208,48,231,
10,41,58,12,248,8,208,4,241,38,207,234,15,233,26,32,44,9,186,18,36,175,9,23,223,240,43,230,14,24,
229,254,221,251,187,212,34,18,19,255,242,62,21,221,217,205,225,38,193,235,97,212,192,16,238,222,237,208,246,17,
186,17,10,236,8,232,246,234,215,223,220,241,10,247,243,11,12,250,215,201,239,227,238,253,236,188,42,242,213,20,
7,24,204,25,6,163,183,79,32,9,9,3,20,228,223,196,35,21,203,245,50,68,237,167,249,38,254,189,219,56,
245,187,247,25,0,252,17,25,182,222,218,215,45,225,176,31,10,231,182,246,246,250,172,252,43,206,198,28,32,219,
239,173,208,236,212,210,230,18,241,214,57,14,187,179,231,62,221,175,39,24,237,199,213,31,16,220,237,0,237,8,
2,29,247,241,59,185,4,40,253,242,22,30,210,24,22,6,255,13,24,241,228,16,33,164,23,63,190,239,240,239,
1,16,31,240,212,39,203,234,71,200,9,221,230,12,204,4,5,243,19,217,217,20,221,220,10,14,233,223,12,19,
0,26,38,248,213,232,250,51,222,10,51,247,22,252,10,5,236,233,247,49,26,212,232,255,253,33,214,240,42,0,
227,224,44,1,227,28,29,238,56,23,228,232,54,221,236,51,14,17,245,56,20,237,18,68,252,0,62,0,42,12,
4,230,35,67,47,34,20,19,219,34,254,230,22,69,25,5,229,29,6,253,205,41,235,34,85,184,216,17,24,240,
87,0,233,182,4,28,253,14,254,6,4,247,210,14,244,3,216,255,58,239,233,244,36,62,225,203,15,16,218,227,
25,20,11,7,246,40,237,201,30,76,217,14,4,213,68,45,247,1,37,11,0,242,29,10,14,255,252,59,37,1,
19,16,206,33,3,250,36,211,80,33,24,29,33,220,210,34,53,225,232,13,12,22,7,38,0,226,17,18,215,16,
252,247,250,245,9,24,235,220,17,238,211,218,215,210,38,1,7,24,30,248,200,225,211,11,5,13,4,28,240,40,
243,1,21,236,204,34,3,239,0,70,2,209,30,227,206,226,224,15,255,240,229,20,219,245,3,241,226,23,246,217,
40,248,0,238,13,253,8,246,237,229,23,252,0,55,231,230,49,9,239,1,234,1,248,0,28,233,17,218,209,43,
204,249,31,236,0,228,238,4,220,240,53,221,211,223,255,250,234,16,218,9,228,15,225,205,56,2,180,20,16,170,
197,251,24,252,235,231,232,223,252,217,3,41,203,230,3,14,4,178,242,48,0,250,34,243,0,242,223,249,66,42,
177,5,100,233,205,238,6,251,240,5,247,255,20,255,236,12,9,228,211,238,34,6,218,2,15,29,7,13,224,227,
16,234,13,7,237,14,9,217,22,7,223,219,8,247,180,5,30,31,244,23,247,205,208,19,238,205,16,0,239,20,
25,214,20,3,222,230,7,238,238,15,13,68,0,20,218,9,239,13,12,242,1,222,16,1,55,239,251,10,1,250,
233,243,3,236,12,61,246,240,243,17,6,250,209,239,27,14,247,0,69,230,229,9,12,231,20,205,249,54,200,7,
1,8,238,225,23,243,242,48,249,163,48,241,5,248,18,239,30,214,1,27,226,1,16,215,27,27,217,251,244,29,
248,241,232,30,214,220,248,25,32,216,245,5,251,227,212,3,36,211,206,22,249,19,229,213,32,229,236,214,42,13,
243,6,221,218,41,51,198,24,240,248,28,8,213,9,1,246,250,250,0,11,247,195,38,18,213,212,13,0,225,5,
49,211,1,232,207,84,216,204,245,28,212,1,18,245,237,230,247,220,57,224,195,237,29,245,184,30,29,222,231,222,
37,2,180,3,241,254,2,209,5,212,245,224,6,250,13,218,30,9,209,10,254,24,231,1,27,225,238,36,185,78,
24,217,251,9,3,10,202,244,47,212,251,241,14,240,252,2,243,236,205,2,234,242,15,8,194,225,16,28,247,249,
228,222,13,7,32,233,241,10,225,0,74,240,221,224,251,51,203,12,249,2,254,10,233,28,215,3,245,245,5,224,
246,252,20,202,222,244,249,215,251,251,15,237,195,13,1,252,230,239,38,212,186,239,40,19,233,214,3,236,219,250,
239,14,15,208,235,247,58,215,243,255,26,242,199,14,1,242,2,0,218,237,30,188,27,15,224,226,19,27,243,233,
18,224,8,9,198,255,25,248,234,20,243,222,1,38,249,237,3,242,239,203,41,2,193,12,217,215,250,2,199,3,
34,212,228,9,22,193,184,53,8,214,33,208,222,12,19,213,11,31,221,252,0,221,212,252,246,22,224,22,31,222,
212,45,10,243,229,221,8,34,218,223,23,43,214,239,16,242,244,253,232,217,46,250,224,19,53,244,222,255,33,202,
7,225,243,234,14,254,227,9,47,218,237,10,209,4,15,12,208,234,35,244,246,236,55,211,205,223,240,4,247,251,
35,17,198,4,4,51,214,226,222,254,224,253,246,0,25,231,12,252,224,214,22,185,38,231,234,22,251,224,253,38,
247,220,253,20,197,225,0,24,254,229,37,4,203,245,2,6,242,9,12,189,13,22,27,23,243,11,28,224,192,235,
12,19,208,34,236,9,29,239,0,33,191,43,244,0,8,228,24,10,3,241,15,247,0,222,228,239,242,19,247,243,
0,15,203,250,69,247,186,15,211,247,249,29,7,22,232,249,4,17,3,255,201,1,20,222,247,9,15,246,217,239,
41,244,196,4,235,24,14,219,0,8,245,242,22,251,11,243,244,211,0,14,203,216,18,5,233,251,36,224,247,240,
251,7,207,19,11,253,255,237,22,16,240,253,0,248,3,223,225,40,29,244,243,5,15,250,240,238,23,248,244,17,
231,245,19,0,248,243,225,232,253,234,226,246,17,16,243,238,242,224,45,224,215,251,242,253,248,245,247,7,220,2,
243,227,47,199,230,19,232,16,12,210,29,231,239,254,233,15,18,241,193,255,14,240,4,19,234,235,14,253,238,13,
236,11,19,210,13,11,221,27,0,227,248,4,10,230,14,7,226,11,7,215,49,10,224,2,208,21,25,202,247,6,
250,229,248,0,253,224,234,248,5,224,237,237,240,236,243,211,8,242,219,34,22,207,234,224,3,231,245,23,224,228,
30,1,216,253,241,253,0,255,219,197,254,52,220,219,19,243,249,232,245,255,211,13,234,236,6,14,233,213,40,2,
201,249,21,218,230,28,5,206,254,16,21,240,229,11,181,227,52,226,250,29,7,219,196,50,20,201,13,3,207,24,
187,32,26,207,21,2,240,21,214,32,233,211,33,25,232,251,34,240,239,242,25,33,249,207,243,13,46,221,230,65,
8,219,233,3,23,240,241,22,223,13,4,202,4,29,233,219,15,28,224,11,237,213,7,243,6,242,9,247,222,5,
20,31,204,217,242,14,247,220,6,7,246,240,226,10,0,243,3,246,213,40,6,224,10,8,0,231,254,242,31,242,
242,242,47,240,206,29,26,23,207,6,35,234,241,238,243,28,233,225,239,18,2,255,11,11,247,235,214,23,39,218,
23,232,250,0,234,7,13,242,4,22,247,254,250,2,1,206,13,3,21,223,16,255,27,247,234,8,230,0,5,254,
247,8,217,0,16,38,223,231,7,7,223,247,252,2,17,252,229,225,5,33,233,235,255,245,235,0,241,7,252,237,
29,239,213,38,222,242,48,226,239,15,235,38,1,220,20,10,235,249,234,31,2,230,24,251,240,249,230,2,242,15,
250,253,0,223,3,251,240,22,247,252,6,237,248,255,21,222,13,247,236,0,249,10,10,205,18,13,251,2,7,253,
177,2,2,214,30,227,231,24,209,3,3,240,245,223,6,29,219,245,3,250,23,252,230,242,225,36,223,239,8,246,
1,249,231,11,242,232,32,226,2,26,242,7,244,5,248,14,3,249,4,241,251,8,250,238,23,213,19,9,249,234,
241,23,0,230,227,29,2,218,222,28,244,11,6,239,22,248,244,4,0,5,253,252,9,226,245,0,234,31,247,234,
17,250,8,222,12,255,248,220,28,6,224,254,20,221,235,52,236,230,233,248,2,250,7,246,233,21,8,225,226,6,
240,236,23,250,254,242,244,6,252,10,0,200,12,21,220,220,29,15,197,252,41,249,238,249,237,3,2,2,255,231,
28,247,224,247,8,227,9,13,251,251,222,4,18,214,7,24,240,211,29,32,249,227,249,15,2,222,223,49,243,242,
252,228,13,14,218,253,254,237,233,235,0,254,234,243,4,243,15,222,207,36,249,199,29,0,234,1,228,250,30,229,
249,220,253,5,217,11,252,254,3,228,224,9,255,245,2,202,244,255,249,227,2,244,0,0,245,240,248,247,242,6,
254,232,236,7,249,28,252,214,13,11,209,248,21,245,225,26,248,251,229,245,2,23,234,238,0,0,11,222,252,48,
242,211,239,11,247,234,4,3,12,241,221,18,14,7,217,225,252,34,229,242,35,235,254,251,29,220,12,250,237,0,
9,234,247,247,237,26,23,231,244,0,249,10,221,22,3,237,14,9,244,11,1,233,6,248,18,245,21,234,4,3,
0,31,243,226,8,246,243,18,224,16,19,243,16,246,251,30,20,23,227,238,12,2,21,12,235,32,1,250,5,0,
58,225,228,5,254,34,5,229,36,12,7,250,1,16,4,249,7,254,251,27,15,230,236,42,23,234,0,19,255,10,
1,252,7,250,21,3,232,20,252,1,14,250,254,252,248,251,255,12,9,242,252,4,17,11,231,230,252,33,232,246,
46,226,224,0,9,26,229,28,16,232,6,30,239,245,11,10,18,250,5,1,250,251,17,6,207,254,0,4,241,252,
3,34,235,237,9,37,234,245,22,222,2,22,11,234,26,19,243,248,253,250,243,236,12,9,3,1,236,243,25,243,
253,236,251,31,220,244,25,250,252,247,244,15,253,249,237,9,254,212,245,16,249,230,237,4,10,237,253,250,8,0,
229,230,0,12,224,2,7,232,0,248,232,5,4,240,9,240,244,248,231,4,7,229,251,10,214,251,5,230,250,242,
230,239,11,26,219,226,6,1,239,236,250,253,255,246,231,4,9,246,251,242,3,249,209,23,0,220,246,246,0,33,
212,242,236,246,10,226,246,251,241,12,242,1,220,231,254,1,238,0,246,214,245,244,241,247,244,0,0,239,11,238,
228,9,242,0,242,223,22,225,253,17,241,255,255,226,247,255,9,244,220,25,21,244,247,218,238,27,253,233,234,244,
10,229,235,8,9,228,250,246,4,19,240,228,252,9,2,253,221,5,12,245,252,249,1,240,14,249,247,0,247,237,
233,1,5,242,3,227,243,10,237,246,227,1,0,253,230,235,7,248,217,8,12,236,244,238,249,250,242,234,7,1,
7,231,239,245,16,235,244,11,255,231,242,18,239,245,4,255,0,254,222,233,246,239,234,9,2,237,232,253,1,255,
245,245,254,249,251,222,230,0,32,236,240,35,242,237,250,252,26,0,241,14,240,251,26,231,240,16,246,249,232,14,
7,232,13,255,0,4,255,239,222,245,23,240,232,23,31,239,238,243,0,12,244,14,7,0,0,230,238,23,247,254,
252,0,2,232,10,243,14,15,219,253,27,228,249,242,23,1,234,8,255,11,250,229,4,5,244,9,249,4,1,1,
254,248,0,1,10,252,247,242,253,253,19,0,253,2,249,242,236,39,250,235,255,18,10,253,247,245,13,2,238,245,
23,252,207,3,28,245,240,3,12,254,226,2,15,230,242,3,254,14,248,236,252,28,237,240,5,255,248,239,0,14,
252,248,244,251,20,231,250,8,1,244,240,0,0,250,240,244,15,1,217,232,12,0,229,246,12,241,4,246,229,23,
0,235,239,4,9,233,223,36,233,233,18,249,242,0,2,4,13,5,231,239,2,6,239,9,10,245,233,6,14,232,
254,251,249,235,249,1,1,238,248,7,237,250,6,0,235,250,254,222,243,14,241,232,9,242,244,246,242,245,6,7,
233,248,0,3,250,240,253,8,248,245,7,235,0,250,238,12,12,252,247,0,95,0,3,0,5,0,112,0,14,1,
156,9,64,11,116,14,132,18,174,21,50,5,14,16,6,6,6,4,7,7,92,165,137,137,150,175,92,165,137,44,
40,35,90,44,0,0,0,0,45,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,5,0,
112,0,14,1,156,9,64,11,116,14,132,18,174,21,45,8,17,20,7,7,7,5,8,8,92,165,137,137,150,175,
92,165,137,44,40,35,90,46,0,0,0,0,45,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,
0,0,9,0,112,0,14,1,56,9,24,11,116,14,132,18,174,21,0,8,17,20,7,7,7,5,8,8,92,165,
137,137,150,175,92,165,137,44,40,35,90,46,0,0,0,0,45,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,250,0,0,52,9,14,0,253,13,2,250,242,3,5,3,233,238,32,249,238,9,17,247,8,9,232,33,
236,249,8,245,5,24,4,253,7,241,30,2,243,8,17,237,255,1,0,12,241,6,18,248,2,249,4,20,238,254,
12,3,17,5,4,255,252,32,245,3,9,250,25,6,233,10,41,227,234,29,0,228,8,246,0,6,228,1,9,14,
255,232,6,250,240,14,255,13,237,11,30,7,249,14,244,254,248,7,2,240,32,12,222,22,16,246,14,19,242,7,
252,246,9,249,241,10,241,251,243,252,1,253,237,244,244,53,227,230,2,1,14,246,8,253,17,15,221,27,7,240,
216,8,28,226,221,18,253,17,225,224,21,249,237,201,50,18,197,13,12,246,0,226,244,231,238,20,224,14,233,220,
7,33,204,224,25,5,208,240,255,227,16,250,237,246,24,233,206,1,10,207,237,21,227,0,253,217,223,12,251,222,
218,35,254,183,30,253,242,243,233,6,244,221,243,218,26,231,169,51,255,215,242,14,8,193,225,15,14,202,241,241,
7,231,219,213,245,246,210,242,4,253,203,216,253,247,235,193,15,4,243,219,254,221,221,1,237,252,246,241,246,5,
203,237,2,248,239,218,246,0,22,227,238,7,202,242,17,170,245,5,201,236,17,187,252,238,6,237,206,241,207,251,
2,215,8,225,210,238,2,228,235,224,227,23,228,203,252,24,225,229,221,247,248,253,211,237,0,247,210,228,36,228,
208,244,33,211,210,11,212,231,11,0,212,11,223,0,224,224,19,225,239,222,232,252,17,221,218,40,229,241,4,234,
229,0,255,231,255,0,235,210,36,1,220,13,223,233,30,8,247,250,4,7,235,250,18,16,234,211,1,13,33,229,
220,55,8,236,247,5,243,229,11,20,255,2,237,5,4,247,7,253,219,25,0,18,30,246,234,15,8,13,239,253,
7,240,246,30,219,249,28,215,234,49,226,254,240,12,242,211,12,74,186,38,13,206,15,18,239,11,244,16,16,220,
18,42,9,227,8,246,2,30,238,237,46,237,243,27,15,247,235,252,229,12,255,233,11,3,240,24,243,19,2,239,
16,19,231,253,53,251,242,53,4,229,34,1,13,17,249,0,254,11,9,9,19,236,31,4,4,244,4,19,237,2,
237,2,50,249,229,245,16,0,236,6,40,226,252,23,1,244,24,43,245,214,59,2,226,65,223,219,254,34,8,238,
7,247,208,53,48,229,192,32,18,251,18,238,2,255,23,7,219,254,22,249,244,245,218,29,18,232,12,8,0,0,
246,6,255,252,211,239,47,3,233,253,8,16,254,248,232,9,5,248,253,255,15,17,219,23,27,0,249,234,231,44,
252,215,228,16,12,236,16,214,1,7,194,8,245,235,232,227,40,237,4,241,243,6,1,248,240,2,31,228,227,40,
239,241,4,242,238,41,235,198,57,230,252,232,236,29,4,242,3,217,9,23,233,4,229,0,239,246,25,226,223,38,
0,202,1,17,241,231,247,24,249,226,4,229,225,13,3,0,255,35,219,216,58,10,185,29,255,238,16,251,254,237,
30,247,236,252,248,27,254,232,51,0,11,5,238,7,248,237,241,9,66,201,251,45,207,246,244,241,235,251,3,235,
14,29,245,231,252,1,10,226,30,238,235,232,0,22,221,215,15,7,249,233,16,0,214,7,36,15,224,232,40,1,
251,35,225,8,249,233,233,3,24,235,5,33,252,226,11,226,67,184,230,5,11,1,8,221,1,26,213,246,21,222,
210,14,2,251,236,24,227,0,26,231,26,242,230,0,8,49,233,194,75,30,229,21,236,248,248,249,238,18,26,223,
7,23,245,214,19,254,237,213,36,236,227,41,237,250,236,6,17,241,199,28,241,213,53,212,14,48,216,3,29,203,
3,27,253,218,2,2,244,26,239,247,253,18,34,218,6,38,222,228,45,14,229,56,202,16,30,238,253,225,6,24,
232,22,9,203,30,225,9,241,233,5,252,14,241,235,11,11,4,210,7,6,251,226,17,254,44,225,245,15,238,9,
249,21,252,21,253,172,20,57,197,0,21,17,15,217,2,36,23,227,41,252,241,30,30,213,39,242,0,19,254,1,
245,27,224,29,246,230,27,9,213,14,9,20,14,253,250,29,14,193,37,18,223,16,17,20,31,229,226,66,10,236,
19,21,0,34,21,231,31,15,207,26,246,3,251,249,5,16,10,188,44,245,242,214,14,255,21,247,21,210,27,54,
191,46,241,238,8,27,231,42,15,244,20,249,39,40,0,207,11,35,228,7,6,31,247,21,234,6,237,0,0,230,
7,29,202,59,3,224,48,242,187,41,216,38,225,226,64,208,239,19,246,20,242,242,247,6,15,247,224,42,237,247,
32,220,48,220,210,34,2,232,12,216,12,255,219,5,252,38,40,186,1,32,210,223,13,29,240,213,39,232,31,190,
234,253,15,245,209,19,227,234,21,16,245,226,9,247,228,252,236,226,251,15,227,13,255,0,230,7,9,213,218,253,
8,223,19,250,0,229,14,237,252,228,218,252,24,232,195,51,0,223,252,53,223,236,248,10,227,203,19,255,228,9,
237,230,13,239,240,225,202,27,224,238,251,248,247,247,252,233,238,10,226,236,18,231,226,21,12,232,217,3,23,213,
208,0,15,240,185,26,10,227,244,250,1,251,249,219,240,253,246,213,226,29,232,207,1,225,217,247,242,222,215,251,
48,216,237,247,240,241,247,241,222,252,237,249,239,252,223,238,44,220,235,10,227,219,254,248,18,224,248,250,14,30,
213,245,21,235,236,234,26,245,195,12,4,193,26,5,213,246,21,241,221,246,243,254,242,252,241,236,7,36,172,2,
36,226,206,17,15,222,226,8,239,255,218,30,227,236,2,2,214,225,8,7,224,248,29,209,238,21,224,243,243,0,
255,7,21,243,238,241,15,222,229,243,22,222,222,4,27,244,223,9,253,251,250,233,22,2,225,239,17,232,233,252,
236,22,1,222,20,255,245,219,9,7,12,218,0,18,240,36,237,248,0,11,246,7,220,13,238,23,244,11,44,199,
50,249,235,225,252,14,246,247,41,1,255,9,247,25,228,241,39,207,29,27,240,219,41,28,240,163,43,14,203,17,
7,221,40,3,232,42,225,253,233,7,53,226,235,24,13,0,246,18,28,12,8,209,29,21,237,1,252,24,255,10,
11,13,246,18,218,253,10,236,18,252,16,2,248,235,21,247,5,241,244,15,9,246,241,242,58,1,230,6,235,24,
32,224,250,3,15,27,223,248,39,234,208,35,0,244,236,32,1,253,238,3,32,251,244,12,252,6,234,237,31,15,
0,248,38,237,251,15,223,14,2,20,243,224,38,248,243,13,219,6,8,238,251,250,6,243,1,11,2,232,0,0,
32,6,229,28,233,231,254,230,17,40,15,249,236,253,0,23,29,206,0,15,252,3,231,244,16,218,247,39,228,237,
25,249,28,3,239,235,249,27,227,9,35,237,232,55,231,239,1,245,232,38,221,253,14,247,47,215,245,4,238,217,
253,4,238,214,48,12,240,255,253,235,252,7,227,4,2,242,11,252,15,244,251,1,253,12,214,237,252,6,5,231,
20,249,26,233,229,9,9,240,213,10,255,213,247,49,220,238,22,218,249,13,210,249,249,17,6,249,20,227,14,234,
23,237,188,55,236,236,9,1,249,0,254,251,238,24,244,223,242,34,251,223,42,219,40,39,183,51,22,206,243,247,
25,246,244,10,245,247,23,235,0,252,8,194,207,77,202,245,33,6,7,245,249,249,11,206,9,32,227,243,34,27,
243,253,236,33,238,214,252,49,216,245,246,55,7,203,246,47,253,197,216,14,1,191,31,18,237,8,251,0,0,219,
33,231,210,49,32,228,21,241,4,0,225,252,2,203,53,5,183,70,51,202,8,244,27,232,221,19,204,4,11,231,
219,14,4,252,9,2,237,239,220,41,231,248,12,233,31,223,13,45,194,246,36,225,0,13,239,227,20,22,14,216,
30,234,243,15,251,209,4,48,229,211,71,8,228,33,10,200,15,20,219,241,16,13,235,216,48,242,215,21,251,220,
40,13,195,47,253,235,7,27,235,252,7,248,228,39,222,246,22,230,1,243,15,243,225,25,11,230,0,38,224,244,
40,32,204,23,234,29,237,36,222,18,17,229,45,15,240,4,255,243,15,227,0,11,16,0,215,24,16,226,229,45,
245,241,14,246,17,31,218,29,253,255,216,37,26,199,230,29,3,250,37,233,226,48,24,195,11,19,18,247,244,236,
24,241,6,247,25,229,185,30,34,247,242,17,5,205,15,21,239,4,5,244,236,1,5,212,11,58,199,21,16,243,
29,218,198,70,240,228,63,246,246,216,28,18,224,29,243,238,0,203,34,38,235,246,25,248,7,37,203,245,56,230,
194,1,38,11,220,7,26,2,214,32,218,240,5,235,254,23,251,4,4,12,247,250,244,246,2,215,14,5,245,19,
246,26,237,216,54,7,194,51,11,241,250,7,9,238,30,15,237,5,0,17,195,37,40,200,27,33,240,43,229,253,
6,17,230,223,65,232,205,60,5,240,37,255,32,22,222,5,0,8,242,3,23,24,11,236,35,7,254,234,236,50,
241,220,74,255,238,0,17,47,191,229,55,219,249,18,0,26,9,16,53,191,233,2,28,9,0,239,5,10,223,227,
27,58,228,187,69,14,192,4,245,222,17,4,23,36,219,221,12,247,246,1,241,233,0,253,254,223,248,6,204,250,
24,241,16,0,242,24,233,242,24,174,52,4,200,253,13,69,177,174,74,186,244,248,251,217,25,6,215,241,19,178,
2,19,203,245,28,206,244,17,234,10,239,236,218,7,243,211,21,237,225,243,231,35,173,205,29,208,206,23,249,245,
213,242,12,213,245,230,28,232,200,15,7,243,210,185,30,232,199,45,231,244,24,200,186,44,240,195,49,176,223,63,
222,201,194,30,23,134,208,124,151,239,47,178,241,255,245,224,255,48,197,249,234,254,11,230,232,75,149,11,48,201,
244,14,33,215,164,12,241,178,57,252,192,253,1,252,3,194,244,12,243,210,224,249,22,233,10,5,183,21,12,245,
212,231,31,56,152,70,47,153,54,24,212,221,15,39,198,11,68,238,189,113,197,189,53,250,245,208,31,223,234,34,
210,174,42,25,206,10,194,224,37,253,213,0,56,240,6,240,199,61,253,186,33,19,3,20,18,7,31,242,252,247,
250,38,249,227,14,56,212,242,233,216,232,30,221,212,242,21,252,220,248,218,9,5,245,227,253,15,248,1,10,13,
223,224,19,225,0,26,235,242,69,224,228,16,245,11,212,241,32,252,212,23,239,0,17,250,5,245,195,10,23,0,
250,205,14,39,25,29,16,220,196,26,41,236,25,17,255,230,195,55,45,221,204,215,10,32,31,0,0,183,241,46,
239,33,41,237,232,234,248,17,73,0,219,8,251,230,246,16,60,26,222,250,3,205,1,253,62,46,197,226,51,47,
188,175,251,106,38,204,203,245,81,15,200,5,37,242,246,227,203,10,31,7,29,9,20,227,210,42,0,230,46,10,
250,245,241,235,30,241,4,73,248,250,241,182,217,23,45,21,19,2,208,207,7,50,24,21,25,252,249,239,1,4,
13,42,244,202,254,32,39,0,249,46,193,221,6,225,48,4,184,219,45,6,219,250,240,255,237,28,242,6,18,3,
7,238,16,44,26,250,248,16,9,5,19,49,32,241,255,205,250,35,27,6,243,24,4,197,181,229,33,40,250,225,
244,238,237,230,252,4,7,251,238,28,19,240,19,32,247,27,243,238,26,47,45,235,202,215,230,46,76,31,238,23,
212,211,1,21,37,33,250,10,208,188,225,32,11,66,29,178,168,211,31,77,39,6,207,207,18,21,245,8,54,37,
191,235,44,43,254,236,14,37,205,198,55,7,250,43,36,202,132,20,88,44,205,219,38,11,205,219,67,44,1,176,
184,77,68,238,210,36,11,190,239,33,41,250,11,34,224,236,251,31,34,240,200,227,26,19,7,12,30,16,211,223,
29,19,248,26,248,254,29,232,188,227,62,22,235,5,9,24,253,206,206,38,79,56,219,185,2,251,220,36,40,37,
201,189,36,29,239,240,50,19,203,226,20,46,224,248,3,6,58,0,209,255,248,251,24,249,209,2,90,25,233,28,
242,192,3,49,21,12,230,212,0,6,0,254,11,38,231,187,235,62,45,228,23,27,195,214,31,27,9,253,206,239,
32,35,32,247,199,250,1,8,34,219,240,254,222,64,22,222,220,23,39,20,255,205,3,24,1,234,19,55,27,2,
235,44,227,202,7,48,30,15,234,222,252,218,19,31,255,238,212,248,25,243,198,244,22,9,22,232,231,232,5,47,
49,0,213,193,248,68,53,11,247,255,239,243,34,11,17,81,213,187,58,16,237,12,15,248,227,244,17,41,7,210,
175,239,44,29,17,216,219,229,246,17,31,40,231,215,7,8,18,14,42,50,181,201,3,255,30,39,7,211,243,3,
23,28,28,191,251,48,244,5,241,4,27,253,241,40,31,195,210,13,38,28,238,207,231,56,33,5,209,207,40,37,
231,250,0,228,241,15,9,0,17,253,16,19,238,212,6,55,16,239,7,232,235,61,21,243,237,223,228,16,46,238,
27,9,192,12,247,14,37,5,3,218,203,22,38,247,255,239,252,240,4,18,5,8,37,9,213,251,6,15,39,246,
237,20,251,232,4,11,36,241,203,236,29,49,254,227,242,23,14,4,244,251,18,251,238,232,10,36,236,226,244,243,
27,53,247,234,210,245,10,26,14,5,9,242,188,253,85,59,1,222,224,246,5,42,30,49,227,183,7,6,225,42,
33,1,251,208,206,4,21,3,24,250,236,237,246,18,22,1,251,240,12,49,30,242,230,216,23,53,211,234,48,6,
208,234,3,40,11,213,44,42,212,217,254,29,16,29,9,221,221,251,11,0,25,23,221,237,22,255,224,5,31,220,
233,15,15,11,24,0,245,18,2,234,254,29,41,237,247,0,250,1,39,255,197,242,40,53,248,223,239,19,233,209,
18,32,1,255,197,0,51,247,4,254,1,0,234,237,0,14,10,4,228,2,30,25,242,0,26,236,219,14,83,24,
225,210,248,37,48,250,205,15,19,243,255,249,16,5,221,218,35,242,8,44,241,249,243,186,253,61,53,3,217,222,
202,239,49,34,27,247,255,15,207,234,66,35,244,255,212,213,7,71,74,236,208,230,0,5,51,28,244,238,208,0,
22,2,240,8,252,19,12,232,229,231,254,26,26,1,231,4,13,0,1,250,237,17,38,6,227,7,249,246,14,20,
247,226,248,57,16,214,21,16,254,253,245,0,7,238,248,26,234,253,33,203,224,20,19,58,5,185,255,59,9,217,
247,249,3,13,9,233,246,37,1,232,12,7,2,11,250,14,248,254,3,7,249,240,46,4,238,14,242,252,223,6,
16,248,13,248,222,12,35,7,246,236,235,233,13,29,253,248,21,1,249,6,27,32,225,232,249,9,251,4,30,44,
233,220,19,251,4,243,247,29,4,212,245,36,9,0,247,207,221,1,60,67,254,180,231,11,44,11,248,249,241,23,
248,208,39,63,254,232,233,16,12,233,30,16,3,248,240,251,10,9,246,1,22,240,224,253,235,245,20,27,248,249,
24,225,235,20,6,4,237,227,25,65,1,229,8,229,226,10,32,31,255,217,14,28,245,18,252,3,12,246,255,13,
17,12,236,199,0,51,9,5,241,220,246,236,250,45,24,229,240,219,16,32,238,12,246,240,14,3,1,19,16,9,
241,209,5,20,249,33,26,239,8,239,218,9,16,11,45,7,247,205,4,50,236,254,26,8,250,222,199,11,49,7,
1,253,226,224,25,32,240,232,24,22,225,242,28,24,247,226,255,50,254,201,252,26,43,25,221,226,3,251,229,37,
21,237,232,251,44,240,241,12,2,233,247,53,33,238,235,8,19,3,222,250,65,17,188,196,14,71,43,247,225,227,
246,252,26,13,247,2,252,240,26,252,238,226,0,51,3,239,240,254,25,9,243,26,2,209,0,242,10,62,247,217,
255,6,3,2,0,27,6,237,232,3,35,19,14,236,210,3,15,247,13,19,3,229,1,2,9,250,233,33,1,4,
7,209,12,33,3,236,3,6,217,244,31,26,34,242,207,245,4,41,4,229,0,0,248,255,40,0,255,243,229,255,
7,27,16,0,242,235,246,8,25,10,245,240,6,245,249,255,7,22,40,18,202,210,50,20,253,255,235,9,31,232,
6,10,252,3,235,18,11,220,236,242,27,32,247,220,14,50,237,209,20,24,239,1,26,223,253,21,236,244,34,2,
247,22,1,236,246,25,6,247,8,227,0,9,9,4,250,242,239,26,15,254,6,242,6,28,4,0,10,228,239,13,
25,3,7,243,232,22,20,232,235,239,240,5,254,4,11,20,16,255,186,240,67,31,252,244,0,240,241,248,7,47,
28,204,218,40,18,250,252,3,1,21,6,7,31,239,226,247,0,250,0,17,5,241,219,15,28,253,235,12,5,234,
253,246,24,33,246,233,249,16,244,7,16,248,3,12,232,239,20,23,23,3,215,217,28,48,3,255,249,230,252,248,
253,23,14,27,253,211,240,7,20,41,240,228,240,12,3,255,0,10,8,229,244,17,8,40,8,197,220,38,39,16,
233,208,13,18,241,14,11,238,13,239,188,9,74,70,236,196,244,9,20,28,4,252,253,228,233,17,1,29,0,254,
252,254,6,242,33,22,227,231,3,253,244,25,6,248,209,0,14,248,38,5,221,246,18,230,32,49,234,254,242,225,
5,9,36,36,230,221,2,238,0,58,53,2,215,207,5,32,37,13,227,235,251,228,28,25,230,246,246,248,9,244,
227,22,31,251,231,234,28,27,12,8,228,235,253,9,34,24,7,229,236,250,255,57,31,209,227,253,240,16,39,27,
246,245,244,224,245,21,38,6,234,220,245,20,26,27,255,202,249,24,10,4,6,0,244,235,252,13,30,253,245,12,
8,244,234,12,16,8,7,211,227,35,36,227,220,34,22,1,255,218,242,30,39,240,242,1,254,2,250,15,6,26,
7,246,224,228,28,11,16,255,222,244,247,18,0,9,252,255,12,245,1,247,14,12,7,253,227,246,24,44,245,249,
11,227,4,34,7,245,12,253,215,4,248,5,33,232,246,34,237,202,9,36,15,227,228,33,24,25,4,227,238,253,
245,13,19,252,7,15,226,224,8,41,56,235,214,246,5,11,15,5,234,6,253,237,11,26,1,5,254,253,223,250,
36,38,5,214,222,7,14,18,7,243,242,232,14,16,1,1,251,1,0,249,253,26,7,223,235,29,28,2,232,0,
1,253,255,19,4,255,248,15,1,250,8,251,9,3,242,21,2,250,240,243,17,10,248,15,244,229,8,15,251,1,
254,1,8,255,252,251,251,6,250,6,5,255,229,234,35,28,243,254,4,3,255,1,21,234,239,38,24,240,10,251,
219,12,26,255,232,246,31,18,220,241,12,33,5,246,241,223,255,10,2,22,0,216,9,22,253,243,255,1,3,9,
4,0,250,1,26,255,255,3,15,2,8,242,252,24,239,222,18,39,215,233,17,239,12,7,254,1,3,235,4,29,
252,245,250,16,9,241,255,3,9,236,17,29,237,226,26,40,245,240,239,233,35,25,252,233,232,231,10,18,6,12,
10,5,229,207,6,37,36,8,251,253,244,241,8,39,34,254,215,211,2,3,21,26,7,228,234,8,6,249,253,22,
5,4,251,253,243,3,16,246,255,6,240,6,12,251,250,3,0,242,239,21,52,245,241,22,9,240,236,7,249,15,
17,0,253,246,229,240,43,255,223,28,251,0,15,241,235,245,3,20,21,253,243,243,1,15,255,253,7,13,15,5,
254,248,240,9,21,11,2,253,248,247,252,249,242,15,10,255,8,253,202,240,24,29,27,250,232,246,250,10,22,8,
249,243,244,242,17,12,20,11,240,243,232,252,21,14,13,27,244,215,247,8,34,8,230,0,245,16,20,254,239,17,
244,224,16,22,20,0,241,250,238,241,28,38,251,244,237,252,21,241,239,242,22,32,240,240,249,4,3,245,5,0,
0,14,13,241,252,11,247,13,12,254,253,247,238,11,42,8,3,243,242,231,4,28,248,0,25,2,232,242,3,20,
13,237,247,255,243,0,30,7,245,254,251,240,7,8,25,19,209,227,34,16,251,248,0,5,0,1,14,2,227,241,
23,16,234,249,23,243,252,6,18,24,5,242,232,9,4,4,13,0,3,229,237,4,30,18,231,246,3,3,244,15,
18,231,239,0,19,0,246,2,24,247,253,10,2,3,9,249,229,7,5,7,16,1,252,252,0,3,3,250,1,4,
246,247,251,30,9,241,0,239,254,28,246,237,12,19,248,227,255,26,11,5,248,228,3,18,251,4,11,245,246,231,
252,34,12,0,251,251,9,0,253,12,13,252,4,1,254,254,4,19,239,1,20,231,250,25,5,246,242,241,5,8,
6,5,228,220,2,15,11,17,0,247,243,12,15,247,244,0,15,12,7,2,238,242,251,27,27,249,230,7,6,247,
6,249,13,33,253,249,236,255,23,1,20,19,236,215,238,13,23,22,0,229,238,6,240,12,22,249,2,247,240,229,
246,24,28,16,252,203,247,29,250,20,24,248,234,240,12,14,0,15,23,247,255,0,8,13,2,12,10,255,240,253,
253,253,9,8,254,227,243,11,5,238,13,250,216,8,25,0,254,250,0,1,245,9,1,250,18,8,6,8,232,11,
49,245,235,246,3,7,7,10,246,8,253,2,17,250,246,11,0,0,2,236,250,246,249,23,253,242,255,247,7,8,
229,245,25,13,254,247,255,10,22,6,244,7,255,255,2,24,9,243,247,252,9,15,0,244,4,19,249,253,0,238,
243,1,5,10,0,242,252,251,244,5,6,251,251,8,1,0,12,17,15,246,239,251,254,253,25,4,251,248,246,0,
5,6,253,23,23,242,239,239,20,12,4,0,248,254,12,3,253,12,234,239,23,23,1,235,242,5,9,242,248,252,
252,4,5,3,8,230,236,13,9,15,2,236,0,11,19,3,243,0,11,6,11,246,244,2,1,28,12,229,243,4,
6,13,4,255,7,237,3,18,243,252,9,0,255,19,9,229,236,255,12,14,245,240,243,3,13,247,248,17,253,227,
11,21,242,253,253,6,12,0,243,14,30,254,0,3,3,14,253,245,1,12,1,241,4,10,252,12,14,250,236,242,
6,13,6,251,240,235,1,19,18,7,232,238,0,245,0,27,2,241,5,0,240,1,5,10,7,249,248,8,6,6,
7,1,0,254,247,7,30,8,244,252,4,5,5,253,254,253,3,5,5,249,225,234,7,23,24,4,231,243,0,241,
248,27,24,244,2,12,250,240,242,8,18,18,2,244,242,245,2,16,17,247,255,5,255,0,237,5,21,6,251,238,
240,3,26,12,1,252,230,0,20,9,254,4,0,244,255,7,5,10,5,255,244,255,2,10,6,253,253,254,0,252,
255,245,255,4,249,218,249,36,17,2,244,242,252,0,10,33,19,220,230,11,42,24,253,2,2,0,46,9,29,0,
245,5,245,248,27,12,3,237,249,10,249,0,42,31,0,236,243,19,20,13,255,249,34,33,254,209,229,4,22,34,
11,232,253,20,249,230,21,50,249,249,10,252,10,12,252,8,13,9,26,21,233,242,26,20,243,231,16,25,251,3,
5,242,4,3,12,3,250,20,13,247,221,2,21,8,5,252,45,36,204,221,7,24,43,33,6,246,241,5,10,10,
24,5,250,31,3,239,4,241,15,30,239,7,4,251,25,253,240,21,18,246,244,243,26,38,0,250,240,14,19,238,
232,19,56,1,221,240,246,32,51,10,245,230,239,35,21,14,7,0,19,232,234,8,250,11,26,13,254,230,236,255,
0,32,29,5,25,222,215,10,28,14,1,48,8,228,6,13,215,0,42,14,19,8,241,240,6,14,23,25,249,248,
6,0,252,255,255,17,31,3,248,221,1,11,253,35,5,197,249,38,249,8,2,236,32,11,243,233,244,12,11,1,
51,26,226,11,254,229,4,36,23,3,22,5,225,237,252,231,58,68,232,210,1,14,24,31,231,227,238,46,43,223,
251,15,15,5,251,11,3,8,1,253,17,2,251,245,3,243,253,37,15,237,255,14,227,231,12,10,5,5,2,255,
250,253,255,20,30,27,246,0,24,6,247,255,238,11,50,11,252,243,15,15,246,4,10,17,13,20,255,230,237,247,
30,35,30,255,211,198,245,0,27,67,252,6,0,206,226,29,6,17,50,11,239,215,244,34,25,28,40,238,213,9,
242,241,64,0,3,56,230,212,229,36,39,15,9,227,42,23,227,225,13,38,31,9,241,7,219,30,12,195,25,44,
237,242,6,217,12,51,238,236,255,42,243,227,254,247,61,40,22,235,239,9,194,14,95,51,7,254,197,247,42,218,
4,59,66,0,217,229,204,25,63,20,250,221,2,17,244,236,253,38,49,253,234,23,222,227,42,6,246,36,20,219,
11,14,254,34,236,215,6,31,50,20,240,236,231,15,42,251,4,35,5,247,236,2,13,250,46,30,216,2,7,243,
11,2,252,15,1,19,253,215,23,36,245,10,20,0,6,251,250,29,35,14,251,242,229,6,57,14,10,11,255,252,
239,24,11,246,24,4,227,17,3,2,46,244,223,35,16,226,253,254,0,45,229,21,37,220,250,8,6,30,248,243,
50,7,222,28,17,1,23,5,11,17,239,236,20,34,32,243,226,238,21,8,236,12,21,2,252,7,253,242,229,40,
37,246,24,246,251,16,0,242,239,19,29,20,10,12,18,227,241,13,2,35,60,253,209,254,40,19,234,14,2,214,
32,24,223,5,30,10,234,255,11,251,234,21,0,17,6,201,17,56,19,238,0,24,232,246,11,35,13,225,243,29,
236,229,18,6,33,44,224,245,230,8,65,0,248,5,248,229,18,250,15,72,10,206,227,15,3,8,19,244,14,8,
20,2,215,11,12,245,6,23,14,242,3,24,238,221,62,94,222,215,235,236,16,31,37,35,240,222,9,21,240,246,
8,10,17,16,247,1,240,200,36,72,23,230,242,2,230,225,17,40,236,21,19,223,248,212,239,62,3,229,16,255,
245,14,39,27,228,227,26,21,241,29,45,245,229,20,23,241,14,0,7,28,39,232,215,54,9,220,29,58,253,227,
11,237,248,30,239,248,53,17,203,226,23,30,6,10,3,232,7,3,228,232,40,53,211,233,36,231,241,4,247,64,
28,221,246,7,15,4,8,252,21,46,21,249,227,6,23,33,28,252,5,253,2,232,251,14,14,44,227,224,238,228,
26,242,22,10,6,6,231,222,10,36,3,29,251,226,10,232,221,25,69,44,13,223,200,248,35,50,36,5,24,18,
217,219,250,43,58,15,32,5,228,210,251,48,25,35,29,254,212,228,248,12,22,13,20,15,231,236,242,17,12,251,
24,7,15,234,245,254,11,255,5,32,254,13,240,6,45,244,240,242,249,55,28,11,228,218,20,50,247,225,31,20,
228,25,39,248,248,249,250,25,40,251,237,23,25,17,207,237,59,6,232,15,40,241,240,21,244,239,245,8,28,30,
6,210,233,31,7,204,240,35,72,41,198,245,6,246,19,22,29,1,7,11,0,8,222,13,48,20,254,230,29,6,
252,25,244,3,9,229,8,52,243,246,27,225,211,6,63,41,241,234,10,215,16,5,216,42,50,249,249,244,234,247,
20,33,16,10,9,3,202,243,62,31,231,40,23,237,239,200,11,65,70,18,244,240,5,238,220,47,43,16,13,247,
202,216,28,34,22,27,9,245,215,232,250,64,72,228,11,12,224,249,12,9,246,32,31,20,10,240,227,238,34,239,
236,58,93,18,130,185,36,252,29,51,0,26,240,211,251,241,11,52,0,29,16,213,204,10,28,254,45,34,16,12,
211,215,244,25,68,71,4,232,251,187,204,54,96,24,215,228,2,220,204,39,54,0,48,12,167,208,255,15,93,72,
224,201,214,226,45,59,9,19,10,9,221,218,22,239,8,58,49,0,229,219,18,20,238,33,245,14,30,253,225,236,
51,11,238,13,34,233,220,51,5,223,246,18,50,0,246,23,229,213,25,22,252,29,35,221,219,231,245,250,10,73,
61,234,227,224,235,18,40,49,26,248,220,217,255,24,32,55,10,4,195,242,77,239,241,40,31,7,32,234,230,253,
216,10,72,7,211,255,5,222,237,29,29,243,251,9,197,241,64,4,248,44,240,198,0,37,15,27,31,221,250,12,
229,38,26,250,39,27,253,3,230,245,65,254,7,14,207,36,13,206,39,23,237,19,199,8,75,202,239,44,250,3,
10,232,245,3,15,44,6,249,216,230,58,18,197,9,65,8,0,242,12,248,246,52,34,41,5,201,240,22,21,64,
10,165,0,23,3,11,249,244,178,22,73,226,227,0,4,254,251,31,11,225,10,5,232,17,60,28,244,19,245,11,
245,236,60,55,19,234,240,251,7,23,255,35,34,0,0,247,232,222,20,47,81,251,206,14,244,229,235,3,67,40,
196,221,44,251,230,23,41,21,236,235,21,43,6,16,22,20,242,247,30,26,4,230,29,33,205,13,22,0,25,255,
241,12,9,26,7,200,252,9,247,26,20,4,18,244,228,32,14,239,41,22,11,2,254,229,247,26,13,17,229,243,
21,18,49,3,175,231,58,32,245,251,252,250,25,15,14,11,224,216,17,66,25,237,26,15,198,247,56,2,246,50,
249,207,31,253,4,47,4,236,5,32,22,231,206,4,31,4,42,22,203,245,249,44,251,213,16,0,39,249,0,32,
255,221,220,48,94,9,184,6,18,216,14,27,245,255,39,45,246,197,221,222,40,76,251,32,240,185,7,19,21,31,
4,10,30,251,245,30,5,21,248,196,62,61,224,228,249,248,22,28,212,234,228,6,47,7,243,225,215,254,41,241,
6,36,213,27,76,241,210,7,2,22,55,242,245,0,14,43,240,10,46,239,246,24,248,223,21,33,2,74,251,142,
217,65,83,35,232,201,223,233,41,60,251,40,18,208,216,211,246,48,51,35,18,231,0,240,211,36,36,6,24,236,
239,13,0,198,251,88,46,12,224,213,246,250,47,91,242,217,24,208,206,22,42,87,16,223,254,251,244,1,250,26,
55,235,226,16,21,4,0,14,5,249,252,26,228,226,50,15,14,19,211,219,247,241,4,26,242,21,8,230,249,254,
249,242,7,255,43,245,253,33,226,23,252,25,22,0,254,210,21,40,35,27,253,223,5,251,241,8,17,98,28,195,
240,253,213,245,72,42,27,244,201,230,4,47,28,238,242,229,0,29,252,207,228,48,58,247,249,37,219,224,17,249,
17,27,233,244,38,15,245,21,241,223,239,61,50,211,239,19,11,252,30,229,213,51,248,237,56,255,207,250,1,19,
33,27,38,188,212,88,249,235,56,30,231,238,249,24,28,234,8,28,17,19,246,223,9,18,237,37,30,7,241,229,
10,252,53,46,223,223,235,0,255,15,31,45,15,218,4,224,236,40,70,45,14,244,198,233,20,21,6,48,25,218,
220,14,35,24,71,17,207,201,2,25,1,22,250,29,58,215,212,0,221,1,32,8,48,244,213,4,23,19,245,237,
34,41,13,21,254,213,26,40,224,8,74,55,241,230,238,243,30,43,5,247,15,55,235,202,3,232,1,117,63,173,
208,25,16,243,249,49,42,243,8,237,234,18,0,228,39,72,247,227,214,219,40,54,10,31,50,248,212,207,11,31,
45,42,5,251,241,217,234,48,52,37,253,217,247,255,7,6,30,0,12,52,213,201,43,251,239,60,254,236,252,250,
6,4,15,30,230,232,25,254,234,39,19,193,0,7,13,35,45,10,174,212,40,56,21,20,0,201,250,40,19,40,
31,186,224,29,6,7,6,26,16,241,6,8,208,221,15,42,39,0,194,238,18,233,221,19,52,47,254,205,223,247,
2,15,26,237,249,23,246,19,7,29,3,219,45,13,251,21,42,29,11,6,210,242,71,65,249,14,46,245,224,247,
35,10,0,4,9,235,234,247,233,9,239,226,8,0,255,238,240,214,18,28,194,227,23,31,251,236,20,237,184,29,
86,22,15,227,205,34,72,21,8,20,23,13,242,0,31,29,24,252,251,242,254,9,34,40,240,212,27,15,215,14,
56,227,211,48,0,212,4,5,16,25,12,237,203,253,28,0,252,32,15,236,251,201,233,38,22,39,11,239,245,251,
235,1,24,28,34,240,223,9,13,29,50,28,26,247,219,248,244,42,63,32,28,234,209,231,218,3,92,75,1,206,
188,239,250,29,66,19,240,222,210,249,22,248,32,40,246,235,249,16,214,227,25,38,25,236,246,0,23,15,13,243,
243,16,12,5,25,0,3,26,240,255,42,15,251,7,25,6,22,0,235,5,245,16,36,255,249,0,8,25,5,233,
246,238,254,35,17,8,248,236,0,0,20,0,0,22,30,255,9,12,233,18,24,28,237,196,248,13,15,25,24,22,
16,239,230,1,13,30,17,253,251,4,16,0,230,15,29,242,19,34,235,244,2,8,10,4,246,234,18,13,4,10,
15,33,17,251,235,231,2,28,24,38,13,227,224,0,11,7,24,28,27,0,221,210,240,32,56,33,253,226,252,8,
11,10,234,24,61,15,224,249,2,253,25,26,19,247,242,242,236,5,30,32,14,1,219,235,5,244,252,21,44,3,
250,19,248,241,6,7,26,22,253,12,244,225,18,40,27,15,253,7,0,239,254,20,15,8,9,2,38,21,204,223,
6,8,12,36,21,9,241,240,245,213,18,71,19,236,250,10,244,251,5,14,32,18,10,232,228,27,29,25,48,1,
220,239,243,236,19,34,7,3,0,252,0,0,105,0,4,0,5,0,146,0,39,1,52,8,84,11,196,14,124,16,
87,25,40,11,7,32,14,18,14,14,5,3,106,132,143,128,135,147,92,162,137,44,35,35,90,45,0,0,0,0,
40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,5,0,146,0,39,1,52,8,84,11,
196,14,124,16,87,25,30,15,8,39,16,22,16,16,7,4,106,132,143,128,135,147,92,162,137,44,35,35,90,45,
0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,5,0,146,0,39,1,
52,8,84,11,196,14,124,16,87,25,35,15,8,39,16,22,16,16,7,4,106,132,143,128,135,147,92,162,137,44,
35,35,90,43,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,
146,0,39,1,52,8,84,11,196,14,124,16,87,25,0,15,8,39,16,22,16,16,7,4,106,132,143,128,135,147,
92,162,137,44,35,35,90,43,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,
0,0,20,7,27,0,0,0,1,0,0,0,1,0,1,4,3,1,254,253,1,5,0,246,243,249,1,9,3,245,
235,246,0,0,7,255,238,246,0,8,7,240,223,246,9,18,17,255,241,246,4,4,253,252,1,254,7,22,27,4,
243,240,243,8,32,31,30,19,251,237,248,16,16,8,11,253,244,1,6,255,8,253,231,222,240,5,21,25,19,238,
217,214,227,0,25,33,9,223,215,243,16,35,36,4,233,234,252,10,21,27,25,16,4,241,243,22,32,7,245,0,
3,254,248,0,7,254,239,236,249,248,0,11,9,1,218,217,241,7,25,30,8,240,227,245,6,25,25,2,232,245,
19,23,12,255,2,252,16,10,254,7,33,24,247,247,254,248,242,6,13,13,6,219,205,236,7,0,241,249,245,241,
237,245,252,7,7,8,13,1,245,8,21,9,254,255,252,16,39,46,31,7,253,248,238,246,0,21,40,22,243,229,
243,6,4,255,253,250,240,233,246,0,0,240,238,245,253,250,0,255,238,243,254,1,21,24,2,241,244,7,18,22,
240,232,17,27,5,249,12,14,5,255,235,243,15,8,1,254,3,11,249,11,27,249,223,222,255,45,36,4,245,240,
0,4,12,28,13,23,9,247,249,253,28,54,13,253,243,242,10,15,0,253,250,253,246,226,224,237,238,240,242,236,
252,6,231,202,211,251,20,0,251,245,241,0,242,227,3,22,9,1,6,5,8,26,18,250,3,254,38,70,32,5,
11,0,6,21,18,8,18,28,33,7,236,237,5,12,254,241,13,240,220,245,23,29,247,229,217,205,254,24,22,254,
224,217,233,9,26,244,216,225,1,30,43,17,242,236,224,235,13,23,5,245,0,6,243,4,34,5,0,250,239,14,
63,38,12,234,225,14,17,25,15,255,16,8,2,254,22,16,244,225,247,4,19,8,228,240,5,254,220,222,251,15,
10,11,240,231,247,252,0,8,254,2,254,251,248,249,6,26,43,7,247,5,1,228,233,8,22,30,9,215,236,22,
5,1,11,243,231,241,15,32,20,11,229,200,226,13,41,45,5,219,226,253,45,23,230,0,250,5,21,3,13,255,
215,242,24,31,29,3,253,243,227,247,0,8,13,253,239,246,242,225,236,11,40,17,243,235,2,14,255,252,16,21,
15,0,248,4,30,36,9,253,255,243,247,13,21,42,27,232,201,222,14,36,1,235,237,237,241,236,3,246,8,13,
223,237,251,10,57,30,192,186,246,39,67,38,23,250,218,236,251,35,74,52,2,184,220,34,21,28,31,246,229,224,
217,2,36,26,240,222,202,192,5,39,243,228,247,2,231,206,241,242,242,38,31,234,220,219,252,13,17,230,187,225,
3,21,37,7,235,220,253,21,253,21,27,11,37,34,2,3,246,9,69,30,3,15,10,24,4,214,249,42,5,250,
19,19,2,248,218,249,14,252,253,236,241,12,248,233,226,200,250,40,29,233,223,226,215,248,0,249,251,12,252,244,
0,250,10,7,250,7,33,30,255,239,251,13,27,9,250,23,53,41,30,11,200,211,7,12,72,59,243,248,214,229,
19,2,244,251,17,10,245,230,248,253,243,0,234,242,3,249,30,39,242,207,209,249,46,43,0,240,243,254,0,7,
233,237,42,18,243,244,238,0,2,238,0,27,44,36,225,201,4,10,13,27,255,236,5,255,3,0,254,23,229,208,
242,19,51,36,244,174,190,28,61,51,33,244,210,234,229,235,40,72,32,226,193,228,22,36,8,21,38,251,247,21,
7,0,9,250,249,13,29,29,27,28,227,179,238,5,255,30,30,236,217,201,192,225,60,61,250,203,206,241,236,240,
4,2,21,7,214,245,37,57,11,187,198,16,67,65,18,231,235,9,34,16,231,4,42,54,26,226,230,5,17,22,
232,229,42,57,11,249,227,219,247,249,215,238,38,20,238,223,244,10,252,241,0,244,14,36,34,16,208,194,0,36,
38,34,5,223,222,229,248,18,39,26,240,240,212,210,249,12,49,62,22,245,220,251,247,254,33,39,9,237,235,223,
18,29,17,255,217,212,12,50,20,22,243,210,218,225,44,73,41,233,191,226,8,21,40,25,254,0,243,231,1,249,
25,36,238,207,199,235,36,17,13,245,237,241,234,238,22,38,17,0,224,238,10,26,29,1,241,249,255,255,20,37,
248,205,248,37,68,47,10,235,202,229,6,19,38,19,228,212,234,248,13,27,4,0,249,240,231,233,14,37,33,213,
183,238,30,35,15,30,253,252,216,228,52,96,80,1,185,200,11,56,39,14,2,220,214,248,11,31,43,252,193,210,
233,1,10,9,245,221,244,240,226,223,253,57,63,239,187,190,20,54,24,248,239,10,7,240,252,33,44,10,251,246,
14,52,5,175,206,37,56,25,249,240,11,21,201,185,30,56,29,251,216,240,34,25,255,223,234,11,28,244,215,3,
23,20,23,232,194,245,51,37,252,250,255,7,16,251,1,19,36,11,0,9,39,48,11,233,221,24,49,244,239,244,
16,28,218,172,215,251,226,8,2,236,5,224,168,175,223,45,51,2,5,243,237,252,244,3,41,40,48,20,224,212,
254,47,67,28,235,233,12,29,38,15,250,242,10,40,234,234,247,28,62,1,190,222,0,23,22,29,14,247,225,201,
230,253,41,21,253,204,207,12,34,27,6,241,251,250,12,52,40,2,219,220,2,0,24,71,250,215,237,221,217,249,
22,10,245,230,246,245,255,225,185,237,52,41,223,254,17,240,243,255,1,23,50,53,239,215,250,36,51,3,232,11,
46,53,14,217,243,22,34,59,31,5,219,222,20,23,17,251,229,238,2,250,252,253,226,247,13,239,184,224,15,29,
23,229,202,228,221,206,10,61,34,227,222,215,243,29,31,24,17,47,25,211,214,19,48,48,26,238,235,229,224,14,
31,246,231,7,42,28,255,225,195,239,32,29,253,12,45,46,244,187,224,28,82,38,251,29,17,226,219,237,18,29,
44,23,244,236,3,32,11,249,209,196,4,45,27,245,234,230,211,211,215,239,12,25,238,185,195,240,30,246,219,3,
30,15,228,250,21,4,4,5,23,65,49,242,231,2,39,63,44,2,242,14,49,41,247,10,12,12,253,4,12,13,
253,221,246,239,13,15,219,233,238,225,248,5,3,245,226,201,235,0,45,32,249,244,221,208,243,1,44,76,255,185,
209,251,2,30,26,10,17,0,230,237,0,2,8,25,23,243,241,9,252,23,34,5,220,232,39,70,47,5,211,213,
3,50,67,36,249,238,238,251,0,249,250,7,13,237,231,6,15,248,221,242,11,11,11,248,229,227,238,4,26,13,
231,205,217,1,253,15,20,247,245,243,236,252,247,2,20,21,0,245,232,251,0,10,16,2,228,16,35,24,16,235,
249,31,16,9,21,11,12,45,71,48,228,171,194,57,123,31,209,200,219,236,0,35,36,2,208,191,221,13,39,251,
0,2,240,220,223,244,48,73,6,203,209,248,10,13,28,13,11,21,247,231,245,249,251,8,17,11,250,255,244,217,
234,255,13,27,22,254,10,34,5,226,221,1,52,73,44,240,213,216,0,31,56,23,229,247,245,234,244,238,252,26,
1,221,229,223,226,252,7,253,227,240,248,234,238,247,13,251,232,242,22,16,1,248,14,24,1,241,247,34,74,71,
5,208,185,229,69,116,79,241,213,216,217,11,62,65,13,214,230,14,18,15,242,217,245,29,51,32,247,209,211,251,
23,255,233,243,254,11,8,233,205,218,248,8,12,0,255,15,254,243,0,12,0,6,56,50,11,11,1,14,244,234,
7,41,47,18,0,244,218,209,222,11,55,28,235,200,201,244,252,253,2,255,245,247,225,201,221,3,0,236,0,16,
5,230,221,241,3,8,0,4,8,13,28,28,0,245,3,35,46,35,28,9,5,9,5,0,7,33,41,24,2,253,
252,1,6,14,23,5,254,248,248,0,248,241,236,235,0,7,18,251,208,218,235,240,16,35,17,243,239,240,245,10,
16,24,35,28,18,229,227,3,18,14,0,0,5,14,23,247,216,227,241,22,37,14,247,218,222,250,243,225,220,0,
26,12,240,211,206,0,32,14,231,222,227,251,3,6,4,2,224,226,75,0,3,0,5,0,4,0,14,1,108,7,
240,10,58,14,136,19,224,21,45,10,0,36,3,3,6,6,6,6,150,125,137,137,150,175,150,125,137,44,30,40,
85,51,0,0,0,0,45,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,5,0,4,0,
14,1,108,7,240,10,58,14,136,19,224,21,30,11,0,38,3,3,6,6,7,6,150,125,137,137,150,175,150,125,
137,44,30,40,85,51,0,0,0,0,45,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,
17,0,4,0,14,1,108,7,240,10,58,14,136,19,224,21,0,11,0,38,3,3,6,6,7,6,150,125,137,137,
150,175,150,125,137,44,30,40,85,49,0,0,0,0,45,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,250,0,0,5,8,7,0,4,8,20,20,18,5,21,44,14,3,34,13,8,17,25,21,0,245,239,246,230,239,
227,197,186,207,230,252,199,167,241,0,246,7,0,242,23,35,23,255,9,34,33,10,9,0,237,20,29,228,4,0,
239,27,1,10,243,41,60,23,43,27,60,30,5,0,4,29,24,5,196,224,7,199,247,35,221,209,245,8,238,207,
223,0,20,223,17,21,215,213,197,241,30,224,179,24,16,204,6,2,209,11,37,3,19,30,242,247,45,69,36,30,
94,91,34,29,38,34,6,251,31,29,219,214,42,14,225,241,244,11,2,209,220,15,199,156,201,230,207,201,210,227,
233,213,229,19,252,218,2,25,11,252,11,40,31,11,45,57,53,52,42,63,77,29,11,45,29,241,7,30,247,232,
254,254,247,240,241,248,235,224,234,229,211,215,186,181,214,206,187,214,222,205,239,21,19,24,39,53,65,87,96,94,
68,62,71,78,48,33,17,3,8,250,251,231,224,211,204,206,183,183,187,185,170,172,183,178,179,214,226,233,7,27,
30,37,49,68,85,87,84,72,78,69,66,67,48,32,37,42,24,11,4,247,229,249,239,217,197,199,217,224,220,217,
226,219,216,236,236,222,220,223,246,236,222,230,230,236,4,6,236,251,17,18,14,14,2,30,35,25,47,37,20,55,
56,53,56,33,44,59,27,255,8,40,28,241,255,7,213,222,6,10,234,194,192,244,253,184,198,234,201,176,216,27,
236,164,249,7,238,9,253,253,250,227,27,60,235,237,25,34,53,46,68,97,41,40,107,64,239,239,12,24,225,211,
1,210,184,6,26,0,49,242,249,71,26,12,243,213,218,236,195,216,229,172,165,202,212,255,220,214,46,37,230,24,
48,11,6,246,90,106,248,31,62,254,18,47,24,42,5,20,84,28,199,213,252,0,9,248,227,245,210,224,210,197,
198,226,236,227,226,219,221,213,244,7,11,20,51,60,12,17,35,48,48,47,50,35,25,38,41,249,255,43,36,8,
32,24,2,4,244,13,218,166,196,198,182,172,167,161,174,164,197,238,211,213,0,30,26,33,72,86,73,64,94,88,
79,94,70,51,36,18,49,49,254,245,1,254,253,248,240,227,206,224,246,205,199,207,205,207,220,202,204,206,210,239,
240,228,235,244,2,15,0,254,15,1,19,37,21,15,22,19,20,35,34,47,47,39,60,64,45,47,46,38,36,21,
16,15,249,229,222,218,209,202,219,225,214,211,205,208,229,235,250,10,250,234,1,2,4,253,239,234,2,2,245,250,
255,212,206,19,33,249,246,2,251,7,18,28,25,28,33,34,51,50,55,48,52,34,4,33,72,10,248,14,0,3,
7,15,13,232,215,248,8,233,184,179,214,196,190,212,188,133,181,250,228,218,235,229,0,58,32,34,20,0,50,94,
24,232,19,16,36,15,22,27,68,83,55,80,78,46,58,66,19,27,255,178,210,227,162,178,203,179,196,212,210,248,
249,210,232,26,240,216,0,16,2,234,229,14,4,237,9,21,43,46,19,3,58,26,23,84,50,2,38,56,33,10,
223,246,250,187,199,249,236,164,211,226,238,20,255,4,15,24,0,244,1,251,226,251,27,7,253,27,22,18,22,25,
27,35,253,4,20,236,231,239,234,247,17,13,1,7,253,253,13,8,245,3,252,6,2,231,247,0,228,242,13,252,
247,246,238,242,252,236,213,242,249,255,17,13,247,250,22,31,16,13,31,14,32,31,3,7,11,4,6,12,3,251,
253,23,251,214,249,5,10,21,15,253,11,32,30,22,17,245,234,253,2,227,204,200,203,201,233,232,207,213,249,246,
1,16,244,234,4,18,255,13,12,4,26,31,46,38,41,51,50,46,44,34,28,33,27,8,4,253,248,0,6,249,
241,228,235,235,228,228,206,199,208,206,197,211,221,205,210,249,249,251,16,10,17,43,59,56,60,38,31,34,27,33,
25,9,1,252,19,26,2,1,32,255,6,6,234,236,247,239,232,204,208,246,236,232,233,236,0,8,0,252,232,234,
8,17,238,220,246,8,43,41,33,42,41,53,58,53,32,16,244,244,33,249,194,197,227,241,226,222,220,214,235,12,
222,239,227,228,1,17,240,224,245,51,54,4,38,60,58,57,85,56,4,4,37,24,248,209,230,247,246,218,222,247,
255,0,250,230,226,230,241,231,165,196,245,183,202,234,246,0,2,44,63,48,8,63,79,27,246,20,53,60,38,25,
56,39,24,44,46,12,247,23,41,218,184,221,1,236,220,203,193,188,187,188,199,215,199,202,218,2,248,210,243,245,
246,254,251,17,42,47,54,91,77,96,104,93,98,63,34,47,65,5,229,214,214,210,238,0,208,211,232,4,9,0,
250,218,225,245,225,185,172,185,186,197,190,212,230,14,24,14,42,47,43,53,64,42,254,5,28,20,239,253,15,19,
33,52,50,42,46,51,39,28,11,0,244,250,213,208,233,231,209,219,3,246,225,10,4,250,254,246,233,244,213,194,
204,204,209,213,232,253,0,10,43,58,41,48,54,41,38,30,13,11,247,237,1,14,9,15,38,48,34,19,34,34,
16,8,6,241,232,230,223,211,205,220,242,232,229,239,247,247,229,238,244,227,226,223,230,227,224,248,29,20,7,34,
50,49,51,44,56,41,24,14,24,17,1,240,249,240,231,254,28,22,245,246,2,13,15,3,4,248,211,233,242,232,
249,245,247,246,234,242,16,16,237,208,227,254,6,0,232,230,228,246,7,30,13,247,23,48,47,13,3,12,29,26,
16,47,32,5,10,32,28,1,7,3,239,238,246,235,189,187,206,224,235,237,242,2,30,26,0,24,32,17,25,17,
233,225,202,253,22,231,9,15,19,27,25,36,19,251,250,1,0,225,196,201,213,228,29,9,247,19,38,41,18,15,
20,20,2,4,2,253,253,236,10,40,7,0,19,24,8,7,3,1,253,236,1,242,215,207,238,243,250,222,230,14,
0,228,252,18,247,227,245,36,245,219,26,41,37,2,4,56,42,9,20,36,0,251,242,1,235,205,217,25,16,228,
236,24,40,254,15,35,6,249,5,19,9,220,203,242,6,217,222,3,8,248,17,36,21,246,232,5,10,250,236,228,
13,254,231,10,37,12,252,29,47,13,252,14,13,230,216,213,251,9,222,226,5,25,10,8,31,33,9,24,48,5,
241,239,4,234,220,215,247,7,0,254,20,20,1,11,20,11,250,239,1,7,231,223,233,230,255,14,23,23,28,19,
29,39,254,240,248,245,220,208,210,221,219,227,249,4,8,33,46,57,55,26,25,36,29,254,247,250,243,245,0,253,
241,253,21,20,12,1,250,241,247,236,215,212,207,208,224,232,247,255,2,24,32,32,32,26,28,28,18,5,1,247,
0,244,0,24,12,8,34,29,10,9,255,252,9,252,231,217,223,233,221,232,241,236,245,25,42,22,10,22,14,243,
252,237,238,240,220,215,230,250,247,19,42,33,49,44,49,37,6,223,250,253,228,251,245,243,243,6,24,21,14,18,
17,254,9,14,243,221,245,252,238,251,12,248,247,244,245,248,242,235,217,230,238,247,3,14,243,222,5,40,33,22,
20,22,22,37,39,21,0,17,22,27,29,3,248,253,235,214,240,9,3,252,232,240,252,222,236,12,241,231,251,11,
7,244,238,245,239,250,6,254,252,240,242,13,20,2,10,32,42,24,15,17,22,244,243,7,7,248,239,10,21,15,
6,0,26,20,20,21,15,253,224,223,249,239,207,219,232,240,232,233,245,249,253,0,0,12,1,0,19,16,245,240,
255,19,9,11,19,16,17,23,29,32,36,26,16,21,6,6,255,238,239,237,230,237,240,229,241,251,0,252,246,238,
245,249,240,238,236,227,240,252,2,9,14,12,33,39,26,25,27,23,25,15,4,252,243,255,3,252,254,254,252,3,
4,0,251,244,248,244,240,237,236,239,249,252,254,8,9,7,11,5,2,3,1,2,255,251,0,3,2,7,4,13,
16,17,12,10,9,3,0,255,254,253,240,238,240,247,251,253,250,251,249,248,5,11,0,246,252,254,251,253,3,5,
255,7,16,18,14,8,9,6,7,5,0,1,2,1,254,4,250,248,3,4,6,3,0,253,0,251,255,0,251,249,
251,249,241,245,247,242,245,248,254,8,9,1,2,9,6,7,4,1,3,2,0,4,6,5,5,12,15,16,17,12,
7,11,2,2,2,252,248,249,248,248,245,239,245,251,252,248,251,252,252,247,245,255,254,252,251,248,1,3,2,6,
12,7,3,8,16,14,8,8,12,12,12,4,6,10,2,0,1,254,250,247,249,254,251,247,248,254,252,248,248,254,
249,246,250,1,255,252,252,3,9,6,4,5,7,10,6,4,3,3,0,1,2,1,0,3,3,0,0,6,8,6,
5,1,255,252,249,253,255,253,250,250,251,252,252,0,255,0,0,0,2,3,2,0,0,254,0,1,1,3,3,2,
3,6,5,7,5,2,0,0,255,0,0,252,252,253,0,0,0,0,0,0,1,1,1,1,0,255,255,255,0,0,
255,0,255,0,1,2,2,1,3,1,0,0,0,0,0,0,0,1,1,1,0,1,1,0,0,1,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,80,0,3,0,5,0,
4,0,14,1,108,7,240,10,58,14,136,19,224,21,45,10,0,36,3,3,6,6,6,6,150,125,137,137,150,175,
150,125,137,44,30,40,85,53,0,0,0,0,45,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,
0,0,5,0,4,0,14,1,108,7,240,10,58,14,136,19,224,21,35,11,0,38,3,3,6,6,7,6,150,125,
137,137,150,175,150,125,137,44,30,40,85,53,0,0,0,0,45,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,250,0,0,17,0,4,0,14,1,108,7,240,10,58,14,136,19,224,21,0,11,0,38,3,3,6,6,
7,6,150,125,137,137,150,175,150,125,137,44,30,40,85,53,0,0,0,0,45,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,250,0,0,5,8,7,0,4,8,20,20,18,5,21,44,14,3,34,13,8,17,25,21,
0,245,239,247,230,239,227,197,186,207,230,252,199,167,240,0,246,7,0,242,23,35,23,255,9,34,33,10,10,0,
237,20,29,228,4,0,239,27,1,11,243,41,60,23,43,28,60,30,5,0,4,29,25,5,196,224,7,199,247,35,
221,209,245,7,238,207,223,0,20,222,17,21,215,213,197,241,30,224,179,24,16,204,6,1,209,11,37,4,19,30,
242,247,45,69,37,30,94,91,34,29,37,34,6,251,31,29,219,214,42,14,225,241,244,11,2,209,219,16,199,156,
202,230,207,201,210,227,233,213,229,19,251,218,2,25,11,252,11,40,31,11,45,57,54,51,43,63,77,29,11,45,
29,241,7,29,248,232,254,254,247,240,241,248,235,223,234,229,211,215,186,181,215,206,187,214,222,205,239,21,19,24,
39,53,65,87,97,93,69,62,71,79,48,33,17,3,8,250,251,230,224,211,204,206,183,183,187,185,170,172,183,178,
179,214,226,233,7,27,30,37,49,68,85,87,84,72,78,69,66,67,48,32,37,42,24,11,5,247,229,249,239,217,
198,199,218,224,220,217,227,219,216,236,236,222,220,223,246,236,222,230,230,236,4,6,236,251,17,17,14,14,2,30,
35,25,47,37,19,55,56,52,56,33,45,58,27,255,8,41,27,241,255,8,213,222,6,10,234,194,192,244,253,185,
198,234,201,176,216,27,236,164,249,7,238,8,253,253,250,227,27,60,235,238,25,34,53,46,67,97,41,40,106,64,
239,239,12,23,225,210,1,210,184,6,26,0,50,242,249,71,26,12,243,213,218,236,195,216,229,172,165,202,212,255,
220,214,46,37,229,24,48,11,6,246,90,106,248,31,62,254,18,47,24,42,5,20,84,28,199,213,252,0,9,248,
227,245,210,224,210,197,198,226,236,227,226,218,221,213,244,7,11,20,51,60,12,16,36,48,48,47,50,35,25,38,
41,249,255,43,36,8,32,24,2,4,243,13,218,166,197,198,182,172,167,161,174,164,197,237,211,213,0,30,26,33,
72,86,73,64,94,88,79,94,70,51,36,18,49,49,254,245,1,254,253,248,241,227,207,224,246,205,199,206,205,207,
220,203,204,206,210,239,239,228,235,244,3,15,0,254,15,1,19,37,21,14,22,19,20,35,34,47,47,39,60,64,
45,47,46,38,36,21,16,15,249,229,222,218,209,202,219,226,214,211,205,208,229,235,250,10,250,234,1,2,4,253,
239,234,2,2,245,251,255,212,206,20,33,248,246,2,251,7,18,28,25,28,33,34,51,50,55,48,52,34,4,33,
72,10,248,14,0,3,7,15,13,232,215,248,8,233,184,179,214,196,190,212,189,133,181,249,228,218,235,229,255,58,
33,34,20,0,50,94,24,232,19,15,36,15,22,26,68,83,56,80,78,46,58,66,20,27,255,178,210,227,162,178,
203,179,196,212,210,248,249,210,232,26,239,217,0,16,1,234,229,14,4,236,9,21,43,46,19,3,58,26,23,84,
50,2,38,56,33,10,224,246,250,187,200,249,236,164,211,227,238,20,255,4,15,24,0,244,1,251,226,251,27,7,
253,27,21,18,22,25,28,35,253,4,20,236,232,239,234,247,17,13,1,7,253,253,13,8,245,3,252,6,2,230,
247,0,228,241,13,252,247,247,238,242,251,236,213,243,249,254,17,13,247,250,23,31,15,13,32,14,32,31,3,7,
11,4,6,12,3,251,253,23,251,214,249,5,10,21,14,253,12,32,30,22,17,245,235,253,2,227,204,200,203,201,
233,232,207,213,249,246,1,16,244,234,4,18,255,13,12,4,25,32,46,38,41,51,50,47,43,34,28,33,27,8,
5,253,248,0,6,249,241,228,235,235,228,228,205,199,208,207,197,211,221,205,210,249,249,251,16,10,16,43,59,56,
59,38,31,34,26,33,25,10,1,251,19,26,2,1,32,255,6,6,233,237,247,238,231,204,208,246,236,232,233,237,
0,8,0,252,232,234,8,17,238,220,246,8,43,41,34,42,42,53,57,54,32,17,244,244,34,249,194,197,227,241,
227,222,220,214,235,12,222,239,227,228,1,17,240,225,245,51,54,4,38,60,58,56,85,56,4,4,37,24,247,209,
230,247,246,219,222,247,255,0,249,231,226,230,241,231,165,196,245,183,202,234,246,0,2,44,63,48,8,63,79,27,
247,20,52,61,38,25,57,39,24,44,46,12,247,23,41,218,184,221,1,236,219,203,193,188,187,188,199,215,199,202,
218,2,248,210,243,245,246,254,251,17,42,47,54,91,77,95,104,93,99,63,34,46,65,6,228,215,214,210,238,0,
208,211,232,4,10,255,250,218,225,245,224,184,172,185,185,197,190,212,230,14,24,14,42,47,43,53,64,41,254,6,
28,20,239,253,15,19,33,52,50,41,46,51,40,27,11,0,244,250,213,208,233,231,209,219,3,246,225,10,4,250,
254,246,233,244,213,194,205,204,209,213,232,253,0,10,43,58,41,48,54,41,37,30,12,11,247,237,1,14,9,15,
38,48,34,19,34,34,16,8,6,241,232,230,223,211,205,219,242,232,229,239,247,247,229,238,243,227,226,223,230,227,
224,248,29,20,7,34,51,49,51,45,56,41,24,14,24,17,1,240,249,240,231,254,28,22,245,246,2,13,15,3,
4,248,211,233,242,232,249,245,247,246,234,242,16,16,237,208,227,253,6,0,232,230,228,246,7,30,13,247,23,48,
47,13,3,12,29,26,16,47,32,5,10,32,29,1,7,4,239,238,246,235,189,187,206,224,235,237,242,2,31,26,
0,24,32,17,25,17,233,225,202,253,22,231,9,16,19,27,25,36,19,251,250,1,0,225,196,201,213,228,29,9,
247,19,38,41,18,15,20,20,2,4,3,253,253,236,10,40,7,0,18,24,8,7,3,1,253,236,1,243,214,207,
238,244,250,222,230,14,0,229,252,18,247,227,245,36,245,219,26,41,37,2,4,56,42,10,20,36,0,251,242,1,
235,205,217,25,17,228,236,24,40,254,15,35,6,249,5,19,9,220,203,242,6,217,222,3,8,248,17,36,21,246,
232,5,11,250,235,228,13,254,231,10,37,12,252,29,47,12,252,14,14,230,216,213,250,9,222,226,5,25,10,9,
31,33,9,24,48,5,242,239,4,234,220,215,247,6,0,254,20,20,1,12,19,12,250,239,1,7,231,223,233,230,
255,14,24,23,28,19,29,39,254,239,248,245,221,208,210,221,219,227,249,4,8,32,46,57,55,26,25,36,28,254,
247,250,243,245,0,253,241,254,21,20,12,1,249,241,247,236,215,212,207,208,224,232,247,255,2,24,32,33,32,26,
28,28,18,4,1,247,0,244,0,24,12,8,34,28,11,9,255,252,9,251,231,216,222,232,221,232,240,235,245,26,
43,23,11,23,14,242,252,237,237,240,218,213,228,250,247,20,45,35,53,46,53,40,7,221,249,253,225,250,244,241,
242,7,27,23,15,20,19,253,10,16,241,217,244,251,235,250,14,247,246,242,244,246,239,231,212,226,235,246,3,17,
241,216,6,47,39,26,24,26,26,44,46,24,0,21,27,32,34,3,247,252,230,204,237,10,4,251,226,236,251,213,
231,15,237,224,249,14,9,241,234,242,235,248,8,253,251,235,238,17,26,2,13,41,55,31,19,22,29,240,238,9,
10,245,233,14,28,20,8,1,35,27,27,28,21,252,211,211,246,233,187,205,222,233,222,224,240,245,251,0,0,17,
0,1,27,23,240,233,255,27,14,17,28,24,26,34,44,48,53,39,24,31,9,10,253,228,230,227,216,227,230,213,
232,247,0,249,240,228,238,244,229,227,223,208,230,249,3,13,22,19,54,64,43,41,44,38,41,25,8,249,233,253,
6,249,252,252,248,4,6,0,247,235,242,234,226,221,219,226,243,249,252,15,17,12,20,10,5,6,2,4,253,247,
255,6,4,13,7,24,31,33,23,19,17,5,1,254,251,248,223,219,223,238,245,248,242,245,240,238,10,23,0,234,
247,252,245,249,5,10,252,15,33,39,30,18,21,13,15,12,254,2,4,2,251,9,241,235,6,10,14,5,255,247,
254,244,253,0,243,238,242,238,219,227,233,221,227,233,250,21,23,3,5,23,14,18,9,2,7,5,254,11,17,14,
14,33,41,43,45,34,20,30,6,4,5,244,231,235,230,231,223,205,221,238,243,229,240,240,241,226,220,250,247,240,
239,231,3,9,6,20,37,23,10,25,51,48,28,28,41,41,41,14,19,34,8,254,5,248,230,220,227,246,234,221,
224,244,236,224,221,246,225,212,227,3,249,238,234,11,38,27,17,23,30,45,24,17,11,15,0,2,11,4,252,14,
12,254,0,30,37,30,24,7,247,233,217,233,246,234,221,220,225,226,231,250,246,254,249,0,12,15,14,0,246,236,
251,3,9,23,22,16,24,40,37,50,39,18,3,253,245,245,255,217,221,223,250,252,3,4,0,1,4,8,6,6,
254,238,237,238,241,242,234,241,239,241,10,28,26,21,31,19,3,0,245,254,252,244,0,22,16,10,3,19,18,252,
0,12,2,241,0,249,241,246,242,252,3,252,246,248,246,251,249,255,2,253,253,6,8,11,3,9,6,0,0,0,
90,0,3,0,5,0,4,0,192,0,52,8,128,12,58,14,136,19,224,21,50,9,0,33,2,2,4,3,3,2,
150,125,137,137,150,175,150,125,137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,250,0,0,5,0,4,0,192,0,52,8,128,12,58,14,136,19,224,21,40,5,0,26,1,1,
3,2,2,1,150,125,137,137,150,175,150,125,137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,250,0,0,1,0,4,0,184,0,52,8,128,12,58,14,136,19,224,21,0,1,
0,14,1,1,2,2,2,2,150,125,137,137,150,175,150,125,137,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,80,0,3,0,5,0,4,0,176,0,208,7,184,11,
58,14,136,19,224,21,31,8,0,33,3,3,6,6,6,6,150,125,137,137,150,175,150,125,137,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,5,0,4,0,176,0,
208,7,184,11,58,14,136,19,224,21,50,9,0,34,3,3,6,6,7,6,150,125,137,137,150,175,150,125,137,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,9,0,
4,0,176,0,108,7,184,11,58,14,136,19,224,21,0,9,0,34,3,3,6,6,7,6,150,125,137,137,150,175,
150,125,137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,
0,0,105,0,4,0,69,0,120,0,0,1,176,4,192,8,4,16,172,18,244,26,30,7,14,17,5,17,5,5,
0,0,187,125,137,137,150,175,187,125,137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,250,0,0,69,0,120,0,0,1,176,4,192,8,4,16,172,18,244,26,50,8,16,19,
6,19,6,6,0,0,187,125,137,137,150,175,187,125,137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,250,0,0,69,0,120,0,0,1,176,4,192,8,4,16,172,18,244,26,
25,7,14,17,5,17,5,5,0,0,187,125,137,137,150,175,187,125,137,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,1,0,120,0,0,1,40,5,152,8,104,16,
172,18,244,26,0,3,5,17,8,8,2,2,0,0,187,125,137,137,150,175,187,125,137,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,0,0,246,10,18,0,246,249,251,254,
1,4,3,255,252,253,250,246,249,252,251,248,250,254,254,255,2,10,18,19,14,8,2,255,252,246,245,252,6,12,
7,2,255,246,245,248,248,245,252,9,5,245,238,245,251,250,250,5,17,18,10,0,251,250,253,255,255,0,7,10,
6,1,2,7,10,10,10,13,13,4,249,241,243,251,252,252,8,27,32,21,9,6,9,0,242,237,241,246,250,0,
6,9,15,22,20,5,247,243,249,248,235,236,255,15,14,5,9,14,12,7,255,248,244,240,239,241,242,247,2,16,
22,16,10,4,246,229,219,223,236,247,0,10,21,21,12,9,8,2,0,2,5,1,248,240,241,255,14,22,28,31,
28,21,11,249,229,230,246,253,255,14,33,31,11,7,17,6,234,226,243,1,0,245,245,0,7,7,4,0,0,7,
12,3,245,239,247,252,249,247,250,0,11,20,7,239,234,243,247,242,247,255,255,254,7,5,241,226,236,3,8,251,
251,14,24,7,241,232,243,254,0,0,1,12,25,24,254,234,249,6,0,247,247,2,11,4,0,2,0,2,13,16,
9,5,5,5,1,253,2,10,9,14,23,23,16,9,3,5,4,254,250,252,6,17,10,253,251,2,6,255,243,246,
7,12,1,247,248,254,1,250,241,241,250,2,5,255,252,255,0,1,252,244,248,5,10,3,0,3,9,8,254,255,
14,13,252,239,242,251,0,249,239,249,14,21,12,5,0,246,241,242,244,232,221,243,18,17,247,242,9,20,0,239,
247,0,242,236,253,0,252,5,35,48,32,16,20,27,16,0,252,253,2,12,11,3,5,7,0,247,247,243,239,241,
234,223,229,249,253,248,0,18,24,12,3,250,241,246,9,17,19,29,35,20,7,0,243,232,242,0,4,3,7,11,
6,0,5,10,5,0,5,9,0,241,232,246,10,9,253,252,0,250,232,218,210,207,217,238,248,241,250,14,20,6,
0,11,15,6,0,0,6,11,15,17,16,20,27,23,7,255,10,16,3,249,2,9,1,0,6,7,5,12,18,2,
242,242,247,246,241,239,249,4,15,13,252,249,6,8,252,248,0,6,8,14,17,9,9,17,25,20,3,254,4,0,
246,233,228,242,251,249,249,0,7,4,1,0,251,248,250,247,244,247,251,255,0,0,2,4,5,3,253,245,244,246,
242,240,251,3,4,5,5,2,0,0,3,5,0,254,4,5,254,250,1,11,20,22,17,11,2,248,242,239,238,242,
0,10,15,15,3,252,1,4,0,254,5,16,17,2,243,239,244,254,10,14,8,12,19,2,238,229,232,247,4,7,
12,18,15,5,255,254,0,2,5,13,15,3,250,250,245,242,249,253,0,8,12,9,0,250,254,252,249,0,9,14,
18,21,16,8,9,6,250,242,252,9,0,247,251,253,1,0,239,224,237,2,3,248,244,0,11,7,248,235,240,4,
16,2,242,250,16,17,245,225,242,17,21,0,247,254,7,4,240,228,236,255,12,12,254,253,12,18,252,222,222,253,
18,2,235,244,18,19,249,239,253,14,22,27,23,3,0,12,13,3,250,3,34,47,27,13,15,10,250,234,233,243,
249,249,3,13,4,253,253,250,250,246,246,255,2,252,253,0,249,248,0,6,11,15,17,14,6,0,253,250,1,13,
21,25,29,29,15,248,244,253,245,233,240,0,1,248,248,0,0,252,0,4,254,250,3,0,234,233,253,7,2,252,
11,25,13,254,248,248,248,250,250,238,235,255,10,0,244,249,8,15,1,237,233,246,0,245,227,237,16,31,6,241,
255,25,30,5,241,1,26,23,1,243,240,247,2,1,255,7,20,22,3,240,244,0,252,248,6,24,34,28,2,233,
240,10,13,250,254,29,38,3,233,236,242,245,1,23,20,7,18,18,237,206,224,5,7,255,15,36,21,238,221,226,
227,228,243,4,19,24,11,248,232,217,228,248,6,27,40,32,15,8,3,243,238,254,12,14,13,14,2,240,240,250,
237,222,236,254,244,221,223,240,241,235,244,1,12,20,25,23,17,19,22,9,0,1,4,10,17,16,13,22,34,21,
243,231,245,250,240,235,248,17,27,16,4,7,20,18,255,247,4,14,1,246,253,5,14,19,14,18,27,22,13,5,
253,247,246,246,248,250,253,254,1,6,5,0,247,241,242,242,245,253,0,2,10,16,10,253,248,254,0,253,247,249,
3,3,247,241,252,3,2,255,4,13,8,252,246,240,234,235,244,243,241,3,22,18,7,1,3,0,248,248,249,251,
7,20,16,4,5,14,9,252,244,248,2,1,247,247,254,2,2,249,251,10,16,3,253,252,254,0,253,243,248,12,
25,19,7,255,0,7,252,235,242,3,9,5,5,18,17,0,255,8,0,245,253,14,10,255,0,4,8,4,246,235,
232,234,227,227,232,230,240,251,251,243,235,229,230,235,230,234,247,252,2,7,5,6,7,6,8,7,1,7,25,20,
2,6,26,35,27,18,26,36,30,10,2,3,5,1,0,2,4,14,19,8,250,246,254,0,254,0,14,22,19,23,
19,5,254,6,16,9,9,22,39,35,13,9,15,9,250,237,235,242,254,253,240,238,254,15,7,243,244,2,1,244,
238,243,248,254,245,236,246,253,247,245,249,244,233,235,234,229,232,241,246,242,243,7,17,0,243,1,16,10,3,7,
11,15,21,16,248,239,3,12,0,253,6,16,15,9,6,255,249,1,14,6,252,4,14,6,252,247,250,254,250,252,
0,6,9,0,237,254,36,26,252,0,22,25,250,218,218,243,13,20,6,252,14,34,4,211,202,241,11,241,194,193,
230,251,236,208,208,255,45,49,24,1,9,34,31,243,205,237,49,73,38,17,47,66,38,241,211,227,243,244,234,230,
237,249,255,247,251,18,39,47,42,32,18,252,216,193,201,221,241,3,29,58,61,40,15,0,246,236,233,232,239,4,
10,250,240,252,10,19,27,34,35,34,22,253,214,191,199,220,224,230,8,48,54,34,15,3,249,236,228,233,245,12,
27,20,9,14,22,12,1,10,23,26,18,8,251,238,234,230,223,229,253,19,18,11,20,26,6,237,235,245,239,227,
234,0,9,7,6,10,9,1,254,248,235,237,253,4,251,253,13,17,3,252,0,3,252,251,250,240,234,244,253,248,
247,6,27,35,23,9,2,254,242,231,233,243,9,35,48,44,33,30,26,0,232,236,0,4,248,255,15,17,7,255,
2,14,14,6,1,255,250,254,255,244,235,244,5,6,242,235,255,11,251,240,248,0,248,239,234,233,237,245,248,242,
238,4,20,7,246,253,22,25,2,232,222,230,235,228,226,242,7,27,30,10,1,2,248,228,227,231,214,208,239,11,
12,4,37,64,34,249,239,246,238,230,240,2,18,17,21,43,48,27,17,54,72,36,255,247,252,241,237,255,11,27,
52,70,50,5,244,245,245,226,201,215,247,2,240,233,252,5,5,9,15,6,248,2,12,253,235,252,29,38,25,15,
23,35,19,247,238,251,1,247,240,249,6,9,8,14,16,6,253,246,236,219,209,208,214,223,231,238,251,12,20,6,
0,3,5,255,238,230,238,4,0,228,237,13,32,18,253,1,18,16,250,229,231,244,254,1,0,10,18,30,40,31,
14,20,36,22,251,245,0,6,3,12,32,39,36,27,22,10,250,240,238,244,251,245,240,249,249,238,255,15,0,252,
23,39,5,220,218,253,21,251,227,4,53,52,248,201,207,241,5,251,236,239,8,31,4,205,173,211,26,35,250,246,
24,26,232,175,167,215,3,253,244,8,32,17,214,160,156,200,249,11,15,24,52,59,11,211,202,9,60,47,31,53,
78,57,7,248,16,51,62,57,50,36,15,232,197,186,190,226,16,33,33,45,62,36,239,209,218,237,226,209,224,1,
20,11,6,22,53,60,37,20,23,32,13,231,222,243,255,242,241,6,28,36,35,30,21,8,246,225,211,201,207,226,
244,0,13,21,13,2,248,234,237,246,242,232,237,252,255,243,234,250,21,30,21,20,30,29,7,241,236,247,3,14,
14,13,22,17,255,235,229,236,248,5,10,8,7,11,8,237,216,231,251,252,246,1,12,0,241,243,249,244,246,13,
24,6,246,254,2,241,230,249,18,31,31,31,31,19,254,246,245,245,4,25,28,22,30,30,16,3,0,255,6,19,
16,255,252,3,0,239,234,255,19,17,10,13,16,4,245,235,231,236,248,7,14,0,241,251,251,217,190,214,253,4,
244,248,7,2,228,201,194,216,247,2,251,0,21,23,253,229,234,248,4,17,10,247,255,22,11,213,191,235,11,246,
228,0,20,2,249,244,229,218,243,27,28,10,22,53,60,27,249,252,40,64,28,8,43,73,32,225,231,13,8,246,
16,55,50,38,41,24,248,227,230,240,246,246,252,17,35,31,9,8,17,3,242,252,5,251,247,17,29,2,240,1,
10,250,235,245,4,14,7,246,237,242,245,239,241,247,244,236,238,236,212,194,211,233,241,252,14,22,17,10,2,246,
240,251,1,253,251,6,11,1,246,245,249,253,1,10,18,10,253,5,12,255,235,238,12,28,7,254,17,33,26,4,
0,10,14,9,0,253,248,248,0,2,7,15,29,38,21,3,6,5,240,238,10,20,15,26,36,19,253,11,19,248,
237,4,25,12,242,242,251,240,229,239,247,249,12,25,10,250,246,250,243,226,225,247,8,254,239,0,27,18,252,1,
17,0,232,222,223,228,229,224,212,209,240,248,200,181,230,7,239,207,193,192,197,202,228,2,11,60,127,111,34,249,
0,255,232,216,248,57,86,72,48,38,34,12,246,243,252,1,1,250,230,219,225,236,254,15,42,72,67,42,20,253,
234,231,238,247,11,39,59,54,32,28,33,8,246,251,3,6,8,7,11,19,17,7,5,4,7,8,1,252,250,244,
233,215,200,203,215,215,218,242,14,24,15,5,2,251,240,233,231,237,0,19,15,4,10,20,16,3,9,29,28,8,
2,7,253,242,247,251,253,3,19,32,23,252,243,252,245,217,215,247,10,0,251,2,6,251,237,232,235,247,4,10,
11,8,4,2,2,6,6,2,5,24,38,30,15,9,14,9,254,252,3,4,2,12,17,2,251,0,253,242,241,242,
236,227,228,236,245,247,255,13,26,16,247,243,252,234,207,212,243,2,250,247,8,19,10,1,254,250,252,0,0,247,
250,3,10,8,4,12,25,30,21,250,231,238,243,226,214,237,15,24,5,248,0,9,0,232,212,226,1,5,242,233,
237,237,244,252,240,233,10,55,45,1,7,34,17,246,1,32,48,52,60,53,31,15,12,1,239,229,242,253,253,240,
228,243,2,254,254,12,13,254,245,240,237,239,244,1,22,45,52,38,33,43,40,10,249,12,16,246,233,248,5,6,
14,27,31,37,38,19,245,222,216,223,232,227,230,249,4,253,233,232,235,230,240,0,255,246,253,7,240,214,224,248,
0,253,6,25,26,12,254,250,249,246,248,2,19,25,10,1,7,5,247,244,4,10,4,11,30,25,254,249,7,5,
250,248,4,10,7,4,8,3,247,246,0,252,255,17,25,14,5,7,5,244,239,251,255,253,9,17,3,8,28,11,
233,235,6,6,235,232,254,5,254,255,254,250,251,7,4,233,214,238,3,241,217,227,246,248,251,253,248,0,28,38,
0,209,217,243,225,190,204,246,6,5,16,15,246,245,17,21,249,0,42,51,8,237,252,10,254,242,1,24,36,39,
34,18,2,4,11,254,230,218,233,249,241,237,250,13,29,41,39,24,10,4,244,226,228,248,1,5,26,51,52,42,
38,37,30,20,2,241,236,238,238,233,237,4,29,37,29,26,24,7,244,229,223,222,228,238,242,247,1,16,18,7,
7,16,16,10,3,0,3,6,0,250,252,0,0,0,0,1,12,11,1,255,1,254,244,240,246,248,247,250,0,2,
250,241,244,252,248,239,243,0,7,2,250,252,0,247,234,234,246,251,249,0,10,9,255,250,247,243,245,253,5,10,
7,2,250,240,235,234,241,4,32,45,38,24,15,1,233,214,225,253,12,18,27,40,45,31,5,251,5,15,5,249,
0,6,248,235,242,254,4,17,29,24,14,16,13,242,213,212,226,232,232,238,250,6,17,11,244,227,231,241,241,232,
231,244,7,8,243,229,239,4,15,7,4,25,51,41,0,234,242,251,248,245,5,26,34,35,26,8,0,7,21,14,
2,2,16,15,245,221,234,6,15,19,34,45,36,20,10,251,219,210,242,16,4,2,38,59,28,252,1,16,2,245,
7,25,16,3,6,9,253,244,254,13,17,12,5,3,249,233,222,226,236,234,222,225,237,239,223,210,220,231,235,239,
241,238,239,241,236,224,215,217,225,231,230,234,0,0,12,8,12,0,14,17,18,23,26,28,26,33,33,28,29,28,
29,28,26,25,24,26,25,23,13,15,12,9,9,6,9,12,12,13,15,14,14,16,20,25,27,27,28,28,33,37,
40,37,42,40,38,36,41,41,38,38,39,41,40,42,44,40,37,39,40,36,37,34,32,31,33,31,30,28,27,22,
19,17,14,15,12,12,15,15,17,18,19,14,12,14,18,21,23,24,25,27,26,27,26,28,23,18,18,15,14,8,
3,4,5,1,8,248,0,178,140,255,16,1,251,245,245,245,239,226,221,249,31,37,28,33,28,31,38,43,44,49,
55,52,43,43,39,41,30,29,23,25,23,21,10,6,10,3,3,0,2,3,11,11,7,240,202,209,221,230,252,13,
19,14,250,9,219,164,223,255,242,234,247,246,247,250,247,255,214,197,207,206,226,238,6,14,25,40,51,58,37,11,
3,7,8,2,224,231,31,56,68,76,86,82,81,65,53,57,65,34,19,51,54,62,60,41,36,22,12,248,239,235,
250,250,254,11,15,28,41,48,45,37,39,24,12,253,0,29,44,54,62,65,67,59,50,40,41,41,30,35,46,55,
69,78,73,68,65,56,46,42,30,22,18,18,27,254,233,4,26,27,7,0,240,233,223,213,217,235,249,0,13,19,
25,33,25,30,32,32,39,33,41,51,58,66,67,74,78,76,72,59,50,38,35,36,38,36,33,41,39,34,29,10,
253,239,226,217,215,228,233,238,239,246,251,243,248,245,250,253,4,12,19,32,44,51,58,62,66,70,68,60,44,28,
19,19,22,22,21,24,31,18,15,15,9,10,4,5,6,9,19,17,18,24,25,17,8,8,10,9,5,253,255,253,
7,17,18,15,14,14,4,4,12,19,30,22,17,24,26,22,20,21,23,20,17,14,6,4,6,15,14,24,27,21,
19,17,21,18,22,20,20,31,26,24,30,36,28,27,31,28,20,15,11,11,3,254,6,8,19,21,20,24,23,16,
12,15,19,29,35,34,31,34,37,35,30,22,21,17,19,10,0,252,247,247,247,243,236,232,232,231,234,239,246,241,
240,243,252,9,14,9,2,1,255,248,246,244,248,0,4,2,1,2,0,6,6,6,9,10,9,11,15,23,33,29,
18,21,20,17,19,13,7,8,3,3,7,11,16,15,22,17,19,19,26,32,32,30,38,39,39,45,50,44,41,39,
21,24,30,31,30,25,24,28,27,22,18,20,23,23,20,25,33,39,45,44,41,36,37,35,30,28,14,7,4,0,
1,254,0,5,2,5,2,6,8,10,19,25,33,30,31,37,40,49,49,53,49,46,45,40,37,31,27,26,22,26,
26,22,11,1,0,7,10,10,7,7,10,10,3,7,12,13,13,22,26,27,26,29,31,33,41,43,44,38,36,36,
30,31,30,21,28,35,29,28,32,29,21,11,11,16,14,15,15,17,16,18,22,25,32,31,26,27,29,26,30,31,
27,23,22,22,21,21,14,15,19,18,11,8,13,20,24,28,37,41,45,38,32,23,29,35,39,44,44,42,31,28,
34,39,40,39,31,27,26,28,29,25,27,21,23,17,18,14,21,22,12,15,26,36,39,34,34,42,45,50,49,46,
51,58,53,46,43,45,47,39,40,42,35,29,20,17,14,12,10,12,17,20,32,41,44,40,35,30,24,21,15,17,
20,24,20,21,24,20,20,20,18,20,18,16,11,20,27,37,37,39,43,47,40,30,23,20,21,15,14,6,5,6,
14,15,14,12,14,16,21,23,21,22,25,32,30,30,24,18,11,10,3,2,0,3,0,253,4,10,13,14,13,10,
9,7,3,4,15,27,31,30,25,27,29,33,30,23,19,17,14,8,8,9,18,22,20,25,26,20,11,4,8,8,
4,255,251,0,0,1,2,254,250,251,1,5,7,7,9,18,25,26,33,38,38,43,47,47,41,46,47,43,45,40,
34,28,22,22,16,17,15,11,9,9,10,8,11,15,19,20,22,16,6,12,19,18,20,21,22,27,28,34,34,31,
21,14,9,8,5,0,1,4,10,11,14,15,8,4,4,3,5,2,0,10,6,12,18,19,11,6,11,10,6,7,
8,7,16,18,21,22,26,29,24,16,19,21,15,10,11,20,22,18,10,11,18,21,19,6,2,6,12,8,13,21,
28,31,31,25,30,30,34,35,34,33,33,36,37,39,42,43,43,36,27,23,20,17,13,11,10,15,11,9,13,17,
21,22,21,20,23,28,24,27,31,37,47,50,47,40,34,31,21,18,13,12,10,9,5,7,7,8,9,15,13,8,
3,10,22,21,18,20,27,34,34,35,36,39,42,42,31,32,32,38,36,37,37,36,32,22,20,17,14,19,20,20,
19,19,15,16,15,17,24,28,30,29,26,25,30,32,38,43,47,48,48,41,43,44,43,42,39,36,39,32,34,30,
27,30,29,19,13,8,5,2,5,4,0,5,4,0,251,255,0,5,8,8,12,13,12,14,11,8,12,14,12,10,
7,11,9,4,4,12,16,16,12,5,5,8,8,10,8,6,10,15,18,16,19,19,15,16,16,13,9,9,7,10,
13,14,15,18,26,25,26,29,28,28,33,26,24,22,29,32,27,25,25,27,29,31,30,26,27,22,19,20,22,23,
23,23,26,27,25,22,20,17,19,17,20,20,17,19,17,15,11,13,12,11,9,4,4,6,9,9,13,19,22,21,
15,11,14,26,31,36,30,28,30,32,29,23,18,13,11,6,1,254,252,252,255,255,3,2,2,3,7,10,9,11,
18,25,28,36,35,32,34,38,38,39,33,29,31,29,23,17,14,11,10,13,9,3,1,4,6,8,11,10,9,7,
8,7,16,16,13,13,10,12,16,16,12,9,13,10,10,8,13,10,10,12,12,17,17,19,19,20,25,22,25,25,
28,26,21,15,8,3,4,6,8,4,253,252,0,0,255,253,253,0,5,10,9,6,6,6,14,14,13,9,6,12,
12,15,14,11,9,10,14,15,17,20,23,26,31,37,37,37,34,38,40,40,35,32,29,25,26,20,18,15,10,15,
15,15,13,11,20,16,14,11,15,20,25,24,25,26,28,30,29,34,31,27,26,25,26,25,21,14,13,10,12,11,
8,7,3,1,4,8,8,8,7,4,6,6,10,12,21,22,21,23,17,17,21,24,25,26,24,20,21,23,26,26,
23,17,18,13,16,21,20,16,15,15,16,12,14,10,14,15,14,11,9,7,8,7,13,11,8,8,9,11,14,13,
17,17,22,22,22,22,20,11,11,10,11,18,11,6,7,6,6,9,7,8,5,4,9,15,15,18,17,20,21,26,
29,26,24,25,28,25,24,23,22,19,17,16,16,13,9,8,8,9,14,18,21,23,23,22,25,31,34,33,35,39,
40,39,37,37,38,40,36,33,30,26,25,20,17,12,13,16,20,14,11,13,9,16,13,11,13,13,16,18,20,19,
22,25,21,23,23,19,17,15,20,22,25,26,26,26,27,26,26,26,25,16,15,16,17,20,17,15,13,10,8,7,
6,2,5,5,2,5,7,12,15,13,14,17,19,20,19,23,20,20,21,23,25,28,25,25,18,20,17,16,10,12,
11,8,10,10,7,8,13,13,13,15,16,21,15,16,19,26,25,28,31,29,32,33,32,28,26,20,16,19,16,14,
8,13,11,6,4,6,9,9,9,7,10,9,7,15,13,19,24,25,25,28,25,24,24,28,29,27,24,24,22,22,
22,15,19,16,18,14,15,17,17,18,17,17,17,19,19,21,20,27,26,25,23,24,23,27,27,35,32,34,34,32,
34,32,32,33,32,32,29,31,29,29,28,26,24,23,21,19,18,18,22,23,21,21,20,22,20,25,29,27,24,26,
25,24,25,26,26,27,27,28,23,21,18,14,18,16,19,18,19,18,20,17,17,17,16,20,18,16,16,17,15,17,
15,12,13,11,15,19,43,39,17,19,17,22,25,22,28,44,36,26,21,25,17,20,15,14,9,4,6,6,1,3,
10,9,10,8,9,12,14,11,13,13,10,11,14,15,15,18,22,25,24,26,33,33,37,42,46,48,48,48,43,48,
46,38,40,40,42,43,41,38,35,32,25,25,22,20,18,20,19,20,19,19,25,20,22,20,19,16,19,17,19,20,
21,18,17,19,20,21,20,21,19,19,21,15,19,20,20,21,23,21,22,17,16,15,19,13,11,12,14,15,16,15,
17,20,19,19,17,15,20,20,20,22,26,32,34,32,29,30,25,26,28,27,27,27,27,25,23,22,21,24,20,19,
14,14,13,13,12,11,13,12,12,12,10,6,5,8,7,6,4,9,10,13,15,13,12,10,12,15,14,17,16,14,
18,21,20,24,25,25,25,28,32,30,27,26,26,26,27,25,26,26,28,26,22,21,20,16,15,18,13,14,15,19,
22,21,22,22,25,26,27,28,28,23,28,31,32,32,34,32,32,33,35,31,29,27,27,26,28,29,25,25,26,24,
25,25,22,23,25,25,26,24,23,27,29,26,26,25,22,22,26,25,27,27,29,28,30,31,29,28,29,30,30,31,
30,29,25,29,29,30,29,27,27,24,23,23,22,20,16,17,18,17,16,17,16,12,14,15,15,13,12,13,14,19,
20,22,18,15,19,20,20,23,25,21,26,22,25,27,26,23,25,21,23,20,20,19,16,18,16,14,19,14,12,14,
12,11,8,8,11,13,13,11,66,4,32,0,3,4,3,4,3,3,3,4,3,2,3,3,1,2,1,2,1,2,
0,1,0,2,1,2,0,2,0,3,254,3,198,132,211,3,9,250,251,8,20,21,7,0,6,4,2,6,19,13,
2,251,253,6,13,12,14,14,9,245,190,196,229,245,251,251,1,235,150,135,155,167,164,155,173,213,244,247,249,248,
239,238,255,33,62,60,36,18,8,30,64,70,58,50,41,29,50,80,86,68,45,34,43,60,63,47,22,253,244,240,
246,243,227,208,201,210,227,240,240,231,225,225,231,236,242,239,233,230,235,245,2,12,17,21,30,51,75,80,78,78,
77,76,70,64,49,34,26,23,28,32,28,24,23,25,24,23,24,28,32,31,33,30,24,17,9,10,13,4,254,251,
250,5,13,21,26,23,21,23,32,35,30,27,34,45,50,38,33,34,32,31,31,36,39,37,33,33,30,26,19,17,
21,17,1,250,250,0,5,0,253,5,13,14,12,18,34,26,13,7,3,2,7,255,245,244,249,4,19,26,15,7,
27,51,53,45,30,23,13,0,244,240,249,4,10,15,28,32,24,10,12,27,33,30,24,22,17,4,3,19,27,14,
4,6,12,17,24,22,21,27,30,22,15,14,7,8,9,252,0,7,8,0,243,243,247,250,0,4,12,21,11,6,
13,12,2,244,241,254,12,9,243,240,0,3,0,252,0,5,18,29,33,36,32,33,25,18,14,9,8,250,240,251,
16,14,4,14,21,26,28,8,252,249,243,232,216,215,231,237,240,251,252,248,10,23,25,21,0,236,227,248,5,4,
9,21,18,12,16,16,2,11,37,32,14,5,253,249,0,10,8,11,37,38,27,31,27,13,0,3,9,9,255,220,
210,226,248,253,249,231,227,245,8,21,5,246,0,9,36,59,39,21,17,24,33,27,0,249,1,1,1,0,253,5,
18,10,13,16,10,5,255,3,12,17,25,18,14,20,18,9,251,233,219,228,251,251,237,230,233,245,252,245,229,222,
228,246,15,49,43,23,32,47,54,40,20,16,18,24,8,237,254,18,21,40,57,63,52,33,23,10,21,14,245,245,
9,3,244,6,35,43,25,12,5,12,16,5,252,242,230,218,219,243,247,237,253,13,16,14,19,16,17,30,37,31,
28,32,46,65,62,39,19,25,38,20,247,247,1,253,236,219,236,255,253,3,1,14,28,5,249,255,247,247,252,4,
19,20,255,248,243,1,8,255,4,15,21,28,40,47,35,13,246,239,254,12,255,250,14,42,56,57,44,39,43,37,
30,19,6,248,235,232,209,171,194,208,234,247,6,12,14,36,46,37,33,37,43,35,32,18,6,29,49,27,254,244,
254,14,17,27,37,35,16,10,18,14,0,246,255,9,19,21,251,243,255,24,37,30,24,16,13,3,255,250,242,234,
227,225,208,206,226,241,252,3,13,24,15,10,17,32,43,42,31,39,43,27,11,10,17,10,6,9,8,11,15,7,
0,1,254,255,7,3,255,1,1,3,6,7,247,242,252,0,0,251,255,5,2,254,245,227,224,246,5,14,10,0,
7,6,6,12,21,29,19,2,5,17,27,20,7,1,7,15,15,9,4,3,3,251,0,249,241,233,226,226,234,238,
234,222,234,245,245,243,247,255,255,253,1,1,3,248,247,1,2,7,1,0,0,255,2,12,18,21,27,19,5,8,
6,253,255,4,8,7,3,1,2,3,3,7,9,10,7,252,255,0,251,247,240,237,247,254,251,252,5,11,7,255,
250,247,247,252,6,4,248,247,2,11,13,3,4,16,15,10,2,252,2,8,7,5,251,245,0,14,19,14,6,10,
13,14,3,250,250,2,12,13,19,16,2,0,14,17,13,3,249,251,12,13,9,8,6,10,17,24,17,251,237,248,
4,251,245,241,241,247,245,248,1,3,0,1,12,14,8,254,3,11,0,244,239,242,251,253,253,253,247,244,254,4,
11,5,2,4,9,9,9,12,14,13,3,4,12,12,4,250,254,255,0,6,3,1,253,244,249,5,1,255,0,11,
25,31,20,6,2,4,6,7,9,0,253,5,26,30,22,20,16,15,17,20,19,22,20,7,9,22,15,252,243,253,
17,20,8,1,2,8,6,10,12,7,1,0,2,9,9,7,9,20,28,29,24,16,15,21,24,25,13,252,252,4,
6,0,241,244,1,4,2,254,255,6,12,10,13,15,12,7,1,5,7,255,246,249,2,1,250,250,5,22,17,8,
7,15,21,18,25,28,34,34,27,23,22,21,13,4,1,5,254,244,250,5,12,10,8,20,29,23,15,12,17,21,
15,6,4,7,5,252,251,254,255,1,3,255,250,243,237,244,252,1,3,4,10,16,22,32,34,23,15,17,20,15,
4,253,253,1,1,1,6,13,21,17,17,22,17,12,15,16,12,11,8,3,255,0,2,6,9,13,14,12,14,13,
9,1,249,247,250,245,245,246,254,6,9,8,14,17,13,12,5,7,15,11,9,9,0,0,40,3,18,0,12,12,
4,5,19,13,14,10,10,6,248,247,255,253,11,6,6,4,3,208,162,133,132,159,181,210,239,19,21,3,250,11,
17,15,15,23,30,31,31,27,13,4,248,245,6,27,50,59,62,60,57,58,59,66,66,61,59,53,31,17,6,252,
8,11,15,5,218,214,202,179,177,193,224,232,227,247,248,231,231,238,244,255,0,5,11,12,15,16,16,18,14,13,
14,14,21,23,22,26,31,34,33,38,43,44,47,41,39,39,37,42,30,33,32,29,29,22,14,9,250,245,0,1,
0,12,19,29,21,21,27,22,12,14,242,254,22,18,5,255,9,20,14,5,12,21,24,21,15,25,36,32,37,42,
49,50,47,41,45,47,41,34,31,31,36,29,27,26,28,32,28,25,24,21,22,21,15,10,11,16,11,10,10,254,
250,254,3,2,2,4,8,12,16,20,19,22,32,37,42,41,37,40,42,45,44,38,33,34,35,34,37,35,34,32,
27,19,22,18,16,14,254,252,0,249,4,23,23,18,11,9,8,4,6,11,20,28,32,34,41,44,41,36,32,32,
27,22,21,25,30,38,40,36,41,32,19,9,8,8,8,11,11,12,13,5,9,12,8,6,253,248,248,249,252,5,
15,20,22,23,28,23,15,17,22,30,28,27,30,38,46,50,45,42,37,34,24,22,23,18,14,14,13,6,3,250,
243,244,248,251,247,248,248,250,255,11,25,24,19,16,9,0,6,31,38,32,31,34,29,32,38,41,32,21,12,12,
3,0,253,0,3,11,11,4,1,10,13,19,22,20,23,23,27,27,25,21,12,11,20,35,51,52,31,9,253,247,
246,254,6,5,254,247,249,253,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,244,3,26,0,
9,9,9,9,10,9,10,8,9,8,10,8,7,9,8,7,7,7,9,7,6,8,7,6,8,7,7,7,6,3,
5,2,8,2,4,206,151,181,217,246,5,0,244,159,133,202,252,16,14,16,12,15,15,12,23,27,27,27,28,30,
31,22,21,24,16,17,19,20,233,187,188,195,200,216,246,6,8,14,18,24,19,7,254,248,203,165,164,177,198,214,
228,2,27,46,50,52,57,49,46,49,51,43,37,42,50,58,64,66,62,49,37,28,24,18,5,247,241,238,239,243,
248,251,252,253,2,7,11,14,13,15,10,8,9,7,5,252,246,248,253,6,12,22,31,41,45,53,64,66,61,55,
45,41,38,36,33,33,33,32,35,41,44,44,38,31,29,26,18,10,9,8,0,0,4,9,11,15,15,18,15,17,
15,7,2,255,254,0,0,3,1,7,13,13,21,22,19,13,16,18,17,22,18,19,14,7,1,9,241,195,217,243,
253,11,12,5,4,253,238,245,254,255,9,33,37,35,39,33,28,34,44,46,52,44,31,23,21,6,255,0,255,2,
20,32,33,36,32,22,14,11,0,251,250,254,250,0,251,242,239,224,224,235,0,29,42,31,15,254,229,222,239,8,
22,37,36,29,39,42,22,11,19,22,27,32,26,4,243,250,9,29,41,33,18,17,9,252,237,248,3,6,0,251,
255,13,27,16,11,6,251,247,0,17,18,9,13,29,39,35,9,254,244,243,252,3,19,9,253,6,18,29,36,26,
21,24,22,15,20,19,9,1,13,37,35,36,11,5,25,5,251,254,0,252,248,250,242,246,4,15,31,31,16,6,
246,7,18,21,30,23,34,33,28,23,16,15,22,30,43,23,253,249,249,249,254,26,41,57,29,251,3,15,12,0,
10,8,9,11,254,0,7,0,249,255,252,248,239,236,238,246,4,251,1,11,9,242,238,9,34,35,1,0,29,8,
6,8,255,3,26,35,25,44,19,196,185,231,223,229,15,20,249,247,10,2,1,33,39,6,4,33,22,4,15,16,
9,18,32,40,40,37,19,12,16,6,249,252,26,30,8,255,2,7,20,37,40,26,5,255,253,8,16,12,0,0,
6,3,3,3,6,255,255,3,1,255,6,7,8,14,14,12,18,21,9,1,5,11,10,7,12,22,23,20,18,11,
7,9,10,20,11,0,0,10,18,19,9,4,11,19,21,20,11,5,248,244,249,10,26,21,17,10,3,7,14,3,
252,1,4,253,253,7,10,18,24,30,30,10,251,251,3,13,6,0,0,255,5,21,39,43,17,249,253,11,8,255,
252,3,23,30,22,7,247,238,244,11,31,36,8,233,232,248,5,14,20,21,19,23,16,7,254,248,253,8,26,18,
243,245,252,1,20,31,42,41,19,255,236,245,0,253,1,13,16,246,226,251,21,33,23,17,18,8,249,243,4,15,
27,32,25,11,6,251,234,252,24,22,21,26,8,231,235,0,12,18,26,18,251,245,247,255,253,11,24,5,243,249,
0,255,253,2,10,2,8,253,239,251,10,6,2,7,8,8,17,26,10,250,4,7,12,7,252,250,11,28,29,10,
231,218,3,43,40,0,231,237,246,245,253,255,255,9,13,0,252,250,235,248,13,13,246,235,253,4,10,9,10,253,
234,253,14,8,252,238,236,255,28,30,11,1,9,16,10,252,253,13,22,24,14,246,235,249,2,0,3,11,14,7,
0,245,244,252,0,15,29,23,0,244,250,2,25,40,25,4,255,249,0,7,20,9,253,9,15,7,11,3,251,11,
33,31,10,3,5,2,0,10,7,1,6,4,0,10,3,249,246,2,10,253,0,4,5,253,251,2,14,8,10,17,
13,8,9,11,9,6,21,17,253,248,15,28,18,6,2,6,10,8,12,23,17,6,6,8,4,254,3,23,21,250,
253,16,8,10,11,17,30,17,9,9,11,20,25,6,9,2,0,23,32,23,4,4,2,15,30,22,17,8,1,10,
11,0,254,17,39,13,230,240,16,19,0,12,20,10,5,248,1,37,50,19,254,3,247,2,29,33,21,12,10,0,
8,28,36,34,18,252,240,7,8,0,12,14,18,5,233,230,254,7,4,13,6,240,235,240,246,253,8,3,240,241,
0,255,247,2,8,8,12,2,240,253,24,26,17,10,255,3,8,2,3,18,30,23,9,9,23,18,9,23,31,36,
16,250,0,26,38,34,15,8,4,5,13,20,31,10,10,20,254,255,15,15,29,34,18,3,8,10,3,21,31,19,
7,252,4,18,16,4,249,1,1,253,7,8,255,241,252,4,249,242,246,5,15,255,106,3,24,0,9,9,3,4,
14,10,10,8,7,4,250,250,0,254,8,5,4,3,2,220,185,164,163,184,200,222,244,14,16,2,252,8,13,11,
12,17,22,23,23,21,9,3,251,248,4,20,38,44,47,45,43,43,44,50,49,46,44,40,23,13,4,254,6,8,
11,4,228,225,216,199,197,209,232,239,234,250,250,238,237,243,247,0,0,4,9,9,11,12,12,13,10,9,10,11,
16,18,16,20,23,25,25,29,33,33,35,31,29,29,28,31,23,25,24,22,21,17,11,7,252,248,0,0,0,9,
14,21,15,16,20,17,9,10,246,255,17,13,4,255,7,15,10,3,9,16,18,16,11,19,27,24,27,32,36,37,
36,31,34,35,30,25,23,23,27,22,20,20,21,24,21,19,18,16,17,16,11,8,8,12,8,7,8,255,251,255,
2,2,2,3,6,9,12,15,14,16,24,28,31,31,28,30,32,34,33,29,25,26,27,25,28,26,26,24,20,15,
17,13,12,10,255,253,0,251,3,17,17,14,8,7,6,3,4,8,15,21,24,26,31,33,30,27,24,24,20,17,
16,19,23,29,30,27,31,24,14,7,6,6,6,8,8,9,10,4,7,9,6,4,254,250,250,251,253,4,11,15,
16,17,21,17,11,13,17,23,21,20,22,28,34,38,34,31,28,25,18,17,17,14,10,11,10,5,2,252,246,248,
250,253,250,250,250,252,0,8,19,18,15,12,7,0,4,23,28,24,24,25,22,24,29,31,24,15,9,9,3,0,
254,0,2,8,8,3,1,8,10,14,16,15,17,17,20,20,19,16,9,8,15,26,38,39,23,7,254,249,249,255,
4,4,255,250,251,254,1,2,2,0,8,22,26,10,10,30,34,16,16,19,15,2,251,8,17,5,242,227,225,239,
239,236,229,227,239,254,251,255,1,13,20,24,43,39,28,29,31,18,8,20,21,2,10,29,23,19,9,255,243,244,
19,16,234,249,10,4,6,13,34,25,14,26,26,15,29,17,251,244,15,32,2,242,4,10,3,18,29,16,251,10,
17,254,8,24,26,15,30,68,60,42,47,41,18,246,252,15,17,20,21,10,7,20,0,236,233,7,27,8,251,253,
4,26,33,18,4,254,255,1,20,39,60,64,41,15,10,20,12,241,239,27,39,26,26,27,21,21,19,13,9,25,
39,29,12,3,248,9,52,67,53,17,236,223,228,3,10,234,231,249,250,233,228,239,233,237,255,20,36,9,228,206,
229,6,32,16,252,232,236,253,0,244,254,0,248,220,210,229,231,226,240,1,6,254,2,0,242,1,13,10,24,51,
64,52,47,43,30,26,39,21,246,248,1,1,241,245,12,24,18,8,3,26,24,25,32,60,99,100,93,72,47,33,
36,34,40,47,71,68,35,255,254,2,18,44,35,18,14,27,17,39,69,42,253,10,50,67,29,0,248,8,16,6,
241,214,251,31,2,233,249,231,201,209,228,244,250,0,243,219,240,239,220,203,220,237,212,196,207,252,6,237,191,173,
183,191,225,238,218,227,242,243,220,212,201,213,229,243,0,225,224,232,254,6,1,245,231,240,4,4,253,4,10,248,
251,28,45,24,7,21,20,10,11,23,23,23,33,40,20,0,14,25,13,7,23,30,20,46,83,80,40,25,37,37,
40,48,48,47,72,73,45,16,11,19,21,33,51,71,85,84,60,33,19,22,33,45,55,48,28,29,39,36,23,14,
11,16,37,46,37,14,9,11,28,40,21,250,242,8,45,43,3,217,236,25,64,58,27,12,243,236,212,218,250,27,
40,14,240,228,232,213,185,203,235,249,243,14,32,249,235,222,225,235,18,12,236,251,39,57,18,26,41,255,219,231,
248,244,254,27,29,7,4,237,188,198,216,214,206,224,246,222,222,244,250,234,239,243,233,231,229,236,233,247,4,1,
253,229,205,173,173,195,182,196,217,252,247,217,173,134,156,198,213,203,205,214,213,229,249,13,254,232,252,8,12,0,
0,0,188,4,15,0,32,20,44,55,14,36,37,12,13,23,241,240,13,253,5,17,226,0,245,12,228,250,230,250,
237,251,22,3,53,11,2,39,1,20,40,35,9,221,25,18,17,227,252,27,247,0,51,28,29,37,34,30,48,18,
30,63,55,54,252,61,66,33,52,35,69,52,75,53,31,54,72,31,27,58,12,41,44,43,245,26,23,5,237,4,
247,244,21,3,241,21,3,6,5,31,7,25,43,11,36,64,37,82,41,21,47,36,40,21,51,64,13,18,59,22,
49,255,17,45,30,21,23,18,15,32,25,22,226,19,26,247,32,248,5,17,41,6,24,12,234,27,23,59,249,1,
14,32,43,250,246,252,42,35,251,8,45,245,6,3,5,7,40,226,18,30,0,243,22,251,3,57,50,230,235,89,
9,234,62,14,240,82,68,216,7,20,16,10,247,21,236,223,59,40,166,4,245,223,22,252,17,15,27,249,32,22,
245,3,46,49,228,59,41,249,44,29,25,9,246,69,241,36,25,7,0,18,47,217,248,0,241,32,46,251,238,24,
67,28,230,35,31,47,13,41,85,0,14,72,239,57,70,245,16,31,22,24,32,30,36,39,75,7,217,13,61,15,
253,57,66,223,38,77,36,235,242,66,60,237,2,52,8,48,25,208,61,45,234,227,12,68,202,242,97,227,252,94,
216,240,50,255,4,252,41,235,18,81,235,17,251,64,214,213,80,239,210,80,33,185,39,226,37,239,224,47,255,36,
38,14,62,254,12,42,23,239,48,4,16,239,5,60,245,68,221,240,54,234,212,22,22,16,253,95,49,146,20,89,
202,10,102,228,243,84,26,248,22,78,235,224,38,37,196,28,75,209,16,62,234,247,13,244,56,11,237,35,58,233,
251,67,36,214,53,61,0,77,236,5,58,47,10,251,11,42,0,224,14,10,21,241,20,50,28,203,238,72,60,12,
250,18,53,1,14,30,238,41,60,255,253,41,29,236,202,59,73,203,2,255,187,77,30,153,253,96,2,144,24,109,
205,195,66,55,9,236,192,41,44,7,203,41,97,239,215,252,69,53,244,226,85,95,183,208,72,64,242,231,245,32,
51,235,10,252,49,11,161,64,78,240,248,16,72,52,234,45,31,226,4,238,3,40,17,244,254,248,242,250,239,13,
13,221,9,215,2,80,10,248,40,14,38,34,210,245,34,253,7,7,70,13,215,13,34,47,230,218,68,51,8,36,
236,10,50,183,6,0,187,20,28,215,234,6,245,53,239,198,36,7,237,36,34,16,14,215,4,55,245,14,91,59,
6,2,19,44,40,237,72,120,64,6,39,66,47,16,14,71,57,19,252,23,13,9,70,25,200,11,18,233,230,36,
51,29,65,45,18,249,8,7,237,41,26,250,72,87,203,240,85,2,144,217,11,13,37,4,41,120,30,195,248,67,
11,184,215,60,43,214,27,120,49,209,223,20,40,194,173,246,53,20,253,23,249,1,249,213,233,221,199,213,28,67,
28,248,1,36,254,222,58,53,248,10,58,79,41,20,53,59,251,227,231,253,255,235,13,41,34,228,212,32,81,18,
158,232,69,13,220,3,96,63,31,35,43,45,231,234,59,77,27,14,31,69,27,235,26,231,0,56,63,21,216,4,
46,36,11,246,250,243,238,248,31,16,233,6,11,15,7,10,5,41,72,241,233,248,254,2,6,30,20,254,10,246,
4,28,225,253,61,59,42,0,248,51,52,41,13,4,7,2,25,49,26,27,42,3,31,65,4,225,29,41,13,29,
255,5,16,25,46,29,8,27,6,251,24,239,227,34,31,254,17,36,255,5,16,21,29,38,14,1,30,66,34,1,
16,47,14,253,22,26,20,22,14,25,42,237,237,21,3,249,243,248,0,221,210,247,9,15,7,250,247,35,23,4,
2,235,7,40,10,0,28,46,38,242,254,54,45,5,242,3,28,53,25,13,44,35,15,22,23,34,17,6,17,25,
19,8,0,62,88,15,242,0,18,49,241,237,34,8,18,23,15,6,245,237,12,28,17,28,35,56,39,33,43,42,
9,1,50,34,25,2,9,22,35,28,247,244,19,25,8,4,24,16,244,246,20,251,224,255,12,16,18,246,225,246,
34,54,24,245,9,7,43,53,33,35,16,34,43,41,18,9,21,35,31,18,0,240,254,11,40,34,233,244,29,41,
20,11,34,16,3,31,35,0,239,17,41,29,30,3,0,28,40,13,18,6,249,37,18,8,29,5,6,26,28,33,
6,249,29,24,3,19,3,7,68,54,17,9,23,49,27,3,31,27,16,23,0,18,26,254,239,246,10,9,228,255,
41,28,17,7,17,29,13,11,35,32,12,36,33,7,11,33,46,18,9,18,248,7,46,38,36,53,49,22,28,47,
28,20,11,31,39,1,236,250,245,4,13,14,8,244,13,41,27,18,12,12,27,18,13,9,27,38,24,12,15,41,
37,21,33,60,38,13,30,46,46,36,24,41,43,16,22,25,17,14,252,7,17,7,7,7,15,26,16,247,9,30,
18,27,26,35,54,18,18,54,29,249,0,2,32,11,240,251,19,31,14,2,14,253,248,3,9,21,21,20,43,50,
32,35,21,16,27,23,16,19,34,42,34,16,20,26,22,253,247,3,11,255,250,21,21,253,247,253,251,242,251,12,
3,10,27,23,15,33,48,36,13,21,32,24,19,31,25,6,29,41,21,3,12,23,14,6,16,28,27,31,29,22,
21,33,19,19,31,33,33,25,27,31,41,43,23,18,29,22,28,23,91,7,30,0,12,14,11,4,6,8,11,12,
10,7,6,6,10,8,7,5,2,241,225,0,36,52,38,252,226,244,23,43,32,3,246,251,8,26,22,10,0,252,
8,16,19,18,10,1,1,8,13,16,11,3,1,7,13,10,6,4,4,6,6,6,4,2,255,246,243,0,8,22,
20,3,255,254,4,17,16,10,1,3,9,11,230,193,233,15,43,39,4,242,251,18,36,37,24,8,6,11,25,24,
18,8,253,14,21,16,20,0,243,32,42,4,255,218,186,240,41,51,38,248,230,0,25,39,34,4,246,247,243,240,
211,202,240,22,37,34,13,239,0,40,47,48,12,238,252,2,10,20,2,223,210,220,252,35,30,26,6,251,31,49,
37,24,18,10,27,51,3,1,50,25,12,16,13,18,37,54,11,254,2,3,28,22,32,18,254,5,239,7,26,4,
7,0,245,2,28,12,238,238,0,5,7,17,250,255,14,247,8,9,9,239,255,254,16,31,10,254,253,14,17,20,
19,10,15,252,4,23,254,249,17,23,28,26,234,2,16,22,50,15,229,248,14,19,33,21,248,242,25,252,3,30,
10,4,233,246,22,0,21,251,0,30,252,240,4,17,13,36,1,254,4,241,23,18,249,255,10,15,26,0,217,8,
29,7,59,247,218,8,9,33,32,26,7,201,220,33,14,49,41,219,226,25,223,32,60,230,9,13,228,35,35,0,
254,14,242,237,20,233,14,73,251,224,247,29,39,47,246,207,0,52,31,38,64,190,224,35,20,31,7,35,230,197,
71,24,238,44,234,39,25,225,252,17,36,3,26,214,234,53,240,45,233,216,21,19,46,221,213,23,39,8,17,24,
239,244,46,4,6,17,214,253,62,30,228,232,25,28,20,9,41,208,210,67,14,39,5,201,230,92,54,251,243,198,
202,36,95,28,232,16,244,206,14,10,18,87,30,184,201,0,46,49,38,231,217,216,61,32,237,32,6,200,1,14,
12,28,48,7,212,231,0,72,255,219,11,249,30,67,225,227,28,213,42,38,241,23,14,30,204,224,0,19,124,250,
170,13,2,252,36,44,33,18,212,174,242,67,56,251,230,245,45,42,205,231,42,11,0,28,216,250,66,12,254,231,
238,224,44,101,0,181,216,227,247,81,29,243,246,201,190,33,37,77,54,193,234,41,255,66,29,0,243,252,92,230,
14,103,233,202,18,68,12,11,21,224,27,243,14,35,9,0,241,61,194,30,19,174,61,54,218,237,0,21,248,2,
18,28,240,239,21,20,20,232,39,12,242,64,248,53,45,181,252,18,71,5,208,56,245,248,54,244,240,12,43,237,
225,82,254,240,12,212,9,29,33,49,3,233,255,234,219,68,106,225,205,39,226,48,53,249,252,234,34,61,247,246,
26,36,23,22,231,234,14,216,90,6,233,22,245,3,8,207,0,37,24,26,176,184,53,52,224,18,19,238,5,216,
244,106,9,229,40,15,14,0,245,46,2,4,53,232,229,45,45,17,11,0,217,237,61,27,183,28,11,254,39,217,
4,40,3,27,232,231,13,27,18,250,253,19,37,233,6,6,19,26,233,19,25,235,64,39,240,37,29,236,8,11,
6,58,38,254,33,215,23,38,231,28,25,254,10,252,3,240,13,43,15,234,3,5,16,13,233,248,225,22,34,215,
45,25,222,214,14,27,250,0,18,25,240,254,49,26,205,39,47,211,20,70,224,34,22,220,33,253,236,53,51,5,
239,250,74,35,236,29,16,214,44,6,225,55,27,211,250,25,215,250,46,238,246,21,6,240,5,254,235,252,246,250,
48,42,229,237,4,232,245,59,41,12,33,245,8,6,16,33,3,241,39,62,254,34,0,31,17,228,0,29,23,28,
45,249,244,26,254,236,26,252,226,15,22,35,5,244,13,15,212,0,23,224,32,59,17,253,225,223,8,17,9,10,
47,20,243,29,6,249,13,49,5,253,72,22,245,254,9,248,25,16,21,24,255,19,0,216,39,8,201,24,54,20,
11,4,247,17,10,13,47,236,253,28,0,251,17,34,9,22,22,236,5,241,13,33,203,255,77,14,231,31,0,215,
11,12,222,13,35,9,4,11,235,247,34,14,46,30,227,23,27,247,229,255,34,27,235,5,46,251,243,253,249,29,
11,231,5,45,43,255,215,10,20,243,29,1,19,18,215,5,23,231,17,21,250,9,16,4,247,17,249,251,42,15,
26,25,221,251,23,33,42,16,6,10,6,25,10,16,27,253,231,23,12,10,22,0,0,27,11,243,21,245,248,32,
3,233,251,20,35,254,26,11,211,231,17,7,2,251,13,41,255,240,1,252,44,58,240,247,35,20,240,5,17,26,
49,14,2,7,255,15,18,253,255,22,45,8,246,12,12,235,251,9,241,5,17,254,226,240,14,0,14,4,245,3,
26,1,226,6,13,5,32,35,29,10,21,17,24,3,253,8,28,43,4,1,39,36,5,243,3,1,12,40,0,238,
31,2,248,19,6,15,28,11,241,236,1,242,240,6,35,23,247,249,238,6,14,0,255,3,250,245,36,50,34,23,
8,240,15,11,8,41,6,223,6,24,247,255,12,14,252,6,35,255,255,36,19,212,18,54,249,253,27,13,254,6,
249,243,6,27,253,10,37,19,253,11,31,15,236,13,33,27,19,26,22,6,5,9,18,29,247,228,3,18,7,25,
21,5,2,2,6,253,255,23,249,245,18,14,247,5,2,238,242,13,3,11,255,0,13,255,16,9,237,1,10,252,
24,15,10,40,1,241,20,11,248,15,35,30,21,28,12,246,249,5,7,250,12,18,0,13,36,19,17,250,245,7,
9,253,9,12,6,18,20,245,239,13,8,231,252,26,6,2,254,0,247,251,16,17,17,35,25,5,250,251,246,0,
12,15,14,29,36,21,0,4,0,243,248,2,250,247,10,241,249,0,251,19,31,4,234,254,9,14,7,14,25,4,
1,25,0,14,29,4,3,20,11,250,255,10,5,2,21,39,30,19,28,26,14,19,13,9,8,34,21,5,32,10,
247,0,254,245,247,247,238,236,240,4,7,1,252,252,16,15,9,8,1,254,249,4,14,21,18,12,10,21,13,7,
13,19,9,15,253,241,8,19,19,13,22,40,21,255,13,14,250,254,253,0,13,11,16,3,253,3,10,5,252,7,
250,224,250,15,3,254,16,6,255,9,18,14,2,10,18,3,0,11,9,1,26,31,2,34,57,20,1,21,11,227,
246,28,15,14,24,24,12,13,12,254,0,0,228,235,4,10,1,250,255,253,241,248,255,254,0,13,10,6,18,10,
250,254,0,7,25,23,31,37,14,2,0,1,248,8,24,33,36,12,12,21,19,10,0,16,42,16,2,16,8,252,
8,10,254,7,12,3,2,2,7,254,251,251,247,2,5,255,10,26,20,14,27,15,16,26,33,20,8,12,5,8,
13,8,16,29,17,1,13,17,8,4,5,253,0,1,250,253,2,5,13,21,12,12,8,249,235,229,241,252,8,24,
27,15,5,7,7,14,20,24,6,250,5,7,11,23,25,25,23,13,10,21,21,12,11,8,8,6,9,9,8,8,
255,3,14,17,12,6,0,249,251,251,0,4,5,4,7,18,13,7,6,6,252,6,21,18,14,13,4,7,7,2,
10,12,12,19,15,15,20,23,17,5,1,11,13,4,11,21,18,12,12,11,8,2,255,249,0,0,1,9,8,4,
3,2,2,8,13,9,255,2,20,19,10,7,252,4,11,8,10,22,15,12,21,13,6,5,18,18,2,6,11,14,
19,15,15,5,0,9,8,13,17,5,8,4,253,255,254,4,4,2,7,6,10,18,15,0,253,0,253,248,250,2,
255,247,1,8,4,1,251,0,5,11,19,9,5,0,255,2,1,8,20,26,21,20,18,12,14,15,10,6,13,9,
7,15,20,18,30,31,20,12,13,9,6,10,6,254,255,1,253,2,4,0,6,4,0,0,1,254,247,252,250,250,
9,11,13,22,15,15,21,15,3,9,7,6,13,14,11,11,13,11,11,8,11,13,10,11,11,15,19,7,1,2,
253,250,254,9,7,8,12,9,6,2,0,253,1,7,2,6,7,4,1,7,10,5,11,13,8,4,6,11,10,11,
21,21,11,15,21,14,14,18,11,12,16,13,12,18,22,21,19,14,10,3,9,11,9,10,10,9,8,12,18,14,
16,22,18,11,7,4,2,1,254,0,3,9,13,12,14,11,8,8,8,5,0,254,253,254,255,0,6,11,10,8,
8,8,4,1,1,251,249,247,244,252,0,254,0,254,249,0,11,4,35,0,4,1,255,7,0,255,251,254,27,255,
232,16,244,241,20,242,250,25,4,8,248,250,28,0,246,0,238,248,23,242,1,17,2,3,245,237,34,250,240,244,
6,10,251,1,232,16,251,17,9,5,10,10,6,232,1,249,20,0,5,10,245,9,5,23,254,15,246,0,7,251,
254,252,30,251,239,29,244,1,16,5,250,2,232,6,9,220,41,252,0,13,217,242,224,228,237,209,198,246,213,243,
236,0,8,252,10,253,33,0,23,16,14,48,27,255,39,38,25,8,5,14,11,34,1,19,1,25,2,9,4,17,
252,255,2,247,253,229,241,223,14,0,194,243,249,215,238,11,212,237,0,10,2,244,2,20,33,235,36,245,6,251,
3,15,3,7,32,215,240,66,230,14,24,208,40,27,246,235,234,15,13,219,8,230,234,40,217,7,206,19,6,235,
250,0,206,12,14,233,29,35,20,229,53,27,16,65,28,54,30,52,42,26,82,55,222,28,50,1,11,236,190,177,
41,64,245,208,166,203,167,151,171,169,6,181,132,246,205,188,243,225,250,246,204,27,251,22,56,36,72,52,219,64,
98,42,31,72,6,56,81,40,24,46,90,6,43,10,241,14,64,241,0,0,1,187,249,29,212,219,194,2,214,209,
227,229,252,223,183,234,255,204,227,0,247,250,237,16,246,33,29,9,6,5,23,17,23,255,5,33,36,0,240,23,
69,219,242,49,233,45,195,9,76,189,238,19,219,18,228,227,54,214,29,235,7,17,222,23,7,246,247,11,87,214,
250,19,247,74,231,6,19,231,255,242,237,44,198,33,205,219,29,11,247,217,0,18,237,9,57,198,77,243,214,33,
242,6,8,13,54,221,232,14,223,214,234,21,236,36,23,175,36,42,238,249,21,247,243,250,255,211,14,87,224,218,
37,0,236,6,253,0,18,4,229,248,15,243,240,30,11,238,9,248,235,12,24,250,4,30,17,222,33,25,220,32,
41,248,239,28,241,5,33,16,241,12,38,242,221,238,30,234,2,238,224,17,40,204,238,6,224,246,240,35,232,244,
254,224,19,30,239,4,26,15,240,219,0,252,14,19,32,242,25,246,215,36,59,248,5,33,203,8,27,2,231,15,
24,16,225,233,230,233,42,20,233,222,17,245,231,36,32,202,243,9,11,230,247,32,229,15,22,230,250,20,253,238,
24,31,235,0,49,248,0,16,235,20,19,52,250,210,16,15,199,1,12,244,240,7,231,218,60,248,223,21,5,237,
234,253,6,248,18,24,252,234,13,27,232,21,9,221,13,16,233,0,44,248,248,6,43,231,218,61,26,171,237,16,
254,43,0,226,245,70,223,225,37,25,233,249,23,209,244,46,14,219,0,2,251,243,29,248,235,31,251,238,4,31,
223,7,28,244,227,14,10,13,10,241,255,31,29,233,238,2,18,5,17,234,8,21,241,244,234,32,249,212,13,245,
247,41,220,232,255,32,5,226,8,239,0,14,7,20,253,14,246,246,36,244,229,41,247,4,10,248,230,14,17,5,
216,8,38,234,249,243,241,3,23,251,253,20,246,220,19,15,21,241,242,245,210,248,24,28,34,237,255,243,14,8,
23,41,3,244,238,4,29,250,18,38,14,255,224,233,5,8,252,0,243,230,235,237,251,10,250,251,3,9,0,249,
248,242,21,21,17,246,222,10,248,1,28,16,11,223,236,9,238,0,10,43,48,16,222,235,11,4,0,12,255,216,
223,251,17,35,23,223,230,4,28,245,8,3,233,7,0,244,248,13,43,8,241,245,216,14,41,245,252,16,0,238,
11,10,38,22,20,0,253,237,226,1,12,14,0,245,250,243,240,246,254,245,233,252,249,221,252,4,18,19,13,244,
15,250,221,0,25,25,3,8,1,15,7,8,6,8,13,7,2,231,232,18,19,255,17,26,19,235,245,0,9,243,
242,16,240,249,254,232,9,27,234,12,253,238,212,223,6,2,251,14,3,240,236,244,21,31,20,5,255,14,16,253,
240,9,19,15,4,252,240,11,9,253,11,255,234,236,239,8,14,246,253,241,255,25,2,246,15,9,0,255,17,0,
234,19,25,5,254,244,252,5,11,243,250,13,2,7,25,21,255,236,23,1,231,9,4,242,245,1,1,8,248,229,
243,32,252,204,253,3,242,0,5,19,4,241,248,249,255,6,249,0,3,3,7,21,11,246,31,22,1,0,236,235,
5,248,4,13,6,243,237,10,8,251,10,17,0,250,252,249,2,4,1,1,13,10,227,222,253,1,19,246,248,3,
9,5,255,15,11,254,4,21,26,252,244,12,16,26,12,249,238,238,251,254,2,7,238,227,253,0,249,232,240,9,
5,245,237,234,245,0,47,4,33,0,5,4,4,5,3,3,0,253,226,205,14,38,39,6,234,3,13,23,5,0,
9,12,14,1,4,6,9,8,6,7,5,9,12,11,7,8,5,6,5,6,9,6,7,4,5,5,6,5,2,5,
2,5,3,2,0,2,9,236,222,5,30,35,245,224,3,42,51,19,225,200,15,33,11,4,18,36,34,5,233,13,
23,35,25,0,14,9,14,231,216,228,246,13,6,1,7,20,11,8,21,250,247,4,253,13,7,254,12,5,251,255,
14,24,26,5,237,16,3,10,4,249,236,8,23,245,23,246,247,17,19,28,1,247,2,24,25,1,255,247,252,255,
17,242,13,0,15,7,0,0,0,40,8,23,5,246,37,0,31,9,14,21,11,15,0,15,246,211,250,22,24,6,
11,4,12,0,0,15,22,247,19,5,247,24,255,3,6,240,7,7,250,8,4,11,11,247,5,1,17,5,255,253,
252,14,9,0,4,3,12,3,241,28,0,248,13,245,16,255,4,11,5,16,236,22,28,238,18,235,24,40,194,49,
5,251,53,236,8,3,2,23,241,252,24,245,33,6,236,37,233,14,6,238,10,24,244,240,13,15,247,3,45,209,
0,31,11,238,239,45,254,0,239,7,23,241,6,4,21,250,7,234,253,45,248,238,21,1,13,13,243,248,7,14,
0,16,254,17,255,240,20,8,1,255,20,240,22,39,196,42,1,236,56,237,245,1,218,66,220,253,23,225,26,230,
19,235,15,10,227,25,5,8,33,10,249,253,34,1,12,26,25,249,19,227,50,1,15,20,220,39,19,6,29,222,
239,54,7,246,11,254,6,13,25,228,24,26,196,52,34,189,6,30,32,4,245,235,59,242,11,15,224,56,2,210,
60,226,248,51,217,56,1,170,101,231,14,19,237,47,5,237,15,11,17,2,209,45,10,2,3,242,38,1,242,17,
7,2,238,16,34,2,9,16,203,87,209,14,44,185,48,58,176,29,42,186,96,197,48,11,194,91,208,24,71,174,
222,127,225,253,0,235,28,35,3,228,0,230,16,13,17,30,201,247,69,249,246,8,216,33,44,228,43,234,241,38,
250,43,0,234,10,23,14,28,190,5,57,235,250,205,243,68,17,193,15,63,50,182,225,109,56,226,202,55,34,231,
250,13,247,249,255,11,44,2,221,42,49,238,233,16,17,3,44,232,43,236,188,61,19,0,205,24,40,252,231,21,
21,237,11,22,0,16,237,222,25,11,19,255,47,13,229,4,35,244,247,27,240,247,123,220,143,111,240,43,51,144,
34,27,231,33,211,8,49,201,239,28,0,222,52,239,8,0,1,69,208,45,252,189,11,5,239,81,206,227,37,252,
19,207,17,90,239,245,244,254,60,220,1,49,14,24,229,254,23,57,201,8,40,217,30,242,197,20,31,240,10,9,
237,31,20,230,8,38,224,8,44,249,236,23,243,255,22,253,12,223,34,8,243,14,40,227,2,240,15,56,223,253,
236,39,47,12,201,66,1,4,11,13,248,1,20,8,35,21,234,246,74,1,202,10,27,6,15,16,14,18,241,47,
15,244,250,4,244,254,248,19,30,210,224,24,20,204,224,34,40,1,1,13,20,11,220,241,32,12,230,15,28,26,
255,213,30,55,248,241,36,16,9,14,37,252,9,29,250,242,17,11,236,45,42,254,22,253,244,239,28,53,191,230,
52,249,255,8,224,21,13,23,247,216,16,2,18,10,241,29,5,223,34,31,35,232,228,21,31,25,236,255,25,12,
243,27,16,14,9,216,35,9,213,18,234,12,61,232,0,216,210,23,240,245,3,223,20,35,8,4,227,5,14,9,
38,14,225,66,30,12,19,249,12,4,4,17,18,33,0,18,75,6,239,244,1,0,0,32,9,4,239,250,0,5,
248,242,7,1,0,16,246,226,12,22,0,246,21,15,251,26,26,253,253,245,0,23,4,244,249,53,15,246,13,251,
244,14,12,241,249,0,21,42,26,226,4,17,8,250,0,10,4,14,0,5,0,0,16,7,16,253,215,21,12,244,
7,17,24,27,243,253,38,244,223,12,1,255,18,27,8,0,10,3,0,9,2,241,1,16,6,3,7,252,3,21,
248,236,241,254,245,246,9,30,22,1,21,14,254,6,8,252,12,13,5,5,13,14,19,255,9,240,237,248,253,13,
22,11,34,13,7,7,2,8,246,17,25,0,23,14,240,39,11,241,22,10,236,248,8,20,5,0,12,247,11,4,
0,11,21,253,254,4,13,15,5,7,13,17,5,2,8,13,3,27,255,249,20,22,11,17,13,0,240,244,14,252,
245,249,1,4,3,251,254,240,246,2,5,253,248,2,7,22,16,9,3,0,250,3,10,3,1,0,247,6,12,254,
252,1,2,4,0,253,9,11,13,10,6,5,255,249,242,247,251,244,0,4,2,255,0,4,250,253,7,20,19,15,
7,0,198,2,43,0,0,0,0,0,0,0,0,0,1,1,1,1,2,1,2,0,3,1,2,1,3,253,0,3,
5,5,3,0,255,254,0,2,3,2,0,254,252,253,0,0,255,0,0,1,0,0,255,253,254,0,1,0,0,0,
0,0,255,0,1,1,1,1,1,1,0,0,0,0,1,1,0,1,2,1,0,1,0,0,0,0,0,0,1,1,
0,1,0,0,1,0,0,2,1,2,1,3,2,1,2,1,2,0,0,0,255,0,255,255,0,0,0,255,0,0,
0,1,0,0,1,0,0,0,0,0,0,0,0,0,255,0,0,0,0,0,0,0,255,255,0,0,0,0,1,1,
255,0,0,0,0,0,0,0,0,1,0,0,0,1,1,1,1,1,0,0,1,0,1,1,1,0,0,2,0,2,
1,0,0,1,0,1,2,2,1,1,0,0,0,1,1,0,0,0,0,0,0,0,0,0,1,1,0,0,255,255,
255,255,0,255,0,255,0,0,0,0,0,0,1,0,0,0,0,1,2,1,2,2,2,1,1,1,2,0,2,2,
3,2,2,2,3,1,7,8,1,0,254,0,1,5,6,4,0,0,255,1,3,3,3,3,1,2,2,2,0,1,
0,1,1,1,0,1,1,0,3,5,7,11,13,13,9,3,254,249,249,6,2,247,245,249,250,250,245,249,245,241,
244,238,237,239,235,236,233,230,234,235,229,238,233,235,234,234,235,232,234,237,236,236,239,242,245,250,254,12,20,33,
43,87,125,92,105,109,41,66,75,52,59,45,37,53,37,12,33,13,4,230,214,206,185,195,215,201,208,204,199,225,
211,212,215,218,229,210,222,241,237,2,14,22,23,23,18,22,51,38,32,43,24,23,27,11,9,28,12,13,11,247,
254,253,253,254,250,235,228,227,216,227,228,221,236,238,233,233,238,237,251,247,241,247,232,234,245,252,253,0,8,6,
14,13,8,22,23,20,24,18,2,12,10,7,14,5,2,7,3,253,5,1,0,6,2,253,0,252,0,7,3,3,
6,4,6,16,15,18,21,20,20,22,15,15,17,14,15,11,254,0,7,8,5,4,251,247,238,243,244,244,244,245,
245,246,246,247,247,247,248,248,249,249,250,250,251,251,251,252,252,253,253,253,254,254,254,255,255,255,0,0,0,0,
0,0,0,0,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,57,9,
28,0,246,0,11,13,16,12,252,240,252,15,15,16,10,244,239,3,22,20,15,12,3,249,3,27,35,29,13,0,
3,22,23,31,32,8,9,5,3,14,23,19,16,0,247,6,27,17,250,248,253,0,15,22,255,250,0,249,7,8,
7,14,7,255,253,12,12,254,16,28,8,3,8,14,13,16,8,6,13,12,9,8,12,1,242,1,25,28,15,239,
230,237,14,31,22,11,234,215,245,22,37,25,13,242,218,234,15,31,31,28,11,243,237,248,17,38,26,246,233,18,
40,25,3,240,241,7,31,33,28,14,249,245,0,14,27,27,12,21,10,247,251,19,25,20,19,17,2,255,20,23,
1,4,10,17,11,0,8,18,255,6,250,4,30,11,1,254,8,11,251,251,22,29,15,6,243,1,34,31,9,0,
6,21,7,21,23,19,25,15,247,44,47,242,235,19,32,22,29,16,246,252,4,9,25,25,11,234,232,0,20,31,
15,253,230,226,246,29,27,242,246,252,1,254,246,255,2,5,3,251,248,11,0,250,20,5,244,242,14,14,12,23,
247,221,255,23,23,34,16,208,211,24,52,18,232,240,13,2,0,13,16,2,232,239,9,18,39,23,229,216,245,30,
43,34,16,244,234,248,26,43,34,22,6,3,5,13,27,21,31,25,15,9,10,17,14,8,30,30,14,251,236,18,
48,34,246,232,3,13,17,16,11,5,242,247,249,6,21,20,20,245,219,242,18,22,20,17,254,237,243,20,38,20,
8,4,240,249,27,37,28,7,254,238,247,25,45,34,1,243,244,2,32,42,17,243,245,12,20,22,23,254,254,14,
18,18,23,26,20,250,248,16,27,29,24,18,3,244,1,36,35,7,254,7,14,14,13,17,250,245,10,15,18,16,
240,233,11,17,4,253,11,20,251,238,251,8,12,9,240,246,14,19,5,244,252,253,247,251,9,15,5,249,243,252,
8,11,251,252,248,240,1,14,25,13,221,213,9,45,25,251,250,7,251,255,6,254,13,33,20,241,248,7,32,28,
248,251,18,7,17,41,21,219,238,16,34,42,20,254,3,0,244,26,50,27,245,252,16,9,5,28,44,40,255,232,
255,43,55,23,254,11,30,17,22,27,13,252,0,53,52,14,0,233,4,25,15,15,29,13,247,2,246,227,11,41,
14,252,252,248,241,226,252,42,11,242,241,245,11,5,233,231,13,43,27,236,227,251,3,13,23,9,14,26,2,234,
2,29,10,14,2,252,2,31,25,235,214,252,20,49,24,227,241,4,253,242,15,42,5,243,255,239,239,3,31,58,
15,248,249,252,26,60,244,230,49,25,252,32,59,33,252,249,235,250,52,54,22,17,251,216,242,36,35,218,225,61,
27,215,2,20,195,215,49,34,1,13,254,5,10,242,228,235,53,89,1,239,28,7,241,42,63,240,249,32,9,12,
18,41,34,249,0,17,244,3,40,24,241,3,28,219,232,33,19,242,253,21,8,12,1,239,248,9,8,17,35,3,
11,40,0,255,41,26,250,36,27,7,26,59,7,206,20,52,252,10,38,252,245,238,7,35,33,12,244,202,219,33,
35,221,226,39,26,239,232,0,9,29,26,223,228,18,47,16,3,35,253,0,35,35,6,237,28,38,3,15,34,8,
12,42,8,167,235,92,89,245,191,238,0,6,37,37,227,239,7,250,249,25,28,251,224,7,19,252,21,33,2,249,
19,10,16,28,11,251,245,20,32,18,38,5,221,238,69,47,232,246,1,243,13,37,26,3,255,220,249,39,251,244,
23,15,21,14,250,246,12,49,252,232,22,32,16,28,10,218,11,32,20,36,20,8,240,232,14,48,39,0,2,49,
34,253,247,10,26,40,38,254,251,14,32,52,9,201,249,75,29,4,33,0,218,6,5,0,17,41,20,235,248,38,
8,195,217,15,56,28,12,247,238,237,240,19,21,18,24,19,6,248,203,235,55,51,14,17,25,8,5,216,224,55,
83,14,227,10,59,28,209,208,13,43,22,10,254,4,13,235,202,252,24,8,38,11,232,230,9,254,224,235,54,44,
254,248,246,255,251,214,245,67,69,15,238,231,241,4,18,46,52,22,3,7,17,240,239,250,30,75,46,254,3,15,
246,213,245,72,68,4,0,253,249,4,244,5,67,75,21,211,229,10,241,252,63,80,51,5,197,199,1,26,240,30,
63,16,246,227,0,250,222,223,252,69,85,3,208,250,7,0,55,27,235,17,14,254,0,56,64,247,248,35,22,5,
5,8,45,34,248,12,35,35,1,253,230,245,38,55,43,236,201,255,9,252,37,39,232,221,12,4,224,3,49,26,
243,255,5,229,254,29,26,12,248,0,12,12,58,59,245,205,225,14,46,18,0,25,34,254,230,236,3,15,234,220,
43,76,16,221,227,250,227,210,10,62,30,236,226,241,11,0,241,3,240,7,28,32,2,247,247,246,251,42,96,34,
250,245,239,225,241,60,123,59,237,230,252,240,12,32,32,33,10,1,12,10,245,243,14,25,9,248,13,29,13,237,
228,22,51,40,14,248,0,236,252,26,37,40,11,2,8,5,248,212,1,66,25,243,27,31,246,215,234,13,21,42,
42,255,220,229,21,44,251,251,16,17,16,0,229,242,20,48,23,6,249,243,16,2,231,17,53,28,11,20,15,20,
249,228,254,25,39,37,2,8,14,1,230,230,11,46,37,19,248,228,248,16,15,14,14,18,20,225,233,23,253,246,
31,26,14,251,253,20,37,7,212,216,42,53,16,28,9,228,243,35,62,13,211,234,1,32,46,12,248,21,30,243,
208,245,36,29,4,0,252,250,255,8,18,16,240,10,31,246,244,13,28,8,10,22,18,5,241,13,16,5,36,65,
27,229,234,20,4,6,36,50,42,242,218,1,20,0,2,237,14,49,25,0,0,227,192,238,63,54,26,26,254,218,
240,0,245,40,52,24,29,31,250,223,230,34,54,2,12,46,14,230,4,42,34,0,255,239,245,25,32,21,244,237,
11,2,242,12,33,2,242,248,1,29,55,46,227,210,2,20,252,10,39,45,255,218,0,27,2,2,25,0,250,8,
24,39,29,251,252,4,4,11,5,250,252,26,29,1,242,0,44,15,218,238,4,0,55,51,228,233,23,26,1,11,
31,12,13,9,236,240,27,64,40,241,239,24,0,236,249,33,50,6,225,2,6,2,5,245,253,25,33,249,234,10,
6,234,246,45,61,22,245,228,222,250,22,53,38,6,5,17,15,11,253,239,254,41,31,13,26,30,22,250,254,7,
251,4,28,39,30,16,5,245,253,6,247,237,33,69,7,2,16,255,236,237,245,22,71,64,0,245,242,231,252,17,
36,19,33,35,0,224,249,34,3,225,4,43,41,28,12,211,205,22,39,6,15,22,246,251,17,11,253,251,2,11,
248,251,48,67,1,207,232,5,37,37,250,240,22,51,0,223,13,39,9,239,10,42,6,232,11,27,233,249,40,19,
17,13,217,209,16,44,19,5,32,17,214,241,38,13,248,36,58,6,219,244,31,28,18,7,0,23,29,4,238,240,
254,29,39,254,230,22,51,3,210,240,25,30,8,246,0,4,0,12,27,19,241,235,8,27,27,14,11,11,6,250,
6,25,33,31,25,253,226,245,25,34,17,22,27,43,29,205,203,19,53,28,7,22,36,28,0,225,227,4,44,58,
55,22,231,219,230,25,48,16,24,48,0,209,238,1,22,43,12,3,20,15,253,240,234,6,34,31,27,11,248,247,
6,12,253,0,26,32,16,0,248,5,30,17,254,20,26,252,4,20,22,16,1,243,253,18,5,6,29,23,248,237,
5,245,234,20,40,4,236,2,17,6,12,247,222,2,22,23,36,37,13,230,238,238,241,14,46,58,27,254,253,17,
13,229,223,24,68,56,5,254,15,19,7,223,240,50,61,16,245,252,12,253,248,4,16,10,15,254,248,18,6,250,
243,8,29,13,254,6,11,251,3,18,32,12,241,7,30,25,15,10,7,2,11,15,16,18,14,17,9,3,252,6,
31,12,249,7,18,7,10,5,247,250,18,24,5,0,15,3,245,253,16,34,30,8,234,231,10,32,18,23,35,13,
241,254,16,19,19,13,16,34,30,18,2,0,3,0,12,24,23,16,11,7,251,5,25,8,252,10,36,25,240,242,
6,6,7,14,22,42,24,239,231,244,255,9,9,28,53,30,240,227,249,7,5,0,12,32,32,255,250,6,254,252,
14,21,16,11,13,8,248,250,9,18,26,24,1,243,2,16,10,241,252,27,29,12,16,0,247,0,0,7,22,20,
7,18,9,254,14,26,15,253,249,4,28,25,2,233,0,47,37,2,1,248,233,8,30,18,11,22,12,254,4,24,
26,4,254,12,12,251,12,27,23,20,11,255,254,13,13,248,254,3,6,11,20,19,1,0,252,251,7,6,250,18,
20,0,19,30,10,245,240,244,0,29,53,37,3,249,241,238,8,33,33,17,12,7,246,0,21,6,250,8,32,34,
0,241,0,8,1,252,1,16,23,8,248,249,4,10,253,0,14,9,2,20,29,15,1,250,252,9,33,35,21,21,
16,250,251,5,11,14,11,9,7,14,24,0,239,248,254,2,15,18,8,12,13,248,233,236,5,25,14,12,18,2,
249,251,3,9,17,16,22,29,10,0,6,6,10,6,6,22,27,23,22,8,250,251,9,4,1,20,29,23,15,9,
8,7,7,255,252,5,15,30,35,22,253,241,254,251,248,19,28,15,3,6,10,2,0,4,10,13,19,17,254,0,
21,21,0,0,24,30,14,12,9,246,251,16,12,7,22,29,8,248,8,21,9,10,10,0,0,16,24,19,6,3,
1,5,15,23,10,249,245,5,15,18,15,13,5,250,234,253,26,36,31,255,237,6,23,4,8,21,18,10,9,13,
16,13,6,10,13,18,18,16,8,2,250,246,8,33,28,14,15,12,254,249,2,14,5,0,3,15,30,6,246,11,
6,234,240,8,26,22,2,240,247,8,15,12,0,0,0,0,21,41,20,236,243,22,23,10,10,18,15,0,252,1,
6,14,23,24,17,3,0,2,250,246,2,26,38,34,6,240,244,252,7,13,2,19,37,12,247,250,4,5,5,15,
15,11,16,12,255,3,9,3,11,29,30,15,5,15,10,250,252,4,18,24,21,10,15,18,2,247,248,253,10,20,
23,15,5,5,0,245,0,9,8,14,17,15,9,5,252,246,0,13,18,13,12,12,3,253,255,6,6,6,9,1,
3,15,12,4,2,254,0,11,16,0,249,7,14,6,1,253,254,7,20,8,255,9,11,255,2,18,12,3,8,17,
12,4,15,19,8,3,8,17,21,16,14,4,2,12,11,1,8,18,20,14,4,253,249,0,0,0,58,6,43,0,
255,15,12,13,10,254,255,18,15,8,0,0,6,19,19,0,4,10,0,22,11,0,2,10,17,9,15,251,249,21,
15,16,17,253,235,14,31,13,14,250,254,6,13,20,26,249,241,2,35,47,254,213,0,34,21,2,13,7,251,252,
10,13,9,11,13,13,248,228,254,35,40,250,249,0,238,17,30,27,6,254,1,3,14,0,10,29,18,3,3,254,
243,6,46,32,246,237,17,21,253,18,2,250,12,26,9,254,2,3,10,10,7,9,0,249,236,23,34,255,0,246,
12,22,220,1,31,12,245,247,8,10,3,247,245,40,24,214,242,29,5,0,23,246,0,10,246,21,21,227,239,41,
36,239,229,253,24,33,253,242,3,2,9,14,253,253,17,21,235,240,40,23,230,10,18,3,246,1,23,9,252,17,
13,236,13,29,221,250,64,246,236,22,251,8,5,254,20,15,14,243,237,7,17,12,27,44,213,196,12,46,31,11,
228,209,255,42,24,232,243,8,0,3,1,253,3,4,12,6,252,219,250,49,22,246,8,7,254,235,48,71,222,197,
16,58,12,233,26,86,244,132,36,89,6,250,13,21,238,225,19,27,43,20,236,216,244,39,33,234,249,236,234,255,
48,41,171,171,46,60,244,0,22,240,209,7,47,24,5,249,9,247,10,23,254,29,22,12,31,15,22,250,12,55,
2,0,40,3,8,28,247,23,44,17,245,215,7,54,19,237,7,254,3,16,247,225,249,74,46,193,178,17,90,4,
206,5,19,36,247,207,246,53,15,251,28,0,225,10,55,16,216,6,60,3,1,26,9,9,25,17,227,12,19,251,
36,17,244,244,31,34,228,239,4,49,12,245,38,6,212,214,22,47,33,4,226,249,12,249,248,39,251,217,0,54,
17,236,252,255,253,240,10,45,10,19,2,199,251,33,48,3,232,26,2,240,41,7,210,11,42,25,5,209,214,56,
52,254,0,231,248,39,7,230,19,29,245,246,10,44,239,197,20,52,18,228,229,27,6,247,2,18,10,35,20,225,
219,13,56,38,219,252,249,240,40,35,40,227,223,11,3,43,7,226,25,32,252,235,18,14,7,40,6,202,239,45,
36,9,19,224,192,23,118,5,165,233,34,66,18,251,238,245,21,10,233,32,48,3,215,247,56,11,230,24,35,213,
227,51,30,214,2,47,0,242,25,3,220,232,39,25,8,45,227,185,36,69,251,208,61,64,154,2,83,248,21,8,
251,0,232,0,46,38,42,1,187,254,33,237,36,50,0,225,251,36,216,247,55,44,196,240,72,199,7,32,222,30,
42,225,249,55,250,213,14,27,46,252,239,46,251,196,3,47,48,249,180,36,67,215,8,52,232,234,21,246,34,46,
0,226,235,27,65,252,210,230,25,81,240,214,39,37,244,1,202,242,70,15,247,250,238,72,27,156,0,71,255,250,
21,250,251,42,0,229,21,24,15,233,243,51,222,254,102,239,189,1,30,26,1,10,249,232,45,10,254,44,14,174,
226,78,43,0,216,245,57,6,227,221,254,73,30,11,205,193,19,39,24,30,252,9,26,214,206,253,60,54,30,244,
176,195,48,94,247,211,33,36,249,213,2,30,232,42,47,204,43,64,158,227,94,250,196,79,87,167,177,16,41,23,
32,36,220,237,240,10,40,235,8,22,29,15,212,230,244,50,35,246,28,229,248,15,9,216,255,36,72,53,205,233,
229,229,48,2,26,38,12,23,240,186,12,45,222,23,22,241,70,3,189,236,52,34,226,252,82,7,211,241,10,251,
20,63,241,4,255,235,69,234,255,16,234,36,24,190,255,63,52,37,217,153,26,54,17,43,28,232,240,250,11,239,
6,16,54,41,203,245,14,222,14,30,18,15,238,4,20,25,51,196,149,68,73,28,13,24,19,208,205,247,11,14,
79,20,234,23,219,211,237,32,57,26,237,20,12,186,247,41,52,20,12,29,0,161,193,97,100,22,205,249,13,12,
12,224,7,29,222,6,81,37,226,201,233,33,25,21,10,27,21,215,206,250,41,38,248,10,248,253,26,5,190,230,
99,80,238,189,215,11,47,30,47,53,189,226,0,209,30,59,16,17,30,250,194,239,20,24,13,13,9,17,240,253,
20,0,235,229,255,56,51,228,224,23,253,10,248,235,21,35,31,250,18,254,215,17,36,41,235,228,8,238,21,33,
27,14,239,232,222,23,27,247,9,61,18,193,217,32,51,228,253,44,46,253,188,209,33,80,5,241,239,3,2,1,
3,240,16,22,245,244,15,25,234,3,41,218,214,20,36,31,1,239,4,33,249,210,13,32,20,254,0,26,0,35,
44,236,214,6,27,31,15,242,15,13,45,14,191,225,69,30,35,24,178,223,31,28,253,240,41,50,238,238,217,228,
250,37,50,29,247,245,25,245,236,253,41,58,241,249,21,26,252,205,2,18,54,29,2,0,255,244,0,40,251,219,
24,30,35,25,233,5,14,244,246,250,29,8,234,28,16,241,243,250,14,220,232,53,45,15,246,247,236,229,4,40,
73,40,237,201,10,0,245,45,5,23,40,12,228,225,253,20,23,38,24,227,10,42,251,217,248,12,36,37,0,12,
233,234,28,9,224,4,3,22,10,6,247,8,242,235,18,32,26,236,211,24,74,10,224,248,39,7,236,6,36,38,
28,245,224,2,252,243,6,57,70,13,198,201,240,9,42,54,14,245,15,245,239,8,249,6,51,34,13,0,232,247,
237,27,45,12,232,13,46,32,2,242,245,255,11,248,246,18,55,41,254,224,243,237,243,255,254,0,57,68,248,212,
225,233,21,21,5,26,16,237,234,3,30,255,242,14,4,18,32,21,254,247,242,244,1,75,50,3,16,231,214,247,
40,35,12,8,33,0,204,252,12,1,23,58,8,228,0,9,232,4,35,2,14,27,234,227,250,28,38,2,2,245,
227,243,18,27,10,254,6,20,5,248,218,15,44,14,8,18,27,253,228,249,253,32,54,15,247,255,241,223,11,62,
39,249,251,29,254,216,254,17,47,49,17,243,241,6,245,244,28,42,19,11,246,239,246,10,27,7,249,13,11,255,
19,255,243,8,0,1,13,16,12,253,15,4,233,252,25,7,255,21,22,0,253,12,252,247,252,10,25,38,14,242,
255,10,5,9,16,15,244,249,23,25,1,3,7,250,1,2,14,23,15,240,245,15,12,0,6,17,10,1,243,249,
13,23,0,8,16,1,7,6,1,1,10,6,12,9,7,11,5,0,3,4,8,18,2,251,10,29,25,246,237,244,
16,31,23,8,0,252,251,5,7,12,18,9,4,250,251,10,5,1,9,17,255,254,11,10,7,0,2,8,2,12,
14,1,8,3,243,6,20,8,250,0,16,11,2,7,4,249,4,12,10,8,4,13,14,1,0,1,6,8,5,0,
2,10,7,6,250,247,4,8,12,15,4,248,244,1,10,5,2,6,13,8,251,251,12,8,246,250,4,12,12,11,
9,1,250,248,4,4,5,19,19,7,255,255,6,17,11,1,10,24,7,2,10,10,254,2,22,13,254,0,9,14,
7,3,2,4,8,12,11,11,10,10,13,17,2,2,14,20,11,8,27,13,254,14,13,7,8,10,13,14,13,6,
6,3,3,4,0,0,254,6,29,0,249,255,10,5,11,0,255,254,2,4,4,9,252,250,6,2,10,255,239,0,
12,11,0,249,246,4,12,253,253,254,18,254,236,235,13,24,254,244,246,0,5,7,3,248,0,1,241,250,12,11,
3,4,2,0,247,251,2,5,14,3,254,2,234,8,31,5,238,248,252,255,20,4,243,9,5,253,246,0,253,13,
2,8,242,233,18,30,5,237,235,253,11,10,10,253,235,6,9,5,255,245,254,7,5,2,244,239,255,21,16,242,
0,20,239,237,18,2,251,4,254,6,247,3,31,3,0,255,226,243,29,21,244,242,9,22,255,231,243,19,12,241,
248,18,4,225,254,23,6,246,240,13,6,249,18,255,243,251,11,5,248,2,246,2,15,19,7,230,233,16,12,13,
5,226,232,18,41,13,232,229,6,12,10,0,237,252,7,11,10,247,244,254,0,9,0,238,10,30,4,240,241,243,
17,8,2,1,245,4,12,255,255,0,6,12,251,247,8,242,238,4,24,25,253,232,227,255,42,255,247,249,252,13,
10,8,255,228,245,17,10,11,236,226,21,42,252,248,228,229,16,39,14,238,3,249,240,22,254,11,236,228,26,48,
3,201,0,5,40,13,211,230,14,23,253,11,247,247,248,246,29,25,247,224,224,253,41,48,228,236,247,239,51,32,
208,228,17,38,14,1,250,239,230,1,38,19,230,237,28,22,243,235,5,2,244,250,8,7,0,239,238,34,9,218,
3,34,233,213,22,42,23,222,219,246,47,19,226,249,1,19,18,244,255,248,233,247,20,38,253,235,44,17,195,251,
49,252,231,239,0,30,20,247,247,6,242,2,4,254,248,1,39,2,214,236,26,27,250,236,237,11,22,249,0,252,
249,254,249,9,0,248,17,27,235,225,252,37,40,240,194,0,31,3,240,251,28,18,14,234,226,2,23,4,2,10,
1,12,236,232,3,18,247,19,25,233,225,16,13,239,245,13,254,237,43,63,225,153,231,53,35,7,2,243,211,255,
33,15,224,214,36,62,9,9,249,183,240,40,33,29,233,252,239,243,55,4,198,220,33,74,29,211,211,241,8,36,
16,0,227,211,22,245,9,16,20,10,214,231,5,30,230,242,38,28,25,228,220,248,249,35,47,2,215,227,21,4,
255,19,6,242,209,19,54,2,233,240,0,255,28,248,228,17,12,7,8,0,249,227,24,18,4,242,232,16,8,10,
240,4,15,224,223,246,36,21,48,10,195,212,253,44,22,2,249,233,6,235,2,13,38,13,194,235,0,14,247,6,
77,8,171,234,49,223,9,61,249,35,11,183,241,27,24,29,253,181,215,72,81,240,222,18,11,233,211,223,81,32,
184,215,65,36,215,203,247,88,18,171,223,45,29,248,229,2,31,240,190,255,66,39,4,216,255,253,236,7,27,19,
233,246,42,6,230,2,22,0,249,239,8,31,246,244,235,11,18,239,237,7,25,12,254,245,243,253,37,8,221,242,
43,19,196,204,33,63,7,242,191,221,45,79,26,210,185,4,55,1,223,7,35,228,217,1,78,51,177,165,41,81,
4,244,223,223,83,37,213,253,17,234,235,5,32,16,236,199,229,22,86,37,174,179,20,52,29,250,222,207,10,85,
36,222,182,196,48,69,20,240,235,23,7,228,251,220,246,87,66,198,140,43,80,14,4,16,203,157,7,60,59,20,
225,223,26,24,235,216,175,7,46,31,20,73,23,131,204,73,27,204,249,25,10,14,36,21,204,213,11,57,18,197,
198,251,68,58,235,14,235,157,215,27,125,87,175,148,13,44,26,36,228,196,8,13,39,52,234,148,252,96,60,18,
170,155,64,84,234,187,225,8,19,240,9,17,14,247,192,42,73,250,236,224,238,76,33,176,218,49,47,252,223,252,
248,244,63,32,164,21,52,195,211,23,44,9,225,248,57,210,246,102,208,191,37,2,227,29,53,220,242,15,15,205,
238,40,27,30,216,218,12,21,220,202,23,105,37,140,208,60,7,219,35,42,232,244,255,47,46,189,167,246,55,90,
12,207,162,222,64,81,47,236,173,222,81,42,243,182,203,46,46,30,202,207,24,63,20,36,23,164,163,255,77,100,
250,187,223,0,245,35,71,220,196,232,18,31,21,251,239,71,224,160,15,4,10,93,12,190,241,234,187,48,59,24,
21,193,215,5,25,2,232,254,12,33,248,0,240,1,41,18,5,252,232,247,42,31,201,12,74,223,229,16,20,12,
242,226,235,1,14,44,0,179,245,19,187,8,107,253,186,234,44,3,216,3,24,224,3,34,1,232,7,238,201,48,
67,242,2,252,10,33,225,224,8,1,14,84,243,166,34,67,222,188,51,114,230,187,180,6,114,37,200,190,254,10,
20,28,21,38,187,198,9,60,3,166,245,106,43,156,233,0,33,43,177,220,32,22,0,252,226,10,77,235,165,244,
62,6,247,29,251,47,252,176,221,110,44,229,12,236,222,61,26,209,237,29,36,17,211,211,8,56,11,211,6,233,
217,7,61,3,221,226,251,33,246,223,42,242,214,21,50,243,240,253,226,19,47,56,220,192,245,29,33,19,220,230,
44,38,238,5,221,174,98,43,206,245,250,57,250,214,27,254,197,23,55,254,172,1,72,14,201,233,54,15,203,0,
69,232,240,227,223,47,77,0,182,238,51,50,243,166,19,39,234,254,47,4,215,11,10,223,253,40,55,210,235,10,
7,16,176,223,96,77,210,164,212,16,90,54,162,218,10,13,65,13,185,210,36,41,37,17,214,245,238,0,54,35,
217,223,20,16,227,212,60,33,221,230,12,16,22,242,229,43,240,194,14,15,223,39,70,244,186,236,46,53,233,174,
9,64,12,251,220,4,31,3,218,244,30,240,14,30,18,238,40,243,163,224,74,45,198,249,255,33,3,227,10,253,
254,250,31,44,254,10,215,205,29,26,212,234,23,5,10,18,241,230,45,1,218,4,37,31,192,220,50,56,234,248,
14,216,11,240,11,67,210,233,21,248,214,0,39,35,0,215,35,10,210,255,16,228,210,92,61,222,189,247,21,247,
10,9,24,224,220,27,68,6,193,233,48,28,204,250,49,29,221,211,23,7,248,6,10,21,255,251,214,221,29,23,
0,237,8,252,241,23,23,246,216,0,22,246,29,32,230,197,26,63,6,224,247,37,43,0,210,254,236,228,77,21,
174,206,15,49,14,234,227,252,251,0,9,19,5,246,1,4,17,239,208,252,30,66,46,3,199,192,6,67,66,246,
199,215,66,72,220,202,255,14,27,253,216,235,242,0,57,42,191,155,229,72,49,222,0,253,188,233,21,27,16,31,
9,193,213,78,55,0,237,227,36,54,22,212,221,12,74,68,206,186,27,74,27,195,216,12,0,252,5,23,1,212,
208,234,50,53,240,225,199,232,15,18,10,202,207,4,19,43,23,247,4,254,238,253,22,32,238,232,66,75,222,207,
225,10,61,55,242,200,239,32,14,0,240,255,21,6,239,34,20,204,246,9,235,234,255,9,0,29,0,208,220,0,
58,54,217,180,253,19,37,64,251,194,219,254,28,254,253,254,29,50,0,173,212,57,74,16,223,245,2,242,8,42,
0,243,4,253,9,27,241,217,1,34,36,1,223,217,250,28,30,236,224,239,242,14,20,253,232,212,232,78,65,192,
166,235,42,66,14,225,228,230,12,67,48,221,208,249,29,42,44,10,201,208,52,69,230,218,24,30,20,239,208,235,
23,40,29,10,249,227,205,219,4,39,27,232,224,254,28,35,231,193,228,37,9,244,255,7,33,246,225,234,246,250,
16,48,37,243,204,242,35,64,19,210,219,231,243,14,43,51,32,237,206,2,19,3,2,236,252,29,9,234,8,46,
9,223,234,12,24,252,229,247,249,9,16,1,233,6,14,245,250,255,251,242,252,5,6,10,233,223,5,22,12,249,
4,247,240,245,27,29,231,235,26,34,15,248,223,247,14,3,0,3,22,13,230,239,43,54,236,219,233,253,19,18,
9,0,5,7,0,240,236,1,18,251,16,12,239,234,5,11,242,247,12,33,250,241,0,234,240,0,10,235,219,248,
0,0,72,4,48,0,20,243,243,32,248,1,249,9,17,225,246,27,7,231,12,8,254,5,245,255,15,0,210,26,
28,197,8,36,238,7,245,247,30,237,0,26,235,38,16,183,40,43,183,12,55,228,255,252,3,23,227,10,24,231,
32,245,220,36,4,231,28,21,247,248,8,10,208,244,18,3,226,205,40,40,222,255,22,236,18,0,0,24,243,19,
14,230,2,246,237,4,242,4,37,244,5,20,2,235,220,29,82,188,216,75,243,253,253,249,27,238,242,8,1,245,
16,236,228,42,48,202,236,53,231,231,36,0,249,21,204,52,228,214,65,198,214,110,251,205,32,48,10,222,0,19,
228,251,10,201,8,74,235,229,251,251,253,31,233,206,66,30,205,3,6,23,248,211,15,23,249,237,6,10,33,240,
201,49,22,215,247,24,24,9,240,6,47,249,228,42,5,211,1,12,37,16,216,2,29,218,208,17,249,33,1,200,
46,7,228,239,255,17,232,235,35,27,222,232,17,7,240,237,17,23,216,234,44,21,240,7,44,1,224,248,48,13,
217,5,20,26,0,3,17,1,214,243,42,246,232,32,31,235,243,6,243,240,7,15,4,8,244,241,254,8,4,3,
0,236,237,243,23,227,0,51,196,200,76,45,201,231,15,27,249,253,9,249,37,18,194,16,69,213,211,9,19,26,
244,8,23,20,238,210,9,59,221,205,82,52,181,231,26,7,230,238,37,17,4,226,239,40,32,234,203,5,38,235,
228,40,220,0,65,208,210,41,26,213,238,35,43,213,228,63,217,234,22,255,8,253,233,0,47,244,5,12,2,10,
240,42,240,230,46,237,234,28,24,250,3,254,237,253,10,26,213,246,87,224,155,58,64,172,167,58,52,206,0,26,
252,239,238,239,233,37,16,236,245,27,20,237,30,14,225,2,17,2,254,30,10,241,18,32,10,241,251,255,13,254,
234,39,4,245,17,220,0,37,243,193,36,47,195,193,76,60,177,244,40,245,210,236,255,2,252,26,3,254,45,201,
196,60,238,231,53,18,244,24,245,222,20,14,2,15,242,249,246,38,28,219,235,48,49,201,228,44,16,218,17,0,
10,26,1,233,226,35,19,223,208,40,25,217,1,217,24,34,242,229,238,55,48,159,183,75,51,251,229,244,41,253,
179,249,66,42,229,212,47,29,212,0,25,3,2,30,19,234,0,221,20,39,235,249,5,11,5,192,232,67,0,223,
20,234,12,30,212,234,4,12,7,217,15,46,217,244,6,240,23,39,236,226,30,17,242,248,1,18,251,255,255,0,
11,11,0,251,16,23,241,0,11,16,248,239,245,16,12,216,0,3,10,43,246,227,13,254,205,1,47,31,234,194,
35,66,234,210,228,6,62,226,202,43,19,193,227,54,33,17,228,240,254,14,14,186,30,126,219,166,31,42,248,214,
231,52,2,1,39,191,228,68,227,212,63,37,3,227,215,35,31,226,0,8,250,17,240,219,18,23,253,214,0,51,
0,209,21,51,242,202,252,43,8,250,16,7,18,242,218,36,13,194,246,35,12,255,219,251,71,10,189,233,15,13,
0,227,41,64,236,191,212,17,36,1,215,52,43,216,186,4,65,11,236,3,16,245,253,24,5,222,15,19,2,21,
243,227,32,11,200,5,58,22,220,225,21,10,14,224,185,57,66,197,248,25,230,254,249,242,26,24,238,240,253,33,
14,244,26,240,206,244,8,22,20,4,4,7,16,221,225,18,33,231,235,35,24,22,238,240,253,4,8,234,236,2,
21,6,30,250,221,18,6,233,244,17,22,254,244,4,21,17,241,213,16,23,223,253,18,255,5,3,225,24,4,245,
239,217,27,44,247,2,7,6,0,210,244,50,9,247,9,0,20,216,232,53,11,230,2,248,8,30,250,237,241,35,
50,252,210,225,6,11,8,7,22,254,231,253,255,3,15,252,241,14,11,236,230,227,250,22,22,2,7,21,0,230,
253,31,9,235,245,16,13,229,239,2,5,20,250,234,27,29,225,213,4,39,48,5,231,0,3,0,14,229,227,13,
17,24,15,231,229,3,246,22,6,255,17,244,239,20,3,247,16,247,234,245,21,1,217,246,43,35,2,231,241,13,
247,248,20,13,18,4,229,242,7,9,250,249,17,255,245,19,0,0,19,255,6,242,237,254,254,247,10,10,247,2,
251,239,242,6,36,13,242,232,13,24,255,236,246,5,9,16,29,7,219,250,18,252,247,2,25,0,222,249,25,30,
0,237,216,2,31,254,244,251,1,0,252,255,24,247,224,254,18,30,8,253,251,3,0,13,251,235,16,22,5,246,
246,9,16,242,253,11,9,250,208,237,22,18,255,253,6,8,237,227,249,254,250,7,10,20,12,250,248,249,0,0,
0,9,19,12,17,12,253,235,242,7,19,10,244,253,9,9,8,2,255,2,244,243,254,248,246,1,22,4,0,244,
251,253,243,255,17,20,244,237,253,2,7,6,250,247,249,250,4,0,1,0,6,9,169,2,15,0,248,210,174,42,
30,188,13,55,245,4,253,171,232,59,16,228,244,243,221,35,28,227,237,8,48,27,3,252,218,9,14,243,249,250,
4,20,3,244,243,7,37,11,227,247,251,31,58,231,237,2,5,254,227,253,15,243,248,244,19,4,249,30,11,5,
27,35,35,187,131,49,46,252,236,220,241,36,60,208,211,62,254,255,25,227,2,30,27,240,198,244,37,241,213,19,
241,1,34,241,17,5,230,9,12,4,254,14,5,12,244,238,23,6,21,27,231,255,16,245,232,250,4,15,7,238,
225,7,255,23,15,5,229,239,26,249,234,27,254,185,229,31,239,221,18,215,172,221,43,6,238,251,234,11,34,254,
254,5,11,50,34,225,243,53,49,8,233,250,41,42,42,240,252,53,31,244,246,20,25,18,235,249,42,1,238,15,
1,2,29,0,2,40,254,18,11,226,15,44,231,168,243,37,48,238,190,244,17,47,245,224,4,246,23,29,247,230,
244,42,37,225,204,234,37,67,210,168,236,55,67,221,192,9,67,253,218,227,3,52,22,227,203,235,86,48,210,176,
21,69,30,253,230,29,38,245,248,49,28,254,26,8,237,33,57,22,245,242,32,57,0,226,15,42,20,0,233,183,
238,55,45,213,172,203,29,71,254,185,170,235,49,25,190,195,21,42,250,195,230,13,27,19,239,244,226,245,0,249,
4,224,204,231,50,50,208,187,204,189,231,52,18,205,191,239,26,250,241,220,228,18,23,226,210,25,71,30,195,191,
9,79,62,250,2,250,3,43,44,4,250,26,10,254,30,36,5,245,17,33,10,245,4,55,3,6,50,4,254,17,
249,28,26,245,0,6,240,237,16,253,204,215,248,232,30,23,190,208,26,32,225,208,243,22,3,215,241,13,46,38,
253,224,229,28,37,17,5,3,244,244,0,0,225,254,17,215,198,237,35,26,233,219,213,232,30,8,244,6,242,8,
36,14,196,230,50,48,249,212,245,21,27,235,236,246,2,38,2,197,209,29,28,0,9,242,248,31,32,228,226,41,
68,29,221,244,45,88,62,248,238,250,49,42,50,10,195,206,76,84,197,204,29,17,183,19,59,244,201,234,252,238,
29,231,221,11,16,209,245,22,236,228,13,11,225,196,229,41,32,224,232,248,255,246,226,22,28,216,174,33,78,24,
216,235,32,36,11,252,250,247,31,79,26,212,247,78,69,28,236,244,65,75,30,238,24,29,248,27,78,37,255,215,
230,69,64,10,12,4,0,253,24,43,16,206,235,18,42,37,2,174,176,254,43,2,221,200,219,254,241,237,229,210,
237,252,221,217,242,237,215,244,17,220,172,202,26,22,242,222,250,238,216,228,233,241,244,229,220,247,233,219,215,239,
251,239,216,208,226,18,44,27,0,254,242,7,29,33,20,9,15,61,59,8,224,226,29,92,85,11,211,206,250,21,
235,206,240,252,204,174,217,251,237,187,186,202,216,207,173,159,178,233,241,198,169,166,181,214,9,4,209,179,193,239,
8,6,249,239,235,246,7,14,0,252,12,18,21,245,228,8,31,0,0,0,183,4,23,0,11,14,14,14,12,9,
7,8,15,14,14,15,11,4,2,254,251,247,248,249,254,4,8,7,6,10,9,7,11,9,3,1,7,9,6,14,
13,14,10,12,12,12,15,16,14,18,14,10,11,11,9,10,12,12,18,16,6,3,0,0,0,255,0,1,9,8,
14,23,21,17,22,2,250,1,255,199,133,166,246,26,34,27,1,8,21,3,233,240,3,32,53,54,43,44,39,16,
1,5,22,29,30,30,34,35,30,32,18,7,8,20,33,48,45,42,32,19,10,9,9,9,4,8,14,24,16,6,
1,0,246,246,6,15,14,9,7,4,10,14,244,186,206,248,29,13,18,4,7,26,4,237,224,0,25,38,33,18,
23,26,17,254,4,9,18,27,31,27,24,22,11,6,253,0,6,22,20,9,5,12,14,8,1,250,248,1,3,2,
255,0,4,7,255,251,255,10,17,11,9,10,12,11,8,14,17,21,28,23,25,19,17,25,26,14,9,15,29,29,
17,19,17,13,16,15,15,20,17,10,254,254,0,8,8,7,9,8,4,3,0,0,255,252,255,2,15,7,11,13,
15,15,13,8,16,25,17,24,28,23,23,20,28,36,33,22,15,16,26,24,14,11,12,9,15,24,15,8,7,0,
251,254,0,5,10,11,16,3,5,2,0,248,246,1,9,16,7,3,4,5,8,5,0,247,4,19,10,0,254,9,
14,12,1,253,14,17,14,1,1,18,19,25,17,3,9,22,19,9,2,255,0,9,8,4,10,15,13,255,248,252,
6,14,13,7,6,13,8,254,254,11,13,15,11,5,12,19,16,11,3,252,7,18,20,14,11,13,18,10,12,10,
4,17,13,6,1,7,12,17,9,254,0,6,13,11,10,7,10,11,7,15,9,12,18,16,19,14,9,8,17,18,
21,20,17,19,18,11,0,5,16,26,17,1,5,19,24,3,249,1,7,19,10,3,10,15,13,8,0,0,14,22,
7,4,22,28,22,14,4,15,23,16,16,24,34,33,19,4,0,7,21,33,27,21,14,4,0,0,6,6,11,14,
11,15,10,9,3,255,6,11,22,27,21,4,9,23,20,6,8,12,18,22,12,8,14,14,10,2,0,255,6,17,
18,8,5,4,252,3,0,0,6,9,10,8,4,3,13,11,3,1,0,11,23,23,16,17,14,11,13,17,12,10,
8,3,6,11,15,16,11,4,11,7,248,246,5,7,3,9,12,12,11,0,252,16,22,13,13,19,32,35,26,17,
15,30,34,21,4,15,34,37,23,15,18,27,37,19,7,14,23,22,17,4,0,22,24,16,7,9,19,19,14,5,
6,12,12,4,5,21,19,13,8,255,250,255,10,15,9,8,14,11,3,254,1,14,18,23,24,20,24,14,4,3,
8,15,28,34,20,16,12,3,2,4,1,4,11,13,16,11,0,248,255,5,3,9,4,0,7,14,1,248,0,6,
13,9,0,4,15,9,10,11,9,18,23,25,15,11,14,19,23,16,13,21,27,21,8,6,12,16,7,7,8,9,
14,14,4,249,0,1,0,0,254,1,1,250,242,245,0,10,2,252,248,248,252,2,0,0,7,10,18,24,17,5,
5,7,4,3,7,20,22,21,20,14,5,255,7,17,14,10,11,17,15,2,0,4,4,12,17,12,10,4,0,9,
14,7,4,3,6,8,10,16,17,11,11,14,14,8,9,12,13,14,7,5,16,21,18,17,14,12,17,17,15,3,
255,10,29,30,21,12,1,2,0,254,5,17,18,13,3,0,7,9,2,253,249,0,6,9,1,1,8,8,2,5,
7,0,254,255,1,13,20,19,17,16,15,6,5,15,16,15,18,17,17,18,14,4,253,252,255,5,13,10,1,4,
7,4,253,249,253,255,0,3,10,12,11,10,6,15,20,17,15,19,23,21,20,23,16,12,24,29,22,15,9,14,
16,1,246,255,11,15,17,7,255,253,251,254,255,3,5,14,20,14,8,12,18,9,5,6,13,21,21,17,17,20,
23,15,9,11,17,14,15,12,11,15,21,21,13,5,8,5,8,5,2,4,11,5,7,10,4,5,10,12,9,12,
10,10,12,13,10,10,15,11,14,16,16,13,9,2,6,19,18,13,11,15,15,12,5,8,14,17,20,21,18,9,
7,16,14,7,11,19,18,19,17,18,14,11,7,4,6,12,14,13,7,9,15,14,3,254,0,4,6,6,6,10,
13,9,255,0,10,13,9,8,3,4,14,14,8,7,9,7,5,3,6,2,5,8,8,3,4,6,4,7,6,4,
3,7,6,0,3,12,20,18,8,6,12,16,12,7,6,8,13,11,12,14,19,20,15,9,7,8,5,9,7,0,
2,9,8,5,8,6,5,8,6,2,7,17,18,17,15,11,13,12,10,9,11,20,26,23,17,12,13,17,14,8,
9,13,17,15,13,8,12,17,15,13,9,5,7,12,12,13,14,13,7,2,7,13,17,17,11,9,9,11,10,8,
7,4,5,7,16,18,11,9,11,17,19,12,5,7,11,16,17,12,13,18,17,13,5,5,12,16,14,10,9,11,
12,8,4,4,11,13,9,3,5,8,3,1,3,5,8,9,7,6,5,6,11,11,6,7,11,13,15,13,10,10,
10,10,8,10,13,17,18,17,15,13,11,12,8,4,8,11,9,8,9,12,10,4,6,6,7,10,12,12,10,11,
9,12,11,11,8,7,13,16,15,9,10,16,14,10,7,5,7,13,9,6,8,7,8,12,12,10,3,4,4,4,
5,0,58,6,27,0,8,9,9,8,10,8,9,8,10,8,8,4,5,1,250,159,133,206,248,27,55,18,7,42,
51,45,26,231,224,252,15,41,48,32,37,54,57,46,31,251,246,2,9,22,19,12,24,40,44,43,28,0,251,251,
253,253,246,246,3,15,28,25,13,255,246,247,250,247,242,247,255,15,25,28,22,15,3,5,0,0,255,2,4,11,
23,25,25,21,18,13,7,5,1,0,2,11,14,22,23,19,17,17,13,7,3,0,255,1,3,7,12,15,15,18,
11,7,6,2,4,4,1,4,6,9,15,18,10,10,8,4,11,12,9,5,9,11,22,25,19,15,10,13,15,13,
5,3,6,9,14,13,14,11,9,12,19,14,6,5,7,8,15,19,12,12,14,13,15,20,253,212,0,29,31,49,
43,5,5,21,15,11,1,241,251,0,24,45,39,15,16,12,17,24,21,254,0,14,31,32,27,12,12,16,21,16,
16,3,27,17,29,40,22,7,14,6,253,9,254,243,244,255,4,9,12,254,247,3,2,1,1,255,246,254,254,18,
17,23,15,14,8,9,1,248,248,246,240,236,191,157,211,17,55,60,62,13,37,48,58,36,24,17,13,228,21,21,
236,248,18,243,14,25,7,10,250,190,211,9,37,43,43,246,192,213,229,243,231,210,185,225,0,16,26,12,2,14,
37,15,7,244,242,21,35,39,38,44,48,70,72,46,23,19,19,31,39,29,13,30,46,49,54,35,13,13,10,14,
4,253,241,4,22,28,23,13,3,255,13,7,243,240,238,253,7,14,1,21,12,30,34,33,20,22,22,12,29,17,
12,25,29,32,34,9,20,51,46,38,44,18,3,30,32,14,12,5,254,19,21,13,8,252,236,252,2,255,3,251,
252,8,5,249,243,243,253,19,6,249,252,250,251,6,4,246,249,0,10,26,21,5,5,14,10,6,21,3,4,41,
35,23,32,15,5,20,32,4,2,252,236,254,8,11,241,248,247,252,10,255,240,240,2,3,2,0,241,245,5,10,
14,10,252,2,6,5,8,1,237,250,10,10,13,19,13,24,36,19,3,255,0,23,38,33,11,8,16,25,24,5,
239,245,247,3,10,8,8,21,36,28,12,249,242,0,21,14,252,254,247,10,37,30,2,2,27,19,12,254,233,228,
244,3,8,17,11,16,35,43,44,31,17,252,243,240,246,241,1,36,38,29,29,17,5,9,9,250,239,0,13,31,
33,6,251,7,18,12,23,0,244,10,5,249,246,235,233,252,9,8,0,252,3,255,248,2,8,6,8,19,26,28,
28,34,26,16,12,253,253,255,242,11,42,29,28,52,22,22,52,26,245,254,233,209,248,0,234,255,8,250,19,23,
253,251,1,252,5,8,237,239,249,236,244,24,247,222,255,32,48,43,40,5,253,25,14,244,237,1,30,26,28,20,
254,9,15,15,12,0,5,24,12,5,4,10,4,18,25,12,25,37,15,4,10,255,236,244,253,11,20,22,18,5,
10,22,16,0,229,244,12,7,4,9,249,2,26,25,11,254,254,3,5,255,241,254,2,2,29,34,24,61,55,19,
10,30,33,33,37,14,4,253,6,11,2,7,250,7,3,1,20,18,15,3,7,6,9,1,250,8,245,239,202,204,
235,0,8,21,254,231,7,5,252,247,244,245,5,32,36,18,4,244,18,36,26,31,53,33,37,55,24,247,5,0,
247,13,0,244,9,18,22,12,252,2,11,8,244,246,240,224,242,243,234,240,253,0,248,237,248,4,11,25,35,34,
24,7,12,25,5,11,11,12,48,42,41,48,45,25,24,28,12,11,22,33,11,255,242,245,2,9,16,23,24,16,
8,1,244,226,211,220,229,233,235,241,0,11,34,34,27,19,25,25,10,3,248,0,12,12,8,30,41,54,53,47,
47,38,27,16,5,0,0,252,9,17,10,24,35,31,47,21,245,239,241,225,213,220,223,231,253,10,10,21,4,245,
5,13,246,239,233,241,15,27,28,18,22,43,36,23,16,11,5,17,34,23,13,31,24,12,15,9,26,30,19,14,
2,248,246,241,234,235,232,233,226,235,13,14,3,246,250,249,241,237,234,241,0,242,253,22,24,33,44,47,37,12,
4,7,7,255,5,5,241,2,26,38,26,37,56,51,31,1,230,215,220,235,241,252,10,26,29,23,22,11,5,0,
250,237,228,220,236,254,6,20,21,35,35,46,34,17,20,4,255,19,10,0,10,34,45,26,33,31,26,35,27,5,
0,14,15,17,20,25,22,15,18,3,250,6,19,4,247,242,0,16,12,12,11,5,6,7,244,234,253,248,2,19,
15,10,19,31,17,9,23,31,21,15,2,6,255,0,17,16,15,10,17,22,31,30,17,0,241,254,5,226,220,252,
20,14,25,34,37,42,28,4,255,238,231,232,226,242,5,20,38,46,33,19,20,16,253,2,19,9,1,0,4,6,
11,20,23,12,0,3,1,244,235,1,6,4,1,1,10,10,2,7,11,250,0,6,255,9,9,22,22,7,13,9,
5,8,16,13,0,255,9,16,8,7,30,33,12,11,17,17,27,19,4,2,0,248,0,23,18,11,12,7,10,17,
24,21,0,254,8,4,254,2,1,3,21,29,26,9,14,27,20,11,4,252,244,246,250,249,245,11,34,38,32,29,
38,33,13,254,254,241,246,4,7,5,20,20,21,41,41,20,27,25,250,4,5,247,249,255,253,11,22,30,37,24,
6,14,10,6,4,252,253,3,247,241,251,243,235,245,250,8,23,34,44,41,37,34,11,4,13,3,9,21,21,33,
38,43,46,40,45,43,30,21,25,27,30,25,13,15,0,232,240,249,241,250,10,9,252,2,0,0,2,6,247,235,
234,221,223,226,239,249,243,248,5,21,30,30,34,27,5,0,4,4,3,13,25,41,48,45,53,52,49,45,37,30,
24,17,11,11,8,254,247,253,3,10,255,6,21,16,8,11,3,243,246,246,235,232,241,245,8,23,24,19,15,17,
18,14,13,10,5,5,3,6,15,14,20,33,37,47,50,39,27,26,22,16,6,10,9,0,9,14,4,1,2,246,
249,241,229,243,3,253,252,250,239,247,255,251,248,252,1,1,8,12,8,7,18,19,15,22,22,26,31,32,32,22,
14,6,3,6,3,8,15,22,30,26,19,10,6,5,253,0,0,253,253,255,254,253,2,255,0,1,2,0,254,255,
251,245,243,253,4,4,9,18,19,23,24,17,4,246,250,0,1,255,3,12,12,20,26,15,11,18,18,7,253,255,
2,3,7,9,2,4,10,12,14,14,12,15,16,15,18,21,20,22,23,18,17,18,21,28,34,33,35,39,35,24,
25,24,6,5,255,243,237,244,249,252,255,1,9,9,8,9,2,0,249,246,252,1,4,0,255,248,250,6,5,6,
7,4,6,7,2,255,251,244,249,254,255,0,4,9,9,11,9,6,7,8,5,2,0,247,234,233,226,222,226,235,
241,252,2,9,14,12,11,7,10,8,7,11,14,22,25,29,26,33,44,43,48,47,48,43,37,32,24,22,23,27,
23,21,24,29,38,44,47,43,39,36,31,28,24,16,12,9,9,7,10,13,20,20,12,7,8,11,15,19,16,15,
13,16,17,10,9,8,12,8,11,8,0,0,195,5,51,0,0,1,1,1,1,1,1,2,1,1,0,0,255,0,
4,5,4,2,0,0,1,2,2,3,2,3,1,248,197,214,0,44,49,16,239,219,243,0,17,24,22,18,0,247,
239,0,13,24,19,12,2,0,254,2,12,13,18,11,1,1,2,8,9,8,6,5,1,2,0,0,3,6,5,3,
0,0,2,1,6,2,3,0,1,3,2,3,3,3,3,3,1,5,6,3,6,4,5,2,4,3,6,4,6,4,
3,2,5,6,6,4,1,3,5,6,7,4,2,3,3,4,2,2,4,5,4,3,3,1,1,2,3,5,3,1,
2,2,4,6,1,254,3,0,4,5,1,1,1,255,1,2,0,0,0,5,3,3,255,253,255,4,4,1,5,0,
2,2,1,0,1,2,1,7,0,0,253,253,3,9,1,255,252,251,3,6,4,2,0,251,255,4,5,5,4,1,
252,254,3,4,5,3,254,0,4,254,3,3,2,4,3,0,255,2,232,237,10,18,24,11,247,239,243,254,9,17,
17,5,247,247,248,255,5,6,8,4,0,251,247,1,2,6,7,1,252,1,0,0,3,4,5,4,0,251,254,7,
4,13,6,254,251,1,236,255,22,18,13,1,246,249,0,2,10,9,3,1,249,255,5,11,2,0,0,255,7,254,
3,0,3,5,2,9,7,9,7,6,2,3,6,3,6,0,255,1,9,3,4,4,0,5,7,2,6,3,253,3,
2,9,13,4,3,2,239,195,232,27,54,38,252,217,222,251,1,9,10,14,5,243,237,242,8,27,25,12,0,250,
3,6,7,15,13,12,3,0,8,17,26,26,21,20,20,17,15,14,11,43,51,24,3,219,217,237,247,255,233,182,
196,224,251,26,250,222,223,221,238,255,250,254,2,245,248,244,254,18,25,24,29,24,24,35,57,62,90,38,159,185,
224,57,126,67,0,201,181,221,252,13,52,50,12,220,194,209,237,19,37,31,250,220,211,222,1,20,27,11,238,226,
247,12,17,18,9,16,7,252,4,9,7,24,28,18,7,244,5,17,14,22,22,10,255,3,11,22,11,6,4,3,
6,15,12,0,248,250,14,6,0,255,252,7,4,1,252,246,254,4,4,1,254,1,0,4,11,10,255,255,1,5,
0,254,255,4,8,9,2,1,248,247,12,12,7,254,251,6,1,254,3,0,3,6,254,250,6,255,251,249,247,255,
12,10,247,243,248,0,255,254,1,247,249,253,0,8,9,252,247,5,2,252,255,1,6,0,253,252,1,14,5,248,
248,0,11,10,1,5,9,253,242,248,2,16,20,5,246,243,252,0,14,11,13,17,2,240,241,5,21,27,8,248,
243,251,12,5,1,2,13,3,239,243,0,9,12,15,12,250,247,4,16,15,10,2,10,17,2,252,247,12,30,18,
254,249,0,5,17,16,4,0,7,7,4,3,1,253,254,7,7,250,255,248,247,12,11,3,253,242,1,12,16,9,
2,246,245,0,0,5,13,2,0,254,251,3,16,2,253,13,6,0,0,255,13,11,242,244,2,19,20,7,248,248,
0,9,9,4,252,250,255,1,4,0,255,4,253,252,0,253,4,13,4,2,250,249,4,0,1,12,6,3,250,249,
252,11,14,2,2,2,0,253,255,255,19,22,249,243,0,0,17,20,255,241,246,8,13,250,0,7,0,251,250,254,
4,6,9,0,249,238,251,14,20,11,0,245,245,1,16,8,9,9,255,247,4,10,10,20,6,250,3,4,13,18,
7,252,248,13,22,12,254,250,250,0,12,15,11,2,254,0,5,9,6,1,4,254,255,251,247,5,15,11,10,1,
245,255,14,14,4,12,18,254,254,7,9,17,10,252,240,0,17,13,2,243,246,21,21,1,0,250,255,7,9,4,
6,7,255,254,253,9,8,252,255,4,14,11,252,244,0,15,13,5,3,247,245,255,21,13,254,251,245,255,0,249,
254,12,7,248,255,251,0,15,22,5,235,247,6,14,22,7,0,251,249,5,8,2,4,4,8,4,247,255,5,4,
7,8,3,0,247,238,1,19,14,3,251,253,251,249,2,16,26,10,251,242,247,15,20,11,0,2,1,245,0,6,
20,14,249,236,243,5,24,25,4,249,244,254,0,0,10,16,5,2,0,254,4,13,253,3,10,5,5,12,7,3,
3,0,2,252,2,15,8,253,5,0,0,3,255,9,11,252,0,4,8,6,253,248,246,2,11,6,253,241,228,226,
2,22,34,25,239,204,220,7,15,251,232,239,248,4,249,232,238,15,24,9,10,249,242,4,7,16,18,18,255,237,
4,25,13,11,5,251,5,2,1,11,11,8,9,4,0,247,249,9,12,5,0,1,0,245,252,14,12,253,252,248,
253,6,0,249,250,255,6,13,0,255,1,255,3,6,11,8,2,8,3,8,7,252,255,5,12,16,14,2,255,253,
4,0,1,8,3,10,10,2,250,246,0,9,12,10,1,253,16,7,245,251,7,19,15,2,254,2,5,8,0,0,
10,12,254,249,6,18,15,7,252,246,1,9,6,12,5,249,1,6,253,5,14,7,248,242,0,15,17,6,245,246,
0,2,6,4,254,253,1,5,252,241,251,12,7,3,0,242,0,0,246,255,8,9,0,244,244,2,6,14,9,252,
249,4,7,5,0,255,4,6,10,4,254,0,0,5,3,0,254,253,8,13,8,253,243,246,6,8,255,0,4,3,
250,246,251,6,14,1,250,252,251,0,0,251,255,9,7,2,245,241,0,11,13,10,0,251,249,247,11,20,7,252,
2,9,1,5,255,1,19,13,255,255,253,3,18,4,252,4,7,12,6,5,7,9,12,3,253,0,3,4,15,15,
7,248,244,0,15,20,14,4,1,0,5,3,3,17,18,6,0,2,6,16,8,1,1,4,7,3,1,7,14,8,
251,244,249,4,13,6,1,2,253,248,2,12,8,2,252,0,252,252,5,10,2,0,254,253,253,3,13,9,4,254,
2,7,3,255,252,1,15,17,6,252,243,253,9,9,8,1,253,252,3,3,255,254,249,254,254,252,254,0,247,252,
0,253,253,250,246,248,1,6,6,253,242,240,252,6,4,1,252,252,254,250,250,0,1,255,0,2,0,247,251,5,
1,255,2,4,0,252,255,4,7,14,7,254,2,9,10,9,3,3,13,16,10,5,5,7,11,14,11,10,14,13,
8,3,7,17,26,20,12,10,13,14,16,18,22,28,27,19,16,8,7,20,32,33,29,26,12,2,8,21,29,32,
26,20,13,9,13,13,20,31,24,15,11,10,21,19,14,12,14,16,12,3,8,16,17,15,14,2,7,8,0,10,
14,20,16,6,3,5,7,10,14,14,11,13,5,0,252,253,7,7,249,230,237,0,43,6,37,0,6,8,5,6,
3,1,5,8,10,13,15,19,11,6,4,1,0,5,2,6,11,13,9,8,9,9,8,7,8,12,6,4,5,3,
6,12,11,11,7,0,255,2,5,5,4,11,10,11,10,5,6,0,253,254,0,251,240,0,8,15,19,24,34,54,
47,60,40,205,217,208,178,228,243,228,1,11,17,23,23,15,22,10,254,235,229,232,245,255,9,16,32,37,34,24,
14,254,244,241,249,248,1,10,19,29,35,28,27,17,9,2,254,247,248,252,247,255,13,16,23,20,11,1,243,239,
236,238,249,244,254,250,251,0,5,9,15,15,9,254,248,248,243,2,21,13,22,33,21,23,26,1,11,25,29,37,
15,12,11,24,19,19,12,3,13,19,19,12,8,241,224,12,33,1,5,244,245,32,12,253,253,250,0,17,16,252,
255,4,20,22,18,22,27,28,24,16,0,4,21,17,10,8,9,252,1,16,10,9,6,12,6,254,1,22,9,6,
0,250,4,3,240,233,238,252,17,250,253,16,38,23,18,7,6,248,234,224,214,231,222,241,240,219,239,243,15,28,
6,3,0,5,12,7,10,23,25,32,28,25,21,30,23,21,23,8,12,23,24,23,22,22,16,16,16,7,4,4,
253,255,0,254,249,251,248,0,1,3,245,244,247,0,5,8,9,8,12,7,2,10,17,16,12,12,17,22,24,19,
22,26,14,12,13,12,7,6,8,11,11,16,15,20,24,5,5,0,4,7,5,9,7,6,8,9,253,255,0,0,
246,251,249,3,11,18,13,11,10,0,252,5,252,244,247,0,11,14,17,27,29,29,22,9,8,6,11,254,3,252,
4,23,14,8,9,5,0,253,249,241,248,5,4,9,9,15,19,20,12,3,251,250,250,253,246,247,0,6,7,14,
19,15,14,9,0,7,19,4,251,2,8,10,8,13,11,4,18,19,9,12,14,4,8,14,5,2,12,14,9,12,
4,4,0,4,0,251,5,254,251,1,2,5,3,4,18,19,9,6,9,0,0,0,252,246,4,11,1,6,22,16,
17,10,254,1,8,7,254,1,29,19,10,11,18,11,2,250,232,245,11,0,241,247,15,18,18,22,12,16,25,16,
247,4,9,248,245,254,12,18,13,255,4,13,28,8,251,0,6,2,0,5,14,18,13,251,255,4,251,244,234,245,
10,7,6,7,10,28,26,9,253,0,11,12,254,240,3,15,14,26,18,13,20,13,255,6,17,1,242,247,0,13,
14,15,3,8,25,7,4,6,0,255,1,8,10,14,9,9,15,8,8,0,250,0,3,250,5,17,19,19,16,17,
15,21,15,7,7,9,12,0,254,0,4,11,7,0,253,0,7,6,11,10,16,13,7,11,6,6,3,1,3,9,
5,2,14,15,0,1,17,28,25,11,253,3,11,7,254,251,247,8,15,6,10,28,29,25,21,10,254,0,1,246,
238,255,13,15,22,27,27,28,24,10,7,6,253,251,251,244,250,6,15,13,18,23,18,11,253,252,254,251,4,18,
13,14,26,24,22,19,10,7,2,6,4,238,241,12,21,7,9,17,25,25,25,14,255,17,18,6,9,1,248,252,
11,2,12,11,249,11,37,30,14,5,7,3,253,22,11,9,21,2,3,25,27,7,2,11,13,18,252,0,3,5,
14,235,225,242,248,255,237,236,16,31,29,7,13,10,245,234,252,245,234,228,231,249,11,4,250,1,8,253,232,240,
248,235,232,249,254,245,238,235,246,249,250,252,250,255,6,252,245,244,235,235,232,238,245,235,241,0,2,253,249,0,
6,252,254,0,0,253,7,14,18,24,28,25,20,11,20,33,36,44,44,49,54,38,39,38,15,9,253,228,228,198,
147,154,225,50,68,40,8,10,1,220,187,212,9,38,42,10,245,8,0,189,159,210,14,49,54,55,66,49,7,243,
249,25,53,66,54,40,43,30,8,255,11,31,35,44,40,24,23,16,255,255,2,255,2,15,21,30,39,19,249,244,
253,21,37,42,42,20,13,14,19,30,29,21,253,192,133,158,218,19,51,72,59,20,254,227,218,236,252,19,29,15,
249,233,235,249,254,15,33,27,13,243,251,4,255,250,247,255,11,2,251,3,15,22,15,11,13,12,11,14,12,8,
250,1,14,9,251,242,242,246,2,255,1,10,10,4,248,251,3,255,242,246,252,243,239,243,9,6,243,224,222,0,
27,37,48,58,49,32,16,16,36,59,88,92,255,196,227,248,247,5,45,64,43,255,226,226,243,230,238,6,33,32,
12,0,231,237,253,1,19,31,30,25,12,6,8,245,240,25,54,55,36,32,32,21,13,28,47,34,19,29,31,23,
25,23,251,236,9,43,12,233,254,25,9,237,236,0,14,0,251,255,246,243,0,242,250,13,17,6,233,241,28,15,
240,242,9,30,18,255,12,33,16,243,242,7,40,40,253,240,19,27,237,227,23,48,25,251,246,0,0,0,12,12,
6,248,245,243,237,8,31,15,244,246,12,12,242,0,31,2,0,4,245,254,5,13,9,4,7,13,2,251,3,20,
21,5,245,0,17,15,10,0,253,254,6,10,246,245,23,21,253,247,18,23,250,249,7,6,11,12,5,4,14,21,
9,246,0,31,20,255,0,13,13,7,9,13,17,22,4,244,2,14,18,6,252,21,24,0,248,247,17,33,14,4,
12,3,253,252,14,30,13,252,11,15,247,5,23,17,9,4,245,239,246,10,19,0,251,15,4,237,2,22,236,217,
253,12,5,5,22,23,253,239,247,250,253,11,34,32,0,250,7,7,7,11,28,30,3,243,249,16,19,16,11,6,
4,2,251,255,16,10,250,252,7,6,255,2,9,2,245,243,11,16,255,250,17,13,254,1,1,255,10,12,7,6,
15,11,252,249,14,19,10,9,7,7,8,0,5,16,15,4,3,13,13,254,250,14,13,11,24,8,0,12,16,15,
6,0,11,20,9,13,13,3,12,17,7,14,26,13,248,248,12,21,11,0,2,18,21,16,17,16,11,7,17,27,
11,0,6,12,21,24,14,11,12,10,13,17,13,14,0,246,5,15,16,2,249,13,23,9,255,10,16,8,4,7,
5,251,0,11,8,1,2,255,0,9,9,1,254,5,11,8,4,8,16,15,17,9,2,9,15,12,8,12,12,3,
0,12,18,10,1,10,9,0,250,251,9,20,7,0,251,255,8,13,12,254,245,251,4,4,3,5,1,251,252,0,
255,4,12,13,12,2,254,11,17,9,13,10,0,1,0,7,12,6,11,24,11,255,0,12,7,253,252,7,14,7,
254,254,4,13,10,7,17,17,8,8,10,16,17,8,11,11,6,13,8,9,22,24,15,6,1,8,9,4,12,14,
9,6,4,8,12,14,9,1,1,9,10,3,0,10,13,10,3,251,247,3,14,10,251,246,1,12,8,2,254,244,
244,3,12,7,253,248,255,6,6,7,8,4,4,15,13,2,246,251,15,24,7,243,246,2,11,7,0,2,0,251,
244,247,255,5,255,246,246,255,253,245,251,0,252,240,238,252,7,0,242,240,245,249,251,247,251,255,248,250,5,1,
248,249,255,2,253,241,239,254,13,8,249,244,251,6,6,0,208,4,44,0,3,1,2,1,2,1,3,2,4,236,
191,217,11,26,24,27,26,24,11,246,236,247,6,12,15,16,19,15,5,252,250,252,5,17,24,23,17,16,16,1,
249,251,12,14,15,0,202,203,239,22,13,13,15,21,16,248,226,229,3,15,11,9,15,11,2,254,249,249,253,15,
16,26,20,15,2,254,2,4,5,10,34,36,37,14,8,211,132,222,36,36,38,37,30,19,239,208,198,241,19,26,
39,40,26,254,243,230,226,242,8,39,45,33,16,6,214,182,225,0,12,27,28,33,25,1,230,220,239,3,13,25,
31,29,11,254,242,234,236,248,18,33,25,21,2,247,249,242,246,6,22,32,27,10,251,241,241,244,248,17,23,24,
24,9,245,241,247,244,6,12,17,24,12,6,251,242,245,248,5,16,17,16,12,2,251,252,2,1,6,2,15,19,
4,252,254,245,5,15,19,15,9,8,7,254,252,9,7,16,10,6,10,15,10,0,7,217,176,205,199,227,27,48,
38,36,244,223,206,214,234,9,39,54,49,12,0,244,245,0,18,31,35,56,54,29,248,2,21,248,235,11,249,217,
8,32,4,232,232,242,243,10,16,16,21,46,246,180,209,244,2,11,24,5,253,232,240,251,10,33,34,28,8,247,
230,231,230,233,252,7,30,18,7,241,238,250,251,254,15,32,33,17,6,7,251,0,16,12,241,242,251,10,17,20,
23,13,3,12,9,243,255,19,22,18,15,255,2,10,2,16,15,15,17,19,11,11,20,15,8,17,24,12,0,4,
248,254,252,251,0,0,2,1,253,4,254,245,253,14,12,6,10,6,3,0,251,253,2,21,30,9,8,0,0,2,
9,4,0,8,7,19,11,8,10,10,6,251,6,20,21,18,19,3,3,255,245,248,1,7,6,0,5,12,3,8,
8,246,248,14,21,16,5,4,3,0,255,1,0,12,18,8,254,250,237,245,15,13,254,246,254,15,1,230,229,246,
6,0,246,250,253,238,225,234,10,11,8,15,17,12,0,231,237,10,32,45,25,242,235,11,32,28,4,7,19,29,
25,255,237,9,22,6,250,6,21,3,241,245,2,252,244,247,243,0,5,1,2,254,243,248,254,254,16,11,2,8,
14,10,250,229,255,20,12,7,9,21,18,249,250,10,13,14,6,255,4,15,3,243,251,4,0,252,225,226,244,4,
17,11,6,9,4,243,217,229,8,28,32,26,15,1,248,239,246,255,8,19,19,14,254,250,247,253,21,38,29,254,
254,249,234,236,255,12,14,6,250,246,242,236,248,14,15,2,7,249,235,243,8,5,4,2,254,7,28,14,5,26,
33,18,251,246,240,249,11,24,21,14,8,249,235,242,248,1,8,4,16,17,255,239,221,240,1,1,8,24,18,255,
234,228,241,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,208,4,44,0,3,1,2,1,
2,1,3,2,4,236,191,217,11,26,24,27,26,24,11,246,236,247,6,12,15,16,19,15,5,252,250,252,5,17,
24,23,17,16,16,1,249,251,12,14,15,0,202,203,239,22,13,13,15,21,16,248,226,229,3,15,11,9,15,11,
2,254,249,249,253,15,16,26,20,15,2,254,2,4,5,10,34,36,37,14,8,211,132,222,36,36,38,37,30,19,
239,208,198,241,19,26,39,40,26,254,243,230,226,242,8,39,45,33,16,6,214,182,225,0,12,27,28,33,25,1,
230,220,239,3,13,25,31,29,11,254,242,234,236,248,18,33,25,21,2,247,249,242,246,6,22,32,27,10,251,241,
241,244,248,17,23,24,24,9,245,241,247,244,6,12,17,24,12,6,251,242,245,248,5,16,17,16,12,2,251,252,
2,1,6,2,15,19,4,252,254,245,5,15,19,15,9,8,7,254,252,9,7,16,10,6,10,15,10,0,7,217,
176,205,199,227,27,48,38,36,244,223,206,214,234,9,39,54,49,12,0,244,245,0,18,31,35,56,54,29,248,2,
21,248,235,11,249,217,8,32,4,232,232,242,243,10,16,16,21,46,246,180,209,244,2,11,24,5,253,232,240,251,
10,33,34,28,8,247,230,231,230,233,252,7,30,18,7,241,238,250,251,254,15,32,33,17,6,7,251,0,16,12,
241,242,251,10,17,20,23,13,3,12,9,243,255,19,22,18,15,255,2,10,2,16,15,15,17,19,11,11,20,15,
8,17,24,12,0,4,248,254,252,251,0,0,2,1,253,4,254,245,253,14,12,6,10,6,3,0,251,253,2,21,
30,9,8,0,0,2,9,4,0,8,7,19,11,8,10,10,6,251,6,20,21,18,19,3,3,255,245,248,1,7,
6,0,5,12,3,8,8,246,248,14,21,16,5,4,3,0,255,1,0,12,18,8,254,250,237,245,15,13,254,246,
254,15,1,230,229,246,6,0,246,250,253,238,225,234,10,11,8,15,17,12,0,231,237,10,32,45,25,242,235,11,
32,28,4,7,19,29,25,255,237,9,22,6,250,6,21,3,241,245,2,252,244,247,243,0,5,1,2,254,243,248,
254,254,16,11,2,8,14,10,250,229,255,20,12,7,9,21,18,249,250,10,13,14,6,255,4,15,3,243,251,4,
0,252,225,226,244,4,17,11,6,9,4,243,217,229,8,28,32,26,15,1,248,239,246,255,8,19,19,14,254,250,
247,253,21,38,29,254,254,249,234,236,255,12,14,6,250,246,242,236,248,14,15,2,7,249,235,243,8,5,4,2,
254,7,28,14,5,26,33,18,251,246,240,249,11,24,21,14,8,249,235,242,248,1,8,4,16,17,255,239,221,240,
1,1,8,24,18,255,234,228,241,7,30,33,18,1,239,240,4,30,18,244,245,4,4,15,11,252,15,34,20,244,
253,12,27,32,27,245,246,19,20,8,247,239,238,1,20,21,10,251,251,255,3,0,249,254,254,7,9,18,4,251,
247,245,4,19,5,239,2,31,39,14,240,238,254,250,0,31,34,25,7,255,254,238,237,252,31,54,42,26,247,251,
246,239,245,32,60,51,12,241,232,233,239,244,23,32,19,3,246,238,229,233,245,2,16,13,245,244,7,0,239,244,
254,13,13,253,0,18,13,1,249,6,28,6,0,18,31,19,7,9,7,243,244,11,32,53,24,0,3,4,244,243,
9,22,2,246,10,4,243,246,245,234,238,238,255,255,2,255,9,12,6,241,235,255,27,34,21,9,23,38,13,1,
6,9,14,19,22,6,255,10,7,3,3,1,2,250,1,17,9,254,248,250,251,248,252,2,1,240,244,242,255,1,
6,4,254,255,244,239,239,0,26,27,252,255,23,25,8,0,1,11,27,31,21,2,7,21,1,2,6,252,7,19,
7,240,243,0,250,240,243,0,1,242,234,249,5,255,247,254,254,7,15,250,221,237,13,18,1,253,4,10,15,15,
17,11,9,249,1,16,34,32,26,12,250,244,1,8,17,14,0,253,2,252,246,255,1,246,241,237,232,247,7,14,
4,245,241,243,243,244,251,2,10,5,251,242,252,14,7,4,0,10,25,5,251,4,12,27,24,3,255,0,248,252,
7,14,253,250,255,249,251,254,249,253,255,242,250,8,16,2,238,243,0,14,19,3,251,5,15,10,253,252,6,16,
27,23,3,252,15,27,6,249,5,24,24,24,19,11,7,10,10,4,4,5,4,7,12,15,13,0,0,9,12,8,
4,253,250,12,11,4,2,252,4,15,16,0,245,0,5,2,255,11,10,2,13,4,244,1,17,23,15,17,12,239,
240,14,25,16,15,6,245,241,4,14,254,3,26,19,2,247,247,0,247,250,6,8,249,235,253,7,1,0,248,240,
248,8,14,5,3,7,2,247,249,0,10,19,19,24,18,254,245,248,255,17,30,23,10,13,7,245,254,8,3,0,
14,22,15,9,255,248,255,7,0,248,253,252,7,13,254,241,245,249,248,241,12,28,15,253,0,253,238,241,1,14,
6,5,14,17,10,3,0,0,246,250,250,249,10,33,38,16,246,228,228,235,255,11,26,35,252,210,233,9,5,4,
6,250,232,249,11,19,20,14,249,240,237,248,254,1,13,28,50,51,18,233,229,252,11,21,36,45,33,23,30,21,
3,255,8,15,38,40,22,8,10,10,2,248,0,23,50,43,6,245,0,11,6,11,36,41,21,22,9,240,0,13,
17,35,44,27,245,227,248,5,19,40,32,8,252,241,229,230,249,19,23,9,251,239,240,234,234,241,232,233,102,1,
41,0,0,2,5,5,3,1,6,6,3,1,6,10,4,246,229,206,184,183,209,247,22,31,26,21,37,59,61,48,
21,248,216,176,160,168,181,192,222,6,44,63,76,80,81,84,79,65,40,250,140,132,192,248,218,166,183,1,35,21,
53,61,25,2,11,7,210,168,169,202,210,208,208,206,244,22,54,62,50,37,38,47,33,4,241,227,226,234,233,232,
229,233,253,14,25,19,19,23,13,0,3,236,237,230,239,239,238,233,242,14,16,28,24,31,34,36,27,16,2,252,
247,248,254,254,1,13,23,28,30,34,27,33,35,29,9,250,249,253,248,238,235,249,8,9,21,11,255,254,8,17,
8,6,5,1,249,241,236,241,248,1,5,8,253,252,0,10,12,14,8,2,0,250,0,4,251,233,244,255,9,7,
255,248,247,250,255,1,251,241,246,254,1,251,243,246,254,7,13,10,0,251,251,0,255,246,234,236,243,246,248,247,
1,0,8,21,24,253,250,0,10,252,245,245,244,238,237,0,253,252,244,248,245,0,4,8,251,4,12,11,7,17,
31,29,23,12,17,18,15,9,10,254,1,5,12,17,27,21,17,31,48,48,33,29,27,31,20,19,17,17,11,14,
17,15,14,7,255,246,250,243,240,233,232,232,231,232,229,231,233,227,233,240,249,249,248,246,251,251,251,252,1,0,
253,254,254,253,251,255,250,246,243,245,248,244,235,229,224,223,221,225,227,228,235,244,251,250,248,248,251,252,255,249,
245,238,236,238,230,223,222,224,233,247,244,245,251,2,1,245,246,248,252,255,13,26,19,5,243,245,2,11,11,10,
0,0,27,1,19,0,4,4,5,5,6,7,8,10,13,17,23,53,94,45,40,70,104,120,65,36,65,76,65,27,
255,253,7,233,207,216,190,192,190,173,190,190,185,189,197,220,240,219,219,7,13,14,7,7,36,44,15,7,35,21,
13,247,0,11,242,217,236,233,219,215,212,222,229,198,216,240,228,234,233,226,0,16,248,245,0,24,24,244,9,21,
0,250,10,250,251,247,227,241,238,244,225,200,249,20,226,195,246,14,253,240,246,11,33,59,23,6,48,69,60,17,
45,86,46,12,47,103,79,49,8,70,100,68,22,11,42,49,3,237,1,254,206,219,227,228,206,185,205,213,227,216,
218,188,255,3,237,225,12,33,0,241,23,60,14,231,16,41,28,247,244,244,20,248,225,229,245,243,214,220,252,3,
205,209,7,28,14,250,247,33,45,37,5,9,28,38,17,35,38,0,0,34,47,1,239,239,12,0,238,219,224,238,
230,217,221,239,235,216,228,253,253,229,238,252,255,245,246,255,253,247,238,255,6,4,241,245,10,20,14,3,7,18,
25,29,22,20,21,21,24,30,23,13,5,14,29,24,0,5,14,21,13,12,3,12,9,13,7,7,6,3,4,7,
11,1,3,254,13,15,9,0,12,14,17,6,10,11,17,10,1,7,12,0,202,10,6,0,5,13,51,44,21,20,
8,251,242,255,3,249,230,210,223,245,245,11,19,17,49,48,16,11,7,248,236,206,183,229,246,7,22,23,33,37,
41,22,250,244,254,233,214,213,250,5,21,22,11,15,255,0,255,251,6,19,12,231,229,245,239,246,0,33,9,12,
14,248,0,12,2,11,27,6,243,231,226,249,199,245,20,48,54,4,235,252,254,233,236,15,6,1,0,11,18,10,
10,255,240,246,7,6,243,247,238,220,13,25,19,13,23,35,250,197,226,249,10,22,0,0,255,14,21,13,237,238,
216,244,16,21,52,24,4,229,242,244,2,252,250,249,6,248,242,240,6,245,8,18,13,54,0,27,29,231,192,199,
21,21,9,7,16,244,235,2,30,0,250,5,253,244,234,250,238,248,13,15,24,4,25,40,3,2,251,229,217,230,
7,7,23,247,249,243,30,36,9,26,229,198,217,220,250,13,29,24,32,13,7,40,36,255,15,1,219,222,219,207,
221,251,37,26,14,4,27,219,230,19,10,36,5,26,9,229,234,14,14,6,8,0,10,239,204,239,227,237,29,22,
13,29,41,22,228,236,244,0,244,255,240,246,254,11,240,19,43,28,20,235,14,246,252,227,220,11,252,232,15,10,
23,19,243,235,0,242,8,0,250,33,248,15,15,255,226,7,15,2,11,44,32,11,222,198,229,229,193,225,25,33,
35,13,30,27,234,3,30,24,14,238,218,236,12,246,11,22,15,3,251,235,255,226,214,227,11,255,6,0,18,59,
49,252,233,0,31,27,247,239,234,239,219,246,15,18,254,233,250,39,28,240,235,222,4,252,12,1,7,43,250,15,
6,1,11,231,0,246,247,13,16,38,251,244,214,211,228,198,34,39,27,16,5,226,31,59,28,43,22,251,192,215,
211,191,230,3,8,7,59,25,52,27,240,4,236,14,0,240,235,237,234,226,188,4,82,55,26,24,12,236,241,14,
2,250,208,209,235,13,38,44,7,249,247,221,225,241,72,44,17,13,238,197,213,250,26,32,5,19,228,12,46,231,
241,244,16,255,235,240,251,239,221,17,42,33,45,26,15,210,230,5,244,194,11,11,22,2,254,246,3,6,9,33,
24,3,237,212,236,254,18,222,25,60,1,212,224,253,2,58,14,42,254,218,6,250,32,231,190,230,3,248,6,16,
242,23,42,5,35,39,3,3,235,230,203,231,220,11,54,43,241,241,2,221,239,10,18,2,22,7,251,24,27,11,
240,0,31,28,16,166,168,201,242,231,250,90,73,2,9,29,15,250,249,9,52,35,251,218,174,186,19,35,0,232,
220,223,197,10,44,80,39,29,50,254,8,54,253,204,241,239,201,249,220,0,240,19,29,252,254,248,12,253,219,242,
34,19,18,9,6,61,63,3,222,223,249,252,231,232,4,252,205,249,255,253,45,14,207,214,15,14,20,29,28,80,
37,253,243,220,3,3,220,4,217,9,248,193,242,30,44,20,207,173,9,87,249,254,45,9,4,29,39,14,36,228,
175,234,232,241,230,203,31,90,56,249,213,11,13,7,238,7,10,186,174,235,37,9,28,38,54,30,26,29,2,250,
252,240,216,0,240,226,164,210,240,68,41,23,68,3,214,238,22,26,246,2,232,14,223,14,32,8,18,228,24,250,
37,20,242,232,222,204,225,246,219,15,29,5,11,21,22,33,29,252,14,1,31,14,232,195,14,233,20,220,214,47,
24,239,241,17,243,16,238,230,7,36,232,201,251,34,68,45,33,233,2,55,247,235,195,198,211,46,42,232,24,237,
241,243,13,26,32,235,211,237,1,5,248,45,5,41,16,20,18,229,29,40,235,216,227,214,214,9,15,2,241,199,
19,35,11,248,1,22,238,32,32,0,26,18,34,245,23,34,235,182,205,8,235,242,242,210,222,21,8,252,22,38,
60,20,254,23,33,5,219,9,15,62,241,181,245,230,228,0,214,218,16,237,255,50,67,7,249,254,7,6,242,48,
31,228,225,48,223,230,10,16,19,253,230,207,235,39,36,225,218,246,254,254,226,248,63,33,33,61,35,0,28,224,
192,227,4,41,230,221,212,235,226,250,247,250,59,19,13,4,16,80,70,10,17,27,209,151,148,195,1,51,21,15,
24,66,10,229,236,23,31,189,219,224,11,28,8,50,35,22,1,12,15,228,249,233,189,248,249,227,220,16,42,0,
243,31,79,15,24,242,14,33,251,203,242,222,246,25,208,2,225,242,7,236,45,47,236,24,60,3,2,4,230,12,
246,178,6,36,2,206,231,77,19,250,10,7,254,214,233,0,5,8,15,223,245,12,65,249,234,26,53,16,226,6,
228,223,9,25,207,237,227,245,14,251,25,12,29,14,238,209,40,87,5,24,254,7,220,216,177,230,26,35,26,192,
249,47,11,226,12,41,0,42,242,246,255,10,11,230,222,204,246,28,12,3,53,62,7,242,240,1,238,233,211,213,
13,247,4,13,23,68,16,217,252,7,245,2,236,253,42,15,47,14,26,249,204,192,193,220,230,2,22,255,28,65,
60,29,254,27,25,0,218,237,199,136,228,33,69,58,60,54,224,224,229,250,233,185,220,248,47,249,49,35,30,6,
19,17,225,209,240,0,4,1,250,12,31,84,4,231,223,242,195,186,250,50,22,231,0,20,8,229,2,29,51,53,
250,7,1,41,3,224,241,205,193,38,232,234,18,219,189,4,57,32,73,40,26,237,228,192,252,254,2,32,28,49,
35,236,251,234,207,0,255,252,220,11,222,201,250,243,236,55,70,57,13,26,4,213,72,49,14,23,173,169,212,237,
240,172,253,55,74,54,60,219,179,177,220,41,123,76,250,243,30,234,0,0,3,202,218,0,8,242,219,232,246,52,
26,11,16,252,230,16,6,6,18,242,1,29,65,30,210,209,214,13,207,201,27,7,255,51,33,252,244,25,20,239,
249,220,193,56,65,238,242,2,4,2,44,5,245,224,219,248,29,5,184,241,72,57,238,233,230,219,28,25,255,13,
7,20,4,18,3,247,20,230,21,43,209,205,238,206,177,233,82,9,53,47,8,16,5,9,234,20,37,11,228,242,
229,229,224,214,17,14,10,35,21,237,253,233,8,253,28,21,204,231,31,46,56,240,3,246,233,248,230,4,251,249,
14,6,3,216,23,10,216,22,246,206,66,2,216,79,76,241,226,53,6,160,175,253,20,49,10,226,253,30,247,12,
240,253,1,5,245,216,2,83,34,29,27,238,216,185,237,8,54,16,203,177,14,27,13,45,246,241,13,22,6,42,
14,216,249,18,35,222,1,226,4,197,231,14,240,20,240,222,95,73,230,226,1,3,15,20,253,221,69,47,238,188,
239,216,201,247,243,45,17,28,31,14,242,13,223,41,31,225,255,226,211,215,47,50,26,50,255,232,246,27,166,227,
14,251,245,249,10,37,21,248,2,20,21,38,191,191,29,57,214,255,16,8,18,5,0,242,1,249,243,255,247,20,
253,221,219,44,11,213,244,3,50,85,23,218,221,255,27,19,27,221,221,18,230,252,249,10,250,205,7,227,239,19,
58,22,18,33,247,199,248,46,65,28,8,224,236,230,187,250,237,19,29,226,220,5,25,241,13,13,38,42,31,240,
248,30,5,223,12,247,162,237,24,30,39,240,7,0,203,225,246,8,28,50,38,236,254,28,247,247,250,9,11,250,
204,218,62,232,238,32,6,25,235,225,37,40,49,160,194,12,40,14,11,245,6,240,237,35,241,39,9,230,15,41,
247,223,223,208,11,43,6,21,236,0,8,1,255,242,6,25,6,216,241,237,252,39,7,33,0,28,39,16,231,205,
235,176,218,24,47,39,222,5,20,21,47,232,189,14,28,7,34,25,225,13,228,232,16,7,214,249,43,240,206,240,
0,246,10,26,47,34,55,15,249,3,245,244,208,214,237,15,2,210,202,6,35,80,68,3,252,202,19,19,193,28,
36,234,235,228,244,6,242,18,67,39,246,222,5,229,9,253,231,249,225,244,2,43,6,22,28,244,48,249,223,0,
239,12,233,253,23,13,248,191,239,68,19,28,219,205,2,33,35,8,251,3,242,239,244,23,245,222,217,19,16,10,
51,49,32,7,225,182,209,58,21,240,210,9,19,217,2,253,4,20,58,211,253,33,28,2,182,33,80,236,236,185,
236,254,6,10,73,40,248,194,251,1,26,20,193,220,202,10,66,253,30,70,6,240,228,239,26,53,205,3,22,222,
228,242,247,22,237,10,234,236,3,21,41,40,249,12,235,233,20,22,29,243,224,233,16,212,228,49,234,56,11,6,
230,221,4,251,199,57,45,228,58,18,234,230,239,14,5,237,38,24,237,225,243,198,29,35,30,244,225,249,237,66,
218,23,14,237,247,19,62,33,244,207,0,228,234,2,234,236,22,2,242,3,236,25,38,53,43,247,210,255,23,206,
226,8,27,35,236,7,16,213,240,253,194,31,20,0,240,227,37,9,29,53,76,4,204,22,228,187,14,226,0,247,
247,8,242,233,251,0,238,48,50,46,45,13,221,202,236,2,21,61,10,224,233,150,205,25,1,12,45,82,9,8,
252,239,255,253,5,190,254,252,18,39,0,27,4,204,1,16,8,26,237,210,236,23,9,21,225,236,243,255,70,32,
0,247,29,24,210,248,44,213,232,213,181,33,48,11,15,19,14,251,5,5,224,19,3,221,9,59,240,254,11,209,
5,1,239,244,22,13,247,27,255,0,24,229,42,236,215,213,18,13,240,7,6,48,231,36,45,19,208,223,241,212,
4,4,35,31,29,2,249,247,225,251,240,213,248,7,4,246,50,65,252,243,19,8,18,12,215,239,241,34,247,214,
228,238,2,40,20,228,0,247,31,7,226,2,4,35,51,35,0,8,208,191,9,16,17,248,233,249,237,230,229,243,
46,50,25,244,253,24,235,49,9,255,232,30,243,201,5,243,14,211,250,41,242,29,236,6,240,23,255,225,19,33,
24,29,12,5,215,199,223,20,11,12,0,238,5,25,31,245,255,16,6,236,248,195,226,247,254,76,53,249,10,16,
43,252,248,240,153,197,19,235,40,80,42,16,224,236,198,3,249,232,42,1,30,245,1,25,253,29,41,244,214,10,
226,219,3,199,235,32,45,52,34,248,240,207,242,56,24,238,247,236,3,3,193,2,8,15,38,50,15,226,229,3,
32,22,249,212,225,231,254,26,252,251,254,21,4,22,241,254,0,248,39,28,14,247,249,3,235,7,244,224,20,247,
227,242,241,29,247,249,36,38,23,207,233,14,255,68,69,218,238,238,226,4,246,18,249,216,209,198,0,99,39,23,
53,239,13,243,186,251,20,248,239,240,241,29,28,45,21,252,226,209,252,8,22,6,11,237,245,3,201,253,254,251,
55,32,10,60,2,243,250,227,17,223,211,246,210,249,56,4,4,33,37,20,245,5,246,218,204,14,17,10,28,4,
0,0,250,253,239,233,28,7,0,254,247,2,0,253,19,43,243,235,1,254,225,246,232,15,59,0,1,15,246,21,
212,238,253,2,9,7,18,22,13,230,25,245,225,223,241,248,247,52,11,31,7,234,240,19,28,3,18,253,228,236,
223,253,2,233,3,21,32,255,11,35,247,1,249,237,221,243,2,11,249,1,35,20,8,1,13,39,242,246,254,187,
233,0,251,19,247,0,19,239,239,32,12,28,41,6,21,210,255,224,208,39,25,24,9,209,218,250,233,15,32,30,
15,2,254,226,233,239,250,46,32,1,22,225,248,24,3,252,248,5,22,215,220,254,236,13,13,10,21,11,3,17,
249,251,9,240,230,16,10,35,214,245,255,225,4,16,49,6,6,244,37,22,203,221,247,6,247,1,235,16,36,0,
0,239,233,234,27,12,44,37,5,251,217,233,14,42,232,239,8,249,226,228,9,6,25,254,24,248,234,227,252,24,
8,31,16,42,11,239,240,0,251,245,242,8,252,240,231,238,3,14,10,250,7,11,7,246,11,2,7,0,24,39,
254,2,250,244,235,246,241,220,13,20,10,243,232,248,8,7,0,250,34,25,0,4,251,28,253,10,1,2,251,221,
228,218,2,38,6,255,16,3,244,248,234,34,18,1,2,0,247,7,251,255,17,245,248,244,5,17,0,244,6,2,
243,0,242,27,20,4,255,5,5,255,224,219,241,1,16,12,7,28,251,15,39,7,230,243,0,8,253,244,0,230,
239,252,236,23,47,12,246,238,249,12,231,21,38,10,12,10,233,216,233,4,6,13,7,0,1,254,0,0,233,7,
15,0,2,5,24,14,23,15,18,18,22,19,26,21,27,28,17,24,30,26,17,23,26,30,31,17,28,21,16,12,
29,40,4,36,18,26,31,11,21,16,29,4,19,16,20,24,7,26,14,27,8,9,11,17,23,254,22,16,24,16,
18,12,253,30,1,21,18,17,28,21,14,27,23,23,14,35,33,31,27,27,25,23,13,16,33,27,3,20,12,9,
36,34,20,28,13,18,12,252,20,17,8,4,13,9,2,53,18,11,14,0,0,251,20,21,16,7,0,11,22,17,
27,18,14,6,8,24,23,4,32,17,26,16,24,16,28,34,15,21,33,33,26,28,3,26,21,7,34,50,18,25,
4,19,37,20,19,4,20,29,9,25,21,35,23,22,9,4,23,248,30,21,18,9,8,3,29,20,10,14,13,4,
9,12,27,22,0,8,10,4,4,12,20,18,20,1,20,22,12,30,9,20,27,0,11,16,34,23,37,1,33,19,
11,22,11,33,14,10,25,20,21,24,1,8,29,11,14,26,19,5,13,15,17,4,14,5,4,10,11,17,4,11,
17,245,11,25,8,15,3,8,10,0,18,11,14,28,31,21,7,30,11,18,34,17,42,7,9,5,9,19,11,37,
13,26,31,7,20,4,30,19,28,8,16,11,30,20,5,19,17,17,5,0,2,20,10,11,25,7,26,7,10,6,
15,25,7,6,7,253,21,9,16,22,27,2,18,28,5,15,12,2,23,14,37,15,10,26,14,8,21,28,12,26,
9,37,21,10,30,20,13,28,30,6,17,8,4,21,6,26,27,10,23,14,14,23,11,0,12,7,10,19,14,248,
18,10,1,1,2,28,14,254,4,12,9,7,17,16,27,15,3,10,31,0,11,35,11,4,19,38,23,8,13,31,
18,24,18,26,32,12,26,14,24,29,11,29,13,8,21,9,4,13,19,20,8,17,17,0,10,11,11,5,1,9,
0,255,10,8,8,22,4,8,20,6,252,14,25,8,24,11,19,39,30,11,34,13,11,25,3,23,38,28,40,12,
27,36,11,13,24,33,20,12,26,251,35,250,8,20,18,9,0,20,4,15,13,5,250,21,0,7,2,3,9,5,
0,9,20,29,0,248,15,253,10,28,33,15,14,6,13,25,29,18,3,32,44,19,22,38,5,15,24,35,7,22,
24,25,26,13,8,19,31,251,10,7,237,11,247,28,1,0,13,3,2,26,2,252,13,2,17,13,5,244,1,1,
9,18,15,9,12,0,41,26,22,17,0,251,13,37,22,9,1,14,58,3,20,21,13,29,16,2,41,31,0,29,
18,16,18,2,24,15,10,31,253,0,27,4,37,9,1,20,3,12,9,0,11,28,251,253,14,20,28,34,249,7,
12,19,16,3,2,31,7,4,6,7,32,27,0,12,7,20,14,1,253,1,35,16,249,5,24,16,15,33,252,13,
7,13,23,251,43,47,252,33,38,13,33,34,248,24,32,13,37,32,22,31,16,6,16,24,34,12,0,25,26,22,
25,13,24,24,240,14,27,244,15,25,239,254,8,235,37,15,6,13,254,2,12,33,250,9,236,243,9,233,26,22,
20,6,24,252,24,23,15,39,8,14,30,251,34,39,0,17,43,29,26,45,23,254,43,9,45,37,14,24,34,251,
51,38,11,21,16,14,28,41,15,21,250,31,4,14,24,0,5,17,27,27,15,7,0,28,26,13,15,7,17,4,
246,34,23,10,18,14,7,1,14,7,20,3,13,252,240,16,23,0,21,6,3,250,255,27,15,249,5,14,4,252,
29,254,247,44,20,1,30,29,243,57,27,20,28,250,36,18,11,54,35,34,36,26,43,61,22,44,20,13,34,46,
44,27,41,39,6,27,0,55,32,22,9,8,16,240,25,255,15,18,6,250,247,29,10,238,18,8,230,235,250,246,
11,14,236,23,250,5,6,21,250,22,42,252,11,31,31,21,23,253,22,3,30,3,32,32,249,28,14,8,24,24,
254,247,2,242,244,10,15,37,254,9,11,255,17,6,38,30,23,21,15,15,20,53,18,45,22,248,24,21,28,11,
72,39,31,42,4,49,19,37,27,25,32,8,21,20,40,41,4,25,6,253,23,10,11,246,5,4,253,37,15,232,
0,17,254,240,28,32,7,25,233,228,11,252,0,33,28,248,12,0,15,20,19,19,48,6,12,9,2,32,11,27,
33,47,19,250,41,25,23,42,36,15,35,35,254,11,6,18,65,16,255,11,22,50,255,220,0,37,232,0,3,225,
22,236,185,58,82,55,30,245,245,31,17,36,238,6,55,16,19,16,47,54,45,29,31,18,65,14,29,23,55,66,
19,28,39,16,27,19,227,21,27,10,19,1,235,57,20,231,3,242,9,20,251,4,229,255,28,14,248,2,15,0,
3,242,8,14,17,17,234,249,47,55,13,249,58,30,31,48,1,253,26,31,24,17,245,251,33,253,241,17,83,28,
4,50,29,34,42,8,222,33,60,6,15,255,249,25,72,250,235,35,37,29,224,241,252,0,242,4,32,38,13,240,
221,227,16,32,229,19,14,242,21,252,9,17,12,57,72,0,0,37,250,32,21,11,60,49,1,26,255,25,68,27,
250,53,30,17,24,13,29,46,6,11,27,225,251,30,17,0,4,26,24,251,239,30,21,238,10,246,236,45,47,25,
6,5,18,59,252,245,39,31,26,0,249,25,40,39,19,236,232,54,5,236,14,22,48,5,250,16,230,10,46,11,
242,5,0,19,250,210,23,39,246,248,254,255,8,20,241,12,31,6,41,214,238,19,36,18,40,47,54,17,43,26,
238,32,25,23,32,21,15,51,11,33,57,40,47,28,8,10,23,51,40,6,9,25,12,25,25,251,22,33,1,254,
252,237,11,254,22,3,14,35,245,241,2,28,22,5,10,253,254,6,23,15,9,24,36,14,255,236,6,24,30,12,
34,25,14,10,23,8,13,13,22,22,6,55,44,245,251,17,5,25,34,33,22,36,50,18,17,15,30,71,71,28,
29,28,20,13,244,31,29,31,46,3,11,45,248,22,33,246,27,14,229,225,232,250,220,242,234,159,137,200,232,245,
239,240,24,15,5,47,34,18,33,62,0,13,51,53,30,32,121,76,19,50,47,49,85,253,17,91,53,71,85,68,
42,50,21,25,47,39,14,239,16,37,246,249,251,31,31,0,14,35,236,249,254,20,23,17,22,5,245,253,37,15,
9,17,10,23,255,232,9,6,10,26,16,20,16,24,9,10,8,36,23,254,233,45,30,249,6,253,9,35,18,255,
7,37,34,14,12,14,31,254,252,18,7,26,30,15,27,42,21,25,22,0,8,21,23,2,250,246,36,239,8,61,
245,4,13,246,16,34,247,251,6,250,250,2,21,21,16,251,253,13,250,5,254,14,26,7,3,242,233,244,13,46,
28,12,16,16,4,21,45,44,27,7,6,7,15,28,40,10,22,63,42,19,15,252,28,33,17,21,18,26,19,10,
8,23,18,14,1,251,35,12,25,7,255,37,10,20,9,20,25,0,242,0,36,21,16,7,251,254,13,29,243,0,
2,4,14,19,1,232,11,15,42,29,11,18,8,11,9,255,253,28,11,23,20,14,19,21,14,4,15,54,23,16,
17,13,14,42,9,14,50,24,14,30,10,23,250,21,22,249,70,0,0,36,245,42,41,17,38,33,254,7,21,11,
42,4,21,21,4,41,36,7,28,23,40,55,47,23,17,19,22,32,4,25,57,43,42,9,253,16,17,7,24,19,
20,8,242,10,27,24,19,19,43,34,10,9,3,3,22,31,21,17,10,17,37,17,26,42,28,32,26,15,33,24,
5,15,7,17,38,16,13,3,14,27,24,3,254,252,5,18,16,250,255,9,252,246,4,25,7,14,7,5,5,10,
254,238,4,1,5,0,255,27,45,32,29,20,12,24,42,12,46,16,40,52,14,5,6,57,26,32,60,9,20,54,
3,15,33,24,20,0,2,37,27,0,1,2,32,57,18,5,24,255,253,4,7,24,47,32,15,14,12,25,23,20,
24,36,47,36,21,0,9,27,18,20,12,12,11,6,254,0,16,16,16,1,10,25,15,252,239,251,25,21,18,24,
28,14,3,251,247,15,32,27,15,14,19,21,16,26,44,46,32,27,252,247,255,251,20,47,44,43,38,19,25,30,
3,12,11,1,21,17,10,17,17,24,41,33,27,31,22,11,4,4,8,21,22,10,15,14,1,7,253,250,24,20,
1,11,1,245,4,6,9,19,15,12,3,3,11,15,5,5,13,13,17,23,9,11,25,21,14,21,26,26,19,11,
11,21,18,8,11,23,12,9,28,16,16,34,49,34,14,16,35,70,19,7,36,67,21,12,35,43,52,24,11,33,
44,31,20,245,30,28,7,5,0,13,36,24,3,1,18,14,252,2,12,6,18,19,0,5,21,20,15,7,6,32,
31,20,24,19,22,29,34,25,24,34,35,16,13,21,25,29,21,25,17,30,18,4,23,1,15,28,6,2,0,8,
253,248,241,251,10,7,4,249,8,255,1,12,6,10,18,8,0,4,7,10,23,12,13,39,38,8,15,10,6,25,
31,21,10,7,9,10,13,10,22,25,25,18,255,0,255,254,2,0,0,0,122,8,8,0,10,213,185,201,218,246,
30,33,19,56,71,24,0,214,189,183,232,14,26,28,12,15,57,29,252,4,244,232,213,223,2,10,16,13,5,238,
255,243,245,26,10,218,238,31,37,0,0,0,1,21,21,237,233,8,244,252,45,28,219,215,249,4,251,2,229,242,
250,255,14,37,36,26,0,12,6,215,225,255,12,16,2,11,17,4,248,236,0,228,217,228,3,33,7,27,18,251,
28,246,235,22,246,250,248,1,59,5,229,252,251,20,2,226,11,12,229,227,253,6,247,237,253,3,20,21,251,4,
21,40,20,7,238,4,35,6,224,208,223,231,252,13,2,5,4,17,13,227,252,13,250,48,14,234,220,243,18,67,
52,14,253,215,213,209,236,253,247,21,31,42,5,209,241,246,38,243,215,14,41,22,35,21,210,0,245,199,13,21,
10,15,252,20,22,233,233,0,12,9,205,209,244,2,9,28,42,18,23,26,20,245,229,226,13,7,230,230,242,18,
33,20,253,227,214,237,1,13,2,17,37,18,25,22,209,223,29,4,27,2,210,216,249,57,255,227,0,232,4,66,
0,204,0,12,253,41,46,231,231,236,247,2,246,253,3,57,68,224,211,220,218,21,9,21,2,234,11,238,12,15,
16,39,213,240,32,3,251,1,4,18,7,222,230,2,239,248,244,9,33,28,252,1,241,1,246,237,16,30,28,5,
0,13,16,210,197,254,20,250,12,23,225,229,254,8,39,16,222,248,20,29,15,255,42,0,203,243,1,248,240,9,
6,254,0,250,244,252,23,49,237,223,238,222,252,54,42,252,23,43,0,220,239,207,11,30,216,220,40,20,241,254,
40,8,216,248,27,9,234,24,217,234,20,231,0,55,31,245,34,10,214,235,24,38,25,207,174,232,9,249,23,20,
27,7,255,238,238,22,231,232,61,58,235,250,19,6,10,230,217,238,32,254,212,24,6,219,13,13,249,252,248,0,
254,57,32,234,249,55,240,221,1,42,244,217,212,239,32,11,6,245,36,16,183,250,14,39,44,226,223,37,1,210,
23,39,255,206,225,26,43,231,238,12,44,14,216,251,41,254,210,225,38,20,235,218,33,43,13,217,172,4,66,9,
16,34,5,226,228,239,49,255,237,5,252,255,231,11,28,34,18,246,216,8,233,183,216,45,34,12,20,245,17,63,
28,215,254,34,211,205,236,244,44,10,28,28,237,252,241,237,233,214,226,41,63,232,0,55,24,233,240,19,234,11,
19,250,12,1,213,233,80,20,157,200,25,223,5,60,7,237,44,57,2,211,20,208,3,91,231,161,12,33,0,14,
44,236,177,244,21,246,8,8,237,32,3,8,27,31,212,233,62,44,212,181,4,62,217,176,8,48,22,246,4,44,
15,214,250,21,212,1,55,23,3,216,211,29,29,210,242,23,4,236,231,33,34,20,234,247,19,0,228,246,28,49,
42,204,172,21,91,219,190,227,14,25,25,239,252,19,237,21,11,14,18,222,26,17,0,216,243,4,9,248,232,44,
10,0,248,201,21,25,214,255,14,229,246,55,46,18,235,0,18,255,244,220,247,22,243,23,236,246,33,213,250,17,
213,241,48,44,234,223,61,14,224,18,7,226,230,46,55,230,224,2,250,226,8,21,237,0,247,255,240,7,251,218,
60,82,226,219,78,34,191,226,7,246,8,3,222,233,31,15,233,4,41,5,207,8,18,196,11,72,245,254,31,237,
229,6,233,246,56,37,222,198,38,55,187,245,55,10,199,235,232,14,33,22,4,237,53,13,231,199,33,35,172,248,
51,242,7,33,15,23,220,254,251,4,217,226,48,60,212,173,6,85,33,199,227,13,48,6,242,237,21,26,22,193,
184,44,60,13,40,206,168,247,39,11,20,251,12,24,1,233,203,9,58,26,252,220,223,14,244,2,50,11,227,237,
244,6,31,236,252,6,36,29,0,193,36,246,215,13,3,27,248,240,193,6,68,61,246,216,10,221,245,243,250,43,
13,40,231,246,17,37,238,243,199,253,20,39,3,217,0,250,16,190,202,33,58,52,9,6,248,25,30,240,243,3,
223,209,13,33,217,234,38,9,236,6,246,248,254,32,9,186,61,41,240,241,8,33,230,24,31,198,20,30,174,242,
19,234,53,218,215,9,18,57,11,187,4,86,18,203,209,47,53,255,230,211,245,42,12,214,240,240,8,16,229,17,
71,7,196,250,23,69,253,214,253,9,246,176,243,72,15,244,32,203,190,86,59,230,234,9,19,25,234,179,229,122,
81,139,229,244,253,225,246,63,47,40,214,210,7,39,177,2,98,230,242,220,39,31,15,239,224,0,5,198,3,19,
17,45,206,9,73,230,193,236,70,235,224,35,59,9,165,237,10,42,16,211,239,99,249,144,63,65,242,209,251,6,
226,3,5,244,19,21,208,18,66,12,247,242,39,236,195,206,2,71,27,192,12,43,13,234,218,9,50,244,210,12,
47,10,207,0,4,15,189,33,56,229,230,253,34,19,252,247,2,17,6,201,235,48,13,35,221,221,221,247,26,45,
1,240,22,220,28,36,215,248,81,249,212,6,243,4,222,33,195,205,120,247,188,27,39,45,17,181,236,36,26,206,
21,62,22,188,253,240,28,250,172,14,80,248,206,14,3,10,215,73,36,241,7,214,186,69,36,196,13,70,19,185,
223,21,33,195,248,243,248,96,0,21,17,0,175,203,78,51,180,206,34,47,245,22,12,30,224,232,4,203,7,61,
248,2,247,205,34,64,31,225,215,241,224,13,1,230,5,96,220,250,16,244,11,0,5,12,246,205,31,3,13,255,
245,253,0,253,27,237,207,43,14,251,18,233,9,41,238,228,241,0,250,227,69,66,162,29,70,202,157,62,51,209,
9,10,10,244,18,225,20,5,254,221,216,80,195,231,59,38,247,3,244,4,37,24,229,174,29,37,237,241,6,17,
9,244,227,250,4,9,251,8,4,243,245,74,7,240,51,204,208,5,209,70,43,244,23,173,250,100,174,234,35,233,
39,227,246,40,13,44,241,191,226,29,5,16,246,23,246,243,14,243,32,9,245,249,73,2,150,229,28,252,231,23,
30,255,252,30,235,227,72,231,222,32,20,241,235,42,249,221,2,255,235,47,254,200,28,49,191,215,104,84,194,174,
22,11,202,229,54,28,28,255,216,13,56,255,189,2,52,217,233,35,241,210,42,31,246,12,7,226,249,31,214,193,
6,78,40,202,30,45,241,8,233,180,7,65,243,219,64,23,183,235,71,24,210,231,194,42,79,210,203,31,52,25,
221,233,43,232,251,54,16,209,242,255,254,16,230,205,21,67,250,214,254,45,2,191,52,237,7,33,247,3,10,54,
193,207,60,249,189,37,34,246,1,30,221,217,29,220,219,77,27,220,1,28,21,10,254,241,246,205,247,46,244,30,
55,195,206,49,8,191,25,25,240,240,18,12,232,28,5,24,14,2,232,189,253,62,10,5,15,242,237,225,255,28,
245,2,7,229,17,2,214,24,76,6,0,238,239,250,222,46,251,210,44,254,232,39,235,244,14,10,18,215,211,7,
32,36,10,242,23,245,222,35,0,253,0,236,255,29,247,228,249,254,37,222,20,22,252,229,27,246,246,34,3,0,
4,232,229,15,14,0,2,243,8,22,8,194,23,47,229,205,15,35,251,21,237,225,20,39,209,8,75,249,174,243,
15,30,30,231,248,4,7,252,225,15,39,228,2,11,233,218,23,42,14,248,5,8,221,245,9,244,19,3,245,13,
13,237,29,251,1,229,227,36,249,13,14,240,236,4,16,44,244,207,251,8,0,1,0,40,24,219,237,31,235,0,
22,246,17,241,236,21,0,232,255,242,1,34,225,10,35,249,253,254,28,24,248,233,251,248,3,236,253,5,11,5,
247,235,24,251,245,18,12,16,244,247,12,3,254,16,238,246,252,253,21,249,12,4,252,245,239,246,1,9,23,10,
247,253,9,15,246,250,1,254,5,242,247,252,13,7,251,17,21,248,238,1,4,1,235,1,242,12,32,238,235,20,
12,252,5,249,26,249,246,253,247,16,253,243,2,11,246,246,19,252,11,0,244,4,3,242,248,16,11,12,0,8,
246,4,238,239,16,21,255,213,22,6,243,254,26,0,244,3,242,15,15,8,233,250,31,245,244,249,5,247,11,2,
242,10,26,250,227,14,12,244,231,15,27,27,254,198,248,35,7,250,245,247,253,15,0,18,6,243,245,31,6,243,
248,245,14,254,242,253,12,250,17,254,232,36,246,237,0,27,0,1,253,24,255,243,11,227,241,6,25,244,242,18,
11,239,13,11,251,6,242,250,5,0,22,248,250,1,3,251,0,3,253,6,242,254,25,11,231,248,24,3,255,239,
8,10,232,7,12,249,242,1,19,6,11,11,242,241,1,0,241,5,9,246,3,12,5,245,18,255,240,19,7,241,
239,21,4,228,3,20,252,3,11,234,243,21,13,247,236,33,255,236,23,253,251,4,5,249,239,4,20,249,16,248,
225,31,254,247,2,0,12,248,239,5,3,14,13,245,1,16,237,243,14,11,8,225,253,27,241,3,11,249,16,249,
232,247,23,12,221,0,33,3,253,6,247,253,0,15,1,249,7,232,10,25,3,231,237,15,255,247,5,1,235,17,
24,250,10,254,13,255,248,13,246,0,0,244,2,248,239,9,14,255,251,0,9,3,238,14,5,7,4,252,10,21,
1,215,249,23,249,236,9,253,240,18,14,251,7,3,238,2,18,10,234,253,17,6,246,1,3,3,9,236,251,9,
2,244,244,10,9,0,241,17,12,8,0,252,243,255,0,6,254,249,9,249,3,26,16,225,1,24,238,250,236,4,
10,253,7,247,252,6,6,10,1,253,10,12,227,8,18,249,246,251,255,22,253,237,1,3,1,242,2,17,250,4,
7,13,5,241,0,0,147,8,9,0,250,5,240,232,11,255,245,7,234,218,30,27,215,3,33,0,232,17,7,255,
23,45,13,253,246,25,33,255,227,27,13,238,4,0,241,10,245,4,29,219,235,253,240,13,234,244,1,244,0,251,
5,237,34,23,226,228,38,12,204,2,42,10,239,44,14,238,15,9,27,15,5,217,244,46,254,203,18,49,248,230,
247,227,239,255,9,18,242,252,231,253,238,254,251,249,3,20,246,209,25,44,3,4,25,240,248,19,12,25,241,7,
31,241,9,24,244,248,26,244,236,11,7,42,240,190,28,19,252,233,254,21,228,241,227,19,10,18,235,203,40,6,
167,3,63,244,228,21,2,28,240,13,6,4,58,211,253,55,254,219,37,52,215,228,21,61,243,188,248,14,35,222,
219,33,5,214,17,31,229,246,30,255,211,20,12,227,16,26,248,227,14,15,219,30,26,221,0,19,233,229,69,253,
206,251,29,29,238,255,17,25,235,254,24,249,242,246,0,226,247,38,0,13,0,242,243,28,42,240,205,0,15,219,
21,20,228,244,41,3,235,31,249,226,21,24,235,255,11,2,5,0,59,248,210,27,32,239,252,18,230,250,18,239,
242,235,24,247,6,0,233,14,226,228,251,25,244,240,5,231,18,31,243,242,24,12,5,213,33,28,215,17,4,29,
55,228,239,20,2,246,243,23,26,216,238,29,255,247,249,27,4,219,248,0,30,12,215,20,41,6,193,252,60,0,
185,2,29,253,0,243,9,23,0,225,240,31,35,234,223,61,2,221,20,246,10,251,243,24,7,223,231,242,2,15,
248,23,249,245,254,233,25,17,1,245,31,243,238,18,247,11,252,245,253,3,243,39,238,250,60,254,252,245,8,24,
253,0,9,40,252,6,2,232,244,230,4,6,230,14,0,1,241,230,0,21,250,8,250,218,28,37,231,247,5,229,
9,5,252,9,239,226,18,8,232,10,3,244,29,31,8,246,250,52,10,6,8,237,18,250,209,254,38,5,238,0,
34,0,202,11,49,5,212,249,38,210,232,252,41,38,224,222,6,247,7,5,204,38,32,216,1,30,12,226,244,60,
4,206,7,26,234,7,19,234,33,14,234,237,22,1,235,243,0,51,234,218,34,238,9,254,233,251,25,5,254,9,
244,17,4,11,250,233,18,241,22,252,246,28,241,223,251,75,244,209,20,41,2,231,21,1,24,224,217,20,38,246,
198,46,26,206,243,26,20,227,255,243,220,0,252,8,3,1,44,226,229,8,19,255,33,10,233,0,243,10,28,30,
24,242,16,242,9,1,226,241,26,1,199,247,37,0,213,24,35,243,243,237,1,44,250,208,240,65,248,198,13,71,
246,190,6,17,237,20,9,213,16,51,214,251,38,45,254,191,67,251,255,7,225,19,53,254,183,23,45,244,215,239,
41,246,238,33,226,251,254,253,244,32,237,241,41,238,249,232,240,47,232,221,247,18,20,236,17,30,31,216,7,254,
242,34,252,243,14,3,247,9,28,243,234,23,37,12,207,0,0,241,30,20,201,11,38,255,239,229,34,41,224,223,
240,2,38,226,9,15,14,221,226,6,28,253,227,30,2,200,4,49,241,242,21,12,23,253,213,53,37,3,213,232,
60,248,214,250,52,254,255,251,244,17,7,246,6,245,246,0,240,249,229,247,23,1,217,8,11,19,30,214,238,66,
33,147,222,70,252,242,250,53,246,250,53,17,241,243,22,253,37,249,227,18,250,5,253,232,27,241,225,21,50,193,
3,28,19,235,219,13,28,230,240,31,10,220,232,0,37,7,191,244,16,10,250,224,52,1,214,8,47,223,249,43,
237,251,22,228,1,83,212,196,20,70,21,192,254,75,243,193,38,29,253,243,251,41,238,244,13,27,247,3,252,238,
18,236,228,25,27,232,210,248,38,204,221,67,22,232,236,248,35,254,212,13,36,237,233,2,20,13,20,230,3,29,
246,228,245,38,23,222,11,20,20,221,247,12,27,232,253,13,247,16,243,248,29,18,234,9,243,10,245,253,255,32,
231,252,0,10,8,250,255,2,234,4,40,224,207,30,58,189,220,38,50,213,248,16,21,21,228,240,16,7,253,246,
14,0,224,248,13,29,234,218,24,30,214,236,34,30,233,236,61,14,206,17,53,234,241,26,45,233,197,32,0,6,
248,211,26,31,204,242,58,33,222,216,20,48,230,207,17,61,186,195,67,33,173,237,23,34,44,227,239,0,45,8,
203,15,40,234,234,32,12,239,255,41,5,191,34,3,206,52,43,221,229,7,13,9,227,4,0,27,20,194,220,89,
27,183,242,27,24,225,246,41,250,218,2,22,3,19,222,242,17,11,2,218,25,32,239,197,26,70,246,233,17,23,
244,221,22,32,251,213,2,45,5,211,227,250,45,3,210,26,33,214,248,41,15,210,243,44,234,0,23,241,253,255,
17,236,254,44,250,210,42,37,223,217,252,32,253,5,248,234,22,31,254,238,21,4,240,0,12,4,209,14,22,16,
249,216,251,2,29,236,7,21,230,24,9,254,219,7,4,6,23,211,1,30,255,243,244,25,3,210,20,49,7,190,
252,76,248,200,21,73,204,235,240,6,78,242,232,254,37,202,229,55,37,214,242,25,6,223,216,49,44,235,193,24,
21,3,203,255,46,246,239,2,0,36,221,0,10,248,243,5,241,19,19,200,16,33,21,30,242,1,15,6,234,244,
9,11,14,231,245,14,19,236,240,37,1,247,213,0,14,246,9,36,19,208,6,1,17,25,227,236,41,12,213,230,
20,29,237,255,4,15,229,249,28,227,6,238,49,0,219,255,11,251,225,10,251,45,14,219,246,33,13,213,46,44,
181,225,55,37,239,213,16,54,9,212,227,19,34,25,188,233,86,249,185,36,54,224,242,24,238,254,234,254,251,11,
3,216,61,239,221,6,255,39,243,15,11,211,251,33,13,5,0,244,10,24,242,238,17,238,250,8,10,21,212,0,
8,22,251,252,247,29,243,216,33,246,230,25,243,33,12,226,0,19,235,11,254,244,28,238,4,21,213,12,25,14,
239,8,7,233,4,242,13,5,2,240,4,22,243,241,46,0,224,3,49,1,236,227,242,37,245,253,19,233,15,250,
249,255,0,12,1,247,239,235,255,45,13,228,253,26,0,207,253,57,25,203,247,63,218,251,10,250,41,245,198,53,
24,245,204,15,83,231,198,28,28,223,229,20,233,17,255,225,35,6,236,240,48,18,207,248,63,246,167,48,26,247,
28,217,58,241,214,48,14,210,222,57,32,211,246,1,19,243,4,197,23,72,215,221,48,31,2,240,241,227,22,240,
21,254,231,32,229,228,12,16,8,241,14,7,6,7,1,22,5,4,218,8,18,234,246,245,49,31,204,0,39,248,
230,36,13,217,0,238,16,21,235,230,24,25,214,232,25,15,227,241,22,24,245,248,38,10,234,16,222,19,249,229,
24,237,11,230,1,39,3,224,253,56,226,240,6,12,20,231,0,11,250,15,247,241,40,237,230,19,252,16,17,1,
0,8,253,239,7,43,0,243,250,18,4,199,46,5,248,213,246,12,247,249,235,31,14,241,254,28,15,232,217,40,
49,204,221,43,27,241,226,222,30,27,234,219,30,0,246,46,255,13,7,7,237,0,0,238,6,12,255,233,32,5,
211,254,16,251,249,21,10,240,234,14,84,250,205,11,28,0,218,217,39,20,251,225,240,45,23,227,226,62,237,236,
254,6,10,231,0,10,240,6,33,250,221,7,9,14,230,243,30,20,249,251,0,10,255,2,34,251,236,255,9,9,
255,229,31,24,196,245,236,58,253,224,6,30,8,221,217,65,9,179,229,39,2,0,243,24,70,7,209,10,29,3,
209,237,67,250,196,11,74,253,6,202,17,69,194,214,52,51,233,196,245,54,10,220,34,207,248,243,233,50,28,233,
203,251,40,36,239,246,32,244,200,15,216,0,59,245,228,251,1,14,24,0,8,248,244,35,240,33,10,232,20,25,
1,252,33,7,12,206,227,77,246,209,6,18,25,11,235,223,23,218,236,5,11,216,231,0,48,237,249,252,17,37,
226,181,23,68,219,10,16,241,6,1,17,19,248,249,247,1,19,232,205,39,48,235,247,255,253,22,220,236,44,38,
249,236,236,19,2,243,0,19,255,29,254,248,17,45,239,247,60,21,216,231,60,12,222,40,37,215,236,237,9,34,
245,220,4,205,227,0,226,209,184,204,193,137,190,251,22,29,18,28,36,86,82,53,51,56,60,18,38,16,0,86,
69,246,207,20,57,233,202,1,36,253,208,196,245,12,232,193,0,28,214,187,0,252,196,211,249,252,243,240,230,43,
77,2,213,244,68,8,227,243,6,48,233,211,253,65,27,212,249,58,32,224,236,41,47,29,10,253,16,20,238,248,
0,19,5,239,6,243,242,20,221,232,14,28,12,206,247,252,210,247,241,0,26,252,233,24,9,14,15,8,7,4,
41,7,193,12,77,30,21,228,241,13,237,217,254,5,227,224,210,9,20,226,214,224,30,11,227,234,6,18,255,8,
15,21,243,19,43,23,26,240,46,27,0,30,0,7,14,253,234,5,27,242,242,6,8,246,228,252,2,15,1,245,
239,13,254,240,252,0,2,236,235,249,243,0,231,227,14,25,230,238,11,244,253,15,19,16,18,5,8,240,249,14,
225,7,41,250,231,9,25,7,7,12,6,20,0,232,0,3,255,3,19,21,0,244,255,27,238,231,8,0,250,248,
240,4,18,3,5,14,24,248,247,7,238,234,10,8,1,12,243,247,247,233,8,8,1,255,249,248,241,252,16,245,
245,7,20,240,245,18,10,254,7,6,0,0,249,236,13,21,239,248,9,15,6,0,10,4,10,12,0,246,13,248,
239,253,4,2,246,16,253,238,2,11,252,251,17,16,253,11,7,245,0,2,6,254,251,236,0,6,239,249,0,249,
1,8,242,246,7,254,1,7,252,8,13,252,1,7,21,0,171,8,22,0,3,245,0,3,242,235,252,14,28,16,
241,248,2,4,237,225,245,4,0,242,9,34,7,247,5,28,5,2,239,24,30,4,241,238,7,241,230,247,242,223,
12,10,2,14,249,252,36,35,244,241,18,16,8,230,248,17,22,2,221,238,10,240,218,234,36,56,244,217,249,33,
28,232,253,35,29,3,240,223,254,8,9,253,229,251,6,9,5,4,9,5,18,242,223,2,230,241,14,10,34,35,
245,0,9,14,0,224,229,6,4,6,248,243,14,15,245,204,23,38,4,255,3,18,24,235,255,14,239,3,208,210,
4,37,31,10,241,8,12,11,18,244,253,240,254,251,237,9,30,11,228,245,9,16,230,225,244,5,12,32,51,0,
227,15,30,4,247,247,242,230,249,19,3,248,252,220,222,54,8,218,248,28,45,31,244,247,37,220,2,15,244,244,
17,13,243,232,8,39,177,206,76,250,211,249,16,39,18,251,0,0,42,34,220,244,6,232,238,1,23,54,237,190,
13,20,226,242,2,13,227,246,42,16,9,0,253,23,24,232,249,246,235,14,20,247,239,47,2,218,251,17,13,244,
233,229,6,34,250,236,255,18,245,7,6,0,10,32,5,237,6,1,5,18,16,246,221,239,4,244,241,249,13,235,
218,18,33,3,42,20,11,13,232,239,5,30,255,229,1,25,21,200,237,25,225,208,245,7,9,40,23,3,27,44,
231,236,25,245,231,236,246,244,35,16,217,13,18,255,6,25,200,237,44,21,220,250,37,234,16,23,231,229,238,6,
233,44,32,244,254,247,40,38,244,209,247,3,243,226,254,41,26,222,254,21,34,0,185,232,32,40,12,206,215,72,
33,222,6,19,239,254,1,242,1,5,29,14,220,248,35,233,252,210,239,21,234,28,37,230,34,23,242,38,0,5,
248,194,234,24,48,253,192,1,25,255,240,227,13,60,244,198,38,47,38,241,202,19,44,227,207,232,42,15,207,2,
20,17,252,247,242,21,47,7,247,241,232,12,64,238,156,8,35,206,53,14,167,61,65,188,240,38,67,233,208,28,
2,19,13,207,1,253,208,12,243,220,81,37,227,10,232,17,25,12,2,175,19,66,200,207,74,23,222,27,210,226,
40,226,243,87,26,203,243,21,41,10,202,244,0,3,236,247,251,253,34,16,254,7,8,229,236,30,74,7,177,231,
49,233,224,36,255,228,22,251,6,54,178,16,45,213,6,38,212,230,71,26,3,215,232,11,209,219,86,50,193,219,
65,77,218,168,10,44,15,235,0,239,232,68,242,197,35,30,189,4,49,34,214,205,33,71,10,181,223,47,28,249,
23,10,180,2,28,235,44,11,223,222,250,32,20,212,213,47,59,254,248,249,15,221,6,46,244,236,34,236,215,36,
239,215,20,57,211,231,43,226,17,55,3,213,254,20,203,32,38,182,216,103,54,197,18,18,201,243,60,208,240,1,
206,27,61,47,224,196,229,40,81,242,190,238,15,51,25,229,248,216,40,56,175,240,0,4,250,231,81,60,166,182,
75,68,248,176,4,52,237,251,245,34,29,206,220,4,77,205,220,1,58,23,200,238,56,70,198,208,48,35,187,197,
47,50,225,183,43,92,223,232,17,24,232,220,235,24,40,226,5,255,49,241,210,24,21,237,1,251,215,46,32,217,
244,25,18,236,20,221,231,17,38,0,203,29,29,250,229,18,26,254,33,203,249,12,254,238,251,39,243,232,246,19,
7,255,28,214,62,27,169,2,19,24,37,193,224,87,246,247,204,210,94,254,200,246,17,58,248,239,8,27,23,178,
254,71,255,207,220,36,58,239,146,252,123,3,192,252,252,53,8,196,38,27,240,16,231,213,72,34,195,234,236,11,
43,224,1,10,228,50,20,174,251,63,255,253,1,51,1,229,209,251,55,15,195,228,45,37,224,176,27,78,224,232,
11,37,12,1,225,237,255,46,35,216,246,24,1,211,249,241,20,46,233,238,19,26,245,227,248,8,24,227,5,55,
202,15,17,219,23,20,12,211,222,38,70,11,207,205,41,40,219,238,232,255,31,244,196,46,93,220,205,236,75,56,
173,217,56,48,236,189,244,60,18,249,0,209,1,40,229,240,14,234,233,33,14,1,2,16,255,1,31,245,7,228,
245,41,24,242,224,233,228,16,41,247,181,21,26,10,7,230,72,41,204,237,50,248,249,176,189,117,70,167,180,59,
110,240,200,235,19,28,233,207,247,70,40,195,197,76,79,188,203,250,46,9,194,4,37,64,249,211,34,0,245,251,
212,18,15,213,13,9,228,17,75,246,186,21,66,238,216,203,30,94,220,210,33,6,14,18,173,27,65,141,249,74,
13,22,219,240,28,1,21,244,195,29,7,211,38,255,240,62,240,243,79,232,205,251,247,23,241,31,15,205,245,255,
34,5,209,254,12,14,11,236,19,20,9,20,231,7,55,216,215,3,34,232,195,28,246,250,54,226,249,52,226,255,
255,236,30,2,41,40,172,27,63,214,161,14,99,234,203,187,48,91,206,176,27,89,23,211,209,28,25,215,232,67,
59,250,170,8,94,216,172,239,47,50,239,230,227,14,37,194,1,61,42,238,188,10,36,249,3,225,45,53,202,196,
18,101,247,156,231,46,50,232,204,15,27,42,232,176,32,70,240,193,5,50,70,236,184,240,27,23,2,225,7,15,
13,28,226,216,0,35,227,245,5,20,233,236,32,9,18,32,229,250,81,247,162,2,58,254,210,230,22,255,244,249,
243,49,27,204,3,59,22,193,211,67,254,17,1,202,16,61,215,227,51,0,223,203,40,52,169,49,29,192,55,16,
198,252,53,30,207,196,34,26,28,19,211,6,43,226,220,251,24,2,238,247,22,249,7,25,209,46,20,196,27,26,
185,8,30,235,3,42,25,217,2,4,5,3,252,226,5,55,222,193,50,41,4,211,208,24,74,247,135,16,112,255,
175,9,75,43,192,198,101,31,158,227,39,43,225,237,249,26,37,225,166,23,66,216,220,30,32,0,2,48,248,13,
40,199,202,71,246,198,24,19,235,227,10,34,25,219,210,208,63,35,228,21,245,16,48,26,207,7,34,212,0,20,
236,2,10,218,233,27,3,223,242,34,19,14,240,230,20,24,4,4,14,245,250,15,2,233,2,25,208,253,62,224,
232,11,221,35,51,197,234,51,214,0,245,43,65,154,21,68,221,23,251,237,26,237,240,39,209,221,13,242,67,29,
201,225,30,37,233,223,250,79,242,192,33,8,24,7,215,255,57,242,213,20,241,25,247,219,42,0,254,233,214,30,
43,248,218,42,19,218,249,33,22,0,210,27,16,213,30,5,208,11,250,14,67,223,194,42,255,220,29,226,1,76,
255,178,32,74,245,207,219,17,83,238,176,246,47,42,230,194,5,58,29,213,190,39,107,231,131,39,113,240,141,2,
84,15,223,193,32,59,245,218,250,41,33,232,181,48,24,217,228,237,74,48,174,245,52,0,247,233,249,73,246,203,
38,7,249,21,249,211,1,44,230,227,10,254,4,254,26,245,228,9,43,4,217,3,64,251,234,22,254,4,236,237,
20,249,212,19,0,226,55,236,196,53,44,209,248,29,9,24,252,9,19,0,236,231,244,33,1,221,25,240,233,17,
246,236,3,25,15,4,237,2,38,254,249,12,255,6,231,250,37,242,253,12,209,237,42,49,204,224,30,3,246,255,
30,233,239,17,17,17,0,245,9,12,3,230,2,251,3,8,221,4,55,202,0,23,230,59,201,206,97,33,198,227,
18,45,1,213,17,38,228,202,21,42,232,241,8,5,28,20,213,229,40,17,228,251,12,231,19,11,236,6,35,10,
198,251,47,247,232,23,4,238,27,2,225,10,20,223,250,60,239,209,12,3,230,61,30,157,18,58,251,244,218,32,
28,211,16,31,235,20,6,209,7,239,0,34,221,238,51,4,225,23,7,248,7,3,244,15,13,248,12,0,22,238,
215,231,21,14,232,227,33,53,197,248,59,241,241,40,10,247,0,26,13,186,13,30,189,21,9,197,55,31,237,237,
225,49,16,213,31,18,240,19,236,253,59,252,181,243,71,14,187,237,40,28,248,236,2,6,248,12,6,230,16,10,
228,4,18,251,7,32,248,202,21,41,1,234,244,22,235,249,21,246,10,3,239,239,23,32,193,212,70,42,222,253,
17,23,237,225,18,24,24,204,227,62,20,197,234,25,24,12,224,250,18,249,8,231,255,52,240,225,9,21,24,235,
220,31,44,212,227,37,24,243,0,2,226,245,4,238,25,38,233,227,17,254,16,13,226,12,29,243,221,36,47,208,
233,17,18,0,234,250,1,18,3,221,0,25,2,230,252,19,24,10,234,2,46,236,218,9,232,54,23,179,4,48,
245,253,232,0,44,245,224,7,253,15,5,207,28,73,226,239,245,6,55,224,205,33,9,10,226,232,36,234,20,32,
221,245,22,236,250,41,248,230,32,20,227,231,16,46,238,215,21,10,10,0,228,230,50,10,218,5,0,254,11,0,
242,21,26,215,222,84,47,185,232,28,15,246,243,252,217,14,25,244,236,29,39,192,8,59,247,243,246,20,6,228,
250,39,227,250,26,246,21,226,224,22,24,3,226,231,50,21,217,252,32,16,243,228,23,56,201,201,36,14,23,248,
213,31,14,243,3,218,12,41,238,224,22,12,10,243,233,36,13,244,252,237,26,27,219,240,25,9,248,235,247,17,
12,238,246,27,10,242,246,6,22,239,6,28,236,234,1,36,11,219,248,26,245,2,4,225,19,6,252,243,0,9,
33,233,217,76,11,201,255,39,240,245,245,22,10,228,16,251,253,27,231,219,54,0,229,7,18,11,233,249,14,20,
247,230,18,6,10,245,220,43,0,229,5,16,18,244,240,240,21,27,222,254,14,244,10,17,242,253,17,3,0,239,
1,9,246,236,16,15,253,0,233,30,19,235,246,248,28,3,220,7,6,26,0,211,21,32,249,236,247,22,14,241,
244,251,22,250,244,14,252,247,5,1,14,1,238,24,4,236,5,10,243,0,153,7,51,0,12,9,4,3,255,18,
20,238,7,32,4,241,4,14,2,0,26,2,233,1,17,25,12,237,252,34,14,245,252,5,24,12,3,237,251,36,
2,233,0,24,13,237,246,21,9,7,3,249,17,13,251,9,9,10,11,241,12,33,235,234,33,26,234,253,23,6,
254,2,11,6,6,16,13,249,12,22,0,8,9,249,1,11,4,255,12,11,2,255,5,32,11,244,16,29,4,244,
11,23,244,0,36,3,247,1,251,3,40,16,228,0,28,16,251,251,13,22,9,0,238,5,35,2,253,4,2,11,
8,236,245,23,27,251,246,254,10,13,7,234,10,55,243,220,4,13,21,20,232,233,24,22,252,242,12,24,250,245,
255,8,12,8,248,6,25,13,233,251,35,27,239,245,15,26,0,247,13,12,3,3,250,253,7,15,3,254,13,250,
235,14,14,0,25,230,252,45,243,0,29,3,0,255,12,5,252,251,28,22,235,4,21,250,10,6,253,20,19,254,
253,24,22,251,0,11,7,1,0,6,250,0,33,3,236,253,16,16,252,249,3,7,21,8,242,14,25,239,14,13,
232,5,17,20,8,241,245,28,8,246,17,5,3,5,246,252,14,20,10,221,16,57,238,239,3,12,26,240,253,1,
248,31,4,229,25,17,249,252,21,22,241,253,18,3,255,0,251,27,6,217,19,7,244,22,245,247,12,8,254,19,
6,246,10,11,8,0,234,4,27,2,254,244,13,48,1,233,3,25,5,249,1,35,6,1,7,237,24,39,249,231,
22,27,242,247,17,7,11,31,234,251,22,9,20,244,250,32,247,5,21,0,21,247,246,25,5,2,25,11,243,20,
13,246,23,253,6,29,253,4,17,1,10,253,250,19,5,255,0,250,21,35,233,243,32,37,254,235,13,19,0,0,
255,19,255,247,22,4,250,13,249,245,31,2,250,2,254,0,38,29,231,248,32,13,241,6,6,238,20,229,227,58,
16,212,253,27,12,230,253,34,20,1,240,246,7,26,9,244,252,253,249,6,4,10,0,13,15,5,254,248,30,48,
225,220,42,13,252,237,215,31,68,245,218,13,55,23,197,244,52,41,253,232,2,28,17,242,0,17,255,0,245,10,
43,245,220,21,59,237,223,31,38,4,244,232,19,33,2,248,243,28,20,253,252,242,37,19,214,13,24,0,12,7,
239,14,27,229,250,24,7,1,241,255,33,5,233,247,40,36,245,236,2,36,17,240,251,251,14,30,240,228,21,15,
8,8,228,5,43,248,253,22,19,249,238,7,28,18,222,252,21,15,4,241,238,22,19,244,248,11,3,238,43,29,
236,0,17,43,7,227,18,16,6,21,227,231,31,25,244,245,244,24,21,235,0,29,2,3,18,236,252,40,0,241,
9,255,31,11,214,6,27,4,248,243,246,39,9,229,8,21,9,14,244,232,30,32,248,239,3,13,239,11,16,233,
11,35,250,244,24,18,235,8,30,10,241,250,32,1,255,20,244,249,28,19,247,0,10,3,18,22,218,7,42,249,
5,13,244,0,247,5,31,255,251,3,5,4,10,0,3,31,242,241,13,28,6,236,21,45,250,235,12,21,15,246,
6,24,251,244,254,23,13,226,254,41,239,0,26,235,7,29,255,233,229,49,22,218,10,10,2,25,254,228,14,25,
243,250,6,1,9,251,250,32,255,247,31,245,242,20,10,246,30,27,222,236,46,24,209,4,30,249,0,15,236,244,
36,29,240,254,35,3,241,10,9,0,222,8,41,251,211,7,43,249,252,240,245,46,6,247,5,250,43,250,213,41,
28,233,6,12,38,4,211,22,51,245,233,248,29,41,249,228,0,59,36,217,239,31,20,27,222,215,62,2,211,250,
37,21,243,238,2,26,5,3,0,254,3,255,5,251,15,243,254,34,13,246,255,19,24,249,230,3,35,14,244,254,
8,34,13,9,251,218,18,64,222,195,14,26,24,232,235,14,11,8,236,234,56,20,204,21,36,249,8,249,249,25,
237,255,18,240,14,12,230,31,41,252,227,13,29,250,229,12,37,1,235,18,245,235,67,9,227,5,11,243,9,15,
246,9,21,10,248,252,251,41,37,241,248,254,11,37,18,239,5,15,20,10,250,10,6,250,27,2,237,22,0,0,
26,243,1,33,231,9,46,235,245,9,30,30,186,244,60,27,7,219,251,54,24,255,232,20,58,246,195,11,40,18,
2,200,0,60,42,225,219,32,32,4,232,254,5,13,37,225,247,42,255,227,19,10,230,5,26,236,255,19,8,10,
21,242,238,36,3,9,1,243,53,29,200,245,43,246,25,1,188,17,48,233,0,7,240,28,12,233,10,17,0,250,
17,31,237,219,30,38,12,249,237,0,38,249,9,12,224,60,17,164,60,69,186,246,2,12,106,244,132,46,76,41,
222,179,29,40,30,238,186,37,78,238,227,0,40,33,7,250,249,21,27,237,8,47,202,26,57,239,25,236,237,60,
21,231,223,21,81,219,184,42,30,0,25,255,224,15,38,250,232,250,0,32,7,228,22,9,244,2,23,255,230,20,
17,255,249,243,37,42,244,226,0,25,5,245,12,12,242,15,41,228,203,64,67,199,241,34,10,22,238,231,33,13,
250,243,235,40,21,193,10,46,244,242,253,24,40,251,232,244,35,50,223,212,37,47,229,232,14,252,39,22,231,0,
48,2,226,27,35,233,2,24,12,1,209,37,53,221,246,27,10,27,253,252,15,250,2,6,5,50,247,212,26,37,
1,239,244,44,30,236,7,247,30,34,228,242,4,45,0,197,22,59,255,233,254,1,23,24,240,237,47,20,242,236,
32,21,237,35,4,209,13,62,3,229,15,253,10,20,235,2,39,224,255,38,243,8,244,227,73,17,203,11,38,243,
6,2,255,35,246,10,246,242,61,235,206,61,254,232,39,248,246,42,13,226,253,37,13,5,9,237,24,47,227,237,
51,19,232,18,7,238,27,17,235,8,14,228,21,11,236,37,2,243,12,9,8,27,0,231,3,22,253,229,38,1,
221,31,13,251,8,248,17,255,250,32,5,14,30,232,246,50,0,241,23,230,28,24,208,32,55,217,214,74,45,182,
1,59,19,246,233,25,4,6,7,214,40,29,241,252,0,16,21,16,218,14,61,242,245,7,0,43,12,235,10,3,
6,30,240,245,49,243,219,16,66,11,175,2,101,238,236,10,212,50,100,166,173,111,43,204,232,10,50,1,225,11,
20,4,254,243,8,35,235,220,17,22,241,242,34,6,243,6,248,243,44,0,230,6,15,238,0,9,0,35,235,234,
51,249,218,23,11,7,250,223,24,33,7,228,230,58,27,201,15,25,248,31,27,218,212,78,56,189,200,68,66,221,
212,253,34,62,218,221,32,13,6,7,7,8,14,251,6,23,30,210,250,62,19,230,227,29,29,252,245,60,246,173,
65,92,206,232,54,17,230,36,27,194,14,52,208,250,50,244,197,38,59,212,253,12,7,5,249,239,28,10,0,227,
0,70,241,226,27,21,12,225,241,27,18,3,226,7,33,223,1,34,11,7,224,14,56,248,220,33,10,247,247,247,
42,228,208,44,51,239,237,245,22,56,202,245,54,241,1,2,245,43,251,220,18,29,246,232,33,31,236,233,6,57,
5,221,250,0,32,22,200,35,54,217,10,2,233,60,35,211,0,27,26,253,228,0,35,36,254,208,4,81,223,228,
58,252,236,29,231,16,50,212,245,17,33,30,191,245,72,20,237,240,243,43,27,252,3,252,249,18,48,250,247,32,
252,232,42,11,210,39,53,250,196,8,57,250,243,34,242,254,45,230,242,3,30,28,239,232,248,41,15,235,31,233,
233,48,3,234,2,13,20,14,254,10,235,247,40,246,28,241,224,41,18,254,224,6,39,17,244,222,0,47,12,223,
11,33,246,255,0,243,30,32,235,219,35,12,241,38,253,224,30,34,237,223,25,30,252,2,247,27,252,240,45,247,
237,7,17,16,250,222,17,69,230,224,37,7,53,247,198,56,34,215,25,10,238,42,11,238,22,239,31,29,223,12,
1,17,6,240,39,225,238,76,244,216,6,33,32,239,241,46,227,20,52,174,4,61,246,12,249,1,56,233,234,38,
239,12,56,221,215,33,17,252,7,2,9,6,233,251,44,21,222,219,35,42,215,255,7,6,40,0,188,15,76,245,
193,29,25,23,8,182,44,68,240,236,240,53,10,225,18,13,11,247,16,19,2,239,204,71,69,188,229,30,35,0,
2,14,236,15,32,228,249,49,3,218,5,31,2,0,11,23,237,4,46,204,233,66,250,217,22,41,2,225,27,47,
234,252,10,16,32,207,1,42,242,20,254,219,33,33,214,18,53,242,10,6,234,30,19,235,9,42,242,224,32,0,
243,16,251,11,23,244,253,40,252,250,35,247,246,16,251,23,249,239,13,0,0,0,172,10,36,0,2,26,14,253,
249,242,249,12,10,245,245,5,17,11,247,248,3,4,242,243,251,13,38,2,239,229,238,18,32,29,251,215,251,10,
254,22,5,236,0,253,249,4,245,17,37,235,225,25,14,241,235,238,21,50,5,223,245,255,4,21,251,250,15,8,
224,230,4,10,6,25,39,242,232,242,238,21,16,0,249,237,8,23,246,248,2,6,15,248,241,248,246,251,24,41,
19,244,218,239,0,2,23,20,229,0,16,249,252,251,243,248,2,1,17,32,19,246,233,244,16,231,228,23,35,20,
0,20,236,198,228,14,29,248,3,25,26,11,227,236,252,246,5,19,20,252,238,24,15,247,249,243,236,249,14,252,
0,23,15,248,228,10,11,242,244,9,42,21,247,244,220,240,21,0,254,15,14,15,234,224,255,249,249,16,32,43,
13,223,209,247,27,0,248,17,23,230,215,19,42,7,253,240,228,6,255,239,29,31,27,36,223,163,202,26,61,27,
12,10,4,252,222,193,239,45,44,31,40,247,167,198,37,52,11,217,226,43,54,247,244,233,231,235,228,25,94,53,
235,211,190,221,25,43,37,12,245,18,16,205,169,212,34,75,50,27,0,213,227,2,255,248,0,5,6,11,48,25,
221,218,225,242,7,8,9,36,25,249,230,224,4,5,4,8,42,9,216,243,25,29,239,241,17,237,208,240,19,48,
30,242,252,7,251,245,217,201,23,75,51,20,238,222,229,249,240,242,24,28,3,2,250,251,16,248,236,237,1,46,
22,246,205,235,25,24,30,254,16,14,209,230,12,235,226,28,40,7,0,19,4,225,223,5,16,251,10,9,4,4,
252,18,252,235,226,238,14,53,51,249,205,211,250,13,5,15,42,31,245,215,219,239,14,42,9,253,23,17,224,212,
246,3,244,20,46,4,227,22,41,230,216,253,241,255,35,11,1,248,241,9,244,248,58,15,206,221,11,58,253,218,
0,0,238,250,69,21,189,239,53,31,242,242,236,199,219,40,71,35,20,8,189,203,19,255,243,1,21,51,43,30,
180,141,25,52,245,4,33,29,0,233,234,239,238,36,57,222,223,44,14,218,222,252,5,30,34,14,10,240,224,222,
229,12,36,20,11,16,247,222,252,26,6,216,214,49,76,18,228,183,215,33,38,237,29,77,232,131,206,37,69,55,
38,242,198,227,251,28,15,217,222,26,27,12,47,253,196,240,29,254,224,1,37,1,245,55,7,193,204,250,40,76,
26,179,232,32,240,244,36,37,239,225,242,7,39,252,200,221,37,51,7,247,253,7,16,1,230,214,234,254,56,71,
17,223,200,215,246,54,47,232,218,27,39,244,197,231,43,49,0,232,2,1,243,251,17,29,2,219,208,1,55,38,
223,170,254,106,48,226,246,252,213,218,6,43,49,0,198,246,25,8,10,252,234,249,24,33,11,192,196,54,52,10,
241,196,237,9,26,55,14,2,10,212,209,24,18,238,247,0,29,16,241,255,0,239,241,251,0,248,40,71,4,241,
8,214,166,242,68,43,255,242,0,8,249,230,231,3,41,66,10,218,210,230,244,253,60,68,237,208,249,2,243,251,
255,28,37,254,226,5,17,220,218,14,29,13,15,12,241,246,12,243,227,6,14,248,36,15,217,248,250,254,34,39,
245,223,224,216,8,87,68,234,233,227,222,227,244,239,9,94,46,27,18,171,146,239,30,26,60,80,5,182,198,244,
42,24,219,249,45,42,224,218,18,253,227,251,17,21,244,238,36,25,241,10,28,237,211,206,237,61,79,255,230,20,
235,201,232,25,49,253,222,17,0,218,20,39,12,251,227,18,23,216,219,12,11,67,18,211,4,234,234,11,9,248,
241,0,19,15,0,10,8,243,240,249,29,5,242,8,252,240,23,7,219,254,34,254,242,31,14,221,233,230,235,25,
61,37,250,12,245,196,221,0,35,38,3,243,220,254,56,30,217,225,2,5,230,238,66,41,220,7,236,202,28,43,
239,16,23,224,227,38,26,202,217,22,34,23,254,250,255,229,241,31,20,250,12,251,228,241,235,16,52,252,254,2,
8,11,218,199,25,79,0,192,251,34,13,0,3,13,241,221,215,12,39,31,63,246,171,222,31,21,19,236,241,33,
0,217,37,5,209,247,18,75,29,200,189,18,23,204,8,76,54,227,203,14,7,189,244,58,0,3,67,32,196,190,
202,223,37,114,93,19,173,159,193,3,78,75,10,223,254,237,231,237,6,35,251,2,43,251,214,234,20,27,11,252,
221,246,252,250,42,64,0,205,239,248,237,33,27,216,235,18,10,0,32,10,228,7,16,250,226,244,8,236,0,44,
13,1,54,21,170,178,226,19,73,73,28,211,209,253,11,227,189,25,95,39,248,245,218,223,244,252,10,42,38,14,
246,190,215,6,12,53,73,8,207,212,229,223,230,63,89,22,231,229,211,197,254,42,63,34,8,0,223,212,228,245,
21,49,51,240,196,239,15,20,247,2,7,245,240,18,32,0,245,5,5,224,237,26,7,245,16,25,0,222,233,13,
33,244,244,1,6,248,239,23,24,239,14,24,227,225,10,250,251,32,50,244,217,247,239,238,2,43,50,20,227,207,
193,252,26,36,37,38,24,243,197,208,246,232,21,94,64,211,187,0,20,245,209,24,69,248,238,242,238,10,241,255,
37,55,251,181,244,11,32,39,243,226,233,20,9,223,254,29,5,253,12,20,11,223,197,244,22,64,66,210,187,1,
27,21,0,254,252,248,248,19,250,185,5,106,55,207,205,237,229,2,32,9,5,35,32,232,218,23,230,182,0,67,
73,19,233,212,202,20,27,225,249,38,24,232,252,54,23,216,208,234,255,10,38,6,239,38,21,222,223,2,6,244,
16,61,3,198,242,23,255,221,4,52,10,218,218,31,60,255,231,226,235,16,255,237,38,65,0,204,233,255,6,19,
19,253,252,9,211,211,1,27,54,50,1,199,215,14,13,252,7,24,27,229,214,27,21,232,239,13,11,245,250,14,
23,5,5,249,220,224,255,42,44,0,242,245,232,251,25,23,243,209,237,31,59,42,254,222,205,219,254,25,44,10,
230,13,30,214,214,26,35,15,241,236,250,25,13,224,249,31,13,6,225,223,27,31,225,249,42,234,255,1,233,0,
20,23,11,248,227,236,4,26,23,240,253,20,251,248,234,236,41,60,242,220,232,235,249,31,30,247,252,20,235,211,
17,48,8,231,31,16,225,238,250,3,229,12,75,6,199,227,7,11,25,17,231,212,247,70,22,226,18,6,201,228,
42,55,243,210,10,41,242,235,16,0,220,215,16,69,24,251,246,235,220,252,27,15,243,2,29,25,254,219,221,247,
11,6,5,53,45,229,180,232,56,10,218,1,30,8,242,248,35,12,204,203,15,61,52,4,216,240,12,246,201,3,
62,5,232,18,38,241,187,228,21,21,46,33,217,227,38,2,215,255,11,236,0,45,44,240,226,234,241,243,253,56,
27,223,4,255,249,3,255,255,2,235,9,48,245,222,235,247,41,57,17,228,198,231,255,245,10,46,62,1,242,238,
211,224,0,16,24,21,39,31,218,187,223,26,50,255,239,5,248,249,23,17,245,246,31,10,213,234,23,4,229,255,
43,36,228,211,15,33,228,226,30,25,243,11,0,236,14,7,240,241,2,16,249,9,35,9,214,227,10,18,253,232,
12,56,34,228,202,241,250,249,30,22,25,11,205,233,36,3,228,32,35,230,210,252,28,30,5,207,236,46,31,236,
221,24,29,220,231,40,15,212,4,37,3,228,0,0,241,8,31,0,237,8,16,248,248,8,2,245,208,0,70,13,
234,7,7,219,223,11,20,10,19,5,5,18,5,207,218,14,1,5,21,37,34,223,209,237,233,11,28,23,34,26,
223,218,241,239,3,32,37,16,241,235,246,232,243,5,22,32,23,254,228,228,234,21,29,22,254,236,242,7,7,0,
251,253,236,243,39,48,248,222,252,4,247,245,254,8,23,20,5,229,242,23,20,231,204,222,44,87,26,217,210,250,
12,249,253,17,23,249,236,2,16,11,239,221,3,35,24,16,219,207,19,32,23,245,206,20,47,194,209,52,71,21,
212,235,5,241,231,3,2,7,42,32,13,244,182,197,255,42,70,54,253,210,212,219,0,24,29,43,0,250,7,199,
217,19,14,13,30,44,5,200,198,229,15,60,71,23,206,194,223,247,31,54,26,238,244,11,3,202,235,41,26,255,
23,0,206,216,255,37,33,12,0,252,255,231,224,10,40,27,5,231,232,254,243,248,1,26,46,16,236,223,200,7,
66,14,228,234,2,34,17,239,244,248,0,1,246,15,30,3,232,3,0,241,250,255,12,255,253,7,250,11,43,2,
224,245,236,244,21,12,255,10,10,2,1,243,236,230,0,43,44,2,214,231,11,28,254,235,5,3,252,3,7,0,
4,6,233,245,29,14,233,239,7,26,31,0,235,238,235,238,232,15,99,59,218,209,236,244,231,208,20,95,80,226,
174,233,18,15,3,249,9,37,2,234,226,230,7,38,46,254,200,224,36,24,207,4,62,20,233,197,243,57,31,224,
217,6,42,13,202,244,70,22,206,233,11,251,6,38,13,216,235,12,14,252,233,6,38,17,228,240,10,8,5,238,
252,11,251,8,25,247,224,3,17,10,251,235,255,39,5,212,0,30,5,231,232,18,43,254,231,243,1,38,14,237,
226,246,14,10,3,8,7,248,252,253,250,251,15,11,243,7,13,247,1,240,239,31,29,243,238,250,244,4,12,13,
13,1,247,253,248,254,242,229,30,60,15,230,231,246,245,251,5,16,253,246,16,25,3,5,240,225,252,19,8,251,
6,17,246,229,21,28,237,224,3,24,249,226,14,33,6,254,30,245,206,242,17,4,245,6,27,11,246,10,251,238,
254,5,252,2,16,0,251,248,6,4,244,9,8,240,252,12,12,255,251,5,4,1,241,234,255,15,29,12,249,1,
248,236,249,245,16,29,12,3,249,224,219,7,51,33,240,241,255,228,254,33,0,248,13,13,0,238,244,242,241,12,
37,29,253,248,243,224,244,5,9,33,25,252,245,239,228,255,13,1,21,21,247,3,11,225,227,2,22,26,253,240,
9,23,242,218,244,22,33,15,246,232,235,252,30,25,0,1,3,249,241,221,234,24,42,26,252,230,247,14,247,226,
3,36,15,243,250,8,253,241,0,5,20,7,238,249,250,249,9,25,10,244,4,7,238,234,6,6,248,10,10,4,
30,1,225,249,3,246,252,0,4,25,9,241,14,11,235,233,244,0,15,24,16,0,251,248,242,250,253,9,255,251,
31,28,238,232,18,254,211,218,34,58,8,1,5,248,232,225,238,6,32,32,37,8,215,222,249,239,254,34,31,16,
2,242,215,231,14,17,10,26,14,227,235,1,2,252,14,10,249,16,21,241,216,252,4,1,25,37,9,220,223,244,
6,24,25,6,217,226,29,42,7,235,231,247,20,27,6,241,221,240,17,36,39,5,208,211,15,12,255,22,22,0,
230,242,8,3,255,255,11,7,254,0,3,6,247,227,6,42,0,236,246,2,3,5,12,4,250,240,250,247,0,23,
16,254,4,10,237,246,8,251,252,3,7,9,11,5,236,226,1,22,9,8,3,239,251,14,249,247,13,250,247,25,
8,242,11,13,245,240,2,236,255,29,20,237,228,19,26,0,245,231,240,24,25,3,7,240,226,249,4,24,44,11,
227,218,234,16,9,6,21,1,248,6,5,255,234,228,253,30,38,9,247,238,244,246,252,16,24,250,234,0,3,252,
21,19,1,243,229,249,21,19,244,236,5,16,4,0,13,6,235,229,251,17,27,4,237,242,11,24,14,249,219,216,
5,59,40,242,222,240,255,10,16,12,0,235,231,249,21,34,9,247,236,255,16,9,252,231,237,251,25,35,16,239,
224,2,2,239,11,30,6,242,255,13,6,227,230,16,20,20,5,232,1,4,233,248,13,13,24,12,234,241,6,242,
226,22,48,11,242,254,248,238,236,0,22,39,10,231,235,0,249,245,13,24,19,246,253,253,243,252,244,241,21,55,
19,229,225,232,255,12,18,13,8,5,243,232,1,17,3,239,0,18,7,250,255,6,245,240,3,33,25,239,222,242,
9,18,10,5,4,245,235,249,9,19,11,255,252,247,2,7,243,228,0,39,29,250,242,0,247,236,254,23,169,9,
63,0,14,9,244,250,10,1,244,254,255,8,16,250,252,7,7,255,245,249,252,1,5,17,18,248,234,253,2,255,
8,14,0,247,0,5,10,252,239,252,11,17,255,240,246,8,15,250,3,6,252,241,251,11,9,12,10,249,243,251,
255,255,254,12,16,249,241,242,5,16,4,255,2,1,246,252,1,249,0,9,10,4,251,253,247,243,9,17,1,255,
6,4,247,255,3,255,16,5,0,255,240,6,12,248,241,4,21,8,255,245,243,254,1,1,253,3,13,6,252,247,
233,7,8,246,1,13,9,2,255,234,243,15,21,9,3,4,239,231,254,24,17,4,254,9,2,233,244,5,12,3,
9,11,251,244,250,249,4,10,254,252,8,11,246,241,247,7,20,8,249,238,244,18,31,250,232,254,12,5,253,249,
0,8,1,4,1,241,250,13,0,245,7,26,5,241,245,242,249,12,26,15,253,251,3,248,230,251,18,17,6,1,
254,244,254,250,234,16,35,255,241,250,18,4,231,252,27,12,251,1,2,243,243,7,10,7,7,247,227,247,15,20,
15,240,228,251,15,12,13,243,243,12,245,241,6,12,9,0,10,1,234,251,14,2,1,24,14,251,231,237,16,25,
10,255,250,245,254,1,255,4,12,7,243,244,255,4,254,247,0,16,4,234,226,8,35,18,244,231,249,7,243,251,
34,41,248,212,245,16,14,250,3,31,16,222,227,12,39,17,241,247,0,250,255,7,12,5,0,245,244,249,0,249,
3,36,18,228,231,248,246,10,19,0,8,254,230,250,5,12,14,254,0,255,0,3,250,0,254,0,5,7,10,10,
246,247,1,9,9,246,244,1,14,19,14,233,236,8,4,254,252,252,12,19,4,251,248,245,253,249,234,4,34,27,
5,222,237,251,240,17,21,9,253,233,238,4,22,8,0,0,14,3,226,238,25,27,5,8,14,246,216,247,28,22,
250,0,3,245,244,239,2,21,9,253,5,249,239,248,254,13,6,3,250,2,17,7,241,238,0,0,23,17,245,233,
11,39,247,216,242,12,23,251,252,11,28,13,230,219,229,16,42,18,5,248,243,244,248,242,245,30,36,6,238,227,
241,12,19,249,253,22,15,248,247,239,246,15,19,2,254,13,1,232,238,7,15,13,8,4,254,234,233,0,14,22,
8,235,247,5,5,8,248,246,8,12,255,249,253,240,2,24,12,3,8,5,227,220,0,25,25,250,7,22,245,245,
240,228,6,16,9,34,18,233,242,239,242,16,24,247,255,8,1,247,238,255,254,6,27,4,247,239,3,11,247,3,
8,3,0,247,247,9,22,251,248,1,2,8,249,226,7,41,255,2,18,249,236,230,250,15,16,7,11,5,244,243,
239,233,6,49,15,234,252,4,237,230,9,32,25,8,239,242,241,243,0,21,23,18,0,240,245,4,242,241,16,23,
14,255,10,240,221,3,24,19,253,233,252,18,7,247,237,13,20,242,231,1,12,253,13,17,255,239,0,18,246,225,
3,24,7,12,10,228,236,250,24,22,242,251,254,246,25,12,232,8,10,251,250,251,8,13,240,252,17,249,0,27,
16,230,201,250,44,22,228,0,38,4,222,240,14,9,255,255,34,12,209,215,30,35,237,3,27,7,248,241,229,244,
17,19,1,252,11,1,221,241,24,21,247,246,15,253,232,7,31,243,220,9,57,32,226,204,254,15,241,31,40,245,
241,248,5,11,233,228,27,52,254,229,2,14,233,225,251,29,47,254,223,240,250,250,249,14,16,1,0,248,249,13,
247,249,243,245,28,64,6,193,252,36,246,232,5,25,5,254,11,14,245,241,239,254,19,7,18,1,224,7,7,249,
255,248,0,16,7,247,250,246,242,6,17,15,255,233,232,24,32,242,3,8,246,248,7,4,252,15,0,232,252,10,
2,244,24,52,0,217,231,3,7,240,254,18,35,9,246,233,223,0,2,5,25,16,20,249,211,230,13,15,11,12,
13,254,243,245,234,5,29,3,243,12,34,240,196,216,15,67,51,8,226,236,247,221,236,24,47,37,251,235,238,2,
246,217,248,41,43,2,250,23,250,203,208,255,50,47,20,2,225,226,225,249,25,18,15,15,2,235,233,12,21,1,
237,9,14,3,241,233,252,236,27,95,248,183,241,10,238,241,35,36,2,249,245,225,255,28,255,240,7,33,0,226,
241,19,17,8,248,254,247,242,20,11,245,249,11,33,248,219,228,7,39,23,245,2,19,255,224,207,8,42,24,255,
17,20,213,192,221,10,47,61,49,1,211,184,217,12,35,30,27,30,253,203,198,251,42,30,4,254,251,250,238,244,
11,21,24,13,237,241,254,4,5,252,21,11,0,252,241,9,5,243,5,20,228,235,31,21,236,3,13,211,225,9,
36,35,9,243,207,223,14,29,11,3,9,243,247,244,246,16,5,2,13,254,9,11,235,236,25,23,255,242,253,25,
20,231,244,26,252,239,254,24,48,247,197,223,27,17,253,9,248,243,28,13,222,213,249,22,18,24,4,229,209,0,
48,249,226,9,39,17,248,249,246,3,11,252,234,11,36,5,242,229,14,13,13,6,245,247,8,4,5,8,251,0,
246,245,12,9,0,10,251,240,2,0,224,221,21,42,21,12,242,191,221,21,26,16,3,29,10,223,234,1,14,12,
5,20,0,230,5,5,243,6,32,7,240,249,244,253,21,31,4,230,249,6,226,0,18,16,247,224,1,14,241,239,
5,28,21,1,240,222,251,39,26,243,226,1,9,21,241,238,17,16,13,8,6,236,213,17,39,255,253,7,3,0,
238,232,246,20,40,18,2,227,198,241,26,10,13,13,6,252,253,243,247,244,14,15,247,21,36,219,204,1,41,38,
231,252,41,246,179,215,46,71,24,1,230,232,249,242,246,19,40,23,244,234,253,251,230,233,15,53,31,238,233,222,
236,14,33,33,0,228,228,2,14,22,0,238,3,21,12,228,235,3,0,3,33,36,227,210,244,5,16,40,21,235,
246,3,239,233,255,14,0,14,26,18,239,236,240,235,2,37,12,249,250,25,253,211,239,12,55,51,249,202,175,5,
70,26,239,17,33,223,190,248,46,31,244,246,245,247,19,4,0,0,241,4,4,253,10,248,221,15,53,12,239,238,
227,244,252,18,32,28,14,237,205,225,21,37,5,245,33,16,205,230,24,25,16,252,4,21,238,194,18,77,20,238,
222,212,215,239,26,74,58,9,238,175,172,232,49,91,42,222,214,3,10,212,195,33,125,42,184,213,255,248,19,4,
254,22,47,38,190,183,34,35,236,242,46,36,241,227,237,3,6,10,4,250,5,10,242,238,255,8,3,246,244,1,
255,12,39,252,201,243,21,22,7,241,244,0,19,9,234,237,27,38,6,221,222,13,7,22,14,235,16,46,12,228,
209,237,4,20,50,246,234,28,0,198,225,33,47,12,238,248,252,242,241,242,253,44,21,245,7,245,224,203,0,71,
52,3,237,228,3,3,245,239,20,35,3,3,219,215,38,48,255,0,248,229,234,249,4,46,48,2,215,211,221,246,
30,37,32,20,253,206,208,3,28,10,249,15,38,234,236,0,245,254,249,13,22,32,25,224,214,8,13,237,250,25,
32,5,236,237,247,15,9,14,0,221,251,16,1,0,10,11,248,238,240,22,5,234,251,14,41,0,217,6,8,244,
233,7,20,13,7,231,0,26,9,239,254,8,252,249,248,6,25,36,253,215,228,0,16,3,25,7,9,5,223,232,
247,2,13,28,11,237,246,22,0,210,225,20,51,36,0,231,253,248,216,222,16,46,51,23,241,224,241,240,234,5,
26,40,10,252,244,233,240,233,246,26,61,50,237,190,208,2,27,28,39,3,230,255,242,252,40,24,223,191,3,50,
27,222,248,47,15,227,211,236,255,0,38,45,9,2,209,192,250,30,34,43,50,234,184,192,253,56,22,16,42,27,
233,182,208,20,28,9,15,59,12,203,194,226,4,49,61,7,234,242,245,220,231,15,25,66,28,214,242,254,211,225,
49,55,27,250,243,225,191,0,42,15,57,46,207,182,230,250,14,47,42,4,229,228,229,230,10,26,27,15,255,249,
241,211,238,46,50,4,7,4,220,220,3,46,18,255,26,244,195,3,31,10,36,16,197,193,20,58,28,233,240,248,
11,251,191,7,77,31,206,235,13,0,243,240,21,31,3,241,250,227,237,28,36,20,238,216,240,36,11,255,37,249,
221,218,2,40,39,16,248,223,234,11,19,255,3,251,246,12,1,226,25,21,220,12,26,1,244,244,250,11,14,0,
250,249,1,13,227,242,17,8,5,243,0,11,255,0,2,228,255,49,4,224,255,254,0,14,7,18,0,239,238,253,
3,19,19,16,13,235,215,244,28,16,242,13,29,255,213,227,0,27,24,17,3,249,236,242,13,235,253,50,12,206,
243,2,5,36,37,0,225,215,0,8,242,15,34,29,247,230,0,240,231,3,6,17,45,250,222,230,7,33,254,238,
3,10,9,225,241,33,29,251,219,223,34,56,242,229,12,7,252,248,255,18,22,255,248,228,245,23,23,13,0,232,
235,3,13,255,254,9,248,248,232,254,28,255,252,241,254,16,250,245,247,21,17,253,9,242,234,255,14,13,25,31,
239,226,246,4,5,7,29,16,253,0,235,227,251,31,15,0,7,5,239,231,229,2,29,20,253,225,248,23,239,239,
11,18,18,245,226,2,3,16,20,3,249,250,239,249,13,30,17,245,252,0,250,7,2,244,250,11,10,17,14,0,
240,228,248,251,4,32,28,236,219,12,21,232,233,4,25,25,253,232,244,251,255,7,6,0,9,11,247,235,8,29,
11,255,251,241,252,243,6,25,6,252,0,12,254,231,250,250,5,29,24,249,235,245,227,254,36,24,4,253,2,241,
221,233,24,41,2,253,17,254,232,242,254,6,11,10,5,251,6,10,239,229,248,23,19,250,240,3,14,251,3,249,
240,8,11,7,9,1,228,247,9,5,10,15,15,0,240,225,251,5,13,29,31,18,235,202,228,4,21,30,24,17,
243,225,239,242,236,5,31,16,24,1,222,229,241,7,36,25,238,233,2,11,0,249,249,11,14,0,253,4,5,252,
246,252,16,19,1,249,241,4,1,250,12,0,255,11,11,248,241,251,250,8,21,0,249,3,254,237,243,15,13,0,
249,251,10,0,250,4,250,0,14,4,247,253,2,255,6,21,2,236,254,11,255,238,244,2,11,12,19,23,241,215,
224,6,36,22,0,254,8,7,248,232,247,10,13,10,8,17,9,228,226,253,8,18,14,249,243,11,2,237,0,5,
250,0,3,255,255,3,251,243,255,5,4,7,6,248,254,9,245,247,18,15,2,0,249,4,10,254,6,14,250,247,
5,12,0,0,3,252,0,249,239,255,7,6,7,8,250,239,241,249,6,11,3,8,1,237,249,1,9,6,0,1,
6,0,249,249,1,19,18,255,248,251,246,0,14,15,3,5,5,246,239,248,2,7,5,10,15,253,241,247,247,253,
3,4,10,13,251,238,245,251,5,12,254,4,12,253,250,255,254,253,0,7,7,4,254,250,1,10,3,252,0,9,
3,252,252,255,5,2,4,13,5,247,241,244,0,11,12,0,0,0,152,9,27,0,229,254,18,15,23,19,255,251,
251,2,4,248,244,7,12,0,11,18,11,247,229,228,236,245,5,20,17,12,8,243,231,231,219,223,230,239,2,20,
24,16,12,8,245,211,201,215,222,241,2,11,27,44,35,11,239,211,203,213,234,12,51,49,28,22,15,240,234,244,
242,234,232,251,17,26,8,13,14,234,233,237,229,252,5,7,11,254,0,250,235,248,1,232,216,249,21,21,6,248,
253,0,10,14,3,244,240,249,242,255,7,14,7,7,16,17,9,224,211,244,13,4,18,57,20,253,0,248,219,235,
255,0,7,14,9,255,248,11,28,17,16,15,241,221,213,225,254,8,16,19,27,19,254,241,232,240,248,245,21,31,
10,2,0,255,236,219,233,10,36,7,254,3,16,18,250,223,234,14,19,249,242,3,20,7,233,218,231,237,253,20,
17,22,29,239,215,229,236,249,253,1,250,14,38,10,253,7,6,248,227,224,237,252,16,33,16,8,30,23,5,246,
232,242,245,238,236,9,34,29,0,243,246,6,255,236,238,2,4,252,250,10,22,8,7,13,249,241,1,247,245,1,
252,15,28,19,24,34,16,226,218,239,236,243,24,41,18,13,18,240,211,0,21,234,240,29,19,252,12,8,242,227,
240,16,23,16,10,248,244,242,224,235,10,21,7,22,55,42,241,220,223,212,225,236,249,46,61,32,6,0,216,205,
229,23,56,32,253,4,237,220,243,240,234,7,35,39,12,255,248,243,252,243,236,246,4,253,246,0,248,250,255,1,
16,27,248,211,223,254,13,13,18,14,6,251,248,252,7,245,231,246,16,11,251,2,22,24,11,246,224,241,0,253,
254,1,252,244,6,254,233,252,1,231,248,249,13,45,38,13,5,233,198,218,235,239,21,67,39,14,24,19,241,211,
206,226,246,15,36,48,31,21,255,241,243,248,227,230,2,6,251,14,27,7,225,219,226,221,238,31,33,17,15,16,
1,212,203,215,206,233,28,47,49,46,35,244,228,228,225,221,213,244,18,30,41,19,8,255,254,245,244,250,242,224,
241,2,16,31,44,17,238,226,223,249,17,252,235,0,5,16,35,15,7,225,222,248,0,243,229,3,23,32,33,9,
226,218,239,247,243,12,9,12,30,36,28,245,226,242,231,227,246,0,11,34,27,15,8,9,237,201,200,249,5,5,
33,2,8,61,15,219,217,252,248,228,217,237,15,249,5,34,29,44,20,243,243,179,133,207,22,38,70,100,72,16,
251,197,172,210,225,236,37,90,41,252,254,238,234,222,241,5,3,9,9,18,24,235,172,196,238,29,72,49,0,214,
206,233,234,218,250,32,64,11,238,13,7,217,203,219,234,6,28,61,56,19,12,245,195,183,209,243,16,34,40,25,
10,0,238,218,1,9,229,240,37,34,27,0,0,0,242,227,229,246,1,29,33,24,247,219,231,254,250,0,2,254,
13,19,235,236,0,0,231,236,34,23,23,40,6,237,239,239,222,225,26,60,11,246,251,249,250,249,251,23,34,22,
6,9,242,200,200,226,0,17,14,45,61,75,19,189,182,194,202,231,26,26,60,77,8,239,241,222,204,212,2,53,
37,6,5,1,242,240,246,224,240,22,39,27,0,35,23,247,60,18,198,215,238,237,255,49,57,10,1,5,239,219,
216,208,19,93,53,30,14,226,162,155,209,0,24,77,79,44,22,255,217,170,173,228,29,63,60,68,67,25,222,190,
191,197,229,21,54,40,26,58,43,229,199,248,13,206,219,9,41,82,59,20,14,13,249,188,203,251,245,246,23,30,
241,0,19,16,13,6,0,228,203,220,250,2,26,19,16,17,1,239,232,240,199,198,34,83,51,31,11,200,215,4,
225,206,231,4,30,39,57,55,248,241,13,236,207,211,229,5,35,64,61,50,26,219,180,190,248,253,232,29,37,12,
2,249,182,197,242,241,26,58,54,30,242,207,199,204,225,18,33,31,46,38,21,241,189,170,190,213,13,66,59,25,
241,220,223,214,206,215,248,6,18,4,255,10,238,232,7,236,194,225,13,21,41,22,250,216,220,247,217,192,19,88,
241,251,24,233,214,232,246,229,238,48,64,253,42,57,238,194,221,215,220,220,240,68,54,1,244,208,230,245,211,233,
16,7,236,233,4,14,1,230,205,212,30,47,220,215,38,11,218,216,254,20,238,3,38,48,81,53,231,171,178,250,
23,35,69,50,254,243,5,214,206,253,30,36,33,12,227,228,230,232,212,204,248,247,12,16,16,26,29,220,192,3,
255,242,6,2,213,242,45,32,255,253,0,2,251,249,17,33,36,17,7,252,6,73,57,22,233,225,227,231,251,235,
230,1,37,64,55,250,173,177,193,237,9,56,45,247,249,13,217,206,233,225,237,42,79,50,27,226,197,240,4,23,
14,244,20,33,246,231,223,204,1,105,100,38,246,220,227,211,212,225,243,43,71,65,80,42,221,190,222,217,196,223,
48,80,54,45,23,15,217,147,153,253,92,81,254,16,57,5,203,183,202,225,227,7,10,49,118,75,236,220,229,220,
220,224,7,90,79,26,35,247,193,199,221,11,32,61,56,6,250,243,245,234,213,216,230,25,52,66,61,10,227,192,
185,194,225,241,240,57,96,54,26,254,219,182,199,222,253,16,255,2,37,32,253,249,249,221,226,253,14,29,50,48,
12,194,205,27,23,238,0,38,231,199,30,5,223,16,49,60,37,224,190,208,206,227,249,5,57,57,16,0,227,223,
234,216,241,16,27,31,52,17,223,236,240,201,248,29,247,27,79,11,241,16,25,9,25,16,183,196,9,47,25,252,
5,29,13,247,243,243,219,207,221,9,38,46,18,248,0,253,249,220,241,29,15,17,9,22,27,12,11,233,239,19,
20,254,240,9,49,16,22,26,247,232,2,254,216,16,28,239,249,18,23,231,197,230,233,1,34,10,12,25,7,242,
212,221,251,20,32,32,0,31,11,247,237,225,251,33,15,240,252,22,33,22,239,255,22,34,243,18,24,237,18,219,
231,6,224,3,16,24,26,246,242,207,210,0,56,55,241,228,217,209,245,235,240,250,33,21,23,57,24,227,187,200,
24,37,3,21,16,254,30,15,216,211,217,218,252,50,103,34,189,225,246,235,20,8,214,222,17,51,18,5,230,188,
205,27,68,26,224,230,3,24,31,13,243,224,211,226,3,42,70,55,242,190,185,226,229,225,35,55,43,16,233,15,
24,231,156,200,8,245,0,19,23,13,10,253,11,4,219,233,238,220,228,8,55,45,41,50,22,246,193,162,194,250,
0,7,44,76,34,238,40,39,222,175,160,227,0,11,50,58,35,9,231,191,188,209,234,14,35,58,48,43,2,211,
191,198,206,12,25,27,25,240,244,0,249,253,250,245,37,34,5,252,251,245,236,225,240,17,57,66,251,235,14,233,
193,221,38,51,36,33,56,44,223,185,181,188,211,235,23,44,87,94,8,217,6,238,183,214,3,10,12,44,36,16,
15,253,189,192,9,252,225,248,48,52,239,252,7,5,28,30,213,208,7,220,206,0,52,42,14,249,194,219,29,68,
24,241,247,237,0,7,4,195,212,3,5,59,89,26,229,217,214,212,237,28,89,50,255,245,215,212,233,234,251,6,
13,15,239,204,190,216,253,26,57,75,47,214,212,227,217,245,10,43,18,240,252,8,29,26,25,247,253,11,204,190,
5,14,46,59,77,72,251,164,165,178,220,24,19,23,97,90,25,245,206,160,156,189,227,41,69,92,114,28,191,133,
163,211,6,33,29,59,49,15,1,242,187,201,242,253,11,31,38,248,20,46,255,233,217,220,231,8,9,242,249,28,
54,251,217,253,3,0,13,239,255,38,15,3,248,0,27,24,0,4,11,234,212,226,237,10,43,22,1,254,16,6,
213,181,200,208,3,72,107,54,248,194,188,203,218,235,3,51,79,55,37,240,237,203,175,233,26,51,49,5,234,235,
238,226,6,13,213,242,38,17,9,0,242,30,75,21,218,197,196,235,243,44,90,39,50,32,250,5,246,189,187,240,
234,231,37,70,56,234,201,219,226,11,40,24,254,251,221,216,245,13,20,18,25,234,228,18,248,253,12,21,17,2,
246,214,223,37,32,255,18,35,2,220,0,9,229,32,28,237,225,236,250,11,16,241,235,7,3,251,247,6,237,196,
215,250,7,4,248,52,90,13,187,221,45,246,194,228,19,30,32,48,17,21,12,218,224,6,5,234,242,248,14,43,
34,17,246,194,236,248,251,7,51,14,214,20,31,249,235,212,223,253,21,46,19,227,226,248,15,39,21,1,5,227,
218,255,245,7,10,16,1,2,19,250,242,233,3,255,248,18,252,225,227,0,10,20,45,255,224,243,248,241,224,253,
42,27,17,28,24,227,203,223,0,254,9,16,30,45,8,16,0,212,228,254,14,16,28,9,252,227,224,231,249,25,
55,18,241,227,226,252,249,249,0,4,28,27,255,253,4,249,184,168,238,37,39,50,75,33,204,197,180,202,0,247,
249,56,78,25,233,215,200,187,236,5,247,28,96,107,29,234,216,150,131,193,21,57,71,70,41,8,225,186,176,239,
34,45,26,10,14,243,246,213,192,21,97,87,34,250,204,204,207,224,6,26,21,30,41,6,220,208,222,242,225,2,
59,41,21,5,204,196,198,212,246,5,14,20,15,41,25,243,209,204,236,227,6,72,75,60,254,200,231,18,251,207,
252,55,48,7,225,1,28,236,227,12,44,38,254,239,12,11,238,215,237,12,33,0,250,21,7,13,247,199,208,228,
0,26,12,39,53,9,226,221,232,245,242,243,28,42,29,22,236,224,6,1,222,227,6,10,250,248,3,17,5,234,
234,249,247,237,252,6,254,248,225,5,47,25,6,254,221,226,19,9,238,255,32,33,37,30,238,236,0,228,220,18,
5,246,14,40,22,244,239,239,221,213,218,225,6,45,8,1,46,30,220,200,225,241,252,252,6,28,24,17,7,9,
12,252,222,230,18,1,249,26,0,14,32,26,33,12,229,216,210,228,34,36,31,37,6,244,253,241,240,236,229,8,
29,35,39,19,226,233,17,13,252,241,247,253,250,8,15,2,245,2,9,244,228,234,247,4,10,25,45,22,4,250,
227,201,197,234,0,13,50,41,12,0,231,207,238,252,249,4,32,45,23,19,44,1,220,251,6,4,16,8,7,35,
39,25,11,255,234,237,5,8,0,242,224,245,11,18,22,254,232,227,222,229,255,0,1,254,236,5,44,32,249,219,
217,237,247,254,11,25,37,34,0,231,252,12,234,221,1,26,47,29,253,251,250,254,244,252,15,28,9,8,3,240,
246,251,246,248,255,0,255,251,246,243,240,236,241,244,1,13,6,248,239,225,224,243,250,244,1,14,34,41,17,248,
247,3,0,242,246,7,19,19,10,9,21,25,9,251,254,5,0,3,9,251,242,254,255,1,248,242,9,15,0,250,
242,227,219,237,252,7,0,20,29,248,215,226,235,238,246,3,18,14,4,248,248,250,246,248,248,0,19,18,2,0,
12,11,253,236,250,17,9,251,244,5,20,20,5,5,7,1,251,248,63,10,39,0,13,248,245,253,241,11,3,240,
16,34,30,0,248,250,240,9,254,13,21,14,253,236,234,1,24,0,229,248,4,9,250,0,255,246,251,231,247,0,
3,243,245,244,248,2,248,244,3,12,240,4,0,244,4,34,255,235,252,12,1,9,11,29,26,228,229,241,254,17,
23,0,250,3,249,217,237,3,15,10,0,255,10,225,210,25,39,6,2,255,250,8,4,2,7,39,44,3,223,214,
2,48,25,223,234,14,19,246,206,228,45,36,16,245,236,229,228,248,43,57,13,239,243,243,245,7,29,29,24,245,
228,238,247,14,49,43,227,216,0,34,0,237,12,51,24,212,212,14,10,226,252,28,253,235,235,245,254,250,228,0,
19,241,232,254,1,231,240,249,5,21,18,253,252,236,237,6,23,17,24,3,236,7,9,2,17,14,254,248,2,6,
15,7,249,9,26,251,234,10,41,16,230,227,12,31,252,247,30,48,6,219,241,6,251,1,15,20,11,230,223,252,
10,0,241,249,255,243,236,246,7,1,16,11,241,222,238,14,22,11,5,9,13,2,241,222,6,41,26,249,253,9,
247,230,245,12,28,254,238,248,0,227,246,15,8,249,222,226,244,28,16,254,6,0,250,233,2,8,251,0,17,4,
226,230,7,15,0,229,254,45,15,233,1,42,21,233,247,30,48,19,233,220,24,54,19,6,250,223,226,251,7,30,
22,16,251,227,203,236,20,27,14,244,242,239,250,12,12,0,4,2,255,16,12,247,243,255,13,24,242,220,5,28,
248,210,242,24,14,8,244,242,17,7,231,244,16,27,22,9,238,6,249,226,254,43,30,242,219,233,1,6,7,4,
5,245,245,254,13,249,248,35,247,240,248,0,11,25,36,3,5,6,213,237,33,26,2,241,242,224,246,4,35,4,
241,28,246,206,241,20,31,18,17,244,218,217,248,57,42,226,217,2,19,230,229,24,60,15,225,222,252,245,231,18,
42,18,253,3,250,229,236,10,27,11,243,248,1,239,223,7,37,10,228,235,12,3,237,0,27,24,239,243,249,251,
5,9,48,50,245,220,0,47,25,12,22,26,12,237,231,249,28,1,244,253,11,247,234,243,246,12,25,3,242,233,
2,16,22,254,231,12,27,0,253,30,15,243,237,235,21,44,226,196,241,252,230,239,239,247,7,243,246,8,2,243,
243,254,22,10,240,246,27,0,236,7,23,11,7,235,229,34,53,239,209,255,33,29,8,226,250,36,16,205,216,1,
21,2,2,18,13,242,219,227,14,25,10,251,254,14,250,253,255,15,30,248,237,6,5,233,210,0,59,33,234,245,
3,5,2,15,41,54,254,222,227,236,40,57,26,250,245,249,251,16,17,254,238,247,10,16,246,241,36,16,180,189,
31,27,2,13,245,198,196,15,50,43,248,222,250,239,231,8,45,32,9,4,221,206,221,8,48,30,0,234,249,225,
230,27,67,32,233,232,239,242,17,6,3,37,18,233,204,235,21,6,248,2,30,15,216,205,254,42,25,255,236,246,
253,250,252,26,13,7,18,16,253,227,235,25,25,243,229,31,52,252,229,250,246,243,28,50,254,224,238,25,38,254,
236,255,26,20,216,218,24,38,249,252,248,226,245,242,18,58,36,239,233,241,235,249,252,6,22,35,254,217,197,12,
57,55,24,238,235,231,9,25,11,244,214,251,18,236,178,226,20,255,237,0,8,243,211,219,14,54,43,1,7,246,
227,233,34,87,62,242,204,225,14,27,18,39,45,20,210,195,215,9,53,22,248,18,14,206,189,0,52,56,11,233,
244,246,229,231,238,28,8,204,10,54,248,230,240,231,8,30,17,237,210,247,60,70,0,212,21,38,242,226,26,70,
35,244,231,234,251,5,27,34,26,0,222,225,226,5,76,59,217,168,233,23,1,248,29,53,11,240,213,231,11,21,
6,5,4,240,231,224,228,5,2,238,232,229,244,247,241,242,3,13,9,238,224,255,3,8,24,250,247,20,20,247,
244,255,29,7,214,247,52,32,218,246,15,0,245,246,11,14,0,252,18,241,215,17,58,35,0,6,7,245,228,222,
6,65,60,231,200,235,25,252,242,18,31,6,250,0,9,5,216,1,62,22,1,250,9,27,28,33,32,0,229,243,
248,16,14,15,6,7,249,219,227,249,11,20,4,229,241,7,0,242,254,225,185,253,58,16,216,223,232,244,246,235,
13,40,8,220,201,211,8,55,18,239,241,250,254,2,18,30,22,44,22,217,193,7,70,52,28,248,218,234,238,19,
37,13,254,16,1,215,222,14,28,28,14,248,240,11,0,250,18,18,255,222,241,20,29,252,233,254,7,235,231,21,
38,238,226,238,236,3,25,23,11,231,234,2,1,26,43,22,223,220,241,238,254,19,33,1,234,186,207,34,47,16,
245,3,10,232,204,245,60,48,235,248,16,2,0,16,11,25,37,12,254,250,251,48,53,251,236,9,25,14,247,2,
250,223,172,236,25,38,47,0,174,182,237,5,5,26,47,0,204,190,199,254,72,54,251,221,236,252,18,12,12,25,
23,8,234,231,19,19,239,233,25,30,0,0,21,9,241,212,222,22,45,22,217,228,18,13,237,220,233,18,33,246,
201,221,1,14,2,8,11,228,228,8,20,14,18,24,252,15,21,21,29,15,0,48,74,247,223,35,57,6,18,45,
27,241,237,216,247,7,249,239,252,4,5,241,245,233,226,249,255,252,227,248,25,0,186,237,43,241,226,13,31,238,
178,185,17,51,3,254,25,0,205,212,255,22,39,25,254,244,246,226,254,48,40,19,235,202,225,19,19,23,46,32,
236,169,168,234,51,74,66,25,212,146,199,26,83,74,35,241,196,176,224,32,92,79,12,242,207,205,0,66,111,79,
242,192,199,4,63,82,48,242,227,195,210,12,71,49,251,221,185,208,242,3,34,48,6,205,202,235,15,38,22,4,
228,236,250,226,229,19,34,1,251,15,11,250,212,211,10,48,26,253,0,245,235,1,11,25,11,13,20,249,216,221,
13,58,30,239,201,230,244,0,0,6,251,13,11,228,225,243,29,47,13,252,251,228,223,24,57,15,0,0,2,247,
236,6,22,7,0,251,243,236,238,250,9,37,35,234,207,248,17,5,255,11,1,223,205,235,48,38,8,238,221,236,
5,49,45,1,233,253,8,4,17,41,35,8,246,240,5,35,33,4,23,10,232,230,243,11,28,36,4,250,247,199,
220,4,28,45,15,187,187,11,17,226,240,20,11,235,202,219,238,249,241,41,54,219,207,235,248,15,18,5,34,35,
247,206,247,48,54,4,219,250,18,1,1,12,253,255,18,228,226,39,31,222,244,238,236,5,9,21,42,6,206,208,
234,8,73,103,1,185,201,217,2,51,64,78,42,192,152,226,31,47,65,78,42,179,132,228,36,40,60,44,22,249,
218,185,236,44,32,39,53,16,218,183,226,29,48,38,235,230,10,0,226,247,27,25,253,217,239,3,250,234,239,20,
233,226,2,24,38,6,192,236,31,236,230,9,26,50,10,193,186,238,26,29,19,21,1,226,205,223,250,38,45,27,
251,214,190,235,33,50,37,253,216,212,238,5,23,8,21,18,242,217,207,7,39,38,6,227,246,33,37,252,9,35,
1,211,243,23,42,20,246,8,19,222,199,10,70,34,230,205,224,25,14,226,12,51,245,198,1,37,254,233,254,19,
43,10,208,218,9,31,40,8,223,233,8,240,226,2,57,34,241,3,255,244,9,38,42,18,251,0,255,235,8,30,
4,6,16,254,240,249,11,41,247,227,252,2,2,5,254,14,26,10,228,227,243,11,19,253,243,0,4,238,240,3,
18,255,229,246,246,14,245,214,240,12,8,246,246,253,8,253,250,253,9,28,0,248,255,254,248,16,10,228,247,255,
248,5,255,248,0,249,247,241,238,239,242,2,28,24,7,237,211,226,19,36,33,29,4,251,221,221,17,42,30,0,
252,239,220,5,17,20,13,13,241,226,241,0,7,21,32,35,16,253,254,23,2,253,29,39,16,242,242,24,14,0,
12,19,0,221,225,10,35,15,249,8,7,221,222,3,17,26,8,242,255,251,237,219,1,35,40,243,189,202,235,12,
16,25,33,255,195,183,222,252,51,38,5,0,233,180,184,11,90,100,41,219,208,1,239,230,34,68,46,255,227,201,
220,5,19,47,38,251,201,181,243,23,25,21,21,6,235,202,196,10,58,33,253,240,236,246,18,2,244,9,36,16,
238,243,4,14,24,1,223,4,43,255,221,9,31,4,233,253,33,17,7,52,50,2,230,231,248,1,3,52,62,14,
219,197,250,47,14,234,16,38,245,197,205,240,17,47,44,12,194,183,241,25,44,15,254,255,227,199,229,23,40,46,
6,207,186,213,249,16,41,42,43,235,160,194,27,89,51,243,238,237,213,213,14,72,62,11,240,225,221,3,46,44,
28,0,228,189,213,20,26,32,31,1,229,199,215,11,36,9,248,10,2,238,0,14,20,6,12,8,244,242,9,32,
2,235,2,12,1,254,12,18,0,240,252,241,243,39,33,239,213,246,14,0,247,252,38,22,199,190,241,31,28,244,
237,2,246,214,254,55,27,239,239,13,14,248,8,0,0,11,243,242,245,5,33,249,225,250,20,248,222,22,56,6,
201,218,14,30,7,251,23,34,246,204,233,24,54,34,6,2,246,234,228,245,39,38,6,242,233,240,3,15,23,31,
9,233,243,254,0,2,23,40,26,252,232,244,245,0,37,28,250,236,223,227,251,5,21,49,26,235,202,215,11,39,
19,253,235,249,249,224,227,16,43,14,245,232,239,255,254,11,19,6,238,241,5,12,0,242,245,251,2,15,252,235,
254,14,253,244,27,27,237,235,1,28,12,243,249,6,5,0,0,6,1,11,1,244,1,248,238,2,21,14,5,0,
0,11,252,216,220,26,61,16,244,0,4,232,225,245,32,63,29,240,228,214,228,18,38,32,5,224,223,242,252,247,
28,56,11,219,206,213,251,24,36,36,32,1,219,214,232,10,51,50,21,229,212,239,250,5,38,52,25,232,194,223,
7,20,28,39,18,237,214,236,249,0,30,35,14,230,219,241,251,255,12,21,243,215,234,0,7,254,1,254,248,248,
252,255,251,245,235,255,46,53,3,233,243,249,241,240,0,40,65,29,214,220,255,1,255,39,52,10,231,212,230,15,
43,28,252,245,243,250,8,251,0,26,37,10,233,219,236,14,39,36,5,235,243,252,239,0,34,20,247,240,8,14,
237,241,13,19,1,254,5,253,237,233,0,23,18,252,237,245,4,8,250,255,6,1,232,222,3,40,39,0,229,242,
247,237,248,15,32,24,235,221,238,254,2,244,0,30,14,232,217,232,0,11,18,8,9,1,222,235,11,7,16,23,
249,242,250,246,8,40,9,224,245,19,22,5,0,1,255,253,0,14,12,254,254,17,12,229,232,0,11,10,7,251,
242,246,231,230,8,26,23,5,226,222,252,23,23,7,254,250,4,21,21,23,31,26,0,239,249,13,20,16,18,30,
17,250,0,17,11,247,245,236,0,25,13,235,237,253,249,245,240,238,246,247,250,253,0,0,244,244,239,242,5,13,
254,240,236,253,5,252,251,9,6,235,217,241,11,12,10,15,18,254,234,247,20,10,245,2,22,17,250,242,4,1,
245,231,249,26,26,4,6,9,243,228,245,16,33,19,240,235,4,18,247,235,8,33,11,242,237,251,12,11,8,15,
10,1,254,253,245,255,20,31,18,252,244,253,7,23,29,23,0,239,235,247,17,26,17,3,249,242,229,235,0,17,
13,255,245,246,245,239,242,11,27,12,245,231,241,246,248,10,34,26,246,233,241,254,255,247,22,50,21,234,231,4,
17,12,7,0,248,246,254,10,0,237,252,17,9,247,225,237,13,11,0,1,247,227,222,235,4,25,15,0,238,222,
215,234,3,26,22,0,35,9,17,0,236,5,4,238,4,25,5,241,231,8,35,1,223,21,16,5,243,242,12,32,
16,240,211,207,18,20,252,2,247,8,0,17,23,40,29,243,207,190,244,45,62,5,244,212,237,251,232,235,35,66,
40,247,203,203,3,55,45,26,229,225,254,240,212,243,45,54,35,235,168,203,40,70,46,233,199,3,20,6,0,13,
7,16,214,200,8,46,51,12,187,184,21,72,22,235,231,17,47,16,226,200,1,46,5,214,221,16,43,10,230,249,
27,3,225,5,35,16,8,209,200,9,5,64,80,217,195,243,254,53,18,218,226,5,255,252,240,243,38,54,240,226,
28,3,246,7,9,6,242,194,236,39,51,22,226,238,9,15,234,245,24,29,2,218,194,245,36,49,24,241,225,8,
31,10,6,244,233,234,247,245,25,35,16,255,234,213,10,17,0,255,12,7,3,250,0,254,12,22,235,229,222,251,
47,56,5,247,204,226,1,5,20,17,52,47,208,169,228,13,37,33,43,246,206,208,255,46,13,2,13,5,2,233,
230,5,37,20,243,219,219,8,45,17,8,254,236,215,245,29,56,42,242,215,211,243,252,29,61,48,224,161,201,11,
59,58,32,232,221,220,244,19,46,12,0,241,223,13,36,253,240,13,245,241,248,242,249,23,1,8,20,1,255,255,
0,250,254,253,28,11,244,249,227,230,35,34,1,230,216,1,49,32,241,219,213,10,58,28,9,255,230,244,2,237,
251,18,0,14,16,250,237,225,230,16,32,7,3,12,2,241,231,23,57,12,230,236,247,249,4,239,229,14,8,0,
9,3,21,15,222,243,25,19,17,248,250,255,224,232,22,37,10,245,240,230,4,20,231,239,40,41,252,231,254,13,
4,243,254,26,2,235,217,235,5,18,26,9,2,15,15,238,235,8,33,254,237,250,12,255,217,232,14,12,10,253,
252,15,24,252,238,246,9,9,14,44,11,223,202,229,15,35,39,245,236,231,234,254,43,52,1,175,170,20,70,63,
13,201,11,35,248,242,14,5,35,8,187,181,240,24,40,18,229,23,18,238,242,42,48,31,232,132,203,68,61,5,
236,230,14,31,242,5,12,6,210,206,13,70,39,254,241,235,249,241,232,245,23,51,19,199,200,239,46,34,20,26,
20,246,226,241,0,240,20,45,248,230,241,237,16,24,230,222,2,250,17,26,8,8,252,199,231,41,64,60,5,234,
249,9,218,239,28,246,202,206,228,20,33,3,10,32,7,242,4,242,39,74,16,6,220,191,227,16,39,31,235,179,
189,244,15,64,101,32,195,180,210,26,78,51,41,253,196,212,228,0,53,41,251,232,218,217,254,23,9,26,29,246,
226,248,17,15,2,245,2,19,241,238,13,9,25,252,241,249,251,12,252,1,251,232,248,9,253,11,8,4,6,240,
5,22,21,8,3,244,252,253,248,248,213,228,17,39,18,25,0,242,241,224,235,29,28,30,6,239,3,220,222,9,
37,62,26,215,211,247,17,13,227,246,0,252,251,245,2,54,67,242,197,233,17,10,43,1,199,233,26,19,0,241,
7,23,2,234,225,0,0,251,255,18,43,1,219,238,28,51,34,221,210,238,248,5,19,6,254,1,254,242,9,7,
6,241,238,252,251,11,33,51,22,255,225,201,229,13,27,24,8,238,236,243,240,253,0,18,20,255,1,19,35,13,
230,233,249,255,27,9,251,248,238,220,220,13,63,45,250,230,187,217,45,54,39,254,231,247,17,6,7,34,45,247,
185,174,211,252,21,40,50,24,236,217,227,18,52,57,26,237,221,233,248,9,235,252,28,4,248,221,236,1,11,21,
18,9,1,247,11,34,241,217,235,26,41,3,236,5,4,248,212,194,13,90,59,10,202,206,1,249,0,18,37,28,
249,210,212,5,33,24,37,26,227,220,233,243,14,26,14,251,254,240,214,239,30,41,41,253,222,221,227,15,56,49,
10,245,222,241,245,6,255,218,243,26,19,0,247,238,32,34,243,234,236,22,39,25,4,238,230,243,232,242,9,9,
34,3,236,238,255,254,20,14,10,14,16,6,204,221,11,24,31,255,241,249,248,255,246,0,24,24,3,228,236,0,
250,4,15,14,16,247,232,250,28,21,247,239,2,15,8,236,215,13,31,254,221,240,40,42,244,216,255,40,16,233,
222,10,55,34,220,209,232,253,247,251,53,45,1,229,219,246,32,37,243,240,3,19,255,225,219,13,22,14,5,254,
3,10,238,210,243,30,40,27,16,242,246,227,229,8,18,21,14,237,238,255,241,0,253,9,36,24,230,224,0,31,
35,3,238,249,3,232,222,239,11,34,15,5,249,21,10,241,239,4,30,9,225,232,13,12,246,215,242,28,29,34,
15,255,246,240,230,235,30,35,254,233,235,250,8,7,249,33,39,0,228,231,240,0,245,7,22,23,15,248,218,238,
12,42,28,243,239,231,221,13,32,12,0,8,249,240,231,1,37,23,14,255,224,234,237,0,24,35,251,227,251,17,
2,250,253,14,27,253,226,239,13,9,255,254,24,25,242,230,231,238,10,15,22,254,253,242,10,21,237,0,19,10,
11,5,227,227,13,27,255,228,245,13,18,13,234,230,13,22,254,241,4,28,20,251,235,241,5,2,248,252,252,19,
12,252,251,19,3,236,5,1,252,254,243,242,13,13,249,249,2,17,28,7,246,253,249,235,6,254,5,6,254,252,
6,17,242,248,244,254,39,30,224,215,255,24,27,3,228,255,18,253,229,241,17,14,31,248,234,254,15,252,11,4,
0,10,9,235,213,248,34,31,242,235,242,23,7,238,252,17,3,255,2,14,37,245,220,229,9,34,15,248,244,241,
238,9,36,22,241,228,230,230,18,33,23,3,234,234,22,15,237,250,16,39,21,250,226,229,251,1,15,7,6,0,
238,249,254,227,241,9,33,54,30,216,198,232,11,58,59,26,255,207,199,235,0,26,44,14,234,221,242,247,245,5,
26,40,9,235,224,1,23,19,5,1,0,1,252,251,255,5,25,255,217,224,249,23,16,2,241,233,255,25,10,9,
11,243,3,27,14,254,252,7,225,204,8,46,20,248,214,234,15,3,253,20,21,11,246,227,0,25,28,11,227,206,
247,37,42,4,247,20,240,196,207,24,51,42,8,225,239,244,250,10,24,27,7,229,209,235,15,56,40,8,229,226,
232,244,6,36,12,242,227,242,11,44,29,1,0,237,230,242,6,10,28,10,207,218,11,21,31,28,235,243,254,251,
251,6,32,12,252,226,0,35,249,223,230,253,29,25,243,219,2,22,7,10,245,14,27,246,235,1,0,9,12,242,
239,5,4,254,247,0,10,4,250,250,30,5,220,241,9,26,26,248,242,16,20,231,212,243,15,56,18,232,247,250,
238,250,246,30,32,255,239,232,232,16,26,11,26,11,254,236,226,241,5,1,250,22,18,244,225,0,24,23,19,247,
242,4,0,244,253,2,22,254,223,236,14,14,250,0,24,27,250,214,222,34,58,26,221,203,253,25,19,0,240,0,
11,223,243,249,11,34,252,248,14,4,25,5,223,3,14,20,0,207,227,9,21,28,9,240,243,250,0,248,2,33,
22,231,210,242,37,40,15,0,238,242,6,1,228,251,19,25,255,244,242,245,239,254,15,13,18,6,253,16,7,251,
251,246,254,1,3,251,231,241,1,11,36,31,243,230,13,245,247,10,254,5,26,247,215,242,11,31,28,0,246,0,
239,234,242,7,16,25,0,241,253,12,0,255,250,8,29,253,221,239,16,29,15,228,216,253,25,28,255,247,255,0,
22,249,237,253,8,254,252,14,19,250,251,241,252,0,13,21,5,245,233,5,9,13,12,239,214,233,18,33,29,246,
232,255,31,2,255,3,250,0,252,249,8,11,240,247,0,247,7,4,246,9,28,18,246,218,238,25,29,6,249,244,
238,246,255,10,38,24,241,234,240,249,16,11,20,0,240,223,232,254,33,38,14,248,220,242,12,16,17,255,243,253,
0,15,12,247,1,236,218,255,25,33,27,250,234,239,0,4,242,254,39,44,0,219,206,246,20,7,243,250,30,35,
237,224,255,22,30,8,5,254,5,247,229,215,252,20,28,0,234,250,3,245,245,13,28,52,18,225,224,3,23,1,
254,13,2,229,206,231,13,39,19,10,0,231,236,3,17,31,28,9,247,225,217,237,5,36,37,16,237,222,227,3,
15,31,10,243,246,236,18,31,247,237,6,23,2,237,240,239,5,26,2,255,2,1,13,242,242,253,0,28,29,249,
226,243,2,9,255,11,18,8,242,226,232,11,22,20,13,253,244,233,228,248,15,47,42,243,228,244,252,20,21,0,
10,231,207,254,26,14,254,244,248,24,13,245,224,252,29,24,0,235,2,19,26,249,231,247,17,255,236,253,7,0,
248,0,2,251,0,255,14,29,12,239,238,253,8,27,9,245,237,240,1,8,3,13,5,243,236,1,2,252,4,25,
6,4,255,249,255,239,10,27,254,244,246,241,0,19,4,3,9,247,1,16,240,244,248,250,6,4,13,13,249,239,
255,14,23,9,251,237,246,2,28,11,245,222,243,6,18,4,1,237,1,11,7,251,246,8,29,8,2,253,236,229,
5,25,13,16,245,225,232,1,15,20,7,246,4,245,0,13,1,249,8,14,18,246,211,246,25,31,0,253,249,231,
0,2,7,31,16,249,228,211,241,31,35,16,2,241,241,237,255,27,21,6,243,242,252,3,14,8,1,2,248,234,
2,3,13,7,230,227,14,11,13,19,2,254,2,236,244,21,19,0,255,0,250,241,233,252,18,19,19,7,241,245,
239,233,9,29,28,8,253,241,238,231,242,11,43,27,5,237,223,243,15,14,11,16,0,241,247,0,245,245,245,20,
38,16,243,226,236,10,21,1,247,255,0,22,3,237,0,0,10,15,1,5,248,240,1,4,249,248,255,255,2,3,
2,17,8,251,235,253,24,25,7,236,239,5,254,248,6,0,8,0,246,250,4,9,17,11,245,244,246,247,14,11,
242,238,6,29,30,4,232,245,253,248,0,251,0,24,23,243,220,235,7,37,32,254,238,242,255,1,7,6,8,253,
235,238,7,6,7,12,2,13,248,223,11,40,14,243,240,229,228,5,23,40,44,246,206,221,240,12,28,15,8,3,
0,238,230,0,37,30,251,239,254,2,246,243,246,6,22,12,1,253,246,240,251,7,15,10,4,9,248,246,242,249,
255,6,15,13,7,247,244,253,0,2,16,23,251,231,244,6,9,13,252,239,251,252,252,10,13,8,254,252,243,5,
13,9,2,3,247,245,6,9,0,0,85,11,17,0,226,222,223,227,234,254,34,46,27,14,35,68,75,54,29,12,
1,255,246,244,242,250,3,3,253,225,207,195,187,199,222,243,11,20,11,0,2,16,29,30,20,1,247,242,240,236,
0,43,78,70,35,11,3,8,4,247,229,222,226,225,229,233,244,248,10,23,17,252,241,252,2,1,8,33,47,48,
29,252,243,241,232,211,195,188,208,212,224,252,42,70,84,78,67,44,22,14,242,212,187,179,186,190,180,189,210,228,
242,8,17,21,39,46,37,46,62,84,83,65,51,38,7,228,203,193,188,195,192,196,220,231,0,36,61,42,16,252,
4,6,11,1,243,237,254,31,52,40,9,245,252,8,13,9,13,24,36,42,42,39,40,51,53,22,226,196,200,216,
218,212,229,239,227,222,231,255,0,253,243,243,250,0,1,242,230,242,17,45,31,5,3,30,12,231,208,204,232,251,
239,229,241,19,65,58,35,34,45,44,17,255,245,229,212,164,132,145,179,225,27,43,23,23,42,65,51,36,22,24,
25,22,6,0,253,3,26,20,20,26,16,244,230,225,0,31,27,10,11,7,245,246,245,244,254,11,9,237,228,222,
245,14,19,12,10,5,15,6,243,239,239,250,0,239,207,200,215,240,0,254,1,34,57,41,6,227,208,236,13,29,
250,218,215,248,4,236,229,240,26,45,24,9,0,6,33,42,27,12,17,29,28,27,22,17,18,22,6,228,199,208,
231,250,242,242,241,15,39,40,11,237,242,11,16,251,208,196,240,40,30,247,251,50,82,61,253,219,223,241,254,0,
0,10,30,43,26,250,229,228,227,216,184,192,206,210,220,245,2,34,58,76,80,57,16,248,226,213,202,214,225,231,
238,242,237,247,18,48,40,15,252,231,235,249,2,14,20,20,25,9,227,211,250,46,56,39,23,30,54,43,32,31,
28,21,253,213,202,223,3,15,242,217,239,32,24,241,216,235,16,21,240,228,3,47,44,1,230,239,0,12,254,238,
223,210,231,3,15,0,9,25,9,222,202,212,226,232,223,226,227,234,245,6,10,8,12,20,9,250,231,236,8,25,
21,10,9,3,6,13,26,32,38,33,33,36,23,6,255,0,9,22,28,18,253,232,231,249,2,5,253,11,52,58,
45,14,17,23,42,30,7,6,25,19,254,225,227,5,8,234,217,235,15,27,1,218,200,213,241,233,216,219,207,219,
246,10,251,218,207,223,217,188,182,199,240,245,220,226,19,54,67,56,33,43,31,255,244,250,242,234,239,3,4,233,
239,27,59,39,243,227,248,33,46,3,220,232,19,67,76,44,24,13,16,4,247,243,11,35,28,6,250,11,57,101,
101,74,38,10,16,24,13,249,222,214,226,233,206,199,243,20,8,216,205,245,250,223,229,236,230,231,248,6,8,0,
0,243,226,233,243,236,241,213,176,180,244,36,38,30,24,41,28,15,244,238,4,11,238,200,188,207,228,245,1,3,
250,233,236,3,6,14,24,63,91,77,60,37,23,7,254,7,1,223,196,219,10,8,2,9,54,86,65,7,2,29,
33,13,240,232,0,253,2,241,225,246,16,0,255,229,211,246,244,243,0,245,253,25,26,1,250,4,24,38,255,210,
225,0,248,204,202,233,1,19,44,31,1,0,8,21,0,229,243,255,21,9,250,244,234,247,10,249,210,167,174,202,
221,236,247,11,45,75,61,49,44,64,79,46,2,229,227,246,10,0,253,8,12,17,249,219,231,249,9,11,247,244,
251,8,27,20,11,30,39,35,4,244,235,244,7,29,26,11,5,22,18,20,28,36,38,23,14,14,7,254,244,251,
14,8,237,225,227,223,225,205,199,220,246,249,200,181,221,8,16,237,235,5,28,16,233,221,237,222,235,1,214,193,
222,255,244,241,239,245,237,235,232,234,225,0,28,35,26,12,12,19,24,30,9,231,239,7,3,255,12,34,63,70,
36,27,34,39,5,235,4,42,46,15,1,11,28,24,20,16,2,0,5,11,242,219,233,25,46,21,246,226,244,32,
31,242,225,8,66,45,225,212,250,36,44,6,232,230,17,29,255,234,255,60,85,29,217,207,5,49,33,236,236,18,
33,19,253,223,224,4,7,204,173,210,252,9,247,223,235,250,251,6,248,231,234,236,247,235,226,226,233,246,248,238,
254,255,242,226,213,237,0,249,226,216,220,223,226,238,249,226,216,236,240,224,232,255,32,22,250,244,4,38,54,41,
34,39,48,32,255,233,243,8,33,16,248,255,25,26,27,29,48,55,43,18,11,21,17,0,253,21,48,37,23,20,
36,27,13,10,17,31,8,30,48,20,11,22,48,45,2,4,9,245,232,249,241,204,190,232,31,10,235,243,27,16,
239,239,244,222,221,236,235,219,216,251,10,230,207,216,248,0,226,208,229,253,242,236,221,250,38,32,3,236,224,242,
11,21,11,228,235,248,239,230,220,221,241,5,246,231,248,13,20,18,18,9,18,22,0,252,1,253,36,55,38,15,
239,9,45,27,9,243,253,32,18,4,249,246,34,43,254,242,235,6,7,206,183,210,237,10,250,242,253,11,42,51,
33,24,26,34,27,237,221,243,237,248,3,14,13,1,9,30,6,2,19,4,3,250,250,16,44,30,8,244,249,248,
233,210,208,237,6,238,227,254,38,43,24,12,249,252,253,22,3,216,225,9,27,30,248,237,0,6,255,213,217,247,
11,20,39,32,21,42,63,68,31,239,242,12,2,240,250,0,247,223,213,229,213,210,246,246,211,194,218,254,11,8,
14,17,1,12,10,237,211,214,237,245,233,231,7,1,10,18,27,41,39,43,5,225,223,234,17,18,243,255,12,28,
22,1,254,9,9,247,214,210,250,13,24,22,22,38,38,19,253,254,5,2,6,0,12,29,13,10,18,12,1,7,
0,228,229,226,220,238,0,252,18,42,55,25,31,17,234,246,246,240,230,208,210,11,58,50,8,3,30,36,255,219,
234,247,244,244,233,223,226,14,46,36,224,211,0,29,245,198,219,11,29,28,251,241,246,0,13,9,241,236,252,35,
32,248,244,21,46,14,231,208,215,239,241,218,224,27,55,29,19,27,26,17,2,247,237,232,230,241,4,0,15,30,
12,0,251,10,23,251,207,198,242,32,34,4,0,13,25,19,7,245,244,11,18,4,1,0,6,4,0,6,7,15,
3,239,246,1,249,8,16,9,246,242,248,235,232,226,242,8,33,18,8,10,254,243,243,249,241,239,231,0,8,0,
3,19,1,254,8,4,250,254,248,13,24,19,26,16,16,254,244,5,0,247,248,234,235,255,9,23,10,255,251,241,
248,9,0,4,12,10,15,22,14,5,2,250,246,239,243,243,241,231,230,220,254,11,250,2,19,11,252,240,246,2,
11,8,240,241,237,248,3,255,224,228,247,0,250,237,243,21,40,33,24,25,41,58,41,25,19,255,250,0,11,248,
238,4,0,244,250,245,2,27,16,243,236,250,17,19,13,12,10,2,11,17,248,222,221,4,26,24,238,226,252,4,
0,10,2,3,37,33,31,11,244,253,247,244,239,228,230,236,0,21,8,241,255,10,4,253,244,252,252,6,26,18,
252,255,13,32,13,250,230,249,0,226,199,216,246,254,238,226,227,247,0,246,238,245,13,14,11,0,237,254,12,0,
229,209,223,246,249,247,241,249,255,8,4,6,248,253,10,239,225,248,24,43,15,247,252,6,20,38,2,233,3,41,
38,31,11,0,29,51,50,32,21,19,15,24,20,3,8,24,46,50,30,11,0,237,2,2,235,226,252,29,33,2,
246,246,251,254,243,251,10,5,244,243,232,249,18,6,221,229,238,233,239,252,245,249,3,1,8,16,252,12,44,20,
237,233,244,233,252,4,7,239,218,214,222,236,233,219,224,235,249,5,17,20,13,244,254,8,233,210,214,230,236,241,
0,18,32,30,33,16,11,11,253,246,229,247,25,31,15,16,40,70,50,0,233,226,232,252,7,252,251,15,45,43,
16,2,2,0,0,241,235,242,248,20,13,254,1,0,0,250,226,221,220,212,224,8,25,13,249,255,10,2,245,230,
219,236,22,35,8,249,3,20,15,244,219,212,213,217,237,14,47,60,34,46,52,28,1,1,0,243,251,27,35,28,
32,36,35,36,14,8,10,15,16,22,34,41,54,49,39,35,22,9,244,236,246,0,248,249,246,242,6,17,233,208,
234,240,229,223,229,235,246,249,252,239,226,233,239,218,188,186,211,210,199,206,230,226,213,205,210,225,239,8,22,250,
224,237,2,7,0,5,24,19,15,2,0,248,3,252,0,4,18,36,33,8,14,21,20,23,12,246,236,11,48,62,
32,8,24,50,52,30,17,19,13,20,28,19,16,25,40,36,22,7,4,248,227,234,252,252,250,9,6,255,249,240,
237,246,5,4,238,238,21,38,28,23,15,247,201,203,230,239,244,10,14,17,13,4,250,6,250,235,237,220,213,227,
14,42,31,18,4,1,7,244,233,225,217,208,214,249,23,28,35,21,0,233,218,216,240,16,17,245,250,20,25,51,
55,19,243,232,243,236,225,216,241,4,250,245,2,17,2,236,220,236,245,232,222,238,9,13,7,63,87,38,239,219,
243,6,235,241,11,21,32,34,45,72,46,1,5,9,0,240,235,235,233,248,35,63,48,13,253,3,253,223,205,222,
233,254,20,11,13,39,64,34,236,214,245,255,249,238,234,247,8,19,4,222,210,215,218,211,201,235,0,5,0,5,
15,17,11,0,238,207,203,238,25,31,21,4,5,43,47,1,214,201,215,235,9,29,29,47,65,31,237,242,10,8,
4,253,252,9,10,13,36,43,34,17,6,252,246,242,15,37,46,46,41,37,14,0,6,6,249,237,236,247,246,247,
252,255,7,3,239,215,203,212,231,226,205,223,13,57,45,7,3,16,250,199,192,231,16,255,219,223,254,19,29,26,
5,248,250,0,249,235,248,14,20,33,24,7,255,5,14,0,231,241,20,6,228,220,3,17,248,222,237,0,0,0,
13,20,4,8,31,23,248,251,17,25,6,252,1,0,250,248,3,5,248,254,18,24,4,240,240,248,238,238,4,22,
8,240,242,0,255,247,245,0,8,18,32,26,5,250,0,1,245,241,24,47,11,225,244,14,24,7,5,11,252,236,
251,8,4,254,255,9,0,247,8,30,20,2,229,223,239,233,224,238,252,16,23,20,251,235,244,239,236,249,252,239,
227,238,7,28,19,251,254,15,8,244,240,243,1,11,17,29,37,34,24,23,31,21,253,249,5,15,12,3,5,22,
29,6,240,233,250,248,239,232,234,240,0,0,0,10,16,1,249,252,2,246,225,223,243,2,16,13,3,2,3,254,
247,243,253,7,12,12,4,241,247,5,7,4,248,239,244,246,250,247,249,8,9,252,244,254,14,19,1,0,1,254,
2,18,19,6,3,254,249,238,244,1,23,10,251,250,4,14,14,10,5,11,11,0,244,241,254,21,27,9,244,242,
247,239,248,251,6,15,4,248,239,235,234,238,249,0,253,5,9,2,0,5,9,7,0,4,255,251,239,230,233,246,
14,21,13,249,3,17,253,238,253,13,251,235,242,16,18,4,12,34,24,5,0,4,250,233,254,26,18,9,11,34,
32,250,243,4,4,254,239,4,19,244,224,243,255,254,251,255,7,13,7,7,7,13,14,19,13,5,3,24,22,250,
239,16,30,251,219,221,249,247,225,238,6,4,249,250,8,8,242,242,249,243,245,2,245,227,231,252,5,251,246,18,
23,250,248,10,30,19,2,2,17,14,4,7,8,4,1,4,255,0,254,254,249,4,0,245,250,246,232,218,234,250,
11,18,27,29,12,242,235,246,0,0,252,7,18,13,15,14,244,239,249,2,253,236,237,255,8,4,9,18,8,253,
253,9,5,248,241,245,255,2,252,241,240,240,242,254,253,240,242,244,239,237,245,3,2,21,21,8,253,253,252,251,
252,11,22,19,4,1,253,8,5,5,21,19,12,21,32,27,30,34,34,27,26,21,11,247,241,255,14,15,12,8,
9,11,9,12,1,237,233,244,253,254,252,9,17,8,255,252,1,0,246,235,240,237,251,3,9,254,249,254,250,250,
238,236,239,237,240,245,246,249,0,7,9,0,239,228,223,220,237,245,238,234,252,21,12,251,241,239,238,244,247,255,
254,20,37,43,28,8,2,5,245,224,237,10,10,250,237,250,2,13,29,24,255,222,233,255,12,7,0,17,29,36,
29,24,11,252,4,8,245,239,252,14,18,13,11,9,8,4,5,10,7,6,22,22,4,0,6,5,1,250,243,231,
229,233,239,243,243,3,27,31,18,14,18,18,6,238,235,247,0,255,9,23,26,9,240,236,229,226,226,226,241,251,
3,10,7,3,255,250,241,233,231,230,240,243,251,7,18,20,23,17,15,14,0,238,247,6,12,6,6,12,18,16,
16,10,8,255,252,8,18,2,235,232,0,8,251,232,242,9,17,1,1,13,21,17,247,251,3,14,8,251,237,245,
2,4,250,240,245,250,249,247,255,11,8,19,16,7,246,236,251,5,0,242,243,4,23,18,3,10,15,16,250,238,
248,0,250,251,253,0,0,0,15,9,76,0,239,0,5,252,8,8,8,14,14,250,7,251,253,8,245,249,0,6,
18,26,22,21,15,12,0,245,240,240,247,5,17,20,27,18,18,5,248,255,248,237,246,0,1,17,25,16,4,6,
2,5,5,5,245,0,9,2,255,4,248,254,14,12,14,8,0,2,5,4,253,233,249,4,11,13,8,11,17,17,
252,238,233,248,247,0,2,3,22,41,18,253,253,230,236,238,228,236,14,27,32,26,9,11,6,247,233,221,226,246,
255,5,17,34,28,21,5,227,226,239,245,236,238,246,7,27,26,10,7,12,12,5,254,236,239,242,244,6,7,7,
16,29,19,7,10,247,235,237,232,235,245,1,6,255,15,7,15,10,253,249,248,235,238,238,237,251,255,253,12,21,
13,17,251,242,243,248,248,245,247,1,6,3,11,2,3,251,249,253,243,3,11,240,244,11,251,10,22,10,18,16,
10,1,238,239,241,240,251,3,8,9,1,2,8,10,0,249,241,242,251,239,236,251,9,9,20,11,15,18,1,238,
224,225,241,246,250,6,24,30,35,17,10,255,254,246,238,248,254,14,14,15,8,18,11,19,2,254,3,0,0,0,
251,14,15,255,9,247,4,5,247,244,241,254,25,23,16,255,255,20,12,12,252,236,0,30,9,0,255,2,15,34,
16,255,255,18,28,13,251,245,14,17,18,20,0,0,18,5,254,250,250,245,252,3,242,0,13,254,10,8,252,18,
30,7,0,8,10,1,8,246,224,3,29,19,20,20,2,4,252,230,227,250,4,11,10,8,11,15,10,5,245,234,
9,11,3,12,26,13,25,11,255,9,14,255,243,255,12,11,29,26,29,29,5,0,249,252,239,238,242,14,32,38,
28,31,18,9,237,227,225,245,252,7,29,3,32,31,8,16,247,246,5,250,253,20,17,20,19,254,22,26,18,0,
251,246,247,11,5,250,5,11,5,31,13,13,15,8,1,250,0,5,14,14,24,0,13,27,8,0,250,248,3,6,
3,19,8,11,21,0,245,237,233,225,236,4,10,28,36,42,41,35,8,239,220,229,222,218,241,247,27,52,35,25,
27,249,246,231,211,217,247,253,15,14,4,9,21,16,5,240,222,238,242,251,239,242,9,14,19,9,243,247,0,2,
243,226,234,7,12,7,246,0,9,20,16,250,237,253,7,238,0,248,2,26,18,254,11,25,13,6,3,0,10,26,
0,243,2,15,12,254,239,250,8,5,231,231,236,13,26,17,10,6,6,253,223,212,219,223,249,23,30,35,34,26,
251,229,219,206,225,253,2,0,22,28,35,24,31,11,243,11,249,243,240,249,251,22,21,9,28,19,0,3,245,225,
0,251,253,13,7,9,27,11,1,245,240,11,250,5,253,240,6,20,9,19,11,12,5,255,6,250,245,235,250,17,
41,35,40,9,254,253,246,227,231,244,245,30,27,12,26,29,249,244,233,219,251,4,232,253,20,15,45,20,243,0,
8,0,253,229,247,19,3,35,27,12,17,254,241,234,229,226,241,243,20,22,17,22,9,250,251,239,238,235,233,224,
252,21,6,21,14,255,16,20,234,247,244,0,10,21,26,23,40,37,2,236,221,213,236,11,0,8,22,67,56,31,
5,237,246,247,214,212,250,5,22,22,22,12,34,34,0,239,249,226,246,255,232,245,1,24,37,37,31,14,8,0,
241,222,214,219,234,234,12,37,44,58,41,12,254,246,243,208,201,224,3,40,54,35,20,32,43,12,233,228,228,220,
240,236,235,25,51,49,32,13,0,2,247,217,191,220,232,6,41,252,7,45,12,253,238,200,253,10,252,248,232,249,
26,7,18,250,6,29,0,15,5,249,244,236,235,10,20,11,247,238,4,24,15,11,0,239,233,239,228,219,230,7,
0,21,21,16,24,9,221,215,217,219,5,252,16,13,19,34,40,27,252,234,237,224,224,242,223,3,30,19,34,35,
18,3,220,211,191,185,221,225,252,36,50,65,54,32,4,224,211,208,192,205,239,2,6,44,55,28,40,10,240,218,
216,206,206,233,249,13,35,41,45,28,14,9,241,216,204,214,240,249,9,5,3,33,18,245,228,213,239,252,254,13,
21,9,31,0,228,225,230,242,9,8,0,10,12,30,13,4,238,223,243,11,236,215,205,223,4,31,23,253,9,10,
0,239,209,198,233,241,246,15,0,8,30,25,35,14,234,231,220,219,220,225,244,27,42,18,36,28,255,226,212,214,
242,244,0,255,4,35,40,18,246,236,241,250,236,226,216,240,4,34,20,6,7,0,5,3,251,229,3,4,13,3,
11,23,22,255,5,251,1,30,15,255,230,2,6,18,5,4,9,19,23,0,239,225,234,236,21,14,12,12,15,254,
250,231,206,226,231,251,19,35,9,3,4,16,2,249,252,236,230,247,233,240,1,253,17,31,43,39,13,0,247,242,
255,225,232,15,28,50,34,21,36,5,238,231,203,216,227,219,245,6,20,14,30,39,248,228,234,201,204,210,198,240,
12,44,58,36,37,45,19,5,246,216,212,234,250,10,47,55,59,53,10,14,26,250,220,216,228,7,32,8,0,7,
242,248,240,206,219,214,209,234,250,6,15,240,254,245,236,246,245,240,11,250,2,12,252,16,13,245,248,254,14,23,
14,8,255,3,29,33,252,20,11,248,252,243,236,12,6,4,1,254,237,231,23,25,30,16,22,253,254,203,189,218,
211,255,15,14,53,69,27,0,223,221,229,223,229,14,27,39,69,53,23,250,222,223,240,218,220,255,27,75,73,30,
27,17,242,230,223,202,223,253,248,14,47,30,8,7,11,251,238,225,211,225,11,16,16,19,254,25,29,0,240,222,
245,30,28,25,15,20,29,20,7,0,249,244,15,250,251,4,0,254,21,18,3,5,253,2,0,19,11,242,20,21,
4,22,238,222,239,240,1,11,34,36,27,13,36,247,230,212,186,233,3,253,17,25,20,71,48,15,244,205,200,221,
222,250,38,37,57,51,36,19,252,217,197,188,229,6,250,5,11,26,39,31,3,0,248,255,249,246,1,2,32,12,
9,25,58,40,29,25,2,255,233,238,217,228,239,245,17,15,238,10,3,234,249,226,203,227,18,26,252,7,6,21,
33,0,236,249,235,249,249,8,37,40,47,27,17,255,5,10,13,238,254,31,5,22,35,255,31,25,225,237,234,249,
255,249,227,0,9,3,244,223,245,228,244,32,20,241,224,243,4,254,11,11,238,19,34,252,3,255,227,11,7,14,
18,252,2,243,250,241,238,0,12,253,3,0,7,7,14,248,237,247,231,252,7,245,244,6,247,6,20,252,254,16,
250,230,236,221,215,233,4,11,19,49,57,27,252,224,218,233,240,254,252,17,50,46,48,5,237,254,240,243,26,241,
216,248,232,9,23,243,254,22,243,5,242,234,246,230,241,239,1,251,20,15,19,21,31,5,0,0,247,230,255,14,
6,8,245,253,231,227,212,222,248,0,237,233,220,237,250,218,245,250,5,41,41,235,4,10,255,0,0,252,238,244,
12,23,50,45,17,25,35,21,240,222,219,251,254,251,229,241,14,31,47,247,248,6,252,253,231,211,218,252,6,5,
34,38,20,45,23,243,230,220,183,207,233,227,26,36,67,74,67,253,252,241,210,194,199,200,236,52,15,32,42,56,
59,35,220,179,213,185,195,218,236,44,114,107,84,73,10,224,170,149,151,207,250,39,89,82,98,76,42,244,202,200,
150,152,202,229,244,60,79,98,97,68,3,202,179,139,132,190,252,50,92,73,89,50,255,233,187,163,200,211,213,17,
14,22,64,27,19,39,0,236,2,234,236,17,10,238,15,42,27,17,7,254,23,2,252,224,227,237,227,5,16,252,
28,24,246,236,200,237,249,240,237,241,239,8,7,235,0,8,30,46,36,7,9,24,27,255,253,11,253,23,253,242,
248,246,249,241,241,250,5,17,8,10,8,2,10,248,244,253,249,6,255,5,1,223,231,11,255,12,16,228,228,238,
209,174,200,233,20,44,46,20,7,0,0,252,225,241,14,21,11,250,18,27,246,230,212,217,217,196,227,238,238,24,
30,19,0,231,221,217,207,198,192,214,253,21,34,26,36,8,229,4,234,188,213,195,191,240,29,13,68,58,49,63,
11,255,247,203,219,225,232,13,18,28,61,41,28,13,207,177,192,194,215,210,234,4,37,38,29,1,24,15,3,248,
217,251,21,7,246,31,44,65,62,32,247,0,255,199,202,222,255,8,27,1,240,0,12,252,230,215,243,10,4,7,
239,246,252,239,5,29,6,9,22,12,23,245,245,0,21,15,14,35,29,20,23,248,231,241,254,244,247,248,5,247,
228,5,8,5,9,241,200,226,238,219,235,252,24,42,58,7,247,240,234,217,236,253,37,37,254,26,246,249,0,225,
230,250,20,236,244,254,248,4,246,4,31,37,36,22,12,12,23,230,176,209,242,2,43,54,89,95,81,34,221,225,
217,168,178,225,14,82,100,70,38,43,34,238,209,217,201,209,246,9,9,54,62,14,17,9,250,0,236,219,237,254,
31,12,14,30,24,253,254,248,238,228,244,253,7,41,15,26,7,0,1,1,235,5,8,8,34,37,19,19,24,10,
25,9,14,38,18,19,15,38,23,6,238,237,246,246,15,254,28,46,34,3,223,224,255,213,222,229,232,35,34,43,
33,29,254,250,237,225,231,17,39,27,60,43,30,34,23,14,238,246,251,255,14,25,45,31,18,43,28,244,230,191,
168,211,215,244,26,39,48,60,37,245,242,196,189,220,216,239,18,39,60,74,48,24,230,214,228,217,234,231,238,15,
53,49,56,23,1,5,230,229,207,205,223,204,218,25,42,49,23,239,241,240,240,229,200,213,248,15,29,24,32,24,
14,31,31,11,8,11,15,250,253,17,253,252,249,229,245,15,250,236,232,227,230,227,226,209,224,251,246,230,242,15,
21,19,244,242,3,1,206,182,186,243,37,30,6,0,56,62,16,238,216,216,215,199,222,220,7,39,32,46,38,11,
242,214,188,176,182,201,230,247,16,37,27,5,253,238,225,233,219,217,237,234,242,220,246,19,26,34,41,28,23,9,
231,199,199,212,226,225,234,28,35,52,38,26,2,247,237,220,209,194,214,238,6,21,22,46,64,43,17,227,215,221,
215,230,234,247,26,41,48,41,255,11,16,248,236,212,209,234,239,245,18,28,51,40,1,245,235,243,244,230,242,12,
26,37,0,254,252,1,10,20,9,243,255,243,228,212,209,237,0,250,11,1,243,0,79,5,27,0,0,1,0,1,
4,3,253,248,251,8,10,0,2,10,10,8,5,2,0,0,2,255,248,254,5,5,251,242,247,255,254,2,7,1,
248,246,242,244,245,249,4,9,6,1,254,6,10,9,11,10,9,11,5,1,0,247,247,249,248,254,2,7,11,8,
2,0,254,1,5,5,2,5,2,252,251,255,0,2,4,3,1,247,240,251,249,243,246,249,254,0,3,10,9,2,
5,7,255,253,3,14,22,13,2,252,255,252,251,255,2,5,3,246,241,249,255,1,0,251,254,0,250,251,0,2,
5,3,252,0,7,13,11,0,247,252,253,249,2,12,14,8,255,2,3,0,254,252,0,9,10,2,1,2,2,4,
2,0,1,254,251,252,249,249,249,246,239,244,1,14,16,4,253,248,245,252,0,0,0,248,244,254,4,3,3,6,
12,11,2,1,6,16,18,7,9,15,13,10,12,0,254,2,247,239,236,240,0,2,248,245,247,251,0,246,245,3,
2,1,253,243,3,15,15,12,5,252,2,8,0,245,245,3,3,254,0,6,8,11,7,7,6,251,254,4,0,248,
253,4,1,254,1,4,8,254,244,249,253,248,248,245,254,2,4,8,0,255,10,17,9,4,7,6,0,241,234,244,
1,12,14,4,6,12,12,5,250,249,2,7,5,255,251,252,1,251,246,3,1,8,14,246,240,237,235,240,241,246,
4,14,15,18,16,6,0,247,250,16,10,250,255,251,251,5,8,5,251,251,8,10,5,0,254,2,255,252,2,8,
8,10,6,253,251,5,13,6,253,251,250,0,4,247,239,254,249,229,235,253,6,9,3,254,4,12,5,249,250,5,
14,12,0,238,249,16,17,0,247,2,18,8,252,242,245,6,10,248,250,12,18,23,17,0,1,0,251,14,8,255,
1,241,230,228,221,235,252,246,249,1,0,0,254,251,254,1,19,29,14,8,16,16,18,10,2,22,25,2,246,244,
250,255,250,239,231,238,5,19,255,248,8,1,2,5,250,254,0,244,235,242,244,252,10,252,247,9,5,255,1,253,
5,7,15,23,7,4,15,15,9,15,26,21,5,251,255,0,239,224,239,251,5,6,248,241,232,233,248,2,244,241,
251,252,6,9,5,22,15,255,2,253,8,15,3,9,1,255,3,3,12,8,12,15,0,241,242,251,8,3,255,4,
3,252,252,1,5,4,245,247,1,239,237,247,249,10,19,8,6,2,11,14,246,236,231,239,249,250,10,16,2,252,
249,250,254,9,23,14,17,27,23,13,249,249,3,253,4,9,0,250,229,232,0,2,254,11,14,6,0,248,249,255,
252,244,233,232,3,2,253,10,252,245,12,10,11,31,9,252,7,247,252,10,4,8,6,8,13,240,219,229,240,252,
14,4,247,9,13,9,16,1,4,16,254,2,253,255,19,4,2,4,242,6,18,10,1,242,234,229,229,242,253,1,
255,0,5,7,5,4,7,18,21,17,12,253,1,4,255,254,243,254,15,249,249,0,240,245,244,232,255,1,5,25,
253,235,246,245,1,6,252,12,14,18,36,24,251,236,248,6,19,11,251,254,0,250,255,11,0,236,241,1,248,243,
4,0,242,250,13,26,20,12,18,21,8,248,234,232,241,250,5,9,244,248,20,28,20,1,248,1,255,246,225,241,
1,249,250,236,231,11,27,14,14,14,17,17,242,230,252,9,6,250,232,250,14,7,13,5,242,232,230,237,7,21,
17,4,236,234,255,255,11,44,28,5,19,18,14,14,21,27,15,253,255,250,240,247,228,226,2,231,213,0,15,9,
248,236,253,234,228,20,41,28,21,3,7,22,2,8,22,2,251,229,207,227,248,252,23,17,249,8,9,11,253,231,
247,237,228,6,2,1,22,15,8,250,239,251,6,1,4,3,253,247,247,245,10,14,13,42,27,254,5,236,245,30,
18,9,240,236,18,13,4,13,255,253,9,3,251,251,253,10,22,3,224,244,251,241,245,234,235,0,244,5,12,5,
35,18,242,255,248,251,253,222,221,227,244,20,18,6,22,36,29,12,6,19,0,239,212,225,14,18,11,4,243,226,
249,22,238,201,238,8,23,249,226,12,24,58,71,11,6,27,14,8,243,235,19,28,242,213,230,244,254,242,226,239,
250,1,7,249,4,62,65,25,249,255,39,56,13,225,225,220,247,10,235,241,2,14,24,239,215,232,234,243,1,247,
244,253,3,1,240,1,15,17,252,243,3,245,222,238,236,214,238,246,248,25,33,27,27,0,233,26,44,22,249,222,
254,22,252,2,9,5,10,37,45,20,5,13,17,15,0,18,30,237,242,32,44,45,18,244,41,52,28,37,251,223,
224,203,229,224,195,251,16,242,228,208,186,166,144,159,190,211,193,185,190,200,230,249,16,19,3,49,107,108,124,122,
106,99,81,73,67,64,55,29,12,230,218,239,231,240,240,237,14,4,231,246,233,233,254,245,239,235,227,235,233,237,
4,243,237,221,190,219,242,240,235,252,23,20,251,3,27,21,7,255,222,224,250,2,2,247,250,6,25,35,29,36,
7,235,228,246,6,8,13,13,24,27,48,34,254,10,22,34,41,19,10,21,8,249,248,252,248,251,249,250,9,255,
224,223,227,238,14,18,241,229,235,244,238,213,231,255,245,237,241,237,232,241,234,220,231,254,21,12,249,1,13,22,
12,5,22,26,21,12,6,24,20,0,4,10,29,54,34,12,14,17,21,20,242,248,2,23,28,250,235,252,23,25,
3,252,14,9,234,229,242,234,217,210,221,232,253,19,25,32,4,236,0,245,220,233,25,47,13,216,234,250,227,224,
221,241,230,216,252,0,236,229,239,6,0,12,27,24,11,248,253,19,19,6,16,35,48,50,42,31,8,222,235,22,
26,6,15,22,15,25,61,74,51,33,37,33,30,7,220,207,214,214,206,198,213,213,214,243,237,205,193,205,233,0,
253,249,236,252,23,15,17,26,10,5,9,0,235,224,255,12,243,254,26,21,11,7,24,34,18,255,245,242,8,34,
33,22,2,253,13,18,0,251,251,238,227,237,250,246,229,239,252,9,13,244,242,15,18,14,15,17,36,35,31,49,
38,18,25,35,5,0,120,6,13,0,0,11,15,13,14,10,20,33,25,12,252,242,235,230,232,224,228,237,248,2,
246,242,0,19,30,23,18,21,13,8,1,7,8,2,3,246,235,229,230,252,0,241,251,0,254,252,7,10,11,19,
20,14,5,246,3,16,8,255,240,253,6,243,230,224,246,8,19,16,246,250,20,40,33,1,3,18,8,2,239,241,
255,255,250,232,228,242,253,6,0,4,9,247,248,252,8,15,1,252,243,254,7,254,253,253,4,22,14,251,248,3,
12,1,1,1,255,250,240,246,1,1,254,252,7,12,13,12,9,14,14,10,4,244,254,6,245,234,220,232,0,17,
10,248,250,8,22,20,11,26,39,19,251,223,229,254,10,4,225,220,226,232,239,246,246,6,17,13,10,22,34,25,
16,2,19,28,13,248,234,231,245,8,254,204,193,245,39,36,2,0,10,6,7,15,14,5,252,252,239,229,241,9,
4,242,247,0,9,2,7,14,14,15,15,12,20,19,21,26,8,235,230,244,239,245,247,229,222,222,247,4,255,253,
1,13,6,243,1,29,40,26,4,10,22,2,251,0,7,0,248,228,221,238,255,12,19,0,0,8,8,11,5,11,
0,242,255,251,245,243,254,253,236,241,6,10,6,255,0,14,19,11,1,14,13,4,253,254,250,246,1,255,230,230,
249,252,250,255,3,9,5,20,20,246,245,5,19,37,33,9,0,254,240,225,245,20,20,1,246,239,228,237,11,21,
10,1,240,233,244,17,25,13,16,22,8,247,249,11,1,255,241,214,211,224,255,11,15,7,247,255,3,0,22,28,
24,26,15,8,245,228,249,6,249,224,228,231,238,252,2,6,16,5,10,23,33,45,31,8,6,13,9,248,235,225,
238,6,252,227,210,208,245,20,36,42,31,30,27,28,25,28,34,7,235,207,199,230,230,220,217,210,206,212,246,17,
45,43,19,21,16,17,47,57,50,30,5,239,232,233,223,241,247,233,222,222,225,236,254,10,17,19,31,29,30,27,
30,39,29,13,0,253,239,218,211,224,226,223,233,241,236,254,15,36,58,29,2,13,21,20,20,254,247,249,230,234,
245,241,255,254,228,249,16,9,0,255,3,7,253,8,16,253,0,10,9,19,12,233,230,10,39,22,231,209,217,235,
10,29,12,0,0,3,18,19,19,18,0,255,247,248,7,252,230,227,240,255,4,8,6,251,12,24,2,239,253,15,
11,249,242,248,253,13,14,227,204,249,16,4,6,10,16,7,16,40,41,25,16,14,0,254,10,0,233,240,229,225,
236,238,254,252,237,233,238,249,16,24,245,244,4,6,18,17,14,33,44,27,254,239,245,2,242,232,249,240,220,230,
248,16,30,14,239,232,8,32,8,13,47,40,7,242,230,220,237,8,12,240,218,242,255,0,29,45,42,51,53,27,
237,211,226,6,7,228,208,204,221,229,235,7,27,18,255,241,244,247,252,18,23,7,4,9,5,247,28,60,31,13,
20,16,255,224,226,250,10,14,242,211,214,240,0,250,247,2,29,49,30,5,0,21,29,7,249,239,225,215,211,223,
0,11,5,253,0,29,47,32,21,22,13,0,254,9,13,3,237,210,222,252,240,224,218,218,226,218,216,244,0,21,
57,63,66,65,48,52,69,45,29,22,239,202,204,207,205,192,201,227,222,217,238,248,24,33,0,245,22,83,79,32,
247,242,17,50,47,30,232,200,225,247,252,239,214,229,244,244,245,248,244,242,4,24,30,8,0,25,26,23,40,40,
11,4,5,249,238,245,3,254,215,222,236,212,188,215,244,12,13,5,251,244,12,41,49,61,53,40,17,250,20,48,
26,26,0,202,199,199,194,226,248,239,234,220,197,228,21,50,66,58,39,44,42,20,7,17,14,245,215,210,250,247,
218,230,238,227,241,252,17,39,25,11,0,248,11,16,237,238,8,247,243,3,244,5,18,243,11,44,3,241,250,4,
54,59,3,211,212,3,60,63,2,202,191,226,20,22,1,228,207,213,234,3,2,253,0,251,246,9,16,33,38,16,
44,71,23,7,30,36,57,18,194,176,175,202,250,208,165,221,2,32,40,7,240,234,20,66,51,17,2,0,9,22,
39,55,45,7,240,230,234,0,245,175,185,7,248,215,227,247,10,35,42,38,251,226,32,30,246,5,32,255,228,253,
27,24,21,30,11,238,237,242,231,229,5,18,239,235,233,221,228,9,48,51,15,250,2,251,251,24,252,219,230,252,
246,0,246,241,20,44,38,38,34,23,26,0,245,7,203,170,218,220,195,214,240,28,14,226,15,69,63,78,84,37,
255,12,36,22,240,208,242,236,198,211,0,241,218,228,214,215,7,54,61,27,0,15,26,254,9,54,46,7,246,202,
163,191,249,17,242,187,219,8,3,0,16,9,22,68,75,34,23,59,76,46,0,251,15,240,208,215,206,216,198,187,
221,233,245,27,15,249,24,19,31,33,12,41,50,11,251,244,252,247,198,206,218,206,241,254,225,234,4,77,97,29,
24,59,49,48,51,3,224,215,216,193,156,208,27,5,226,244,248,227,243,32,39,7,25,44,249,200,15,91,61,9,
2,3,255,0,23,27,239,224,225,195,210,10,20,239,196,218,17,18,25,59,38,250,255,21,18,5,1,11,236,195,
212,242,209,195,5,44,10,8,12,5,22,37,55,44,249,8,77,56,5,251,249,0,248,217,211,195,195,230,214,157,
186,253,15,3,250,26,77,72,57,61,42,32,42,22,249,255,249,230,213,208,226,5,6,236,244,1,6,16,12,249,
6,22,10,2,14,3,236,206,226,36,32,250,0,231,193,229,43,57,9,218,209,215,217,10,45,3,254,51,34,238,
237,17,38,26,32,40,12,235,8,29,15,9,25,254,199,184,237,0,239,17,1,192,183,235,42,58,15,13,6,226,
240,18,8,4,22,36,32,3,239,247,0,16,37,7,220,199,197,217,242,249,0,10,233,186,222,23,43,55,35,251,
4,6,35,86,73,51,56,23,3,32,15,237,226,232,250,232,196,175,156,183,250,14,254,227,197,223,3,15,68,76,
35,39,42,42,50,41,45,66,26,231,230,222,205,209,218,224,217,213,211,197,188,252,60,53,253,235,253,254,13,27,
14,2,4,18,248,189,222,56,60,28,14,243,243,245,2,39,39,15,25,29,229,226,18,57,67,59,45,39,15,233,
226,238,200,208,229,169,137,170,186,213,5,21,57,72,39,60,82,59,62,62,0,226,239,232,221,207,209,212,208,214,
238,244,224,226,0,18,20,19,16,252,14,66,91,61,15,19,32,22,8,2,231,215,210,214,213,195,190,219,238,229,
246,18,27,42,64,80,78,65,44,47,54,16,242,221,182,177,202,214,212,212,215,4,29,12,22,39,35,13,237,234,
244,249,246,231,215,230,21,52,39,0,23,77,70,37,33,28,15,254,230,229,225,228,255,4,247,0,11,20,18,12,
23,12,222,197,202,209,206,207,202,200,201,208,234,252,2,20,47,41,18,255,250,1,30,32,17,253,229,230,253,24,
39,28,17,4,14,33,47,54,48,33,19,29,22,38,39,29,23,16,8,253,246,247,2,253,14,19,8,248,215,224,
3,2,244,238,194,156,170,175,210,218,190,198,209,191,208,239,250,10,28,29,18,5,15,37,50,42,35,31,2,238,
231,245,252,2,2,252,233,243,24,57,73,69,67,58,41,42,43,45,22,5,6,253,236,237,253,4,16,27,25,26,
21,21,38,28,8,9,253,229,224,215,214,216,215,221,225,239,142,6,24,0,1,1,3,3,253,252,0,3,8,255,
231,232,255,7,15,16,9,7,0,243,249,3,9,8,0,1,6,4,7,6,253,240,244,250,0,11,8,4,11,9,
4,254,244,241,253,3,6,9,1,253,254,249,248,251,249,251,2,1,0,1,0,7,12,2,251,249,249,255,7,0,
245,252,0,5,11,0,248,253,255,3,4,255,0,8,11,13,16,10,5,3,253,254,2,255,0,3,251,249,252,245,
249,4,1,249,251,247,0,14,8,2,5,1,0,2,250,251,2,5,10,13,7,254,254,255,243,241,247,6,20,8,
253,255,250,251,252,248,253,5,7,5,0,251,249,252,2,252,251,254,251,248,251,6,18,17,5,0,253,0,9,11,
4,255,252,5,13,5,248,251,1,3,3,251,247,4,9,2,0,1,3,2,251,255,16,4,249,1,6,0,247,243,
250,2,6,0,240,242,246,255,4,2,3,2,255,3,252,250,5,9,13,16,7,4,6,10,7,247,237,244,255,0,
0,0,6,2,254,253,1,8,2,241,240,0,2,253,251,0,18,21,9,2,250,253,2,253,0,6,5,3,255,0,
252,237,239,253,1,6,2,5,6,3,8,247,236,254,19,28,25,14,12,16,11,7,254,240,240,249,0,248,236,242,
253,243,237,247,0,5,16,11,253,248,246,243,3,22,11,8,20,6,245,236,242,11,13,247,244,252,253,8,4,251,
2,248,241,7,27,24,21,21,1,244,253,1,4,6,246,246,5,2,250,244,243,3,9,255,250,2,9,8,1,252,
248,7,22,14,7,15,11,1,250,246,254,247,231,236,245,235,238,254,7,10,254,239,246,253,2,16,12,3,6,25,
19,3,5,0,248,248,230,228,5,21,25,16,247,246,0,247,249,7,15,19,13,0,253,24,36,7,246,245,238,252,
15,7,254,248,241,244,245,241,250,3,5,2,255,247,242,5,21,16,2,0,6,10,1,245,243,248,253,5,2,244,
245,5,12,0,229,221,248,9,9,7,253,245,11,23,13,2,252,19,37,22,8,6,4,3,3,2,242,231,243,252,
6,17,1,240,237,228,244,14,15,5,254,251,3,14,22,19,3,239,236,245,254,4,10,250,239,245,251,3,17,21,
0,236,235,0,32,34,11,8,6,235,226,234,246,11,17,6,242,239,250,237,237,10,11,14,10,253,9,24,25,22,
253,231,4,52,65,19,222,221,220,221,250,249,249,15,28,25,231,192,218,253,26,27,255,2,10,4,34,16,235,250,
254,244,4,19,16,4,3,16,253,221,220,238,13,24,12,9,0,247,7,0,236,249,254,7,30,27,3,228,204,209,
1,32,14,24,44,15,251,13,244,228,6,12,7,17,249,224,237,253,11,16,4,248,248,4,252,5,29,3,221,213,
223,7,61,68,32,239,209,243,17,21,20,241,212,232,7,2,237,240,0,1,13,19,1,255,255,5,19,10,0,251,
238,244,0,247,242,4,25,25,10,0,251,241,243,240,242,19,27,11,19,5,252,15,16,6,2,249,0,4,248,1,
2,238,240,248,241,231,249,22,5,255,20,5,245,0,252,0,251,241,4,15,23,38,18,231,225,242,248,248,238,236,
6,23,18,5,255,250,242,228,241,31,59,36,254,231,241,3,9,16,18,248,235,239,244,8,31,16,248,247,2,232,
212,243,20,47,49,7,234,230,246,6,5,12,27,35,17,228,199,227,5,22,25,1,221,217,241,16,48,31,221,196,
211,236,19,40,36,38,48,34,18,247,224,240,244,245,239,232,3,22,8,239,227,245,2,247,235,252,16,20,21,33,
21,248,1,253,226,239,252,5,45,53,28,12,2,251,250,236,234,0,15,246,232,227,205,211,0,21,13,0,239,231,
1,25,28,20,14,26,43,27,5,252,236,11,46,22,226,199,195,226,20,24,4,8,0,255,23,33,8,234,240,2,
2,7,13,237,237,26,252,191,195,227,254,22,21,250,236,3,53,92,61,240,200,223,28,63,44,253,239,251,4,238,
211,207,207,242,12,249,237,249,7,31,51,30,236,228,0,41,68,46,0,253,25,33,3,219,190,201,251,26,19,235,
180,175,217,1,46,75,47,21,0,216,228,15,44,58,30,251,252,250,246,228,219,231,246,16,31,7,245,4,11,242,
232,248,251,250,254,24,32,24,5,246,248,255,251,251,244,236,254,8,0,10,27,24,10,248,222,225,3,28,31,19,
6,2,0,248,228,215,241,6,249,247,16,16,237,227,3,35,21,0,3,4,23,51,27,251,238,1,16,19,245,195,
202,0,18,255,243,0,251,229,230,232,231,21,60,36,21,32,28,11,5,245,232,238,251,31,49,12,229,227,220,221,
240,244,255,15,0,241,233,229,239,7,28,16,14,38,37,20,1,248,3,20,23,14,253,250,240,219,254,7,232,6,
49,9,235,243,235,248,14,0,240,239,234,241,28,61,26,240,204,184,222,25,60,61,22,243,233,251,1,240,228,249,
7,27,49,18,211,203,250,29,35,20,7,0,250,248,248,240,5,19,11,9,19,1,251,16,12,243,244,233,225,5,
45,24,237,222,228,237,18,21,228,221,36,52,4,231,214,196,243,45,64,75,47,218,175,210,248,254,4,38,33,0,
6,7,209,204,245,235,234,26,45,39,19,1,11,20,24,6,229,223,28,57,40,36,20,222,218,252,246,214,215,217,
219,14,35,237,242,35,26,252,233,215,213,8,76,90,35,250,0,17,29,11,214,190,214,239,3,29,12,202,192,2,
8,207,232,25,33,61,87,31,216,213,252,251,236,246,237,234,255,7,26,58,36,1,255,9,23,9,1,32,32,21,
74,37,190,166,210,217,215,230,242,8,49,45,239,198,203,227,245,38,68,48,21,11,10,33,33,2,233,220,207,204,
250,15,5,33,61,7,199,189,206,218,5,32,16,3,16,19,14,5,12,249,243,10,14,8,42,39,29,41,18,218,
194,209,238,243,238,245,248,7,16,12,233,222,247,26,45,57,27,222,198,236,45,95,72,17,215,205,228,254,15,13,
11,2,230,230,244,250,246,231,227,243,242,240,16,20,3,251,11,18,22,36,37,11,244,241,4,254,3,253,251,254,
241,220,207,214,248,6,21,19,251,247,3,31,62,67,33,247,219,235,247,2,18,17,1,255,222,217,253,0,222,249,
21,25,24,37,15,9,28,14,226,222,254,0,249,9,14,240,233,238,216,219,253,245,243,13,30,13,8,27,14,10,
25,10,246,12,33,17,7,25,4,236,242,229,195,217,9,20,18,25,247,214,235,3,237,228,250,9,8,23,32,44,
49,36,255,213,219,255,253,246,12,14,242,245,8,0,248,242,230,224,240,2,18,13,254,12,30,27,21,9,252,0,
254,251,7,16,18,23,38,7,219,203,199,230,22,29,26,41,33,13,1,247,220,204,225,5,17,20,17,254,240,253,
26,4,222,212,213,223,255,13,9,15,23,6,249,26,36,2,223,225,236,253,17,20,254,254,30,46,253,231,251,255,
254,0,252,232,231,14,47,41,21,17,247,212,252,57,53,35,29,238,198,218,31,76,51,229,154,134,202,24,70,42,
10,220,184,195,235,221,219,11,68,47,23,27,18,16,22,30,25,27,9,244,241,12,21,255,213,210,213,230,2,22,
13,0,247,244,249,9,1,250,3,1,245,9,25,19,5,1,5,254,251,251,235,238,1,6,253,248,5,8,253,245,
251,254,11,18,12,0,251,254,244,235,252,4,254,4,16,3,235,231,254,25,40,44,27,22,28,20,14,24,33,27,
3,11,25,14,6,13,10,234,219,238,246,235,243,232,209,221,11,30,0,0,147,5,17,0,252,244,246,1,12,13,
9,4,253,5,9,6,251,245,249,251,10,13,16,6,239,231,245,254,7,9,8,248,231,233,243,1,4,254,246,242,
0,8,6,0,247,239,244,10,28,37,26,7,249,252,0,0,5,16,25,25,15,255,240,227,229,247,12,23,16,0,
243,246,247,240,241,255,11,10,0,251,253,254,250,250,240,245,2,11,12,6,5,0,0,253,250,247,0,14,20,19,
18,5,240,244,0,11,20,19,10,255,247,247,253,249,248,3,5,8,1,238,229,246,5,254,251,255,6,17,12,252,
242,247,255,0,13,16,11,0,244,244,248,242,245,2,8,3,7,255,240,241,253,10,14,6,253,3,18,30,33,20,
9,254,249,8,10,8,3,5,5,253,249,240,235,244,4,6,253,242,237,239,248,251,0,255,248,249,243,240,242,253,
12,16,5,249,239,241,1,9,15,28,25,10,252,236,244,13,24,23,23,18,10,13,8,9,8,2,254,254,3,8,
14,9,252,231,223,233,241,3,12,4,239,227,232,250,0,248,255,2,248,248,250,252,4,0,0,0,251,254,20,20,
1,254,0,7,14,15,15,14,14,15,14,13,14,18,14,10,2,239,225,231,255,12,13,5,245,225,221,237,2,5,
0,253,250,238,228,236,4,14,8,4,1,243,234,248,16,33,35,9,240,249,5,4,0,17,38,36,22,251,242,0,
20,20,249,247,2,7,2,250,234,238,247,242,239,0,12,7,247,229,225,253,11,17,15,7,247,220,233,247,253,21,
41,12,236,233,241,4,22,27,15,248,250,1,0,18,15,8,7,2,8,12,5,255,3,8,6,4,247,247,254,4,
0,254,244,245,252,251,246,241,244,251,9,6,254,241,239,248,4,8,2,8,13,4,246,244,6,16,22,13,254,247,
236,252,24,27,4,243,247,255,9,16,18,11,10,253,254,0,253,240,246,7,22,11,252,237,225,229,235,247,254,253,
6,6,255,245,244,251,255,2,13,22,14,11,14,1,244,251,12,33,40,21,244,234,250,15,22,5,233,232,7,15,
248,237,0,16,14,0,232,214,222,252,20,34,25,242,237,243,250,2,2,8,240,222,229,5,28,43,18,225,228,240,
254,25,57,48,4,244,241,0,16,7,3,0,6,254,14,31,25,2,232,219,213,234,15,33,25,1,249,245,241,216,
196,225,24,55,19,233,228,232,244,9,10,4,25,27,15,19,250,219,233,8,19,41,50,23,247,233,226,239,16,38,
20,255,242,253,252,235,244,15,34,27,242,217,233,10,14,245,214,204,231,8,29,21,255,237,226,239,15,22,6,253,
20,36,37,252,214,226,20,63,65,34,1,218,221,234,251,6,252,4,16,21,17,253,234,230,243,226,242,27,64,67,
17,214,174,178,244,44,48,24,0,234,217,207,207,0,33,14,3,4,4,251,230,229,1,21,12,30,53,66,42,244,
212,210,245,23,52,65,48,1,231,218,215,238,16,15,16,2,242,230,210,221,246,29,37,12,231,224,6,16,253,234,
224,238,19,34,6,222,214,221,243,15,24,31,37,28,0,219,210,244,45,57,52,19,246,254,20,17,252,229,234,16,
47,53,28,221,192,213,240,13,38,28,11,245,230,235,227,224,228,237,8,32,31,0,249,2,255,243,210,219,10,35,
53,21,238,236,255,1,242,243,6,22,22,9,1,226,3,1,248,33,23,255,243,14,19,24,42,16,238,197,217,2,
23,55,38,0,224,223,235,240,15,29,13,236,227,213,218,31,32,9,244,200,203,15,49,46,29,242,219,210,232,12,
25,34,34,4,243,2,0,1,3,242,1,13,27,41,33,14,246,230,232,252,239,16,46,30,5,223,233,237,247,1,
232,215,255,36,6,242,245,227,233,224,243,8,17,63,44,0,219,223,231,0,53,20,36,55,25,227,181,191,236,52,
81,65,8,217,221,200,203,25,69,67,33,222,208,237,17,47,10,201,205,1,33,51,250,219,242,234,234,234,209,8,
67,73,36,231,180,190,231,253,48,71,67,39,204,180,206,0,38,63,19,229,212,242,61,66,12,210,177,224,37,48,
43,16,0,4,245,242,216,210,16,43,20,21,9,225,217,241,255,251,247,26,61,27,231,211,213,11,50,44,245,225,
215,9,51,57,11,180,162,244,41,28,11,230,205,243,12,11,239,233,239,245,40,78,29,240,220,231,244,9,39,43,
36,33,20,218,219,0,248,35,55,29,236,222,6,10,14,10,15,3,230,232,238,9,44,11,229,187,179,210,249,45,
2,212,211,25,35,240,239,231,0,32,27,22,6,251,11,28,38,23,0,224,222,45,47,46,10,218,238,22,18,241,
4,0,8,19,252,13,0,222,242,239,235,234,20,24,235,211,204,233,231,31,46,246,230,220,210,233,26,45,29,243,
236,31,41,28,32,216,254,62,41,19,29,44,1,10,225,210,216,251,87,79,2,221,174,131,223,49,37,26,15,229,
216,213,230,220,214,41,56,27,231,205,217,248,64,70,250,172,227,35,41,45,23,239,248,15,31,6,7,17,39,29,
233,253,13,10,23,240,234,8,15,28,38,14,201,184,184,253,94,95,3,164,131,186,20,73,41,234,195,191,11,9,
239,242,244,20,40,43,239,196,228,35,94,50,236,213,200,235,32,58,49,19,226,242,15,218,227,52,74,74,15,214,
0,227,250,41,38,246,8,23,231,245,237,241,230,247,32,41,5,201,210,187,216,38,50,252,237,229,232,250,0,255,
237,4,10,2,240,12,12,12,9,1,5,228,12,38,15,232,247,254,241,33,47,13,210,229,20,48,18,221,237,251,
26,62,8,216,246,3,2,8,30,22,18,254,249,248,241,19,23,244,253,7,248,237,6,26,3,239,242,5,7,8,
12,215,217,243,255,249,251,6,236,227,245,253,253,225,231,250,234,28,25,244,210,241,6,4,28,30,47,255,227,7,
247,6,50,52,11,246,9,38,0,230,252,31,20,54,61,10,216,189,233,12,39,74,30,200,147,214,50,41,16,4,
243,245,204,223,218,242,242,32,53,13,6,209,196,230,28,80,61,241,186,214,26,42,65,22,234,234,238,6,17,5,
245,41,42,247,237,194,208,2,19,252,18,242,238,246,224,223,216,226,13,31,30,2,228,207,218,248,14,15,255,19,
18,2,14,236,241,239,7,40,44,34,9,12,251,252,22,30,38,39,31,3,20,26,9,2,8,19,38,26,28,33,
13,248,1,247,239,21,56,43,12,242,239,0,183,6,8,0,1,12,253,238,243,1,5,0,5,252,253,17,26,8,
255,19,43,35,14,7,17,21,19,15,8,12,12,11,252,236,255,15,10,251,235,243,238,224,225,219,217,229,228,214,
198,198,224,4,245,235,14,29,26,0,3,31,47,54,54,39,16,29,56,52,33,11,18,41,23,250,246,2,1,0,
253,221,220,244,237,223,209,221,249,235,204,215,245,0,245,235,247,6,17,8,245,243,0,24,16,242,243,17,30,23,
0,250,16,38,29,10,9,5,21,25,4,250,21,29,16,242,240,10,18,4,245,244,244,246,241,238,230,233,237,240,
229,220,243,250,251,248,4,12,21,23,14,19,29,36,40,19,9,15,16,4,3,2,251,244,237,254,0,240,244,246,
233,235,249,250,236,235,246,253,243,240,2,1,247,4,9,5,8,16,24,24,2,254,13,5,252,246,254,249,0,0,
254,249,248,10,13,2,15,30,32,18,5,20,20,12,0,4,3,245,253,255,249,228,236,251,251,247,249,249,0,7,
10,253,240,239,255,255,229,228,254,6,247,228,238,253,0,32,48,31,7,254,255,10,2,5,30,23,248,235,253,7,
248,253,31,19,240,240,253,254,255,10,18,251,227,231,253,234,237,4,6,7,245,241,248,243,253,25,17,235,250,13,
254,236,252,25,34,28,11,13,20,30,46,50,32,17,30,29,252,226,247,4,242,230,233,224,189,216,2,234,208,218,
249,254,217,217,242,4,2,255,8,252,245,17,38,27,3,33,64,31,12,22,26,47,40,13,14,246,6,37,3,220,
219,242,252,211,173,217,246,237,229,225,220,230,3,11,244,245,13,44,25,242,247,29,47,31,24,29,43,55,43,16,
7,16,47,32,243,223,0,10,249,223,213,231,249,248,235,224,211,232,1,255,230,221,244,240,238,251,1,4,1,9,
10,245,250,12,35,35,10,12,2,249,1,17,38,29,13,14,4,222,245,35,35,4,241,5,15,238,224,245,5,248,
252,237,218,205,225,12,6,240,252,18,4,246,254,22,38,29,30,26,4,247,19,23,4,13,21,31,13,243,251,10,
14,245,246,242,248,237,209,223,233,219,223,229,226,212,228,242,0,7,13,28,14,20,49,72,60,34,42,49,38,19,
4,244,254,253,244,220,205,216,247,246,209,213,243,252,0,235,236,253,254,243,13,11,249,7,23,25,248,236,27,68,
30,254,20,32,10,10,2,250,235,7,36,248,202,226,10,25,248,236,6,22,26,7,247,0,31,29,2,229,224,253,
8,229,203,211,240,1,239,210,223,254,3,253,239,254,12,24,2,249,0,43,58,47,16,254,33,56,50,26,18,20,
16,6,255,245,244,243,6,7,225,198,222,0,249,228,242,244,234,232,248,247,226,234,9,252,230,232,0,2,251,251,
5,4,251,13,21,12,9,30,32,22,10,20,49,54,37,29,27,24,45,37,246,232,245,0,238,224,219,207,194,225,
226,211,199,231,2,227,206,232,12,16,14,36,34,24,19,44,46,10,20,53,62,19,240,1,22,2,6,5,252,247,
223,220,234,227,248,5,241,217,218,238,230,234,6,27,22,239,240,252,2,21,30,25,11,249,253,8,10,255,19,33,
5,252,243,8,27,23,13,13,16,251,248,248,250,241,0,6,254,217,222,250,241,243,8,20,6,249,247,254,6,4,
18,14,227,230,12,25,248,237,244,35,4,219,6,33,19,15,24,10,250,0,33,11,209,228,255,0,229,219,237,243,
228,248,26,22,14,32,41,18,254,10,46,45,27,255,241,228,251,1,240,220,224,21,10,222,243,1,12,5,241,7,
13,241,231,236,241,223,252,5,240,224,220,16,14,241,255,34,20,21,43,27,36,25,35,57,23,248,3,24,4,253,
246,245,0,246,250,2,242,222,4,4,226,217,228,228,205,209,244,5,225,220,254,10,255,7,55,54,41,42,40,51,
43,15,10,27,19,3,233,218,224,236,236,250,239,225,0,12,242,245,2,0,6,26,4,254,4,240,242,253,245,0,
7,245,0,254,250,7,248,247,13,11,243,224,240,12,1,243,246,244,249,21,10,15,13,13,33,60,44,11,11,21,
37,56,11,233,247,239,0,240,207,221,243,224,223,206,187,235,7,251,246,254,13,32,20,229,0,35,46,70,33,5,
29,45,27,7,253,42,69,16,216,207,221,231,231,211,190,189,200,214,223,186,196,6,41,25,239,224,6,41,38,32,
26,35,63,45,35,24,16,77,112,73,10,8,28,13,244,232,240,227,186,184,170,149,158,206,219,217,238,247,3,9,
7,64,100,59,39,45,49,31,22,14,31,36,0,9,247,212,3,41,34,235,202,242,246,203,177,200,221,211,204,192,
207,218,11,34,13,30,44,83,69,35,44,72,92,71,11,251,228,228,0,247,200,188,216,217,194,195,240,10,251,10,
26,13,8,26,59,61,42,29,5,3,4,252,0,252,1,255,233,218,219,246,255,6,250,228,244,247,244,239,245,0,
19,13,237,233,230,254,34,14,24,13,21,27,8,44,45,45,58,34,1,253,4,2,254,232,207,222,207,185,195,219,
241,234,235,225,229,238,240,21,33,25,47,45,33,21,19,54,65,35,18,17,254,239,241,234,226,231,5,255,229,217,
205,226,0,10,14,239,241,1,5,4,9,26,25,20,38,4,238,5,35,37,16,11,2,248,245,1,252,239,239,0,
245,208,209,234,227,231,9,6,8,249,251,20,28,38,58,52,19,20,26,254,245,245,1,12,232,230,232,223,231,250,
15,240,236,14,249,244,241,254,2,5,27,7,234,232,17,32,0,21,26,17,249,239,253,233,3,15,254,230,207,236,
237,222,243,1,15,2,4,246,7,53,53,53,53,62,52,18,27,33,41,20,253,1,212,209,227,234,218,222,229,227,
227,224,236,246,237,0,246,215,220,223,235,233,0,12,0,248,247,15,30,44,73,72,44,40,35,36,36,23,20,25,
248,227,227,204,211,229,245,241,223,222,238,246,254,20,38,15,10,26,2,0,14,0,249,248,251,0,228,211,242,1,
15,14,11,0,251,14,6,8,24,19,17,254,233,248,248,243,19,18,234,11,11,252,254,9,44,33,254,2,6,254,
231,252,12,236,229,237,224,206,220,244,255,236,228,12,7,255,16,36,41,37,38,39,15,2,11,35,23,243,18,1,
229,247,237,239,2,240,246,243,229,230,255,0,244,2,249,7,6,229,240,25,43,12,255,1,247,13,14,6,11,6,
3,16,235,198,0,21,7,2,220,239,18,246,248,255,9,25,33,0,244,247,6,26,25,0,248,8,1,239,238,254,
7,23,5,246,248,225,239,25,4,247,3,3,9,250,244,21,36,22,11,15,10,3,23,12,1,253,2,6,244,222,
218,245,250,225,226,237,238,245,244,240,237,10,10,9,249,240,31,35,18,25,251,247,21,15,244,236,247,3,14,249,
238,254,252,10,24,254,252,29,24,6,12,12,30,38,21,13,11,255,9,17,8,240,242,245,224,215,223,240,242,250,
233,237,238,250,15,255,247,3,19,11,1,5,0,249,19,12,9,250,2,8,7,241,26,33,253,8,247,249,252,244,
6,0,220,228,241,234,235,244,244,4,253,255,8,254,9,21,29,20,16,21,29,26,7,19,26,19,23,14,12,21,
253,13,4,12,2,2,250,248,247,238,237,220,230,225,222,227,211,225,229,225,245,239,241,253,3,11,8,14,17,20,
17,12,12,3,6,18,5,246,246,9,14,249,247,236,245,10,10,17,0,253,19,24,16,7,37,42,28,32,14,30,
16,11,29,5,251,250,8,0,229,242,234,243,244,244,249,231,239,245,5,0,237,0,250,241,252,243,10,17,254,2,
2,2,2,4,2,250,244,236,249,237,219,225,239,233,214,206,222,221,225,225,227,241,227,248,0,0,30,7,15,0,
0,248,249,252,250,251,254,255,255,0,249,243,242,249,1,3,0,2,3,1,253,251,247,248,252,252,255,250,253,253,
255,254,0,8,16,18,18,16,12,8,6,5,7,12,17,24,24,24,21,19,20,16,13,13,7,9,8,6,7,12,
14,20,21,21,19,15,7,0,249,239,242,245,243,245,247,248,251,249,251,250,243,241,237,240,241,242,244,247,248,248,
249,243,241,245,247,249,248,250,0,255,254,251,251,246,239,247,241,233,230,231,236,240,245,253,0,1,3,2,0,255,
0,6,8,11,16,25,27,30,36,36,26,17,5,255,253,254,0,3,9,15,19,21,21,18,12,5,5,6,5,2,
2,0,253,0,12,16,12,2,246,237,235,232,227,224,226,232,238,243,247,252,255,1,3,0,251,244,242,247,251,0,
4,6,1,251,248,243,247,248,249,254,4,255,255,255,253,255,4,5,5,4,0,3,2,0,254,255,3,6,12,14,
10,4,0,1,3,12,20,22,26,22,20,18,15,9,4,1,0,13,15,12,11,5,254,249,241,242,238,238,243,249,
247,250,253,254,255,0,1,3,6,3,0,254,254,5,7,1,0,250,248,247,240,241,241,244,248,249,250,1,4,254,
0,253,253,0,0,4,10,17,21,15,4,250,242,236,230,229,234,236,239,243,0,10,19,24,22,17,18,15,17,14,
11,17,31,39,44,42,34,34,30,24,14,7,255,254,0,0,1,4,11,10,7,2,2,4,1,255,250,0,5,8,
8,9,6,2,1,252,243,239,237,232,230,222,221,222,229,235,235,241,240,236,237,237,242,244,244,246,245,241,245,237,
231,235,235,244,248,243,240,236,234,238,236,243,252,251,254,0,252,0,0,5,9,13,18,22,21,18,22,26,36,41,
38,43,40,34,26,17,11,14,8,8,8,9,18,26,24,12,254,254,254,251,254,252,253,252,253,255,1,5,6,3,
254,250,250,248,241,242,245,248,254,0,3,11,11,14,9,250,236,236,235,242,246,250,251,251,0,0,252,242,234,234,
230,234,238,243,246,242,250,10,16,18,15,10,3,1,254,255,251,6,20,20,25,28,20,11,1,250,250,251,252,247,
246,244,254,7,0,252,255,0,3,0,1,2,12,15,22,25,21,20,11,7,10,7,8,6,2,3,9,5,255,252,
239,228,230,231,233,237,237,242,248,253,8,19,16,14,9,253,253,250,244,244,243,246,253,254,252,249,238,234,237,239,
243,243,252,1,0,0,11,11,12,19,23,22,20,15,16,13,9,12,20,23,28,30,26,20,12,6,6,8,10,9,
7,6,9,15,24,30,29,25,12,1,250,248,245,243,237,230,224,236,244,248,242,238,241,242,249,253,246,237,233,236,
248,253,3,5,5,254,252,243,242,242,241,237,231,231,232,234,244,247,255,3,0,255,255,254,2,4,254,0,3,5,
7,2,2,9,14,17,14,3,254,249,244,250,246,246,252,251,0,3,8,22,29,28,33,28,25,16,6,9,5,10,
18,18,17,21,23,26,15,4,3,0,253,254,249,248,246,252,2,0,255,253,254,243,239,234,224,232,242,247,3,2,
2,1,243,232,239,245,253,254,255,3,10,13,12,6,255,4,7,1,250,241,240,244,246,243,247,251,2,5,0,249,
233,228,229,234,250,255,253,6,27,29,28,27,21,5,255,254,255,0,253,7,11,9,17,28,29,18,3,4,4,254,
251,255,1,11,16,23,29,30,31,31,23,8,250,239,238,237,244,249,251,4,5,1,2,251,242,243,241,241,233,233,
245,0,14,20,16,9,0,243,239,241,235,226,224,236,249,0,4,0,251,247,240,235,236,233,237,247,1,15,27,34,
35,29,21,9,3,2,253,3,8,19,25,30,26,20,15,17,14,6,248,236,245,251,252,5,9,11,16,9,4,0,
244,250,254,253,5,0,0,5,252,252,0,246,247,252,243,244,241,241,250,251,251,2,10,6,3,2,250,244,235,226,
232,234,234,240,239,232,227,232,240,244,246,243,241,243,244,10,24,26,29,26,20,18,21,19,14,1,3,20,16,16,
23,14,6,5,5,0,253,252,253,251,253,11,22,15,17,24,29,36,40,30,17,12,255,250,242,231,234,239,229,243,
253,245,253,251,248,246,230,229,242,250,6,15,21,30,23,21,17,254,254,0,255,3,255,247,248,244,254,3,251,243,
231,210,215,227,230,239,250,252,0,3,10,25,36,12,253,2,241,250,3,239,242,249,3,30,40,29,15,248,229,229,
243,0,4,246,243,254,11,29,34,23,20,30,33,21,8,243,233,250,15,39,52,31,18,4,236,239,236,237,244,228,
228,240,255,12,20,14,255,0,13,6,17,11,229,224,237,247,14,16,10,12,254,245,236,226,220,210,216,231,233,245,
247,236,246,241,247,11,15,7,255,2,0,253,12,21,29,34,17,18,25,20,23,19,24,29,32,37,33,18,10,5,
0,13,10,0,251,248,246,240,243,5,25,22,23,23,20,16,252,243,245,239,248,253,248,251,245,245,253,243,235,242,
235,223,216,204,190,193,205,225,249,10,8,8,250,249,4,7,13,10,2,0,252,253,245,242,246,237,243,248,237,243,
237,228,251,2,19,39,22,25,24,34,51,44,41,49,48,62,56,45,38,21,23,18,254,253,230,226,241,238,255,0,
252,3,243,225,241,230,244,8,254,10,9,4,21,5,10,20,255,1,242,216,229,223,209,224,217,204,226,230,223,239,
246,251,18,31,39,55,52,33,16,247,243,7,4,1,1,2,12,13,255,239,216,204,212,236,246,1,8,0,255,0,
8,22,18,30,42,28,21,18,6,249,230,226,239,242,241,255,1,7,23,26,31,28,23,30,31,28,24,45,57,68,
70,43,30,33,39,27,5,254,232,213,207,186,189,190,183,195,213,218,224,233,219,220,224,236,243,228,235,0,5,3,
14,14,249,254,1,245,241,246,253,2,3,5,8,6,251,1,1,242,245,238,236,250,3,29,48,45,43,38,23,33,
29,22,19,6,1,9,6,13,18,4,4,253,2,26,29,31,19,9,8,11,18,19,26,13,9,25,12,12,2,225,
227,226,214,228,229,225,239,220,191,204,208,218,237,235,244,9,22,9,235,223,226,228,253,14,4,15,13,242,246,240,
245,4,0,1,10,18,17,13,25,17,9,18,26,27,28,23,23,38,43,30,35,46,24,21,15,248,253,246,216,215,
214,229,0,5,9,255,236,243,234,235,231,211,224,246,240,8,10,12,30,9,255,254,0,9,6,8,2,4,19,5,
14,27,17,38,44,24,19,19,4,246,238,250,2,19,24,1,1,253,246,249,239,224,219,213,213,228,252,0,252,240,
242,246,255,18,29,19,17,25,22,18,18,9,12,32,26,12,9,238,227,244,229,225,3,15,21,31,29,10,10,13,
249,243,236,214,211,212,209,232,251,242,231,232,225,220,227,222,214,216,231,242,249,247,254,7,14,30,41,44,34,7,
1,253,244,0,0,244,5,23,30,40,14,247,249,252,255,11,24,12,0,2,2,7,27,24,14,254,245,0,241,238,
244,221,234,252,250,26,36,8,15,7,249,29,48,51,73,77,79,90,81,59,47,34,28,41,36,24,30,19,6,20,
18,20,34,22,4,245,229,232,222,207,212,214,237,1,255,8,0,242,240,226,217,220,215,199,193,199,222,228,245,242,
211,210,207,192,197,195,183,201,215,216,231,238,221,225,242,236,240,238,215,213,221,205,212,228,220,232,254,254,8,7,
251,238,234,237,242,250,0,0,5,21,39,49,77,77,62,73,65,40,26,3,3,8,21,34,43,54,40,40,36,35,
43,31,36,34,26,50,53,39,47,45,45,31,34,16,243,249,227,200,220,230,232,13,15,5,31,29,33,24,7,10,
11,28,30,10,36,32,39,47,22,26,32,28,19,7,4,0,9,13,4,32,52,44,54,43,7,255,235,213,210,198,
192,199,191,184,171,189,198,179,186,173,157,145,133,140,143,166,200,216,227,251,233,224,219,193,197,220,224,235,255,251,
251,18,30,24,36,49,50,59,50,34,31,21,15,25,39,71,65,61,53,36,32,33,20,9,5,8,21,30,22,4,
13,21,23,28,24,18,14,5,253,253,254,0,3,3,4,6,7,9,6,4,3,1,0,0,168,6,10,0,0,255,
0,1,254,252,1,6,8,8,10,10,9,11,11,3,250,250,253,249,246,247,248,253,0,0,4,5,253,247,245,245,
242,239,244,253,3,2,3,8,5,1,0,255,3,3,0,3,7,12,13,22,27,19,10,5,9,10,7,9,9,255,
247,2,9,249,237,243,250,247,244,247,239,223,235,249,251,248,239,0,14,4,253,5,9,0,1,3,6,0,254,19,
17,10,17,29,31,18,13,17,21,252,238,227,204,214,246,2,4,10,21,38,37,8,227,217,225,212,196,201,217,235,
19,58,48,25,30,24,253,234,231,217,226,2,0,11,38,47,61,68,48,253,233,250,242,6,14,244,249,29,69,64,
50,22,0,246,232,222,185,188,230,235,242,4,6,4,14,11,217,194,213,218,218,219,235,253,17,20,0,252,6,15,
23,15,251,246,0,6,249,243,24,54,49,41,44,38,6,14,26,241,191,239,38,35,28,8,17,0,234,225,220,221,
199,209,241,249,0,23,13,241,236,244,6,14,12,252,236,246,250,10,31,33,29,34,76,66,3,249,13,16,5,255,
216,240,43,50,38,9,2,3,238,239,233,207,236,231,216,247,225,194,217,230,196,183,227,255,244,251,31,22,3,43,
44,16,9,30,28,229,231,228,230,24,55,55,51,53,35,13,240,250,254,224,237,255,243,236,250,15,37,13,229,212,
214,215,212,233,248,9,16,5,30,39,38,20,238,238,237,240,244,243,13,48,79,92,62,19,2,8,252,227,232,217,
231,25,46,53,35,4,1,19,253,223,215,223,244,249,5,254,7,10,5,22,248,238,226,227,239,221,220,222,0,15,
30,44,20,246,201,201,241,243,251,8,14,34,35,41,31,234,168,156,183,207,245,244,242,253,255,38,78,68,28,4,
232,189,169,177,207,230,9,26,23,41,79,66,52,49,234,191,225,15,42,60,52,74,101,83,92,69,32,8,235,254,
253,13,36,26,34,36,12,3,11,3,226,201,188,156,171,204,222,224,2,40,21,17,10,230,199,163,143,185,247,233,
219,21,38,39,39,14,250,230,203,199,230,248,241,23,88,78,61,44,252,204,199,211,190,184,210,2,23,17,46,82,
112,106,46,15,235,173,150,184,239,4,43,83,99,99,52,25,35,4,237,211,198,237,237,3,40,46,43,34,36,3,
224,206,203,217,234,255,244,247,21,43,36,9,242,218,215,200,218,4,250,244,32,41,21,24,14,0,228,213,227,213,
219,230,203,235,37,38,50,84,63,255,215,217,202,193,218,233,243,40,86,75,68,46,2,255,14,250,197,181,222,225,
0,37,12,42,69,60,32,240,226,223,217,214,222,252,13,52,79,44,46,51,24,230,220,247,230,219,207,224,1,245,
228,252,40,19,220,220,214,176,188,213,229,252,255,249,249,33,25,3,26,13,250,241,38,76,61,73,62,35,31,43,
46,14,235,242,35,73,59,2,228,252,247,246,14,5,224,185,208,220,187,196,206,228,249,247,11,13,236,204,218,235,
235,246,253,25,39,5,251,5,27,17,0,6,14,29,37,39,30,3,242,251,250,1,12,15,0,240,29,28,8,25,
4,2,247,223,239,241,251,254,229,229,0,14,12,23,13,235,241,15,243,181,225,30,31,30,245,242,0,12,27,248,
236,233,253,31,40,24,250,248,16,4,227,227,231,227,249,27,48,47,41,35,29,1,229,226,225,229,225,237,17,23,
249,11,44,34,19,32,23,231,222,242,244,249,12,253,249,9,22,32,27,15,242,247,14,242,195,192,212,233,243,245,
245,253,20,27,12,247,255,3,228,220,215,246,16,21,49,30,20,10,245,222,216,239,242,255,0,5,37,44,34,24,
23,15,241,229,246,245,229,240,0,14,35,42,39,37,29,14,241,206,204,227,216,235,7,11,45,80,83,43,21,0,
226,224,206,190,202,244,40,69,69,35,15,17,234,219,217,202,221,223,228,254,17,37,61,51,27,3,196,191,232,212,
190,223,12,32,26,22,12,254,230,234,232,195,198,243,12,244,252,33,73,77,43,26,8,243,221,247,18,14,14,35,
93,69,23,42,39,0,236,246,252,245,245,248,245,3,16,23,33,16,230,209,198,194,194,176,185,211,199,206,228,0,
2,252,43,46,4,5,10,0,246,247,26,36,30,46,58,63,93,90,54,27,13,252,234,255,2,5,0,38,43,6,
17,255,217,174,149,151,159,163,175,222,15,36,12,242,0,3,225,197,205,237,237,234,24,42,46,72,57,58,47,249,
0,17,16,24,27,35,24,5,24,62,50,28,22,27,21,249,221,198,211,227,249,3,11,5,232,215,212,208,186,223,
7,0,239,231,255,19,38,48,58,48,32,10,231,247,242,240,12,22,18,18,65,75,45,34,16,239,207,205,201,215,
224,209,234,0,245,253,16,10,248,211,208,221,217,216,219,4,44,53,38,41,28,0,1,25,26,253,253,9,31,13,
251,8,23,20,0,1,248,244,241,247,9,242,225,219,233,255,233,237,239,222,205,222,235,228,5,24,31,39,39,37,
43,27,236,228,5,3,240,0,35,43,32,38,26,12,20,33,46,28,249,255,39,38,12,249,254,18,8,240,205,194,
219,238,244,234,234,7,20,3,234,209,194,209,238,209,209,246,0,24,24,21,19,21,18,12,12,0,247,233,7,40,
17,253,254,4,26,41,19,9,37,35,23,24,16,8,243,249,243,203,207,210,201,203,230,19,29,23,9,5,5,3,
253,233,231,239,254,255,250,1,12,49,73,46,16,250,251,252,245,235,208,234,9,45,82,68,49,35,33,13,236,231,
217,194,201,226,243,236,236,12,25,17,10,0,12,254,220,198,187,200,223,244,250,10,10,244,8,25,15,245,225,226,
233,251,4,22,27,38,66,39,29,19,6,0,241,248,249,22,33,26,31,37,45,32,11,6,253,232,236,235,232,238,
242,5,23,19,2,5,253,251,231,219,238,231,234,6,19,16,23,5,4,11,5,246,241,254,237,237,251,23,43,36,
30,7,246,239,239,233,227,233,245,12,14,27,39,27,33,29,248,207,200,191,176,202,232,236,246,15,23,24,3,231,
238,243,238,209,225,246,243,15,36,63,72,58,35,17,4,230,218,226,249,19,31,60,65,48,64,67,35,17,239,218,
218,185,177,238,50,36,30,27,9,9,10,2,219,195,192,203,222,228,252,14,34,43,33,35,21,243,209,213,235,225,
227,25,63,67,68,35,239,250,233,213,248,229,210,249,21,17,24,24,26,13,227,218,215,179,156,186,241,8,255,22,
65,67,48,13,247,0,233,216,238,242,244,22,77,101,71,32,22,19,254,248,0,249,232,4,46,46,37,18,246,249,
252,216,181,160,160,203,11,41,25,33,58,47,20,245,200,179,205,228,233,254,21,30,37,70,67,11,7,250,207,195,
213,223,235,8,18,45,66,47,19,8,4,218,200,235,2,249,242,21,36,45,29,251,234,225,207,206,252,24,26,0,
19,42,16,3,0,238,206,185,202,236,0,251,31,67,40,36,44,63,25,221,218,234,249,252,3,33,52,34,31,34,
9,231,195,204,230,217,221,18,43,19,17,41,17,247,240,228,235,201,175,200,247,4,248,4,15,27,24,24,25,254,
236,254,33,34,10,20,43,27,4,255,16,252,235,248,250,18,15,10,8,16,6,239,247,251,243,212,204,216,231,0,
254,246,252,0,1,0,245,231,229,228,252,254,2,56,54,42,35,21,21,5,254,242,253,0,243,237,248,10,13,9,
10,12,15,26,12,251,240,239,251,8,16,9,0,244,249,0,4,15,5,10,12,249,236,229,0,19,20,9,2,255,
244,241,252,10,255,235,241,249,234,220,226,247,6,15,12,5,13,11,1,1,0,1,89,9,40,0,2,0,0,4,
1,0,2,255,254,255,250,2,254,246,254,2,255,251,251,0,253,252,253,1,0,0,2,2,1,3,4,6,2,6,
7,6,4,4,6,3,3,5,5,3,255,3,1,253,2,0,252,251,255,253,250,253,0,255,251,251,253,253,0,255,
250,252,1,2,255,1,0,1,2,1,1,3,2,1,1,3,8,3,3,2,6,7,6,10,254,1,11,254,255,6,
0,0,0,0,6,0,251,4,0,0,2,255,0,255,1,3,248,1,3,255,3,0,2,253,251,5,0,252,255,2,
1,252,249,255,240,208,216,240,247,241,244,0,255,254,254,255,15,14,5,4,7,9,14,9,14,15,10,11,1,8,
19,10,11,13,9,13,8,13,5,254,253,253,0,0,247,255,251,248,0,6,247,248,5,252,250,5,4,246,4,8,
3,253,5,0,8,9,254,1,2,6,5,1,2,9,4,252,227,226,225,239,242,237,246,248,249,243,246,250,0,9,
5,5,5,12,22,27,24,240,8,30,235,253,23,253,246,1,15,2,251,9,6,0,6,10,6,5,21,0,243,9,
15,0,234,252,3,240,235,0,254,234,244,2,2,14,15,16,2,8,11,239,3,249,247,249,1,3,240,235,2,10,
240,239,251,254,249,252,12,23,6,13,12,7,10,0,0,250,4,11,0,15,5,0,31,34,0,0,11,8,8,252,
8,18,252,248,241,241,249,237,239,243,241,245,2,255,252,255,0,8,13,244,206,218,240,254,0,15,252,247,10,13,
1,253,10,252,11,31,4,245,14,29,10,0,9,0,4,5,254,252,255,15,5,229,16,23,230,252,19,245,243,5,
251,232,10,6,241,13,10,245,240,2,21,240,230,21,13,248,242,247,25,3,252,5,239,9,25,244,246,252,16,27,
245,252,21,5,251,8,12,4,250,9,19,6,237,246,26,31,225,232,40,248,250,246,239,14,1,248,4,227,9,13,
211,11,27,243,230,0,9,250,249,12,13,234,235,22,11,246,245,0,1,3,11,0,2,10,254,254,0,7,5,248,
254,12,13,252,237,253,13,16,250,246,28,244,224,21,32,7,197,242,62,5,227,251,17,7,238,244,19,12,241,249,
0,17,18,237,7,6,250,18,246,232,17,17,238,244,247,24,7,227,0,0,9,255,242,15,1,7,253,249,16,10,
6,223,16,42,241,209,17,64,237,208,4,32,15,218,249,20,253,11,245,239,27,24,222,232,30,20,239,236,17,6,
231,244,17,30,222,233,20,30,249,239,246,4,28,228,228,39,7,234,5,16,17,253,216,10,23,5,239,246,46,0,
232,0,251,12,8,248,238,13,20,243,238,23,2,227,12,21,244,242,22,13,249,242,254,18,9,226,248,18,27,252,
198,250,57,253,215,254,40,18,203,4,46,2,1,5,240,246,58,14,208,218,42,48,208,210,49,38,214,228,0,17,
15,246,234,233,43,10,196,8,34,212,0,50,235,229,12,24,6,220,240,36,20,237,233,3,56,23,199,238,53,25,
214,225,42,25,228,240,24,10,18,241,206,12,52,253,193,232,55,56,223,192,23,84,215,217,48,250,234,5,49,246,
204,34,42,241,217,243,57,0,210,6,243,2,12,244,7,9,2,12,249,242,240,22,35,202,0,38,248,2,244,20,
3,231,10,16,4,224,1,43,235,238,44,248,241,251,254,19,248,198,40,62,196,224,62,242,232,8,4,3,246,0,
27,248,204,9,51,246,234,245,15,30,220,237,26,18,253,231,15,18,0,9,245,241,30,12,19,217,236,29,20,244,
249,6,241,2,10,0,237,7,249,247,18,8,243,3,21,206,5,25,13,225,219,50,247,229,4,247,7,29,241,221,
47,36,211,241,34,22,240,253,21,253,0,18,245,9,8,227,23,12,229,244,11,36,236,211,30,44,252,227,250,7,
249,245,21,0,235,39,221,227,55,8,254,252,218,252,39,242,217,25,29,5,202,29,73,213,197,29,30,225,12,7,
253,6,220,16,21,234,248,247,17,27,249,229,255,19,37,235,236,38,231,37,247,218,52,17,217,238,251,73,13,145,
31,56,223,237,0,26,0,243,1,248,3,12,252,238,12,24,238,235,22,6,220,12,16,248,3,251,2,2,24,222,
247,56,238,218,13,9,252,237,255,39,236,251,26,245,246,245,2,9,8,19,208,7,74,178,238,54,243,11,230,248,
27,249,12,0,235,28,56,245,191,247,104,252,180,13,36,9,232,181,56,61,207,202,252,51,17,205,237,60,225,230,
64,247,249,245,222,20,55,235,233,14,1,24,249,1,27,228,251,32,213,4,98,183,173,62,61,250,178,250,68,8,
209,237,24,253,249,33,206,8,30,0,235,232,64,7,215,247,15,10,254,1,0,246,226,45,30,222,230,247,17,54,
14,195,20,247,19,27,215,231,48,28,199,231,43,9,236,245,225,25,74,223,187,27,34,254,248,3,248,238,57,28,
161,6,101,219,245,226,23,77,166,5,16,238,37,230,222,14,4,47,220,198,57,5,214,28,228,254,55,234,227,25,
252,14,250,244,47,244,0,2,225,19,25,14,194,3,53,227,247,36,241,209,17,77,224,210,51,251,0,32,12,209,
237,33,8,247,251,240,28,2,229,247,34,16,240,196,16,67,235,199,255,39,6,38,199,223,126,232,183,41,246,23,
210,216,79,2,182,34,60,200,228,66,251,213,18,248,9,34,228,221,255,58,47,164,244,46,237,26,244,255,20,238,
219,38,34,208,9,6,6,18,202,45,18,204,13,39,243,224,32,235,226,28,44,243,200,37,33,217,244,35,249,206,
7,56,26,202,228,36,1,6,221,239,64,253,200,27,58,240,221,2,14,10,254,237,244,31,21,248,249,249,22,0,
224,2,36,249,206,28,18,232,241,4,32,32,209,237,47,20,240,235,7,34,249,239,235,19,24,246,187,30,62,208,
16,254,236,18,212,23,66,198,231,24,253,249,18,236,0,48,220,237,27,2,20,232,240,50,18,234,235,246,66,12,
159,2,68,250,220,19,249,233,40,26,184,44,26,194,255,29,252,16,255,213,31,252,245,16,1,246,13,5,233,48,
220,245,34,228,52,254,203,33,16,220,253,15,249,15,231,255,51,231,250,15,250,254,30,33,205,227,39,18,255,224,
247,250,233,43,255,205,248,15,18,252,214,2,64,245,191,58,52,204,22,253,240,46,254,186,39,37,236,200,17,80,
232,212,250,56,3,231,243,0,44,239,210,18,30,255,230,237,5,44,233,227,31,30,254,200,12,75,233,199,3,31,
22,242,0,238,7,42,224,179,86,60,174,200,64,63,206,212,30,41,13,216,243,13,12,246,14,251,208,22,29,245,
244,6,10,229,254,38,204,252,58,244,193,15,61,20,207,241,29,7,1,249,8,10,253,10,247,247,21,12,216,8,
11,8,6,185,1,106,207,177,42,46,11,199,208,71,11,212,229,10,26,250,234,235,37,54,249,228,0,21,40,223,
205,61,47,212,220,70,46,187,225,38,51,213,222,0,22,30,218,254,17,4,251,247,253,233,248,14,4,230,234,70,
18,189,16,21,5,5,242,3,3,251,18,7,237,211,64,58,166,214,65,51,194,210,56,47,231,203,232,92,55,142,
230,75,34,210,200,39,255,29,19,203,252,50,253,237,5,246,37,5,215,10,1,34,251,211,34,11,218,18,24,212,
25,6,210,14,23,216,243,34,27,242,214,11,23,15,244,209,255,67,243,215,12,22,36,190,250,76,244,209,5,14,
39,247,211,7,30,17,252,222,0,66,240,221,254,30,17,236,226,11,22,15,241,214,10,43,246,226,247,37,20,208,
248,60,242,213,3,28,22,230,254,13,250,14,32,18,200,229,61,240,249,6,222,20,21,236,240,242,24,8,235,236,
13,38,234,212,4,32,35,226,228,32,253,237,252,32,243,246,24,2,246,248,254,7,16,233,254,6,253,8,244,248,
18,18,0,254,243,254,3,249,4,239,18,28,219,239,28,255,250,16,249,12,6,244,17,212,30,62,193,225,73,27,
188,236,67,21,214,218,34,25,242,247,240,255,38,16,227,232,252,32,34,222,233,26,31,230,227,53,27,219,218,254,
18,7,8,6,6,228,4,34,223,5,29,253,241,242,9,6,252,231,8,17,0,3,214,251,31,254,10,248,253,18,
245,248,249,32,39,224,244,9,4,3,249,254,8,24,220,6,26,250,228,245,35,12,252,225,0,19,13,251,230,41,
240,228,23,255,241,247,5,247,235,30,15,191,17,61,228,216,28,51,226,238,27,255,21,11,220,3,45,249,242,241,
231,52,250,237,8,214,37,61,192,220,38,35,23,191,240,57,245,249,3,229,17,37,227,237,12,238,12,239,231,31,
21,238,239,5,36,239,217,59,17,226,254,228,16,39,1,237,253,30,7,215,239,39,14,231,236,47,236,210,56,249,
235,13,0,19,255,210,30,33,202,246,41,14,240,245,0,249,248,10,15,12,227,236,23,33,251,246,14,248,9,18,
249,240,228,14,51,4,195,251,70,227,242,15,2,2,232,33,8,212,26,13,217,30,10,252,13,255,249,215,35,54,
212,216,19,22,248,250,214,0,77,244,191,235,77,2,202,240,37,63,221,200,14,58,13,217,249,17,9,0,244,242,
11,24,240,217,41,24,197,250,18,8,243,237,23,249,10,18,232,231,45,16,216,246,6,50,218,203,56,47,226,228,
6,31,15,210,248,49,17,226,223,20,55,243,214,12,36,14,240,238,19,235,255,43,247,213,5,40,250,204,0,38,
4,241,250,227,26,16,232,2,0,33,231,229,34,255,244,8,255,254,15,13,231,17,23,231,5,30,246,240,251,10,
37,206,230,79,232,210,17,0,12,248,242,17,226,33,28,212,252,14,3,247,9,2,228,9,9,15,251,244,12,17,
0,228,4,24,251,15,17,230,247,8,34,9,215,18,25,223,14,13,234,17,3,215,15,27,217,234,16,42,215,227,
34,8,3,252,225,253,49,16,233,245,23,12,235,7,8,236,35,8,204,7,44,9,218,245,50,247,195,28,35,211,
0,1,17,1,248,13,235,243,7,20,252,232,0,3,255,9,241,0,7,250,6,8,241,6,5,228,31,20,247,240,
252,10,253,11,16,0,2,13,252,229,21,18,253,249,209,52,55,194,224,25,26,12,216,243,35,6,221,235,33,11,
243,237,245,42,8,225,255,250,1,42,250,193,24,50,240,244,242,36,34,203,239,48,6,224,251,8,251,19,7,221,
247,47,6,228,242,26,0,242,38,215,239,47,12,237,235,15,16,249,225,13,18,242,253,235,9,48,224,213,34,18,
234,248,18,254,231,4,36,0,237,4,10,17,3,238,13,8,253,16,242,249,33,0,228,248,41,9,216,249,18,8,
247,2,17,238,237,29,19,226,244,252,19,4,252,250,5,19,244,245,1,0,0,0,86,10,51,0,1,2,2,1,
1,2,2,1,2,1,1,1,1,1,1,2,1,2,1,1,1,1,0,0,1,1,1,1,0,1,1,0,0,251,
236,235,251,4,3,254,252,2,6,3,254,253,255,4,3,1,1,1,5,249,231,249,9,11,6,0,4,11,15,1,
254,255,2,7,3,2,0,5,4,2,1,2,4,1,1,0,0,1,0,254,0,0,0,0,255,0,0,254,255,253,
0,255,253,0,254,0,255,0,0,0,0,0,2,0,1,0,250,245,244,249,248,251,249,249,1,0,3,4,2,6,
1,3,3,0,3,6,5,5,7,8,9,8,6,3,6,9,255,6,1,3,0,5,0,255,255,0,2,248,0,252,
255,0,249,253,254,255,255,254,250,254,2,1,250,253,255,255,5,252,253,3,249,1,9,252,253,6,255,4,3,253,
7,251,3,8,251,1,255,7,251,250,10,252,255,3,0,2,1,2,0,0,3,254,1,3,248,7,3,5,9,8,
9,1,255,252,254,0,5,253,252,254,254,1,254,249,253,254,252,253,249,253,253,255,3,251,5,8,4,5,0,249,
0,0,0,3,7,18,16,11,13,10,252,1,255,249,2,247,0,0,250,2,244,253,250,242,254,249,244,252,249,251,
4,8,15,3,255,245,242,5,5,0,255,6,16,23,25,21,13,11,246,225,232,0,4,255,0,255,12,13,252,250,
0,251,250,1,248,252,5,0,1,0,0,11,0,254,254,7,10,255,255,6,2,5,11,244,250,240,243,0,0,2,
255,254,247,4,5,254,248,251,0,0,7,255,2,0,14,10,255,1,2,12,9,0,4,254,1,7,251,5,7,0,
2,253,2,2,243,0,6,243,245,9,0,251,249,255,16,240,0,10,245,12,254,245,6,4,250,2,2,246,8,1,
251,10,250,2,12,247,252,3,12,253,0,251,11,10,238,9,1,0,21,238,254,15,251,3,8,245,1,8,248,3,
4,242,2,0,248,0,253,12,247,250,10,245,9,4,241,255,17,3,245,0,4,15,250,1,9,253,6,1,0,6,
247,3,7,253,0,253,10,244,5,255,243,3,252,0,254,4,1,243,4,254,12,253,245,10,5,5,3,252,7,3,
2,4,0,0,4,8,251,4,2,0,249,0,8,245,0,249,254,11,241,0,251,248,16,3,244,3,1,10,1,240,
14,5,1,12,240,254,13,253,1,21,241,246,15,3,1,252,249,8,3,245,254,252,252,7,250,251,253,250,0,9,
7,0,3,24,250,10,13,240,27,8,240,1,6,1,7,249,242,5,254,12,247,236,7,247,255,8,231,2,252,246,
2,240,12,12,234,3,9,2,11,241,0,23,6,3,12,6,248,16,14,246,4,12,254,0,0,1,9,244,247,1,
2,251,251,255,2,255,237,10,14,236,18,9,233,16,4,229,1,247,255,14,224,10,11,241,13,251,3,15,6,9,
3,11,24,252,251,2,254,14,6,245,253,22,238,232,34,233,255,14,223,8,5,242,245,255,10,251,249,20,19,0,
14,6,14,17,243,1,3,234,6,248,247,29,255,234,246,236,10,0,248,225,252,0,11,253,235,1,1,250,8,12,
247,8,4,18,10,252,21,2,17,4,10,25,244,25,4,246,17,247,11,17,13,248,253,13,254,11,234,228,253,209,
231,15,236,244,1,230,18,253,253,0,248,252,245,14,13,249,8,5,253,44,251,9,19,234,24,18,246,0,0,17,
5,0,1,0,17,251,239,255,12,250,249,243,10,9,229,5,0,240,4,1,249,251,2,10,251,255,0,248,14,3,
243,251,12,4,235,22,9,251,0,4,12,252,242,15,1,253,19,232,4,15,2,251,245,10,11,246,249,7,1,4,
1,253,2,245,12,1,252,249,247,14,8,246,1,1,11,243,252,20,240,7,7,248,2,249,19,14,226,250,20,11,
248,245,0,0,11,254,244,8,249,240,17,11,239,249,0,29,236,4,5,255,20,233,1,12,3,1,252,16,254,246,
17,1,11,248,254,21,238,246,15,0,2,237,250,8,0,250,255,4,235,20,2,240,5,246,7,19,246,231,25,14,
254,234,249,27,4,0,18,228,249,35,2,237,8,3,247,14,9,253,228,13,16,246,5,241,3,11,235,19,0,234,
29,242,1,8,245,24,244,239,25,255,255,254,251,9,250,250,12,19,218,13,9,237,33,247,226,25,248,4,4,244,
11,240,19,15,230,7,0,7,253,250,3,254,23,249,222,39,9,231,30,243,252,29,222,252,14,254,9,239,2,16,
244,252,15,233,247,39,241,240,19,240,12,252,2,15,237,249,0,26,255,250,255,243,28,13,244,249,239,20,24,243,
238,255,1,14,30,230,246,13,0,19,238,249,12,250,248,12,251,248,20,19,254,253,24,22,251,0,11,7,1,0,
6,250,0,33,3,236,253,16,16,252,249,3,7,21,8,242,14,25,239,14,13,232,5,17,20,8,241,245,28,8,
246,17,5,3,5,246,252,14,20,10,221,16,57,238,239,3,12,26,240,253,1,248,31,4,229,25,17,249,252,21,
22,241,253,18,3,255,0,251,27,6,217,19,7,244,22,245,247,12,8,254,19,6,246,10,11,8,0,234,4,27,
2,254,244,13,48,1,233,3,25,5,249,1,35,6,1,7,237,24,39,249,231,22,27,242,247,17,7,11,31,234,
251,22,9,20,244,250,32,247,5,21,0,21,247,246,25,5,2,25,11,243,20,13,246,23,253,6,29,253,4,17,
1,10,253,250,19,5,255,0,250,21,35,233,243,32,37,254,235,13,19,0,0,255,19,255,247,22,4,250,13,249,
245,31,2,250,2,254,0,38,29,231,248,32,13,241,6,6,238,20,229,227,58,16,212,253,27,12,230,253,34,20,
1,240,246,7,26,9,244,252,253,249,6,4,10,0,13,15,5,254,248,30,48,225,220,42,13,252,237,215,31,68,
245,218,13,55,23,197,244,52,41,253,232,2,28,17,242,0,17,255,0,245,10,43,245,220,21,59,237,223,31,38,
4,244,232,19,33,2,248,243,28,20,253,252,242,37,19,214,13,24,0,12,7,239,14,27,229,250,24,7,1,241,
255,33,5,233,247,40,36,245,236,2,36,17,240,251,251,14,30,240,228,21,15,8,8,228,5,43,248,253,22,19,
249,238,7,28,18,222,252,21,15,4,241,238,22,19,244,248,11,3,238,43,29,236,0,17,43,7,227,18,16,6,
21,227,231,31,25,244,245,244,24,21,235,0,29,2,3,18,236,252,40,0,241,9,255,31,11,214,6,27,4,248,
243,246,39,9,229,8,21,9,14,244,232,30,32,248,239,3,13,239,11,16,233,11,35,250,244,24,18,235,8,30,
10,241,250,32,1,255,20,244,249,28,19,247,0,10,3,18,22,218,7,42,249,5,13,244,0,247,5,31,255,251,
3,5,4,10,0,3,31,242,241,13,28,6,236,21,45,250,235,12,21,15,246,6,24,251,244,254,23,13,226,254,
41,239,0,26,235,7,29,255,233,229,49,22,218,10,10,2,25,254,228,14,25,243,250,6,1,9,251,250,32,255,
247,31,245,242,20,10,246,30,27,222,236,46,24,209,4,30,249,0,15,236,244,36,29,240,254,35,3,241,10,9,
0,222,8,41,251,211,7,43,249,252,240,245,46,6,247,5,250,43,250,213,41,28,233,6,12,38,4,211,22,51,
245,233,248,29,41,249,228,0,59,36,217,239,31,20,27,222,215,62,2,211,250,37,21,243,238,2,26,5,3,0,
254,3,255,5,251,15,243,254,34,13,246,255,19,24,249,230,3,35,14,244,254,8,34,13,9,251,218,18,64,222,
195,14,26,24,232,235,14,11,8,236,234,56,20,204,21,36,249,8,249,249,25,237,255,18,240,14,12,230,31,41,
252,227,13,29,250,229,12,37,1,235,18,245,235,67,9,227,5,11,243,9,15,246,9,21,10,248,252,251,41,37,
241,248,254,11,37,18,239,5,15,20,10,250,10,6,250,27,2,237,22,0,0,26,243,1,33,231,9,46,235,245,
9,30,30,186,244,60,27,7,219,251,54,24,255,232,20,58,246,195,11,40,18,2,200,0,60,42,225,219,32,32,
4,232,254,5,13,37,225,247,42,255,227,19,10,230,5,26,236,255,19,8,10,21,242,238,36,3,9,1,243,53,
29,200,245,43,246,25,1,188,17,48,233,0,7,240,28,12,233,10,17,0,250,17,31,237,219,30,38,12,249,237,
0,38,249,9,12,224,60,17,164,60,69,186,246,2,12,106,244,132,46,76,41,222,179,29,40,30,238,186,37,78,
238,227,0,40,33,7,250,249,21,27,237,8,47,202,26,57,239,25,236,237,60,21,231,223,21,81,219,184,42,30,
0,25,255,224,15,38,250,232,250,0,32,7,228,22,9,244,2,23,255,230,20,17,255,249,243,37,42,244,226,0,
25,5,245,12,12,242,15,41,228,203,64,67,199,241,34,10,22,238,231,33,13,250,243,235,40,21,193,10,46,244,
242,253,24,40,251,232,244,35,50,223,212,37,47,229,232,14,252,39,22,231,0,48,2,226,27,35,233,2,24,12,
1,209,37,53,221,246,27,10,27,253,252,15,250,2,6,5,50,247,212,26,37,1,239,244,44,30,236,7,247,30,
34,228,242,4,45,0,197,22,59,255,233,254,1,23,24,240,237,47,20,242,236,32,21,237,35,4,209,13,62,3,
229,15,253,10,20,235,2,39,224,255,38,243,8,244,227,73,17,203,11,38,243,6,2,255,35,246,10,246,242,61,
235,206,61,254,232,39,248,246,42,13,226,253,37,13,5,9,237,24,47,227,237,51,19,232,18,7,238,27,17,235,
8,14,228,21,11,236,37,2,243,12,9,8,27,0,231,3,22,253,229,38,1,221,31,13,251,8,248,17,255,250,
32,5,14,30,232,246,50,0,241,23,230,28,24,208,32,55,217,214,74,45,182,1,59,19,246,233,25,4,6,7,
214,40,29,241,252,0,16,21,16,218,14,61,242,245,7,0,43,12,235,10,3,6,30,240,245,49,243,219,16,66,
11,175,2,101,238,236,10,212,50,100,166,173,111,43,204,232,10,50,1,225,11,20,4,254,243,8,35,235,220,17,
22,241,242,34,6,243,6,248,243,44,0,230,6,15,238,0,9,0,35,235,234,51,249,218,23,11,7,250,223,24,
33,7,228,230,58,27,201,15,25,248,31,27,218,212,78,56,189,200,68,66,221,212,253,34,62,218,221,32,13,6,
7,7,8,14,251,6,23,30,210,250,62,19,230,227,29,29,252,245,60,246,173,65,92,206,232,54,17,230,36,27,
194,14,52,208,250,50,244,197,38,59,212,253,12,7,5,249,239,28,10,0,227,0,70,241,226,27,21,12,225,241,
27,18,3,226,7,33,223,1,34,11,7,224,14,56,248,220,33,10,247,247,247,42,228,208,44,51,239,237,245,22,
56,202,245,54,241,1,2,245,43,251,220,18,29,246,232,33,31,236,233,6,57,5,221,250,0,32,22,200,35,54,
217,10,2,233,60,35,211,0,27,26,253,228,0,35,36,254,208,4,81,223,228,58,252,236,29,231,16,50,212,245,
17,33,30,191,245,72,20,237,240,243,43,27,252,3,252,249,18,48,250,247,32,252,232,42,11,210,39,53,250,196,
8,57,250,243,34,242,254,45,230,242,3,30,28,239,232,248,41,15,235,31,233,233,48,3,234,2,13,20,14,254,
10,235,247,40,246,28,241,224,41,18,254,224,6,39,17,244,222,0,47,12,223,11,33,246,255,0,243,30,32,235,
219,35,12,241,38,253,224,30,34,237,223,25,30,252,2,247,27,252,240,45,247,237,7,17,16,250,222,17,69,230,
224,37,7,53,247,198,56,34,215,25,10,238,42,11,238,22,239,31,29,223,12,1,17,6,240,39,225,238,76,244,
216,6,33,32,239,241,46,227,20,52,174,4,61,246,12,249,1,56,233,234,38,239,12,56,221,215,33,17,252,7,
2,9,0,0,90,0,3,0,5,0,136,0,200,0,64,6,40,10,232,13,24,16,124,21,55,14,13,25,10,7,
3,3,0,0,200,212,187,255,255,175,200,212,187,44,30,50,85,55,0,0,0,0,40,0,0,0,0,50,124,182,
40,53,0,191,197,24,223,182,176,250,125,182,5,0,160,0,240,0,160,5,40,10,199,14,36,19,0,25,35,13,
15,25,13,9,7,3,7,7,135,142,160,160,150,175,135,142,160,44,35,30,90,53,0,0,0,0,40,0,0,0,
0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,9,0,160,0,240,0,160,5,40,10,199,14,36,19,
0,25,0,13,15,25,13,9,7,3,7,7,135,142,160,160,150,175,135,142,160,44,35,30,90,53,0,0,0,0,
40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,55,1,12,0,3,4,5,1,8,248,
0,178,140,255,16,1,251,245,245,245,239,226,221,249,31,37,28,33,28,31,38,43,44,49,55,52,43,43,39,41,
30,29,23,25,23,21,10,6,10,3,3,0,2,3,11,11,7,240,202,209,221,230,252,13,19,14,250,9,219,164,
223,255,242,234,247,246,247,250,247,255,214,197,207,206,226,238,6,14,25,40,51,58,37,11,3,7,8,2,224,231,
31,56,68,76,86,82,81,65,53,57,65,34,19,51,54,62,60,41,36,22,12,248,239,235,250,250,254,11,15,28,
41,48,45,37,39,24,12,253,0,29,44,54,62,65,67,59,50,40,41,41,30,35,46,55,69,78,73,68,65,56,
46,42,30,22,18,18,27,254,233,4,26,27,7,0,240,233,223,213,217,235,249,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,253,4,19,0,13,13,5,6,19,14,14,11,10,6,249,248,0,254,11,6,6,4,3,211,
167,140,139,164,184,212,239,17,19,2,249,9,15,12,13,20,26,27,27,23,9,1,246,243,2,22,44,52,55,53,
50,50,51,58,57,53,50,45,24,10,0,246,1,4,7,255,213,209,197,175,173,188,217,225,220,239,239,223,222,229,
234,245,247,251,0,0,3,3,4,5,1,0,0,1,7,9,7,11,16,18,17,22,26,26,29,24,21,21,20,23,
12,15,14,11,10,4,253,248,232,227,239,239,239,249,0,8,1,1,6,2,249,251,223,235,1,254,241,235,245,255,
249,241,247,0,2,0,250,3,13,9,13,19,24,25,23,17,21,22,16,10,7,7,12,5,3,2,4,8,4,1,
0,255,255,254,248,244,245,250,245,244,244,232,227,232,237,236,237,238,242,246,250,253,253,0,9,13,17,17,13,16,
18,21,20,14,9,11,12,10,13,12,11,9,4,254,0,253,252,249,233,231,235,229,240,2,2,254,247,245,244,241,
242,247,0,7,11,13,19,22,19,14,11,11,7,2,1,5,10,18,19,16,20,12,0,247,246,247,247,249,249,251,
251,244,248,250,247,245,236,231,232,232,235,245,254,2,4,5,9,5,254,0,4,12,10,9,12,19,27,32,27,24,
19,16,7,5,6,2,254,255,254,248,245,235,228,230,234,237,233,234,233,236,241,252,9,9,4,0,251,242,249,15,
22,17,16,18,14,17,23,26,17,6,255,255,247,244,241,244,247,255,255,249,246,255,1,6,9,7,10,10,14,14,
12,9,0,0,8,22,37,39,19,255,242,237,236,245,252,252,244,238,240,244,248,250,250,246,1,18,24,4,3,29,
33,11,11,15,10,251,241,1,12,255,230,210,207,225,225,221,213,210,225,243,240,245,249,7,15,20,44,38,25,26,
28,12,0,14,15,248,0,24,17,12,0,242,227,227,11,7,214,233,255,248,251,2,27,16,2,17,17,3,21,5,
233,223,2,24,242,220,244,252,243,4,18,1,231,250,2,234,248,11,13,0,18,66,55,33,40,31,2,224,231,0,
2,6,7,250,247,6,238,211,208,247,15,249,231,234,245,15,25,6,245,237,239,243,9,34,61,66,37,5,0,12,
2,224,222,22,38,22,22,23,16,16,13,7,2,22,41,28,7,253,238,4,58,77,60,15,224,207,213,254,6,222,
218,240,241,220,214,228,220,225,248,18,39,5,214,185,214,0,32,12,243,216,221,242,246,231,243,247,235,199,185,210,
211,205,222,245,251,239,245,240,223,242,0,253,13,47,63,47,40,36,19,14,30,7,223,225,238,238,216,221,251,10,
2,246,239,12,9,11,19,55,105,106,97,71,39,22,26,25,33,41,73,69,27,238,239,244,9,42,31,11,6,23,
11,39,79,44,244,6,57,80,32,253,242,8,18,6,237,203,251,41,6,230,251,229,191,202,228,248,0,7,248,219,
245,245,221,200,222,243,212,191,206,5,20,244,186,163,176,186,229,244,219,230,249,251,221,211,195,210,230,248,6,224,
221,231,1,12,5,244,226,237,6,4,250,2,9,241,244,29,50,23,0,16,14,1,1,16,14,13,25,32,6,236,
254,10,251,242,5,13,0,31,77,72,22,2,16,16,19,29,28,26,57,59,22,242,236,245,248,5,28,53,72,70,
40,5,245,248,5,21,34,25,0,2,15,11,253,242,238,245,15,28,16,244,239,243,8,24,1,223,214,243,34,33,
240,187,212,14,64,57,19,0,226,218,189,198,239,26,44,12,231,216,223,200,166,189,231,249,243,22,46,254,236,221,
226,240,34,27,244,6,64,87,39,49,70,16,229,244,9,5,18,56,59,33,29,0,195,209,231,230,220,243,14,242,
241,13,20,0,6,12,0,255,252,17,3,21,5,233,223,2,24,242,220,244,252,243,4,18,1,231,250,2,234,248,
11,13,0,18,66,55,33,40,31,2,224,231,0,2,6,7,250,247,6,238,211,208,247,15,249,231,234,245,15,25,
6,245,237,239,243,9,34,61,66,37,5,0,12,2,224,222,22,38,22,22,23,16,16,13,7,2,22,41,28,7,
253,238,4,58,77,60,15,224,207,213,254,6,222,218,240,241,220,214,228,220,225,248,18,39,5,214,185,214,0,32,
12,243,216,221,242,246,231,243,247,235,199,185,210,211,205,222,245,251,239,245,240,223,242,0,253,13,47,63,47,40,
36,19,14,30,7,223,225,238,238,216,221,251,10,2,246,239,12,9,11,19,55,105,106,97,71,39,22,26,25,33,
41,73,69,27,238,239,244,9,42,31,11,6,23,11,39,79,44,244,6,57,80,32,253,242,8,18,6,237,203,251,
41,6,230,251,229,191,202,228,248,0,7,248,219,245,245,221,200,222,243,212,191,206,5,20,244,186,163,176,186,229,
244,219,230,249,251,221,211,195,210,230,248,6,224,221,231,1,12,5,244,226,237,6,4,250,2,9,241,244,29,50,
23,0,16,14,1,1,16,14,13,25,32,6,236,254,10,251,242,5,13,0,31,77,72,22,2,16,16,19,29,28,
26,57,59,22,242,236,245,248,5,28,53,72,70,40,5,245,248,5,21,34,25,0,2,15,11,253,242,238,245,15,
28,16,244,239,243,8,24,1,223,214,243,34,33,240,187,212,14,64,57,19,0,226,218,189,198,239,26,44,12,231,
216,223,200,166,189,231,249,243,22,46,254,236,221,226,240,34,27,244,6,64,87,39,49,70,16,229,244,9,5,18,
56,59,33,29,0,195,209,231,230,220,243,14,242,241,13,20,0,6,12,0,255,252,4,0,18,36,31,26,252,221,
182,181,209,192,210,237,23,17,235,180,131,157,210,229,216,219,230,227,248,16,41,20,250,17,33,38,22,0,0,0,
63,2,30,0,3,7,4,5,7,0,3,254,217,209,5,49,40,4,238,252,21,22,6,0,8,16,13,3,2,8,
10,8,7,6,6,9,13,12,9,7,8,6,5,8,8,8,7,4,5,6,6,6,3,3,6,3,4,4,253,5,
8,233,222,2,38,35,246,219,4,48,53,25,216,200,12,40,10,5,20,38,40,1,237,8,31,36,26,6,7,19,
8,232,212,223,249,11,10,0,9,23,10,12,19,252,246,2,0,9,10,253,10,11,246,1,16,24,33,1,240,12,
10,3,13,242,235,14,13,2,11,254,244,13,29,23,6,245,0,30,25,2,253,248,246,6,8,252,2,10,9,12,
1,249,13,28,23,17,3,1,20,23,16,19,15,16,22,8,3,16,243,209,245,29,21,12,8,6,13,0,253,23,
15,0,15,5,253,15,8,0,4,247,0,12,252,1,14,7,9,0,249,13,13,4,3,246,255,16,7,4,2,2,
17,254,247,22,6,245,9,0,0,15,253,8,24,250,254,21,15,10,246,249,35,11,233,15,22,4,26,13,242,5,
19,3,253,0,4,14,19,5,255,8,3,0,7,247,0,31,248,227,24,15,236,22,27,225,243,40,14,227,252,32,
14,242,244,9,17,252,249,18,11,1,2,233,0,44,254,232,21,9,4,23,240,241,20,3,9,15,253,18,2,232,
25,16,240,22,2,243,41,9,229,18,7,252,30,7,235,240,0,23,0,236,13,0,240,12,251,243,22,255,238,16,
12,7,35,16,240,6,27,8,10,31,23,5,253,1,21,24,13,3,248,14,35,14,9,241,229,48,33,220,19,12,
231,48,10,220,51,0,208,58,22,200,255,31,39,11,221,13,29,1,20,245,253,47,246,241,27,243,1,19,0,37,
247,209,44,32,239,18,7,15,30,234,255,36,7,249,236,9,44,249,244,18,7,19,249,246,42,239,230,46,6,14,
35,216,11,39,226,31,14,205,53,35,205,15,21,248,16,10,19,252,243,36,248,13,66,183,216,118,4,212,27,228,
16,64,235,242,248,228,20,11,23,30,195,249,72,250,248,0,221,33,39,247,20,252,236,26,20,21,13,232,3,28,
26,8,208,248,58,0,220,222,237,65,33,183,4,96,26,192,224,99,91,197,210,61,30,234,250,7,254,244,252,20,
41,5,222,36,65,228,231,25,3,25,24,252,32,238,192,42,54,222,225,14,43,3,219,27,26,228,19,21,254,22,
231,220,26,18,8,19,28,31,224,248,59,227,243,53,202,21,126,193,181,65,22,40,30,177,253,47,240,5,240,247,
51,216,210,53,241,227,47,255,243,0,191,4,21,0,219,229,3,19,255,1,253,238,240,255,11,255,208,218,22,67,
15,200,201,255,40,29,223,234,62,56,20,217,220,255,20,18,38,11,209,222,6,56,28,232,29,32,24,239,191,255,
32,13,241,204,241,19,237,210,230,232,233,49,50,234,189,201,35,55,228,191,206,254,35,236,225,8,23,0,211,236,
24,61,33,232,235,17,63,26,247,2,245,32,17,49,10,236,30,48,36,1,243,5,19,25,244,241,10,34,16,2,
246,239,28,26,0,253,1,242,239,246,3,10,0,242,215,0,30,10,5,249,239,227,237,239,6,238,15,47,10,247,
232,7,4,239,251,24,8,251,218,206,17,11,210,214,255,21,19,27,8,254,251,17,246,253,13,10,0,8,248,248,
0,244,244,0,40,27,249,235,1,23,239,222,242,12,37,255,216,237,25,28,0,254,5,254,244,236,2,37,11,233,
0,0,253,6,244,255,28,24,218,233,238,234,0,3,1,14,13,5,248,7,244,237,2,35,11,239,242,18,25,4,
249,251,23,27,236,236,4,5,2,246,235,253,243,240,249,254,2,18,47,14,246,252,14,29,6,222,239,15,32,30,
10,226,237,3,26,31,232,247,2,231,12,19,10,0,220,241,31,7,18,1,243,243,10,30,2,228,221,255,4,252,
233,4,16,242,15,249,5,17,1,25,33,243,230,226,0,26,7,212,241,247,243,33,25,2,0,14,26,244,227,247,
5,228,228,3,30,23,17,208,180,236,38,32,240,230,254,11,5,254,237,225,8,35,60,229,212,21,28,35,17,248,
212,208,0,39,29,227,204,215,3,45,35,4,6,7,14,1,4,253,251,17,42,46,236,247,0,2,14,14,6,0,
245,208,249,14,17,14,233,239,20,250,245,4,9,28,233,5,62,23,233,199,247,48,24,239,207,13,27,245,237,239,
237,247,20,20,241,242,14,8,251,214,203,5,77,5,229,233,239,36,58,10,7,12,237,244,16,25,2,251,1,24,
3,224,252,27,21,250,228,242,44,57,30,226,170,8,58,28,209,249,7,4,21,241,202,0,7,251,207,252,1,233,
7,5,17,36,253,232,219,3,55,65,224,209,243,0,251,2,25,15,11,218,217,17,15,13,9,0,229,228,7,6,
254,241,6,42,246,187,213,245,36,27,3,233,213,245,11,19,254,0,12,244,243,17,21,252,246,19,18,26,254,229,
235,35,68,21,230,216,252,33,32,18,242,247,13,21,8,250,8,20,247,247,18,21,230,238,42,16,7,249,0,9,
0,9,24,23,234,10,40,15,0,233,0,25,0,228,7,13,253,24,24,221,199,244,20,228,205,1,48,26,208,219,
7,13,237,255,27,27,223,185,197,27,0,229,230,216,240,37,42,247,225,200,36,70,23,248,1,42,229,204,3,18,
29,11,226,246,17,15,12,20,22,21,0,205,224,253,43,63,32,209,201,235,0,38,13,255,189,221,25,20,255,238,
235,255,27,20,238,234,6,248,12,19,239,242,33,30,15,230,246,15,22,26,16,12,0,252,11,31,20,244,247,40,
45,6,221,225,40,29,240,190,194,18,54,254,210,219,249,27,13,230,225,220,254,61,43,223,197,202,0,79,48,243,
203,205,40,96,43,230,192,246,47,40,2,235,205,6,66,9,209,203,230,45,44,255,241,211,221,22,63,54,1,205,
207,35,67,36,21,252,233,19,34,46,255,199,1,88,67,215,135,235,72,62,252,176,231,1,12,0,233,222,239,27,
249,219,228,255,8,231,206,224,14,26,24,10,253,217,203,205,39,83,42,237,162,237,50,11,2,242,39,240,237,245,
254,8,254,11,235,201,246,17,241,27,33,21,25,236,228,12,49,64,34,0,207,18,56,16,231,243,16,9,255,235,
20,53,27,226,200,180,3,68,22,5,215,249,17,255,7,250,13,8,4,41,33,232,224,6,15,255,234,220,252,40,
35,254,187,199,232,34,51,248,233,220,232,55,0,216,1,27,27,251,220,213,250,47,50,8,201,195,11,25,11,3,
11,29,14,230,2,45,47,24,19,247,215,216,25,47,7,219,227,7,32,30,15,23,255,226,208,233,23,2,243,250,
2,2,211,198,234,2,50,27,206,196,232,9,13,13,250,244,231,244,241,5,16,1,242,10,4,239,240,21,41,23,
219,227,50,37,15,251,2,22,5,3,184,227,91,45,20,245,234,235,241,15,22,251,253,245,32,18,233,215,246,34,
51,29,13,237,19,58,19,241,3,18,250,11,32,37,8,247,2,11,235,211,216,17,99,20,224,200,217,252,231,252,
19,3,244,246,17,34,8,219,240,3,234,248,254,3,7,23,25,243,226,251,21,47,15,242,246,26,35,14,204,178,
242,29,10,19,25,12,233,240,238,242,249,14,240,215,248,4,15,21,247,247,8,5,250,254,2,254,253,2,237,233,
19,36,16,249,251,34,28,245,237,244,16,39,10,251,244,244,13,12,225,212,224,29,9,239,244,0,1,11,12,7,
252,248,7,0,249,224,217,239,14,24,6,225,175,190,0,26,11,3,243,253,249,11,31,27,243,228,29,32,5,0,
243,252,10,52,37,239,195,251,74,46,4,211,167,32,119,72,12,212,210,2,19,12,33,53,19,11,3,223,239,9,
18,31,8,223,207,246,13,17,16,244,230,230,30,46,15,249,224,250,20,6,238,239,18,24,20,1,221,196,241,25,
39,38,4,230,225,34,29,237,204,236,16,50,47,240,177,207,14,26,22,229,196,247,1,251,0,229,243,12,10,0,
46,3,31,0,14,38,18,32,39,17,243,10,31,23,4,9,21,31,17,8,19,34,19,38,9,255,18,33,29,22,
31,239,6,20,17,41,17,5,6,16,45,17,5,36,34,7,5,37,42,25,1,14,15,21,252,6,22,31,35,0,
3,250,45,32,24,24,245,16,27,23,48,38,15,249,250,25,9,250,24,16,39,16,24,27,39,31,232,29,33,30,
24,14,9,26,0,0,21,38,26,23,23,4,1,36,8,16,25,250,6,13,57,7,240,10,35,28,27,30,21,28,
16,42,23,3,19,13,37,18,19,37,63,9,0,42,55,53,231,15,63,55,15,1,24,253,40,32,40,6,31,27,
250,10,25,34,13,9,31,19,15,20,30,10,15,3,60,43,224,0,45,53,18,5,40,19,252,27,10,12,49,22,
242,252,44,18,45,14,2,233,37,36,242,7,37,19,3,24,30,1,5,58,3,252,8,29,40,15,11,14,3,255,
0,37,36,11,245,17,55,249,255,25,48,21,252,18,48,23,237,235,34,38,235,240,39,36,16,23,21,1,15,20,
26,44,1,19,23,10,46,33,221,229,36,32,241,254,1,12,39,56,60,251,8,19,248,34,26,21,16,19,17,14,
20,249,28,18,21,29,242,239,35,47,53,25,234,34,47,255,15,45,32,15,27,3,249,12,46,36,22,41,47,222,
238,62,42,11,228,11,55,29,221,5,73,31,13,20,248,252,5,42,59,15,27,14,31,10,244,48,51,33,245,11,
31,253,252,9,48,18,217,242,21,53,84,25,218,33,34,39,26,21,28,1,29,4,238,12,249,32,50,0,230,36,
35,10,245,225,2,75,65,2,0,246,48,45,241,235,14,34,51,45,4,224,6,15,90,23,190,33,93,28,61,28,
241,183,15,47,30,12,243,240,2,89,65,216,221,22,58,65,8,234,6,30,10,21,68,242,202,60,42,3,245,176,
6,45,64,25,229,222,32,47,16,238,223,65,50,241,236,27,81,252,57,64,7,235,253,22,46,23,252,0,55,61,
8,255,215,255,49,85,23,206,253,10,237,71,230,201,41,49,47,25,225,208,65,66,251,246,6,69,41,20,21,245,
242,27,49,4,38,52,1,220,2,48,221,248,6,11,46,55,199,208,34,16,45,29,177,41,84,33,254,8,216,55,
66,22,248,208,4,63,33,21,4,253,251,28,11,37,84,42,21,239,188,44,51,31,29,41,9,219,1,243,38,108,
191,254,62,242,239,60,12,13,71,11,215,32,74,1,238,55,53,248,225,227,88,112,0,57,11,217,36,4,25,55,
38,44,9,3,57,81,18,247,233,63,8,9,43,52,12,21,32,22,48,44,253,9,60,56,50,30,2,211,26,78,
75,43,3,13,46,255,250,57,228,211,52,82,255,233,50,200,232,66,107,252,12,10,50,22,242,23,12,14,18,47,
25,2,3,32,53,39,15,228,47,9,13,17,46,241,234,59,16,233,20,20,50,250,92,17,218,253,248,243,58,7,
201,20,232,221,9,87,96,3,225,242,250,14,13,0,20,64,9,13,231,238,63,49,36,253,209,207,254,70,40,30,
252,131,206,66,21,51,26,241,28,17,242,255,248,61,42,233,20,77,46,222,188,25,98,85,55,243,8,16,249,7,
60,43,48,55,8,185,223,76,249,14,23,11,253,66,39,255,235,7,37,5,41,18,42,232,251,38,92,50,192,2,
1,245,5,53,87,9,250,236,245,22,36,213,236,62,109,71,243,224,253,80,101,248,232,57,71,38,255,254,34,48,
232,240,91,78,171,193,43,91,49,246,221,250,235,61,84,227,223,4,14,27,29,198,238,31,8,82,2,184,50,42,
251,254,30,33,63,39,234,234,0,0,254,6,35,0,0,0,1,2,1,0,0,1,1,0,0,0,253,251,250,247,
243,240,239,242,249,2,5,11,15,18,17,20,19,14,11,1,235,224,232,234,223,235,0,253,250,14,25,21,24,26,
22,20,11,254,253,249,235,232,240,241,240,249,255,7,12,19,21,26,21,14,15,6,0,248,250,241,241,245,244,246,
255,6,8,14,20,15,13,16,11,5,2,239,210,214,230,219,220,244,246,245,12,25,26,37,33,22,26,15,254,250,
250,236,236,243,241,245,249,4,17,26,23,25,39,27,12,16,9,242,214,192,208,228,222,206,235,251,237,5,34,46,
41,40,38,36,28,1,255,4,242,227,240,252,241,241,7,19,17,24,28,32,23,18,10,9,253,234,243,242,235,243,
27,52,245,4,31,44,247,28,43,245,246,241,235,219,210,203,210,238,241,7,38,22,48,61,51,24,252,228,200,200,
173,166,202,221,210,248,27,49,35,67,63,40,14,245,232,189,174,162,179,174,189,226,8,30,55,92,86,75,72,54,
22,0,253,224,204,207,193,211,227,17,26,56,76,84,83,72,63,44,11,248,248,224,212,215,229,221,241,6,4,23,
27,32,39,13,254,2,248,212,199,208,165,183,203,200,221,25,61,46,65,85,60,33,44,0,185,182,194,158,159,224,
222,0,46,64,73,111,120,86,86,67,17,248,226,206,181,183,198,217,242,2,29,46,48,45,45,24,243,205,180,153,
131,148,158,168,192,231,15,49,86,95,104,105,94,69,48,23,255,234,215,211,207,210,221,242,8,31,66,70,79,88,
68,48,25,5,239,220,197,201,203,205,221,254,1,14,36,42,34,31,27,1,241,244,219,199,208,213,203,220,1,0,
3,38,39,28,27,36,13,0,241,229,222,224,236,238,242,247,3,1,0,4,249,235,238,239,233,241,248,0,2,22,
45,53,48,42,33,24,35,2,249,254,243,211,237,247,224,250,10,10,253,14,6,14,14,9,0,1,248,238,248,251,
244,231,232,234,2,0,249,4,11,7,8,21,19,13,18,11,242,238,246,252,245,239,241,0,2,2,0,3,12,5,
7,2,6,2,13,6,238,242,4,13,0,247,7,16,20,12,11,12,28,38,23,13,12,6,247,244,225,219,217,230,
223,233,0,5,8,20,17,15,19,23,1,12,32,33,19,18,13,238,252,253,239,235,252,225,205,237,229,216,253,250,
235,231,249,227,234,253,248,238,246,253,0,6,27,33,51,52,40,33,56,47,42,32,27,3,6,19,248,235,230,221,
216,226,231,216,228,240,222,234,254,250,232,234,233,221,221,232,230,236,247,7,2,248,2,13,23,30,33,26,28,39,
46,52,51,46,44,34,22,27,26,2,10,3,241,233,252,253,245,4,15,0,5,10,9,235,238,234,215,212,219,203,
200,223,239,238,14,29,1,10,20,17,5,252,252,236,238,231,255,234,233,241,244,247,9,22,25,22,31,24,29,20,
17,8,4,255,254,22,15,247,240,239,0,2,17,28,32,28,14,10,5,11,253,251,1,0,9,29,23,3,5,1,
250,246,252,234,238,2,243,240,247,0,253,2,245,237,243,0,5,13,14,30,42,16,5,5,12,246,255,234,208,212,
232,241,1,2,251,237,232,212,221,198,176,178,186,199,229,248,0,23,44,65,72,78,67,47,22,7,1,253,253,4,
30,22,28,59,70,48,56,64,19,3,236,180,155,162,154,138,159,183,203,242,22,57,66,64,67,55,42,28,35,0,
232,245,0,235,9,39,29,37,79,81,56,65,35,231,212,213,200,181,192,181,184,208,239,4,34,56,55,56,63,38,
22,14,239,221,219,246,248,17,20,30,29,22,25,20,10,5,5,252,252,255,238,235,250,243,1,246,222,234,253,247,
238,241,246,239,254,241,241,15,29,25,4,24,6,255,245,222,213,242,15,4,1,26,38,45,34,16,5,3,12,242,
221,224,218,203,206,202,215,247,5,6,253,27,28,44,26,6,10,1,232,212,214,220,238,17,23,30,67,42,19,7,
247,206,211,227,181,181,214,202,209,241,10,3,36,61,42,47,50,13,250,243,226,220,225,217,214,5,34,41,72,84,
81,65,58,43,19,21,247,226,231,235,236,242,11,11,22,43,31,20,18,15,234,207,212,190,198,222,208,208,241,9,
243,24,45,50,65,76,58,40,39,28,255,249,249,238,232,235,245,5,20,30,27,21,33,32,21,247,226,204,194,184,
181,175,177,197,222,222,234,12,30,37,48,58,43,48,41,10,233,233,220,206,233,240,237,252,30,27,66,80,71,53,
61,19,245,246,231,198,215,206,176,200,249,240,252,34,30,29,37,33,29,29,15,241,227,210,212,214,232,248,2,21,
35,50,53,69,48,49,22,5,0,251,221,226,224,232,232,3,241,254,36,18,21,23,16,236,245,238,207,222,237,198,
223,253,4,4,13,17,254,15,3,246,251,250,235,212,223,243,247,5,0,5,19,33,54,43,44,26,12,240,227,221,
237,238,230,215,252,14,14,7,5,10,4,5,237,232,0,15,15,248,242,254,4,245,249,0,7,14,18,250,0,23,
19,6,12,19,24,21,15,2,250,251,248,244,242,244,0,246,237,221,250,242,236,240,238,227,239,7,2,10,39,43,
30,39,44,20,22,17,16,6,35,23,3,253,14,9,7,14,13,3,9,24,251,227,249,252,210,217,244,226,227,245,
232,226,11,6,244,251,17,9,17,11,9,255,1,248,249,249,14,19,4,0,14,13,14,30,19,255,255,247,237,238,
238,243,249,250,5,7,27,23,16,17,30,6,7,4,236,233,248,226,199,231,251,247,12,29,255,254,26,10,243,254,
250,210,219,224,223,231,250,244,246,6,9,250,254,4,11,9,0,255,246,249,10,12,0,26,40,19,4,27,11,0,
4,237,217,244,16,253,244,3,1,250,1,2,250,9,20,2,225,235,14,10,251,9,251,254,20,23,3,18,35,29,
20,15,19,20,21,19,248,232,8,254,247,247,242,237,253,10,240,245,236,235,248,236,239,239,221,240,244,242,242,8,
3,3,11,22,26,30,23,28,0,17,24,246,251,1,1,240,5,239,236,24,36,27,253,24,16,249,253,243,217,244,
3,212,185,220,239,238,238,249,241,253,32,31,6,21,40,19,23,33,26,13,20,14,23,35,41,22,5,22,18,27,
12,250,251,254,243,224,229,226,248,244,236,239,255,8,28,15,2,18,24,16,27,15,236,254,255,249,0,254,3,4,
33,22,42,31,29,23,18,4,246,237,208,234,229,226,216,242,251,253,249,15,4,16,13,254,248,1,26,235,230,248,
251,231,248,254,11,18,28,232,248,20,6,243,229,246,241,244,238,228,228,1,4,235,225,246,248,235,245,9,235,231,
0,1,245,17,8,247,11,36,22,249,7,19,1,248,19,241,242,2,251,216,244,8,5,255,4,11,249,8,20,13,
255,7,240,238,246,252,245,229,240,252,243,1,24,12,253,37,29,1,1,18,250,250,8,249,244,7,10,255,15,44,
35,21,33,37,15,8,0,234,244,253,234,209,222,222,252,249,255,253,10,252,9,2,4,253,1,250,238,251,229,3,
254,20,0,11,3,24,33,21,7,11,20,23,22,0,6,253,249,238,235,247,241,232,221,243,247,240,234,242,254,2,
226,232,0,15,23,250,244,255,22,20,0,9,27,38,3,2,255,15,20,11,233,228,237,251,231,218,228,248,0,8,
250,251,28,30,21,15,0,18,28,2,251,232,229,248,13,240,229,234,246,17,17,250,241,17,37,27,245,232,244,17,
14,240,226,245,19,37,16,244,10,28,35,30,14,14,20,24,6,10,0,5,9,9,11,4,0,23,8,9,19,4,
4,27,12,242,0,0,231,255,234,253,238,245,241,246,9,5,254,1,9,251,6,0,2,0,2,228,249,234,238,0,
2,0,19,39,27,27,36,51,32,22,12,253,5,252,221,234,248,249,3,4,252,39,34,9,22,44,33,30,255,226,
14,12,245,225,235,253,0,2,4,11,0,17,18,253,248,241,223,247,235,224,224,230,211,239,253,241,0,10,245,241,
0,249,244,250,0,0,97,7,59,0,0,0,0,0,255,255,255,0,255,1,0,2,0,1,254,2,254,0,178,131,
162,204,38,88,60,49,12,195,182,193,0,67,76,40,9,253,255,230,223,245,25,58,46,8,246,247,255,250,251,6,
24,30,20,248,242,252,0,8,9,11,20,13,2,247,242,254,6,8,239,188,189,198,236,21,38,45,42,250,224,217,
239,20,35,254,212,223,232,248,6,0,20,40,234,191,209,233,38,47,10,6,5,250,229,218,244,27,39,20,253,253,
255,252,240,244,17,29,17,1,244,250,6,252,254,253,6,16,6,251,241,242,1,251,245,1,7,19,12,249,246,252,
2,6,2,6,13,8,253,244,253,11,16,7,6,4,7,0,242,247,10,23,26,0,222,224,236,250,16,14,14,18,
248,228,231,245,9,15,0,244,249,255,252,254,2,10,15,7,251,248,249,255,1,6,11,7,1,251,242,250,7,15,
18,13,3,252,248,253,2,10,15,7,255,255,1,255,0,11,18,12,11,2,254,255,249,251,8,16,18,12,246,239,
248,3,12,12,6,9,2,253,252,1,9,11,10,4,11,11,254,0,3,7,16,4,6,9,2,0,249,3,15,249,
222,217,223,248,17,21,9,3,233,216,217,242,11,24,25,1,232,234,235,243,6,16,17,6,254,238,238,4,6,3,
7,3,8,10,253,0,7,4,6,0,4,16,9,1,253,254,247,241,247,8,37,43,26,8,250,245,6,8,27,30,
2,3,239,218,244,1,16,36,20,14,12,3,4,241,2,23,8,12,0,244,19,25,3,249,8,23,15,7,4,255,
23,248,198,239,6,23,38,246,222,233,234,233,239,10,31,26,6,221,234,253,246,250,248,27,36,238,226,224,234,16,
0,240,245,248,239,214,225,1,11,3,236,230,242,245,244,248,12,25,1,232,227,248,18,13,1,254,0,8,0,248,
5,12,10,4,252,0,4,1,3,9,13,7,253,252,255,2,3,254,252,2,5,7,254,251,255,2,7,5,6,8,
3,254,253,0,12,9,4,3,250,251,249,251,10,13,14,7,249,246,254,6,11,4,253,251,251,251,251,2,8,12,
0,240,241,246,0,10,8,4,0,0,1,246,249,4,7,254,246,252,4,7,0,244,249,3,253,243,249,3,7,4,
255,248,246,241,243,254,15,17,2,244,237,242,3,12,13,16,17,3,245,248,1,7,8,1,0,1,254,252,250,0,
1,247,243,244,253,4,1,253,249,253,253,251,0,0,1,252,246,253,3,8,12,9,254,244,240,253,8,15,20,7,
239,231,239,0,20,14,1,253,243,243,250,252,2,11,6,0,253,243,245,246,251,9,9,8,0,246,246,248,254,3,
1,0,247,242,248,4,13,0,244,242,247,1,4,9,12,4,0,0,6,23,21,5,248,253,10,17,27,23,13,10,
252,242,253,12,23,20,1,249,248,249,254,0,5,11,14,8,251,244,245,245,251,9,12,4,252,241,240,254,11,16,
13,0,241,239,246,2,13,16,15,7,0,251,251,1,10,13,15,13,4,252,251,0,8,11,4,0,253,251,3,2,
11,11,254,240,233,249,8,11,11,0,240,233,236,252,10,16,13,251,243,240,249,1,7,19,20,13,3,249,254,255,
248,2,20,27,20,255,243,250,1,6,11,14,16,8,255,254,4,11,7,7,10,12,12,2,248,250,3,5,4,13,
14,6,251,238,241,252,2,10,19,16,253,239,234,244,255,0,254,255,5,0,242,243,254,7,5,255,252,252,246,244,
5,14,11,254,231,236,253,0,8,10,10,8,245,237,242,253,10,7,0,9,1,245,241,246,9,11,3,246,242,2,
255,0,11,11,13,255,244,253,3,18,18,17,16,0,248,247,4,25,16,9,1,252,0,251,3,20,19,22,6,245,
250,254,5,14,20,17,1,245,240,1,16,19,17,5,0,0,249,252,6,10,17,6,254,255,251,248,246,255,3,249,
239,233,235,244,245,245,251,252,240,233,236,245,250,253,0,5,6,244,240,253,11,24,19,5,1,253,252,255,14,27,
23,7,248,246,253,8,16,16,10,254,233,235,249,8,14,254,237,224,223,232,244,4,9,249,238,230,233,245,253,5,
21,25,8,243,237,235,254,20,30,34,20,3,246,245,5,25,36,29,13,5,5,3,12,15,21,25,5,253,252,254,
4,1,1,0,251,250,248,250,2,1,251,243,248,0,0,3,5,4,0,245,236,244,249,253,248,0,5,255,249,239,
248,15,21,13,4,0,2,8,13,19,24,16,251,240,248,8,16,1,246,245,243,245,251,3,11,5,242,225,231,253,
7,9,6,255,249,239,238,251,5,9,2,254,253,0,1,0,0,3,3,253,247,251,6,16,20,9,251,240,237,251,
8,12,15,3,250,251,245,248,0,1,1,253,0,5,0,250,247,250,2,2,3,8,12,14,252,242,243,249,6,10,
20,31,25,8,246,237,244,1,11,21,29,27,13,253,247,248,254,4,12,18,24,18,0,242,232,239,0,13,16,10,
251,243,240,245,255,7,9,3,251,245,247,249,244,242,247,251,0,251,246,252,252,246,245,249,251,253,248,246,2,8,
0,249,242,247,255,2,9,14,20,13,255,253,8,25,32,35,30,24,13,252,248,2,23,27,19,9,255,248,247,253,
1,6,5,252,248,253,255,253,246,237,239,241,245,249,249,250,243,231,233,235,242,250,252,255,0,252,251,254,4,13,
18,18,18,17,15,14,13,14,16,17,15,16,12,7,4,2,4,1,247,239,244,0,14,18,11,0,239,232,236,246,
8,12,6,254,242,239,239,238,242,255,9,9,2,249,242,242,250,6,20,26,28,21,14,13,5,7,10,11,16,11,
7,7,5,3,253,248,248,241,238,239,242,249,253,249,246,242,241,242,244,245,244,241,237,238,246,254,251,248,247,242,
248,253,3,11,19,22,24,25,20,14,12,16,26,33,36,26,15,7,4,2,6,6,1,253,250,251,254,251,246,236,
239,242,244,253,251,243,235,226,222,228,240,245,248,243,233,225,228,234,245,2,8,11,13,6,5,4,10,22,34,37,
35,33,27,24,23,20,23,22,19,11,7,9,3,251,239,232,229,237,243,246,249,238,228,221,225,237,246,250,249,248,
246,250,254,252,252,251,249,253,0,7,19,25,24,21,15,11,9,15,29,34,34,26,13,5,3,2,5,11,12,9,
5,0,246,239,230,231,242,245,245,236,229,232,237,243,243,245,246,245,246,250,255,4,1,251,253,252,248,249,253,6,
16,21,17,4,254,244,244,0,14,27,27,17,6,248,245,249,0,12,14,10,2,254,253,253,252,255,255,250,245,244,
248,254,5,2,1,255,246,242,246,4,18,20,16,6,0,255,1,4,9,12,15,8,2,255,249,248,255,2,6,2,
249,243,245,255,3,8,2,249,243,242,251,4,8,5,0,254,252,251,250,249,0,10,13,6,253,244,243,250,1,10,
12,8,1,255,1,9,11,8,7,8,13,10,6,0,255,3,0,253,247,239,236,237,246,255,6,255,241,238,239,252,
6,9,10,9,7,2,6,9,15,14,9,6,0,2,0,2,10,10,11,2,255,0,4,11,17,22,18,10,0,250,
255,7,18,23,18,0,232,212,211,227,249,4,1,243,228,222,225,238,254,9,13,5,6,8,13,17,17,21,21,17,
7,1,2,6,14,16,12,10,1,1,3,12,17,15,9,9,9,11,11,9,5,5,2,0,252,249,246,246,247,244,
245,246,252,0,5,8,6,2,252,248,252,0,5,11,13,10,4,255,248,250,255,2,4,0,250,249,251,0,2,1,
248,240,241,243,249,253,249,247,248,251,252,254,254,254,1,6,11,6,253,246,251,6,14,19,11,2,0,255,0,6,
12,14,15,17,16,16,9,254,250,0,10,18,20,12,0,245,238,237,241,0,8,13,6,253,244,241,245,0,10,17,
12,7,254,249,249,250,251,251,250,252,255,2,3,3,254,249,244,243,250,5,17,22,17,9,250,243,241,248,6,14,
21,17,5,248,237,233,234,246,2,11,15,11,7,0,254,250,253,1,6,15,20,18,12,2,245,237,242,250,4,10,
10,1,252,243,239,242,252,4,12,14,8,1,252,251,249,251,252,251,253,253,253,254,251,246,239,237,237,249,0,3,
1,0,254,250,249,247,249,0,3,4,4,4,253,247,249,248,249,252,254,0,3,5,0,252,249,249,255,3,7,6,
5,0,250,253,253,0,1,252,250,247,247,248,0,4,1,255,245,237,240,247,1,8,10,1,250,244,239,247,0,7,
5,255,247,242,244,248,252,3,2,0,0,0,127,8,58,0,3,3,3,4,5,6,6,6,6,4,4,3,1,0,
1,0,0,0,255,0,1,0,1,0,0,0,0,255,253,253,251,249,247,247,246,234,219,220,225,241,1,16,40,50,
55,48,39,33,17,253,234,218,220,219,224,234,248,14,28,34,41,40,40,28,13,0,242,237,226,222,229,233,250,2,
13,28,33,37,32,23,18,9,2,254,0,254,225,193,184,166,172,177,189,230,255,28,43,58,83,73,60,28,9,0,
233,215,199,203,232,249,5,24,41,65,60,53,38,25,18,245,227,211,209,217,223,229,254,15,40,43,4,241,253,230,
213,195,192,223,224,242,243,33,66,64,56,41,44,48,11,237,217,220,233,220,222,237,13,36,30,37,38,49,39,8,
251,245,243,235,218,221,237,254,4,3,14,26,32,20,7,0,243,235,217,202,209,213,229,233,242,12,24,41,37,33,
33,21,9,244,230,231,229,227,234,241,7,16,22,26,29,35,25,14,0,248,242,232,225,230,236,250,255,5,14,16,
21,22,10,9,251,241,231,219,223,226,238,249,1,15,28,36,36,32,26,20,12,255,245,240,242,244,250,254,7,18,
18,21,21,21,19,9,1,253,250,250,242,246,0,1,14,11,22,28,32,26,3,1,1,249,239,239,224,240,237,236,
250,253,22,28,21,11,11,14,247,229,204,184,190,179,180,191,220,249,6,8,21,23,38,19,255,1,238,242,228,217,
230,244,6,17,27,36,41,47,34,16,6,249,224,221,187,209,225,235,253,245,4,13,5,8,253,250,10,243,246,251,
7,30,24,7,6,242,243,222,211,218,239,236,250,251,17,43,43,58,44,58,41,26,2,246,247,240,234,247,254,9,
27,24,39,42,38,30,8,1,225,216,197,200,212,223,242,253,7,19,31,30,36,27,21,14,255,1,245,250,16,5,
27,28,43,44,32,44,21,17,7,244,245,245,245,5,244,15,9,28,31,13,21,1,255,231,218,204,194,185,166,182,
199,232,246,18,34,53,66,71,52,59,54,24,249,237,221,226,229,227,1,17,48,53,42,66,23,1,227,211,210,197,
212,215,243,0,15,24,45,38,34,21,6,248,232,218,221,212,217,232,250,25,52,65,83,70,71,54,31,24,245,224,
200,199,199,210,239,21,39,73,26,18,0,227,231,182,208,197,211,219,220,14,24,46,41,18,34,24,242,239,226,238,
14,2,25,27,63,67,63,62,40,51,32,3,246,240,240,249,247,17,14,253,236,221,229,202,212,218,233,3,18,27,
48,36,24,248,226,218,199,201,191,215,241,252,20,27,57,75,56,41,16,0,235,212,198,187,194,205,209,243,1,21,
25,18,22,5,254,225,213,212,214,219,229,225,244,9,18,37,33,43,27,11,247,228,230,225,232,237,246,0,25,24,
47,44,45,41,20,4,253,248,238,231,227,232,247,254,0,7,12,20,19,23,7,248,252,230,233,236,239,254,3,14,
17,23,21,30,19,7,244,237,225,217,219,229,248,2,13,21,21,23,27,13,0,2,242,243,234,239,245,3,13,13,
16,7,6,250,236,230,222,210,218,233,232,9,1,24,37,38,57,38,48,38,13,0,232,230,220,209,214,215,238,253,
4,20,33,34,36,18,15,7,4,248,227,228,214,220,231,234,246,1,250,0,250,247,246,240,233,227,236,237,250,3,
20,26,52,43,56,40,28,11,244,230,214,219,220,222,235,231,251,6,14,30,28,24,14,254,245,241,243,233,239,241,
249,253,1,2,14,15,16,20,14,13,251,231,223,226,236,248,7,26,30,38,43,35,40,24,15,5,250,254,0,248,
0,253,0,1,3,8,0,249,240,238,246,255,9,21,29,37,39,27,23,17,249,241,222,199,199,182,183,198,220,255,
18,45,58,64,75,57,52,42,25,13,253,239,244,240,235,237,247,14,20,29,24,22,29,13,5,3,248,253,242,236,
249,252,6,11,16,33,37,31,14,252,245,228,219,220,228,249,7,26,45,67,68,69,50,30,19,252,232,202,198,194,
192,200,210,223,243,8,19,31,41,35,21,10,253,237,227,214,200,198,198,215,230,242,2,11,16,26,21,25,29,23,
29,28,27,34,39,46,48,48,45,32,21,2,240,227,203,192,189,187,200,217,237,0,16,29,41,51,42,46,31,18,
7,247,242,232,234,238,233,240,252,4,9,13,14,24,24,27,24,27,35,25,25,36,26,31,16,1,4,253,246,232,
215,210,198,196,208,222,244,6,14,37,42,45,47,26,19,7,236,239,224,227,237,237,249,9,16,26,20,17,17,3,
0,255,0,1,0,1,8,9,10,7,11,14,11,8,5,1,252,239,246,246,254,254,1,17,21,21,7,253,246,246,
238,239,246,3,5,4,12,19,36,43,43,54,46,33,12,249,235,234,223,223,228,236,250,255,9,13,12,10,2,254,
236,212,198,193,198,220,235,9,32,43,46,49,50,35,17,246,229,215,198,188,184,196,212,238,255,32,53,63,67,58,
48,35,9,243,233,219,212,202,195,194,214,232,254,10,19,19,10,6,2,253,245,241,241,248,2,10,21,25,37,34,
39,35,22,10,250,238,232,219,208,208,214,229,246,253,6,20,24,29,28,19,8,245,232,227,224,219,211,210,220,236,
0,14,25,23,25,26,36,29,27,15,250,241,224,223,222,223,237,244,254,8,14,11,7,245,234,227,219,215,201,199,
196,208,232,251,20,37,43,45,38,26,26,8,249,233,218,213,214,210,219,229,241,1,12,23,28,29,21,7,248,241,
229,221,224,226,247,0,16,33,40,44,44,39,32,28,6,247,232,224,223,224,231,241,255,9,20,30,44,43,35,30,
26,27,19,8,7,13,16,20,26,37,41,26,12,252,240,226,207,197,201,209,218,228,239,8,31,44,61,65,64,46,
20,2,246,230,229,229,243,5,20,38,51,60,63,51,33,14,240,216,196,183,185,183,194,214,241,10,29,45,53,57,
45,32,10,251,228,215,209,218,236,250,15,37,62,76,84,82,71,48,17,243,214,193,175,169,172,195,226,4,35,57,
77,82,84,73,57,33,10,243,229,226,230,232,235,243,250,4,13,19,15,2,242,234,227,230,229,229,227,238,255,14,
27,37,44,40,27,8,241,219,198,189,190,202,217,237,1,26,60,93,113,125,118,98,68,28,252,224,202,191,186,187,
192,198,210,230,249,4,8,10,13,9,0,242,232,230,235,249,17,38,44,35,21,11,8,1,245,229,218,211,207,203,
209,223,237,1,28,53,68,68,54,44,28,14,253,226,204,187,183,190,206,221,245,7,28,54,67,77,65,48,28,9,
245,232,214,205,204,211,227,249,11,34,46,52,55,49,41,28,9,250,234,221,210,201,202,214,229,244,1,16,29,38,
37,35,29,15,4,255,255,0,255,251,245,241,242,246,247,249,245,243,246,249,0,6,8,8,10,10,9,2,1,0,
1,0,0,1,253,249,240,241,241,241,244,246,251,254,5,5,10,6,5,5,5,12,20,27,30,30,23,15,0,242,
230,218,210,209,213,219,222,222,227,235,253,13,23,27,24,17,14,15,19,25,29,23,12,1,253,242,222,202,192,192,
198,203,214,229,240,0,18,41,61,71,72,67,62,54,36,12,244,229,217,209,200,197,200,210,226,251,22,43,54,54,
50,42,28,7,243,220,209,206,211,218,229,250,10,29,45,56,58,48,29,6,243,230,221,211,211,211,216,220,224,237,
254,15,31,40,40,42,34,28,22,17,9,252,241,239,248,250,248,240,236,233,229,231,238,244,240,235,242,2,20,31,
37,45,53,57,53,36,19,253,227,210,207,216,218,209,205,216,231,249,7,24,41,49,55,59,58,48,37,26,25,26,
24,9,244,222,205,195,189,190,191,192,201,217,246,19,39,51,63,73,76,70,58,42,23,2,237,223,217,208,202,200,
211,227,238,243,250,8,24,31,34,32,23,7,254,254,8,16,17,15,16,21,22,18,16,16,13,6,249,237,225,212,
200,201,221,243,253,0,9,25,39,51,60,65,51,30,5,246,233,225,217,216,220,231,245,0,11,21,29,35,39,40,
32,18,255,242,233,232,236,247,2,12,20,31,43,52,49,35,14,252,230,210,196,192,197,204,215,237,9,37,56,71,
79,75,58,28,3,240,230,224,225,222,223,219,225,241,5,22,32,29,22,14,7,251,236,225,217,219,228,247,3,12,
20,19,27,29,20,1,233,213,194,186,188,201,220,244,14,44,72,85,85,74,58,39,19,251,224,198,182,177,185,205,
232,3,30,50,63,72,70,59,38,22,7,251,234,220,211,211,216,225,240,253,8,14,15,18,18,17,11,4,1,1,
1,255,251,250,250,253,3,10,15,13,4,248,238,230,225,225,227,231,238,246,3,15,28,39,42,39,28,9,239,210,
192,187,191,200,220,241,5,19,33,47,52,47,37,23,8,247,229,216,208,205,210,220,233,248,4,12,17,23,28,30,
25,21,16,11,7,4,6,8,5,2,254,254,247,237,224,213,205,203,207,216,230,249,10,27,44,57,64,67,61,49,
32,9,239,213,191,176,167,169,185,210,236,6,31,56,70,81,90,93,81,56,27,254,227,206,189,184,184,192,202,217,
231,243,254,10,24,33,40,40,35,31,30,30,30,26,19,10,1,249,241,233,226,223,225,228,230,230,227,228,236,253,
16,31,34,33,27,27,26,26,23,17,5,253,248,247,249,252,0,10,21,33,40,37,30,22,19,21,24,26,20,8,
255,245,235,227,227,227,227,228,236,244,250,252,0,10,23,31,34,33,27,21,15,13,10,5,254,245,237,232,229,226,
225,225,231,242,253,1,3,5,5,7,10,12,12,6,0,250,251,252,252,251,252,253,0,2,3,3,0,250,246,244,
248,248,248,246,248,249,252,251,250,247,243,240,239,240,240,237,231,228,228,232,239,245,245,239,233,231,235,243,252,0,
255,0,170,7,51,0,21,242,238,36,3,9,1,243,53,29,200,245,43,246,25,1,188,17,48,233,0,7,240,28,
12,233,10,17,0,250,17,31,237,219,30,38,12,249,237,0,38,249,9,12,224,60,17,164,60,69,186,246,2,12,
106,244,132,46,76,41,222,179,29,40,30,238,186,37,78,238,227,0,40,33,7,250,249,21,27,237,8,47,202,26,
57,239,25,236,237,60,21,231,223,21,81,219,184,42,30,0,25,255,224,15,38,250,232,250,0,32,7,228,22,9,
244,2,23,255,230,20,17,255,249,243,37,42,244,226,0,25,5,245,12,12,242,15,41,228,203,64,67,199,241,34,
10,22,238,231,33,13,250,243,235,40,21,193,10,46,244,242,253,24,40,251,232,244,35,50,223,212,37,47,229,232,
14,252,39,22,231,0,48,2,226,27,35,233,2,24,12,1,209,37,53,221,246,27,10,27,253,252,15,250,2,6,
5,50,247,212,26,37,1,239,244,44,30,236,7,247,30,34,228,242,4,45,0,197,22,59,255,233,254,1,23,24,
240,237,47,20,242,236,32,21,237,35,4,209,13,62,3,229,15,253,10,20,235,2,39,224,255,38,243,8,244,227,
73,17,203,11,38,243,6,2,255,35,246,10,246,242,61,235,206,61,254,232,39,248,246,42,13,226,253,37,13,5,
9,237,24,47,227,237,51,19,232,18,7,238,27,17,235,8,14,228,21,11,236,37,2,243,12,9,8,27,0,231,
3,22,253,229,38,1,221,31,13,251,8,248,17,255,250,32,5,14,30,232,246,50,0,241,23,230,28,24,208,32,
55,217,214,74,45,182,1,59,19,246,233,25,4,6,7,214,40,29,241,252,0,16,21,16,218,14,61,242,245,7,
0,43,12,235,10,3,6,30,240,245,49,243,219,16,66,11,175,2,101,238,236,10,212,50,100,166,173,111,43,204,
232,10,50,1,225,11,20,4,254,243,8,35,235,220,17,22,241,242,34,6,243,6,248,243,44,0,230,6,15,238,
0,9,0,35,235,234,51,249,218,23,11,7,250,223,24,33,7,228,230,58,27,201,15,25,248,31,27,218,212,78,
56,189,200,68,66,221,212,253,34,62,218,221,32,13,6,7,7,8,14,251,6,23,30,210,250,62,19,230,227,29,
29,252,245,60,246,173,65,92,206,232,54,17,230,36,27,194,14,52,208,250,50,244,197,38,59,212,253,12,7,5,
249,239,28,10,0,227,0,70,241,226,27,21,12,225,241,27,18,3,226,7,33,223,1,34,11,7,224,14,56,248,
220,33,10,247,247,247,42,228,208,44,51,239,237,245,22,56,202,245,54,241,1,2,245,43,251,220,18,29,246,232,
33,31,236,233,6,57,5,221,250,0,32,22,200,35,54,217,10,2,233,60,35,211,0,27,26,253,228,0,35,36,
254,208,4,81,223,228,58,252,236,29,231,16,50,212,245,17,33,30,191,245,72,20,237,240,243,43,27,252,3,252,
249,18,48,250,247,32,252,232,42,11,210,39,53,250,196,8,57,250,243,34,242,254,45,230,242,3,30,28,239,232,
248,41,15,235,31,233,233,48,3,234,2,13,20,14,254,10,235,247,40,246,28,241,224,41,18,254,224,6,39,17,
244,222,0,47,12,223,11,33,246,255,0,243,30,32,235,219,35,12,241,38,253,224,30,34,237,223,25,30,252,2,
247,27,252,240,45,247,237,7,17,16,250,222,17,69,230,224,37,7,53,247,198,56,34,215,25,10,238,42,11,238,
22,239,31,29,223,12,1,17,6,240,39,225,238,76,244,216,6,33,32,239,241,46,227,20,52,174,4,61,246,12,
249,1,56,233,234,38,239,12,56,221,215,33,17,252,7,2,9,6,233,251,44,21,222,219,35,42,215,255,7,6,
40,0,188,15,76,245,193,29,25,23,8,182,44,68,240,236,240,53,10,225,18,13,11,247,16,19,2,239,204,71,
69,188,229,30,35,0,2,14,236,15,32,228,249,49,3,218,5,31,2,0,11,23,237,4,46,204,233,66,250,217,
22,41,2,225,27,47,234,252,10,16,32,207,1,42,242,20,254,219,33,33,214,18,53,242,10,6,234,30,19,235,
9,42,242,224,32,0,243,16,251,11,23,244,253,40,252,250,35,247,246,16,251,23,249,239,13,237,22,0,0,26,
243,1,33,231,9,46,235,245,9,30,30,186,244,60,27,7,219,251,54,24,255,232,20,58,246,195,11,40,18,2,
200,0,60,42,225,219,32,32,4,232,254,5,13,37,225,247,42,255,227,19,10,230,5,26,236,255,19,8,10,21,
242,238,36,3,9,1,243,53,29,200,245,43,246,25,1,188,17,48,233,0,7,240,28,12,233,10,17,0,250,17,
31,237,219,30,38,12,249,237,0,38,249,9,12,224,60,17,164,60,69,186,246,2,12,106,244,132,46,76,41,222,
179,29,40,30,238,186,37,78,238,227,0,40,33,7,250,249,21,27,237,8,47,202,26,57,239,25,236,237,60,21,
231,223,21,81,219,184,42,30,0,25,255,224,15,38,250,232,250,0,32,7,228,22,9,244,2,23,255,230,20,17,
255,249,243,37,42,244,226,0,25,5,245,12,12,242,15,41,228,203,64,67,199,241,34,10,22,238,231,33,13,250,
243,235,40,21,193,10,46,244,242,253,24,40,251,232,244,35,50,223,212,37,47,229,232,14,252,39,22,231,0,48,
2,226,27,35,233,2,24,12,1,209,37,53,221,246,27,10,27,253,252,15,250,2,6,5,50,247,212,26,37,1,
239,244,44,30,236,7,247,30,34,228,242,4,45,0,197,22,59,255,233,254,1,23,24,240,237,47,20,242,236,32,
21,237,35,4,209,13,62,3,229,15,253,10,20,235,2,39,224,255,38,243,8,244,227,73,17,203,11,38,243,6,
2,255,35,246,10,246,242,61,235,206,61,254,232,39,248,246,42,13,226,253,37,13,5,9,237,24,47,227,237,51,
19,232,18,7,238,27,17,235,8,14,228,21,11,236,37,2,243,12,9,8,27,0,231,3,22,253,229,38,1,221,
31,13,251,8,248,17,255,250,32,5,14,30,232,246,50,0,241,23,230,28,24,208,32,55,217,214,74,45,182,1,
59,19,246,233,25,4,6,7,214,40,29,241,252,0,16,21,16,218,14,61,242,245,7,0,43,12,235,10,3,6,
30,240,245,49,243,219,16,66,11,175,2,101,238,236,10,212,50,100,166,173,111,43,204,232,10,50,1,225,11,20,
4,254,243,8,35,235,220,17,22,241,242,34,6,243,6,248,243,44,0,230,6,15,238,0,9,0,35,235,234,51,
249,218,23,11,7,250,223,24,33,7,228,230,58,27,201,15,25,248,31,27,218,212,78,56,189,200,68,66,221,212,
253,34,62,218,221,32,13,6,7,7,8,14,251,6,23,30,210,250,62,19,230,227,29,29,252,245,60,246,173,65,
92,206,232,54,17,230,36,27,194,14,52,208,250,50,244,197,38,59,212,253,12,7,5,249,239,28,10,0,227,0,
70,241,226,27,21,12,225,241,27,18,3,226,7,33,223,1,34,11,7,224,14,56,248,220,33,10,247,247,247,42,
228,208,44,51,239,237,245,22,56,202,245,54,241,1,2,245,43,251,220,18,29,246,232,33,31,236,233,6,57,5,
221,250,0,32,22,200,35,54,217,10,2,233,60,35,211,0,27,26,253,228,0,35,36,254,208,4,81,223,228,58,
252,236,29,231,16,50,212,245,17,33,30,191,245,72,20,237,240,243,43,27,252,3,252,249,18,48,250,247,32,252,
232,42,11,210,39,53,250,196,8,57,250,243,34,242,254,45,230,242,3,30,28,239,232,248,41,15,235,31,233,233,
48,3,234,2,13,20,14,254,10,235,247,40,246,28,241,224,41,18,254,224,6,39,17,244,222,0,47,12,223,11,
33,246,255,0,243,30,32,235,219,35,12,241,38,253,224,30,34,237,223,25,30,252,2,247,27,252,240,45,247,237,
7,17,16,250,222,17,69,230,224,37,7,53,247,198,56,34,215,25,10,238,42,11,238,22,239,31,29,223,12,1,
17,6,240,39,225,238,76,244,216,6,33,32,239,241,46,227,20,52,174,4,61,246,12,249,1,56,233,234,38,239,
12,56,221,215,33,17,252,7,2,9,6,233,251,44,21,222,219,35,42,215,255,7,6,40,0,188,15,76,245,193,
29,25,23,8,182,44,68,240,236,240,53,10,225,18,13,11,247,16,19,2,239,204,71,69,188,229,30,35,0,2,
14,236,15,32,228,249,49,3,218,5,31,2,0,11,23,237,4,46,204,233,66,250,217,22,41,2,225,27,47,234,
252,10,16,32,207,1,42,242,20,254,219,33,33,214,18,53,242,10,6,234,30,19,235,9,42,242,224,32,0,243,
16,251,11,23,244,253,40,252,250,35,247,246,16,251,23,249,239,13,0,0,150,0,4,0,1,0,224,0,248,2,
140,5,60,10,20,13,175,14,117,27,50,43,29,57,48,41,35,29,12,3,196,162,200,120,120,120,249,174,255,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,
224,0,248,2,140,5,40,10,20,13,175,14,117,27,60,67,36,71,61,52,44,37,15,4,196,162,200,120,120,120,
249,174,255,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,
0,0,1,0,224,0,248,2,120,5,40,10,20,13,175,14,117,27,40,55,33,64,55,40,36,33,14,4,196,162,
200,120,120,120,249,174,255,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,
0,0,1,250,0,0,1,0,208,0,224,2,100,5,236,9,1,13,155,14,105,27,0,33,26,52,37,27,24,24,
11,3,192,158,201,120,120,120,249,174,255,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,
0,0,188,40,60,182,64,250,23,8,175,0,4,0,1,0,240,0,128,3,160,5,150,10,164,13,45,15,195,27,
45,45,31,64,57,40,30,20,9,4,235,162,134,132,120,120,247,170,165,44,65,70,130,55,0,0,0,0,45,0,
0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,240,0,128,3,160,5,150,10,164,13,
45,15,195,27,50,82,42,87,77,54,41,27,12,5,235,162,134,132,120,120,247,170,165,44,65,70,130,55,0,0,
0,0,45,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,240,0,128,3,160,5,
150,10,164,13,45,15,195,27,80,67,37,78,69,48,37,24,11,5,235,162,134,132,120,120,247,170,165,44,65,70,
130,55,0,0,0,0,45,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,240,0,
128,3,160,5,150,10,164,13,45,15,195,27,0,37,28,58,52,36,27,18,8,3,235,162,134,132,120,120,247,170,
165,44,65,70,130,55,0,0,0,0,45,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,
0,0,5,0,1,0,240,0,200,2,224,6,176,9,112,13,10,15,96,27,44,46,34,65,59,56,38,23,6,8,
165,135,240,120,120,120,195,105,165,44,45,70,130,57,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,
197,24,223,182,176,250,125,182,3,0,240,0,208,2,224,6,116,9,112,13,60,15,96,27,77,68,36,76,79,74,
40,24,8,6,170,120,180,120,120,120,200,120,165,44,45,70,130,57,0,0,0,0,40,0,0,0,0,0,0,0,
24,53,0,191,197,254,124,182,1,250,0,0,1,0,240,0,192,2,202,6,116,9,72,13,60,15,96,27,77,53,
29,62,71,62,56,25,13,6,167,120,180,120,120,120,242,150,150,44,45,70,130,57,0,0,0,0,40,0,0,0,
0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,240,0,160,2,114,6,196,9,172,13,60,15,
96,28,35,38,27,56,50,49,42,26,10,7,167,120,180,120,120,120,242,150,150,44,45,70,130,57,0,0,0,0,
40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,1,0,240,0,160,2,26,6,216,9,
172,13,60,15,96,28,0,33,26,55,45,42,36,22,7,9,167,105,180,120,120,120,242,135,150,44,45,70,130,56,
0,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,64,250,23,8,215,0,5,0,1,0,
153,0,198,1,44,3,255,9,194,11,151,14,244,26,50,54,22,57,64,38,35,20,14,6,165,126,145,120,120,120,
165,115,130,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,
125,182,3,0,153,0,198,1,44,3,255,9,194,11,151,14,244,26,90,82,28,70,78,46,43,24,17,7,165,126,
145,120,120,120,165,115,130,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,
124,182,1,250,0,0,1,0,153,0,198,1,44,3,255,9,194,11,151,14,244,26,45,74,26,66,74,44,41,23,
16,7,165,126,145,120,120,120,165,115,130,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,
0,182,8,0,0,0,1,250,0,0,1,0,153,0,176,1,56,3,216,9,194,11,151,14,244,26,30,45,20,54,
57,34,31,18,13,5,165,126,145,120,120,120,165,115,130,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,
222,182,0,0,0,0,188,40,60,182,64,250,23,8,1,0,153,0,176,1,56,3,216,9,194,11,151,14,244,26,
0,36,18,49,52,31,28,16,11,5,165,126,145,120,120,120,165,115,130,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,40,60,182,40,54,0,191,77,60,59,182,64,250,23,8,185,0,4,0,1,0,184,0,72,2,172,3,
20,10,164,11,53,14,160,27,45,56,25,59,71,35,34,19,12,5,173,142,135,120,120,120,182,105,120,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,184,0,
72,2,172,3,20,10,164,11,53,14,160,27,80,106,34,81,98,48,46,27,17,7,173,142,135,120,120,120,182,105,
120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,
1,0,184,0,72,2,172,3,20,10,164,11,53,14,160,27,60,95,33,77,93,46,44,25,16,7,173,142,135,120,
120,120,182,105,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,
1,250,0,0,1,0,184,0,72,2,172,3,20,10,164,11,53,14,160,27,0,51,24,56,68,33,32,18,12,5,
173,142,135,120,120,120,182,105,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,
188,40,60,182,64,250,23,8,175,0,4,0,1,0,172,0,64,1,228,2,96,9,12,13,60,15,144,26,45,39,
2,67,43,20,20,26,8,7,177,117,100,120,120,120,177,117,115,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,172,0,64,1,228,2,96,9,12,13,60,15,
144,26,70,66,3,87,57,26,26,34,11,9,177,117,100,120,120,120,177,117,115,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,172,0,64,1,228,2,96,9,
12,13,60,15,144,26,60,59,3,83,54,25,25,32,10,9,177,117,100,120,120,120,177,117,115,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,172,0,64,1,
228,2,96,9,12,13,60,15,144,26,0,37,2,65,42,19,19,25,8,7,177,117,100,120,120,120,177,117,115,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,110,0,
4,0,1,0,184,0,132,1,172,3,116,9,224,11,136,14,144,26,50,51,26,61,52,32,29,20,14,7,162,127,
150,120,120,120,162,127,165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,
223,182,176,250,125,182,3,0,184,0,132,1,172,3,116,9,224,11,136,14,144,26,60,78,32,75,64,39,36,25,
18,9,162,127,150,120,120,120,162,127,165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,
0,191,197,254,124,182,1,250,0,0,1,0,184,0,132,1,172,3,116,9,224,11,136,14,144,26,60,67,30,71,
57,37,33,23,16,8,162,127,150,120,120,120,162,127,165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,
222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,184,0,138,1,212,3,56,9,224,11,136,14,144,26,
0,31,21,46,40,33,29,18,13,5,162,133,155,120,120,120,162,127,165,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,50,0,5,0,1,0,132,0,24,1,184,6,
36,9,228,12,96,14,100,25,45,34,17,54,37,31,34,31,8,11,160,90,135,120,120,120,160,135,135,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,132,0,
24,1,184,6,36,9,228,12,96,14,100,25,50,59,22,71,47,41,45,41,11,15,167,90,135,120,120,120,167,135,
135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,
1,0,132,0,24,1,184,6,36,9,228,12,96,14,100,25,85,54,21,68,46,39,43,39,10,14,167,90,135,120,
120,120,167,135,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,
1,250,0,0,1,0,132,0,24,1,184,6,36,9,228,12,96,14,100,25,40,42,19,60,41,35,38,35,9,12,
165,90,135,120,120,120,165,135,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,
188,40,60,182,64,250,23,8,1,0,132,0,24,1,184,6,36,9,228,12,96,14,100,25,0,29,15,50,34,29,
31,29,7,10,167,90,135,120,120,120,167,135,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,40,60,182,
40,54,0,191,77,60,59,182,64,250,23,8,200,0,4,0,1,0,122,0,192,1,240,5,116,9,228,12,246,14,
95,27,50,49,28,59,69,41,43,30,17,6,170,133,135,122,124,128,197,131,120,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,122,0,192,1,240,5,116,9,
228,12,246,14,95,27,70,71,34,71,83,49,52,37,20,8,170,133,135,122,124,128,197,131,120,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,122,0,192,1,
240,5,116,9,228,12,246,14,95,27,80,64,32,68,79,47,49,35,19,7,170,133,135,122,124,128,197,131,120,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,
121,0,207,1,240,5,96,9,220,12,220,14,95,27,0,39,26,53,62,37,39,27,15,5,170,136,135,122,123,126,
197,131,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,
23,8,0,0,6,0,1,0,235,0,79,3,103,5,206,9,184,12,181,14,193,27,45,62,28,63,72,40,41,26,
9,5,233,132,198,126,120,120,255,174,173,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,
0,191,197,24,223,182,176,250,125,182,3,0,235,0,79,3,103,5,206,9,184,12,181,14,193,27,60,108,37,83,
94,54,54,35,13,6,233,132,198,126,120,120,255,174,173,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,
0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,220,0,42,3,252,4,36,9,128,12,41,14,224,27,
41,66,32,59,75,41,52,32,12,7,167,120,210,120,120,120,255,120,165,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,211,0,97,2,24,4,39,9,164,12,
137,14,93,27,40,64,23,64,64,33,41,32,13,7,181,134,172,120,120,120,255,120,165,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,1,0,201,0,152,1,52,3,
43,9,201,12,233,14,217,26,60,51,15,65,51,24,29,31,12,7,195,149,134,120,120,120,141,120,147,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,64,250,23,8,1,0,176,0,
104,1,32,3,56,9,12,13,60,15,144,26,0,31,8,55,37,20,20,26,11,7,177,125,110,120,120,120,177,125,
125,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,146,23,0,0,0,250,0,0,
240,0,5,0,1,0,200,0,204,1,137,7,208,9,208,12,69,14,104,28,45,29,21,46,46,49,37,28,9,6,
184,108,128,120,120,120,185,107,127,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,
197,24,223,182,176,250,125,182,3,0,200,0,204,1,137,7,208,9,208,12,69,14,104,28,50,84,36,79,78,83,
63,48,15,11,184,108,128,120,120,120,185,107,127,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,
24,53,0,191,197,254,124,182,1,250,0,0,1,0,198,0,192,1,44,7,195,9,213,12,91,14,62,28,75,71,
31,76,61,74,57,44,14,10,183,109,149,120,120,120,185,107,150,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,178,0,71,1,179,3,63,9,9,13,48,15,
166,26,70,42,4,71,37,23,22,30,12,7,178,124,103,120,120,120,185,107,127,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,1,0,178,0,71,1,179,3,63,9,
9,13,48,15,166,26,0,30,3,60,31,19,18,25,10,6,178,124,103,120,120,120,185,107,127,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,64,250,23,8,255,0,6,0,33,0,
152,0,32,1,224,8,4,11,52,13,0,15,160,26,45,45,6,66,59,59,60,29,14,6,175,105,120,120,120,120,
175,90,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,
125,182,3,0,152,0,24,1,232,8,4,11,52,13,0,15,160,26,40,65,9,78,70,70,71,34,16,8,167,105,
120,120,120,120,167,90,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,
124,182,1,250,0,0,1,0,152,0,24,1,172,8,240,10,32,13,0,15,160,26,50,64,9,78,64,70,71,34,
16,8,167,105,130,120,120,120,167,90,130,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,
0,182,8,0,0,0,1,250,0,0,1,0,158,0,48,1,168,7,140,10,240,12,232,14,194,26,80,50,12,70,
44,58,57,29,15,7,166,109,158,120,120,120,167,90,158,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,
222,182,0,0,0,0,188,40,60,182,64,250,23,8,1,0,184,0,72,1,16,4,36,9,224,11,136,14,244,26,
40,29,19,45,31,26,24,16,12,6,162,127,175,120,120,120,162,127,190,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,40,60,182,40,54,0,191,77,60,59,182,64,250,23,8,1,0,176,0,72,1,189,3,92,8,204,11,
141,14,88,27,0,30,21,52,36,20,14,11,8,7,155,105,97,120,120,120,110,105,97,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,0,0,0,0,0,0,0,146,23,0,0,0,250,0,0,215,0,5,0,1,0,232,0,
144,3,40,5,180,10,212,13,100,15,102,27,45,57,32,62,59,39,37,22,9,3,255,170,163,145,120,120,255,174,
173,44,60,70,130,57,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,
3,0,232,0,144,3,40,5,180,10,212,13,100,15,102,27,50,99,42,82,78,52,49,29,13,4,255,170,163,145,
120,120,255,174,173,44,60,70,130,57,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,
1,250,0,0,1,0,225,0,72,3,138,5,220,10,212,13,80,15,120,27,60,66,39,73,57,49,46,28,12,5,
247,162,178,142,120,120,255,174,190,44,55,70,130,56,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,
8,0,0,0,1,250,0,0,1,0,156,0,104,1,152,8,4,11,172,13,60,15,32,28,60,30,30,47,48,44,
40,32,9,8,167,90,135,120,120,120,122,120,120,44,45,70,130,56,0,0,0,0,40,0,0,0,0,250,222,182,
0,0,0,0,188,40,60,182,64,250,23,8,1,0,156,0,104,1,152,8,4,11,112,13,20,15,32,28,0,26,
27,43,44,40,37,29,8,7,167,90,135,120,120,120,122,120,120,44,45,70,130,56,0,0,0,0,40,0,0,0,
0,40,60,182,40,54,0,191,77,60,59,182,64,250,23,8,245,0,5,0,1,0,200,0,208,1,188,7,216,9,
248,12,66,14,128,28,45,29,21,47,46,50,38,29,8,6,185,107,127,120,120,120,185,107,127,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,200,0,208,1,
188,7,216,9,248,12,66,14,128,28,70,85,36,79,79,85,65,49,15,11,185,107,127,120,120,120,185,107,127,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,
196,0,200,1,210,7,234,9,8,13,76,14,119,28,60,72,33,73,72,78,59,45,13,10,183,105,134,120,120,120,
185,107,127,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,
0,0,1,0,156,0,88,1,172,8,140,10,152,13,166,14,32,28,70,45,33,56,50,60,46,33,10,8,167,90,
195,120,120,120,122,120,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,
60,182,64,250,23,8,1,0,144,0,72,1,232,8,160,10,92,13,10,15,32,28,0,24,18,44,44,40,37,29,
8,7,167,90,135,120,120,120,122,120,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,40,60,182,40,54,
0,191,77,60,59,182,64,250,23,8,20,0,6,0,1,0,56,1,168,2,8,7,136,9,32,13,141,14,32,29,
34,43,31,54,66,53,40,30,10,6,255,172,180,120,120,120,105,172,150,44,45,70,130,58,0,0,0,0,40,0,
0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,56,1,168,2,8,7,136,9,32,13,
141,14,32,29,20,75,42,72,88,70,53,40,14,8,255,172,180,120,120,120,105,172,150,44,45,70,130,58,0,0,
0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,56,1,168,2,8,7,
136,9,32,13,141,14,32,29,46,45,32,56,68,54,41,31,10,6,255,172,180,120,120,120,105,172,150,44,45,70,
130,58,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,240,0,
78,2,67,7,176,9,32,13,116,14,32,28,94,49,29,58,68,60,49,40,12,6,184,135,168,120,120,120,169,138,
150,44,45,70,130,58,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,
5,0,156,0,99,1,141,8,140,10,112,13,0,15,32,28,40,34,29,50,45,54,41,29,9,7,167,90,195,120,
120,120,122,120,135,44,45,70,130,57,0,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,
64,250,23,8,1,0,156,0,99,1,174,8,160,10,112,13,10,15,32,28,0,30,30,47,45,43,40,31,9,8,
167,90,135,120,120,120,122,120,120,44,45,70,130,57,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,
146,23,0,0,0,250,0,0,0,0,7,0,1,0,144,0,213,1,96,3,136,9,254,11,157,14,216,26,24,59,
25,66,64,38,35,20,15,7,163,120,143,120,120,120,165,115,130,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,144,0,213,1,96,3,136,9,254,11,157,14,
216,26,55,83,30,79,76,45,41,24,17,8,163,120,143,120,120,120,165,115,130,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,216,0,224,1,72,3,96,9,
244,11,35,15,224,27,65,84,34,78,94,48,55,28,16,7,170,120,90,120,120,120,170,75,120,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,5,0,184,0,209,1,
106,5,132,8,48,12,191,14,64,27,25,50,37,69,40,60,39,22,15,7,167,100,152,120,120,120,137,115,167,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,1,0,
208,0,149,1,246,6,152,8,128,12,191,14,64,27,48,46,32,58,36,60,35,23,14,7,155,105,150,120,120,120,
125,150,165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,64,250,
23,8,1,0,160,0,54,1,199,7,136,9,228,12,191,14,64,27,30,33,24,51,34,29,39,25,16,7,155,105,
135,120,120,120,125,105,150,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,146,23,
0,0,0,250,0,0,1,0,160,0,54,1,248,7,136,9,72,13,191,14,64,27,0,30,22,48,32,28,37,24,
15,7,155,105,135,120,120,120,125,105,150,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,120,54,
0,191,188,40,60,182,64,250,23,8,250,0,5,0,1,0,175,0,65,1,197,3,73,9,19,13,53,15,164,26,
45,37,3,65,33,20,20,27,11,6,177,123,107,120,120,120,177,125,117,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,175,0,65,1,197,3,73,9,19,13,
53,15,164,26,80,75,5,94,48,29,28,39,15,9,177,123,107,120,120,120,177,125,117,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,173,0,70,1,126,4,
196,9,38,13,32,15,221,26,80,56,8,79,36,30,28,34,13,8,175,118,150,120,120,120,177,125,147,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,158,0,
80,1,12,8,130,10,86,13,13,15,255,27,45,31,15,53,30,37,37,31,9,8,168,109,155,120,120,120,177,109,
152,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,
1,0,156,0,72,1,112,8,160,10,92,13,10,15,32,28,0,31,18,55,33,36,37,29,8,7,167,105,155,120,
120,120,122,105,140,44,45,70,130,59,0,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,
64,250,23,8,70,0,3,0,5,0,124,0,72,1,170,2,20,10,8,12,10,15,32,27,40,22,14,46,42,20,
18,13,9,3,141,97,120,120,120,120,60,97,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,
40,53,0,191,197,24,223,182,176,250,125,182,1,0,124,0,72,1,170,2,20,10,8,12,10,15,32,27,30,35,
18,58,52,26,23,16,12,4,141,97,120,120,120,120,60,97,120,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,184,0,189,1,134,3,60,10,88,12,141,14,
128,26,0,72,32,68,70,45,36,28,20,8,162,135,150,120,120,120,162,120,165,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,81,2,31,0,5,251,3,14,16,10,
2,0,251,4,5,238,6,31,245,248,21,249,255,20,1,2,248,237,9,252,240,21,12,254,3,231,222,231,223,229,
207,194,231,228,219,250,253,2,10,249,12,24,6,23,19,16,54,30,0,41,49,22,14,5,11,23,22,18,7,12,
22,7,4,13,9,4,251,255,0,238,239,229,222,17,255,189,238,253,202,244,3,212,230,1,8,7,238,1,35,14,
5,12,6,0,246,9,18,249,26,22,209,0,46,252,6,15,229,15,49,245,217,248,12,2,241,240,238,244,10,1,
223,229,9,7,236,250,248,214,0,24,232,18,64,252,249,46,31,29,53,54,44,42,58,43,34,91,58,225,23,62,
1,6,247,164,185,34,74,0,178,181,177,157,154,132,186,250,166,136,222,211,184,224,239,243,232,224,2,12,22,52,
54,76,50,233,52,125,41,37,77,19,46,107,41,15,77,72,32,34,16,238,21,60,2,234,22,240,188,246,25,224,
189,214,236,220,203,214,237,246,215,182,223,254,206,210,8,250,232,1,253,0,35,30,13,7,4,23,29,12,9,3,
28,55,248,228,53,44,235,247,18,30,0,213,19,51,219,216,12,248,240,242,238,16,11,238,3,10,252,249,0,21,
250,223,45,63,238,237,12,20,41,11,243,17,253,226,251,255,255,0,238,226,220,3,45,230,204,23,0,234,40,12,
248,44,1,218,11,11,247,8,31,38,238,215,15,232,185,0,4,241,49,5,190,20,57,236,241,28,249,228,8,245,
204,29,81,233,208,36,11,225,7,3,246,26,5,220,253,15,236,245,28,11,242,1,253,232,9,32,248,255,47,5,
227,34,25,223,27,56,239,245,24,246,0,41,15,240,14,41,246,204,252,17,244,252,238,219,24,33,214,223,9,232,
220,11,15,240,244,242,232,15,31,245,252,35,18,232,223,247,4,6,33,24,251,20,250,208,40,69,243,12,26,211,
249,46,249,233,14,30,12,230,222,229,235,34,39,216,225,20,238,232,41,27,210,223,25,6,223,2,19,242,7,27,
233,239,31,250,230,36,28,231,8,40,4,253,10,252,0,41,50,246,212,12,15,204,240,32,231,238,18,211,230,54,
0,216,21,12,227,237,251,2,0,9,35,251,224,27,18,237,22,7,221,12,18,229,3,40,5,231,18,44,225,218,
67,25,169,224,23,0,37,19,201,6,63,231,213,46,30,223,1,15,212,238,53,16,216,250,13,238,252,26,247,237,
26,4,224,16,24,228,1,36,239,226,12,16,11,13,241,249,42,27,232,236,4,14,18,3,246,2,18,255,222,248,
29,244,219,0,250,251,29,240,206,13,34,252,241,246,250,252,8,0,0,0,45,0,3,0,5,0,136,0,200,0,
64,6,40,10,232,13,24,16,124,21,45,5,8,15,6,4,2,2,0,0,200,212,187,255,255,175,200,212,187,44,
30,50,85,48,0,0,0,0,60,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,1,0,
136,0,200,0,64,6,40,10,232,13,24,16,124,21,0,14,14,24,10,7,3,3,0,0,200,212,187,255,255,175,
200,212,187,44,30,50,85,48,0,0,0,0,60,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,
0,0,1,0,136,0,200,0,64,6,40,10,232,13,24,16,124,21,0,14,14,24,10,7,3,3,0,0,200,212,
187,255,255,175,200,212,187,44,30,50,85,48,0,0,0,0,60,0,0,0,0,250,222,182,49,229,0,182,8,0,
0,0,1,250,0,0,24,0,3,0,5,0,136,0,200,0,64,6,40,10,232,13,24,16,124,21,25,15,14,25,
10,7,3,3,0,0,200,212,187,255,255,175,200,212,187,44,30,50,85,57,0,0,0,0,40,0,0,0,0,50,
124,182,40,53,0,191,197,24,223,182,176,250,125,182,1,0,136,0,200,0,64,6,40,10,232,13,24,16,124,21,
0,15,14,25,10,7,3,3,0,0,200,212,187,255,255,175,200,212,187,44,30,50,85,57,0,0,0,0,40,0,
0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,136,0,200,0,64,6,40,10,232,13,
24,16,124,21,0,15,14,25,10,7,3,3,0,0,200,212,187,255,255,175,200,212,187,44,30,50,85,57,0,0,
0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,45,0,3,0,5,0,116,0,
232,0,164,6,176,9,152,13,60,15,124,21,45,2,11,6,4,2,2,2,0,0,200,212,187,255,255,175,200,212,
187,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,
1,0,116,0,232,0,164,6,216,9,192,13,80,15,124,21,0,7,17,10,7,14,3,3,0,0,200,212,187,255,
255,175,200,212,187,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,
1,250,0,0,1,0,116,0,232,0,164,6,216,9,192,13,80,15,124,21,0,7,17,10,7,3,3,3,0,0,
200,212,187,255,255,175,200,212,187,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,
8,0,0,0,1,250,0,0,24,0,3,0,5,0,136,0,216,1,64,6,196,9,128,12,100,15,124,21,25,14,
3,36,21,7,3,7,0,0,200,212,187,187,205,175,200,212,187,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,1,0,136,0,216,1,64,6,196,9,128,12,100,15,
124,21,0,11,3,32,21,7,3,7,0,0,200,212,187,187,205,175,200,212,187,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,136,0,216,1,64,6,196,9,
128,12,100,15,124,21,0,11,3,32,21,7,3,7,0,0,200,212,187,187,205,175,200,212,187,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,185,3,16,0,255,254,
255,0,0,2,3,4,4,4,3,3,3,1,1,1,1,0,0,255,253,251,252,253,254,253,254,255,255,1,4,4,
6,4,5,3,3,5,4,2,0,1,0,255,255,253,252,250,251,249,251,252,255,0,2,3,5,3,5,8,12,12,
13,15,16,14,17,233,133,161,0,56,75,57,15,3,245,228,211,211,248,30,57,51,22,255,233,218,213,237,5,23,
25,25,18,1,240,222,226,240,2,18,31,27,12,250,250,245,243,248,254,4,9,8,14,8,255,240,241,250,0,2,
8,10,5,3,0,254,251,247,247,0,6,10,11,5,1,254,247,255,1,0,2,0,1,4,0,254,248,250,253,254,
7,13,9,6,1,251,249,248,250,253,3,8,14,11,4,251,247,248,245,250,1,7,10,13,5,1,250,244,249,253,
0,9,14,14,5,0,238,246,249,246,250,4,16,16,7,7,4,252,249,243,242,250,1,8,12,8,4,0,246,0,
254,4,16,20,3,223,7,7,253,0,235,234,1,2,17,13,1,0,254,253,0,6,20,21,11,5,0,243,226,224,
233,253,13,20,20,13,2,246,249,252,0,8,7,15,13,254,254,244,237,245,251,9,15,10,14,2,245,250,246,250,
2,3,6,5,0,254,251,252,254,4,15,14,8,252,254,251,248,251,252,2,5,0,2,249,253,0,255,0,1,9,
19,8,3,245,243,247,251,5,6,15,9,250,253,3,241,244,249,11,1,251,24,8,240,4,4,5,14,251,1,18,
237,0,0,244,247,251,251,8,6,238,250,1,8,16,8,253,2,22,12,15,0,250,12,26,12,184,158,200,25,50,
34,29,6,12,2,0,252,243,255,14,30,20,251,218,219,246,251,16,21,20,253,0,4,242,223,232,7,26,27,5,
8,7,248,237,243,14,21,13,6,248,247,236,246,255,15,11,11,10,255,233,193,224,12,33,31,31,28,7,8,255,
2,222,207,253,22,29,2,255,245,234,243,0,10,251,253,9,33,23,252,244,246,0,2,5,12,5,246,243,252,254,
0,1,0,254,255,2,4,7,253,249,2,9,9,4,255,255,251,254,3,7,2,250,250,2,2,247,251,3,3,1,
4,2,4,0,0,3,2,0,0,1,0,250,254,0,7,2,252,1,3,1,252,252,0,1,5,7,8,1,254,248,
251,255,1,4,3,2,3,2,0,252,251,252,1,3,4,0,4,0,2,252,254,0,2,1,0,2,0,1,253,250,
7,2,254,3,253,251,2,4,0,13,2,253,251,247,255,8,1,251,0,4,4,7,254,0,0,254,249,254,0,3,
14,8,252,253,253,246,251,252,255,11,16,8,0,244,252,0,3,4,4,4,255,251,252,1,0,0,252,254,3,5,
6,4,255,248,248,7,2,255,255,12,10,4,254,245,248,252,0,0,7,4,0,0,253,2,0,253,255,0,3,2,
2,6,7,254,253,255,248,250,7,9,2,1,0,4,5,253,244,246,255,1,9,13,0,255,255,0,254,250,0,7,
6,2,0,1,1,254,246,245,2,15,11,255,249,249,5,3,255,254,253,0,8,2,5,1,251,255,0,1,5,1,
252,252,0,3,0,2,8,0,253,0,255,2,253,255,0,0,0,1,2,10,0,251,255,4,7,3,249,246,250,2,
11,9,253,246,255,8,6,1,253,253,3,254,2,0,254,252,2,7,8,1,249,253,0,0,0,3,6,0,254,255,
1,1,0,254,250,254,5,10,9,0,246,252,2,5,5,255,255,0,251,255,5,255,0,3,2,4,254,252,0,0,
0,3,2,5,0,251,0,253,0,0,0,3,3,5,4,0,253,252,250,0,7,3,2,0,254,0,255,253,253,255,
3,3,5,5,0,254,253,251,3,9,7,0,253,252,251,251,253,254,2,8,9,4,2,254,252,254,255,2,5,5,
0,255,250,253,2,2,1,1,0,3,1,0,253,251,254,1,5,5,0,249,254,3,5,4,3,1,254,254,255,0,
0,0,0,6,2,254,253,254,253,0,2,5,7,0,255,254,253,0,0,3,7,4,251,249,254,3,6,3,2,0,
254,0,254,252,252,255,1,5,8,6,2,0,253,251,253,254,3,6,5,4,0,251,253,255,252,0,1,2,5,2,
1,0,254,0,0,2,0,254,0,0,0,255,5,5,2,0,253,0,0,254,254,0,0,0,0,0,3,0,5,0,
128,0,64,1,196,4,244,6,148,12,20,15,225,25,20,24,6,51,24,18,0,9,3,6,105,155,167,142,180,175,
105,155,167,44,45,70,130,54,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,
125,182,5,0,136,0,208,1,80,5,228,7,108,12,216,14,225,25,30,67,30,90,45,30,21,15,3,9,105,125,
167,142,150,175,105,125,167,44,45,70,130,56,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,
124,182,1,250,0,0,1,0,136,0,240,1,80,5,12,8,108,12,56,14,225,25,0,70,30,84,51,33,18,18,
3,9,105,170,167,157,150,175,105,170,167,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,
0,182,8,0,0,0,1,250,0,0,0,0,3,0,5,0,228,0,80,1,136,4,164,6,168,12,236,14,200,25,
20,31,18,39,27,15,0,6,6,6,150,252,157,160,150,175,150,252,157,44,45,70,130,54,0,0,0,0,40,0,
0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,5,0,224,0,32,2,0,5,68,7,128,12,
76,14,200,25,30,77,15,87,66,36,15,18,6,6,150,167,157,160,150,175,150,167,157,44,45,70,130,56,0,0,
0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,232,0,168,2,0,5,
252,8,128,12,36,14,200,25,0,56,45,60,60,27,27,21,3,6,150,167,207,255,182,175,150,167,207,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,0,0,4,0,
5,0,232,0,136,1,196,4,164,6,184,12,220,15,124,21,20,31,30,36,24,15,0,3,0,0,180,152,180,150,
250,175,180,152,180,44,45,70,130,54,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,
176,250,125,182,5,0,0,1,248,1,160,5,52,8,184,12,200,15,124,21,20,61,27,69,36,24,9,12,3,3,
197,152,217,210,250,175,197,152,217,44,45,70,130,55,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,
197,254,124,182,1,250,0,0,5,0,0,1,72,2,4,6,132,8,184,12,90,14,124,21,24,80,30,84,54,39,
24,15,3,3,197,152,217,210,250,175,197,152,217,44,45,70,130,56,0,0,0,0,40,0,0,0,0,250,222,182,
49,229,0,182,8,0,0,0,1,250,0,0,1,0,176,0,120,2,121,6,64,9,184,12,90,14,124,21,0,61,
30,69,66,45,42,27,3,3,252,152,157,210,250,175,252,152,157,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,0,0,3,0,5,0,208,0,136,1,176,4,164,6,
80,12,185,15,169,26,20,30,27,42,21,12,0,3,0,6,150,147,172,160,150,175,150,147,172,44,45,70,130,54,
0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,5,0,208,0,192,1,
180,5,52,8,80,12,185,15,169,26,30,39,27,51,30,21,15,12,0,6,150,185,152,160,150,175,150,185,152,44,
45,70,130,56,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,
208,0,240,1,224,6,16,9,148,12,76,14,88,27,0,58,27,75,33,33,30,24,6,6,150,142,170,160,150,175,
150,142,170,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,
0,0,0,0,3,0,5,0,200,0,136,1,76,4,164,6,212,12,14,15,150,25,19,27,39,27,18,12,0,3,
6,3,150,155,195,137,255,252,150,155,195,44,45,70,130,54,0,0,0,0,40,0,0,0,0,50,124,182,40,53,
0,191,197,24,223,182,176,250,125,182,5,0,200,0,204,1,176,4,168,7,212,12,14,15,150,25,30,71,39,72,
51,21,15,12,6,6,150,155,195,137,255,252,150,155,195,44,45,70,130,56,0,0,0,0,40,0,0,0,0,0,
0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,200,0,80,2,252,3,76,9,88,12,196,14,150,25,
0,78,40,78,52,23,20,20,5,5,150,155,162,185,217,210,150,155,162,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,0,0,3,0,5,0,128,0,64,1,196,4,
164,6,148,12,20,15,225,25,20,24,6,51,24,18,0,9,3,6,105,155,167,142,180,175,105,155,167,44,45,70,
130,54,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,5,0,136,0,
208,1,80,5,228,7,108,12,216,14,225,25,30,67,30,90,45,30,21,15,3,9,105,125,167,142,150,175,105,125,
167,44,45,70,130,56,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,
1,0,136,0,240,1,80,5,12,8,108,12,56,14,225,25,0,70,30,84,51,33,18,18,3,9,105,170,167,157,
150,175,105,170,167,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,
1,250,0,0,139,0,4,0,1,0,128,0,40,2,161,5,96,9,188,12,116,14,96,27,50,59,34,66,80,45,
47,36,16,8,167,150,135,120,120,120,197,120,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,
40,53,0,191,197,24,223,182,176,250,125,182,3,0,128,0,40,2,161,5,96,9,188,12,116,14,96,27,50,81,
40,76,93,52,55,42,15,8,167,150,135,120,120,120,197,120,120,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,128,0,40,2,161,5,96,9,188,12,116,14,
96,27,40,69,37,71,86,48,51,39,14,7,167,150,135,120,120,120,197,120,120,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,128,0,40,2,161,5,96,9,
188,12,116,14,96,27,0,46,31,58,70,39,35,32,16,9,167,150,135,120,120,120,197,120,120,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,0,0,3,0,1,0,
196,0,229,1,255,3,0,10,28,12,116,14,160,26,53,62,35,71,73,28,34,20,9,8,162,120,132,120,120,120,
162,90,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,
125,182,7,0,208,0,229,1,123,3,220,10,204,11,141,14,0,26,75,64,38,81,60,33,35,16,11,8,162,105,
87,120,120,120,162,75,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,
124,182,1,250,0,0,1,0,136,0,194,1,24,3,164,11,68,12,241,14,0,26,0,27,28,46,28,31,28,16,
11,8,162,135,87,120,120,120,162,75,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,
0,182,8,0,0,0,1,250,0,0,151,0,4,0,1,0,32,1,88,3,40,5,140,10,112,13,191,14,32,28,
46,50,30,67,55,40,30,19,9,4,217,155,105,120,120,120,247,170,165,44,65,75,130,54,0,0,0,0,50,0,
0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,32,1,88,3,40,5,140,10,112,13,
191,14,32,28,40,84,40,87,72,52,39,24,12,6,217,155,105,120,120,120,247,170,165,44,65,75,130,54,0,0,
0,0,50,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,32,1,88,3,40,5,
140,10,112,13,191,14,32,28,65,82,39,86,71,52,38,24,11,5,217,155,105,120,120,120,247,170,165,44,65,75,
130,53,0,0,0,0,50,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,32,1,
88,3,40,5,140,10,112,13,191,14,32,28,0,50,30,67,55,40,30,19,9,4,217,155,105,120,120,120,247,170,
165,44,65,75,130,53,0,0,0,0,50,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,
150,0,4,0,1,0,186,0,146,2,128,5,156,9,248,12,141,14,160,27,50,40,30,58,58,36,29,23,13,0,
180,150,172,120,120,120,200,120,167,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,
197,24,223,182,176,250,125,182,3,0,186,0,146,2,128,5,156,9,248,12,141,14,160,27,60,78,42,80,80,51,
40,33,18,0,180,150,172,120,120,120,200,120,167,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,
24,53,0,191,197,254,124,182,1,250,0,0,1,0,186,0,146,2,128,5,156,9,248,12,141,14,160,27,40,55,
35,67,67,43,33,27,15,0,180,150,172,120,120,120,200,120,167,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,186,0,146,2,128,5,156,9,248,12,141,14,
160,27,0,33,30,51,51,33,28,23,12,0,180,150,177,120,120,120,200,120,172,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,200,0,4,0,1,0,248,0,134,2,
244,6,196,9,52,13,196,14,64,28,45,39,28,52,57,51,36,22,7,5,193,135,180,120,120,120,217,180,150,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,
248,0,134,2,244,6,196,9,52,13,196,14,64,28,85,83,41,76,83,75,53,33,11,7,193,135,180,120,120,120,
217,180,150,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,
0,0,1,0,248,0,134,2,244,6,196,9,52,13,196,14,64,28,70,67,37,68,75,67,47,29,10,6,193,135,
180,120,120,120,217,180,150,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,
0,0,1,250,0,0,1,0,248,0,134,2,244,6,196,9,52,13,196,14,64,28,0,31,25,46,50,45,32,20,
6,4,193,135,180,120,120,120,217,180,150,44,45,70,130,57,0,0,0,0,40,0,0,0,0,250,222,182,0,0,
0,0,188,40,60,182,64,250,23,8,100,0,4,0,1,0,192,0,144,1,168,7,40,10,92,13,120,15,96,25,
50,51,30,72,58,50,42,30,12,5,160,90,120,120,120,120,130,90,120,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,192,0,152,1,148,7,40,10,92,13,
120,15,96,25,60,92,41,98,79,68,57,41,17,7,160,90,120,120,120,120,130,90,120,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,192,0,152,1,148,7,
40,10,92,13,120,15,96,25,40,74,37,88,71,61,51,37,15,6,160,90,120,120,120,120,130,90,120,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,192,0,
152,1,148,7,40,10,92,13,120,15,96,25,0,43,28,67,54,46,39,28,11,5,160,90,120,120,120,120,130,90,
120,44,45,70,130,56,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,
149,0,4,0,1,0,176,0,152,1,128,7,0,10,92,13,20,15,96,25,50,53,26,83,45,45,42,25,14,7,
150,105,120,120,120,120,120,60,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,
197,24,223,182,176,250,125,182,3,0,192,0,152,1,128,7,20,10,92,13,120,15,96,25,60,98,38,106,57,67,
67,39,16,7,160,90,120,120,120,120,130,90,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,
24,53,0,191,197,254,124,182,1,250,0,0,1,0,192,0,160,1,108,7,20,10,92,13,120,15,96,25,40,73,
35,90,49,57,57,33,13,7,160,97,120,120,120,120,130,90,120,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,192,0,160,1,108,7,20,10,92,13,120,15,
96,25,0,50,31,75,42,47,47,27,10,8,160,105,120,120,120,120,130,60,120,44,45,70,130,56,0,0,0,0,
40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,175,0,4,0,1,0,170,0,120,1,
178,7,25,10,37,13,55,15,96,25,45,44,25,67,44,47,45,28,11,5,160,91,120,131,120,120,130,95,120,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,
170,0,120,1,178,7,25,10,37,13,55,15,96,25,70,88,36,95,63,66,64,39,16,7,160,91,120,131,120,120,
130,95,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,
0,0,1,0,170,0,120,1,178,7,25,10,37,13,55,15,96,25,60,70,32,85,56,59,58,35,14,6,160,91,
120,131,120,120,130,95,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,
0,0,1,250,0,0,1,0,170,0,120,1,178,7,25,10,37,13,55,15,96,25,0,35,22,60,39,42,41,25,
10,4,160,91,120,131,120,120,130,95,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,
0,0,188,40,60,182,64,250,23,8,150,0,4,0,1,0,232,0,218,2,222,3,60,10,224,11,222,13,160,28,
50,64,34,59,74,34,35,24,9,7,230,150,120,120,120,120,185,105,120,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,232,0,158,2,178,3,60,10,224,11,
222,13,32,28,60,103,27,76,97,40,40,26,14,6,182,150,120,120,120,120,182,105,120,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,232,0,158,2,178,3,
60,10,224,11,222,13,32,28,40,102,27,76,97,39,40,26,14,6,182,150,120,120,120,120,182,105,120,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,228,0,
118,2,134,3,140,10,224,11,66,14,32,28,0,56,31,52,75,41,39,25,13,9,177,150,120,120,120,120,177,75,
120,44,45,70,130,55,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,
185,0,4,0,1,0,216,0,142,2,250,4,26,10,32,13,20,15,210,27,45,45,30,55,66,39,38,24,13,5,
185,160,141,120,120,120,235,150,118,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,
197,24,223,182,176,250,125,182,3,0,216,0,142,2,250,4,26,10,12,13,20,15,210,27,80,86,39,78,90,51,
50,31,18,7,185,160,141,120,120,120,235,150,118,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,
24,53,0,191,197,254,124,182,1,250,0,0,1,0,216,0,142,2,250,4,26,10,32,13,20,15,210,27,60,75,
37,73,84,47,47,29,16,6,185,160,141,120,120,120,235,150,118,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,216,0,142,2,250,4,26,10,32,13,20,15,
210,27,0,39,28,51,61,36,36,22,12,5,185,160,141,120,120,120,235,150,118,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,140,0,4,0,1,0,184,0,189,1,
134,3,60,10,88,12,141,14,128,26,50,57,28,61,63,40,32,25,18,7,162,135,150,120,120,120,162,120,165,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,
184,0,189,1,134,3,60,10,88,12,141,14,128,26,50,83,38,71,75,52,42,33,24,6,162,135,150,120,120,120,
162,120,165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,
0,0,1,0,184,0,189,1,134,3,60,10,88,12,141,14,128,26,40,69,35,65,68,47,39,30,22,6,162,135,
150,120,120,120,162,120,165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,
0,0,1,250,0,0,1,0,184,0,189,1,134,3,60,10,88,12,141,14,128,26,0,47,26,56,57,37,29,23,
16,7,162,135,150,120,120,120,162,120,165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,
0,0,188,40,60,182,64,250,23,8,0,0,6,0,1,0,244,0,77,3,87,4,160,10,148,12,41,14,96,27,
50,59,26,60,76,28,19,17,5,7,225,195,120,120,120,120,165,105,120,44,45,70,130,56,0,0,0,0,40,0,
0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,244,0,7,3,43,4,240,10,148,12,
41,14,96,27,45,107,29,67,105,48,41,41,13,6,200,165,135,120,120,120,200,120,135,44,45,70,130,57,0,0,
0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,0,1,27,3,255,3,
64,11,228,12,41,14,224,27,59,101,33,69,92,41,45,45,11,6,200,135,150,120,120,120,200,75,210,44,45,70,
130,56,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,228,0,
7,3,10,4,240,10,52,13,41,14,224,27,58,94,32,72,86,48,50,47,11,6,200,135,150,120,120,120,200,90,
135,44,45,70,130,56,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,
1,0,228,0,243,2,255,3,160,10,148,12,41,14,224,27,38,63,32,63,82,35,38,36,13,7,167,135,120,120,
120,120,167,75,135,44,45,70,130,55,0,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,
64,250,23,8,1,0,164,0,27,3,98,4,20,10,148,12,41,14,224,27,0,39,23,59,58,28,24,24,7,7,
167,120,120,120,120,120,227,105,105,44,45,70,130,56,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,
146,23,0,0,0,250,0,0,0,0,5,0,1,0,140,0,244,1,172,5,36,9,248,12,41,14,32,27,45,48,
30,63,56,56,40,40,15,8,167,135,180,120,120,120,167,120,135,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,140,0,224,1,128,5,16,9,148,12,41,14,
32,27,48,69,26,68,82,75,61,50,25,8,170,135,165,120,120,120,140,120,150,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,172,0,224,1,128,5,16,9,
168,12,41,14,160,27,41,75,33,70,90,74,60,53,17,8,170,120,150,120,120,120,170,120,90,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,204,0,249,1,
139,5,16,9,168,12,41,14,160,27,78,53,34,68,67,54,45,35,15,8,170,120,150,120,120,120,140,90,120,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,1,0,
204,0,33,2,139,5,16,9,168,12,141,14,160,27,0,35,31,52,54,52,38,30,11,8,170,135,150,120,120,120,
140,90,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,64,250,
23,8,76,0,4,0,45,0,40,0,112,1,68,3,36,9,28,12,216,14,32,28,0,45,19,77,28,16,16,12,
8,0,120,105,120,120,120,120,120,105,120,44,45,70,130,53,0,0,0,0,40,0,0,0,0,50,124,182,40,53,
0,191,197,24,223,182,176,250,125,182,37,0,40,0,112,1,68,3,36,9,28,12,216,14,32,28,40,45,19,77,
28,16,16,12,8,0,120,105,120,120,120,120,120,105,120,44,45,70,130,53,0,0,0,0,40,0,0,0,0,0,
0,0,24,53,0,191,197,254,124,182,1,250,0,0,37,0,72,0,104,1,153,4,36,9,148,12,166,14,192,27,
36,46,16,80,33,22,26,17,13,0,120,90,120,120,120,120,120,90,105,44,45,70,130,56,0,0,0,0,40,0,
0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,40,0,79,1,221,7,96,9,208,12,
116,14,192,27,0,90,9,86,74,89,97,58,13,0,120,120,120,120,120,120,120,120,120,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,0,0,5,0,33,0,152,0,
48,1,174,8,200,10,92,13,135,15,160,26,52,58,8,76,67,65,53,30,14,8,180,120,120,120,120,120,180,105,
150,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,
3,0,152,0,40,1,172,8,4,11,92,13,135,15,160,26,75,69,8,83,73,74,75,36,17,8,167,105,120,120,
120,120,167,90,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,
1,250,0,0,1,0,152,0,39,1,229,8,4,11,12,13,216,14,64,26,40,43,8,60,60,63,63,34,11,8,
167,105,120,120,120,120,167,105,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,
8,0,0,0,1,250,0,0,1,0,125,0,0,1,56,9,4,11,20,13,0,15,64,26,40,33,8,52,52,53,
54,29,11,8,167,99,114,120,120,120,167,105,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,
0,0,0,0,188,40,60,182,64,250,23,8,1,0,84,0,216,0,96,9,4,11,32,13,60,15,64,26,0,20,
8,40,41,39,40,23,10,8,167,90,105,120,120,120,167,120,120,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,40,60,182,40,54,0,191,77,60,59,182,64,250,23,8,0,0,5,0,1,0,152,0,209,1,112,3,80,10,
104,11,141,14,192,27,43,48,27,57,61,29,29,16,12,6,162,135,165,120,120,120,117,105,120,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,168,0,209,1,
68,3,80,10,104,11,141,14,32,27,93,92,29,72,80,48,44,26,16,6,165,135,150,120,120,120,165,135,135,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,
168,0,209,1,13,3,120,10,104,11,141,14,160,27,42,77,32,74,65,49,43,25,18,7,167,135,120,120,120,120,
122,120,150,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,
0,0,1,0,200,0,13,2,57,3,120,10,104,11,141,14,160,27,77,39,27,46,51,38,36,14,10,7,167,135,
135,120,120,120,137,105,150,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,
60,182,64,250,23,8,1,0,232,0,18,2,233,3,60,10,8,12,141,14,160,27,0,26,30,41,48,23,20,17,
8,7,167,120,135,120,120,120,137,105,105,44,45,70,130,59,0,0,0,0,40,0,0,0,0,40,60,182,40,54,
0,191,77,60,59,182,64,250,23,8,0,0,5,0,1,0,84,0,104,1,70,6,212,8,148,12,41,14,64,26,
42,48,17,72,53,40,40,37,11,0,120,150,135,120,120,120,60,135,120,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,84,0,128,1,0,5,232,8,48,12,
136,14,192,25,40,67,19,79,82,64,53,45,18,8,167,135,135,120,120,120,107,90,120,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,184,0,152,1,232,3,
96,9,28,12,236,14,128,26,50,62,26,66,68,45,37,28,21,6,162,135,150,120,120,120,162,120,165,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,84,0,
88,1,212,3,196,9,148,12,196,14,192,25,67,56,16,83,38,36,30,29,13,0,120,145,135,120,120,120,60,100,
120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,
1,0,84,0,34,1,255,3,172,8,28,12,116,14,192,25,0,27,16,57,35,17,20,20,10,0,120,135,135,120,
120,120,60,90,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,
64,250,23,8,0,0,5,0,1,0,84,0,104,1,70,6,212,8,148,12,41,14,64,26,42,43,17,65,54,40,
34,31,11,7,162,150,135,120,120,120,102,135,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,
40,53,0,191,197,24,223,182,176,250,125,182,3,0,84,0,104,1,26,6,212,8,148,12,116,14,192,25,40,71,
19,81,83,74,54,46,18,7,167,135,135,120,120,120,107,90,120,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,88,0,104,1,48,6,172,8,148,12,116,14,
192,25,50,73,19,91,65,65,53,46,20,7,167,120,135,120,120,120,107,90,120,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,84,0,64,1,106,5,192,8,
68,12,116,14,192,25,67,30,11,58,41,36,31,23,13,7,165,135,135,120,120,120,105,90,120,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,1,0,84,0,34,1,
255,3,172,8,28,12,116,14,192,25,0,28,16,54,35,17,20,20,9,7,165,135,135,120,120,120,105,90,120,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,64,250,23,8,0,0,
6,0,1,0,236,0,82,3,84,5,116,9,88,12,116,14,224,27,50,57,28,58,75,41,43,27,10,8,250,120,
210,120,120,120,255,120,165,44,45,70,130,56,0,0,0,0,45,0,0,0,0,50,124,182,40,53,0,191,197,24,
223,182,176,250,125,182,3,0,236,0,62,3,84,5,136,9,88,12,116,14,224,27,66,104,30,81,98,53,57,36,
12,6,225,120,210,120,120,120,255,120,165,44,45,70,130,56,0,0,0,0,45,0,0,0,0,0,0,0,24,53,
0,191,197,254,124,182,1,250,0,0,1,0,220,0,42,3,252,4,36,9,128,12,41,14,224,27,41,69,27,59,
81,41,52,32,12,7,167,120,210,120,120,120,255,120,165,44,45,70,130,56,0,0,0,0,40,0,0,0,0,250,
222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,0,1,173,2,87,4,16,9,48,12,41,14,128,27,
40,60,28,49,77,34,51,36,15,6,237,207,192,120,120,120,141,120,147,44,45,70,130,58,0,0,0,0,40,0,
0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,1,0,0,1,234,1,189,3,16,9,8,12,
41,14,96,27,40,62,36,68,59,21,35,23,15,8,205,90,180,120,120,120,145,120,135,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,64,250,23,8,1,0,172,0,232,1,132,3,
192,8,168,12,60,15,96,27,0,29,25,50,42,16,18,13,11,9,200,90,120,120,120,120,200,120,135,44,45,70,
130,56,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,146,23,0,0,0,250,0,0,0,0,6,0,
1,0,232,0,38,2,117,5,116,9,108,12,10,15,96,28,46,56,40,60,61,44,32,36,20,8,167,120,165,120,
120,120,227,150,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,
176,250,125,182,3,0,248,0,118,2,73,5,36,9,28,12,166,14,96,28,25,107,47,85,109,75,55,45,19,8,
167,120,165,120,120,120,197,120,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,
197,254,124,182,1,250,0,0,1,0,240,0,118,2,73,5,212,8,28,12,141,14,96,28,43,79,36,73,95,72,
54,42,18,7,170,120,165,120,120,120,200,120,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,
49,229,0,182,8,0,0,0,1,250,0,0,1,0,8,1,18,2,117,5,132,8,204,11,166,14,96,28,48,53,
24,70,70,36,32,26,15,8,165,120,135,120,120,120,150,120,120,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,5,0,192,0,174,1,197,4,172,8,204,11,141,14,
224,28,46,40,28,64,39,27,18,16,8,8,162,120,135,120,120,120,117,90,180,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,64,250,23,8,1,0,176,0,134,1,189,3,92,8,
204,11,141,14,224,28,0,33,24,58,38,22,15,12,9,8,152,120,75,120,120,120,107,90,120,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,146,23,0,0,0,250,0,0,226,0,7,0,5,0,
44,1,92,3,216,4,4,11,72,13,191,14,64,27,51,47,28,58,63,37,40,27,4,4,167,165,165,120,120,120,
167,105,165,44,60,70,130,55,0,0,0,0,45,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,
125,182,3,0,44,1,92,3,216,4,4,11,72,13,191,14,64,27,70,100,41,85,92,54,58,39,9,7,167,165,
165,120,120,120,167,105,165,44,60,70,130,55,0,0,0,0,45,0,0,0,0,0,0,0,24,53,0,191,197,254,
124,182,1,250,0,0,1,0,44,1,120,3,216,4,200,10,72,13,191,14,64,27,15,92,39,80,87,51,55,37,
8,6,167,165,165,120,120,120,167,105,165,44,60,70,130,55,0,0,0,0,45,0,0,0,0,250,222,182,49,229,
0,182,8,0,0,0,1,250,0,0,33,0,20,1,80,3,29,5,216,9,72,13,136,14,64,27,23,59,29,68,
71,53,51,35,8,6,167,172,120,120,120,120,167,172,165,44,45,70,130,55,0,0,0,0,40,0,0,0,0,250,
222,182,0,0,0,0,188,40,60,182,64,250,23,8,1,0,216,0,16,3,4,6,196,9,52,13,176,14,64,27,
33,43,32,66,56,47,43,39,8,7,167,150,180,120,120,120,167,120,135,44,45,70,130,53,0,0,0,0,40,0,
0,0,0,40,60,182,40,54,0,191,77,60,59,182,64,250,23,8,1,0,212,0,232,1,188,7,40,10,92,13,
120,15,64,27,34,35,37,54,51,51,39,38,13,9,167,90,180,120,120,120,137,75,150,44,45,70,130,53,0,0,
0,0,40,0,0,0,0,0,0,0,0,0,0,0,146,23,0,0,0,250,0,0,1,0,196,0,159,1,252,7,
40,10,112,13,120,15,220,27,0,37,39,55,48,48,39,32,11,10,167,90,114,120,120,120,122,75,90,44,45,70,
130,52,0,0,0,0,40,0,0,0,0,250,222,182,120,54,0,191,188,40,60,182,64,250,23,8,0,0,7,0,
1,0,16,1,53,2,12,3,160,10,244,11,35,15,96,28,24,63,33,62,70,43,37,17,11,7,167,120,90,120,
120,120,167,75,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,
176,250,125,182,3,0,0,1,33,2,12,3,160,10,244,11,35,15,224,27,49,112,43,87,92,61,53,26,15,6,
165,120,90,120,120,120,165,75,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,
197,254,124,182,1,250,0,0,1,0,216,0,33,2,72,3,40,10,244,11,35,15,224,27,65,92,39,81,98,49,
57,29,17,7,170,120,90,120,120,120,170,75,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,
49,229,0,182,8,0,0,0,1,250,0,0,37,0,184,0,209,1,106,5,172,8,108,12,216,14,64,27,30,48,
36,68,39,59,38,22,15,7,167,100,152,120,120,120,137,115,167,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,1,0,208,0,149,1,246,6,172,8,188,12,236,14,
64,27,48,43,32,56,36,59,35,22,13,7,155,105,150,120,120,120,125,150,165,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,64,250,23,8,1,0,160,0,54,1,199,7,136,9,
112,13,60,15,64,27,26,35,25,53,36,30,41,27,16,7,155,105,135,120,120,120,125,105,150,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,146,23,0,0,0,250,0,0,1,0,160,0,54,1,
210,7,196,9,92,13,60,15,64,28,0,24,27,45,27,20,32,21,12,7,157,105,135,120,120,120,82,105,150,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,120,54,0,191,188,40,60,182,64,250,23,8,0,0,
6,0,1,0,96,0,104,1,92,8,80,10,232,13,60,15,160,27,42,48,10,66,51,58,42,33,10,8,155,165,
150,120,120,120,155,105,165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,
223,182,176,250,125,182,3,0,104,0,112,1,108,8,160,10,72,13,60,15,32,27,70,59,19,64,74,76,66,36,
14,8,150,120,150,120,120,120,150,120,165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,
0,191,197,254,124,182,1,250,0,0,1,0,104,0,119,1,52,8,160,10,72,13,60,15,32,27,40,52,18,61,
70,72,63,34,14,7,150,120,150,120,120,120,150,120,165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,
222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,184,0,239,1,111,7,196,9,112,13,60,15,64,27,
44,52,30,75,59,58,44,30,14,8,167,90,150,120,120,120,167,90,165,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,5,0,152,0,16,2,124,6,156,9,32,13,
85,15,64,28,35,27,23,45,46,48,38,21,7,8,167,150,120,120,120,120,167,105,135,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,64,250,23,8,1,0,200,0,16,2,59,6,
156,9,112,13,29,16,192,28,0,25,26,43,39,39,31,17,5,9,167,150,120,120,120,120,167,105,135,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,146,23,0,0,0,250,0,0,190,0,5,0,
1,0,132,0,8,2,136,4,136,9,128,12,156,14,84,27,50,40,30,52,60,40,33,28,16,6,167,148,143,120,
120,120,197,135,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,
176,250,125,182,3,0,132,0,8,2,136,4,136,9,128,12,156,14,84,27,50,71,40,70,80,54,44,38,22,8,
167,148,143,120,120,120,197,135,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,
197,254,124,182,1,250,0,0,1,0,128,0,16,2,220,4,106,9,146,12,144,14,87,27,40,57,35,64,74,48,
41,35,19,8,167,148,140,120,120,120,197,135,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,
49,229,0,182,8,0,0,0,1,250,0,0,1,0,123,0,16,2,48,5,56,9,128,12,132,14,91,27,50,42,
29,55,65,39,37,30,16,7,167,149,138,120,120,120,197,135,120,44,45,70,130,55,0,0,0,0,40,0,0,0,
0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,1,0,119,0,12,2,121,5,252,8,108,12,122,14,
94,27,0,35,25,50,61,38,35,27,14,7,167,149,136,120,120,120,197,135,120,44,45,70,130,55,0,0,0,0,
40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,64,250,23,8,0,0,6,0,1,0,140,0,174,1,
152,3,36,9,164,11,16,14,96,25,48,61,31,70,69,41,27,15,12,7,167,120,120,120,120,120,167,120,150,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,
140,0,174,1,192,3,36,9,164,11,16,14,96,25,36,75,35,82,66,44,35,22,16,6,165,120,120,120,120,120,
165,120,150,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,
0,0,1,0,140,0,154,1,156,3,36,9,164,11,16,14,96,25,49,76,34,76,81,39,33,21,20,6,167,120,
120,120,120,120,167,120,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,
0,0,1,250,0,0,1,0,228,0,239,1,255,3,252,8,184,11,16,14,192,25,49,60,31,62,76,40,30,20,
18,7,167,111,135,120,120,120,191,129,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,
0,0,188,40,60,182,64,250,23,8,1,0,186,0,14,2,137,4,252,8,8,12,41,14,112,26,47,35,26,49,
62,35,28,19,13,6,167,115,131,120,120,120,191,129,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,40,
60,182,40,54,0,191,77,60,59,182,64,250,23,8,1,0,144,0,46,2,20,5,252,8,88,12,66,14,32,27,
0,29,25,45,57,36,31,23,11,7,167,120,127,120,120,120,255,105,90,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,0,0,0,0,0,0,0,146,23,0,0,0,250,0,0,0,0,7,0,5,0,44,1,92,3,216,4,
4,11,72,13,191,14,64,27,45,47,28,58,63,37,40,27,6,4,167,165,165,120,120,120,167,105,165,44,45,70,
130,57,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,44,1,
92,3,216,4,4,11,72,13,191,14,64,27,40,107,42,88,95,55,60,40,9,7,167,165,165,120,120,120,167,105,
165,44,45,70,130,57,0,0,0,0,45,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,
1,0,80,1,132,3,161,5,36,9,112,13,241,14,64,27,31,71,36,76,95,55,45,28,10,7,240,165,120,120,
120,120,195,120,120,44,45,70,130,57,0,0,0,0,45,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,
1,250,0,0,1,0,32,1,248,2,191,6,36,9,192,13,241,14,64,27,25,41,32,47,53,53,50,47,11,7,
255,180,180,120,120,120,200,195,180,44,45,70,130,57,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,
188,40,60,182,64,250,23,8,1,0,224,0,224,1,45,7,136,9,112,13,241,14,64,27,27,42,34,43,61,61,
51,50,12,8,255,105,180,120,120,120,165,120,135,44,45,70,130,58,0,0,0,0,40,0,0,0,0,40,60,182,
40,54,0,191,77,60,59,182,64,250,23,8,1,0,224,0,8,2,23,7,176,9,112,13,241,14,64,27,52,37,
28,51,56,56,49,43,8,8,255,90,180,120,120,120,187,105,135,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,0,0,0,0,0,0,0,146,23,0,0,0,250,0,0,1,0,208,0,128,2,238,5,96,9,52,13,216,14,
64,27,0,21,20,40,48,36,32,28,7,8,252,90,165,120,120,120,252,105,120,44,45,70,130,56,0,0,0,0,
40,0,0,0,0,250,222,182,120,54,0,191,188,40,60,182,64,250,23,8,0,0,6,0,1,0,0,1,136,3,
200,5,110,10,154,13,40,15,67,27,45,46,28,60,58,41,34,27,9,4,228,152,186,132,120,120,255,174,173,44,
45,70,130,57,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,
0,1,136,3,200,5,110,10,154,13,40,15,67,27,29,90,39,85,81,57,48,38,12,5,228,152,186,132,120,120,
255,174,173,44,45,70,130,57,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,
0,0,5,0,8,1,136,3,62,5,20,10,188,12,166,14,32,27,39,88,33,76,89,68,56,46,13,6,185,180,
165,120,120,120,245,135,120,44,45,70,130,57,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,
0,0,1,250,0,0,5,0,8,1,178,2,32,4,116,9,8,12,166,14,64,27,42,90,37,64,99,52,43,35,
14,7,185,135,150,120,120,120,194,105,111,44,45,70,130,56,0,0,0,0,40,0,0,0,0,250,222,182,0,0,
0,0,188,40,60,182,64,250,23,8,1,0,200,0,33,2,178,3,36,9,8,12,216,14,160,27,84,49,27,58,
75,37,32,23,12,8,177,120,120,120,120,120,147,105,105,44,45,70,130,57,0,0,0,0,40,0,0,0,0,40,
60,182,40,54,0,191,77,60,59,182,64,250,23,8,1,0,200,0,193,2,64,5,16,9,128,12,241,14,32,28,
0,28,28,44,60,36,32,26,8,8,185,150,120,120,120,120,155,150,105,44,45,70,130,56,0,0,0,0,40,0,
0,0,0,0,0,0,0,0,0,0,146,23,0,0,0,250,0,0,140,0,5,0,1,0,192,0,32,2,60,5,
156,9,92,13,52,18,0,28,45,54,25,63,72,40,34,17,14,6,170,165,135,120,120,120,170,180,135,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,192,0,
32,2,60,5,156,9,92,13,52,18,0,28,50,96,34,84,96,53,45,22,19,8,170,165,135,120,120,120,170,180,
135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,
1,0,192,0,32,2,60,5,156,9,92,13,52,18,0,28,60,87,32,80,91,50,43,21,18,7,170,165,135,120,
120,120,170,180,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,
1,250,0,0,1,0,201,0,104,2,166,4,146,9,240,10,127,18,0,28,35,29,25,49,38,30,24,8,11,4,
170,165,136,120,120,120,170,180,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,
188,40,60,182,64,250,23,8,1,0,201,0,104,2,166,4,146,9,240,10,127,18,0,28,0,28,24,48,38,30,
23,8,10,4,170,165,136,120,120,120,170,180,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,40,60,182,
40,54,0,191,77,60,59,182,64,250,23,8,135,0,5,0,1,0,216,0,136,2,156,4,35,10,227,12,20,15,
214,27,45,70,34,68,76,43,39,30,15,6,189,159,136,120,120,120,237,165,165,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,216,0,136,2,156,4,35,10,
227,12,20,15,214,27,50,124,45,90,101,57,52,40,20,8,189,159,136,120,120,120,237,165,165,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,216,0,136,2,
176,4,35,10,227,12,20,15,214,27,55,111,43,86,96,54,49,38,19,8,189,159,136,120,120,120,237,165,165,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,
204,0,128,2,116,4,156,9,240,10,152,18,0,28,35,33,30,51,34,32,27,6,11,4,170,165,137,120,120,120,
170,180,137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,
23,8,1,0,204,0,128,2,116,4,156,9,240,10,152,18,0,28,0,28,25,48,32,30,25,6,10,4,170,165,
137,120,120,120,170,180,137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,
59,182,64,250,23,8,190,0,5,0,1,0,0,1,80,2,232,3,80,10,28,12,36,14,15,28,50,42,31,49,
62,20,36,20,5,5,186,151,122,120,120,120,105,164,135,44,45,70,130,59,155,0,0,0,40,0,0,0,0,50,
124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,0,1,80,2,232,3,80,10,28,12,36,14,15,28,
50,82,43,68,86,28,50,28,8,7,186,151,122,120,120,120,105,164,135,44,45,70,130,59,155,0,0,0,40,0,
0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,0,1,80,2,232,3,80,10,28,12,
36,14,15,28,50,82,43,68,86,28,50,28,8,7,186,151,122,120,120,120,105,164,135,44,45,70,130,59,170,0,
0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,0,1,80,2,232,3,
80,10,28,12,36,14,15,28,40,59,36,58,73,24,42,24,6,6,186,151,122,120,120,120,105,164,135,44,45,70,
130,59,170,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,1,0,0,1,
80,2,232,3,80,10,28,12,36,14,15,28,0,25,24,38,48,16,28,16,4,4,186,151,122,120,120,120,105,164,
135,44,45,70,130,59,170,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,64,250,23,8,
190,0,5,0,1,0,228,0,28,2,128,3,72,10,190,11,15,14,216,27,50,57,28,61,69,28,35,19,9,5,
180,112,128,120,120,120,105,135,135,44,45,70,130,59,155,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,
197,24,223,182,176,250,125,182,3,0,228,0,28,2,128,3,72,10,190,11,15,14,216,27,50,90,35,76,87,35,
44,24,11,6,180,112,128,120,120,120,105,135,135,44,45,70,130,59,155,0,0,0,40,0,0,0,0,0,0,0,
24,53,0,191,197,254,124,182,1,250,0,0,1,0,0,1,0,2,132,3,64,10,216,11,234,13,15,28,50,74,
39,57,91,24,46,25,8,7,186,83,122,120,120,120,105,135,135,44,45,70,130,59,165,0,0,0,40,0,0,0,
0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,0,1,0,2,132,3,64,10,216,11,234,13,
15,28,40,59,35,51,81,21,41,22,7,6,186,83,122,120,120,120,105,135,135,44,45,70,130,59,165,0,0,0,
40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,1,0,8,1,0,2,132,3,60,10,
224,11,222,13,32,28,0,20,27,31,51,12,23,14,4,4,180,75,120,120,120,120,85,75,120,44,45,70,130,59,
165,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,64,250,23,8,140,0,3,0,1,0,
112,0,16,2,220,5,76,9,188,12,116,14,96,27,50,48,30,59,72,40,42,32,16,7,167,150,135,120,120,120,
197,120,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,
125,182,3,0,116,0,16,2,220,5,76,9,188,12,116,14,96,27,90,78,39,75,91,51,54,41,21,8,167,150,
135,120,120,120,197,120,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,
124,182,1,250,0,0,1,0,116,0,16,2,220,5,76,9,188,12,116,14,96,27,0,46,30,58,70,39,41,32,
16,9,167,150,135,120,120,120,197,120,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,
0,182,8,0,0,0,1,250,0,0,139,0,3,0,1,0,112,0,244,1,132,5,36,9,188,12,116,14,96,27,
50,56,31,63,76,38,46,34,18,8,167,150,135,120,120,120,197,120,120,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,116,0,244,1,132,5,16,9,188,12,
116,14,96,27,90,80,37,72,96,48,60,43,23,8,167,150,135,120,120,120,197,120,120,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,116,0,244,1,132,5,
36,9,188,12,116,14,96,27,0,48,30,58,70,31,44,32,16,9,167,150,135,120,120,120,197,120,120,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,190,0,4,0,
1,0,52,1,135,2,242,6,226,9,172,13,154,15,176,28,50,45,30,56,65,54,35,25,8,5,255,142,180,120,
120,120,150,180,150,44,45,70,130,58,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,
176,250,125,182,3,0,52,1,135,2,242,6,226,9,172,13,154,15,176,28,90,86,41,77,90,75,49,35,12,7,
255,142,180,120,120,120,150,180,150,44,45,70,130,58,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,
197,254,124,182,1,250,0,0,1,0,52,1,135,2,242,6,226,9,172,13,154,15,176,28,50,78,39,73,85,71,
46,33,11,7,255,142,180,120,120,120,150,180,150,44,45,70,130,58,0,0,0,0,40,0,0,0,0,250,222,182,
49,229,0,182,8,0,0,0,1,250,0,0,1,0,52,1,135,2,242,6,226,9,172,13,154,15,176,28,0,35,
26,50,57,48,31,22,7,4,255,142,180,120,120,120,150,180,150,44,45,70,130,57,0,0,0,0,40,0,0,0,
0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,175,0,4,0,1,0,148,0,128,1,238,7,50,10,
42,13,50,15,96,25,45,48,27,72,52,48,45,29,11,5,160,92,120,143,120,120,130,95,120,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,148,0,128,1,
238,7,50,10,42,13,50,15,96,25,70,97,39,102,74,68,64,41,16,8,160,92,120,143,120,120,130,95,120,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,
148,0,128,1,238,7,50,10,42,13,50,15,96,25,60,87,37,97,70,64,61,39,15,7,160,92,120,143,120,120,
130,95,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,
0,0,1,0,148,0,128,1,238,7,50,10,42,13,50,15,96,25,0,38,24,64,47,43,40,26,10,5,160,92,
120,143,120,120,130,95,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,
60,182,64,250,23,8,175,0,4,0,1,0,184,0,160,1,92,8,100,10,212,13,60,15,128,28,45,39,25,53,
56,47,39,34,11,8,185,107,143,120,120,120,185,107,167,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,
124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,184,0,160,1,92,8,100,10,212,13,60,15,128,28,
70,81,37,76,80,68,56,48,16,12,185,107,143,120,120,120,185,107,167,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,184,0,160,1,92,8,100,10,212,13,
60,15,128,28,60,66,33,68,72,61,50,43,14,10,185,107,143,120,120,120,185,107,167,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,184,0,160,1,92,8,
100,10,212,13,60,15,128,28,0,29,22,45,48,40,33,29,9,7,185,107,143,120,120,120,185,107,167,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,195,0,4,0,
1,0,216,0,118,2,152,3,67,10,194,11,10,14,224,27,45,50,21,50,63,30,30,18,11,4,178,146,127,120,
120,120,167,135,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,
176,250,125,182,3,0,216,0,118,2,152,3,67,10,194,11,10,14,224,27,80,131,34,80,103,49,49,30,18,7,
178,146,127,120,120,120,167,135,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,
197,254,124,182,1,250,0,0,1,0,216,0,104,2,172,3,67,10,194,11,10,14,224,27,70,105,32,74,95,46,
45,28,16,7,178,146,127,120,120,120,167,135,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,
49,229,0,182,8,0,0,0,1,250,0,0,1,0,216,0,104,2,172,3,67,10,194,11,10,14,224,27,0,44,
20,47,62,29,28,17,10,4,178,146,127,120,120,120,167,135,135,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,175,0,4,0,1,0,188,0,221,1,200,3,60,10,
104,12,166,14,204,26,45,42,27,51,58,37,33,23,16,5,164,141,150,120,120,120,162,120,165,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,188,0,221,1,
200,3,60,10,104,12,166,14,204,26,70,87,39,74,84,53,47,33,24,7,164,141,150,120,120,120,162,120,165,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,
188,0,221,1,200,3,60,10,104,12,166,14,204,26,60,70,35,66,75,48,42,30,21,6,164,141,150,120,120,120,
162,120,165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,
0,0,1,0,188,0,221,1,200,3,60,10,104,12,166,14,204,26,0,37,25,48,54,34,31,22,15,4,164,141,
150,120,120,120,162,120,165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,
60,182,64,250,23,8,0,0,5,0,1,0,248,1,97,3,7,5,60,10,72,13,141,14,88,27,65,48,25,51,
60,25,22,20,6,6,255,162,210,120,120,120,120,162,120,44,60,70,130,55,0,0,0,0,40,0,0,0,0,50,
124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,104,1,136,3,219,4,60,10,72,13,141,14,88,27,
75,111,36,82,86,52,35,33,13,7,210,175,150,120,120,120,210,175,120,44,60,70,130,55,0,0,0,0,40,0,
0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,104,1,128,3,219,4,196,9,32,13,
116,14,88,27,63,110,36,82,86,52,35,33,13,7,210,175,150,120,120,120,210,175,120,44,55,70,130,55,0,0,
0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,104,1,134,3,219,4,
184,9,20,13,116,14,33,27,71,104,35,79,85,50,35,33,13,8,214,172,150,120,120,120,210,175,120,44,45,70,
130,55,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,1,0,104,1,
127,3,220,4,156,9,248,12,116,14,160,26,0,41,24,51,61,32,26,22,8,8,225,165,150,120,120,120,225,120,
120,44,45,70,130,55,0,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,64,250,23,8,
211,0,5,0,1,0,140,0,224,1,100,5,252,8,28,12,192,13,32,27,45,40,22,52,62,57,47,38,19,6,
170,135,165,120,120,120,140,120,150,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,
197,24,223,182,176,250,125,182,3,0,140,0,224,1,100,5,252,8,28,12,192,13,32,27,48,63,28,65,78,71,
58,48,23,8,170,135,165,120,120,120,140,120,150,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,
24,53,0,191,197,254,124,182,1,250,0,0,1,0,140,0,224,1,100,5,252,8,28,12,192,13,32,27,40,63,
28,65,78,71,58,48,23,8,170,135,165,120,120,120,140,120,150,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,140,0,248,1,100,5,252,8,28,12,192,13,
32,27,78,45,25,55,66,61,49,40,20,6,170,135,165,120,120,120,140,120,150,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,1,0,140,0,8,2,100,5,252,8,
28,12,192,13,32,27,0,31,21,46,55,51,41,34,16,5,170,135,165,120,120,120,140,120,150,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,64,250,23,8,220,0,5,0,1,0,
168,0,0,2,92,3,88,10,104,11,141,14,32,27,45,55,21,52,64,39,36,18,13,5,167,135,150,120,120,120,
167,135,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,
125,182,3,0,168,0,0,2,92,3,88,10,104,11,141,14,32,27,40,107,29,73,89,54,50,25,18,7,167,135,
150,120,120,120,167,135,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,
124,182,1,250,0,0,1,0,168,0,0,2,92,3,88,10,104,11,141,14,32,27,90,103,34,73,85,51,41,24,
18,7,167,135,150,120,120,120,167,135,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,
0,182,8,0,0,0,1,250,0,0,1,0,168,0,0,2,92,3,88,10,104,11,141,14,32,27,45,59,26,58,
60,39,31,18,13,5,167,135,150,120,120,120,167,135,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,
222,182,0,0,0,0,188,40,60,182,64,250,23,8,1,0,168,0,0,2,92,3,88,10,104,11,141,14,32,27,
0,27,18,40,40,23,20,12,9,3,167,135,150,120,120,120,167,135,135,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,40,60,182,40,54,0,191,77,60,59,182,64,250,23,8,0,0,4,0,1,0,236,0,28,2,167,3,
0,10,128,12,10,15,96,28,50,64,34,58,76,48,26,21,16,7,120,135,135,120,120,120,135,135,135,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,236,0,
63,2,123,3,80,10,48,12,66,14,224,27,106,123,47,82,94,55,34,21,16,7,120,135,135,120,120,120,135,135,
135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,
1,0,236,0,23,2,123,3,0,10,48,12,191,14,224,27,79,96,32,67,102,58,35,28,18,7,120,135,105,120,
120,120,135,135,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,
1,250,0,0,1,0,216,0,68,2,255,3,176,9,128,12,191,14,224,27,0,49,27,52,77,41,28,24,9,7,
120,135,135,120,120,120,135,105,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,
188,40,60,182,64,250,23,8,0,0,5,0,1,0,84,0,76,1,247,5,208,8,132,12,116,14,192,25,42,48,
16,69,62,55,44,40,14,6,167,135,135,120,120,120,107,90,120,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,84,0,76,1,247,5,208,8,132,12,116,14,
192,25,40,76,20,87,78,69,55,50,18,8,167,135,135,120,120,120,107,90,120,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,84,0,64,1,106,5,192,8,
68,12,116,14,192,25,50,75,16,93,59,53,45,43,19,11,165,135,135,120,120,120,105,90,120,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,84,0,64,1,
106,5,192,8,68,12,116,14,192,25,67,39,12,67,43,38,32,31,14,8,165,135,135,120,120,120,105,90,120,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,1,0,
84,0,34,1,255,3,172,8,28,12,116,14,192,25,0,34,17,60,37,18,21,21,10,8,165,135,135,120,120,120,
105,90,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,64,250,
23,8,0,0,5,0,1,0,220,0,148,2,4,6,56,9,84,11,16,14,192,28,34,47,34,53,70,53,36,48,
13,8,120,165,150,120,120,120,165,210,150,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,
0,191,197,24,223,182,176,250,125,182,3,0,220,0,148,2,26,6,56,9,124,11,116,14,192,28,60,82,42,76,
91,74,45,57,24,8,120,165,150,120,120,120,165,120,150,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,
0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,220,0,224,1,4,6,232,8,68,12,191,14,192,28,
54,54,36,55,79,57,35,30,16,7,120,120,120,120,120,120,165,120,120,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,220,0,164,1,120,4,152,8,88,12,
141,14,64,28,45,56,44,77,54,30,24,26,15,9,120,120,120,120,120,120,60,90,120,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,1,0,140,0,84,1,222,3,
56,9,188,12,141,14,192,27,0,21,28,46,37,15,7,9,9,8,120,105,90,120,120,120,60,120,75,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,64,250,23,8,0,0,6,0,
1,0,44,1,120,3,80,5,60,10,112,13,191,14,64,27,41,30,24,49,53,37,31,23,3,4,167,165,165,120,
120,120,167,105,165,44,45,70,130,56,0,0,0,0,45,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,
176,250,125,182,3,0,44,1,92,3,80,5,100,10,112,13,191,14,64,27,77,90,41,86,93,58,59,40,5,7,
167,165,165,120,120,120,167,105,165,44,45,70,130,56,0,0,0,0,45,0,0,0,0,0,0,0,24,53,0,191,
197,254,124,182,1,250,0,0,1,0,44,1,136,3,140,5,20,10,152,13,191,14,64,27,33,80,40,82,89,55,
56,38,5,6,167,165,165,120,120,120,167,105,165,44,45,70,130,56,0,0,0,0,45,0,0,0,0,250,222,182,
49,229,0,182,8,0,0,0,1,250,0,0,1,0,216,0,92,3,59,6,252,8,192,13,241,14,160,28,31,63,
32,65,87,53,49,32,7,7,120,75,195,120,120,120,255,180,135,44,45,70,130,56,0,0,0,0,43,0,0,0,
0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,1,0,240,0,203,2,224,6,176,9,112,13,10,15,
96,27,53,48,32,63,65,62,36,22,5,7,165,135,240,120,120,120,195,105,165,44,45,70,130,57,0,0,0,0,
40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,64,250,23,8,1,0,212,0,232,1,48,7,136,9,
172,13,80,15,64,27,0,26,32,46,44,44,33,32,13,7,167,90,180,120,120,120,137,75,150,44,45,70,130,56,
0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,146,23,0,0,0,250,0,0,0,0,5,0,1,0,
52,1,135,2,242,6,226,9,172,13,154,15,176,28,44,45,28,57,65,54,36,26,9,5,255,142,180,120,120,120,
150,180,150,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,
125,182,3,0,52,1,135,2,242,6,226,9,172,13,154,15,176,28,77,83,39,77,88,73,49,35,12,7,255,142,
180,120,120,120,150,180,150,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,
124,182,1,250,0,0,1,0,240,0,136,2,224,6,116,9,72,13,60,15,96,27,77,56,30,63,71,62,57,25,
13,7,167,120,180,120,120,120,242,150,150,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,
0,182,8,0,0,0,1,250,0,0,1,0,178,0,103,2,84,6,76,9,2,13,216,14,96,27,35,38,25,52,
61,45,43,24,12,7,167,135,157,120,120,120,242,150,150,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,
222,182,0,0,0,0,188,40,60,182,64,250,23,8,1,0,163,0,81,2,17,6,66,9,241,12,191,14,96,27,
0,34,26,48,55,38,38,25,13,7,167,138,152,120,120,120,242,150,150,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,40,60,182,40,54,0,191,77,60,59,182,64,250,23,8,40,0,7,0,1,0,136,0,64,1,172,8,
240,10,152,13,120,15,236,26,42,44,7,65,55,56,44,27,11,7,172,133,129,120,120,120,180,105,150,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,128,0,
64,1,172,8,240,10,112,13,100,15,224,26,40,64,10,75,75,77,72,37,16,8,158,112,135,120,120,120,167,90,
120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,
1,0,128,0,64,1,172,8,240,10,112,13,100,15,224,26,28,60,10,73,73,74,70,36,16,8,158,112,135,120,
120,120,167,90,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,
1,250,0,0,1,0,104,0,136,1,52,8,80,10,52,13,60,15,64,27,31,59,17,81,60,61,57,31,12,8,
160,90,150,120,120,120,160,105,165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,
188,40,60,182,64,250,23,8,1,0,184,0,248,1,111,7,96,9,72,13,20,15,64,27,34,53,30,75,59,58,
44,30,14,8,167,90,150,120,120,120,167,90,165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,40,60,182,
40,54,0,191,77,60,59,182,64,250,23,8,1,0,176,0,16,2,64,6,36,9,238,12,90,15,128,28,45,26,
24,44,48,48,31,19,6,8,167,150,120,120,120,120,167,105,135,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,0,0,0,0,0,0,0,146,23,0,0,0,250,0,0,1,0,200,0,16,2,240,5,56,9,248,12,160,15,
192,28,0,22,25,41,37,37,24,16,5,8,167,150,120,120,120,120,167,105,135,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,250,222,182,120,54,0,191,188,40,60,182,64,250,23,8,155,0,4,0,1,0,142,0,224,1,
180,5,110,8,88,12,110,14,38,27,45,41,25,56,62,50,43,35,16,6,170,135,161,120,120,120,140,120,150,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,
142,0,224,1,180,5,110,8,88,12,110,14,38,27,60,51,28,62,69,56,48,40,18,6,170,135,161,120,120,120,
140,120,150,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,
0,0,1,0,142,0,212,1,164,5,240,7,72,12,146,14,38,27,50,46,28,59,66,50,40,33,13,6,170,135,
161,120,120,120,140,120,150,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,
0,0,1,250,0,0,1,0,142,0,208,1,160,5,208,7,68,12,156,14,38,27,0,36,25,52,58,41,35,29,
10,5,170,135,161,120,120,120,140,120,150,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,
0,0,188,40,60,182,64,250,23,8,140,0,3,0,1,0,112,0,240,1,220,5,116,9,228,12,156,14,96,27,
50,47,25,59,72,40,42,32,16,7,167,150,135,120,120,120,197,120,120,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,116,0,240,1,220,5,116,9,228,12,
156,14,96,27,90,77,34,75,91,51,54,41,21,8,167,150,135,120,120,120,197,120,120,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,116,0,240,1,220,5,
116,9,228,12,116,14,96,27,0,47,30,58,70,39,41,32,16,9,167,150,135,120,120,120,197,120,120,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,135,0,3,0,
1,0,152,0,72,2,120,5,134,9,195,12,165,14,141,27,45,49,32,59,72,43,45,30,16,6,174,154,137,120,
120,120,197,120,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,
176,250,125,182,3,0,152,0,72,2,120,5,134,9,195,12,165,14,141,27,90,77,40,74,91,53,56,38,21,8,
174,154,137,120,120,120,197,120,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,
197,254,124,182,1,250,0,0,1,0,152,0,80,2,120,5,134,9,195,12,165,14,141,27,0,38,28,52,64,37,
39,27,14,5,174,154,137,120,120,120,197,120,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,
49,229,0,182,8,0,0,0,1,250,0,0,180,0,5,0,1,0,55,1,158,2,183,6,252,9,163,13,121,15,
154,28,50,41,34,51,63,49,34,24,9,5,255,140,173,120,120,120,150,180,150,44,45,70,130,59,160,0,0,0,
40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,55,1,158,2,183,6,252,9,
163,13,121,15,154,28,40,75,46,70,86,66,46,33,12,7,255,140,173,120,120,120,150,180,150,44,45,70,130,59,
160,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,61,1,178,2,
159,6,56,10,143,13,44,15,103,28,50,56,48,54,80,51,42,28,11,6,226,136,157,120,120,120,150,180,150,44,
45,70,130,59,170,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,
61,1,178,2,159,6,56,10,143,13,44,15,103,28,40,50,45,51,75,48,39,26,10,6,226,136,157,120,120,120,
150,180,150,44,45,70,130,59,170,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,
23,8,1,0,68,1,198,2,136,6,111,10,123,13,229,14,57,28,0,21,33,28,51,26,26,16,7,4,195,132,
142,120,120,120,150,180,150,44,45,70,130,59,170,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,
59,182,64,250,23,8,185,0,4,0,1,0,78,1,188,2,144,6,202,9,184,13,183,15,10,29,45,40,38,49,
58,48,37,28,10,6,255,151,208,120,120,120,135,180,182,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,
124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,78,1,188,2,144,6,202,9,184,13,183,15,10,29,
80,60,47,60,71,58,45,34,12,8,255,151,208,120,120,120,135,180,182,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,34,1,166,2,48,6,186,9,152,13,
191,15,176,28,60,49,39,56,67,51,41,31,12,8,255,157,191,120,120,120,135,180,182,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,236,0,140,2,208,5,
166,9,112,13,200,15,64,28,0,42,33,53,64,43,38,29,12,9,233,165,170,120,120,120,135,165,175,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,170,0,4,0,
1,0,64,1,72,2,28,7,0,10,104,13,15,15,224,28,50,47,31,57,61,56,43,31,10,6,244,132,159,120,
120,120,135,180,150,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,
176,250,125,182,3,0,64,1,72,2,28,7,0,10,104,13,15,15,224,28,80,80,40,74,79,72,56,41,13,8,
244,132,159,120,120,120,135,180,150,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,
197,254,124,182,1,250,0,0,1,0,211,0,64,2,144,6,20,10,117,13,160,15,149,28,40,57,36,62,68,56,
46,34,12,7,208,142,158,120,120,120,189,180,150,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,
49,229,0,182,8,0,0,0,1,250,0,0,1,0,215,0,96,2,64,6,20,10,123,13,160,15,73,28,0,40,
32,56,58,44,39,29,11,6,228,153,158,120,120,120,135,180,150,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,190,0,4,0,1,0,168,0,160,1,8,7,0,10,
72,13,200,15,163,25,50,41,32,62,49,47,44,32,14,6,161,98,126,120,120,120,130,107,120,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,168,0,160,1,
8,7,0,10,72,13,200,15,163,25,80,65,40,78,61,59,55,40,17,8,161,98,126,120,120,120,130,107,120,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,
168,0,160,1,8,7,0,10,72,13,200,15,163,25,60,55,37,71,56,54,51,37,16,7,161,98,126,120,120,120,
130,107,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,
0,0,1,0,168,0,160,1,8,7,0,10,72,13,200,15,163,25,0,31,28,54,42,41,38,28,12,5,161,98,
126,120,120,120,130,107,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,
60,182,64,250,23,8,190,0,4,0,1,0,168,0,192,1,124,6,224,9,12,13,60,15,230,25,50,42,29,59,
53,50,47,34,15,6,163,119,133,120,120,120,130,119,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,
124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,168,0,192,1,124,6,224,9,12,13,60,15,230,25,
80,69,38,76,69,65,61,44,19,8,163,119,133,120,120,120,130,119,120,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,168,0,192,1,124,6,224,9,12,13,
60,15,230,25,60,56,34,69,62,58,55,39,17,7,163,119,133,120,120,120,130,119,120,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,168,0,192,1,124,6,
224,9,12,13,60,15,230,25,0,32,26,52,47,44,41,30,13,5,163,119,133,120,120,120,130,119,120,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,175,0,4,0,
1,0,126,0,112,1,52,8,100,10,47,13,60,15,96,25,45,40,25,65,47,43,43,26,10,4,160,93,120,155,
120,120,130,95,120,44,45,70,130,58,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,
176,250,125,182,3,0,126,0,112,1,52,8,100,10,47,13,60,15,96,25,70,66,31,84,60,56,56,34,14,6,
160,93,120,155,120,120,130,95,120,44,45,70,130,58,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,
197,254,124,182,1,250,0,0,1,0,126,0,88,1,98,8,140,10,41,13,45,15,152,25,60,39,22,64,44,41,
41,24,11,5,161,95,118,147,120,120,130,95,120,44,45,70,130,57,0,0,0,0,40,0,0,0,0,250,222,182,
49,229,0,182,8,0,0,0,1,250,0,0,1,0,126,0,88,1,98,8,140,10,41,13,45,15,152,25,0,20,
16,47,32,30,30,18,8,4,161,95,118,147,120,120,130,95,120,44,45,70,130,55,0,0,0,0,40,0,0,0,
0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,185,0,4,0,1,0,0,1,216,2,176,4,100,10,
188,12,176,14,87,27,45,43,29,54,65,39,35,32,10,5,175,147,147,120,120,120,175,142,135,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,0,1,216,2,
176,4,100,10,188,12,176,14,87,27,80,84,41,76,90,54,48,44,14,7,175,147,147,120,120,120,175,142,135,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,
0,1,208,2,176,4,100,10,188,12,176,14,87,27,60,66,36,67,80,48,43,39,12,6,175,147,147,120,120,120,
175,142,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,
0,0,1,0,0,1,200,2,176,4,100,10,188,12,176,14,87,27,0,44,29,54,67,38,34,31,10,5,175,147,
147,120,120,120,175,142,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,
60,182,64,250,23,8,184,0,4,0,1,0,208,0,120,2,20,5,40,10,228,12,0,15,210,27,45,46,30,53,
70,42,39,25,14,5,185,160,141,120,120,120,235,150,118,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,
124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,208,0,120,2,20,5,40,10,228,12,0,15,210,27,
80,85,41,72,95,57,53,34,19,7,185,160,141,120,120,120,235,150,118,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,208,0,114,2,36,5,40,10,228,12,
0,15,210,27,60,68,35,64,85,51,47,30,17,6,185,160,141,120,120,120,235,150,118,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,208,0,104,2,60,5,
40,10,228,12,0,15,210,27,0,39,26,49,65,39,36,23,13,5,185,160,141,120,120,120,235,150,118,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,175,0,4,0,
1,0,116,0,240,1,16,4,0,10,168,12,96,14,96,27,45,53,30,64,67,35,37,31,16,6,167,150,135,120,
120,120,197,120,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,
176,250,125,182,3,0,116,0,240,1,16,4,0,10,168,12,96,14,96,27,70,101,41,88,92,48,52,43,23,8,
167,150,135,120,120,120,197,120,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,
197,254,124,182,1,250,0,0,1,0,116,0,240,1,16,4,0,10,168,12,96,14,96,27,60,82,37,79,82,43,
46,39,20,7,167,150,135,120,120,120,197,120,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,
49,229,0,182,8,0,0,0,1,250,0,0,1,0,116,0,240,1,16,4,0,10,168,12,96,14,96,27,0,46,
28,59,62,32,35,29,15,5,167,150,135,120,120,120,197,120,120,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,255,0,6,0,1,0,250,0,216,2,176,4,40,10,
188,12,92,14,87,27,45,47,29,54,70,40,36,33,9,5,167,147,147,120,120,120,167,142,135,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,250,0,216,2,
176,4,40,10,188,12,92,14,87,27,85,94,41,77,99,57,51,46,13,7,167,147,147,120,120,120,167,142,135,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,
250,0,200,2,176,4,196,9,128,12,92,14,87,27,50,66,35,65,84,48,43,39,11,6,167,147,147,120,120,120,
167,142,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,
0,0,5,0,116,0,80,2,236,4,128,7,164,11,232,13,96,27,35,40,26,60,58,35,36,28,14,8,167,150,
135,120,120,120,197,120,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,
60,182,64,250,23,8,5,0,116,0,8,2,236,4,108,7,164,11,232,13,96,27,40,34,23,54,52,31,32,25,
12,7,167,150,135,120,120,120,197,120,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,40,60,182,40,54,
0,191,77,60,59,182,64,250,23,8,1,0,116,0,8,2,236,4,108,7,164,11,232,13,96,27,0,27,20,48,
46,28,28,22,11,6,167,150,135,120,120,120,197,120,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,
0,0,0,0,0,0,146,23,0,0,0,250,0,0,185,0,5,0,1,0,140,0,224,1,128,5,16,9,148,12,
41,14,32,27,45,44,22,54,66,60,49,40,20,6,170,135,165,120,120,120,140,120,150,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,140,0,224,1,128,5,
16,9,148,12,41,14,32,27,40,61,24,64,77,71,57,47,23,7,170,135,165,120,120,120,140,120,150,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,141,0,
218,1,146,5,128,8,118,12,78,14,35,27,50,48,24,59,69,58,47,38,17,6,170,135,163,120,120,120,140,120,
150,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,
1,0,142,0,212,1,164,5,240,7,88,12,116,14,38,27,50,43,25,58,64,49,39,33,12,6,170,135,161,120,
120,120,140,120,150,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,
64,250,23,8,1,0,142,0,208,1,160,5,208,7,88,12,136,14,38,27,0,38,24,54,60,42,36,30,10,6,
170,135,161,120,120,120,140,120,150,44,45,70,130,59,0,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,
77,60,59,182,64,250,23,8,230,0,6,0,1,0,184,0,72,2,172,3,20,10,164,11,53,14,160,27,40,61,
26,61,74,36,35,20,13,5,173,142,135,120,120,120,182,105,120,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,184,0,72,2,172,3,20,10,164,11,53,14,
160,27,50,111,36,83,100,49,47,27,18,7,173,142,135,120,120,120,182,105,120,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,184,0,72,2,172,3,20,10,
164,11,53,14,160,27,70,90,32,75,90,44,42,25,16,6,173,142,135,120,120,120,182,105,120,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,5,0,116,0,0,2,
176,4,8,7,144,11,172,13,96,27,35,42,25,59,59,34,35,27,13,7,167,150,135,120,120,120,197,120,120,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,5,0,
116,0,0,2,176,4,8,7,144,11,172,13,96,27,35,35,23,54,54,31,32,25,12,7,167,150,135,120,120,120,
197,120,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,64,250,
23,8,1,0,129,0,232,1,40,5,68,7,184,11,212,13,67,27,0,35,24,52,56,36,33,27,11,6,168,142,
148,120,120,120,197,120,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,146,23,
0,0,0,250,0,0,165,0,4,0,1,0,232,0,200,2,232,3,60,10,224,11,222,13,160,28,45,58,33,56,
73,34,35,23,9,8,230,150,120,120,120,120,185,105,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,
124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,232,0,144,2,232,3,60,10,224,11,222,13,32,28,
80,94,29,78,98,44,45,29,16,7,182,150,120,120,120,120,182,105,120,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,232,0,144,2,232,3,60,10,224,11,
222,13,32,28,40,75,28,73,83,42,42,28,15,6,182,150,120,120,120,120,182,105,120,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,228,0,118,2,192,3,
140,10,224,11,66,14,32,28,0,45,29,49,70,38,37,23,12,9,177,150,120,120,120,120,177,75,120,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,220,0,5,0,
1,0,168,0,212,1,72,3,100,10,124,11,196,14,32,27,45,50,23,51,59,38,35,17,13,5,165,135,150,120,
120,120,165,135,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,
176,250,125,182,3,0,168,0,212,1,72,3,100,10,124,11,196,14,32,27,55,96,32,72,82,53,48,24,18,7,
165,135,150,120,120,120,165,135,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,
197,254,124,182,1,250,0,0,1,0,168,0,212,1,72,3,100,10,124,11,196,14,32,27,75,78,29,64,74,48,
44,22,16,6,165,135,150,120,120,120,165,135,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,
49,229,0,182,8,0,0,0,1,250,0,0,1,0,116,0,8,2,136,4,108,7,144,11,116,14,96,27,45,35,
24,54,54,32,33,25,12,7,167,150,135,120,120,120,197,120,120,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,1,0,116,0,8,2,136,4,108,7,124,11,212,13,
96,27,0,31,22,50,50,30,31,24,12,7,167,150,135,120,120,120,197,120,120,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,64,250,23,8,185,0,4,0,1,0,228,0,145,2,
76,4,143,10,188,12,99,14,87,27,45,46,26,53,66,37,34,31,11,5,167,143,143,120,120,120,167,142,135,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,
228,0,145,2,76,4,143,10,188,12,99,14,87,27,60,89,36,74,92,52,48,43,15,7,167,143,143,120,120,120,
167,142,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,
0,0,1,0,228,0,145,2,96,4,143,10,188,12,99,14,87,27,80,77,34,70,87,49,45,40,14,7,167,143,
143,120,120,120,167,142,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,
0,0,1,250,0,0,1,0,228,0,145,2,96,4,143,10,188,12,99,14,87,27,0,44,25,53,65,37,34,30,
10,5,167,143,143,120,120,120,167,142,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,
0,0,188,40,60,182,64,250,23,8,0,0,5,0,1,0,84,0,96,1,180,5,212,8,148,12,41,14,64,26,
42,46,16,68,54,37,37,35,10,7,162,150,135,120,120,120,102,135,120,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,84,0,96,1,140,5,212,8,148,12,
116,14,192,25,40,71,20,82,78,69,54,50,17,7,167,135,135,120,120,120,107,90,120,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,88,0,96,1,120,5,
172,8,148,12,116,14,192,25,50,67,21,84,64,66,50,47,19,7,167,120,135,120,120,120,107,90,120,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,98,0,
80,1,236,4,179,8,86,12,118,14,218,25,67,46,15,70,56,49,40,36,15,6,166,127,128,120,120,120,107,90,
128,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,
1,0,109,0,64,1,76,4,187,8,23,12,121,14,244,25,0,27,8,51,40,30,28,24,11,5,165,135,138,120,
120,120,162,120,165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,
64,250,23,8,210,0,5,0,1,0,229,0,16,3,40,5,60,10,52,13,160,15,238,27,45,46,31,58,62,38,
39,24,12,5,186,155,145,120,120,120,237,165,165,44,45,70,130,58,0,0,0,0,40,0,0,0,0,50,124,182,
40,53,0,191,197,24,223,182,176,250,125,182,3,0,229,0,16,3,40,5,60,10,52,13,160,15,238,27,80,88,
43,81,86,54,54,34,18,7,186,155,145,120,120,120,237,165,165,44,45,70,130,58,0,0,0,0,40,0,0,0,
0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,224,0,234,2,20,5,80,10,248,12,140,15,
220,27,45,70,38,71,76,47,47,29,16,6,184,154,145,120,120,120,237,165,165,44,45,70,130,58,0,0,0,0,
40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,185,0,64,2,16,4,68,10,
8,12,20,15,89,27,40,35,22,45,48,29,25,16,10,4,172,140,148,120,120,120,237,165,165,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,1,0,168,0,240,1,
132,3,60,10,144,11,176,14,32,27,0,33,21,45,47,28,23,14,10,4,167,135,150,120,120,120,167,135,135,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,64,250,23,8,45,0,
5,0,1,0,169,0,37,2,92,4,76,9,72,13,64,16,98,27,45,34,28,49,54,38,33,24,14,5,167,141,
152,120,120,120,197,120,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,
223,182,176,250,125,182,3,0,169,0,37,2,92,4,76,9,72,13,64,16,98,27,80,60,37,64,72,50,44,32,
19,7,167,141,152,120,120,120,197,120,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,
0,191,197,254,124,182,1,250,0,0,1,0,160,0,8,2,212,3,36,9,32,13,64,16,71,27,50,60,30,61,
71,48,45,25,17,6,167,144,151,120,120,120,197,120,130,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,
222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,178,0,162,1,77,3,116,9,7,13,160,15,178,26,
40,36,21,45,48,32,27,19,13,6,163,137,150,120,120,120,197,120,130,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,1,0,184,0,128,1,32,3,156,9,12,13,
160,15,128,26,0,29,19,41,41,27,22,17,12,5,162,135,150,120,120,120,162,120,165,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,64,250,23,8,205,0,6,0,5,0,28,1,
28,3,236,4,50,10,112,13,254,14,176,27,45,51,30,69,65,42,35,25,7,5,192,145,135,120,120,120,167,135,
165,44,45,70,130,58,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,
3,0,28,1,28,3,236,4,50,10,112,13,254,14,176,27,80,96,41,94,89,58,48,34,9,7,192,145,135,120,
120,120,167,135,165,44,45,70,130,58,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,
1,250,0,0,1,0,11,1,15,3,36,5,28,10,104,13,254,14,154,27,40,71,37,82,76,51,44,33,8,6,
187,148,144,120,120,120,167,135,165,44,45,70,130,58,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,
8,0,0,0,1,250,0,0,1,0,196,0,216,2,4,6,196,9,72,13,0,15,64,27,40,47,35,66,56,47,
47,43,8,7,167,162,180,120,120,120,167,132,135,44,45,70,130,58,0,0,0,0,40,0,0,0,0,250,222,182,
0,0,0,0,188,40,60,182,64,250,23,8,1,0,205,0,48,2,28,7,196,9,72,13,0,15,63,27,40,38,
32,56,51,47,43,41,12,8,167,120,157,120,120,120,167,120,157,44,45,70,130,58,0,0,0,0,40,0,0,0,
0,40,60,182,40,54,0,191,77,60,59,182,64,250,23,8,1,0,205,0,48,2,28,7,196,9,72,13,0,15,
63,27,0,35,30,53,48,45,41,39,11,7,167,120,157,120,120,120,167,120,157,44,45,70,130,58,0,0,0,0,
40,0,0,0,0,0,0,0,0,0,0,0,146,23,0,0,0,250,0,0,230,0,5,0,1,0,0,1,24,2,
8,7,236,9,104,13,15,15,224,28,45,30,25,47,53,44,37,27,9,6,216,138,159,120,120,120,107,138,150,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,
0,1,24,2,8,7,236,9,104,13,15,15,224,28,90,67,38,70,80,66,56,41,13,9,216,138,159,120,120,120,
107,138,150,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,
0,0,1,0,216,0,232,1,108,7,40,10,163,13,57,15,148,28,55,56,37,67,69,62,51,39,12,9,197,114,
149,120,120,120,107,131,150,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,
0,0,1,250,0,0,1,0,144,0,125,1,52,8,148,10,188,13,76,15,32,28,40,30,27,50,48,46,40,32,
9,8,167,90,135,120,120,120,122,120,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,
0,0,188,40,60,182,64,250,23,8,1,0,144,0,125,1,52,8,148,10,188,13,76,15,32,28,0,27,26,47,
45,44,38,30,8,8,167,90,135,120,120,120,122,120,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,40,
60,182,40,54,0,191,77,60,59,182,64,250,23,8,0,0,6,0,1,0,179,0,50,2,175,3,96,10,15,12,
141,14,32,27,45,35,22,45,52,33,32,15,11,4,166,135,150,120,120,120,167,135,135,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,179,0,50,2,175,3,
96,10,15,12,141,14,32,27,40,114,40,82,93,59,58,27,20,8,166,135,150,120,120,120,167,135,135,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,179,0,
50,2,175,3,96,10,15,12,141,14,32,27,70,94,36,74,84,53,52,24,18,7,166,135,150,120,120,120,167,135,
135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,
1,0,196,0,24,2,164,6,116,9,228,12,36,14,64,27,30,49,30,57,68,57,53,46,8,8,167,135,180,120,
120,120,167,105,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,
64,250,23,8,5,0,199,0,101,1,123,7,201,10,228,12,107,14,64,27,40,37,24,47,48,45,44,36,10,6,
156,128,153,120,120,120,167,105,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,
77,60,59,182,64,250,23,8,1,0,199,0,101,1,123,7,201,10,228,12,107,14,64,27,0,29,21,41,42,39,
39,31,9,5,156,128,153,120,120,120,167,105,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,
0,0,0,0,146,23,0,0,0,250,0,0,235,0,6,0,1,0,14,1,24,2,240,6,236,9,112,13,80,15,
186,28,50,42,28,57,61,55,44,32,10,7,211,132,156,120,120,120,107,131,150,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,14,1,24,2,240,6,236,9,
112,13,80,15,186,28,70,67,35,72,77,70,55,40,13,8,211,132,156,120,120,120,107,131,150,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,14,1,24,2,
240,6,196,9,112,13,80,15,186,28,40,53,31,64,69,61,48,35,11,7,211,132,156,120,120,120,107,131,150,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,5,0,
116,0,8,2,120,5,8,7,144,11,56,14,96,27,40,31,26,49,49,29,29,23,11,6,167,150,135,120,120,120,
197,120,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,
23,8,5,0,116,0,8,2,120,5,8,7,144,11,252,13,96,27,35,28,25,47,47,27,28,21,10,6,167,150,
135,120,120,120,197,120,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,
59,182,64,250,23,8,1,0,116,0,8,2,120,5,8,7,144,11,252,13,96,27,0,24,23,44,44,25,26,20,
10,5,167,150,135,120,120,120,197,120,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,
0,0,146,23,0,0,0,250,0,0,250,0,6,0,1,0,187,0,149,1,140,7,245,9,50,13,120,15,96,25,
45,42,25,69,36,43,43,26,10,4,160,90,120,122,120,120,130,95,120,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,187,0,149,1,140,7,245,9,50,13,
120,15,96,25,65,78,34,94,50,59,59,35,14,6,160,90,120,122,120,120,130,95,120,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,187,0,149,1,140,7,
196,9,50,13,120,15,96,25,45,58,30,82,43,44,47,30,12,5,160,90,120,145,120,120,130,95,120,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,120,0,
250,1,144,6,188,7,164,11,16,14,13,27,50,27,25,49,47,29,30,22,10,6,166,144,133,123,120,120,130,95,
120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,
1,0,120,0,250,1,180,5,28,7,144,11,252,13,44,27,45,27,27,49,47,29,30,22,10,6,166,144,133,123,
120,120,130,95,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,
64,250,23,8,1,0,120,0,250,1,180,5,28,7,144,11,252,13,44,27,0,24,25,46,44,28,28,21,10,5,
166,144,133,123,120,120,130,95,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,
146,23,0,0,0,250,0,0,220,0,5,0,1,0,116,0,200,1,56,4,96,9,168,12,96,14,96,27,45,43,
28,58,58,33,36,30,16,5,167,140,135,120,120,120,197,110,120,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,116,0,200,1,56,4,96,9,168,12,96,14,
96,27,80,66,35,71,71,41,44,37,19,7,167,140,135,120,120,120,197,110,120,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,116,0,208,1,56,4,46,9,
140,12,98,14,96,27,55,59,33,68,68,39,42,35,18,7,167,141,135,120,120,120,197,110,120,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,116,0,8,2,
156,4,188,7,104,11,212,13,96,27,40,39,25,57,57,33,35,27,13,8,167,150,135,120,120,120,197,120,120,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,1,0,
116,0,8,2,156,4,188,7,104,11,212,13,96,27,0,32,23,51,51,30,31,24,12,7,167,150,135,120,120,120,
197,120,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,64,250,
23,8,70,0,6,0,1,0,240,0,224,2,196,4,140,10,232,13,160,15,64,27,45,54,29,64,70,37,40,32,
5,6,167,135,165,120,120,120,167,135,165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,
0,191,197,24,223,182,176,250,125,182,3,0,240,0,224,2,196,4,140,10,232,13,160,15,64,27,50,83,36,79,
86,46,50,39,6,7,167,135,165,120,120,120,167,135,165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,
0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,224,0,208,2,136,5,176,9,36,14,180,15,117,27,
68,67,36,71,61,44,40,37,15,4,196,162,200,120,120,120,249,174,255,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,195,0,112,2,238,5,126,9,76,14,
240,15,35,27,40,57,34,66,59,45,41,34,14,5,181,137,168,120,120,120,249,174,255,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,1,0,160,0,72,2,220,5,
96,9,16,14,44,16,199,27,25,38,30,53,56,42,36,23,14,5,171,161,165,121,122,125,171,137,172,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,64,250,23,8,1,0,160,0,
72,2,220,5,96,9,16,14,44,16,199,27,0,32,28,49,52,39,33,22,13,5,171,161,165,121,122,125,171,137,
172,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,146,23,0,0,0,250,0,0,
125,0,7,0,1,0,240,0,224,2,196,4,140,10,232,13,160,15,64,27,45,54,29,64,70,37,40,32,4,5,
167,135,165,120,120,120,167,135,165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,
197,24,223,182,176,250,125,182,3,0,240,0,224,2,196,4,140,10,232,13,160,15,64,27,50,83,36,79,86,46,
50,39,5,7,167,135,165,120,120,120,167,135,165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,
24,53,0,191,197,254,124,182,1,250,0,0,1,0,224,0,208,2,136,5,176,9,232,13,180,15,117,27,50,66,
36,71,61,44,40,36,15,4,196,162,200,120,120,120,249,174,255,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,165,0,16,2,84,6,36,9,232,13,44,16,
208,26,30,39,31,61,57,48,42,34,14,6,165,113,136,120,120,120,130,113,136,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,5,0,153,0,249,1,225,5,133,8,
12,13,90,15,40,27,40,38,28,56,60,45,38,30,11,6,168,133,154,120,120,121,130,113,136,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,64,250,23,8,5,0,147,0,248,1,
175,5,248,7,128,12,236,14,79,27,40,35,25,50,56,39,34,26,10,5,170,141,162,120,120,121,171,137,172,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,146,23,0,0,0,250,0,0,1,0,
147,0,248,1,175,5,248,7,128,12,236,14,79,27,0,30,23,46,52,37,31,24,9,5,170,141,162,120,120,121,
171,137,172,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,120,54,0,191,188,40,60,182,64,250,
23,8,19,1,7,0,1,0,229,0,16,3,40,5,60,10,52,13,160,15,238,27,45,46,31,58,62,38,39,24,
12,5,186,155,145,120,120,120,237,165,165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,
0,191,197,24,223,182,176,250,125,182,3,0,229,0,16,3,40,5,60,10,52,13,160,15,238,27,65,88,43,81,
86,54,54,34,18,7,186,155,145,120,120,120,237,165,165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,
0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,224,0,234,2,20,5,40,10,248,12,140,15,220,27,
45,70,38,71,76,47,47,29,16,6,184,154,145,120,120,120,237,165,165,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,185,0,64,2,76,4,0,10,68,12,
60,15,89,27,40,32,23,45,48,29,25,16,10,4,172,140,148,120,120,120,237,165,165,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,5,0,164,0,8,2,0,5,
10,9,48,12,216,14,64,27,40,30,21,45,50,32,28,20,10,4,171,137,155,120,120,120,237,165,165,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,64,250,23,8,5,0,149,0,
225,1,112,5,47,8,62,12,174,14,46,27,40,28,20,43,48,32,28,22,8,4,170,135,159,120,120,120,237,165,
165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,146,23,0,0,0,250,0,0,
1,0,142,0,208,1,160,5,208,7,68,12,156,14,38,27,0,26,22,45,50,35,30,25,8,5,170,135,161,120,
120,120,140,120,150,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,120,54,0,191,188,40,60,182,
64,250,23,8,165,0,4,0,1,0,204,0,100,2,208,4,60,10,168,12,10,15,0,28,45,66,33,67,77,42,
51,25,15,6,170,165,150,120,120,120,170,180,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,
40,53,0,191,197,24,223,182,176,250,125,182,3,0,204,0,100,2,208,4,60,10,168,12,10,15,0,28,80,101,
41,84,95,52,63,31,18,8,170,165,150,120,120,120,170,180,120,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,204,0,100,2,208,4,60,10,168,12,10,15,
0,28,40,83,37,76,87,48,57,28,17,7,170,165,150,120,120,120,170,180,120,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,204,0,100,2,216,4,60,10,
168,12,10,15,0,28,0,51,31,59,68,37,45,22,13,9,167,165,150,120,120,120,167,180,120,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,195,0,4,0,1,0,
24,1,16,3,156,4,120,10,152,13,60,15,32,28,45,52,29,59,64,45,35,22,10,5,186,152,135,120,120,120,
192,155,150,44,45,70,130,58,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,
125,182,3,0,24,1,16,3,156,4,120,10,152,13,60,15,32,28,80,99,40,81,89,62,48,31,14,7,186,152,
135,120,120,120,192,155,150,44,45,70,130,58,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,
124,182,1,250,0,0,1,0,24,1,16,3,156,4,120,10,152,13,60,15,32,28,70,89,38,77,84,59,45,29,
14,7,186,152,135,120,120,120,192,155,150,44,45,70,130,58,0,0,0,0,40,0,0,0,0,250,222,182,49,229,
0,182,8,0,0,0,1,250,0,0,1,0,24,1,8,3,176,4,120,10,152,13,60,15,32,28,0,47,28,58,
61,42,33,22,10,5,186,152,135,120,120,120,192,155,150,44,45,70,130,57,0,0,0,0,40,0,0,0,0,250,
222,182,0,0,0,0,188,40,60,182,64,250,23,8,160,0,4,0,1,0,215,0,6,2,128,7,236,9,251,12,
61,14,144,28,50,45,31,61,55,60,46,36,11,8,175,109,133,120,120,120,160,105,127,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,215,0,6,2,128,7,
236,9,251,12,61,14,144,28,70,80,42,81,74,80,61,48,15,11,175,109,133,120,120,120,160,105,127,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,202,0,
62,2,30,7,236,9,82,13,228,14,207,28,40,62,39,70,73,69,53,39,13,8,195,127,153,120,120,120,160,105,
127,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,
1,0,200,0,69,2,18,7,236,9,92,13,247,14,215,28,0,35,29,51,54,50,39,28,9,6,198,129,156,120,
120,120,198,105,127,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,
64,250,23,8,170,0,4,0,1,0,154,0,248,1,164,6,176,9,238,12,216,14,96,26,50,39,29,58,54,47,
42,30,14,6,163,133,150,120,120,120,130,128,142,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,
40,53,0,191,197,24,223,182,176,250,125,182,3,0,154,0,248,1,164,6,176,9,238,12,216,14,96,26,60,76,
41,81,76,65,58,42,20,8,163,133,150,120,120,120,130,128,142,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,154,0,248,1,164,6,176,9,238,12,216,14,
96,26,60,68,39,77,72,62,55,40,18,7,163,133,150,120,120,120,130,128,142,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,154,0,248,1,164,6,176,9,
238,12,216,14,96,26,0,34,27,54,50,44,39,28,13,5,163,133,150,120,120,120,130,128,142,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,200,0,4,0,1,0,
184,0,8,2,208,7,236,9,248,12,66,14,128,28,50,40,27,55,61,58,43,32,11,8,185,117,127,120,120,120,
185,117,127,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,
125,182,3,0,184,0,8,2,208,7,236,9,248,12,66,14,128,28,70,76,38,76,83,80,60,44,16,12,185,117,
127,120,120,120,185,117,127,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,
124,182,1,250,0,0,1,0,184,0,8,2,208,7,236,9,248,12,66,14,128,28,80,43,28,57,62,60,45,33,
12,9,185,117,127,120,120,120,185,117,127,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,
0,182,8,0,0,0,1,250,0,0,1,0,184,0,8,2,208,7,236,9,248,12,66,14,128,28,0,27,22,45,
50,48,36,26,9,7,185,117,127,120,120,120,185,117,127,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,
222,182,0,0,0,0,188,40,60,182,64,250,23,8,150,0,4,0,1,0,199,0,54,2,122,3,81,10,163,11,
54,14,159,27,50,61,22,57,69,34,33,19,12,5,172,142,135,120,120,120,167,135,135,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,199,0,54,2,122,3,
81,10,163,11,54,14,159,27,60,115,30,78,96,47,45,26,17,7,172,142,135,120,120,120,167,135,135,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,199,0,
54,2,122,3,81,10,163,11,54,14,159,27,40,104,29,74,91,45,43,25,16,6,172,142,135,120,120,120,167,135,
135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,
1,0,199,0,54,2,122,3,81,10,163,11,54,14,159,27,0,52,20,52,64,32,30,17,11,4,172,142,135,120,
120,120,167,135,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,
64,250,23,8,175,0,4,0,1,0,216,0,160,2,156,4,35,10,227,12,20,15,214,27,45,44,27,54,58,34,
31,24,12,4,189,159,136,120,120,120,237,165,165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,
40,53,0,191,197,24,223,182,176,250,125,182,3,0,216,0,160,2,156,4,35,10,227,12,20,15,214,27,80,96,
40,81,86,51,46,36,18,7,189,159,136,120,120,120,237,165,165,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,216,0,160,2,156,4,35,10,227,12,20,15,
214,27,50,85,38,76,81,48,44,34,17,6,189,159,136,120,120,120,237,165,165,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,216,0,160,2,156,4,35,10,
227,12,20,15,214,27,0,42,27,54,57,34,31,24,12,4,189,159,136,120,120,120,237,165,165,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,195,0,4,0,1,0,
135,0,151,1,220,5,112,8,188,12,136,14,153,24,45,43,21,58,55,49,40,32,10,11,178,126,132,123,123,141,
187,126,137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,
125,182,3,0,135,0,151,1,220,5,112,8,188,12,136,14,153,24,80,65,26,72,68,61,49,39,12,13,178,126,
132,123,123,141,187,126,137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,
124,182,1,250,0,0,1,0,135,0,151,1,220,5,112,8,188,12,136,14,153,24,70,56,24,67,63,56,45,36,
12,12,178,126,132,123,123,141,187,126,137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,
0,182,8,0,0,0,1,250,0,0,1,0,135,0,136,1,220,5,112,8,188,12,136,14,153,24,0,38,20,55,
52,46,37,30,9,10,178,126,132,123,123,141,187,126,137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,
222,182,0,0,0,0,188,40,60,182,64,250,23,8,240,0,7,0,1,0,24,1,240,2,166,4,80,10,192,13,
150,15,32,28,45,57,30,66,66,46,36,23,11,5,186,152,135,120,120,120,192,155,150,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,24,1,240,2,166,4,
80,10,192,13,150,15,32,28,70,109,41,91,91,63,49,32,15,8,186,152,135,120,120,120,192,155,150,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,24,1,
228,2,175,4,58,10,204,13,162,15,32,28,50,94,40,84,85,57,48,31,14,7,186,152,135,120,120,120,192,155,
150,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,
5,0,24,1,199,2,196,4,4,10,232,13,192,15,32,28,30,77,38,76,78,46,47,29,13,7,186,152,135,120,
120,120,192,155,150,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,
64,250,23,8,5,0,24,1,184,2,20,5,176,9,244,11,120,15,32,28,25,31,28,51,40,30,33,20,9,5,
186,152,135,120,120,120,192,155,150,44,45,70,130,59,0,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,
77,60,59,182,64,250,23,8,1,0,24,1,176,2,40,5,176,9,204,11,236,14,32,28,20,30,28,52,24,7,
14,14,9,5,186,152,135,120,120,120,192,155,150,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,
0,0,0,0,146,23,0,0,0,250,0,0,1,0,24,1,176,2,40,5,176,9,204,11,236,14,32,28,0,33,
28,52,40,31,33,14,9,5,186,152,135,120,120,120,192,155,150,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,250,222,182,120,54,0,191,188,40,60,182,64,250,23,8,29,1,6,0,1,0,200,0,208,1,188,7,216,9,
248,12,66,14,128,28,45,44,25,57,56,61,46,34,10,8,185,107,127,120,120,120,185,107,127,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,200,0,208,1,
188,7,216,9,248,12,66,14,128,28,70,77,34,75,75,81,61,46,14,10,185,107,127,120,120,120,185,107,127,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,
199,0,227,1,131,7,210,9,248,12,73,14,106,28,90,66,32,71,72,74,57,42,13,8,184,111,127,120,120,120,
185,107,127,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,
0,0,1,0,186,0,152,2,220,5,196,9,168,12,56,14,160,27,40,50,34,66,63,36,41,30,15,0,180,150,
125,120,120,120,200,120,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,
60,182,64,250,23,8,1,0,204,0,128,2,116,4,156,9,240,10,152,18,0,28,40,39,30,56,38,35,30,7,
12,5,170,165,137,120,120,120,170,180,137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,40,60,182,40,54,
0,191,77,60,59,182,64,250,23,8,1,0,204,0,128,2,116,4,156,9,240,10,152,18,0,28,0,39,30,56,
38,35,30,7,12,5,170,165,137,120,120,120,170,180,137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,
0,0,0,0,0,0,146,23,0,0,0,250,0,0,45,0,4,0,1,0,152,0,72,1,76,9,124,11,172,13,
120,15,160,26,45,41,17,60,53,49,49,26,12,6,167,105,120,120,120,120,167,90,120,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,152,0,72,1,76,9,
124,11,172,13,120,15,160,26,100,69,22,78,70,64,64,34,16,8,167,105,120,120,120,120,167,90,120,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,152,0,
24,1,136,9,164,11,16,14,120,15,160,26,40,67,21,74,66,57,61,32,15,7,167,97,120,120,120,120,167,97,
120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,
1,0,152,0,24,1,136,9,164,11,16,14,120,15,160,26,0,38,16,56,50,43,46,24,11,5,167,97,120,120,
120,120,167,97,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,
64,250,23,8,150,0,4,0,1,0,192,0,40,2,112,3,100,10,164,11,96,14,159,27,50,59,24,59,64,35,
34,20,12,5,172,142,135,120,120,120,167,135,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,
40,53,0,191,197,24,223,182,176,250,125,182,3,0,192,0,40,2,112,3,100,10,164,11,96,14,159,27,60,124,
36,85,93,52,50,29,18,7,172,142,135,120,120,120,167,135,135,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,192,0,40,2,132,3,100,10,164,11,96,14,
159,27,40,97,32,77,83,46,45,26,16,7,172,142,135,120,120,120,167,135,135,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,192,0,40,2,56,4,0,10,
104,11,36,14,159,27,0,34,21,51,55,31,30,17,11,4,172,142,135,120,120,120,167,135,135,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,195,0,4,0,1,0,
135,0,136,1,164,6,192,8,188,12,128,14,153,24,45,42,22,57,51,48,39,31,10,11,178,126,132,123,123,141,
187,126,137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,
125,182,3,0,135,0,136,1,164,6,192,8,188,12,128,14,153,24,80,73,30,76,68,64,52,41,13,14,178,126,
132,123,123,141,187,126,137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,
124,182,1,250,0,0,1,0,135,0,136,1,164,6,192,8,188,12,128,14,153,24,70,59,27,68,61,57,46,37,
12,13,178,126,132,123,123,141,187,126,137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,
0,182,8,0,0,0,1,250,0,0,1,0,135,0,136,1,164,6,192,8,188,12,128,14,153,24,0,37,21,53,
48,45,36,29,9,10,178,126,132,123,123,141,187,126,137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,
222,182,0,0,0,0,188,40,60,182,64,250,23,8,235,0,5,0,1,0,24,1,186,2,40,5,180,9,98,13,
20,15,71,28,45,42,28,56,57,42,34,27,9,6,210,133,142,120,120,120,237,165,165,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,24,1,186,2,40,5,
180,9,98,13,20,15,71,28,60,81,39,79,80,58,48,37,13,8,210,133,142,120,120,120,237,165,165,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,10,1,
145,2,70,5,166,9,86,13,2,15,254,27,80,64,33,70,69,51,43,34,11,8,205,129,141,120,120,120,237,165,
165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,
1,0,132,0,24,1,84,6,36,9,228,12,96,14,100,25,50,43,19,61,41,35,38,35,9,12,165,90,135,120,
120,120,165,135,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,
64,250,23,8,1,0,132,0,24,1,64,6,36,9,228,12,96,14,100,25,0,27,15,48,33,28,30,28,7,10,
165,90,135,120,120,120,165,135,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,
77,60,59,182,64,250,23,8,220,0,5,0,1,0,153,0,156,1,248,2,120,10,148,12,176,14,244,26,50,45,
14,61,43,32,35,26,14,6,165,126,145,120,120,120,165,115,130,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,153,0,156,1,248,2,120,10,148,12,176,14,
244,26,90,77,19,79,57,41,46,34,19,8,165,126,145,120,120,120,165,115,130,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,153,0,156,1,248,2,120,10,
148,12,176,14,244,26,50,62,17,71,51,37,41,30,17,7,165,126,145,120,120,120,165,115,130,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,153,0,156,1,
248,2,120,10,148,12,176,14,244,26,30,51,15,65,46,34,38,28,15,7,165,126,145,120,120,120,165,115,130,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,1,0,
153,0,156,1,248,2,120,10,148,12,176,14,244,26,0,30,11,50,35,26,29,21,11,5,165,126,145,120,120,120,
165,115,130,44,45,70,130,59,0,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,64,250,
23,8,0,0,6,0,1,0,51,1,124,3,60,5,124,10,93,13,187,14,253,27,45,59,32,70,62,38,33,22,
10,5,205,152,124,120,120,120,249,174,255,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,
0,191,197,24,223,182,176,250,125,182,3,0,51,1,124,3,60,5,124,10,93,13,187,14,253,27,50,117,45,99,
87,54,47,31,15,7,205,152,124,120,120,120,249,174,255,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,
0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,9,1,254,2,28,6,68,10,45,13,119,14,49,28,
50,93,43,90,79,62,51,33,14,8,187,133,125,120,120,120,249,174,255,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,200,0,64,2,108,7,240,9,228,12,
16,14,128,28,50,57,37,72,64,71,54,34,13,10,160,105,127,120,120,120,160,105,127,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,1,0,224,0,40,2,8,7,
176,9,112,13,241,14,64,27,40,42,28,60,56,56,49,43,8,8,255,90,180,120,120,120,187,105,135,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,64,250,23,8,1,0,224,0,
40,2,8,7,176,9,112,13,241,14,64,27,0,34,25,54,50,50,44,39,7,7,255,90,180,120,120,120,187,105,
135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,146,23,0,0,0,250,0,0,
245,0,6,0,1,0,24,1,248,2,176,4,120,10,152,13,60,15,32,28,45,60,34,66,63,43,37,24,11,6,
186,152,152,120,120,120,192,155,167,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,
197,24,223,182,176,250,125,182,3,0,24,1,248,2,176,4,120,10,152,13,60,15,32,28,60,116,48,92,88,60,
52,34,16,8,186,152,152,120,120,120,192,155,167,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,
24,53,0,191,197,254,124,182,1,250,0,0,1,0,12,1,224,2,100,5,134,10,158,13,64,15,41,28,40,94,
45,93,72,60,49,33,15,8,186,148,160,120,120,120,192,155,172,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,214,0,28,2,28,7,177,10,185,13,82,15,
84,28,40,65,36,72,61,57,48,35,14,9,185,127,169,120,120,120,192,155,172,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,1,0,160,0,88,1,212,8,220,10,
212,13,100,15,128,28,60,41,16,61,42,44,39,30,11,8,185,107,177,120,120,120,185,107,177,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,64,250,23,8,1,0,204,0,96,1,
232,8,220,10,16,14,196,19,88,27,0,33,20,48,32,36,32,12,11,8,187,125,137,137,150,175,187,125,137,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,146,23,0,0,0,250,0,0,45,0,
6,0,1,0,208,0,112,2,212,3,60,10,188,12,92,14,87,27,45,57,26,56,67,40,36,33,9,5,167,147,
147,120,120,120,167,142,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,
223,182,176,250,125,182,3,0,208,0,112,2,212,3,60,10,188,12,92,14,87,27,75,104,36,76,90,54,48,44,
12,7,167,147,147,120,120,120,167,142,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,
0,191,197,254,124,182,1,250,0,0,1,0,152,0,16,2,180,5,192,8,32,13,199,14,92,26,69,77,41,83,
68,57,53,42,15,8,163,119,156,137,120,120,167,142,157,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,
222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,152,0,88,1,238,7,100,10,132,13,50,15,96,25,
30,59,27,78,48,48,52,30,13,6,160,92,147,155,120,120,130,95,147,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,1,0,152,0,80,1,30,8,240,10,229,13,
181,15,20,26,30,78,34,87,56,53,54,37,16,8,162,95,159,149,120,120,130,95,147,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,64,250,23,8,1,0,152,0,72,1,79,8,
124,11,71,14,56,16,200,26,0,38,27,58,40,35,32,27,12,7,165,99,171,142,120,120,130,99,147,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,146,23,0,0,0,250,0,0,240,0,5,0,
1,0,200,0,208,1,188,7,216,9,248,12,66,14,128,28,45,44,25,57,57,61,46,35,10,8,185,107,127,120,
120,120,185,107,127,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,
176,250,125,182,3,0,200,0,208,1,188,7,216,9,248,12,66,14,128,28,70,77,34,75,75,81,61,46,14,10,
185,107,127,120,120,120,185,107,127,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,
197,254,124,182,1,250,0,0,1,0,199,0,227,1,131,7,210,9,248,12,73,14,106,28,75,67,33,72,72,74,
57,43,14,9,184,111,127,120,120,120,185,107,127,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,
49,229,0,182,8,0,0,0,1,250,0,0,1,0,186,0,146,2,128,5,156,9,248,12,141,14,160,27,50,62,
37,71,79,48,44,32,16,0,180,150,125,120,120,120,200,120,120,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,1,0,186,0,146,2,128,5,156,9,248,12,141,14,
160,27,0,38,29,56,62,38,35,25,13,0,180,150,125,120,120,120,200,120,120,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,64,250,23,8,210,0,5,0,1,0,148,0,128,1,
238,7,60,10,42,13,50,15,96,25,45,39,23,65,47,43,41,26,10,5,160,92,120,143,120,120,130,95,120,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,
148,0,128,1,238,7,60,10,42,13,50,15,96,25,60,71,32,88,64,58,55,35,14,6,160,92,120,143,120,120,
130,95,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,
0,0,1,0,148,0,128,1,228,7,216,9,248,12,0,15,96,25,60,62,27,83,60,55,52,33,13,6,160,92,
120,155,120,120,130,95,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,
0,0,1,250,0,0,1,0,120,0,250,1,144,6,188,7,164,11,16,14,13,27,45,27,24,49,46,29,30,22,
11,6,166,144,133,123,120,120,130,95,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,
0,0,188,40,60,182,64,250,23,8,1,0,120,0,250,1,180,5,28,7,144,11,252,13,44,27,0,26,24,49,
46,29,30,22,11,6,166,144,133,123,120,120,130,95,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,40,
60,182,40,54,0,191,77,60,59,182,64,250,23,8,75,0,5,0,1,0,135,0,88,1,224,6,192,8,188,12,
128,14,153,24,45,51,22,63,57,50,41,32,10,11,178,126,132,123,123,141,187,126,137,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,135,0,88,1,204,6,
192,8,188,12,128,14,153,24,70,74,26,76,68,61,49,39,12,13,178,126,132,123,123,141,187,126,137,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,150,0,
162,1,48,6,246,8,164,12,131,14,85,25,70,70,30,74,72,56,45,37,13,9,178,128,130,122,122,134,187,126,
137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,
1,0,186,0,80,2,196,4,116,9,108,12,141,14,13,27,30,64,37,70,79,47,38,32,16,0,180,135,125,120,
120,120,200,135,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,
64,250,23,8,1,0,186,0,80,2,196,4,96,9,108,12,141,14,13,27,0,49,32,61,69,41,33,28,14,0,
180,135,125,120,120,120,200,135,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,
77,60,59,182,64,250,23,8,0,0,4,0,1,0,196,0,104,2,252,3,0,10,28,12,116,14,119,26,53,61,
35,71,73,28,34,20,9,8,162,105,132,120,120,120,162,105,135,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,7,0,208,0,48,2,132,3,220,10,204,11,141,14,
0,26,24,60,38,81,60,33,35,16,11,8,162,105,87,120,120,120,162,75,135,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,208,0,229,1,123,3,220,10,
204,11,141,14,0,26,51,41,30,65,48,27,28,13,9,6,162,105,87,120,120,120,162,75,135,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,136,0,194,1,
24,3,164,11,68,12,241,14,0,26,0,25,28,46,28,24,20,16,11,8,162,135,87,120,120,120,162,75,120,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,135,0,
3,0,1,0,176,0,72,2,160,5,156,9,188,12,116,14,88,27,45,50,33,60,73,41,39,33,17,6,167,135,
135,120,120,120,197,135,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,
223,182,176,250,125,182,3,0,176,0,72,2,160,5,156,9,188,12,116,14,88,27,90,78,41,75,91,51,49,41,
21,8,167,135,135,120,120,120,197,135,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,
0,191,197,254,124,182,1,250,0,0,1,0,176,0,88,2,160,5,156,9,188,12,116,14,88,27,0,33,27,50,
60,34,32,27,14,5,167,135,135,120,120,120,197,135,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,
222,182,49,229,0,182,8,0,0,0,1,250,0,0,185,0,4,0,1,0,240,0,224,2,4,6,196,9,92,13,
80,15,153,28,45,37,29,51,56,41,29,26,9,5,197,176,161,135,120,120,220,176,161,44,45,70,130,58,0,0,
0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,240,0,224,2,4,6,
196,9,92,13,80,15,153,28,80,59,37,64,71,53,37,33,11,6,197,176,161,135,120,120,220,176,161,44,45,70,
130,58,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,240,0,
232,2,4,6,196,9,92,13,80,15,153,28,60,55,35,64,64,50,35,31,11,6,197,179,161,135,120,120,220,179,
161,44,45,70,130,58,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,
1,0,240,0,240,2,4,6,196,9,92,13,80,15,153,28,0,33,27,50,50,39,27,24,8,5,197,179,161,135,
120,120,220,179,161,44,45,70,130,58,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,
64,250,23,8,170,0,4,0,1,0,64,1,72,2,28,7,0,10,104,13,15,15,224,28,50,34,26,48,51,47,
36,27,9,5,244,132,159,120,120,120,135,180,150,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,
40,53,0,191,197,24,223,182,176,250,125,182,3,0,64,1,72,2,28,7,0,10,104,13,15,15,224,28,60,68,
37,68,73,67,51,38,12,7,244,132,159,120,120,120,135,180,150,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,64,1,72,2,28,7,0,10,104,13,15,15,
224,28,60,68,37,68,73,67,51,38,12,7,244,132,159,120,120,120,135,180,150,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,64,1,72,2,28,7,0,10,
104,13,15,15,224,28,0,34,26,48,51,47,36,27,9,5,244,132,159,120,120,120,135,180,150,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,160,0,4,0,1,0,
229,0,183,2,36,5,196,9,228,12,216,14,197,27,50,43,28,56,58,35,35,23,12,5,190,159,148,120,120,120,
237,165,165,44,45,70,130,58,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,
125,182,3,0,229,0,183,2,36,5,196,9,228,12,216,14,197,27,60,86,40,80,82,50,50,32,17,7,190,159,
148,120,120,120,237,165,165,44,45,70,130,58,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,
124,182,1,250,0,0,1,0,229,0,183,2,36,5,196,9,228,12,216,14,197,27,50,76,38,75,78,47,47,30,
16,6,190,159,148,120,120,120,237,165,165,44,45,70,130,58,0,0,0,0,40,0,0,0,0,250,222,182,49,229,
0,182,8,0,0,0,1,250,0,0,1,0,229,0,183,2,36,5,196,9,228,12,216,14,197,27,0,38,27,53,
55,33,33,21,11,4,190,159,148,120,120,120,237,165,165,44,45,70,130,58,0,0,0,0,40,0,0,0,0,250,
222,182,0,0,0,0,188,40,60,182,64,250,23,8,175,0,4,0,1,0,184,0,192,1,232,3,216,9,88,12,
141,14,128,26,45,40,24,52,57,37,31,24,17,4,162,127,157,120,120,120,162,127,157,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,184,0,192,1,232,3,
216,9,88,12,141,14,128,26,70,95,38,79,88,57,47,37,27,7,162,127,157,120,120,120,162,127,157,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,184,0,
192,1,232,3,216,9,88,12,141,14,128,26,60,76,34,71,79,51,42,33,24,6,162,127,157,120,120,120,162,127,
157,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,
1,0,184,0,192,1,232,3,216,9,88,12,141,14,128,26,0,36,23,49,54,35,29,23,17,4,162,127,157,120,
120,120,162,127,157,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,
64,250,23,8,225,0,5,0,1,0,224,0,136,2,84,4,24,11,228,12,136,14,96,27,45,34,20,41,60,29,
29,29,9,4,167,167,135,120,120,120,167,167,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,
40,53,0,191,197,24,223,182,176,250,125,182,3,0,224,0,136,2,84,4,24,11,228,12,136,14,96,27,60,114,
38,76,110,53,53,53,16,8,167,167,135,120,120,120,167,167,135,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,224,0,136,2,84,4,24,11,228,12,136,14,
96,27,60,102,36,72,104,50,50,50,15,7,167,167,135,120,120,120,167,167,135,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,224,0,128,2,84,4,24,11,
228,12,136,14,96,27,60,61,28,56,81,39,39,39,12,6,167,167,135,120,120,120,167,167,135,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,1,0,224,0,120,2,
116,4,24,11,228,12,136,14,96,27,0,26,18,37,54,26,26,26,8,4,167,167,135,120,120,120,167,167,135,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,64,250,23,8,0,0,
5,0,1,0,140,0,32,2,160,5,36,9,248,12,41,14,32,27,45,47,30,64,56,56,40,40,15,8,167,135,
180,120,120,120,167,120,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,
223,182,176,250,125,182,3,0,168,0,32,2,160,5,16,9,148,12,41,14,32,27,48,82,37,79,86,79,64,53,
26,9,170,135,157,120,120,120,140,120,157,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,
0,191,197,254,124,182,1,250,0,0,1,0,172,0,32,2,160,5,16,9,168,12,41,14,160,27,50,67,34,67,
86,71,57,51,16,8,170,120,120,120,120,120,170,120,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,
222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,204,0,32,2,148,5,16,9,168,12,41,14,160,27,
60,52,34,68,67,54,45,35,15,8,170,120,135,120,120,120,140,90,135,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,1,0,204,0,33,2,140,5,16,9,168,12,
141,14,160,27,0,39,31,52,64,56,38,30,11,8,170,135,150,120,120,120,140,90,120,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,64,250,23,8,0,0,4,0,1,0,180,0,
64,1,76,4,212,8,28,12,226,14,144,26,50,40,13,59,45,30,33,29,14,7,170,130,126,120,120,120,162,120,
165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,
3,0,180,0,64,1,76,4,212,8,28,12,226,14,144,26,85,59,16,72,55,37,41,36,18,9,170,130,126,120,
120,120,162,120,165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,
1,250,0,0,1,0,180,0,64,1,76,4,212,8,28,12,226,14,144,26,56,43,13,61,47,32,35,30,15,7,
170,130,126,120,120,120,162,120,165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,
8,0,0,0,1,250,0,0,1,0,180,0,64,1,252,3,152,8,28,12,226,14,144,26,0,36,12,57,37,23,
25,23,11,7,170,130,148,120,120,120,162,120,148,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,
0,0,0,0,188,40,60,182,64,250,23,8,0,0,6,0,1,0,236,0,136,3,140,5,116,9,88,12,116,14,
224,27,50,55,32,56,75,41,43,27,10,8,250,120,210,120,120,120,255,120,165,44,45,70,130,57,0,0,0,0,
45,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,236,0,136,3,140,5,136,9,
88,12,116,14,224,27,75,103,34,81,98,53,57,36,12,6,225,120,210,120,120,120,255,120,165,44,60,70,130,57,
0,0,0,0,45,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,220,0,80,3,
80,5,36,9,128,12,41,14,224,27,40,64,28,59,81,41,52,32,12,7,167,120,210,120,120,120,255,120,165,44,
60,70,130,57,0,0,0,0,43,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,
0,1,173,2,87,4,16,9,48,12,41,14,128,27,35,60,28,49,77,34,51,36,15,6,237,207,192,120,120,120,
141,120,147,44,55,70,130,57,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,
23,8,1,0,0,1,76,2,10,4,16,9,28,12,41,14,112,27,35,70,35,63,75,31,48,33,17,8,221,148,
186,120,120,120,141,120,147,44,45,70,130,57,0,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,
59,182,64,250,23,8,1,0,0,1,24,2,172,3,252,8,28,12,41,14,112,27,0,23,20,36,37,17,25,19,
9,4,221,148,186,120,120,120,141,120,147,44,45,70,130,57,0,0,0,0,40,0,0,0,0,0,0,0,0,0,
0,0,146,23,0,0,0,250,0,0,0,0,5,0,1,0,248,0,56,2,84,6,36,9,28,12,166,14,96,28,
49,28,22,43,55,38,28,23,9,4,167,120,165,120,120,120,197,120,120,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,248,0,56,2,84,6,36,9,28,12,
166,14,96,28,41,87,39,77,98,67,50,41,17,7,167,120,165,120,120,120,197,120,120,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,248,0,8,2,84,6,
212,8,28,12,166,14,96,28,31,82,37,72,92,63,47,38,16,7,167,120,165,120,120,120,197,120,120,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,8,1,
232,1,44,6,152,8,204,11,166,14,96,28,90,50,23,66,66,38,30,25,14,8,165,120,135,120,120,120,150,120,
120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,
1,0,190,0,120,1,231,4,195,8,205,12,116,14,160,28,0,33,30,54,32,25,21,18,7,7,120,103,105,120,
120,120,120,100,105,44,45,70,130,59,0,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,
64,250,23,8,196,0,7,0,5,0,72,1,136,3,62,5,140,10,112,13,191,14,32,28,51,43,28,63,56,33,
28,18,8,4,207,150,105,120,120,120,237,165,165,44,45,70,130,56,0,0,0,0,45,0,0,0,0,50,124,182,
40,53,0,191,197,24,223,182,176,250,125,182,3,0,72,1,136,3,62,5,140,10,112,13,191,14,32,28,45,104,
44,98,87,51,44,28,13,6,207,150,105,120,120,120,237,165,165,44,45,70,130,56,0,0,0,0,45,0,0,0,
0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,72,1,136,3,62,5,140,10,112,13,191,14,
32,28,14,92,41,92,82,48,41,26,12,6,207,150,105,120,120,120,237,165,165,44,45,70,130,56,0,0,0,0,
45,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,33,0,6,1,95,3,155,5,186,9,
22,13,91,14,176,27,23,65,36,77,72,48,45,36,10,7,187,142,142,120,120,120,237,165,165,44,45,70,130,56,
0,0,0,0,45,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,33,0,196,0,32,3,
249,5,232,8,188,12,247,13,64,27,33,41,29,58,60,50,50,50,9,8,167,135,180,120,120,120,167,105,135,44,
45,70,130,56,0,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,64,250,23,8,1,0,
212,0,244,1,133,7,136,9,228,12,91,14,64,27,30,38,38,56,53,53,40,39,16,9,167,90,180,120,120,120,
137,75,150,44,45,70,130,56,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,146,23,0,0,0,250,
0,0,1,0,212,0,184,1,177,7,196,9,52,13,91,14,192,27,0,34,40,51,44,44,32,28,11,10,167,90,
105,120,120,120,122,75,90,44,45,70,130,56,0,0,0,0,40,0,0,0,0,250,222,182,120,54,0,191,188,40,
60,182,64,250,23,8,230,0,5,0,1,0,0,1,24,2,108,7,236,9,104,13,15,15,224,28,45,29,25,47,
53,44,37,27,9,6,216,138,159,120,120,120,107,138,150,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,
124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,0,1,24,2,108,7,236,9,104,13,15,15,224,28,
90,67,38,70,80,66,56,41,13,9,216,138,159,120,120,120,107,138,150,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,216,0,232,1,188,7,40,10,163,13,
57,15,148,28,55,55,37,67,69,62,51,39,12,9,197,114,149,120,120,120,107,131,150,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,144,0,125,1,52,8,
148,10,188,13,76,15,32,28,40,30,27,50,48,46,40,32,9,8,167,90,135,120,120,120,122,120,120,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,1,0,144,0,
125,1,52,8,148,10,188,13,76,15,32,28,0,27,26,47,45,44,38,30,8,8,167,90,135,120,120,120,122,120,
120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,64,250,23,8,
0,0,5,0,1,0,240,0,168,2,28,7,176,9,112,13,10,15,96,27,44,48,34,65,59,56,38,23,6,8,
165,135,240,120,120,120,195,105,165,44,45,70,130,57,0,0,0,0,43,0,0,0,0,50,124,182,40,53,0,191,
197,24,223,182,176,250,125,182,3,0,240,0,176,2,28,7,136,9,112,13,60,15,96,27,77,68,36,76,79,74,
40,24,8,6,170,120,180,120,120,120,200,120,165,44,45,70,130,57,0,0,0,0,43,0,0,0,0,0,0,0,
24,53,0,191,197,254,124,182,1,250,0,0,1,0,240,0,163,2,244,6,116,9,72,13,60,15,96,27,77,54,
29,62,71,62,56,25,13,6,167,120,180,120,120,120,242,150,150,44,45,70,130,57,0,0,0,0,43,0,0,0,
0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,240,0,223,2,114,6,216,9,172,13,60,15,
96,28,35,36,27,56,50,49,42,26,10,7,167,120,180,120,120,120,242,150,150,44,45,70,130,57,0,0,0,0,
40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,1,0,240,0,223,2,26,6,236,9,
172,13,60,15,96,28,0,28,25,53,43,40,35,21,7,8,167,105,180,120,120,120,242,135,150,44,45,70,130,57,
0,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,64,250,23,8,193,0,6,0,1,0,
104,0,160,1,9,8,80,10,72,13,60,15,160,27,42,46,10,66,56,58,42,33,10,8,150,165,150,120,120,120,
150,105,165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,
125,182,3,0,104,0,160,1,20,8,160,10,72,13,60,15,32,27,40,63,20,72,72,77,67,37,15,8,167,120,
150,120,120,120,167,120,165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,
124,182,1,250,0,0,1,0,128,0,179,1,232,7,80,10,52,13,60,15,64,27,51,45,20,70,53,50,46,25,
9,8,180,90,150,120,120,120,180,105,165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,
0,182,8,0,0,0,1,250,0,0,1,0,198,0,48,2,8,7,136,9,46,13,249,14,212,25,30,40,24,62,
57,51,41,26,11,8,157,117,150,120,120,120,167,90,165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,
222,182,0,0,0,0,188,40,60,182,64,250,23,8,1,0,201,0,94,2,44,6,72,9,183,12,226,14,170,25,
30,17,18,36,40,36,29,17,5,6,148,154,138,120,120,120,167,105,135,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,40,60,182,40,54,0,191,77,60,59,182,64,250,23,8,1,0,210,0,141,2,150,5,24,9,128,12,
15,15,77,25,0,19,23,36,44,37,29,17,3,8,139,168,138,120,120,120,167,105,135,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,0,0,0,0,0,0,0,146,23,0,0,0,250,0,0,180,0,4,0,1,0,168,0,
232,1,132,3,216,9,164,11,141,14,32,27,45,56,28,58,64,39,36,18,13,5,165,135,150,120,120,120,165,135,
135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,
3,0,168,0,232,1,132,3,216,9,164,11,141,14,32,27,70,115,40,83,92,56,51,26,19,8,165,135,150,120,
120,120,165,135,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,
1,250,0,0,1,0,168,0,232,1,132,3,216,9,164,11,141,14,32,27,65,93,36,74,83,50,46,23,17,7,
165,135,150,120,120,120,165,135,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,
8,0,0,0,1,250,0,0,1,0,168,0,232,1,152,3,216,9,164,11,141,14,32,27,0,35,25,45,52,29,
27,15,11,4,165,135,150,120,120,120,165,135,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,
0,0,0,0,188,40,60,182,64,250,23,8,0,0,6,0,1,0,24,1,168,3,205,5,60,10,92,13,216,14,
32,27,36,52,28,64,61,46,40,35,8,4,200,135,210,120,120,120,255,150,135,44,60,70,130,55,0,0,0,0,
40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,24,1,168,3,205,5,60,10,
92,13,216,14,32,27,29,112,41,94,90,67,58,52,12,6,200,135,210,120,120,120,255,150,135,44,60,70,130,55,
0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,5,0,8,1,168,3,
62,5,216,9,188,12,166,14,32,27,39,128,38,94,103,79,65,53,16,8,185,180,165,120,120,120,245,135,120,44,
60,70,130,55,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,5,0,
2,1,128,3,34,5,184,9,164,12,173,14,60,27,42,108,37,86,98,72,60,48,15,8,185,175,159,120,120,120,
245,135,120,44,50,70,130,56,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,
23,8,1,0,232,0,185,2,116,4,56,9,68,12,203,14,176,27,84,52,33,55,80,46,39,31,11,8,185,157,
135,120,120,120,194,105,111,44,45,70,130,57,0,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,
59,182,64,250,23,8,1,0,200,0,193,2,196,4,252,8,128,12,241,14,32,28,0,26,28,42,56,36,32,26,
8,8,185,180,120,120,120,120,155,120,105,44,45,70,130,56,0,0,0,0,40,0,0,0,0,0,0,0,0,0,
0,0,146,23,0,0,0,250,0,0,139,0,3,0,1,0,158,0,56,1,165,8,215,10,49,13,9,15,112,26,
50,32,10,59,42,49,50,25,11,5,166,105,120,120,120,120,130,75,120,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,158,0,56,1,165,8,215,10,49,13,
9,15,112,26,90,73,15,88,64,74,75,37,17,8,166,105,120,120,120,120,130,75,120,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,158,0,56,1,165,8,
215,10,49,13,9,15,112,26,0,33,10,60,43,50,51,25,11,5,166,105,120,120,120,120,130,75,120,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,235,0,5,0,
1,0,192,0,176,1,188,7,60,10,102,13,191,14,128,28,45,27,21,44,45,44,34,28,8,6,185,107,135,120,
120,120,185,107,167,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,
176,250,125,182,3,0,192,0,176,1,188,7,60,10,102,13,191,14,128,28,70,80,35,76,77,75,59,47,15,11,
185,107,135,120,120,120,185,107,167,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,
197,254,124,182,1,250,0,0,1,0,188,0,164,1,212,7,72,10,99,13,196,14,96,28,70,69,32,71,72,69,
55,44,14,10,184,107,134,120,120,120,185,107,167,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,
49,229,0,182,8,0,0,0,1,250,0,0,1,0,136,0,17,1,207,8,213,10,57,13,7,15,236,26,50,38,
13,54,50,49,46,28,11,7,174,105,118,120,120,120,185,107,167,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,1,0,118,0,224,0,35,9,4,11,42,13,30,15,
112,26,0,23,7,45,40,39,39,21,10,6,171,105,112,120,120,120,175,135,120,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,64,250,23,8,0,0,5,0,1,0,116,0,13,2,
161,5,36,9,188,12,116,14,96,27,34,35,26,50,60,34,36,27,14,5,167,150,135,120,120,120,197,120,120,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,
116,0,13,2,161,5,36,9,188,12,116,14,96,27,60,80,39,76,92,52,54,42,22,8,167,150,135,120,120,120,
197,120,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,
0,0,1,0,220,0,224,1,120,5,232,8,68,12,191,14,192,28,54,54,36,55,79,57,35,30,16,7,120,120,
120,120,120,120,165,120,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,
0,0,1,250,0,0,1,0,220,0,164,1,120,4,152,8,88,12,141,14,64,28,45,56,44,77,54,30,24,26,
15,9,120,120,120,120,120,120,60,90,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,
0,0,188,40,60,182,64,250,23,8,1,0,140,0,84,1,222,3,56,9,188,12,141,14,192,27,0,21,28,46,
37,15,7,9,9,8,120,105,90,120,120,120,60,120,75,44,45,70,130,59,0,0,0,0,40,0,0,0,0,40,
60,182,40,54,0,191,77,60,59,182,64,250,23,8,0,0,6,0,1,0,248,0,104,2,196,4,76,9,28,12,
166,14,96,28,46,45,26,58,66,49,36,30,12,5,167,120,165,120,120,120,197,120,120,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,248,0,104,2,196,4,
76,9,28,12,166,14,96,28,25,103,40,88,100,75,55,45,19,8,167,120,165,120,120,120,197,120,120,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,248,0,
104,2,176,4,76,9,28,12,166,14,96,28,43,73,33,73,84,63,46,38,16,7,167,120,165,120,120,120,197,120,
120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,
1,0,198,0,248,1,176,4,76,9,58,12,204,14,112,28,48,72,28,76,72,41,43,25,14,8,166,142,142,120,
120,120,170,180,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,
64,250,23,8,5,0,192,0,174,1,196,4,172,8,204,11,141,14,224,28,46,40,28,64,39,27,18,16,8,8,
162,120,135,120,120,120,117,90,180,44,45,70,130,59,0,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,
77,60,59,182,64,250,23,8,1,0,176,0,134,1,189,3,92,8,204,11,141,14,224,28,0,33,24,58,38,22,
15,12,9,8,152,120,75,120,120,120,107,90,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,
0,0,0,0,146,23,0,0,0,250,0,0,0,0,5,0,1,0,180,0,137,2,205,5,126,9,233,12,116,14,
176,27,40,46,32,60,68,44,39,31,13,3,174,157,145,120,120,120,200,120,120,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,180,0,137,2,205,5,126,9,
233,12,116,14,176,27,66,104,48,89,101,65,58,47,20,4,174,157,145,120,120,120,200,120,120,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,216,0,102,2,
173,6,120,9,242,12,86,14,243,27,94,61,33,67,76,59,50,41,14,6,180,144,158,120,120,120,200,120,120,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,
156,0,99,1,152,8,140,10,152,13,166,14,32,28,40,44,33,56,50,60,46,33,10,8,167,90,195,120,120,120,
122,120,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,
23,8,1,0,156,0,99,1,174,8,160,10,92,13,10,15,32,28,0,31,30,47,48,44,40,32,9,8,167,90,
135,120,120,120,122,120,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,
59,182,64,250,23,8,95,0,6,0,1,0,136,0,72,1,138,8,200,10,134,13,113,15,236,26,45,44,7,65,
55,56,44,27,11,7,172,133,129,120,120,120,180,105,150,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,
124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,128,0,72,1,142,8,210,10,82,13,98,15,224,26,
50,64,10,75,75,77,72,37,16,8,158,112,135,120,120,120,167,90,120,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,128,0,72,1,142,8,210,10,82,13,
98,15,224,26,40,64,10,75,75,77,72,37,16,8,158,112,135,120,120,120,167,90,120,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,169,0,216,1,108,7,
60,10,92,13,20,15,32,27,35,66,33,76,73,60,56,36,18,4,173,127,122,120,120,120,167,97,120,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,1,0,116,0,
13,2,161,5,36,9,188,12,116,14,96,27,50,37,26,51,63,35,36,28,14,8,167,150,135,120,120,120,197,120,
120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,64,250,23,8,
1,0,116,0,13,2,161,5,36,9,188,12,116,14,96,27,0,21,20,38,47,26,27,21,10,6,167,150,135,120,
120,120,197,120,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,146,23,0,0,
0,250,0,0,0,0,7,0,1,0,179,0,50,2,175,3,96,10,15,12,141,14,32,27,45,36,22,46,52,33,
32,15,11,4,166,135,150,120,120,120,167,135,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,
40,53,0,191,197,24,223,182,176,250,125,182,3,0,179,0,50,2,175,3,96,10,15,12,141,14,32,27,40,116,
40,82,93,59,58,27,20,8,166,135,150,120,120,120,167,135,135,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,179,0,50,2,175,3,96,10,15,12,141,14,
32,27,70,94,36,74,84,53,52,24,18,7,166,135,150,120,120,120,167,135,135,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,196,0,24,2,164,6,116,9,
228,12,36,14,64,27,30,49,30,57,68,57,53,46,8,8,167,135,180,120,120,120,167,105,135,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,1,0,199,0,112,1,
123,7,201,10,228,12,107,14,64,27,35,37,24,47,48,45,44,36,11,6,156,128,153,120,120,120,167,105,135,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,64,250,23,8,1,0,
199,0,112,1,123,7,201,10,228,12,107,14,64,27,55,37,24,47,48,45,44,36,11,6,156,128,153,120,120,120,
167,105,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,146,23,0,0,0,250,
0,0,1,0,208,0,128,2,238,5,96,9,52,13,216,14,64,27,0,21,20,40,48,36,32,28,7,8,252,90,
165,120,120,120,252,105,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,120,54,0,191,188,40,
60,182,64,250,23,8,170,0,4,0,1,0,188,0,0,2,84,6,0,10,132,13,170,15,32,27,50,33,26,55,
43,41,38,26,9,5,152,126,147,120,120,120,144,148,174,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,
124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,188,0,0,2,84,6,0,10,132,13,170,15,32,27,
60,84,41,87,68,66,60,42,15,8,152,126,147,120,120,120,144,148,174,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,188,0,0,2,84,6,0,10,132,13,
170,15,32,27,60,75,39,82,64,62,57,40,14,8,152,126,147,120,120,120,144,148,174,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,188,0,0,2,84,6,
0,10,132,13,170,15,32,27,0,33,26,55,43,41,38,26,9,5,152,126,147,120,120,120,144,148,174,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,100,0,4,0,
1,0,176,0,112,1,112,3,136,9,184,11,60,15,144,26,50,50,12,64,58,30,27,18,15,7,162,127,150,120,
120,120,162,127,165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,
176,250,125,182,3,0,176,0,112,1,112,3,136,9,184,11,60,15,144,26,50,84,16,84,76,40,36,24,20,10,
162,127,150,120,120,120,162,127,165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,
197,254,124,182,1,250,0,0,1,0,176,0,112,1,112,3,136,9,184,11,60,15,144,26,70,67,14,74,67,35,
32,21,17,8,162,127,150,120,120,120,162,127,165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,
49,229,0,182,8,0,0,0,1,250,0,0,1,0,176,0,112,1,132,3,136,9,184,11,60,15,144,26,0,34,
12,52,47,25,22,15,12,6,162,127,150,120,120,120,162,127,165,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,0,0,4,0,33,0,152,0,48,1,136,9,204,11,
232,13,220,15,160,26,52,45,18,59,59,53,47,28,13,6,167,110,120,120,120,120,167,110,120,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,152,0,48,1,
136,9,204,11,232,13,220,15,160,26,75,71,23,74,74,66,58,35,17,8,167,110,120,120,120,120,167,110,120,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,
152,0,48,1,136,9,204,11,232,13,220,15,160,26,78,52,20,64,64,57,50,30,14,7,167,110,120,120,120,120,
167,110,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,
0,0,1,0,84,0,48,1,136,9,204,11,232,13,220,15,64,26,0,20,11,40,41,38,39,22,9,8,175,105,
105,120,120,120,175,135,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,
60,182,64,250,23,8,210,0,5,0,1,0,153,0,198,1,44,3,255,9,194,11,151,14,244,26,50,57,24,58,
65,39,36,20,14,6,165,126,145,120,120,120,165,115,130,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,
124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,153,0,198,1,44,3,255,9,194,11,151,14,244,26,
40,96,31,76,85,51,46,26,19,8,165,126,145,120,120,120,165,115,130,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,153,0,198,1,44,3,255,9,194,11,
151,14,244,26,70,96,31,76,85,51,46,26,19,8,165,126,145,120,120,120,165,115,130,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,184,0,14,2,162,3,
255,9,218,11,171,14,124,27,50,69,33,65,78,42,41,26,17,7,170,136,137,120,120,120,165,115,130,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,1,0,192,0,
32,2,192,3,0,10,224,11,176,14,159,27,0,40,25,49,59,31,31,20,12,5,172,138,135,120,120,120,167,138,
135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,64,250,23,8,
45,0,5,0,1,0,14,1,212,2,106,4,200,10,2,13,238,14,192,27,45,50,25,57,68,37,31,26,10,5,
165,148,135,120,120,120,167,142,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,
197,24,223,182,176,250,125,182,3,0,14,1,212,2,106,4,200,10,2,13,238,14,192,27,50,107,37,84,100,54,
45,38,14,7,165,148,135,120,120,120,167,142,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,
24,53,0,191,197,254,124,182,1,250,0,0,1,0,218,0,120,2,169,3,161,10,109,12,71,14,60,27,60,103,
28,69,91,51,41,36,16,8,166,145,137,120,120,120,167,142,135,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,144,0,216,1,12,3,196,9,254,11,157,14,
216,26,50,65,24,63,63,44,40,23,17,8,163,120,143,120,120,120,165,115,130,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,1,0,144,0,216,1,12,3,196,9,
254,11,157,14,216,26,0,42,20,51,51,35,32,19,14,6,163,120,143,120,120,120,165,115,130,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,64,250,23,8,250,0,5,0,33,0,
152,0,32,1,224,8,4,11,52,13,0,15,160,26,45,44,6,66,58,59,60,28,13,6,175,105,120,120,120,120,
175,90,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,
125,182,3,0,152,0,24,1,232,8,4,11,52,13,0,15,160,26,70,72,10,83,73,74,75,36,17,8,167,105,
120,120,120,120,167,90,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,
124,182,1,250,0,0,1,0,152,0,24,1,172,8,4,11,12,13,216,14,64,26,70,45,10,60,60,63,63,34,
11,8,167,105,120,120,120,120,167,105,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,
0,182,8,0,0,0,1,250,0,0,5,0,240,0,168,2,164,6,136,9,72,13,60,15,96,27,65,36,27,54,
45,54,45,22,12,6,167,135,180,120,120,120,242,135,150,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,
222,182,0,0,0,0,188,40,60,182,64,250,23,8,1,0,240,0,216,2,26,6,216,9,172,13,60,15,96,28,
0,32,28,56,44,44,36,21,7,8,167,120,180,120,120,120,242,120,150,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,40,60,182,40,54,0,191,77,60,59,182,64,250,23,8,165,0,3,0,1,0,116,0,24,2,140,5,
116,9,188,12,116,14,88,27,110,86,41,79,96,54,56,43,23,8,167,150,135,120,120,120,197,120,120,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,7,0,116,0,
24,2,136,5,16,9,88,12,16,14,88,27,55,24,22,43,46,30,28,21,11,4,167,150,135,120,120,120,197,120,
120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,
1,0,116,0,72,2,120,5,208,7,224,11,152,13,88,27,0,21,22,43,37,30,13,11,6,4,167,150,135,120,
120,120,197,120,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,
1,250,0,0,0,0,3,0,1,0,116,0,24,2,140,5,116,9,188,12,116,14,88,27,50,50,31,60,73,41,
43,33,17,6,167,150,135,120,120,120,197,120,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,
40,53,0,191,197,24,223,182,176,250,125,182,3,0,116,0,24,2,140,5,116,9,188,12,116,14,88,27,90,86,
41,79,96,54,56,43,23,8,167,150,135,120,120,120,197,120,120,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,116,0,24,2,140,5,116,9,188,12,116,14,
88,27,0,42,28,55,67,38,39,30,16,6,167,150,135,120,120,120,197,120,120,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,160,0,4,0,1,0,200,0,248,1,
108,7,236,9,228,12,16,14,128,28,50,45,27,61,54,66,52,36,11,8,160,105,127,120,120,120,160,105,127,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,
200,0,248,1,108,7,240,9,228,12,16,14,128,28,50,80,36,81,72,88,70,48,15,11,160,105,127,120,120,120,
160,105,127,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,
0,0,1,0,200,0,248,1,108,7,240,9,228,12,16,14,128,28,60,65,32,73,64,79,63,44,13,10,160,105,
127,120,120,120,160,105,127,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,
0,0,1,250,0,0,1,0,200,0,240,1,128,7,248,9,228,12,16,14,128,28,0,35,24,53,47,58,46,32,
10,7,160,105,127,120,120,120,160,105,127,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,
0,0,188,40,60,182,64,250,23,8,0,0,3,0,1,0,123,0,15,2,181,5,176,9,198,12,136,14,38,27,
50,49,30,62,69,42,44,32,16,6,166,145,133,120,120,120,197,120,120,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,123,0,15,2,181,5,176,9,198,12,
136,14,38,27,90,88,40,83,92,56,58,43,22,8,166,145,133,120,120,120,197,120,120,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,123,0,15,2,181,5,
176,9,198,12,136,14,38,27,0,42,27,57,63,38,40,30,15,5,166,145,133,120,120,120,197,120,120,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,0,0,3,0,
1,0,200,0,40,2,12,3,200,10,188,12,36,14,32,28,50,64,25,60,60,38,38,22,15,6,182,150,120,120,
120,120,182,105,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,
176,250,125,182,3,0,200,0,40,2,12,3,200,10,188,12,36,14,32,28,90,100,32,76,76,48,48,28,19,8,
182,150,120,120,120,120,182,105,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,
197,254,124,182,1,250,0,0,1,0,200,0,40,2,12,3,200,10,188,12,36,14,32,28,0,54,26,55,55,35,
35,20,14,6,182,150,120,120,120,120,182,105,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,
49,229,0,182,8,0,0,0,1,250,0,0,150,0,4,0,1,0,116,0,13,2,40,5,152,8,228,12,136,14,
96,27,50,49,30,59,72,40,42,32,17,6,167,150,135,120,120,120,197,120,120,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,116,0,13,2,40,5,152,8,
228,12,136,14,96,27,70,87,41,79,96,54,56,43,23,8,167,150,135,120,120,120,197,120,120,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,116,0,13,2,
40,5,152,8,228,12,136,14,96,27,30,49,30,59,72,40,42,32,17,6,167,150,135,120,120,120,197,120,120,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,
116,0,13,2,40,5,152,8,228,12,136,14,96,27,0,40,27,53,65,36,38,29,15,5,167,150,135,120,120,120,
197,120,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,
23,8,50,0,3,0,1,0,184,0,96,1,232,3,192,8,144,11,136,14,144,26,50,42,23,49,55,43,40,29,
17,7,162,135,150,120,120,120,162,120,165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,
0,191,197,24,223,182,176,250,125,182,3,0,184,0,96,1,232,3,192,8,144,11,136,14,144,26,100,58,27,58,
64,51,47,34,20,8,162,135,150,120,120,120,162,120,165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,
0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,184,0,96,1,232,3,152,8,104,11,136,14,144,26,
0,34,22,44,49,38,33,22,16,6,162,135,150,120,120,120,162,120,165,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,100,0,3,0,1,0,216,0,68,2,0,5,
160,10,248,12,191,14,64,29,45,40,26,55,68,37,42,32,19,0,150,144,120,120,120,120,150,93,105,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,1,0,192,0,
224,1,16,4,180,10,12,13,140,15,128,28,100,28,27,45,50,33,27,20,7,0,150,120,120,120,120,120,150,120,
120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,
17,0,192,0,224,1,16,4,180,10,12,13,140,15,128,28,0,23,26,42,42,32,25,19,7,0,150,120,120,120,
120,120,150,120,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,
1,250,0,0,140,0,3,0,1,0,8,1,223,2,224,6,116,9,112,13,60,15,96,27,50,31,25,51,52,46,
27,15,5,4,225,120,180,120,120,120,255,120,165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,
40,53,0,191,197,24,223,182,176,250,125,182,3,0,8,1,223,2,224,6,116,9,112,13,60,15,96,27,90,83,
41,83,85,75,44,25,9,7,225,120,180,120,120,120,255,120,165,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,240,0,163,2,202,6,116,9,72,13,60,15,
96,27,0,32,23,48,54,44,39,19,10,5,192,120,180,120,120,120,255,150,150,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,0,0,4,0,1,0,244,0,152,2,
16,4,240,10,148,12,41,14,96,27,45,49,21,52,68,32,27,27,11,5,167,142,135,120,120,120,167,142,135,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,
244,0,152,2,16,4,240,10,148,12,41,14,96,27,80,109,30,74,104,50,46,46,15,7,167,142,135,120,120,120,
167,142,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,
0,0,1,0,244,0,136,2,36,4,240,10,148,12,41,14,96,27,90,85,29,71,92,47,44,44,14,7,167,142,
135,120,120,120,167,142,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,
0,0,1,250,0,0,1,0,244,0,136,2,36,4,24,11,168,12,76,14,96,27,0,63,26,63,76,42,39,39,
13,6,167,142,135,120,120,120,167,142,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,
0,0,188,40,60,182,64,250,23,8,0,0,6,0,1,0,104,0,8,1,72,8,64,11,228,12,88,17,160,27,
45,42,11,57,39,57,61,22,13,9,150,135,157,120,120,120,150,135,157,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,104,0,8,1,132,8,224,11,32,13,
48,17,32,27,50,52,17,61,44,57,61,22,16,9,167,120,150,120,120,120,167,120,165,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,104,0,24,1,112,8,
224,11,32,13,68,17,32,27,50,36,15,51,35,47,51,19,14,8,167,120,150,120,120,120,167,120,165,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,128,0,
128,1,168,7,220,10,72,13,164,16,64,27,40,52,22,66,30,57,51,28,13,9,180,137,200,140,120,120,180,152,
215,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,
1,0,168,0,3,2,28,7,80,10,32,13,120,15,64,28,33,50,27,68,55,42,51,21,6,9,167,150,120,120,
120,120,167,105,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,
64,250,23,8,1,0,168,0,232,1,164,6,40,10,52,13,140,15,64,28,0,44,30,61,48,50,48,22,6,9,
167,127,120,120,120,120,167,127,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,
146,23,0,0,0,250,0,0,60,0,4,0,1,0,160,0,16,1,199,8,28,12,132,13,8,17,88,27,50,37,
15,50,35,39,46,15,15,7,187,125,137,137,150,175,187,125,137,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,148,0,16,1,199,8,28,12,132,13,8,17,
88,27,60,47,17,57,39,44,52,17,17,8,187,125,137,137,150,175,187,125,137,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,160,0,32,1,199,8,28,12,
132,13,8,17,88,27,50,46,17,57,39,44,52,17,17,8,187,125,137,137,150,175,187,125,137,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,160,0,32,1,
199,8,28,12,132,13,8,17,88,27,0,33,14,48,33,37,44,14,14,7,187,125,137,137,150,175,187,125,137,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,0,0,
6,0,1,0,152,0,72,1,172,3,76,9,48,12,92,13,128,26,45,42,26,52,43,32,29,28,17,6,162,127,
150,120,120,120,162,127,165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,
223,182,176,250,125,182,3,0,152,0,80,1,36,4,56,9,168,12,232,13,128,26,50,61,32,64,54,39,36,35,
21,7,162,127,150,120,120,120,162,127,165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,
0,191,197,254,124,182,1,250,0,0,1,0,168,0,136,1,76,4,36,9,148,12,36,14,128,26,33,61,32,68,
54,43,39,32,21,7,162,127,150,120,120,120,162,127,165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,
222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,140,0,200,1,236,4,252,8,128,12,212,13,32,27,
26,60,24,64,74,68,55,45,22,7,170,135,165,120,120,120,140,120,150,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,1,0,140,0,224,1,80,5,232,8,188,12,
56,14,32,27,40,58,24,64,74,68,55,45,22,7,170,135,165,120,120,120,140,120,150,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,64,250,23,8,1,0,116,0,224,1,200,5,
196,9,228,12,116,14,88,27,0,51,32,62,68,42,44,25,18,6,167,135,135,120,120,120,197,135,120,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,146,23,0,0,0,250,0,0,60,0,4,0,
1,0,153,0,52,1,16,8,20,10,132,13,80,15,88,27,50,39,28,44,44,42,48,12,15,8,187,125,137,137,
150,175,187,125,137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,
176,250,125,182,3,0,153,0,72,1,52,8,20,10,132,13,80,15,88,27,60,55,33,52,52,50,57,14,18,9,
187,125,137,137,150,175,187,125,137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,
197,254,124,182,1,250,0,0,1,0,153,0,72,1,52,8,20,10,132,13,80,15,88,27,50,38,28,44,44,42,
48,12,15,8,187,125,137,137,150,175,187,125,137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,
49,229,0,182,8,0,0,0,1,250,0,0,1,0,153,0,48,1,112,8,80,10,212,13,80,15,88,27,0,29,
28,36,24,28,32,12,15,8,187,125,137,137,150,175,187,125,137,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,0,0,7,0,1,0,195,0,39,1,167,8,244,11,
212,13,56,19,88,27,40,45,15,60,30,35,45,15,20,10,187,125,137,137,150,175,187,125,137,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,180,0,24,1,
132,8,224,11,132,13,152,18,88,27,20,57,15,68,36,42,52,21,15,10,187,125,137,137,150,175,187,125,137,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,
195,0,39,1,167,8,211,11,115,13,36,19,88,27,55,40,15,55,30,35,40,15,15,10,187,125,137,137,150,175,
187,125,137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,
0,0,1,0,195,0,39,1,92,8,176,9,52,13,12,18,88,27,80,48,14,62,48,33,43,14,14,9,187,125,
137,137,150,175,187,125,137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,
60,182,64,250,23,8,1,0,195,0,39,1,156,4,252,8,168,12,60,15,88,27,60,58,14,72,48,28,33,9,
9,9,187,125,137,137,150,175,187,125,137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,40,60,182,40,54,
0,191,77,60,59,182,64,250,23,8,1,0,195,0,39,1,172,3,252,8,168,12,60,15,88,27,45,35,14,52,
33,24,24,14,9,9,187,125,137,137,150,175,187,125,137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,
0,0,0,0,0,0,146,23,0,0,0,250,0,0,1,0,172,0,16,1,132,3,252,8,168,12,60,15,88,27,
0,30,14,48,33,24,24,14,9,9,187,125,137,137,150,175,187,125,137,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,250,222,182,120,54,0,191,188,40,60,182,64,250,23,8,0,0,6,0,1,0,186,0,108,2,221,4,
250,8,154,12,103,14,96,28,40,47,30,59,70,52,38,31,13,6,167,120,149,120,120,120,197,120,142,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,186,0,
108,2,221,4,250,8,154,12,103,14,96,28,47,97,43,85,100,75,55,45,19,8,167,120,149,120,120,120,197,120,
142,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,
1,0,104,0,208,1,136,4,152,8,188,12,76,14,96,28,28,76,32,85,68,52,52,32,19,8,167,120,142,120,
120,120,197,120,142,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,
1,250,0,0,1,0,137,0,160,1,16,4,185,8,163,12,101,14,151,27,39,69,32,76,62,36,36,24,19,8,
165,123,145,120,120,120,197,120,142,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,
188,40,60,182,64,250,23,8,1,0,184,0,120,1,212,3,232,8,128,12,136,14,128,26,60,42,35,46,43,31,
31,18,15,6,162,127,150,120,120,120,162,127,165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,40,60,182,
40,54,0,191,77,60,59,182,64,250,23,8,1,0,184,0,120,1,112,3,232,8,128,12,136,14,128,26,0,38,
32,43,40,26,29,17,14,6,162,127,150,120,120,120,162,127,165,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,0,0,0,0,0,0,0,146,23,0,0,0,250,0,0,0,0,6,0,1,0,24,1,0,3,176,4,4,11,
172,13,200,15,64,27,45,56,30,58,72,40,34,24,4,5,187,135,165,120,120,120,187,135,165,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,24,1,0,3,
176,4,4,11,172,13,200,15,64,27,56,114,43,83,102,57,49,34,6,8,187,135,165,120,120,120,187,135,165,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,
246,0,208,2,140,5,20,10,252,13,64,16,88,27,50,85,38,84,92,52,44,24,18,10,226,150,128,120,120,120,
235,150,128,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,
0,0,1,0,227,0,80,2,8,7,20,10,252,13,108,17,88,27,44,48,28,60,64,44,36,20,15,9,208,138,
160,128,134,145,235,150,156,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,
60,182,64,250,23,8,1,0,204,0,112,1,52,8,160,10,16,14,36,19,88,27,75,40,22,52,44,39,39,15,
13,8,187,125,137,137,150,175,187,125,137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,40,60,182,40,54,
0,191,77,60,59,182,64,250,23,8,1,0,204,0,56,1,192,8,124,11,16,14,196,19,88,27,0,35,20,48,
32,36,32,12,11,8,187,125,137,137,150,175,187,125,137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,
0,0,0,0,0,0,146,23,0,0,0,250,0,0,0,0,7,0,1,0,244,0,152,2,16,4,240,10,148,12,
41,14,96,27,50,55,23,57,69,41,35,35,12,5,167,142,135,120,120,120,167,142,135,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,244,0,152,2,16,4,
240,10,148,12,41,14,96,27,80,105,30,74,100,54,46,46,15,7,167,142,135,120,120,120,167,142,135,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,244,0,
136,2,36,4,240,10,148,12,41,14,96,27,34,86,29,71,92,51,44,44,15,7,167,142,135,120,120,120,167,142,
135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,
1,0,244,0,216,2,116,4,160,10,148,12,41,14,96,27,60,78,30,65,94,47,40,40,15,7,167,142,135,120,
120,120,167,142,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,
64,250,23,8,1,0,246,0,200,2,120,5,216,9,132,13,224,16,88,27,50,64,34,76,64,48,44,20,12,10,
226,150,136,120,120,120,235,150,136,44,45,70,130,59,0,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,
77,60,59,182,64,250,23,8,1,0,204,0,128,1,52,8,44,11,248,12,164,16,88,27,68,32,20,48,36,36,
36,16,12,8,187,125,145,137,150,175,187,125,145,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,
0,0,0,0,146,23,0,0,0,250,0,0,1,0,204,0,56,1,192,8,124,11,16,14,172,18,88,27,0,36,
21,48,32,36,36,16,8,8,187,125,137,137,150,175,187,125,137,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,250,222,182,120,54,0,191,188,40,60,182,64,250,23,8,0,0,5,0,1,0,174,0,128,2,26,6,96,9,
218,12,91,14,192,27,40,49,33,60,68,48,40,37,13,7,168,165,165,120,120,120,197,120,120,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,174,0,128,2,
26,6,96,9,218,12,91,14,192,27,66,93,46,82,94,66,55,51,18,10,168,165,165,120,120,120,197,120,120,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,
240,0,78,2,67,7,116,9,248,12,66,14,32,28,94,53,28,61,69,60,49,41,13,6,184,135,168,120,120,120,
169,138,150,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,
0,0,1,0,156,0,99,1,152,8,140,10,152,13,166,14,32,28,40,40,31,54,47,57,44,32,10,8,167,90,
195,120,120,120,122,120,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,
60,182,64,250,23,8,1,0,156,0,99,1,174,8,160,10,92,13,10,15,32,28,0,34,31,49,49,45,42,33,
9,8,167,90,135,120,120,120,122,120,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,40,60,182,40,54,
0,191,77,60,59,182,64,250,23,8,0,0,7,0,1,0,0,1,8,2,12,3,100,10,108,12,60,15,224,27,
41,82,39,72,72,48,42,23,13,6,165,97,107,120,120,120,165,97,137,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,0,1,8,2,12,3,100,10,108,12,
60,15,224,27,30,131,49,91,91,60,53,29,17,7,165,97,107,120,120,120,165,97,137,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,0,1,8,2,12,3,
100,10,108,12,60,15,224,27,35,131,49,91,91,60,53,29,17,7,165,97,107,120,120,120,165,97,137,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,144,0,
24,2,100,5,252,8,188,12,156,14,32,27,60,58,28,76,56,60,56,40,20,8,170,135,200,120,120,120,140,120,
185,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,
1,0,160,0,144,1,208,7,120,10,172,13,224,16,88,27,48,43,20,60,52,40,48,16,16,8,187,125,137,137,
150,175,187,125,137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,
64,250,23,8,5,0,160,0,72,1,52,8,4,11,192,13,224,16,88,27,45,36,16,52,48,40,48,16,16,8,
187,125,137,137,150,175,187,125,137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,
146,23,0,0,0,250,0,0,1,0,160,0,72,1,92,8,220,10,36,14,224,16,88,27,0,29,16,46,42,37,
33,16,16,8,187,125,137,137,150,175,187,125,137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,
120,54,0,191,188,40,60,182,64,250,23,8,0,0,7,0,1,0,152,0,80,1,132,3,232,8,168,12,232,13,
128,26,40,51,25,61,51,30,23,23,17,7,162,127,150,120,120,120,162,127,165,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,152,0,80,1,16,4,56,9,
168,12,232,13,128,26,82,70,30,72,60,44,40,39,24,8,162,127,150,120,120,120,162,127,165,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,176,0,240,1,
180,5,172,8,221,12,78,14,88,27,49,48,28,60,52,64,42,39,17,8,166,137,154,150,120,120,162,127,165,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,
169,0,125,1,88,7,36,9,254,12,140,14,218,27,39,45,24,48,60,64,44,39,13,8,168,144,156,120,120,120,
197,120,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,
23,8,1,0,165,0,64,1,52,8,216,9,28,13,180,14,240,27,44,44,16,60,60,51,43,37,12,8,83,127,
134,120,120,120,112,120,134,44,45,70,130,59,0,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,
59,182,64,250,23,8,1,0,140,0,24,1,172,8,80,10,92,13,231,14,12,28,41,40,20,48,56,52,41,34,
10,8,168,105,130,120,120,120,197,120,130,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,
0,0,146,23,0,0,0,250,0,0,1,0,156,0,48,1,56,9,120,10,92,13,10,15,32,28,0,34,20,52,
48,44,40,32,9,8,167,90,135,120,120,120,122,120,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,
222,182,120,54,0,191,188,40,60,182,64,250,23,8,0,0,6,0,1,0,184,0,96,1,112,3,192,8,144,11,
136,14,144,26,55,29,19,40,45,31,28,21,14,6,162,135,150,120,120,120,162,120,165,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,184,0,96,1,192,3,
192,8,144,11,136,14,144,26,20,59,27,58,65,51,48,34,20,8,162,135,150,120,120,120,162,120,165,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,33,0,179,0,
80,1,232,3,96,9,48,12,6,15,177,26,60,66,29,65,56,52,54,36,22,9,166,133,148,122,124,129,162,120,
165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,
33,0,164,0,56,1,148,7,36,9,148,12,57,16,2,27,79,49,22,58,32,48,52,26,19,8,176,129,143,129,
137,151,162,120,165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,
64,250,23,8,1,0,148,0,16,1,152,8,200,10,188,12,128,17,88,27,84,37,16,52,36,40,48,16,16,8,
187,125,137,137,150,175,187,125,137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,
77,60,59,182,64,250,23,8,1,0,160,0,40,1,199,8,28,12,132,13,8,17,88,27,0,36,16,52,36,36,
40,16,12,8,187,125,137,137,150,175,187,125,137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,
0,0,0,0,146,23,0,0,0,250,0,0,40,0,6,0,1,0,140,0,232,1,196,4,36,9,128,12,41,14,
32,27,40,51,30,65,61,55,44,43,21,7,170,135,165,120,120,120,140,120,150,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,140,0,240,1,196,4,36,9,
128,12,41,14,32,27,45,65,34,73,69,62,50,49,24,8,170,135,165,120,120,120,140,120,150,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,158,0,8,2,
80,5,16,9,188,12,148,14,0,28,50,59,34,72,64,59,53,42,18,9,172,128,153,127,132,143,140,120,150,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,
184,0,192,1,84,6,56,9,208,12,40,15,51,29,45,55,27,68,51,51,51,30,10,10,175,120,137,137,150,175,
175,120,137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,
23,8,1,0,153,0,96,1,148,7,196,9,92,13,80,15,88,27,15,31,28,40,40,36,44,12,9,8,187,125,
137,137,150,175,187,125,137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,
59,182,64,250,23,8,1,0,153,0,40,1,228,7,96,9,112,13,80,15,88,27,0,26,28,32,28,28,24,8,
9,8,187,125,137,137,150,175,187,125,137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,
0,0,146,23,0,0,0,250,0,0,0,0,5,0,1,0,188,0,40,1,228,7,136,9,52,13,8,17,88,27,
40,36,9,54,51,42,39,12,12,7,187,125,137,137,150,175,187,125,137,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,188,0,40,1,188,7,176,9,12,13,
188,17,88,27,65,55,11,68,64,53,49,15,15,9,187,125,137,137,150,175,187,125,137,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,154,0,96,1,244,6,
156,9,208,12,244,16,88,27,50,52,15,66,57,49,49,22,17,8,178,137,161,129,135,148,187,125,162,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,116,0,
160,1,84,6,96,9,188,12,164,16,88,27,40,33,23,48,51,34,37,25,15,6,167,150,135,120,120,120,197,120,
120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,
1,0,116,0,224,1,44,6,116,9,12,13,224,16,88,27,0,30,24,48,50,34,34,21,13,5,167,150,135,120,
120,120,197,120,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,
64,250,23,8,190,0,5,0,1,0,0,1,88,2,36,4,80,10,28,12,36,14,15,28,50,34,28,41,62,28,
36,23,5,5,186,151,122,120,120,120,105,164,135,44,45,70,130,59,160,0,0,0,40,0,0,0,0,50,124,182,
40,53,0,191,197,24,223,182,176,250,125,182,3,0,0,1,88,2,36,4,80,10,28,12,36,14,15,28,50,69,
39,64,82,39,50,32,8,7,186,151,122,120,120,120,105,164,135,44,45,70,130,59,160,0,0,0,40,0,0,0,
0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,0,1,88,2,36,4,80,10,28,12,36,14,
15,28,50,69,39,64,82,39,50,32,8,7,186,151,122,120,120,120,105,164,135,44,45,70,130,59,170,0,0,0,
40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,0,1,88,2,36,4,80,10,
28,12,36,14,15,28,40,50,33,55,70,33,42,27,6,6,186,151,122,120,120,120,105,164,135,44,45,70,130,59,
170,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,1,0,0,1,88,2,
36,4,80,10,28,12,36,14,15,28,0,24,23,38,49,23,30,19,4,4,186,151,122,120,120,120,105,164,135,44,
45,70,130,59,170,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,64,250,23,8,200,0,
4,0,1,0,184,0,200,1,168,7,216,9,248,12,66,14,128,28,50,36,26,44,49,52,44,30,11,8,185,153,
127,120,120,120,185,200,127,44,45,70,130,59,160,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,
223,182,176,250,125,182,3,0,184,0,200,1,168,7,216,9,248,12,66,14,128,28,80,68,36,60,68,72,60,41,
15,11,185,153,127,120,120,120,185,200,127,44,45,70,130,59,165,0,0,0,40,0,0,0,0,0,0,0,24,53,
0,191,197,254,124,182,1,250,0,0,1,0,184,0,200,1,168,7,216,9,248,12,66,14,128,28,70,55,34,52,
62,66,55,38,13,10,185,153,127,120,120,120,185,200,127,44,45,70,130,59,175,0,0,0,40,0,0,0,0,250,
222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,184,0,200,1,168,7,216,9,248,12,66,14,128,28,
0,23,25,32,37,37,32,25,9,7,185,153,127,120,120,120,185,200,127,44,45,70,130,59,175,0,0,0,40,0,
0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,200,0,5,0,1,0,184,0,136,1,188,2,
160,10,88,12,176,14,159,27,50,37,28,41,51,23,33,18,9,5,177,100,131,120,120,120,105,135,135,44,45,70,
130,60,155,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,184,0,
136,1,188,2,160,10,88,12,176,14,159,27,50,72,39,57,72,32,45,25,13,7,177,100,131,120,120,120,105,135,
135,44,45,70,130,60,155,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,
1,0,184,0,136,1,188,2,160,10,88,12,176,14,159,27,50,72,39,57,72,32,45,25,13,7,177,100,131,120,
120,120,105,135,135,44,45,70,130,60,160,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,
1,250,0,0,1,0,184,0,136,1,188,2,160,10,88,12,176,14,159,27,50,52,33,48,61,27,39,21,11,6,
177,100,131,120,120,120,105,135,135,44,45,70,130,60,160,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,
188,40,60,182,64,250,23,8,1,0,176,0,136,1,188,2,160,10,88,12,176,14,159,27,0,34,31,45,41,20,
33,18,9,5,177,100,131,120,120,120,105,135,135,44,45,70,130,60,160,0,0,0,40,0,0,0,0,40,60,182,
40,54,0,191,77,60,59,182,64,250,23,8,83,9,26,0,255,7,255,250,3,1,3,248,252,4,19,15,0,254,
1,6,0,251,254,255,255,4,242,243,0,1,7,10,3,1,9,6,248,255,23,0,235,0,253,229,4,22,255,0,
21,16,0,0,255,245,4,6,255,233,237,5,248,246,17,29,10,247,6,11,4,241,255,251,243,13,245,223,0,34,
8,13,7,246,255,242,17,12,243,7,254,230,254,24,4,244,250,243,233,254,27,7,230,254,26,22,233,0,24,0,
243,250,253,243,248,232,243,4,34,53,237,242,14,255,7,252,6,243,233,1,15,229,2,51,249,250,248,21,33,246,
243,232,2,16,255,243,15,29,252,250,238,27,27,13,2,239,12,15,249,253,7,1,14,255,243,2,248,255,14,0,
7,255,246,245,251,6,11,252,238,243,233,252,26,255,249,0,4,8,250,255,254,252,246,251,244,244,1,0,244,6,
12,8,8,249,4,253,252,2,242,244,1,4,255,0,2,4,7,7,13,2,252,251,2,255,249,0,6,2,246,7,
8,8,16,252,252,1,4,3,243,252,1,0,7,10,253,5,9,6,6,3,250,0,6,4,249,255,9,244,4,4,
1,4,8,8,250,252,8,5,14,246,250,4,253,1,248,254,241,0,254,0,252,244,13,0,250,15,20,255,2,18,
247,232,249,9,2,248,242,237,0,1,7,19,18,10,4,254,238,18,20,237,245,245,242,242,249,250,250,19,9,249,
6,13,17,3,14,24,5,7,243,245,2,0,7,238,236,243,244,252,8,4,246,12,16,18,254,11,8,6,1,241,
248,247,2,247,247,231,4,11,9,5,251,14,254,255,6,248,6,16,4,245,241,11,19,11,2,239,249,6,2,245,
250,253,234,7,13,20,4,13,18,3,11,250,249,246,239,240,239,250,243,249,6,5,24,20,25,253,1,254,251,2,
250,242,236,250,254,18,13,2,0,11,31,0,255,8,247,249,252,249,252,0,246,253,3,9,5,11,10,245,4,11,
3,1,7,249,253,242,253,254,245,6,250,251,6,9,6,9,10,8,4,254,241,247,255,251,242,245,249,248,24,6,
6,14,8,12,247,237,239,11,250,239,250,251,11,20,18,5,24,19,253,249,237,241,248,248,236,237,254,6,21,23,
15,18,18,3,248,1,246,247,252,232,243,1,11,2,0,252,6,10,0,2,10,1,250,249,245,5,12,20,255,0,
247,247,5,10,16,247,250,12,249,6,20,6,14,241,6,1,250,0,237,250,4,253,0,15,12,21,11,4,247,248,
1,242,234,231,1,244,238,7,255,20,24,8,8,252,11,241,2,249,245,253,248,255,0,23,251,6,20,253,7,247,
250,255,2,9,247,239,254,249,0,247,0,1,246,3,0,0,11,11,3,254,0,245,255,6,249,238,1,1,249,19,
25,10,18,7,245,1,9,4,238,251,1,238,7,0,9,2,9,33,14,236,6,8,241,244,234,241,237,6,253,238,
12,52,10,3,15,1,4,239,228,230,224,13,228,230,9,34,44,28,28,25,29,10,253,247,245,242,226,241,238,244,
36,0,252,22,3,35,15,2,0,3,9,246,231,241,10,246,250,13,240,246,253,14,22,19,39,11,235,1,253,230,
243,236,228,219,239,6,240,0,14,20,245,5,38,11,228,2,24,243,243,250,196,243,18,250,6,243,46,4,44,250,
4,27,3,13,203,252,245,247,238,232,29,255,27,9,32,16,228,33,245,241,253,255,244,250,19,241,255,4,7,22,
24,12,206,234,33,230,246,250,10,21,6,27,14,20,15,239,15,233,242,7,238,254,249,3,9,21,6,11,252,6,
12,243,6,221,236,9,2,0,249,245,255,25,19,255,250,20,246,251,253,233,8,2,9,248,251,30,22,16,3,254,
9,255,240,235,242,230,247,17,251,250,5,3,253,8,20,3,0,6,238,236,253,2,5,249,239,254,18,0,240,241,
15,18,250,1,9,12,6,246,0,248,1,4,244,236,251,253,7,0,253,0,5,30,13,232,250,18,0,2,9,249,
243,11,5,252,11,13,255,0,249,227,254,19,2,241,1,24,27,35,0,249,11,4,0,240,249,247,249,0,246,5,
18,22,14,5,4,0,12,2,246,0,253,251,254,250,246,249,3,1,250,252,252,7,5,254,235,240,254,251,230,241,
239,246,237,246,255,10,7,255,254,251,9,0,17,6,5,13,252,3,17,13,24,13,21,14,11,12,6,7,7,3,
252,248,236,247,0,252,253,252,4,1,254,255,2,252,248,241,245,251,251,7,0,0,14,5,12,15,16,9,18,8,
244,8,7,254,4,5,1,0,0,10,8,251,251,5,250,243,0,9,245,245,247,235,241,8,253,242,12,3,244,246,
0,250,14,7,253,248,248,243,244,237,240,247,254,5,8,253,8,24,21,252,0,1,236,241,242,241,1,8,248,12,
23,8,35,15,0,9,14,250,244,10,230,218,250,10,249,3,17,247,43,13,243,29,8,2,216,0,251,246,18,250,
26,1,44,29,34,13,239,252,235,19,239,15,19,9,25,4,38,230,245,36,234,214,209,223,2,255,252,23,35,9,
240,251,3,0,9,194,229,226,213,22,244,0,6,46,11,15,55,8,18,252,245,219,244,251,201,250,247,244,32,26,
11,2,37,6,249,1,210,233,234,221,1,8,249,249,36,253,31,13,247,26,237,235,253,3,252,240,247,32,16,24,
11,1,14,9,245,1,236,223,4,246,0,14,45,22,33,27,233,18,12,219,234,223,231,13,17,223,11,46,25,2,
34,41,163,34,242,189,0,253,250,210,255,48,10,15,64,250,220,58,229,229,19,240,247,1,219,220,24,46,240,2,
23,26,3,238,11,244,33,14,240,249,226,217,8,2,3,23,247,33,233,250,50,9,1,3,249,226,236,7,230,235,
14,41,250,7,39,223,254,27,21,251,22,211,250,233,233,18,227,0,16,254,0,31,20,250,10,34,233,227,243,5,
219,22,12,202,17,38,247,13,29,231,255,19,227,200,249,55,243,1,12,7,8,17,251,208,255,29,244,251,251,2,
249,3,33,240,4,18,235,219,7,247,244,41,19,0,255,34,251,18,27,245,244,14,218,244,249,6,233,21,10,238,
17,17,3,243,30,11,1,246,245,234,255,246,231,6,6,253,245,27,18,9,44,13,249,36,19,228,11,249,223,245,
14,5,14,11,252,237,9,14,253,13,253,244,249,246,228,250,7,3,251,236,236,242,242,255,5,246,1,11,5,0,
10,18,15,253,231,238,248,11,19,0,1,12,21,19,14,20,3,3,1,235,231,243,242,238,248,239,248,15,19,2,
9,9,253,254,248,246,247,3,0,252,5,7,4,13,10,13,8,0,251,248,0,254,255,255,3,18,16,0,0,11,
9,254,239,246,253,255,254,247,0,9,14,6,0,5,19,25,6,249,251,250,250,255,255,255,3,253,255,254,246,249,
255,12,0,251,2,1,3,7,4,0,0,12,2,246,239,246,7,0,0,11,3,246,246,253,9,11,252,249,255,248,
242,238,247,240,245,4,249,242,253,3,12,23,25,10,17,24,0,246,255,1,254,254,246,236,0,9,9,15,11,6,
17,25,7,245,248,255,3,243,241,238,238,1,248,236,245,6,32,34,253,252,2,14,20,0,6,0,248,241,226,223,
252,41,39,251,252,3,10,8,23,26,6,0,232,215,9,26,11,229,214,4,233,241,10,253,18,26,241,2,17,2,
20,0,250,217,233,26,221,213,5,5,42,8,238,35,13,21,28,249,252,29,10,242,233,32,3,237,6,254,0,232,
249,220,4,38,13,6,250,27,10,218,51,52,219,254,227,133,235,27,239,244,15,232,7,57,31,1,49,52,213,229,
205,227,30,239,229,233,14,23,247,4,28,36,5,2,226,209,0,251,16,33,6,8,12,59,11,22,3,212,221,240,
217,199,14,238,231,41,4,34,80,53,13,35,233,232,254,223,218,250,217,248,32,226,17,22,46,34,26,25,237,240,
1,232,222,21,219,223,28,4,11,245,8,46,243,7,246,1,255,228,243,243,0,17,17,7,26,248,0,20,14,245,
221,16,1,219,0,12,242,252,49,32,235,232,10,210,2,226,208,0,9,5,214,31,42,13,51,22,0,12,246,226,
244,0,241,253,243,4,0,32,28,19,32,26,249,236,229,2,252,248,240,230,249,242,5,246,2,5,248,1,238,236,
245,246,6,19,19,5,7,17,0,1,24,14,7,3,10,232,253,12,11,251,248,9,253,12,12,0,245,248,15,8,
10,1,0,0,240,242,239,248,13,10,224,228,4,29,17,4,248,9,24,15,250,242,1,16,4,235,238,6,1,252,
250,3,14,17,252,252,7,5,247,252,10,246,251,246,250,8,239,248,252,5,6,27,19,251,240,0,11,15,9,237,
251,252,242,250,252,2,10,10,0,252,238,3,23,1,0,255,255,0,11,255,238,1,4,243,252,3,245,239,12,12,
7,3,6,21,17,1,252,249,4,0,247,236,243,245,249,1,9,13,16,13,13,14,0,243,251,253,246,247,238,243,
0,10,21,21,19,21,9,0,243,242,247,229,244,0,245,254,0,12,28,21,8,6,0,250,247,242,244,0,251,246,
2,4,5,17,21,10,9,2,248,247,250,251,247,252,254,251,10,7,0,6,8,7,254,249,251,252,245,254,4,251,
1,2,250,4,13,2,252,254,2,9,3,253,0,7,9,0,255,250,249,248,246,253,5,2,14,17,7,5,7,8,
7,0,243,240,238,238,254,0,0,7,24,22,9,253,248,254,254,248,249,249,248,247,0,4,7,18,10,0,14,3,
243,235,237,249,254,5,8,2,12,14,11,16,13,0,3,253,246,239,245,10,3,1,9,6,248,255,14,0,253,255,
249,238,244,241,243,3,6,8,7,6,10,9,0,3,10,254,253,254,248,251,255,255,3,11,5,249,18,24,9,1,
0,3,0,254,248,241,240,237,248,249,238,249,6,12,10,9,6,13,11,1,251,253,253,237,238,245,245,247,255,13,
19,8,13,23,19,15,12,254,250,250,247,243,247,251,0,0,8,11,246,246,15,19,244,252,15,248,242,250,4,249,
3,3,241,0,0,252,250,253,7,5,6,4,15,15,5,0,2,14,17,3,252,254,3,5,9,10,0,3,249,247,
0,246,249,251,235,253,9,3,7,11,8,8,1,249,0,12,250,231,242,6,4,240,242,18,34,23,14,10,7,3,
1,1,243,252,249,242,245,235,245,9,4,247,253,253,2,3,250,248,245,248,254,249,251,4,8,2,254,5,13,12,
12,6,252,0,4,251,241,238,249,254,245,235,249,1,252,253,1,8,15,17,1,250,1,5,8,248,232,0,15,253,
245,252,13,26,13,15,17,8,15,2,249,246,8,21,13,22,10,255,255,9,6,9,18,2,244,241,0,6,255,17,
26,14,7,0,140,0,4,0,1,0,0,1,133,2,169,6,216,9,192,13,185,15,32,29,50,47,31,55,66,49,
36,28,9,7,217,150,180,120,120,120,217,180,150,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,
40,53,0,191,197,24,223,182,176,250,125,182,3,0,0,1,133,2,169,6,216,9,192,13,185,15,32,29,50,90,
43,76,91,68,51,39,13,7,217,150,180,120,120,120,217,180,150,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,0,1,133,2,169,6,216,9,192,13,185,15,
32,29,40,68,37,66,79,59,45,34,11,6,217,150,180,120,120,120,217,180,150,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,0,1,133,2,169,6,216,9,
192,13,185,15,32,29,0,49,31,56,68,51,38,28,9,9,217,150,180,120,120,120,217,180,150,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,175,0,4,0,1,0,
104,0,104,1,72,8,120,10,52,13,40,15,96,25,45,49,25,74,48,46,48,28,11,5,160,95,120,167,120,120,
130,95,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,
125,182,3,0,104,0,104,1,72,8,120,10,52,13,40,15,96,25,70,100,36,105,69,65,68,40,16,7,160,95,
120,167,120,120,130,95,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,
124,182,1,250,0,0,1,0,104,0,104,1,72,8,120,10,52,13,40,15,96,25,60,80,32,94,62,58,61,35,
14,6,160,95,120,167,120,120,130,95,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,
0,182,8,0,0,0,1,250,0,0,1,0,104,0,104,1,72,8,100,10,72,13,40,15,96,25,0,40,23,66,
43,41,43,25,10,4,160,95,120,167,120,120,130,95,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,
222,182,0,0,0,0,188,40,60,182,64,250,23,8,185,0,4,0,1,0,148,0,48,1,238,7,60,10,42,13,
50,15,96,25,45,37,15,54,57,51,48,33,13,6,160,111,120,143,120,120,130,111,120,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,148,0,48,1,238,7,
60,10,42,13,50,15,96,25,75,65,20,72,76,68,64,44,18,8,160,111,120,143,120,120,130,111,120,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,148,0,
40,1,12,8,92,10,42,13,50,15,96,25,65,48,17,61,64,57,54,37,15,7,160,111,120,143,120,120,130,111,
120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,
1,0,148,0,40,1,32,8,140,10,42,13,50,15,96,25,0,24,12,43,46,41,39,27,11,5,160,111,120,143,
120,120,130,111,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,
64,250,23,8,105,0,5,0,1,0,144,0,176,1,32,3,20,10,148,12,120,15,88,27,45,42,22,48,58,37,
34,19,13,6,165,126,145,120,120,120,165,115,130,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,
40,53,0,191,197,24,223,182,176,250,125,182,3,0,144,0,168,1,32,3,20,10,148,12,120,15,88,27,60,80,
28,70,77,46,43,24,17,7,165,126,145,120,120,120,165,115,130,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,144,0,168,1,32,3,20,10,148,12,120,15,
88,27,40,71,26,66,72,43,40,23,16,7,165,126,145,120,120,120,165,115,130,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,136,0,160,1,22,3,30,10,
148,12,120,15,88,27,40,49,22,55,60,36,33,19,13,6,165,126,145,120,120,120,165,115,130,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,1,0,128,0,152,1,
12,3,40,10,148,12,120,15,88,27,0,43,20,51,56,34,31,18,12,5,165,126,145,120,120,120,165,115,130,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,64,250,23,8,40,0,
5,0,1,0,176,0,168,1,88,7,216,9,32,13,60,15,96,25,45,103,44,108,68,68,75,44,18,8,160,90,
120,120,120,120,130,90,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,
223,182,176,250,125,182,3,0,177,0,149,1,254,6,138,9,240,12,24,15,141,25,44,91,42,98,65,63,69,40,
18,8,160,93,125,120,120,120,130,90,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,
0,191,197,254,124,182,1,250,0,0,1,0,180,0,104,1,44,6,212,8,128,12,196,14,248,25,71,72,40,76,
60,52,55,32,19,8,161,101,138,120,120,120,130,101,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,
222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,184,0,88,1,56,4,152,8,104,11,136,14,144,26,
40,45,36,44,52,36,36,20,20,8,162,135,157,120,120,120,162,120,157,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,1,0,184,0,88,1,56,4,152,8,104,11,
136,14,144,26,0,35,31,38,45,31,31,17,17,7,162,135,157,120,120,120,162,120,157,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,64,250,23,8,75,0,6,0,1,0,184,0,
96,1,192,3,36,9,224,11,136,14,144,26,50,46,20,55,58,40,35,26,14,7,162,127,157,120,120,120,162,127,
157,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,
3,0,184,0,96,1,192,3,36,9,224,11,136,14,144,26,50,63,23,64,68,47,40,30,17,8,162,127,157,120,
120,120,162,127,157,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,
1,250,0,0,1,0,183,0,96,1,11,4,46,9,241,11,137,14,166,26,50,53,23,59,61,45,39,29,16,8,
162,126,164,120,120,120,162,127,157,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,
8,0,0,0,1,250,0,0,1,0,174,0,97,1,182,5,108,9,83,12,147,14,38,27,50,36,24,48,39,45,
40,28,14,7,164,118,201,120,120,120,162,120,200,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,
0,0,0,0,188,40,60,182,64,250,23,8,1,0,168,0,91,1,240,6,229,9,206,12,153,14,143,27,25,26,
22,42,33,36,33,22,10,6,165,106,186,120,120,120,162,120,172,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,40,60,182,40,54,0,191,77,60,59,182,64,250,23,8,1,0,164,0,87,1,119,7,26,10,3,13,157,14,
189,27,0,23,21,40,33,32,27,20,6,6,166,101,183,120,120,120,162,120,165,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,0,0,0,0,0,0,0,146,23,0,0,0,250,0,0,140,0,4,0,1,0,56,1,73,3,
129,5,246,9,86,13,211,14,92,28,50,26,22,47,48,30,24,17,7,3,211,144,124,120,120,120,237,165,165,44,
45,70,130,57,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,
56,1,73,3,129,5,246,9,86,13,211,14,92,28,25,85,40,85,86,54,43,30,12,6,211,144,124,120,120,120,
237,165,165,44,45,70,130,57,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,
0,0,1,0,56,1,73,3,129,5,246,9,86,13,211,14,92,28,65,85,40,85,86,54,43,30,12,6,211,144,
124,120,120,120,237,165,165,44,45,70,130,57,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,
0,0,1,250,0,0,1,0,56,1,73,3,129,5,246,9,86,13,211,14,92,28,0,27,23,48,49,30,24,17,
7,3,211,144,124,120,120,120,237,165,165,44,45,70,130,56,0,0,0,0,40,0,0,0,0,250,222,182,0,0,
0,0,188,40,60,182,64,250,23,8,235,0,6,0,1,0,176,0,72,2,120,5,156,9,188,12,116,14,88,27,
45,49,33,60,69,41,39,33,17,6,167,135,135,120,120,120,197,135,120,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,176,0,72,2,120,5,156,9,188,12,
116,14,88,27,60,76,41,75,87,51,49,41,21,8,167,135,135,120,120,120,197,135,120,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,176,0,72,2,100,5,
156,9,188,12,116,14,88,27,40,61,37,67,78,46,44,37,19,7,167,135,135,120,120,120,197,135,120,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,176,0,
184,1,66,4,106,9,228,12,216,14,244,26,40,53,20,68,59,32,32,33,15,7,172,130,122,120,120,120,197,135,
120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,
1,0,176,0,92,1,32,3,246,8,172,12,8,15,65,27,50,47,10,68,42,22,20,26,11,8,170,123,106,120,
120,120,177,125,125,44,45,70,130,59,0,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,
64,250,23,8,1,0,176,0,92,1,32,3,246,8,172,12,8,15,65,27,0,32,8,57,35,18,17,22,9,6,
170,123,106,120,120,120,177,125,125,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,
146,23,0,0,0,250,0,0,215,0,6,0,1,0,176,0,64,1,92,3,56,9,12,13,60,15,144,26,45,44,
6,70,36,21,21,30,12,7,177,125,102,120,120,120,177,125,117,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,176,0,64,1,92,3,56,9,12,13,60,15,
144,26,30,68,7,87,45,26,26,38,15,9,177,125,102,120,120,120,177,125,117,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,176,0,64,1,92,3,56,9,
12,13,60,15,144,26,50,61,7,83,43,25,25,36,14,9,177,125,102,120,120,120,177,125,117,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,146,0,166,1,
126,4,46,9,228,12,216,14,248,26,50,47,16,68,52,30,30,32,14,8,172,137,118,120,120,120,177,125,117,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,1,0,
125,0,240,1,78,5,39,9,200,12,145,14,66,27,40,32,21,51,55,31,32,27,13,7,169,146,130,120,120,120,
177,125,117,44,45,70,130,59,0,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,64,250,
23,8,1,0,122,0,8,2,102,5,38,9,196,12,136,14,75,27,0,31,22,50,55,31,32,26,13,7,168,147,
131,120,120,120,177,125,117,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,146,23,
0,0,0,250,0,0,100,0,5,0,1,0,32,1,32,3,236,4,160,10,172,13,180,15,32,28,50,46,32,56,
66,39,32,22,9,4,162,155,135,120,120,120,192,155,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,
124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,32,1,32,3,216,4,160,10,172,13,180,15,32,28,
50,91,44,82,88,54,44,30,13,6,162,155,135,120,120,120,192,155,135,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,32,1,32,3,0,5,160,10,172,13,
180,15,32,28,50,87,44,82,88,54,44,30,13,6,162,155,135,120,120,120,192,155,135,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,32,1,13,3,0,5,
120,10,52,13,120,15,32,28,50,68,39,69,82,48,39,27,12,6,162,155,135,120,120,120,192,155,135,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,1,0,32,1,
13,3,0,5,120,10,52,13,120,15,32,28,0,35,28,50,59,35,28,19,8,4,162,155,135,120,120,120,192,155,
135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,64,250,23,8,
160,0,4,0,1,0,149,0,24,1,207,8,214,11,112,13,134,16,42,27,50,44,7,62,51,47,51,23,16,8,
182,120,133,133,142,161,187,125,137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,
197,24,223,182,176,250,125,182,3,0,149,0,24,1,207,8,214,11,112,13,134,16,42,27,60,56,8,70,58,53,
58,26,18,9,182,120,133,133,142,161,187,125,137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,
24,53,0,191,197,254,124,182,1,250,0,0,1,0,149,0,8,1,207,8,214,11,112,13,134,16,42,27,50,49,
14,62,47,46,49,21,16,8,182,120,133,133,142,161,187,125,137,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,149,0,8,1,207,8,214,11,112,13,134,16,
42,27,0,45,14,59,45,44,47,20,15,7,182,120,133,133,142,161,187,125,137,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,125,0,6,0,1,0,14,1,8,3,
176,4,200,10,2,13,238,14,192,27,45,42,24,56,63,36,30,25,9,4,165,148,135,120,120,120,167,142,135,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,
14,1,8,3,176,4,200,10,2,13,238,14,192,27,40,92,36,82,93,53,44,37,13,6,165,148,135,120,120,120,
167,142,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,
0,0,1,0,14,1,8,3,176,4,200,10,2,13,238,14,192,27,35,75,32,74,84,48,39,33,12,6,165,148,
135,120,120,120,167,142,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,
0,0,1,250,0,0,1,0,245,0,150,2,86,4,144,10,229,12,209,14,107,27,80,62,28,69,70,43,36,31,
13,6,164,144,140,120,120,120,167,142,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,
0,0,188,40,60,182,64,250,23,8,1,0,186,0,137,1,132,3,13,10,159,12,139,14,164,26,40,48,21,61,
38,31,28,28,17,7,163,134,154,120,120,120,167,142,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,40,
60,182,40,54,0,191,77,60,59,182,64,250,23,8,1,0,184,0,112,1,132,3,236,9,148,12,136,14,144,26,
0,32,18,50,30,25,23,23,14,6,162,133,155,120,120,120,162,127,165,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,0,0,0,0,0,0,0,146,23,0,0,0,250,0,0,230,0,5,0,1,0,72,1,136,3,40,5,
180,10,112,13,191,14,32,28,45,45,30,64,55,34,30,19,9,4,207,150,105,120,120,120,237,165,165,44,65,70,
130,54,0,0,0,0,50,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,72,1,
136,3,40,5,180,10,112,13,191,14,32,28,70,103,45,97,83,52,45,28,13,6,207,150,105,120,120,120,237,165,
165,44,65,70,130,54,0,0,0,0,50,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,
1,0,55,1,100,3,140,5,160,10,116,13,189,14,32,28,70,80,40,88,78,48,40,26,12,6,203,144,114,120,
120,120,237,165,165,44,60,70,130,54,0,0,0,0,50,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,
1,250,0,0,1,0,156,0,88,1,152,8,140,10,152,13,166,14,32,28,45,40,27,54,49,58,45,32,9,7,
167,90,195,120,120,120,122,120,135,44,45,70,130,56,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,
188,40,60,182,64,250,23,8,1,0,156,0,88,1,174,8,160,10,92,13,10,15,32,28,0,25,22,44,45,41,
37,30,8,7,167,90,135,120,120,120,122,120,120,44,45,70,130,56,0,0,0,0,40,0,0,0,0,40,60,182,
40,54,0,191,77,60,59,182,64,250,23,8,200,0,4,0,1,0,160,0,232,1,198,7,236,9,12,13,101,14,
128,28,50,37,26,54,56,55,44,32,11,6,185,112,127,120,120,120,185,117,127,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,160,0,232,1,198,7,236,9,
12,13,101,14,128,28,80,57,32,66,69,68,54,40,13,8,185,112,127,120,120,120,185,117,127,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,160,0,232,1,
198,7,236,9,12,13,101,14,128,28,70,59,33,68,70,69,55,41,13,8,185,112,127,120,120,120,185,117,127,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,
160,0,232,1,198,7,236,9,12,13,101,14,128,28,0,27,22,45,47,47,37,27,9,5,185,112,127,120,120,120,
185,117,127,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,
23,8,60,0,4,0,1,0,130,0,49,1,164,6,36,9,228,12,99,14,151,25,45,35,18,54,40,32,35,31,
9,10,167,96,135,120,120,120,197,120,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,
0,191,197,24,223,182,176,250,125,182,3,0,130,0,49,1,164,6,36,9,228,12,99,14,151,25,60,68,25,76,
56,45,48,43,13,15,167,96,135,120,120,120,197,120,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,
0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,130,0,49,1,164,6,36,9,228,12,99,14,151,25,
60,55,23,68,50,40,44,39,11,13,167,96,135,120,120,120,197,120,120,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,130,0,49,1,164,6,36,9,228,12,
99,14,151,25,0,44,20,61,45,36,39,35,10,12,167,96,135,120,120,120,197,120,120,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,55,0,2,0,5,0,76,0,
104,1,8,7,124,11,172,13,160,15,32,29,55,17,9,45,22,18,34,20,8,0,155,135,97,120,120,120,95,105,
97,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,
5,0,76,0,104,1,8,7,124,11,172,13,160,15,32,29,0,12,7,38,23,15,28,16,7,0,150,135,97,120,
120,120,90,105,97,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,
1,250,0,0,18,0,2,0,5,0,180,0,29,1,185,8,200,10,32,13,116,14,0,29,18,14,3,39,18,28,
36,20,6,0,120,105,150,120,120,120,45,135,90,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,
40,53,0,191,197,24,223,182,176,250,125,182,1,0,180,0,29,1,185,8,200,10,32,13,116,14,0,29,0,26,
4,52,24,38,48,27,8,0,120,105,150,120,120,120,45,135,90,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,245,0,6,0,1,0,149,0,24,1,207,8,214,11,
112,13,134,16,42,27,45,48,8,65,54,50,54,25,16,8,182,120,133,133,142,161,187,125,137,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,149,0,24,1,
207,8,214,11,112,13,134,16,42,27,100,60,9,73,61,56,61,28,18,9,182,120,133,133,142,161,187,125,137,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,
156,0,67,1,137,8,108,11,112,13,68,16,46,27,30,50,12,67,55,52,52,26,15,8,179,114,136,130,138,153,
187,125,137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,
0,0,1,0,184,0,239,1,111,7,196,9,112,13,60,15,64,27,35,41,27,67,53,52,39,27,12,7,167,90,
150,120,120,120,167,90,165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,
60,182,64,250,23,8,1,0,152,0,72,2,124,6,136,9,32,13,85,15,64,28,35,26,28,44,46,48,38,21,
7,8,167,150,120,120,120,120,167,105,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,40,60,182,40,54,
0,191,77,60,59,182,64,250,23,8,1,0,200,0,88,2,240,5,136,9,112,13,29,16,192,28,0,23,28,42,
38,38,30,16,5,8,167,150,120,120,120,120,167,105,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,
0,0,0,0,0,0,146,23,0,0,0,250,0,0,150,0,5,0,1,0,184,0,132,1,172,3,116,9,224,11,
136,14,144,26,50,51,26,61,52,32,29,20,14,7,162,127,150,120,120,120,162,127,165,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,184,0,132,1,172,3,
116,9,224,11,136,14,144,26,60,78,32,75,64,39,36,25,18,9,162,127,150,120,120,120,162,127,165,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,184,0,
132,1,172,3,116,9,224,11,136,14,144,26,40,67,30,71,57,37,33,23,16,8,162,127,150,120,120,120,162,127,
165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,
1,0,128,0,32,2,156,4,252,8,68,12,136,14,96,27,40,34,29,53,50,34,31,29,15,5,167,135,135,120,
120,120,197,135,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,
64,250,23,8,1,0,128,0,32,2,156,4,252,8,68,12,136,14,96,27,0,34,29,53,50,34,31,29,15,5,
167,135,135,120,120,120,197,135,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,
77,60,59,182,64,250,23,8,190,0,5,0,1,0,0,1,112,2,192,3,64,11,48,12,36,14,15,28,50,34,
23,44,44,18,36,20,5,5,186,175,135,120,120,120,105,185,148,44,45,70,130,59,160,0,0,0,40,0,0,0,
0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,0,1,112,2,192,3,64,11,48,12,36,14,
15,28,50,66,32,61,61,25,50,28,8,7,186,175,135,120,120,120,105,185,148,44,45,70,130,59,160,0,0,0,
40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,0,1,112,2,192,3,64,11,
48,12,36,14,15,28,50,66,32,61,61,25,50,28,8,7,186,175,135,120,120,120,105,185,148,44,45,70,130,59,
175,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,0,1,112,2,
192,3,64,11,48,12,36,14,15,28,40,47,27,52,52,21,42,24,6,6,186,175,135,120,120,120,105,185,148,44,
45,70,130,59,175,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,1,0,
0,1,112,2,192,3,64,11,48,12,36,14,15,28,0,20,18,34,34,14,28,16,4,4,186,175,135,120,120,120,
105,185,148,44,45,70,130,59,175,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,64,250,
23,8,255,0,0,3,0,0,0,0,0,127,0,114,0,0,0,0,245,0,5,0,1,0,244,0,35,2,63,7,
232,9,38,13,144,14,176,28,45,32,26,49,47,49,41,30,9,6,202,118,143,120,120,120,135,180,150,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,244,0,
35,2,63,7,232,9,38,13,144,14,176,28,80,71,38,72,72,76,63,46,14,10,202,118,143,120,120,120,135,180,
150,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,
1,0,244,0,35,2,63,7,232,9,38,13,144,14,176,28,60,50,32,60,60,64,53,38,12,8,202,118,143,120,
120,120,135,180,150,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,
1,250,0,0,1,0,144,0,64,1,252,8,180,10,152,13,10,15,32,28,60,25,18,46,43,39,36,28,8,7,
167,90,135,120,120,120,122,120,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,
188,40,60,182,64,250,23,8,1,0,144,0,64,1,252,8,180,10,152,13,10,15,32,28,0,23,17,45,41,38,
35,27,8,7,167,90,135,120,120,120,122,120,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,40,60,182,
40,54,0,191,77,60,59,182,64,250,23,8,175,0,4,0,1,0,156,0,56,1,252,8,4,11,212,13,120,15,
144,27,45,40,11,59,53,52,45,28,11,7,176,106,143,120,120,120,185,107,167,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,156,0,56,1,252,8,4,11,
212,13,120,15,144,27,70,83,17,85,76,75,65,40,16,10,176,106,143,120,120,120,185,107,167,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,156,0,56,1,
252,8,4,11,212,13,120,15,144,27,60,67,15,76,69,67,58,36,15,9,176,106,143,120,120,120,185,107,167,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,
156,0,48,1,252,8,4,11,212,13,120,15,144,27,0,30,10,51,46,45,39,24,10,6,176,106,143,120,120,120,
185,107,167,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,
23,8,185,0,4,0,1,0,248,0,200,2,136,4,220,10,52,13,68,15,176,27,45,50,30,61,64,39,36,25,
7,5,165,130,155,120,120,120,167,130,165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,
0,191,197,24,223,182,176,250,125,182,3,0,248,0,200,2,136,4,220,10,52,13,68,15,176,27,60,96,42,85,
89,55,49,35,10,7,165,130,155,120,120,120,167,130,165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,
0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,248,0,192,2,136,4,220,10,52,13,68,15,176,27,
80,85,40,80,84,52,47,33,9,7,165,130,155,120,120,120,167,130,165,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,248,0,184,2,136,4,220,10,52,13,
68,15,176,27,0,48,30,60,63,39,35,25,7,5,165,130,155,120,120,120,167,130,165,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,100,0,4,0,1,0,176,0,
88,1,32,3,56,9,12,13,60,15,144,26,50,47,3,73,43,21,21,30,12,7,177,125,110,120,120,120,177,125,
125,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,
3,0,176,0,88,1,32,3,56,9,12,13,60,15,144,26,50,79,4,96,56,28,28,40,16,10,177,125,110,120,
120,120,177,125,125,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,
1,250,0,0,1,0,176,0,88,1,32,3,56,9,12,13,60,15,144,26,70,63,3,85,49,24,24,35,14,8,
177,125,110,120,120,120,177,125,125,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,
8,0,0,0,1,250,0,0,1,0,176,0,88,1,32,3,56,9,12,13,60,15,144,26,0,31,2,60,35,17,
17,25,10,6,177,125,110,120,120,120,177,125,125,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,
0,0,0,0,188,40,60,182,64,250,23,8,175,0,4,0,1,0,176,0,112,1,32,3,100,10,48,12,60,15,
144,26,45,55,12,64,58,30,27,24,15,7,162,127,150,120,120,120,162,127,165,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,176,0,112,1,32,3,100,10,
48,12,60,15,144,26,70,92,16,84,76,40,36,32,20,10,162,127,150,120,120,120,162,127,165,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,176,0,112,1,
32,3,100,10,48,12,60,15,144,26,60,75,14,75,68,36,32,28,18,9,162,127,150,120,120,120,162,127,165,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,
176,0,112,1,32,3,100,10,48,12,60,15,144,26,0,49,11,61,55,29,26,23,14,7,162,127,150,120,120,120,
162,127,165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,
23,8,0,0,6,0,1,0,250,0,176,2,40,4,246,10,188,12,92,14,87,27,45,60,24,58,73,41,37,34,
9,5,167,147,147,120,120,120,167,142,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,
0,191,197,24,223,182,176,250,125,182,3,0,250,0,176,2,40,4,246,10,188,12,92,14,87,27,30,103,32,76,
95,54,48,44,12,7,167,147,147,120,120,120,167,142,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,
0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,244,0,216,2,116,4,160,10,148,12,41,14,96,27,
35,85,32,68,98,49,41,41,16,8,167,142,135,120,120,120,167,142,135,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,246,0,200,2,120,5,216,9,132,13,
224,16,88,27,50,64,34,76,64,48,44,20,12,10,226,150,136,120,120,120,235,150,136,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,5,0,166,0,80,1,192,8,
229,10,132,13,94,15,138,27,70,50,16,60,60,57,50,30,13,8,181,110,142,120,120,120,235,150,136,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,64,250,23,8,1,0,156,0,
56,1,252,8,4,11,132,13,50,15,144,27,0,40,11,59,53,52,45,28,11,7,176,106,143,120,120,120,185,107,
167,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,146,23,0,0,0,250,0,0,
255,0,5,0,1,0,24,1,232,2,4,6,196,9,112,13,40,15,153,28,45,45,31,60,60,46,36,28,10,6,
215,138,143,120,120,120,237,165,165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,
197,24,223,182,176,250,125,182,3,0,24,1,232,2,4,6,196,9,112,13,40,15,153,28,75,88,44,84,84,64,
51,39,14,8,215,138,143,120,120,120,237,165,165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,
24,53,0,191,197,254,124,182,1,250,0,0,1,0,24,1,232,2,4,6,196,9,112,13,40,15,153,28,65,79,
41,79,79,60,48,37,13,8,215,138,143,120,120,120,237,165,165,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,156,0,80,1,192,8,140,10,152,13,166,14,
32,28,70,43,32,55,49,58,45,33,10,8,167,90,195,120,120,120,122,90,135,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,1,0,156,0,72,1,232,8,160,10,
92,13,10,15,32,28,0,30,28,45,45,41,38,30,8,8,167,90,135,120,120,120,122,120,120,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,64,250,23,8,250,0,5,0,1,0,
122,0,192,1,240,5,116,9,228,12,246,14,95,27,45,49,28,59,69,41,43,30,17,6,170,133,135,122,124,128,
197,131,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,
125,182,3,0,122,0,192,1,240,5,116,9,228,12,246,14,95,27,80,79,36,75,88,52,55,38,21,8,170,133,
135,122,124,128,197,131,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,
124,182,1,250,0,0,1,0,122,0,192,1,240,5,116,9,228,12,246,14,95,27,80,64,32,68,79,47,49,35,
19,7,170,133,135,122,124,128,197,131,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,
0,182,8,0,0,0,1,250,0,0,1,0,156,0,99,1,152,8,140,10,152,13,166,14,32,28,45,43,32,56,
49,59,46,33,10,8,167,90,195,120,120,120,122,120,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,
222,182,0,0,0,0,188,40,60,182,64,250,23,8,1,0,156,0,99,1,174,8,160,10,92,13,10,15,32,28,
0,27,28,44,44,40,37,29,8,7,167,90,135,120,120,120,122,120,120,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,40,60,182,40,54,0,191,77,60,59,182,64,250,23,8,210,0,5,0,1,0,172,0,64,1,228,2,
96,9,12,13,60,15,144,26,45,35,2,64,42,19,19,25,8,7,177,117,100,120,120,120,177,117,115,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,172,0,
64,1,228,2,96,9,12,13,60,15,144,26,75,74,4,92,64,28,28,36,12,10,177,117,100,120,120,120,177,117,
115,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,
1,0,170,0,60,1,122,3,166,9,24,13,106,15,164,26,30,52,4,79,39,26,27,30,11,8,178,118,103,121,
123,125,177,117,115,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,
1,250,0,0,9,0,148,0,16,1,199,8,28,12,132,13,8,17,88,27,60,35,15,49,34,38,45,15,15,7,
187,125,137,137,150,175,187,125,137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,
188,40,60,182,64,250,23,8,1,0,148,0,16,1,199,8,28,12,132,13,8,17,88,27,0,33,14,47,33,36,
44,14,14,7,187,125,137,137,150,175,187,125,137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,40,60,182,
40,54,0,191,77,60,59,182,64,250,23,8,75,0,5,0,1,0,132,0,24,1,184,6,16,9,228,12,96,14,
100,25,45,42,18,60,40,35,37,34,9,12,167,90,135,120,120,120,167,135,135,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,132,0,24,1,184,6,16,9,
228,12,96,14,100,25,75,78,25,82,56,47,51,47,12,17,167,90,135,120,120,120,167,135,135,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,133,0,27,1,
40,7,96,9,253,12,122,14,196,25,75,61,23,71,51,46,48,41,11,14,167,91,138,120,120,120,167,135,135,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,
136,0,38,1,187,8,180,10,86,13,215,14,33,27,45,49,21,60,52,55,50,32,12,9,169,96,152,120,120,120,
167,135,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,
23,8,1,0,137,0,40,1,232,8,220,10,97,13,226,14,72,27,0,38,20,55,49,53,47,29,11,8,169,97,
153,120,120,120,122,120,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,
59,182,64,250,23,8,125,0,6,0,1,0,240,0,176,2,36,4,20,10,188,12,92,14,87,27,45,44,21,50,
62,33,33,29,8,5,167,147,147,120,120,120,167,142,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,
124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,240,0,176,2,36,4,20,10,188,12,92,14,87,27,
40,96,30,73,92,48,48,43,12,7,167,147,147,120,120,120,167,142,135,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,232,0,148,2,12,4,76,10,200,12,
104,14,87,27,35,78,27,66,81,43,43,38,11,6,167,147,147,120,120,120,167,142,135,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,200,0,32,2,172,3,
220,10,248,12,156,14,87,27,80,74,27,66,75,43,43,38,11,6,167,147,147,120,120,120,167,142,135,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,1,0,186,0,
137,1,132,3,13,10,159,12,139,14,164,26,40,49,22,61,38,31,28,28,17,7,163,134,154,120,120,120,167,142,
135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,64,250,23,8,
1,0,184,0,112,1,132,3,236,9,148,12,136,14,144,26,0,32,18,50,30,25,23,23,14,6,162,133,155,120,
120,120,162,127,165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,146,23,0,0,
0,250,0,0,255,0,5,0,1,0,168,0,4,2,92,3,88,10,104,11,141,14,32,27,45,56,21,52,64,39,
36,18,13,5,167,135,150,120,120,120,167,135,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,
40,53,0,191,197,24,223,182,176,250,125,182,3,0,168,0,4,2,92,3,88,10,104,11,141,14,32,27,70,108,
29,73,89,54,50,25,18,7,167,135,150,120,120,120,167,135,135,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,168,0,240,1,92,3,60,10,146,11,158,14,
18,27,80,90,25,71,81,49,45,25,17,7,168,134,145,120,120,120,167,135,135,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,176,0,56,1,92,3,56,9,
12,13,60,15,144,26,60,53,3,79,43,23,23,33,13,8,177,125,102,120,120,120,177,125,117,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,1,0,176,0,56,1,
92,3,56,9,12,13,60,15,144,26,0,33,2,62,35,19,19,27,10,6,177,125,102,120,120,120,177,125,117,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,64,250,23,8,250,0,
5,0,1,0,200,0,204,1,137,7,208,9,208,12,69,14,104,28,45,29,21,46,46,49,37,28,9,6,184,108,
128,120,120,120,185,107,127,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,
223,182,176,250,125,182,3,0,200,0,204,1,137,7,208,9,208,12,69,14,104,28,60,84,36,79,78,83,63,48,
15,11,184,108,128,120,120,120,185,107,127,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,
0,191,197,254,124,182,1,250,0,0,1,0,198,0,192,1,44,7,195,9,213,12,91,14,62,28,80,71,31,76,
61,74,57,44,14,10,183,109,149,120,120,120,185,107,150,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,
222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,178,0,71,1,179,3,63,9,9,13,48,15,166,26,
65,42,4,71,37,23,22,30,12,7,178,124,103,120,120,120,185,107,127,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,1,0,178,0,71,1,179,3,63,9,9,13,
48,15,166,26,0,30,3,60,31,19,18,25,10,6,178,124,103,120,120,120,185,107,127,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,64,250,23,8,4,1,6,0,1,0,152,0,
40,1,152,8,4,11,92,13,135,15,160,26,45,21,4,46,41,41,42,20,9,4,167,105,120,120,120,120,167,90,
120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,
3,0,152,0,40,1,132,8,4,11,92,13,135,15,160,26,60,62,7,78,70,70,71,34,16,8,167,105,120,120,
120,120,167,90,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,
1,250,0,0,1,0,155,0,43,1,188,7,195,10,81,13,125,15,158,26,80,53,6,76,54,61,61,33,15,7,
168,107,150,120,120,120,167,90,152,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,
8,0,0,0,1,250,0,0,1,0,174,0,62,1,199,3,80,9,17,13,64,15,145,26,35,39,3,71,36,22,
22,29,12,7,176,123,103,120,120,120,167,90,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,
0,0,0,0,188,40,60,182,64,250,23,8,1,0,176,0,64,1,152,3,56,9,12,13,60,15,144,26,40,37,
2,67,33,19,19,28,11,7,177,125,102,120,120,120,177,125,117,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,40,60,182,40,54,0,191,77,60,59,182,64,250,23,8,1,0,176,0,64,1,152,3,56,9,12,13,60,15,
144,26,0,30,2,60,30,17,17,25,10,6,177,125,102,120,120,120,177,125,117,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,0,0,0,0,0,0,0,146,23,0,0,0,250,0,0,250,0,5,0,1,0,40,1,232,2,
240,5,196,9,112,13,40,15,153,28,45,42,29,57,60,43,35,26,9,5,215,138,143,120,120,120,237,165,165,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,
40,1,232,2,240,5,196,9,112,13,40,15,153,28,80,81,41,79,83,60,48,37,13,8,215,138,143,120,120,120,
237,165,165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,
0,0,1,0,24,1,186,2,4,6,180,9,98,13,20,15,71,28,80,64,35,71,72,53,43,34,12,7,210,133,
142,120,120,120,237,165,165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,
0,0,1,250,0,0,1,0,132,0,40,1,184,6,36,9,228,12,96,14,100,25,45,42,19,61,41,35,38,35,
9,12,165,90,135,120,120,120,165,135,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,
0,0,188,40,60,182,64,250,23,8,1,0,132,0,40,1,184,6,36,9,228,12,96,14,100,25,0,26,15,48,
33,28,30,28,7,10,165,90,135,120,120,120,165,135,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,40,
60,182,40,54,0,191,77,60,59,182,64,250,23,8,250,0,5,0,1,0,244,0,35,2,63,7,232,9,38,13,
144,14,176,28,45,28,23,46,45,48,37,27,8,6,202,118,143,120,120,120,135,180,150,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,244,0,35,2,63,7,
232,9,38,13,144,14,176,28,80,82,40,79,77,81,63,46,14,10,202,118,143,120,120,120,135,180,150,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,244,0,
35,2,63,7,232,9,38,13,144,14,176,28,80,73,38,75,72,77,60,43,13,9,202,118,143,120,120,120,135,180,
150,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,
1,0,132,0,24,1,184,6,36,9,228,12,96,14,100,25,45,47,20,63,43,37,40,36,10,13,165,90,135,120,
120,120,165,135,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,
64,250,23,8,1,0,132,0,24,1,184,6,36,9,228,12,96,14,100,25,0,30,16,50,34,29,32,29,8,10,
165,90,135,120,120,120,165,135,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,
77,60,59,182,64,250,23,8,250,0,5,0,1,0,122,0,192,1,240,5,116,9,228,12,246,14,95,27,45,49,
28,59,69,41,43,30,17,6,170,133,135,122,124,128,197,131,120,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,122,0,192,1,240,5,116,9,228,12,246,14,
95,27,80,79,36,75,88,52,55,38,21,8,170,133,135,122,124,128,197,131,120,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,122,0,192,1,240,5,116,9,
228,12,246,14,95,27,80,64,32,68,79,47,49,35,19,7,170,133,135,122,124,128,197,131,120,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,132,0,24,1,
184,6,36,9,228,12,96,14,100,25,45,47,20,63,43,37,40,36,10,13,165,90,135,120,120,120,165,135,135,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,1,0,
132,0,24,1,184,6,36,9,228,12,96,14,100,25,0,30,16,50,34,29,32,29,8,10,165,90,135,120,120,120,
165,135,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,64,250,
23,8,250,0,5,0,33,0,152,0,32,1,224,8,4,11,52,13,0,15,160,26,45,45,6,66,59,59,60,29,
14,6,175,105,120,120,120,120,175,90,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,
0,191,197,24,223,182,176,250,125,182,3,0,152,0,24,1,232,8,4,11,52,13,0,15,160,26,80,72,10,83,
73,74,75,36,17,8,167,105,120,120,120,120,167,90,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,
0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,152,0,24,1,232,8,4,11,12,13,216,14,64,26,
80,45,10,60,60,63,63,34,11,8,167,105,120,120,120,120,167,105,120,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,132,0,24,1,184,6,36,9,228,12,
96,14,100,25,45,47,20,63,43,37,40,36,10,13,165,90,135,120,120,120,165,135,135,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,1,0,132,0,24,1,184,6,
36,9,228,12,96,14,100,25,0,30,16,50,34,29,32,29,8,10,165,90,135,120,120,120,165,135,135,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,64,250,23,8,185,0,5,0,
1,0,176,0,88,1,128,3,71,9,213,12,38,15,162,26,45,47,6,73,41,23,23,29,12,7,176,126,108,120,
120,120,177,125,117,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,
176,250,125,182,3,0,176,0,88,1,128,3,71,9,213,12,38,15,162,26,80,80,8,94,53,31,30,38,16,9,
176,126,108,120,120,120,177,125,117,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,
197,254,124,182,1,250,0,0,1,0,176,0,103,1,125,3,80,9,181,12,25,15,173,26,65,60,9,80,48,28,
26,31,13,7,175,126,112,120,120,120,177,125,117,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,
49,229,0,182,8,0,0,0,1,250,0,0,5,0,170,0,224,1,99,3,155,9,98,12,223,14,7,27,60,47,
22,59,51,32,27,19,12,5,169,133,142,120,120,120,177,125,117,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,1,0,169,0,238,1,96,3,164,9,88,12,216,14,
18,27,0,33,19,48,44,26,23,15,11,4,168,134,145,120,120,120,177,125,117,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,64,250,23,8,80,0,5,0,1,0,132,0,24,1,
184,6,36,9,228,12,96,14,100,25,45,35,17,55,37,32,35,32,8,11,160,90,135,120,120,120,160,135,135,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,
132,0,24,1,184,6,36,9,228,12,96,14,100,25,80,67,24,76,51,44,48,44,12,16,167,90,135,120,120,120,
167,135,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,
0,0,1,0,132,0,24,1,184,6,36,9,228,12,96,14,100,25,80,54,21,68,46,39,43,39,10,14,167,90,
135,120,120,120,167,135,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,
0,0,1,250,0,0,1,0,122,0,192,1,240,5,116,9,228,12,246,14,95,27,45,38,25,52,61,36,38,27,
15,5,170,133,135,122,124,128,197,131,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,
0,0,188,40,60,182,64,250,23,8,1,0,122,0,192,1,240,5,116,9,228,12,246,14,95,27,0,27,21,44,
52,30,32,23,12,5,170,133,135,122,124,128,197,131,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,40,
60,182,40,54,0,191,77,60,59,182,64,250,23,8,65,0,4,0,5,0,116,0,13,2,161,5,152,8,128,12,
212,13,96,27,20,8,14,26,25,12,12,12,7,4,167,150,135,120,120,120,197,120,120,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,5,0,116,0,13,2,161,5,
152,8,128,12,212,13,96,27,25,15,19,35,33,16,16,16,9,5,167,150,135,120,120,120,197,120,120,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,5,0,116,0,
13,2,161,5,152,8,128,12,212,13,96,27,20,15,19,35,33,16,16,16,9,5,167,150,135,120,120,120,197,120,
120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,
1,0,116,0,13,2,161,5,152,8,128,12,212,13,96,27,0,9,15,28,26,13,13,13,7,4,167,150,135,120,
120,120,197,120,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,
64,250,23,8,234,8,18,0,253,253,0,0,249,246,252,252,244,236,237,245,247,248,252,254,2,10,16,10,13,22,
7,13,34,24,31,29,14,29,17,7,25,0,230,246,252,249,247,228,229,242,246,232,229,240,238,245,1,252,215,217,
5,13,18,35,17,20,45,18,244,251,254,0,17,252,225,245,2,29,10,214,234,22,55,56,13,2,28,34,40,24,
228,233,251,253,37,250,182,232,30,33,245,208,223,245,231,217,220,197,216,8,234,158,176,233,228,240,246,252,40,51,
23,37,82,62,43,73,90,92,101,75,32,44,50,20,12,5,239,216,208,226,230,167,151,213,223,225,233,220,234,10,
42,34,4,37,71,36,31,49,246,226,15,248,229,238,211,238,5,225,250,249,204,238,22,12,10,20,34,43,33,45,
64,46,36,60,60,32,245,230,16,29,228,223,218,162,218,0,199,217,235,226,39,30,244,34,5,242,30,25,17,12,
7,20,44,22,240,243,231,210,1,19,208,221,252,238,238,204,185,246,246,221,32,35,237,3,41,40,25,10,22,70,
103,70,50,74,68,49,38,12,251,22,14,238,7,220,153,181,212,215,209,171,165,225,239,204,206,224,204,248,19,241,
3,255,2,49,58,12,237,19,48,25,18,19,6,15,35,37,18,220,224,42,25,238,231,243,17,12,10,44,22,18,
88,50,245,18,241,197,3,22,240,243,201,184,244,238,212,227,237,14,55,32,222,248,95,72,228,196,223,255,10,6,
231,253,40,4,18,47,220,226,65,61,34,33,13,18,41,23,253,242,248,5,8,251,215,197,206,196,168,164,201,206,
222,26,245,186,227,4,53,90,6,219,39,43,0,10,236,205,244,7,255,3,233,217,15,36,250,234,0,0,254,24,
3,236,29,71,55,37,43,0,232,9,5,243,239,236,230,243,242,232,245,247,215,190,215,222,221,253,255,240,5,23,
29,61,48,3,29,31,4,28,14,8,13,241,15,33,1,246,255,7,231,214,14,22,251,251,228,251,254,215,246,21,
241,233,0,254,46,59,0,7,58,49,7,246,241,8,38,241,175,184,205,232,252,193,156,206,253,5,239,207,229,12,
46,70,27,20,69,76,69,60,34,65,55,255,21,0,182,205,252,254,238,207,186,212,7,238,214,221,204,244,46,40,
6,243,253,39,33,242,229,232,1,0,224,2,253,217,253,13,245,254,252,251,56,28,232,3,241,245,16,17,12,252,
15,31,23,26,6,238,2,15,11,48,64,39,2,46,101,19,219,14,41,7,234,200,219,244,206,222,13,4,230,234,
243,3,34,30,27,35,31,59,80,56,49,51,26,9,3,7,242,196,216,1,210,193,193,161,224,5,177,158,221,243,
1,246,215,9,46,16,33,51,35,55,36,255,22,20,216,182,213,220,208,214,214,202,218,252,1,253,254,252,21,38,
254,15,66,43,62,105,73,65,77,58,49,40,241,232,34,239,180,237,234,189,234,254,226,242,254,5,53,61,3,3,
62,61,37,11,249,0,10,240,197,221,243,204,224,30,226,211,35,251,234,10,242,37,49,204,13,85,4,7,45,250,
238,9,244,247,9,6,32,42,1,238,252,252,248,25,5,182,212,49,41,239,235,239,4,29,225,199,227,189,208,7,
219,214,11,241,217,3,49,38,16,21,55,97,48,2,43,26,198,221,4,198,203,235,195,231,237,180,238,34,5,10,
21,53,108,80,46,52,46,46,35,17,13,242,230,251,206,155,190,214,187,208,217,195,11,17,231,33,40,5,26,21,
24,43,238,229,22,14,238,200,239,34,34,34,251,205,234,56,35,231,19,53,37,33,251,244,51,26,230,3,233,209,
1,247,231,0,216,167,218,228,191,221,231,219,14,5,219,26,29,250,44,61,19,252,8,33,62,46,0,246,9,22,
5,242,236,231,228,243,227,219,6,11,30,62,17,40,106,70,93,104,14,17,55,30,242,196,183,221,233,176,136,156,
192,179,183,184,158,189,227,245,244,251,22,56,66,39,2,6,28,248,237,255,248,231,209,220,222,236,15,7,8,16,
6,33,47,34,53,59,40,42,42,47,39,0,7,2,220,207,178,154,195,216,179,178,193,215,26,10,235,58,67,16,
71,93,29,9,24,48,54,11,245,23,33,1,216,223,25,37,66,67,248,226,13,28,16,9,225,227,7,225,229,3,
220,229,0,251,37,14,225,19,21,230,226,242,7,16,254,5,14,242,244,19,26,13,252,10,14,6,25,6,232,255,
18,244,233,17,31,6,255,22,27,241,203,229,8,251,226,238,6,241,239,9,228,249,61,9,226,33,30,1,42,6,
242,44,15,251,34,255,250,27,245,227,9,33,17,28,9,199,215,15,243,205,208,190,211,8,248,207,240,252,226,7,
8,237,50,74,47,87,54,10,65,46,253,239,243,0,250,0,230,225,238,220,254,22,200,204,22,243,1,34,232,231,
40,38,251,17,8,2,79,45,224,28,56,17,32,245,187,244,42,0,219,239,242,233,242,220,205,244,236,215,255,0,
237,12,37,46,55,53,58,55,27,21,30,30,36,19,248,249,235,231,253,207,161,208,242,221,210,236,12,9,227,216,
7,6,243,249,251,6,18,47,46,17,30,21,6,71,96,46,50,35,1,16,231,200,239,252,252,3,225,184,180,190,
211,232,225,221,1,22,29,22,255,28,46,33,59,48,19,36,17,244,254,237,236,248,240,247,228,212,189,164,178,222,
6,0,254,19,46,67,55,4,251,38,46,44,58,40,19,12,2,10,14,234,214,243,228,180,173,186,210,243,221,192,
232,248,246,13,0,225,9,59,45,35,29,18,24,32,26,30,54,42,2,11,23,4,1,10,246,218,249,240,198,217,
235,244,250,234,231,3,20,10,24,35,7,0,24,245,215,228,228,223,209,219,220,206,211,225,215,192,215,245,248,9,
27,17,30,64,53,52,74,80,94,86,51,41,27,241,221,245,233,221,10,2,225,244,234,216,1,254,211,10,62,12,
237,253,254,12,44,15,249,27,9,241,247,213,193,230,242,214,216,2,31,22,7,237,242,37,51,29,27,27,9,32,
18,205,215,254,253,3,247,238,1,8,1,242,215,227,16,15,3,251,250,15,246,245,18,3,12,35,241,208,254,249,
223,227,214,223,252,4,6,10,251,247,25,28,253,10,35,21,22,40,8,247,16,19,4,5,237,218,7,6,208,215,
230,231,1,248,228,253,254,231,0,11,244,3,40,25,7,21,4,0,23,1,0,16,7,25,13,241,253,245,217,220,
232,253,12,252,237,19,52,19,18,41,18,37,64,22,4,1,243,3,23,17,3,6,15,0,9,13,223,252,31,5,
17,26,245,248,16,7,20,40,3,237,31,25,232,223,199,210,243,210,204,238,229,232,245,246,244,251,19,42,69,72,
16,243,24,45,15,237,228,233,246,240,214,227,254,247,244,235,224,250,18,13,254,233,243,2,16,44,19,11,44,53,
37,15,17,22,19,34,27,249,251,16,24,255,231,249,253,3,255,223,245,14,249,214,222,247,248,2,251,236,233,227,
238,17,18,238,248,4,11,36,15,234,16,56,40,45,28,1,33,18,227,233,244,242,4,8,251,254,250,248,7,11,
10,14,5,5,22,26,5,255,249,229,231,255,243,212,234,243,198,216,1,243,236,247,247,250,238,238,25,33,23,28,
47,52,47,72,45,249,247,6,14,14,8,241,237,247,251,243,221,210,226,14,12,232,239,4,12,8,244,225,246,6,
246,242,242,240,246,243,213,224,16,255,248,6,247,8,31,10,16,38,29,42,50,39,37,23,9,249,1,28,2,243,
237,208,223,241,228,230,228,217,235,236,218,239,254,223,229,12,9,13,29,27,40,40,44,48,13,239,245,18,27,253,
222,226,242,231,221,211,200,228,237,211,205,213,241,22,35,36,34,46,61,57,52,35,30,48,39,25,19,239,222,238,
235,203,189,192,187,204,228,210,205,234,0,27,25,5,24,34,25,32,27,17,32,50,35,9,14,13,249,245,244,248,
8,245,227,246,239,229,252,238,206,229,248,244,9,12,255,15,24,14,22,29,5,12,35,12,9,10,236,234,250,225,
201,213,204,186,203,220,220,240,242,238,252,4,18,26,18,17,52,63,37,38,67,58,23,30,15,239,252,255,237,224,
204,215,241,213,199,221,222,223,254,8,248,22,52,49,61,56,49,73,76,60,77,52,15,34,29,15,13,232,209,229,
219,184,189,219,208,192,223,243,243,5,11,5,22,27,34,71,63,33,60,63,20,18,23,255,0,8,244,245,5,237,
215,222,208,213,220,177,174,219,222,218,235,219,239,38,47,45,50,23,17,61,46,3,6,245,244,8,224,186,203,206,
208,219,188,188,241,9,15,15,7,7,40,73,66,67,70,53,77,90,38,19,28,253,0,19,230,207,237,241,231,221,
191,207,1,1,245,255,250,7,41,35,35,36,27,57,80,51,20,19,26,33,8,219,229,7,253,236,216,194,213,231,
215,218,239,234,247,6,248,252,8,7,26,44,30,26,33,36,47,57,21,240,246,247,247,249,229,208,225,237,221,220,
225,230,246,11,17,20,40,35,49,80,51,34,56,40,14,28,1,215,231,230,217,211,193,201,218,203,195,220,233,232,
250,3,0,7,17,17,14,10,26,49,45,34,37,41,27,9,8,16,15,2,242,233,241,244,234,230,245,251,255,21,
17,0,23,45,25,7,10,21,24,23,19,4,253,0,249,227,218,225,234,225,219,218,194,201,224,223,230,233,222,242,
12,251,245,10,8,16,31,8,5,45,34,252,13,10,240,247,251,244,244,247,245,0,1,240,5,27,8,16,38,20,
20,22,248,252,19,9,5,6,231,221,236,226,214,221,221,223,242,241,231,243,245,242,7,19,1,0,8,252,15,34,
7,15,30,14,28,35,3,7,23,1,8,28,2,251,8,242,248,15,239,229,255,239,238,11,1,253,13,8,6,6,
234,223,251,253,236,250,0,249,254,248,241,249,242,247,12,0,250,14,14,8,10,17,28,39,22,0,14,21,1,3,
11,251,255,5,249,1,5,238,241,1,237,228,238,244,7,254,229,243,5,5,249,254,14,23,28,21,8,252,251,4,
2,247,244,248,250,251,242,238,250,3,2,253,252,248,255,24,13,247,254,7,13,6,246,248,255,255,247,238,245,249,
253,0,249,254,6,2,3,5,1,4,0,0,185,0,4,0,1,0,250,0,176,2,40,4,246,10,188,12,92,14,
87,27,45,46,22,50,61,38,34,31,9,5,167,157,147,120,120,120,167,152,135,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,250,0,176,2,40,4,246,10,
188,12,92,14,87,27,60,88,31,70,84,52,47,43,12,7,167,157,147,120,120,120,167,152,135,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,250,0,176,2,
40,4,246,10,188,12,92,14,87,27,80,79,29,66,79,49,45,41,11,7,167,157,147,120,120,120,167,152,135,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,
250,0,160,2,76,4,246,10,188,12,92,14,87,27,0,42,22,50,60,37,34,31,8,5,167,159,147,120,120,120,
167,155,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,
23,8,200,0,4,0,1,0,191,0,196,1,88,7,216,9,248,12,123,14,185,27,50,42,27,55,55,57,48,34,
11,7,178,107,129,120,120,120,185,107,127,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,
0,191,197,24,223,182,176,250,125,182,3,0,191,0,196,1,88,7,216,9,248,12,123,14,185,27,80,80,37,76,
76,79,65,47,16,10,178,107,129,120,120,120,185,107,127,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,
0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,191,0,196,1,88,7,216,9,248,12,123,14,185,27,
70,67,34,69,70,73,60,43,15,9,178,107,129,120,120,120,185,107,127,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,191,0,196,1,88,7,216,9,248,12,
123,14,185,27,0,30,23,47,47,49,40,29,10,6,178,107,129,120,120,120,185,107,127,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,170,0,4,0,1,0,200,0,
80,2,44,6,176,9,52,13,7,15,8,28,50,48,31,58,68,47,38,28,12,5,221,163,157,120,120,120,150,163,
150,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,
3,0,200,0,80,2,44,6,176,9,52,13,7,15,8,28,80,83,41,76,90,62,51,38,17,7,221,163,157,120,
120,120,150,163,150,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,
1,250,0,0,1,0,200,0,80,2,44,6,156,9,52,13,7,15,8,28,40,63,36,66,78,54,44,33,14,6,
221,163,157,120,120,120,150,163,150,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,
8,0,0,0,1,250,0,0,1,0,200,0,80,2,44,6,156,9,52,13,7,15,8,28,0,33,27,50,54,40,
33,24,11,4,221,163,157,120,120,120,150,163,150,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,
0,0,0,0,188,40,60,182,64,250,23,8,160,0,4,0,1,0,172,0,64,1,207,8,214,11,112,13,134,16,
42,27,50,42,7,61,51,47,51,23,15,7,182,120,133,133,142,161,187,125,137,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,172,0,64,1,207,8,214,11,
112,13,134,16,42,27,60,54,8,69,58,53,58,26,17,8,182,120,133,133,142,161,187,125,137,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,172,0,64,1,
207,8,214,11,112,13,134,16,42,27,50,47,14,61,47,46,49,20,15,7,182,120,133,133,142,161,187,125,137,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,
172,0,64,1,207,8,214,11,112,13,134,16,42,27,0,34,12,53,41,40,42,17,13,6,182,120,133,133,142,161,
187,125,137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,
23,8,195,0,4,0,33,0,152,0,8,1,36,9,64,11,132,13,100,15,160,26,50,43,8,65,53,53,53,28,
13,6,167,105,120,120,120,120,167,90,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,
0,191,197,24,223,182,176,250,125,182,3,0,152,0,8,1,36,9,64,11,132,13,100,15,160,26,75,66,10,80,
65,65,65,35,16,8,167,105,120,120,120,120,167,90,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,
0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,152,0,8,1,36,9,84,11,132,13,100,15,160,26,
70,54,9,73,59,59,59,31,15,7,167,105,120,120,120,120,167,90,120,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,118,0,240,0,35,9,44,11,72,13,
60,15,112,26,0,26,7,48,42,41,42,23,10,6,171,105,112,120,120,120,175,135,120,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,195,0,4,0,1,0,120,0,
80,1,160,5,156,9,228,12,100,15,90,26,45,32,25,51,51,44,38,32,17,6,168,112,148,120,120,120,107,112,
120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,
3,0,120,0,80,1,160,5,156,9,228,12,100,15,90,26,75,46,30,60,60,53,45,38,20,8,168,112,148,120,
120,120,107,112,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,
1,250,0,0,1,0,120,0,80,1,160,5,156,9,228,12,100,15,90,26,75,41,28,57,57,50,43,36,19,7,
168,112,148,120,120,120,107,112,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,
8,0,0,0,1,250,0,0,1,0,120,0,80,1,160,5,156,9,228,12,100,15,90,26,0,32,25,51,51,44,
38,32,17,6,168,112,148,120,120,120,107,112,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,
0,0,0,0,188,40,60,182,64,250,23,8,120,0,4,0,1,0,176,0,64,1,52,3,56,9,12,13,60,15,
144,26,50,35,6,61,36,21,21,30,12,7,177,125,102,120,120,120,177,125,117,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,176,0,64,1,52,3,56,9,
12,13,60,15,144,26,70,59,8,80,48,28,28,40,16,10,177,125,102,120,120,120,177,125,117,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,176,0,64,1,
52,3,56,9,12,13,60,15,144,26,50,36,6,62,37,21,21,31,12,7,177,125,102,120,120,120,177,125,117,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,
176,0,64,1,52,3,56,9,12,13,60,15,144,26,0,23,5,50,30,17,17,25,10,6,177,125,102,120,120,120,
177,125,117,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,
23,8,175,0,4,0,1,0,172,0,40,1,228,2,96,9,12,13,60,15,144,26,45,40,3,67,48,19,25,28,
9,8,177,117,100,120,120,120,177,117,115,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,
0,191,197,24,223,182,176,250,125,182,3,0,172,0,40,1,228,2,96,9,12,13,60,15,144,26,70,63,4,84,
60,24,32,36,12,10,177,117,100,120,120,120,177,117,115,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,
0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,172,0,40,1,228,2,96,9,12,13,60,15,144,26,
60,56,3,79,57,22,30,34,11,9,177,117,100,120,120,120,177,117,115,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,172,0,40,1,228,2,96,9,12,13,
60,15,144,26,0,38,3,65,46,18,24,28,9,7,177,117,100,120,120,120,177,117,115,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,125,0,4,0,1,0,176,0,
104,1,92,3,56,9,108,12,60,15,144,26,45,43,6,69,44,22,25,25,12,7,177,125,110,120,120,120,177,125,
125,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,
3,0,176,0,104,1,92,3,56,9,108,12,60,15,144,26,80,70,8,88,56,28,32,32,16,10,177,125,110,120,
120,120,177,125,125,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,
1,250,0,0,1,0,176,0,104,1,92,3,56,9,108,12,60,15,144,26,70,57,7,79,50,25,28,28,14,9,
177,125,110,120,120,120,177,125,125,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,
8,0,0,0,1,250,0,0,1,0,176,0,104,1,92,3,56,9,108,12,60,15,144,26,0,38,5,65,41,20,
23,23,11,7,177,125,110,120,120,120,177,125,125,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,
0,0,0,0,188,40,60,182,64,250,23,8,165,0,4,0,1,0,180,0,192,1,196,4,212,8,148,12,226,14,
144,26,45,34,24,51,51,36,36,30,15,7,170,125,145,120,120,120,162,125,145,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,180,0,192,1,196,4,212,8,
148,12,226,14,144,26,70,60,32,68,68,48,48,40,20,10,170,125,145,120,120,120,162,125,145,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,180,0,192,1,
196,4,212,8,148,12,226,14,144,26,50,54,30,64,64,45,45,38,19,9,170,125,145,120,120,120,162,125,145,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,
180,0,192,1,196,4,212,8,148,12,226,14,144,26,0,29,22,47,47,33,33,28,14,7,170,125,145,120,120,120,
162,125,145,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,
23,8,175,0,4,0,1,0,116,0,208,1,116,4,80,10,48,12,196,14,96,27,45,40,23,57,57,37,34,31,
16,6,167,150,135,120,120,120,197,120,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,
0,191,197,24,223,182,176,250,125,182,3,0,116,0,208,1,116,4,80,10,48,12,196,14,96,27,70,79,32,80,
80,52,48,44,23,8,167,150,135,120,120,120,197,120,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,
0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,116,0,208,1,116,4,80,10,48,12,196,14,96,27,
60,64,28,72,72,46,43,39,20,7,167,150,135,120,120,120,197,120,120,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,116,0,208,1,116,4,80,10,48,12,
196,14,96,27,0,35,21,53,53,34,32,29,15,5,167,150,135,120,120,120,197,120,120,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,0,0,5,0,1,0,116,0,
24,2,140,5,116,9,188,12,116,14,88,27,40,44,29,57,69,39,40,31,16,6,167,150,135,120,120,120,197,120,
120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,
3,0,116,0,24,2,140,5,116,9,188,12,116,14,88,27,66,97,43,84,102,57,60,46,24,9,167,150,135,120,
120,120,197,120,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,
1,250,0,0,1,0,124,0,244,1,40,6,172,9,232,12,126,14,128,27,94,50,32,60,70,44,44,33,16,6,
167,138,147,120,120,120,197,120,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,
8,0,0,0,1,250,0,0,1,0,156,0,99,1,152,8,140,10,152,13,166,14,32,28,40,40,31,54,47,57,
44,32,10,8,167,90,195,120,120,120,122,120,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,
0,0,0,0,188,40,60,182,64,250,23,8,1,0,156,0,99,1,174,8,160,10,92,13,10,15,32,28,0,34,
31,49,49,45,42,33,9,8,167,90,135,120,120,120,122,120,120,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,40,60,182,40,54,0,191,77,60,59,182,64,250,23,8,175,8,35,0,10,234,191,13,42,250,10,243,236,16,
5,2,0,226,210,25,80,2,180,13,43,252,13,226,242,255,251,50,248,205,34,7,237,34,235,12,251,235,63,0,
246,239,1,49,228,236,20,211,14,67,204,220,28,253,0,12,231,222,16,35,16,227,216,47,50,231,255,236,0,24,
232,29,26,225,208,57,84,205,220,5,40,27,220,19,14,228,26,30,250,255,4,230,244,60,7,184,230,76,37,188,
252,20,235,3,42,7,221,0,3,19,45,234,227,8,26,52,220,232,34,216,6,42,7,216,192,39,57,236,222,8,
10,249,20,241,0,5,230,62,23,235,213,249,95,226,213,34,6,227,223,49,34,195,248,59,236,236,38,17,231,253,
23,13,246,226,28,212,4,66,199,10,250,241,56,231,224,35,251,228,20,12,6,247,236,21,32,244,228,0,11,8,
0,12,18,8,233,251,29,244,242,25,1,11,6,219,58,11,193,255,38,27,178,22,25,194,42,18,221,230,9,10,
244,243,2,11,254,0,229,250,255,9,28,226,226,48,40,209,12,3,249,57,193,33,63,167,62,22,229,65,179,0,
103,215,191,51,39,177,3,47,245,250,220,7,44,219,233,11,206,25,8,162,49,33,179,22,33,214,242,11,245,252,
32,32,212,27,80,181,225,71,249,232,70,10,204,50,239,238,42,205,227,230,23,65,165,245,78,170,245,45,176,35,
35,184,81,24,182,42,242,242,39,230,231,11,12,241,5,28,251,222,20,32,212,250,35,1,231,29,32,174,253,60,
222,244,14,244,0,254,8,19,245,241,242,16,18,211,1,23,252,26,244,221,14,22,225,224,17,9,242,7,21,242,
250,25,252,231,30,252,213,66,20,227,254,249,40,7,207,217,55,32,209,227,249,66,210,193,91,214,188,37,8,22,
240,233,17,243,21,0,231,245,12,54,228,241,27,204,246,60,233,222,3,1,41,232,238,42,249,226,11,25,221,26,
14,217,48,23,206,225,54,248,185,48,28,216,251,244,12,24,230,2,10,20,251,238,26,238,34,228,186,105,1,145,
33,71,221,195,32,24,191,20,31,197,10,33,7,229,16,42,179,30,95,213,240,11,29,15,204,56,251,165,80,43,
199,248,12,247,29,31,178,240,36,245,25,225,248,59,225,207,3,46,214,198,65,17,245,242,6,255,249,49,196,254,
67,220,5,14,243,55,247,177,64,10,184,47,0,221,53,250,216,18,245,255,243,232,41,22,225,250,38,251,241,217,
38,89,154,236,108,244,195,249,47,22,229,218,19,49,191,216,81,247,231,21,220,0,46,10,236,6,242,229,30,228,
230,59,233,231,31,241,10,212,246,99,224,225,37,238,24,28,226,33,21,202,6,51,3,206,17,52,224,233,245,19,
12,160,46,104,168,230,252,2,53,189,11,23,218,41,249,4,14,201,13,60,21,217,226,56,11,10,42,225,209,11,
69,220,201,58,19,231,241,40,20,163,230,123,17,163,16,40,237,240,27,4,208,29,28,207,19,27,199,242,84,9,
163,25,25,225,43,250,11,3,194,68,52,192,11,24,246,7,224,14,17,197,35,54,213,4,13,215,253,33,31,251,
226,243,75,15,142,24,38,236,255,249,69,218,187,111,26,166,243,10,251,14,12,214,9,93,204,176,66,21,191,25,
68,210,218,52,12,224,28,10,237,22,252,8,250,5,36,232,247,255,21,251,201,48,31,201,234,21,32,241,212,247,
48,28,200,239,20,22,18,193,2,81,200,209,120,3,144,69,52,179,12,12,254,13,199,49,56,163,255,76,243,211,
247,66,38,170,242,68,43,204,184,72,32,230,224,46,86,146,218,126,12,165,0,53,223,5,42,220,230,31,254,230,
19,1,230,19,5,254,0,243,15,231,21,33,207,0,251,237,29,228,234,23,226,27,32,231,1,255,42,252,203,34,
48,255,252,1,26,10,214,22,17,230,221,3,65,235,214,11,15,252,246,12,248,247,17,255,253,253,255,12,220,23,
15,214,26,252,24,2,226,34,223,254,39,216,248,7,8,20,231,248,8,25,246,255,42,221,247,255,21,35,201,4,
17,239,24,250,20,3,217,69,243,222,28,228,48,246,220,26,239,226,228,36,27,204,228,25,14,252,0,255,7,1,
255,45,232,191,66,14,202,21,29,223,240,74,252,196,24,18,229,17,26,250,251,243,44,17,197,18,55,214,237,35,
249,6,246,14,253,213,62,6,172,40,65,194,232,44,1,196,234,61,233,238,43,233,248,13,0,2,247,22,250,240,
45,236,231,28,5,253,240,244,15,50,249,213,74,16,197,26,1,10,233,232,75,221,7,18,204,70,227,233,64,226,
238,1,7,13,245,240,7,16,209,212,23,251,251,18,222,18,19,220,10,4,18,248,253,40,238,246,33,37,239,251,
23,237,14,9,233,19,44,217,6,41,189,1,4,33,255,146,74,37,174,1,16,1,246,1,19,237,233,39,253,226,
32,20,225,222,82,8,145,56,61,231,236,243,56,232,229,28,246,66,236,200,49,252,246,253,236,13,33,201,189,103,
8,140,31,48,234,243,10,32,9,226,22,60,210,214,47,23,237,241,47,12,216,24,35,236,232,49,10,192,20,42,
226,236,41,16,192,230,46,18,208,217,53,22,185,3,61,241,238,7,9,5,223,0,245,36,54,175,11,40,232,6,
241,37,249,216,80,254,197,36,16,15,247,228,9,1,25,216,235,81,233,208,52,21,224,255,47,6,214,23,14,221,
244,23,21,245,250,237,245,16,12,229,235,44,243,229,58,214,192,88,238,187,34,34,0,208,69,27,181,43,238,231,
30,238,18,245,1,41,217,16,254,201,74,0,191,41,12,250,2,250,33,11,242,223,18,45,210,241,31,26,209,204,
41,233,241,26,219,14,40,205,240,45,12,224,237,54,9,210,223,48,47,170,253,56,255,5,223,248,54,6,214,4,
31,0,224,245,44,241,231,37,0,1,247,240,23,5,237,3,19,215,4,6,217,42,253,219,8,39,249,198,48,41,
204,18,48,211,249,22,4,245,229,78,0,176,31,53,9,200,241,64,238,210,60,26,210,21,32,241,245,19,235,241,
62,209,189,50,252,231,244,246,29,245,252,16,2,2,254,10,249,30,252,214,43,0,2,18,229,1,23,26,7,230,
8,60,179,231,92,189,244,7,235,61,232,215,42,19,205,4,49,221,224,59,10,217,9,243,7,3,233,3,12,9,
234,8,0,12,22,190,29,37,189,31,10,233,60,237,227,24,232,23,3,223,32,252,28,7,221,61,9,241,244,37,
43,159,9,73,236,205,254,50,220,220,37,249,217,11,41,238,220,41,254,253,25,212,35,246,219,57,245,238,254,0,
3,25,251,203,48,15,211,19,45,255,217,21,32,246,17,10,230,40,12,218,20,0,49,6,216,36,191,0,40,182,
7,7,255,18,229,6,9,230,243,58,4,146,38,73,196,244,23,242,224,28,21,213,11,13,3,10,246,16,10,247,
6,37,29,233,2,28,237,0,29,1,206,8,62,211,246,18,204,249,19,12,0,220,0,24,246,9,246,226,248,23,
24,220,11,7,248,33,227,235,244,223,33,42,236,197,4,78,6,230,248,247,22,39,254,217,28,33,248,0,8,6,
225,244,77,40,147,12,57,205,41,3,248,228,215,78,253,211,236,0,38,219,5,36,164,240,83,228,187,236,44,30,
205,43,37,182,36,46,227,255,25,250,218,66,29,173,250,73,11,213,246,23,43,196,5,63,186,7,250,247,40,213,
255,6,232,53,2,174,16,35,229,218,15,15,202,32,30,240,6,247,17,249,18,14,205,23,21,253,15,252,24,4,
229,245,28,6,200,23,21,249,16,219,14,43,230,239,5,234,12,33,249,234,249,51,224,203,56,231,231,46,235,211,
30,21,212,10,22,0,246,216,39,17,206,53,13,214,61,246,217,21,247,9,253,4,26,242,218,41,61,167,248,68,
190,222,43,243,206,34,51,220,222,24,30,239,223,39,9,217,44,0,240,32,15,240,217,47,246,199,33,253,16,12,
244,26,235,9,11,212,7,235,0,50,1,231,3,66,212,191,29,253,11,252,8,20,248,35,5,203,6,36,211,251,
59,248,243,34,1,13,12,212,54,5,190,69,248,229,53,218,3,33,200,0,15,203,1,31,220,245,70,230,193,72,
8,233,23,206,6,45,210,219,63,44,226,246,0,48,16,203,39,6,235,47,221,254,59,203,0,53,222,255,4,244,
44,2,225,19,1,249,23,219,222,27,242,245,2,8,28,237,235,247,23,248,167,52,74,177,252,65,244,248,0,1,
29,234,241,27,16,28,247,245,59,243,227,29,214,13,36,223,24,0,227,14,255,252,255,242,254,1,8,16,232,12,
40,223,5,10,230,14,229,10,43,222,243,254,3,2,243,7,242,27,248,217,46,7,23,11,213,28,33,237,237,38,
14,242,24,246,232,21,242,226,51,1,198,248,41,1,206,14,28,249,207,240,57,242,204,55,31,201,24,248,245,45,
233,225,21,28,215,0,21,243,9,228,13,38,240,3,8,13,34,246,9,22,225,11,43,208,222,70,255,201,0,43,
226,209,53,228,226,34,250,239,241,14,9,239,237,253,36,2,242,24,253,31,14,248,18,244,29,234,239,32,15,0,
200,10,47,215,205,51,251,204,27,1,254,18,21,235,8,29,212,252,16,2,18,239,250,41,227,238,43,241,241,31,
247,212,48,11,173,25,61,213,209,5,31,15,214,13,40,242,249,10,14,237,252,20,4,255,236,32,10,208,51,14,
219,28,223,231,64,250,209,49,5,234,26,247,2,4,248,19,19,216,247,19,219,0,18,2,238,0,8,243,18,6,
229,242,24,245,223,9,19,8,243,8,30,237,228,36,17,230,9,17,250,255,242,5,11,219,23,21,202,255,46,10,
231,242,46,248,163,62,48,167,245,52,32,201,237,61,232,223,31,246,254,244,216,57,0,236,28,211,2,34,226,241,
12,10,12,249,10,10,227,11,25,7,7,218,18,60,200,252,59,214,1,47,229,237,4,0,58,0,3,0,5,0,
116,0,232,0,52,8,140,10,16,14,104,16,124,21,58,14,25,15,10,10,10,10,5,5,200,212,187,255,255,175,
200,212,187,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,
125,182,1,0,116,0,232,0,52,8,140,10,16,14,104,16,124,21,0,14,25,15,10,10,10,10,5,5,200,212,
187,255,255,175,200,212,187,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,
124,182,1,250,0,0,1,0,116,0,232,0,52,8,140,10,16,14,104,16,124,21,0,14,25,15,10,5,5,5,
0,0,200,212,187,255,255,175,200,212,187,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,
0,182,8,0,0,0,1,250,0,0,14,4,30,0,1,1,1,248,1,254,243,4,9,5,0,4,5,15,15,16,
12,15,146,182,22,55,66,236,245,250,3,18,227,255,36,231,7,17,254,15,253,241,243,232,4,21,231,9,10,252,
15,8,14,0,247,7,242,253,24,226,220,17,39,31,248,243,232,226,250,21,15,13,249,7,13,6,23,216,228,252,
24,10,5,33,223,222,250,32,253,10,17,211,15,252,2,252,20,3,20,19,28,181,196,10,7,68,6,9,233,236,
231,40,253,237,14,231,50,247,17,234,225,38,20,2,254,255,222,192,243,67,47,34,247,192,0,43,230,239,16,228,
27,254,23,18,218,27,3,210,242,36,253,9,214,15,54,14,3,222,246,242,248,230,61,42,154,13,31,70,2,162,
18,32,216,232,49,34,205,236,87,1,223,225,225,60,14,181,215,96,71,194,225,15,97,161,199,65,4,0,216,11,
84,182,14,0,220,44,248,2,245,204,48,78,208,253,22,224,14,12,241,229,210,34,16,40,17,243,241,217,15,5,
24,252,215,33,40,237,216,31,29,222,193,47,39,227,238,242,61,43,163,236,41,71,238,208,225,255,36,5,226,37,
41,245,219,250,9,227,237,44,66,230,166,247,60,39,49,178,175,58,50,17,242,178,221,96,49,2,232,206,219,3,
238,22,54,53,18,173,250,25,252,249,208,246,80,13,242,5,238,219,36,226,255,37,254,36,198,2,48,11,228,193,
252,53,35,12,222,205,44,49,224,210,42,253,225,18,235,17,69,239,211,9,0,15,180,237,114,26,219,255,0,8,
239,211,235,62,5,14,225,238,9,20,44,11,217,218,242,18,49,5,245,203,229,53,23,249,50,221,215,224,249,60,
37,231,50,7,149,236,55,45,218,235,245,255,44,37,252,202,34,232,233,23,41,252,191,225,36,79,3,243,231,240,
23,210,184,54,82,14,18,244,244,214,234,31,215,246,24,18,45,7,237,242,235,249,33,53,23,164,133,22,96,96,
9,166,0,39,1,214,184,253,73,18,0,33,21,249,182,218,33,43,12,217,234,14,23,69,236,178,250,51,237,232,
30,229,11,50,13,237,253,245,179,1,9,51,73,15,209,246,248,243,206,0,255,16,38,28,249,240,29,15,246,204,
228,243,36,75,232,209,243,24,38,243,3,255,204,241,57,55,222,195,13,38,1,13,26,208,214,237,251,55,25,24,
8,237,6,214,190,50,3,21,30,223,17,29,252,223,221,244,19,9,3,11,10,63,240,223,255,242,238,204,240,50,
68,56,1,165,230,20,19,11,209,1,40,198,17,57,25,37,251,158,201,76,27,203,213,0,66,28,23,2,0,247,
217,250,229,9,31,217,19,64,246,242,235,250,20,214,255,40,237,3,249,6,87,0,196,247,244,237,241,252,56,37,
224,250,245,3,15,4,15,214,2,19,247,250,54,236,192,3,29,68,233,227,37,197,238,5,238,39,74,25,217,222,
232,208,234,67,77,249,209,22,41,218,206,222,244,17,92,50,201,231,14,229,214,28,47,35,0,185,210,30,52,229,
244,41,55,10,164,232,4,198,240,78,104,52,235,165,170,1,43,26,13,20,3,252,209,228,12,26,24,25,238,225,
14,5,238,11,12,253,7,9,245,241,252,233,2,38,0,14,4,24,227,210,250,9,20,17,29,20,235,233,201,230,
32,44,0,26,54,230,164,209,36,42,25,239,20,29,250,236,202,236,12,39,16,15,244,19,222,197,43,239,46,43,
253,236,222,212,7,35,251,39,4,20,224,224,241,250,14,5,37,61,242,196,17,202,238,13,15,50,38,252,218,225,
234,8,254,50,35,227,250,226,6,252,15,22,237,234,37,251,236,249,20,18,240,22,246,248,0,0,239,243,17,13,
25,253,253,236,241,45,244,222,248,15,22,25,255,241,249,237,252,23,21,238,242,2,6,240,7,23,25,34,233,223,
194,201,45,76,40,252,250,234,245,250,236,225,40,35,253,16,9,233,238,207,235,42,37,59,15,239,240,178,191,9,
61,81,46,213,222,233,240,1,238,10,16,27,44,10,215,212,240,33,7,6,2,27,253,214,217,229,55,63,29,14,
231,204,201,240,17,41,26,27,34,237,182,211,23,53,21,13,0,221,230,244,255,2,27,17,14,21,246,249,227,218,
5,20,30,36,3,229,218,224,0,24,32,50,243,214,1,250,240,254,7,27,42,14,228,206,238,0,1,21,38,8,
242,227,253,20,0,6,12,241,244,23,2,243,14,245,242,243,9,22,6,6,230,233,33,11,244,24,20,234,230,241,
22,5,239,9,6,37,11,212,223,251,10,245,11,63,43,223,214,240,3,39,248,231,241,1,0,1,32,29,10,232,
220,252,0,0,125,0,2,0,17,0,158,0,220,1,180,5,166,9,103,12,96,14,162,26,125,21,25,43,26,25,
25,22,6,6,153,115,128,120,120,120,165,135,135,44,45,70,130,53,0,0,0,0,40,0,0,0,0,50,124,182,
40,53,0,191,197,24,223,182,176,250,125,182,17,0,184,0,160,2,176,4,40,10,234,11,96,14,224,27,0,15,
40,32,16,20,16,12,4,0,70,175,150,120,120,120,85,130,187,44,45,70,130,53,0,0,0,0,40,0,0,0,
0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,60,0,2,0,1,0,252,0,90,2,230,5,20,10,
169,12,184,14,96,28,60,13,27,28,29,28,20,22,8,3,193,136,140,120,120,120,135,180,150,44,45,70,130,53,
0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,17,0,184,0,160,2,
176,4,40,10,234,11,96,14,224,27,0,15,40,32,16,20,16,12,4,0,70,175,150,120,120,120,85,130,187,44,
45,70,130,53,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,65,0,
2,0,17,0,220,0,110,2,56,4,180,10,13,12,66,14,248,27,65,11,23,26,26,16,20,16,5,3,164,157,
128,120,120,120,105,185,148,44,45,70,130,53,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,
223,182,176,250,125,182,17,0,184,0,160,2,176,4,40,10,234,11,96,14,224,27,0,15,40,32,16,20,16,12,
4,0,70,175,150,120,120,120,85,130,187,44,45,70,130,53,0,0,0,0,40,0,0,0,0,0,0,0,24,53,
0,191,197,254,124,182,1,250,0,0,95,0,3,0,5,0,63,1,182,2,80,5,64,10,139,13,33,15,96,28,
80,45,45,48,68,35,38,25,11,5,221,135,155,120,120,120,150,180,150,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,37,0,205,0,164,2,200,4,44,10,41,12,
125,14,244,27,15,17,37,31,23,20,18,13,4,0,154,139,127,120,120,120,150,180,150,44,45,70,130,56,0,0,
0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,37,0,184,0,160,2,176,4,
40,10,234,11,96,14,224,27,0,15,40,32,16,20,16,12,4,0,70,175,150,120,120,120,85,130,187,44,45,70,
130,53,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,95,0,3,0,
5,0,184,0,136,1,188,2,160,10,88,12,176,14,159,27,80,46,31,46,57,25,36,20,10,5,177,100,131,120,
120,120,105,135,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,
176,250,125,182,37,0,184,0,160,2,176,4,40,10,234,11,96,14,224,27,15,11,34,27,13,17,13,10,3,0,
70,175,150,120,120,120,85,130,187,44,45,70,130,53,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,
197,254,124,182,1,250,0,0,37,0,184,0,160,2,176,4,40,10,234,11,96,14,224,27,0,18,40,32,16,20,
16,12,4,0,142,140,122,120,120,120,172,110,152,44,45,70,130,53,0,0,0,0,40,0,0,0,0,250,222,182,
49,229,0,182,8,0,0,0,1,250,0,0,90,0,2,0,17,0,150,0,60,2,41,5,166,9,83,12,106,14,
160,27,90,13,28,26,29,22,17,19,9,4,155,145,128,120,120,120,197,120,120,44,45,70,130,53,0,0,0,0,
40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,17,0,184,0,160,2,176,4,40,10,
234,11,96,14,224,27,0,15,40,32,16,20,16,12,4,0,70,175,150,120,120,120,85,130,187,44,45,70,130,53,
0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,65,0,2,0,17,0,
236,0,226,2,236,4,90,10,173,12,144,14,0,28,65,16,26,32,28,23,16,16,7,3,180,147,113,120,120,120,
247,170,165,44,45,70,130,53,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,
125,182,17,0,184,0,160,2,176,4,40,10,234,11,96,14,224,27,0,15,40,32,16,20,16,12,4,0,70,175,
150,120,120,120,85,130,187,44,45,70,130,53,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,
124,182,1,250,0,0,70,0,2,0,1,0,172,0,68,2,59,6,10,10,123,12,99,14,48,28,70,32,35,50,
44,46,36,26,9,4,163,126,125,120,120,120,185,117,127,44,45,70,130,53,0,0,0,0,40,0,0,0,0,50,
124,182,40,53,0,191,197,24,223,182,176,250,125,182,17,0,184,0,160,2,176,4,40,10,234,11,96,14,224,27,
0,15,40,32,16,20,16,12,4,0,70,175,150,120,120,120,85,130,187,44,45,70,130,53,0,0,0,0,40,0,
0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,50,0,2,0,17,0,178,0,214,1,192,6,
255,10,173,12,115,15,133,27,50,21,18,40,33,35,33,17,10,4,162,130,127,126,131,140,187,125,137,44,45,70,
130,53,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,17,0,184,0,
160,2,176,4,40,10,234,11,96,14,224,27,0,15,40,32,16,20,16,12,4,0,70,175,150,120,120,120,85,130,
187,44,45,70,130,53,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,
40,0,2,0,17,0,172,0,70,2,26,4,0,10,199,11,119,14,128,27,40,25,29,40,46,33,28,15,10,3,
153,137,136,120,120,120,165,135,135,44,45,70,130,53,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,
197,24,223,182,176,250,125,182,17,0,184,0,160,2,176,4,40,10,234,11,96,14,224,27,0,15,40,32,16,20,
16,12,4,0,70,175,150,120,120,120,85,130,187,44,45,70,130,53,0,0,0,0,40,0,0,0,0,0,0,0,
24,53,0,191,197,254,124,182,1,250,0,0,50,0,2,0,17,0,180,0,214,1,242,3,176,9,123,12,206,14,
56,27,50,14,14,37,23,18,15,19,7,3,160,132,112,120,120,120,177,125,117,44,45,70,130,53,0,0,0,0,
40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,17,0,184,0,160,2,176,4,40,10,
234,11,96,14,224,27,0,15,40,32,16,20,16,12,4,0,70,175,150,120,120,120,85,130,187,44,45,70,130,53,
0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,74,0,2,0,37,0,
184,0,160,2,176,4,40,10,234,11,96,14,224,27,75,15,40,32,16,20,16,12,4,0,70,175,150,120,120,120,
85,130,187,44,45,70,130,53,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,
125,182,1,0,64,1,72,2,28,7,0,10,104,13,15,15,224,28,0,34,26,48,51,47,36,27,9,5,244,132,
159,120,120,120,135,180,150,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,
124,182,1,250,0,0,74,0,2,0,37,0,184,0,160,2,176,4,40,10,234,11,96,14,224,27,75,15,40,32,
16,20,16,12,4,0,70,175,150,120,120,120,85,130,187,44,45,70,130,53,0,0,0,0,40,0,0,0,0,50,
124,182,40,53,0,191,197,24,223,182,176,250,125,182,1,0,128,0,40,2,161,5,96,9,188,12,116,14,96,27,
0,36,28,51,63,35,32,28,14,8,167,150,135,120,120,120,197,120,120,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,75,0,2,0,37,0,184,0,160,2,176,4,
40,10,234,11,96,14,224,27,75,15,40,32,16,20,16,12,4,0,70,175,150,120,120,120,85,130,187,44,45,70,
130,53,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,1,0,0,1,
112,2,192,3,64,11,48,12,36,14,15,28,0,42,25,48,48,20,40,23,6,5,186,175,135,120,120,120,105,185,
148,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,
75,0,2,0,37,0,184,0,160,2,176,4,40,10,234,11,96,14,224,27,75,15,40,32,16,20,16,12,4,0,
70,175,150,120,120,120,85,130,187,44,45,70,130,53,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,
197,24,223,182,176,250,125,182,1,0,63,1,182,2,80,5,64,10,139,13,33,15,96,28,0,45,45,48,68,35,
38,25,11,5,221,135,155,120,120,120,150,180,150,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,
24,53,0,191,197,254,124,182,1,250,0,0,74,0,2,0,37,0,184,0,160,2,176,4,40,10,234,11,96,14,
224,27,75,15,40,32,16,20,16,12,4,0,70,175,150,120,120,120,85,130,187,44,45,70,130,53,0,0,0,0,
40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,1,0,132,0,24,1,184,6,36,9,
228,12,96,14,100,25,0,67,24,76,51,44,48,44,12,16,167,90,135,120,120,120,167,135,135,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,74,0,2,0,37,0,
184,0,160,2,176,4,40,10,234,11,96,14,224,27,75,15,40,32,16,20,16,12,4,0,70,175,150,120,120,120,
85,130,187,44,45,70,130,53,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,
125,182,1,0,192,0,179,1,92,3,252,8,184,11,60,15,32,28,0,43,19,81,28,14,11,8,7,0,120,82,
90,120,120,120,75,82,90,44,45,70,130,53,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,
124,182,1,250,0,0,75,0,2,0,37,0,184,0,160,2,176,4,40,10,234,11,96,14,224,27,75,15,40,32,
16,20,16,12,4,0,70,175,150,120,120,120,85,130,187,44,45,70,130,53,0,0,0,0,40,0,0,0,0,50,
124,182,40,53,0,191,197,24,223,182,176,250,125,182,1,0,184,0,136,1,188,2,160,10,88,12,176,14,159,27,
0,46,31,46,57,25,36,20,10,5,177,100,131,120,120,120,105,135,135,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,100,0,2,0,37,0,184,0,160,2,176,4,
40,10,234,11,96,14,224,27,100,15,40,32,16,20,16,12,4,0,70,175,150,150,150,120,85,130,187,44,45,70,
130,53,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,1,0,156,0,
99,1,174,8,160,10,92,13,10,15,32,28,0,21,25,39,40,37,30,20,7,6,167,90,135,120,120,120,122,120,
120,44,45,70,130,57,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,
74,0,2,0,37,0,184,0,160,2,176,4,40,10,234,11,96,14,224,27,75,15,40,32,16,20,16,12,4,0,
70,175,150,120,120,120,85,130,187,44,45,70,130,53,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,
197,24,223,182,176,250,125,182,1,0,112,0,13,2,161,5,36,9,188,12,116,14,96,27,0,60,34,66,80,45,
47,36,18,8,167,150,135,120,120,120,197,120,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,
24,53,0,191,197,254,124,182,1,250,0,0,75,0,2,0,37,0,184,0,160,2,176,4,40,10,234,11,96,14,
224,27,75,15,40,32,16,20,16,12,4,0,70,175,150,120,120,120,85,130,187,44,45,70,130,53,0,0,0,0,
40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,1,0,32,1,88,3,40,5,140,10,
112,13,191,14,32,28,0,53,31,69,57,42,31,19,9,4,217,155,105,120,120,120,247,170,165,44,65,75,130,54,
0,0,0,0,50,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,74,0,2,0,37,0,
184,0,160,2,176,4,40,10,234,11,96,14,224,27,75,15,40,32,16,20,16,12,4,0,70,175,150,120,120,120,
85,130,187,44,45,70,130,53,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,
125,182,1,0,160,0,232,1,198,7,236,9,12,13,101,14,128,28,0,41,27,56,59,58,46,34,11,7,185,112,
127,120,120,120,185,117,127,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,
124,182,1,250,0,0,100,0,2,0,37,0,184,0,160,2,176,4,40,10,234,11,96,14,224,27,100,15,40,32,
16,20,16,12,4,0,70,175,150,120,120,120,85,130,187,44,45,70,130,53,0,0,0,0,40,0,0,0,0,50,
124,182,40,53,0,191,197,24,223,182,176,250,125,182,1,0,172,0,64,1,207,8,214,11,112,13,134,16,42,27,
0,27,6,49,41,38,41,19,12,6,182,120,133,133,142,161,187,125,137,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,74,0,2,0,37,0,184,0,160,2,176,4,
40,10,234,11,96,14,224,27,75,15,40,32,16,20,16,12,4,0,70,175,150,120,120,120,85,130,187,44,45,70,
130,53,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,1,0,153,0,
156,1,248,2,120,10,148,12,176,14,244,26,0,35,17,52,37,27,30,22,12,5,165,126,145,120,120,120,165,115,
130,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,
74,0,2,0,37,0,184,0,160,2,176,4,40,10,234,11,96,14,224,27,75,15,40,32,16,20,16,12,4,0,
70,175,150,120,120,120,85,130,187,44,45,70,130,53,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,
197,24,223,182,176,250,125,182,1,0,176,0,64,1,52,3,56,9,12,13,60,15,144,26,0,35,6,61,36,21,
21,30,12,7,177,125,102,120,120,120,177,125,117,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,
24,53,0,191,197,254,124,182,1,250,0,0,12,0,2,0,1,0,184,0,160,2,176,4,40,10,234,11,96,14,
224,27,12,15,40,32,16,20,16,12,4,0,70,175,150,120,120,120,85,130,187,44,45,70,130,53,0,0,0,0,
40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,1,0,184,0,160,2,176,4,40,10,
234,11,96,14,224,27,0,15,40,32,16,20,16,12,4,0,70,175,150,120,120,120,85,130,187,44,45,70,130,53,
0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,60,0,3,0,5,0,
200,0,160,2,176,4,40,10,84,11,96,14,224,27,30,2,16,12,9,12,9,12,4,0,150,175,175,120,120,120,
100,125,125,44,45,70,130,40,0,25,0,0,50,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,
125,182,5,0,200,0,160,2,176,4,40,10,234,11,96,14,224,27,30,4,17,18,11,14,11,15,4,0,150,175,
175,120,120,120,100,125,125,44,45,70,130,48,0,25,0,0,45,0,0,0,0,0,0,0,24,53,0,191,197,254,
124,182,1,250,0,0,1,0,200,0,160,2,176,4,40,10,28,12,96,14,224,27,0,5,16,23,13,15,12,16,
5,0,150,175,175,120,120,120,100,125,125,44,45,70,130,48,0,20,0,0,40,0,0,0,0,250,222,182,49,229,
0,182,8,0,0,0,1,250,0,0,55,0,2,0,5,0,200,0,160,2,176,4,40,10,234,11,96,14,224,27,
55,5,16,23,12,15,12,16,5,0,150,175,175,120,120,120,100,125,125,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,1,0,200,0,160,2,176,4,40,10,234,11,
96,14,224,27,0,5,16,23,12,15,12,16,5,0,150,175,175,120,120,120,100,125,125,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,90,0,2,0,17,0,116,0,
13,2,161,5,36,9,188,12,116,14,96,27,90,21,28,36,46,24,22,28,14,8,167,150,135,120,120,120,197,120,
120,44,45,70,130,55,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,
17,0,184,0,108,2,176,4,40,10,234,11,96,14,224,27,0,10,35,20,15,25,15,12,5,0,70,175,150,150,
150,120,85,130,187,44,45,70,130,53,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,
1,250,0,0,65,0,2,0,17,0,32,1,88,3,40,5,140,10,112,13,191,14,32,28,65,35,32,53,48,31,
24,25,12,6,217,155,105,120,120,120,247,170,165,44,65,75,130,53,0,0,0,0,50,0,0,0,0,50,124,182,
40,53,0,191,197,24,223,182,176,250,125,182,17,0,184,0,108,2,176,4,40,10,234,11,96,14,224,27,0,10,
35,20,15,25,15,12,5,0,70,175,150,150,150,120,85,130,187,44,45,70,130,53,0,0,0,0,40,0,0,0,
0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,60,0,2,0,1,0,64,1,72,2,28,7,0,10,
104,13,15,15,224,28,60,31,31,43,49,39,30,38,12,7,244,132,159,120,120,120,135,180,150,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,17,0,184,0,108,2,
176,4,40,10,234,11,96,14,224,27,0,10,35,20,15,25,15,12,5,0,70,175,150,150,150,120,85,130,187,44,
45,70,130,53,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,50,0,
2,0,17,0,172,0,64,1,207,8,214,11,112,13,134,16,42,27,50,47,8,65,54,50,54,25,16,8,182,120,
133,133,142,161,187,125,137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,
223,182,176,250,125,182,17,0,184,0,108,2,176,4,40,10,234,11,96,14,224,27,0,10,35,20,15,25,15,12,
5,0,70,175,150,150,150,120,85,130,187,44,45,70,130,53,0,0,0,0,40,0,0,0,0,0,0,0,24,53,
0,191,197,254,124,182,1,250,0,0,40,0,2,0,17,0,160,0,32,2,132,3,216,9,164,11,141,14,32,27,
40,87,34,66,84,51,46,23,17,6,165,135,150,120,120,120,165,135,135,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,17,0,184,0,108,2,176,4,40,10,234,11,
96,14,224,27,0,10,35,20,15,25,15,12,5,0,70,175,150,150,150,120,85,130,187,44,45,70,130,53,0,0,
0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,50,0,2,0,17,0,176,0,
64,1,52,3,56,9,12,13,60,15,144,26,50,36,6,62,37,21,21,31,12,7,177,125,102,120,120,120,177,125,
117,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,
17,0,184,0,108,2,176,4,40,10,234,11,96,14,224,27,0,10,35,20,15,25,15,12,5,0,70,175,150,150,
150,120,85,130,187,44,45,70,130,53,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,
1,250,0,0,40,0,2,0,17,0,132,0,24,1,184,6,36,9,228,12,96,14,100,25,40,43,19,60,40,35,
38,35,9,12,167,90,135,120,120,120,167,135,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,
40,53,0,191,197,24,223,182,176,250,125,182,17,0,184,0,108,2,176,4,40,10,234,11,96,14,224,27,0,10,
35,20,15,25,15,12,5,0,70,175,150,150,150,120,85,130,187,44,45,70,130,53,0,0,0,0,40,0,0,0,
0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,47,0,3,0,37,0,184,0,108,2,176,4,40,10,
234,11,96,14,224,27,27,6,28,16,12,20,12,10,5,0,70,175,150,150,150,120,85,130,187,44,45,70,130,53,
0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,37,0,172,0,134,2,
176,4,80,10,234,11,96,14,224,27,20,9,34,12,12,23,10,9,6,0,106,157,136,135,135,120,85,130,187,44,
45,70,130,53,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,
160,0,160,2,176,4,120,10,234,11,96,14,224,27,0,6,27,6,9,18,6,6,6,0,142,140,122,120,120,120,
172,110,152,44,45,70,130,53,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,
0,0,45,0,2,0,37,0,184,0,108,2,176,4,40,10,234,11,96,14,224,27,45,10,35,20,15,25,15,12,
5,0,70,175,150,150,150,120,85,130,187,44,45,70,130,53,0,0,0,0,40,0,0,0,0,50,124,182,40,53,
0,191,197,24,223,182,176,250,125,182,1,0,184,0,108,2,176,4,40,10,234,11,96,14,224,27,0,4,22,13,
9,16,9,7,3,0,70,175,150,150,150,120,85,130,187,44,45,70,130,53,0,0,0,0,40,0,0,0,0,0,
0,0,24,53,0,191,197,254,124,182,1,250,0,0,47,0,4,0,1,0,184,0,160,2,176,4,40,10,234,11,
96,14,224,27,7,5,27,12,20,10,4,4,2,0,70,175,150,150,150,120,85,130,137,44,35,50,60,53,0,0,
0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,1,0,184,0,160,2,176,4,
40,10,234,11,96,14,224,27,20,9,32,21,21,13,6,5,2,0,70,175,150,150,150,120,85,130,187,44,45,70,
130,53,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,184,0,
160,2,176,4,40,10,234,11,96,14,224,27,20,11,35,26,18,16,10,8,2,0,70,175,150,150,150,120,85,130,
187,44,45,70,130,53,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,
1,0,184,0,160,2,176,4,40,10,234,11,96,14,224,27,0,12,37,27,19,17,11,9,3,0,70,175,150,150,
150,120,85,130,187,44,45,70,130,53,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,
64,250,23,8,45,0,4,0,1,0,160,0,160,2,76,4,40,10,234,11,96,14,224,27,5,21,47,38,19,24,
15,11,4,0,70,175,150,150,150,120,85,130,187,44,45,70,130,53,0,0,0,0,40,0,0,0,0,50,124,182,
40,53,0,191,197,24,223,182,176,250,125,182,1,0,172,0,160,2,126,4,40,10,234,11,96,14,224,27,35,20,
42,34,17,21,15,11,3,0,142,140,122,120,120,120,172,110,152,44,45,70,130,53,0,0,0,0,40,0,0,0,
0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,184,0,160,2,176,4,40,10,234,11,96,14,
224,27,5,15,40,32,16,20,16,12,4,0,70,175,150,120,120,120,85,130,187,44,45,70,130,53,0,0,0,0,
40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,184,0,160,2,176,4,40,10,
234,11,96,14,224,27,0,15,40,32,16,20,16,12,4,0,70,175,150,120,120,120,85,130,187,44,45,70,130,53,
0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,45,0,2,0,5,0,
148,0,120,1,100,5,84,11,32,13,135,15,224,28,45,35,32,58,36,40,51,27,10,0,102,105,127,120,120,120,
102,90,127,44,45,70,130,52,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,
125,182,1,0,124,0,209,1,112,3,84,11,68,12,191,14,160,26,0,66,26,78,70,48,48,30,17,0,120,120,
120,120,120,120,75,120,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,
124,182,1,250,0,0,0,0,2,0,5,0,98,0,106,1,230,5,60,10,12,13,37,15,114,26,75,20,14,45,
29,19,17,16,9,8,155,112,127,120,120,120,160,135,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,
124,182,40,53,0,191,197,24,223,182,176,250,125,182,17,0,64,0,189,1,20,5,84,11,52,13,235,15,128,27,
0,18,16,48,32,17,11,10,7,0,150,135,120,120,120,120,120,60,120,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,140,0,3,0,1,0,115,0,200,1,180,5,
122,9,200,12,179,14,96,27,50,42,26,54,67,41,43,34,16,6,167,134,130,120,120,120,197,120,120,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,115,0,
200,1,180,5,122,9,200,12,179,14,96,27,90,74,35,72,89,54,57,44,22,8,167,134,130,120,120,120,197,120,
120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,
1,0,115,0,200,1,180,5,122,9,200,12,179,14,96,27,0,38,25,51,64,39,41,32,16,6,167,134,130,120,
120,120,197,120,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,
1,250,0,0,175,0,4,0,1,0,32,1,88,3,40,5,140,10,112,13,191,14,32,28,45,53,31,69,57,41,
31,19,9,4,217,155,105,120,120,120,247,170,165,44,65,75,130,54,0,0,0,0,50,0,0,0,0,50,124,182,
40,53,0,191,197,24,223,182,176,250,125,182,3,0,32,1,88,3,40,5,140,10,112,13,191,14,32,28,50,96,
42,93,77,56,42,26,12,6,217,155,105,120,120,120,247,170,165,44,65,75,130,54,0,0,0,0,50,0,0,0,
0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,32,1,88,3,40,5,140,10,112,13,191,14,
32,28,80,78,38,84,69,51,37,24,11,5,217,155,105,120,120,120,247,170,165,44,65,75,130,54,0,0,0,0,
50,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,32,1,88,3,40,5,140,10,
112,13,191,14,32,28,0,43,28,62,52,37,28,17,8,4,217,155,105,120,120,120,247,170,165,44,65,75,130,54,
0,0,0,0,50,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,0,0,4,0,33,0,
156,0,99,1,174,8,160,10,92,13,10,15,32,28,52,21,24,39,39,36,29,19,7,6,167,90,135,120,120,120,
122,120,120,44,45,70,130,57,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,
125,182,3,0,156,0,99,1,174,8,160,10,92,13,10,15,32,28,75,29,29,46,47,43,35,23,8,7,167,90,
135,120,120,120,122,120,120,44,45,70,130,57,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,
124,182,1,250,0,0,1,0,156,0,99,1,174,8,160,10,92,13,10,15,32,28,70,23,26,41,42,38,31,21,
7,7,167,90,135,120,120,120,122,120,120,44,45,70,130,57,0,0,0,0,40,0,0,0,0,250,222,182,49,229,
0,182,8,0,0,0,1,250,0,0,1,0,156,0,99,1,174,8,160,10,92,13,10,15,32,28,0,25,27,43,
44,40,33,22,8,7,167,90,135,120,120,120,122,120,120,44,45,70,130,57,0,0,0,0,40,0,0,0,0,250,
222,182,0,0,0,0,188,40,60,182,64,250,23,8,220,0,5,0,1,0,153,0,156,1,248,2,120,10,148,12,
176,14,244,26,50,44,11,61,43,32,35,26,14,6,165,126,145,120,120,120,165,115,130,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,153,0,156,1,248,2,
120,10,148,12,176,14,244,26,90,75,15,79,57,41,46,34,19,8,165,126,145,120,120,120,165,115,130,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,153,0,
156,1,248,2,120,10,148,12,176,14,244,26,50,60,13,71,51,37,41,30,17,7,165,126,145,120,120,120,165,115,
130,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,
1,0,153,0,156,1,248,2,120,10,148,12,176,14,244,26,30,50,12,65,46,34,38,28,15,7,165,126,145,120,
120,120,165,115,130,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,
64,250,23,8,1,0,153,0,156,1,248,2,120,10,148,12,176,14,244,26,0,29,9,50,35,26,29,21,11,5,
165,126,145,120,120,120,165,115,130,44,45,70,130,59,0,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,
77,60,59,182,64,250,23,8,175,0,4,0,1,0,160,0,32,2,132,3,216,9,164,11,141,14,32,27,45,41,
23,45,58,35,32,16,11,4,165,135,150,120,120,120,165,135,135,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,160,0,32,2,132,3,216,9,164,11,141,14,
32,27,50,75,32,61,78,47,43,21,16,6,165,135,150,120,120,120,165,135,135,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,160,0,32,2,132,3,216,9,
164,11,141,14,32,27,80,61,29,55,70,43,39,19,14,5,165,135,150,120,120,120,165,135,135,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,160,0,32,2,
132,3,216,9,164,11,141,14,32,27,0,34,21,41,52,32,29,14,10,4,165,135,150,120,120,120,165,135,135,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,71,0,
3,0,5,0,192,0,179,1,92,3,252,8,184,11,60,15,32,28,26,43,19,81,28,14,11,8,7,0,120,82,
90,120,120,120,75,82,90,44,45,70,130,53,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,
223,182,176,250,125,182,5,0,208,0,199,1,132,3,16,9,184,11,60,15,32,28,45,62,31,81,61,30,24,15,
8,0,120,120,150,120,120,120,75,90,105,44,45,70,130,55,0,0,0,0,40,0,0,0,0,0,0,0,24,53,
0,191,197,254,124,182,1,250,0,0,1,0,32,1,88,3,40,5,140,10,112,13,191,14,32,28,0,53,31,69,
57,42,31,19,9,4,217,155,105,120,120,120,247,170,165,44,65,75,130,54,0,0,0,0,50,0,0,0,0,250,
222,182,49,229,0,182,8,0,0,0,1,250,0,0,180,0,5,0,1,0,63,1,182,2,80,5,64,10,139,13,
33,15,96,28,50,36,40,43,61,31,34,23,9,5,221,135,155,120,120,120,150,180,150,44,45,70,130,59,160,0,
0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,63,1,182,2,80,5,
64,10,139,13,33,15,96,28,40,67,54,58,82,43,46,31,13,7,221,135,155,120,120,120,150,180,150,44,45,70,
130,59,165,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,63,1,
182,2,80,5,64,10,139,13,33,15,96,28,50,54,49,52,74,38,42,28,12,6,221,135,155,120,120,120,150,180,
150,44,45,70,130,59,175,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,
1,0,63,1,182,2,80,5,64,10,139,13,33,15,96,28,40,48,46,49,70,36,39,26,11,6,221,135,155,120,
120,120,150,180,150,44,45,70,130,59,175,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,
64,250,23,8,1,0,63,1,182,2,80,5,64,10,139,13,33,15,96,28,0,21,30,32,46,24,26,17,7,4,
221,135,155,120,120,120,150,180,150,44,45,70,130,59,175,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,
77,60,59,182,64,250,23,8,200,0,5,0,1,0,184,0,88,1,188,2,60,10,88,12,176,14,159,27,50,37,
28,41,51,15,25,18,9,5,177,100,131,120,120,120,105,135,135,44,45,70,130,60,155,0,0,0,40,0,0,0,
0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,184,0,88,1,188,2,60,10,88,12,176,14,
159,27,50,58,35,51,64,19,32,22,12,6,177,100,131,120,120,120,105,135,135,44,45,70,130,60,160,0,0,0,
40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,184,0,88,1,188,2,60,10,
88,12,176,14,159,27,50,58,35,51,64,19,32,22,12,6,177,100,131,120,120,120,105,135,135,44,45,70,130,60,
165,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,184,0,88,1,
188,2,60,10,88,12,176,14,159,27,50,51,33,48,61,18,30,21,11,6,177,100,131,120,120,120,105,135,135,44,
45,70,130,60,165,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,1,0,
184,0,88,1,188,2,60,10,88,12,176,14,159,27,0,37,28,41,51,15,25,18,9,5,177,100,131,120,120,120,
105,135,135,44,45,70,130,60,165,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,64,250,
23,8,58,0,3,0,5,0,116,0,200,0,26,4,102,8,232,13,24,16,124,21,48,10,21,12,8,4,4,4,
0,0,200,212,187,255,255,175,200,212,187,44,30,55,65,50,0,0,0,0,60,0,0,0,0,50,124,182,40,53,
0,191,197,24,223,182,176,250,125,182,1,0,116,0,216,0,251,4,202,8,102,13,24,16,124,21,10,12,20,16,
10,6,4,4,0,0,200,212,187,255,255,175,200,212,187,44,30,55,65,50,0,0,0,0,60,0,0,0,0,0,
0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,184,0,160,2,176,4,40,10,234,11,96,14,224,27,
0,15,40,32,16,20,16,12,4,0,70,175,150,120,120,120,85,130,187,44,45,70,130,53,0,0,0,0,40,0,
0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,35,0,2,0,5,0,116,0,232,0,252,3,
60,10,232,13,24,16,124,21,35,8,16,14,4,2,2,2,0,0,200,212,187,255,255,175,200,212,187,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,1,0,184,0,
160,2,176,4,40,10,234,11,96,14,224,27,0,4,22,17,8,11,8,6,2,0,70,175,150,120,120,120,85,130,
187,44,45,70,130,53,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,
58,0,3,0,5,0,116,0,208,0,104,6,40,10,232,13,24,16,124,21,48,7,12,16,8,4,4,4,0,0,
200,212,187,255,255,175,200,212,187,44,30,50,85,50,0,0,0,0,60,0,0,0,0,50,124,182,40,53,0,191,
197,24,223,182,176,250,125,182,1,0,126,0,212,0,34,6,171,9,102,13,24,16,124,21,10,10,16,18,10,6,
4,4,0,0,200,212,187,255,255,175,200,212,187,44,30,50,85,50,0,0,0,0,60,0,0,0,0,0,0,0,
24,53,0,191,197,254,124,182,1,250,0,0,1,0,136,0,216,0,220,5,46,9,228,12,24,16,124,21,0,15,
20,20,12,8,4,4,0,0,200,212,187,255,255,175,200,212,187,44,30,50,85,54,0,0,0,0,40,0,0,0,
0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,58,0,3,0,5,0,116,0,200,0,208,7,34,11,
232,13,24,16,124,21,48,11,22,13,9,4,4,4,0,0,200,212,187,255,255,175,200,212,187,44,30,75,140,48,
0,0,0,0,60,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,1,0,116,0,200,0,
214,6,40,10,102,13,24,16,124,21,10,12,20,16,10,6,4,4,0,0,200,212,187,255,255,175,200,212,187,44,
30,75,140,48,0,0,0,0,60,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,
116,0,200,0,220,5,46,9,228,12,24,16,124,21,0,12,18,18,10,7,3,3,0,0,200,212,187,255,255,175,
200,212,187,44,30,50,85,54,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,
0,0,35,0,3,0,5,0,116,0,200,0,198,7,34,11,232,13,24,16,124,21,20,10,19,19,7,3,3,3,
0,0,100,150,150,150,150,150,100,150,150,44,30,75,140,56,0,0,0,0,40,0,0,0,0,50,124,182,40,53,
0,191,197,24,223,182,176,250,125,182,1,0,150,0,180,1,59,6,165,10,233,12,60,15,174,24,15,11,28,24,
11,11,9,7,1,0,85,162,150,135,135,135,100,150,150,44,30,50,85,54,0,0,0,0,40,0,0,0,0,0,
0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,184,0,160,2,176,4,40,10,234,11,96,14,224,27,
0,15,40,32,16,20,16,12,4,0,70,175,150,120,120,120,85,130,187,44,45,70,130,53,0,0,0,0,40,0,
0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,188,2,51,0,255,0,0,1,0,2,2,5,
3,6,5,8,5,8,2,0,197,190,230,30,57,50,29,11,254,227,221,233,4,27,27,14,254,235,231,234,243,254,
14,25,22,11,3,250,246,245,249,2,8,11,10,5,0,247,251,248,250,1,1,2,3,255,7,251,250,249,246,6,
9,17,21,18,14,14,14,16,217,147,162,234,65,82,67,26,6,228,208,211,245,23,42,52,46,4,203,170,192,245,
35,57,45,26,9,236,231,212,239,3,20,34,34,12,244,221,213,247,5,23,34,25,13,9,245,243,196,218,233,25,
56,34,23,246,229,224,245,2,20,23,29,16,251,231,236,228,244,3,16,26,12,252,0,239,253,239,10,15,16,4,
4,253,245,250,247,6,9,255,18,0,246,250,236,11,14,12,240,242,250,249,16,16,2,250,0,1,13,14,11,23,
252,235,212,208,241,14,34,37,31,16,254,229,215,230,244,249,34,47,61,25,234,208,221,238,2,225,248,49,55,24,
235,198,230,251,8,27,20,20,18,3,238,243,242,255,1,252,13,13,0,235,243,3,254,253,254,13,15,12,0,249,
3,3,254,18,15,8,254,208,217,227,254,40,27,23,15,0,251,240,242,4,6,14,16,1,250,230,228,240,0,15,
26,21,8,250,254,255,252,252,3,4,17,15,253,246,219,232,1,12,12,10,255,255,253,249,255,2,13,22,0,59,
23,15,0,202,131,161,242,60,99,41,39,0,245,220,219,248,17,65,81,15,197,157,184,227,24,67,64,44,233,204,
227,244,241,31,44,46,20,253,233,202,206,235,26,66,33,13,239,212,218,234,28,26,24,21,4,253,236,219,246,0,
6,35,34,25,240,234,230,235,239,242,13,39,46,30,0,225,190,215,12,36,38,23,253,241,248,3,0,247,233,236,
14,34,32,6,247,228,235,0,8,10,0,246,0,19,16,4,250,239,237,249,14,13,9,6,252,6,3,251,236,242,
244,1,27,27,17,7,243,238,239,239,252,1,22,21,16,12,233,236,246,247,5,8,3,16,18,14,4,235,227,227,
253,21,26,23,7,247,240,245,236,0,6,0,32,8,16,0,237,247,232,3,11,23,6,230,250,253,9,16,3,0,
241,1,253,13,252,244,23,15,2,248,230,240,2,6,20,24,4,1,244,226,254,236,8,27,4,15,9,250,240,238,
247,28,30,20,245,216,223,242,12,27,31,14,252,247,239,242,252,0,32,19,5,253,232,220,242,16,30,35,8,249,
229,226,250,18,39,21,235,226,223,234,26,52,50,13,223,202,216,252,37,35,13,247,238,11,20,2,236,218,229,8,
42,51,24,238,214,223,250,14,21,11,255,250,3,12,6,249,242,242,255,10,9,10,3,250,254,254,0,1,0,1,
255,252,1,7,8,7,254,246,245,248,3,12,10,0,255,250,0,11,2,253,244,245,2,15,16,12,245,240,242,251,
15,11,7,252,0,5,6,254,246,242,253,12,12,6,249,247,251,4,7,8,0,250,254,5,0,5,3,247,7,253,
255,0,242,252,0,14,16,0,249,0,253,6,10,252,251,253,255,6,7,249,249,252,1,7,9,6,244,247,249,3,
13,6,125,0,3,0,5,0,236,0,124,1,12,7,236,9,172,13,160,15,0,27,65,23,53,41,25,16,13,16,
8,0,132,60,90,120,120,120,42,135,105,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,
0,191,197,24,223,182,176,250,125,182,5,0,236,0,124,1,12,7,236,9,172,13,160,15,0,27,60,23,53,41,
25,16,13,16,8,0,132,60,90,120,120,120,42,135,105,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,
0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,236,0,124,1,12,7,236,9,172,13,160,15,0,27,
0,13,42,29,18,11,9,11,6,0,132,60,90,120,120,120,42,135,105,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,136,2,15,0,32,20,44,55,14,36,37,12,
13,23,241,240,13,253,5,17,226,0,245,12,228,250,230,250,237,251,22,3,53,11,2,39,1,20,40,35,9,221,
25,18,17,227,252,27,247,0,51,28,29,37,34,30,48,18,30,63,55,54,252,61,66,33,52,35,69,52,75,53,
31,54,72,31,27,58,12,41,44,43,245,26,23,5,237,4,247,244,21,3,241,21,3,6,5,31,7,25,43,11,
36,64,37,82,41,21,47,36,40,21,51,64,13,18,59,22,49,255,17,45,30,21,23,18,15,32,25,22,226,19,
26,247,32,248,5,17,41,6,24,12,234,27,23,59,249,1,14,32,43,250,246,252,42,35,251,8,45,245,6,3,
5,7,40,226,18,30,0,243,22,251,3,57,50,230,235,89,9,234,62,14,240,82,68,216,7,20,16,10,247,21,
236,223,59,40,166,4,245,223,22,252,17,15,27,249,32,22,245,3,46,49,228,59,41,249,44,29,25,9,246,69,
241,36,25,7,0,18,47,217,248,0,241,32,46,251,238,24,67,28,230,35,31,47,13,41,85,0,14,72,239,57,
70,245,16,31,22,24,32,30,36,39,75,7,217,13,61,15,253,57,66,223,38,77,36,235,242,66,60,237,2,52,
8,48,25,208,61,45,234,227,12,68,202,242,97,227,252,94,216,240,50,255,4,252,41,235,18,81,235,17,251,64,
214,213,80,239,210,80,33,185,39,226,37,239,224,47,255,36,38,14,62,254,12,42,23,239,48,4,16,239,5,60,
245,68,221,240,54,234,212,22,22,16,253,95,49,146,20,89,202,10,102,228,243,84,26,248,22,78,235,224,38,37,
196,28,75,209,16,62,234,247,13,244,56,11,237,35,58,233,251,67,36,214,53,61,0,77,236,5,58,47,10,251,
11,42,0,224,14,10,21,241,20,50,28,203,238,72,60,12,250,18,53,1,14,30,238,41,60,255,253,41,29,236,
202,59,73,203,2,255,187,77,30,153,253,96,2,144,24,109,205,195,66,55,9,236,192,41,44,7,203,41,97,239,
215,252,69,53,244,226,85,95,183,208,72,64,242,231,245,32,51,235,10,252,49,11,161,64,78,240,248,16,72,52,
234,45,31,226,4,238,3,40,17,244,254,248,242,250,239,13,13,221,9,215,2,80,10,248,40,14,38,34,210,245,
34,253,7,7,70,13,215,13,34,47,230,218,68,51,8,36,236,10,50,183,6,0,187,20,28,215,234,6,245,53,
239,198,36,7,237,36,34,16,14,215,4,55,245,14,91,59,6,2,19,44,40,237,72,120,64,6,39,66,47,16,
14,71,57,19,252,23,13,9,70,25,200,11,18,233,230,36,51,29,65,45,18,249,8,7,237,41,26,250,72,87,
203,240,85,2,144,217,11,13,37,4,41,120,30,195,248,67,11,184,215,60,43,214,27,120,49,209,223,20,40,194,
173,246,53,20,253,23,249,1,249,213,3,0,0,44,0,0,0,0,126,127,0,114,117,34,0,131,117,12,34,0,
13,117,0,14,117,0,115,117,0,116,117,0,118,117,55,0,119,122,0,121,35,12,0,130,35,34,0,120,35,12,
0,140,35,57,0,148,35,57,131,34,0,147,35,57,131,34,0,138,35,58,0,149,35,58,13,0,153,113,0,122,
112,0,155,36,0,143,112,12,34,0,141,112,12,118,0,124,125,0,113,126,0,132,37,12,0,144,37,34,0,145,
37,12,34,0,134,127,0,133,127,12,0,152,39,0,135,127,34,0,136,127,34,0,142,127,57,0,139,128,0,154,
116,0,117,40,0,137,129,0,146,40,34,0,129,142,0,150,37,34,0,151,117,34,0,44,34,0,108,47,0,58,
133,0,0,0,0,0,0,0,0,0,180,0,5,0,1,0,63,1,160,2,124,6,64,10,139,13,33,15,96,28,
50,38,37,37,65,40,34,23,9,5,221,200,155,120,120,120,150,245,150,44,45,70,130,59,165,0,0,0,40,0,
0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,63,1,160,2,124,6,64,10,139,13,
33,15,96,28,40,70,50,50,89,54,46,31,13,7,221,200,155,120,120,120,150,245,150,44,45,70,130,59,175,0,
0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,63,1,160,2,124,6,
64,10,139,13,33,15,96,28,50,57,45,45,80,49,42,28,12,6,221,200,155,120,120,120,150,245,150,44,45,70,
130,59,185,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,63,1,
160,2,124,6,64,10,139,13,33,15,96,28,40,45,40,40,71,43,37,25,10,5,221,200,155,120,120,120,150,245,
150,44,45,70,130,59,185,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,
1,0,63,1,160,2,124,6,64,10,139,13,33,15,96,28,0,22,28,28,49,30,26,17,7,4,221,200,155,120,
120,120,150,245,150,44,45,70,130,59,185,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,
64,250,23,8,175,0,4,0,1,0,141,0,97,1,68,7,134,9,242,12,208,14,66,26,45,39,21,58,49,47,
48,27,11,7,167,100,124,120,120,120,167,90,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,
40,53,0,191,197,24,223,182,176,250,125,182,3,0,141,0,97,1,68,7,134,9,242,12,208,14,66,26,70,75,
29,81,68,66,66,38,15,10,167,100,124,120,120,120,167,90,120,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,141,0,97,1,68,7,134,9,242,12,208,14,
66,26,60,61,26,73,61,59,60,34,14,9,167,100,124,120,120,120,167,90,120,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,141,0,97,1,68,7,134,9,
242,12,208,14,66,26,0,34,20,55,46,45,45,26,10,7,167,100,124,120,120,120,167,90,120,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,215,0,5,0,1,0,
32,1,92,3,192,5,102,10,158,13,27,15,118,27,45,35,30,56,58,37,34,23,6,4,209,165,164,130,120,120,
167,105,165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,
125,182,3,0,32,1,92,3,192,5,102,10,158,13,27,15,118,27,60,74,44,82,84,54,49,34,9,6,209,165,
164,130,120,120,167,105,165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,
124,182,1,250,0,0,1,0,56,1,207,2,86,6,216,9,152,13,112,15,220,28,70,68,39,69,75,57,44,34,
12,7,255,144,161,120,120,120,237,165,165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,
0,182,8,0,0,0,1,250,0,0,1,0,6,1,50,2,45,7,223,9,77,13,225,14,189,28,40,48,32,52,
60,51,42,35,11,7,228,126,148,120,120,120,237,165,165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,
222,182,0,0,0,0,188,40,60,182,64,250,23,8,1,0,0,1,32,2,70,7,225,9,68,13,208,14,185,28,
0,31,25,41,48,41,34,29,9,6,224,124,146,120,120,120,237,165,165,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,40,60,182,40,54,0,191,77,60,59,182,64,250,23,8,105,0,4,0,1,0,116,0,13,2,161,5,
232,8,188,12,116,14,96,27,30,16,19,37,29,17,15,15,5,4,167,150,135,120,120,120,197,120,120,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,5,0,116,0,
13,2,161,5,232,8,188,12,116,14,96,27,45,19,22,41,33,19,17,17,6,4,167,150,135,120,120,120,197,120,
120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,
1,0,116,0,13,2,161,5,232,8,188,12,116,14,96,27,30,19,22,41,33,19,17,17,6,4,167,150,135,120,
120,120,197,120,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,
1,250,0,0,1,0,116,0,13,2,161,5,232,8,188,12,116,14,96,27,0,13,16,31,34,21,22,17,8,5,
167,150,135,120,120,120,197,120,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,
188,40,60,182,64,250,23,8,165,0,4,0,1,0,144,0,224,1,32,3,140,10,228,12,120,15,88,27,45,51,
23,55,59,35,32,18,13,5,165,131,145,120,120,120,165,110,130,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,144,0,224,1,32,3,140,10,228,12,120,15,
88,27,60,94,32,75,80,47,44,25,18,8,165,131,145,120,120,120,165,110,130,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,144,0,224,1,32,3,140,10,
228,12,120,15,88,27,60,75,29,67,71,42,39,22,16,7,165,131,145,120,120,120,165,110,130,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,144,0,224,1,
32,3,140,10,228,12,120,15,88,27,0,44,22,51,54,32,30,17,12,5,165,126,145,120,120,120,165,115,130,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,170,0,
4,0,1,0,229,0,216,2,20,5,35,10,227,12,233,14,214,27,50,53,31,61,69,39,42,24,13,6,189,159,
136,120,120,120,237,165,165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,
223,182,176,250,125,182,3,0,229,0,216,2,20,5,35,10,227,12,233,14,214,27,70,82,38,77,86,48,53,29,
17,6,189,159,136,120,120,120,237,165,165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,
0,191,197,254,124,182,1,250,0,0,1,0,229,0,216,2,20,5,35,10,227,12,233,14,214,27,50,68,35,70,
78,44,48,27,15,6,189,159,136,120,120,120,237,165,165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,
222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,229,0,224,2,20,5,35,10,227,12,233,14,214,27,
0,38,27,54,55,34,37,21,12,5,189,159,136,120,120,120,237,165,165,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,156,0,4,0,1,0,253,0,32,3,40,5,
77,10,28,13,216,14,244,27,46,49,30,64,61,39,37,21,11,5,200,157,123,120,120,120,247,170,165,44,65,75,
130,53,0,0,0,0,50,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,253,0,
32,3,40,5,77,10,28,13,216,14,244,27,50,85,40,84,80,52,48,28,15,6,200,157,123,120,120,120,247,170,
165,44,65,75,130,53,0,0,0,0,50,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,
1,0,253,0,32,3,40,5,77,10,28,13,216,14,244,27,60,79,38,81,77,50,46,27,14,6,200,157,123,120,
120,120,247,170,165,44,65,75,130,53,0,0,0,0,50,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,
1,250,0,0,1,0,253,0,32,3,40,5,77,10,28,13,216,14,244,27,0,52,31,66,63,40,38,22,11,5,
200,157,123,120,120,120,247,170,165,44,65,75,130,53,0,0,0,0,50,0,0,0,0,250,222,182,0,0,0,0,
188,40,60,182,64,250,23,8,0,0,4,0,1,0,136,0,224,1,4,6,36,9,248,12,220,15,95,27,45,47,
29,60,60,42,44,25,17,6,170,137,153,122,124,128,197,137,137,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,136,0,224,1,4,6,36,9,248,12,220,15,
95,27,50,74,36,76,76,52,55,32,21,8,170,137,153,122,124,128,197,137,137,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,136,0,168,1,180,5,72,8,
248,12,220,15,95,27,70,79,36,76,68,52,55,32,21,8,170,137,165,122,124,128,197,137,150,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,136,0,144,1,
84,6,72,8,248,12,220,15,95,27,0,38,24,51,54,35,29,21,14,5,170,137,135,122,124,128,197,137,120,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,240,0,
5,0,1,0,168,0,240,1,132,3,216,9,224,11,141,14,32,27,45,56,27,57,64,39,35,21,13,5,165,135,
150,120,120,120,165,135,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,
223,182,176,250,125,182,3,0,168,0,240,1,132,3,216,9,224,11,141,14,32,27,80,108,38,80,89,54,49,29,
18,7,165,135,150,120,120,120,165,135,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,
0,191,197,254,124,182,1,250,0,0,1,0,170,0,224,1,138,3,186,9,224,11,141,14,76,27,55,85,31,74,
79,48,43,27,16,6,164,133,148,120,120,120,165,135,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,
222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,181,0,172,1,115,3,51,9,224,11,141,14,22,28,
60,73,31,73,64,40,33,21,12,7,163,126,141,120,120,120,165,135,135,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,1,0,192,0,120,1,92,3,172,8,224,11,
141,14,224,28,0,39,25,58,35,24,16,14,7,7,162,120,135,120,120,120,117,90,180,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,64,250,23,8,215,0,6,0,1,0,132,0,
16,1,184,6,36,9,228,12,96,14,100,25,45,37,18,57,36,30,30,30,9,12,167,90,135,120,120,120,167,135,
135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,
3,0,132,0,16,1,184,6,36,9,228,12,96,14,100,25,20,68,24,76,51,44,48,44,12,16,167,90,135,120,
120,120,167,135,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,
1,250,0,0,1,0,132,0,24,1,184,6,36,9,228,12,96,14,100,25,70,54,21,68,46,39,43,39,10,14,
167,90,135,120,120,120,167,135,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,
8,0,0,0,1,250,0,0,1,0,178,0,126,1,31,4,53,9,251,11,131,14,113,26,40,37,22,51,47,36,
32,21,14,7,163,128,153,120,120,120,167,135,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,
0,0,0,0,188,40,60,182,64,250,23,8,1,0,184,0,138,1,212,3,56,9,224,11,136,14,144,26,40,41,
24,53,51,38,33,21,15,6,162,133,155,120,120,120,162,127,165,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,40,60,182,40,54,0,191,77,60,59,182,64,250,23,8,1,0,184,0,138,1,212,3,56,9,224,11,136,14,
144,26,0,29,20,44,42,31,27,17,13,5,162,133,155,120,120,120,162,127,165,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,0,0,0,0,0,0,0,146,23,0,0,0,250,0,0,100,0,3,0,5,0,4,0,176,0,
208,7,184,11,58,14,136,19,224,21,40,4,0,24,2,2,4,4,4,4,150,125,137,137,150,175,150,125,137,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,5,0,
4,0,176,0,208,7,184,11,58,14,136,19,224,21,60,5,0,25,2,2,4,4,5,4,150,125,137,137,150,175,
150,125,137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,
0,0,9,0,4,0,176,0,108,7,184,11,58,14,136,19,224,21,0,5,0,25,2,2,4,4,5,4,150,125,
137,137,150,175,150,125,137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,
0,0,1,250,0,0,198,8,12,0,0,255,254,252,251,251,253,0,1,1,2,2,2,0,253,251,248,245,241,237,
235,236,236,237,237,237,240,243,246,245,241,238,236,235,236,237,239,244,250,253,254,0,5,10,10,4,254,250,247,240,
232,227,227,228,227,230,235,240,244,245,241,240,247,0,6,6,255,247,241,231,223,230,239,242,243,247,255,8,11,6,
5,6,10,22,38,49,60,70,70,66,65,65,65,64,59,49,38,23,4,244,232,218,206,202,199,196,196,197,196,199,
203,207,213,221,228,233,237,239,238,238,242,247,0,14,26,30,33,37,37,39,42,41,43,47,47,46,47,43,36,31,
29,27,30,39,48,56,60,58,56,61,71,81,93,105,114,120,125,123,116,113,113,109,103,104,105,102,97,90,81,78,
75,60,44,38,32,25,19,6,246,235,227,225,235,249,0,0,253,249,250,254,3,11,16,16,6,252,249,254,2,2,
255,251,249,242,230,214,201,197,200,200,200,207,215,224,231,231,234,246,255,252,246,241,235,227,217,211,220,242,2,8,
11,14,12,1,243,227,216,210,199,182,171,172,178,183,185,188,195,208,219,222,218,214,212,210,209,213,218,225,237,249,
254,0,4,14,22,20,11,3,1,250,235,222,219,222,225,228,234,241,247,255,1,3,13,27,35,34,26,17,13,4,
249,246,249,249,248,249,254,4,9,7,6,9,12,19,27,29,28,28,27,22,18,18,17,13,8,3,0,250,241,234,
234,237,236,235,237,238,235,227,219,220,232,249,4,14,22,30,37,37,31,25,22,16,11,11,11,13,19,24,33,39,
35,27,25,18,5,254,254,0,0,251,245,241,235,229,231,236,239,239,239,239,236,232,234,242,251,0,2,7,7,255,
248,247,242,227,204,190,198,217,232,247,1,2,253,244,242,9,40,37,9,246,235,223,216,220,232,244,241,223,223,251,
14,7,0,253,235,216,218,236,250,249,246,254,10,19,25,36,59,70,51,31,32,31,17,3,3,22,44,48,38,29,
31,30,16,254,244,244,239,226,218,230,251,8,14,20,28,29,18,2,245,235,235,244,251,3,20,35,33,21,23,44,
51,21,245,245,246,234,239,1,14,17,8,252,7,32,42,35,23,12,5,255,245,242,244,240,236,241,246,247,255,9,
16,20,15,12,22,24,8,1,6,8,11,9,253,251,6,11,14,15,13,24,38,30,18,21,21,8,250,244,252,5,
9,20,30,19,6,13,26,29,19,6,7,16,21,33,51,56,43,23,10,11,20,31,29,11,251,244,249,9,11,251,
251,10,8,250,251,13,28,22,11,15,24,15,0,255,3,4,10,18,15,8,2,3,12,13,15,35,32,249,235,1,
6,251,0,13,6,251,252,11,31,32,15,15,24,18,6,255,253,2,1,251,3,19,21,12,1,3,19,27,15,254,
237,221,218,234,245,241,248,2,248,236,4,45,58,42,32,40,43,36,35,41,29,252,226,228,237,245,12,34,29,11,
249,236,241,252,249,241,234,228,235,246,0,28,54,45,19,6,10,24,22,251,231,237,252,11,23,27,21,5,249,1,
15,21,24,14,248,241,251,8,23,26,14,10,7,249,249,17,26,0,232,238,2,0,244,251,13,16,0,247,8,29,
21,0,1,11,2,231,209,223,4,18,3,0,20,29,9,5,46,62,13,235,254,17,11,254,251,12,18,252,241,4,
18,5,242,245,15,27,13,4,7,6,7,18,25,12,251,253,15,17,6,13,27,12,240,244,24,38,10,235,233,252,
10,2,252,5,6,0,10,17,16,24,21,0,252,4,11,19,12,255,18,46,40,33,40,33,23,27,13,243,233,237,
241,247,242,241,9,36,33,3,235,226,212,195,205,229,243,254,3,255,6,38,71,76,43,13,25,47,39,13,9,37,
43,255,221,243,27,38,255,204,211,249,244,226,246,20,24,15,11,25,42,35,1,234,246,0,245,249,8,245,221,248,
34,38,3,231,252,35,8,203,221,34,22,199,199,33,76,21,241,29,75,58,15,254,2,252,219,202,241,25,13,246,
9,44,48,33,27,24,6,238,229,246,7,234,190,204,242,243,232,249,8,3,4,24,34,26,11,250,237,235,246,17,
31,9,248,250,3,30,45,29,26,25,0,240,242,239,245,252,242,236,247,6,22,30,19,252,243,252,246,227,222,224,
221,221,231,252,21,21,255,246,5,24,26,252,222,232,248,237,235,0,9,255,246,3,42,69,45,6,249,250,255,254,
244,246,246,215,206,255,43,33,251,236,251,0,237,234,253,249,212,182,206,254,253,224,236,15,24,13,0,0,20,16,
238,239,26,31,246,226,252,37,47,3,236,15,24,238,221,244,0,234,199,209,253,0,239,246,9,32,31,253,244,254,
234,215,217,234,9,16,6,31,49,33,28,18,246,231,224,223,240,232,202,195,208,229,6,28,30,25,15,0,251,5,
10,241,203,201,244,31,31,12,15,17,1,249,253,239,201,186,226,7,7,10,8,249,244,235,228,250,246,211,207,218,
232,6,10,252,0,248,237,0,3,248,250,238,229,250,12,14,13,14,16,7,1,3,242,231,249,254,239,231,224,230,
248,253,3,14,0,227,216,231,248,254,253,241,228,228,230,239,6,15,247,219,232,10,9,243,252,17,22,2,225,236,
15,252,233,13,31,11,250,247,21,48,22,238,221,228,238,228,234,13,3,218,226,5,32,36,250,215,232,231,212,233,
251,226,207,235,35,55,13,236,254,20,15,252,239,240,243,247,13,34,13,238,242,6,20,23,255,219,218,239,246,243,
246,247,237,230,240,0,9,8,248,237,3,7,215,189,217,233,233,247,247,231,240,255,2,21,25,12,21,25,253,234,
234,245,7,11,18,27,249,222,7,47,54,31,224,196,230,234,224,240,219,189,200,223,4,34,5,234,249,0,0,8,
255,234,223,222,230,233,238,0,14,15,20,35,50,45,22,11,8,247,231,238,243,227,209,210,229,5,26,14,251,244,
240,234,228,221,219,216,218,236,249,250,3,17,25,31,14,238,229,232,224,225,242,2,16,14,17,48,57,21,4,8,
249,227,215,217,243,7,1,255,1,247,234,240,5,19,2,219,203,235,11,253,227,239,12,22,5,243,2,14,230,199,
219,229,215,217,234,14,53,38,252,248,19,33,18,243,222,219,213,203,223,255,243,211,224,16,52,50,14,249,6,21,
11,241,221,216,195,177,210,250,240,215,222,15,57,48,29,15,241,231,241,237,233,214,192,227,18,35,65,71,36,29,
30,8,246,205,162,174,195,204,223,235,2,31,29,38,52,17,239,239,254,4,214,156,187,252,12,23,45,48,20,240,
245,37,53,5,207,197,214,214,214,233,248,250,243,246,30,62,38,0,228,216,244,15,10,254,232,218,239,251,249,13,
8,228,230,13,46,43,255,222,237,5,7,232,199,214,237,227,239,24,34,6,229,243,41,37,222,188,226,8,4,239,
237,252,10,15,12,33,50,8,222,229,245,254,237,196,205,237,229,240,254,220,228,24,48,68,56,250,235,4,8,15,
255,204,197,207,203,239,21,2,234,243,21,58,42,246,227,236,243,243,229,224,241,243,234,247,4,8,14,13,3,2,
0,247,0,9,253,251,0,235,227,1,5,236,228,230,241,5,3,251,253,240,234,253,254,248,254,245,239,1,17,26,
28,15,0,248,243,247,251,249,245,226,222,0,18,3,248,245,251,0,242,237,248,240,227,229,234,249,253,234,242,12,
14,8,3,0,17,17,250,254,7,255,0,248,233,251,0,244,0,6,253,0,240,229,13,31,5,254,255,248,245,228,
237,20,4,220,240,24,36,11,213,214,12,255,210,230,255,250,244,242,23,65,21,222,249,25,7,227,209,228,239,217,
227,7,16,12,2,2,42,57,18,254,250,230,216,206,218,1,3,238,8,49,45,12,240,236,240,237,232,225,218,214,
209,240,47,63,22,240,234,253,254,222,213,237,242,230,236,12,45,38,6,253,14,20,248,212,211,227,231,236,255,19,
24,8,4,30,51,37,6,237,228,222,211,216,232,235,229,231,255,30,27,253,250,22,34,255,208,207,231,229,227,242,
4,20,11,251,31,65,29,254,11,22,17,241,204,223,246,226,224,251,2,2,0,250,6,17,1,239,237,240,231,213,
223,254,9,1,246,239,5,29,16,5,7,240,224,238,252,10,14,244,236,7,27,39,37,4,243,247,245,248,248,227,
218,221,226,248,16,21,12,4,18,42,34,9,250,233,224,225,218,218,234,243,245,251,4,27,41,20,253,1,5,244,
222,223,252,9,242,232,5,22,9,253,253,10,10,232,213,245,4,237,226,240,252,6,8,255,0,0,247,251,1,0,
253,230,222,16,51,29,14,11,255,0,0,241,230,214,202,220,246,250,248,3,18,24,28,23,254,230,225,226,235,255,
17,12,249,2,29,26,10,6,254,248,235,223,253,18,236,219,249,12,35,49,21,255,1,3,12,13,238,205,194,202,
231,2,3,255,8,28,41,41,31,10,238,214,205,216,230,238,244,244,247,11,29,26,12,253,252,5,250,232,236,237,
225,223,241,23,46,28,9,7,5,0,242,229,235,238,232,235,244,4,19,10,4,14,8,251,236,227,242,0,253,0,
7,15,23,5,247,252,236,224,245,249,241,250,250,253,18,27,34,46,36,4,235,221,211,212,232,253,0,251,253,19,
49,53,30,8,249,232,215,204,211,228,229,222,244,35,63,48,17,1,1,254,237,221,219,224,233,244,255,14,24,11,
253,2,14,17,9,245,229,235,249,1,0,242,230,244,18,28,17,12,4,253,8,0,224,213,205,200,238,15,12,16,
19,11,28,46,30,255,231,234,253,247,232,237,242,253,19,20,14,14,3,4,20,3,242,252,248,255,26,12,245,0,
4,5,24,16,253,244,233,249,19,5,243,235,228,254,12,244,240,247,240,5,20,5,13,7,239,12,37,16,10,0,
238,0,253,227,249,9,250,251,245,240,11,9,236,248,4,240,231,246,4,0,233,227,246,254,253,5,11,2,246,245,
0,254,244,241,243,247,249,0,20,30,13,1,13,24,22,9,252,254,1,244,233,239,242,240,241,240,242,253,253,247,
254,1,254,254,250,250,0,0,175,0,4,0,1,0,128,0,32,2,196,4,216,9,188,12,20,15,96,27,45,45,
33,61,58,39,36,33,17,6,167,135,135,120,120,120,197,135,120,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,128,0,32,2,196,4,216,9,188,12,20,15,
96,27,60,71,42,76,72,49,46,42,22,7,167,135,135,120,120,120,197,135,120,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,128,0,32,2,196,4,216,9,
188,12,20,15,96,27,70,57,38,69,65,44,41,38,19,6,167,135,135,120,120,120,197,135,120,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,128,0,32,2,
236,4,216,9,188,12,20,15,96,27,0,41,32,58,55,37,35,32,16,5,167,135,135,120,120,120,197,135,120,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,250,0,
5,0,1,0,248,0,144,2,204,6,196,9,242,13,183,15,64,28,45,28,24,44,49,44,29,19,7,4,193,135,
180,120,120,120,217,180,150,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,
223,182,176,250,125,182,3,0,248,0,144,2,204,6,196,9,242,13,183,15,64,28,80,82,41,76,83,75,49,33,
12,8,193,135,180,120,120,120,217,180,150,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,
0,191,197,254,124,182,1,250,0,0,1,0,244,0,128,2,204,6,208,9,225,13,155,15,70,28,80,74,39,72,
78,72,48,33,11,8,193,132,174,120,120,120,217,180,150,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,
222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,214,0,33,2,59,7,27,10,118,13,233,14,110,28,
45,48,28,58,59,61,44,33,10,7,187,115,141,120,120,120,217,180,150,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,1,0,200,0,248,1,108,7,60,10,72,13,
156,14,128,28,0,30,23,48,48,52,39,30,9,6,185,107,127,120,120,120,185,107,127,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,64,250,23,8,175,0,4,0,1,0,32,1,
66,3,196,4,130,10,112,13,48,15,32,28,45,49,30,65,58,38,30,19,9,4,186,152,120,120,120,120,192,155,
135,44,45,70,130,58,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,
3,0,32,1,66,3,196,4,130,10,112,13,48,15,32,28,70,100,43,92,83,55,43,28,13,6,186,152,120,120,
120,120,192,155,135,44,45,70,130,57,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,
1,250,0,0,1,0,32,1,66,3,196,4,130,10,112,13,48,15,32,28,60,82,38,83,75,50,38,25,11,5,
186,152,120,120,120,120,192,155,135,44,45,70,130,56,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,
8,0,0,0,1,250,0,0,1,0,32,1,66,3,196,4,130,10,112,13,48,15,32,28,0,43,28,61,55,36,
28,18,8,4,186,152,120,120,120,120,192,155,135,44,45,70,130,55,0,0,0,0,40,0,0,0,0,250,222,182,
0,0,0,0,188,40,60,182,64,250,23,8,0,0,4,0,33,0,169,0,56,1,192,8,28,11,84,13,40,15,
20,26,52,28,19,35,41,44,44,28,11,4,166,170,129,120,120,120,167,190,120,44,45,70,130,60,165,0,0,0,
40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,169,0,56,1,192,8,28,11,
84,13,40,15,20,26,75,43,24,44,52,56,56,36,14,6,166,170,129,120,120,120,167,190,120,44,45,70,130,60,
165,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,169,0,56,1,
192,8,28,11,84,13,40,15,20,26,79,35,21,39,46,50,50,32,12,5,166,170,129,120,120,120,167,190,120,44,
45,70,130,60,175,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,
169,0,56,1,192,8,28,11,84,13,40,15,20,26,0,33,25,36,43,46,46,32,12,5,166,170,129,120,120,120,
167,190,120,44,45,70,130,60,175,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,
23,8,150,0,4,0,1,0,184,0,152,1,128,7,236,9,52,13,80,15,96,25,50,41,35,59,42,57,53,28,
12,5,160,90,120,120,120,120,130,90,120,44,45,70,130,60,160,0,0,0,40,0,0,0,0,50,124,182,40,53,
0,191,197,24,223,182,176,250,125,182,3,0,184,0,152,1,128,7,236,9,52,13,80,15,96,25,60,74,47,79,
57,76,71,38,17,7,160,90,120,120,120,120,130,90,120,44,45,70,130,60,165,0,0,0,40,0,0,0,0,0,
0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,184,0,152,1,128,7,236,9,52,13,80,15,96,25,
40,60,42,71,51,68,64,34,15,6,160,90,120,120,120,120,130,90,120,44,45,70,130,60,165,0,0,0,40,0,
0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,184,0,160,1,108,7,20,10,92,13,
120,15,96,25,0,44,34,68,38,51,47,27,10,8,160,105,120,120,120,120,130,60,120,44,45,70,130,60,165,0,
0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,150,0,4,0,1,0,216,0,
248,2,140,5,60,10,20,13,175,14,117,27,50,38,30,48,51,44,37,30,12,3,196,162,200,120,120,120,249,174,
255,44,45,70,130,59,165,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,
3,0,216,0,248,2,140,5,40,10,20,13,175,14,117,27,60,50,38,50,64,46,46,38,16,4,196,162,200,120,
120,120,249,174,255,44,45,70,130,59,165,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,
1,250,0,0,1,0,208,0,248,2,120,5,40,10,20,13,175,14,117,27,40,38,36,43,55,33,36,33,13,3,
196,162,200,120,120,120,249,174,255,44,45,70,130,59,175,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,
8,0,0,0,1,250,0,0,1,0,208,0,226,2,80,5,236,9,1,13,155,14,105,27,0,20,29,29,37,22,
24,24,11,3,192,158,201,120,120,120,249,174,255,44,45,70,130,59,175,0,0,0,40,0,0,0,0,250,222,182,
0,0,0,0,188,40,60,182,64,250,23,8,165,0,4,0,1,0,204,0,100,2,208,4,60,10,168,12,10,15,
0,28,45,47,34,51,72,40,48,23,14,5,170,150,150,120,120,120,170,165,120,44,45,70,130,59,160,0,0,0,
40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,204,0,100,2,208,4,60,10,
168,12,10,15,0,28,80,67,41,61,86,47,57,28,17,6,170,150,150,120,120,120,170,165,120,44,45,70,130,59,
165,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,204,0,100,2,
208,4,60,10,168,12,10,15,0,28,40,58,38,55,81,45,54,26,16,6,170,150,150,120,120,120,170,165,120,44,
45,70,130,59,170,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,
204,0,100,2,216,4,60,10,168,12,10,15,0,28,0,39,37,46,64,34,42,21,11,8,167,150,150,120,120,120,
167,165,120,44,45,70,130,59,170,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,
23,8,190,0,5,0,1,0,192,0,192,1,72,3,38,10,208,11,47,14,159,27,50,39,25,45,62,20,33,18,
9,5,177,100,131,120,120,120,105,135,135,44,45,70,130,60,160,0,0,0,40,0,0,0,0,50,124,182,40,53,
0,191,197,24,223,182,176,250,125,182,3,0,192,0,192,1,72,3,38,10,208,11,47,14,159,27,50,76,35,63,
86,28,45,25,13,7,177,100,131,120,120,120,105,135,135,44,45,70,130,60,165,0,0,0,40,0,0,0,0,0,
0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,192,0,192,1,72,3,38,10,208,11,47,14,159,27,
50,76,35,63,86,28,45,25,13,7,177,100,131,120,120,120,105,135,135,44,45,70,130,60,165,0,0,0,40,0,
0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,192,0,192,1,72,3,38,10,208,11,
47,14,159,27,40,48,30,53,65,24,39,21,11,6,177,100,131,120,120,120,105,135,135,44,45,70,130,60,165,0,
0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,1,0,192,0,192,1,72,3,
38,10,208,11,47,14,159,27,0,28,28,45,41,20,33,18,9,5,177,100,131,120,120,120,105,135,135,44,45,70,
130,60,165,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,64,250,23,8,100,0,4,0,
1,0,176,0,72,1,132,3,56,9,12,13,60,15,144,26,50,36,3,58,43,21,21,30,15,7,177,175,102,120,
120,120,177,175,117,44,45,70,130,60,155,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,
176,250,125,182,3,0,176,0,72,1,132,3,56,9,12,13,60,15,144,26,50,61,4,76,56,28,28,40,20,10,
177,175,102,120,120,120,177,175,117,44,45,70,130,60,155,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,
197,254,124,182,1,250,0,0,1,0,176,0,72,1,132,3,56,9,12,13,60,15,144,26,70,45,3,64,49,24,
24,35,17,8,177,180,102,120,120,120,177,180,117,44,45,70,130,60,160,0,0,0,40,0,0,0,0,250,222,182,
49,229,0,182,8,0,0,0,1,250,0,0,1,0,176,0,72,1,132,3,56,9,12,13,60,15,144,26,0,24,
2,45,35,17,17,25,12,6,177,200,102,120,120,120,177,200,117,44,45,70,130,60,160,0,0,0,40,0,0,0,
0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,110,0,6,0,1,0,14,1,212,2,106,4,200,10,
2,13,238,14,192,27,45,52,26,59,70,38,32,27,10,5,165,148,135,120,120,120,167,142,135,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,14,1,212,2,
106,4,200,10,2,13,238,14,192,27,65,111,37,85,102,55,46,38,14,7,165,148,135,120,120,120,167,142,135,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,
14,1,212,2,106,4,200,10,2,13,238,14,192,27,40,100,36,81,97,53,44,37,14,7,165,148,135,120,120,120,
167,142,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,
0,0,1,0,218,0,120,2,232,3,161,10,109,12,71,14,60,27,50,85,27,67,88,50,40,35,16,7,166,145,
137,120,120,120,167,142,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,
60,182,64,250,23,8,1,0,144,0,216,1,12,3,196,9,254,11,157,14,216,26,40,68,25,64,64,45,41,24,
17,8,163,120,143,120,120,120,165,115,130,44,45,70,130,59,0,0,0,0,40,0,0,0,0,40,60,182,40,54,
0,191,77,60,59,182,64,250,23,8,1,0,144,0,216,1,12,3,196,9,254,11,157,14,216,26,0,48,21,54,
54,38,34,20,14,7,163,120,143,120,120,120,165,115,130,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,
0,0,0,0,0,0,146,23,0,0,0,250,0,0,45,0,3,0,5,0,116,0,232,0,164,6,176,9,152,13,
60,15,124,21,45,9,20,12,8,4,4,4,0,0,200,212,187,255,255,175,200,212,187,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,1,0,116,0,232,0,164,6,
216,9,192,13,80,15,124,21,0,9,20,12,8,4,4,4,0,0,200,212,187,255,255,175,200,212,187,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,116,0,
232,0,164,6,216,9,192,13,80,15,124,21,0,9,20,12,8,4,4,4,0,0,200,212,187,255,255,175,200,212,
187,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,
254,5,22,0,235,3,25,4,249,243,11,15,250,0,16,8,247,255,5,0,249,254,18,17,7,1,250,15,11,0,
253,2,13,2,255,22,12,244,16,10,0,234,10,1,249,12,240,239,0,12,3,248,228,252,249,252,1,245,7,23,
218,230,7,33,4,248,255,4,27,15,234,238,255,7,0,15,3,8,255,9,3,242,8,19,248,255,8,13,4,230,
235,1,31,7,239,235,0,1,244,4,20,23,237,225,239,10,22,0,252,237,0,25,241,234,11,18,254,233,240,15,
9,245,255,4,218,7,25,230,247,12,246,231,0,251,13,12,255,232,232,3,3,14,3,6,3,14,27,56,71,6,
221,183,203,28,228,244,53,41,18,211,239,5,53,110,73,10,226,230,234,251,0,32,33,20,6,250,216,197,213,27,
12,253,241,223,19,232,247,33,12,242,222,242,18,254,18,249,219,8,10,10,6,25,34,229,221,249,0,251,235,27,
40,233,255,8,12,246,230,247,244,233,1,33,34,219,15,25,252,237,4,16,12,10,0,235,235,236,224,233,224,16,
46,232,212,233,7,0,0,211,239,9,55,52,246,26,66,247,191,251,246,7,19,73,105,35,20,49,245,207,219,15,
33,235,194,246,63,255,195,218,253,236,200,30,44,219,24,38,167,196,255,79,85,247,237,3,200,172,231,11,28,13,
0,245,1,241,0,53,7,228,27,67,27,18,68,117,46,177,190,49,82,200,155,88,124,255,169,184,252,38,243,190,
206,252,246,167,191,226,40,27,210,3,34,230,217,208,34,255,233,11,30,231,247,67,44,237,220,10,23,27,34,0,
12,36,252,23,1,38,70,16,32,21,208,250,23,223,183,58,68,205,208,253,48,220,174,227,32,18,204,255,51,254,
233,210,6,32,239,252,229,247,62,8,216,249,4,20,254,25,26,9,239,242,5,248,2,53,244,246,52,33,2,234,
240,39,251,163,246,26,236,188,235,39,17,204,221,8,62,35,0,227,246,41,255,194,255,72,27,238,210,43,49,18,
25,234,223,19,33,240,16,45,46,235,3,248,12,46,247,236,8,20,248,252,234,27,18,237,6,228,7,58,231,183,
16,48,241,225,230,3,237,1,10,248,224,221,238,250,21,8,232,243,234,235,241,239,13,39,248,196,243,53,32,225,
214,45,30,5,221,205,17,233,235,228,238,7,22,5,226,232,49,32,0,248,51,71,223,244,38,41,23,252,20,30,
234,237,253,11,20,7,217,216,1,236,217,38,47,240,242,30,42,11,224,3,46,253,238,222,237,10,236,220,2,32,
15,27,211,249,60,27,224,231,2,17,17,227,7,47,24,217,228,5,248,193,239,6,232,228,18,25,10,254,15,35,
18,248,252,239,238,1,255,243,19,48,46,3,254,4,255,239,226,241,246,244,1,10,8,28,35,253,3,22,9,21,
7,240,253,252,17,18,19,4,2,61,11,218,218,253,248,221,251,35,46,56,41,23,14,20,1,7,18,20,16,14,
242,249,32,32,224,229,227,239,244,233,231,250,231,210,198,212,242,241,243,4,248,237,214,205,238,21,251,236,248,246,
243,222,235,30,30,43,17,252,0,248,238,248,253,12,6,0,22,27,28,247,241,244,244,210,208,229,219,190,238,17,
16,250,253,38,27,1,230,19,243,232,9,33,246,244,36,23,0,16,9,255,238,226,8,5,24,242,238,28,48,50,
34,3,18,15,227,238,2,19,32,53,54,18,250,5,23,248,249,235,243,242,236,9,29,30,42,31,7,7,5,236,
222,244,1,41,42,21,8,0,14,2,231,251,4,237,214,234,21,26,10,4,34,63,23,237,248,19,20,0,238,8,
39,21,234,240,14,27,226,209,222,13,20,240,229,0,250,251,4,31,42,30,13,255,242,235,227,238,3,17,24,242,
237,244,228,212,228,4,2,243,236,245,247,249,252,242,247,250,255,246,239,241,245,234,225,238,246,249,7,248,219,229,
253,227,226,229,17,36,245,227,233,245,12,244,246,9,249,232,234,255,15,247,235,6,0,0,33,28,253,245,30,42,
11,243,8,61,63,30,11,13,3,1,8,11,14,35,41,31,254,10,19,249,254,0,16,29,24,18,8,12,16,16,
40,31,34,18,1,244,246,28,21,255,14,16,7,251,239,253,14,17,246,231,231,221,206,226,244,21,12,246,250,3,
250,250,246,235,232,243,10,10,1,245,0,8,6,0,238,213,208,232,239,203,203,233,231,229,232,227,225,231,234,233,
255,0,239,220,219,0,16,16,8,247,230,235,15,18,240,234,243,253,9,246,248,1,12,33,27,18,15,13,14,29,
33,35,19,251,232,243,4,26,9,253,250,1,5,6,5,249,6,11,11,16,23,14,26,39,45,15,247,243,3,16,
20,5,250,230,218,247,35,31,32,31,44,31,19,12,11,4,14,44,67,39,0,243,249,0,255,0,246,249,15,2,
252,1,1,243,240,22,58,26,0,255,26,14,242,239,12,20,19,11,17,13,239,215,225,14,26,26,19,25,31,8,
254,13,10,249,255,22,15,255,248,254,253,16,255,245,249,248,240,230,216,223,218,203,221,17,43,42,18,17,21,8,
255,5,2,239,234,240,225,221,221,222,227,215,221,224,222,205,204,224,7,5,250,250,241,247,253,5,250,239,212,215,
229,246,237,224,217,244,246,220,204,200,204,208,243,0,238,229,242,13,15,4,245,255,246,241,242,251,248,216,225,254,
15,6,3,5,2,250,0,24,30,18,4,27,44,37,23,34,38,37,35,37,14,251,235,254,4,5,13,19,12,23,
56,67,63,46,35,41,41,36,34,20,29,16,23,19,12,18,13,30,35,26,4,4,6,11,24,38,37,37,36,19,
9,0,9,13,12,3,6,249,244,242,239,5,15,4,251,248,252,247,233,237,237,244,238,226,234,234,233,217,233,234,
231,233,232,234,221,224,1,254,223,220,227,240,228,229,249,251,229,222,225,230,217,208,208,221,236,249,6,14,252,8,
40,30,7,0,26,20,7,10,20,27,253,1,13,19,6,9,30,9,238,242,8,14,2,18,37,51,48,48,55,46,
36,46,56,50,47,36,16,251,0,15,29,4,237,244,244,247,3,0,16,27,35,47,45,17,7,0,7,238,226,216,
207,213,226,235,237,225,223,234,244,248,3,0,233,209,217,242,246,235,234,238,254,0,247,218,201,189,204,230,220,209,
215,222,227,209,203,222,228,215,245,246,247,241,237,236,229,234,8,38,30,10,6,27,26,10,251,6,8,13,37,31,
4,1,27,52,45,4,252,10,21,19,27,20,19,15,10,24,26,32,37,30,18,9,21,24,24,246,0,33,47,23,
11,0,10,29,40,43,25,9,0,16,16,16,14,7,10,12,1,249,4,253,247,255,12,26,16,255,238,246,251,0,
10,16,10,6,14,15,8,255,255,9,252,3,5,6,235,234,248,16,17,13,15,13,19,21,25,251,237,255,17,248,
237,240,242,253,14,29,21,235,0,0,188,4,48,0,2,252,253,253,7,7,0,0,248,251,0,6,8,0,248,248,
0,7,4,2,252,247,0,255,7,6,251,243,249,3,14,16,0,247,246,252,2,8,0,0,250,253,7,4,255,252,
253,251,2,2,249,252,2,16,12,246,236,252,4,18,6,248,246,241,12,7,5,253,241,248,7,7,8,254,243,245,
4,10,11,8,234,234,6,19,11,7,240,240,12,18,255,237,245,252,6,1,8,21,2,236,242,250,1,32,30,243,
212,234,14,23,17,250,246,4,4,239,239,13,17,2,3,254,243,14,0,253,244,6,23,232,249,35,255,212,14,47,
232,213,254,39,36,238,227,16,240,229,44,63,242,202,228,9,47,36,247,209,207,28,47,4,252,238,213,235,33,56,
28,213,205,235,25,44,18,238,238,240,6,12,2,26,245,238,2,1,244,10,36,19,214,227,13,35,20,240,210,6,
60,14,219,217,11,49,22,231,226,244,7,35,63,221,170,3,10,73,25,195,4,27,3,198,230,69,74,213,203,7,
8,230,48,252,251,26,1,200,202,109,91,206,162,3,71,4,240,222,210,56,55,3,254,221,13,227,18,46,237,251,
211,9,71,18,245,24,182,184,91,85,237,202,212,38,49,201,248,16,52,29,154,218,76,55,204,10,21,229,17,231,
236,29,22,253,234,74,228,157,73,77,220,178,4,39,51,28,219,218,15,11,217,30,74,254,170,221,26,23,18,2,
0,48,2,177,165,75,90,37,241,147,215,70,51,6,253,201,217,85,6,226,4,250,251,3,18,23,222,218,47,34,
237,14,229,228,50,248,219,252,51,252,241,3,241,39,11,255,201,177,77,89,237,196,222,253,3,60,58,208,214,206,
30,1,51,75,156,162,39,105,244,184,18,29,6,204,206,26,59,63,179,212,226,54,37,196,34,6,210,231,26,239,
5,30,232,21,253,181,254,54,32,235,163,18,62,53,228,153,248,46,12,253,31,11,188,2,13,220,251,46,12,195,
243,16,34,29,187,193,27,71,208,250,40,241,238,221,201,82,83,185,203,1,4,24,36,161,255,108,250,179,208,51,
47,3,181,224,41,22,40,52,157,151,221,89,124,22,183,192,201,217,90,125,232,186,208,186,57,83,53,238,138,230,
54,23,4,24,240,199,237,2,9,77,34,209,179,182,35,113,58,199,181,218,0,12,57,87,228,153,192,40,84,33,
248,158,234,31,63,12,251,228,227,244,249,24,35,71,219,149,1,34,48,55,17,184,215,9,1,85,23,194,251,227,
225,60,91,217,209,202,217,109,73,206,200,16,247,246,19,26,0,15,244,189,253,94,10,196,25,12,236,255,1,238,
9,26,25,239,255,5,233,38,17,189,3,51,19,4,248,237,217,8,67,45,207,221,236,10,52,36,231,225,13,252,
22,18,250,220,217,17,69,44,229,220,228,236,48,51,231,0,56,233,194,220,34,92,48,191,174,1,67,50,249,230,
234,231,2,65,31,237,239,247,254,17,223,4,76,1,187,227,17,89,65,215,162,196,251,46,84,56,251,213,191,221,
59,46,230,246,10,5,14,5,233,255,25,254,8,16,232,244,26,250,224,10,47,16,252,14,225,230,33,20,223,234,
12,28,45,35,236,202,214,253,47,62,20,226,222,244,19,30,10,248,244,224,254,54,35,243,240,251,248,0,6,255,
27,42,248,213,232,17,38,30,254,227,239,1,18,32,10,234,234,231,249,41,47,19,247,232,215,233,0,43,61,21,
234,217,219,248,47,33,0,248,242,254,19,35,248,209,229,13,40,31,10,251,224,219,245,13,38,32,6,241,241,229,
242,0,21,41,10,247,240,246,249,2,7,249,254,9,18,12,251,248,246,249,246,4,15,12,16,3,243,247,255,248,
5,25,23,250,225,227,253,26,31,11,250,0,1,254,241,242,255,1,2,3,9,2,248,254,0,248,253,3,3,2,
3,243,232,0,19,22,8,247,246,247,248,3,7,3,255,2,7,2,255,246,240,255,14,14,5,0,253,243,243,8,
9,4,6,2,249,246,241,248,7,11,9,1,0,248,242,253,3,250,252,4,8,4,254,246,240,253,254,255,8,9,
255,249,254,253,249,248,251,8,14,5,254,240,242,253,4,9,9,5,253,249,251,250,252,5,6,4,4,255,249,247,
1,9,254,252,251,249,7,8,3,247,244,251,2,10,7,0,247,245,251,254,254,8,9,253,249,248,246,2,3,0,
1,0,253,252,2,2,253,251,251,2,7,4,1,0,254,251,254,1,0,254,2,3,252,254,3,0,255,0,1,2,
0,0,252,251,254,255,1,9,6,254,251,252,255,2,1,252,253,1,4,3,0,255,255,0,0,253,255,3,0,255,
0,0,255,0,1,1,1,0,252,254,254,0,6,1,0,0,0,0,1,2,255,252,0,2,1,2,3,255,255,0,
254,3,5,252,252,3,3,0,1,1,1,0,0,1,255,254,1,1,2,1,0,2,0,0,3,0,254,0,0,2,
3,3,3,255,255,2,2,0,0,0,1,1,0,255,2,0,2,3,0,0,255,0,0,2,3,3,255,255,5,2,
255,3,0,253,255,2,4,5,0,253,1,3,2,2,255,254,2,0,3,4,254,252,4,6,0,255,0,1,2,2,
0,254,0,3,1,5,4,254,1,0,1,1,255,0,5,4,254,0,2,1,2,1,255,0,2,2,0,1,0,0,
3,1,0,0,3,0,255,4,255,254,2,0,2,3,0,254,255,2,2,0,2,0,255,1,3,2,58,0,3,0,
5,0,116,0,232,0,252,8,240,10,232,13,24,16,124,21,58,11,22,13,9,4,4,4,0,0,200,212,187,255,
255,175,200,212,187,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,
176,250,125,182,1,0,116,0,232,0,252,8,240,10,232,13,24,16,124,21,0,11,22,13,9,4,4,4,0,0,
200,212,187,255,255,175,200,212,187,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,
197,254,124,182,1,250,0,0,1,0,116,0,232,0,252,8,240,10,232,13,24,16,124,21,0,11,22,13,9,4,
4,4,0,0,200,212,187,255,255,175,200,212,187,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,
49,229,0,182,8,0,0,0,1,250,0,0,42,3,94,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,2,6,14,26,36,42,44,45,42,34,23,3,230,196,171,166,179,204,230,249,5,15,25,30,24,0,222,185,
164,168,195,224,243,0,17,47,80,102,102,79,44,11,244,226,206,185,168,166,187,230,25,68,91,97,98,100,96,75,
34,239,189,158,150,159,174,191,213,245,32,78,113,125,112,81,44,9,234,200,165,137,131,153,198,251,39,70,91,106,
114,110,87,46,252,202,168,153,153,163,180,204,239,26,71,104,116,106,82,53,22,245,208,171,144,137,154,187,228,9,
40,64,82,92,91,73,40,255,216,188,174,170,172,180,198,229,10,48,75,85,80,66,46,22,250,216,184,161,154,166,
192,225,1,31,57,77,91,94,82,55,20,244,219,203,193,189,193,206,229,1,30,51,61,62,55,42,25,4,237,213,
195,187,192,206,225,245,7,25,41,52,54,45,29,8,245,229,217,210,207,210,220,235,255,17,32,40,41,38,31,21,
7,248,231,219,214,217,226,238,251,7,20,31,39,40,33,21,7,250,238,229,224,223,225,233,244,2,16,27,32,33,
31,26,18,7,252,240,232,228,230,235,243,253,6,17,26,31,32,28,20,9,255,246,238,233,231,232,238,246,0,10,
17,22,24,23,20,13,5,253,245,238,235,235,239,245,252,2,10,17,21,22,20,15,8,1,251,246,242,240,240,243,
249,255,4,9,13,15,15,13,10,5,0,251,248,245,245,246,249,252,0,3,7,10,11,10,8,5,2,0,253,251,
250,250,251,253,255,1,3,5,5,6,5,4,2,0,0,255,254,254,254,255,0,0,1,1,2,2,1,1,1,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,175,0,4,0,1,0,156,0,40,1,172,8,
64,11,192,13,120,15,144,27,45,40,11,59,53,50,42,28,11,7,176,106,155,120,120,120,185,107,155,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,156,0,
40,1,172,8,64,11,192,13,120,15,144,27,80,74,16,81,73,68,57,38,15,9,176,106,155,120,120,120,185,107,
155,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,
1,0,156,0,36,1,196,8,76,11,216,13,144,15,144,27,50,63,14,75,67,63,52,35,14,9,176,106,155,120,
120,120,185,107,155,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,
1,250,0,0,1,0,156,0,32,1,212,8,84,11,232,13,160,15,144,27,0,33,10,53,48,45,37,25,10,6,
176,106,155,120,120,120,185,107,155,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,
188,40,60,182,64,250,23,8,185,0,4,0,1,0,36,1,196,2,104,6,206,9,142,13,132,15,220,28,45,41,
30,51,59,44,32,26,9,5,248,163,170,127,120,120,220,176,161,44,45,70,130,58,0,0,0,0,40,0,0,0,
0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,36,1,196,2,104,6,206,9,142,13,132,15,
220,28,80,65,38,65,75,56,41,33,11,6,248,163,170,127,120,120,220,176,161,44,45,70,130,58,0,0,0,0,
40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,36,1,196,2,104,6,206,9,
142,13,132,15,220,28,60,59,36,62,71,53,38,31,11,6,248,163,170,127,120,120,220,176,161,44,45,70,130,58,
0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,36,1,196,2,
104,6,206,9,142,13,132,15,220,28,0,35,28,48,55,41,30,24,8,5,248,163,170,127,120,120,220,176,161,44,
45,70,130,58,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,195,0,
4,0,1,0,192,0,24,2,152,3,40,10,244,11,196,14,159,27,45,56,28,56,68,34,34,22,14,6,172,138,
135,120,120,120,167,138,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,
223,182,176,250,125,182,3,0,192,0,24,2,152,3,40,10,244,11,196,14,159,27,80,111,40,80,96,48,48,31,
20,8,172,138,135,120,120,120,167,138,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,
0,191,197,254,124,182,1,250,0,0,1,0,192,0,24,2,152,3,40,10,244,11,196,14,159,27,70,86,36,68,
86,43,43,27,18,7,172,138,135,120,120,120,167,138,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,
222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,192,0,24,2,152,3,40,10,244,11,196,14,159,27,
0,47,26,50,64,32,32,20,13,5,172,138,135,120,120,120,167,138,135,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,66,4,15,0,0,0,255,255,253,253,255,252,
251,250,248,246,243,239,233,196,188,233,27,45,16,245,239,0,16,21,11,4,3,18,20,7,246,248,1,23,28,8,
0,251,1,6,255,202,190,242,37,47,4,229,239,30,51,26,2,248,0,249,219,216,250,24,15,253,227,239,251,6,
242,252,248,247,250,226,244,254,18,18,13,12,18,25,20,21,25,13,22,6,15,25,27,36,6,232,235,7,25,27,
240,235,238,252,15,242,0,244,5,0,251,244,191,182,211,7,44,10,204,212,236,32,35,11,252,2,32,35,15,245,
248,5,24,29,22,12,250,2,19,28,15,20,14,9,23,15,14,6,7,14,14,10,251,4,4,7,253,244,2,5,
13,249,243,244,0,255,250,254,5,5,235,250,2,253,1,244,247,8,6,254,240,242,5,6,10,7,247,246,249,250,
3,5,247,244,10,0,245,2,0,251,235,243,13,6,12,240,232,254,253,9,248,247,10,254,0,245,249,4,9,3,
250,11,242,249,8,6,6,246,241,7,8,9,9,241,244,10,19,254,233,242,12,36,247,223,238,2,21,15,251,229,
240,10,16,248,7,245,255,19,5,248,212,0,51,24,253,237,241,14,10,238,4,18,241,12,4,0,9,249,12,20,
7,250,12,249,254,11,255,3,252,253,15,11,236,12,15,250,244,245,25,42,238,228,255,17,21,8,3,6,251,240,
17,34,0,249,18,3,236,252,15,9,254,248,0,248,253,248,241,10,243,244,23,0,225,218,248,21,38,239,216,238,
0,12,0,241,229,252,12,25,239,245,4,3,5,252,246,11,33,13,253,231,242,248,25,27,254,16,239,231,15,2,
25,22,209,0,43,239,255,11,11,232,241,14,245,13,14,242,237,235,245,25,0,253,15,233,249,9,252,21,23,233,
247,6,253,25,20,251,226,23,29,247,241,17,24,225,218,246,29,52,29,199,191,5,69,61,240,208,227,22,6,234,
10,46,3,11,248,205,252,45,13,6,30,211,226,12,45,40,215,208,242,46,50,235,145,162,221,249,25,235,177,218,
241,254,44,2,244,19,11,2,32,54,45,251,210,245,62,74,233,250,15,250,5,22,68,33,237,237,249,52,52,204,
233,8,251,29,58,46,193,149,244,88,34,250,238,201,17,73,252,219,215,224,35,40,41,214,207,61,28,220,0,10,
36,240,193,14,241,241,112,36,176,209,240,35,32,239,239,249,2,252,247,18,25,197,201,54,56,253,222,227,7,254,
1,27,249,235,19,28,14,210,247,24,229,232,12,32,46,0,199,211,239,37,254,226,34,31,248,210,12,72,250,158,
208,68,81,9,185,160,17,61,32,253,224,7,0,242,247,240,32,42,252,235,216,23,34,228,234,64,19,19,85,250,
163,235,82,53,12,231,18,59,246,252,17,231,11,93,10,237,3,239,31,25,247,13,5,27,52,11,213,230,7,41,
70,216,168,246,16,253,21,248,226,7,243,250,240,210,23,9,0,21,231,236,216,0,22,247,226,238,44,56,21,171,
161,255,39,60,51,200,158,221,20,28,0,204,229,27,238,207,232,253,43,15,224,182,253,91,23,250,178,140,250,103,
66,252,215,17,90,234,201,201,14,94,12,215,22,30,251,228,178,210,32,51,4,204,195,30,8,186,199,31,70,1,
230,209,231,253,253,35,63,21,2,21,218,246,15,243,33,43,63,48,194,178,246,9,44,86,24,168,196,27,48,14,
217,213,14,59,44,228,185,237,35,8,9,29,6,245,196,210,225,220,254,66,61,179,174,3,74,236,151,230,13,28,
3,16,200,207,248,230,1,15,28,179,167,242,18,242,250,24,223,235,27,29,218,158,224,49,63,44,40,230,185,191,
241,26,63,39,0,15,235,221,248,61,18,17,48,248,31,45,232,202,23,75,74,69,245,211,218,246,41,76,76,39,
34,17,226,244,45,10,24,64,61,88,33,187,221,52,57,80,66,11,232,7,7,6,14,89,66,0,49,10,202,230,
27,91,75,13,10,229,233,1,252,8,43,56,251,183,219,1,33,29,0,213,13,78,221,133,220,47,80,0,205,6,
237,233,215,208,236,3,34,18,194,215,17,250,225,188,239,68,48,236,206,237,232,246,61,48,255,246,24,253,203,212,
247,34,74,25,208,240,37,235,236,3,42,32,229,9,254,2,46,41,7,221,244,33,22,5,222,204,56,114,18,213,
215,236,7,53,65,10,236,246,19,20,246,243,29,57,241,192,9,28,20,244,218,229,34,33,237,223,214,233,250,12,
11,234,209,222,247,23,0,253,247,200,208,248,0,5,219,228,1,231,221,198,209,242,252,246,242,233,238,218,186,197,
242,33,11,244,212,233,241,244,202,135,165,32,94,244,138,153,214,2,18,224,172,209,246,218,196,204,221,225,218,4,
240,202,195,164,190,255,1,241,219,172,170,221,12,251,208,174,186,201,198,210,249,242,194,148,132,218,21,231,195,161,
168,246,0,0,199,0,6,0,5,0,24,1,240,2,116,4,4,11,152,13,35,15,64,27,51,53,27,57,72,38,
39,19,3,8,225,165,135,120,120,120,225,120,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,
40,53,0,191,197,24,223,182,176,250,125,182,3,0,24,1,240,2,116,4,4,11,72,13,191,14,64,27,75,95,
34,81,88,51,55,37,5,7,167,165,165,120,120,120,167,105,165,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,24,1,240,2,196,4,200,10,72,13,191,14,
64,27,30,77,32,77,83,48,52,35,5,6,167,165,165,120,120,120,167,105,165,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,33,0,196,0,224,2,249,5,232,8,
188,12,247,13,64,27,33,39,29,59,54,45,44,45,8,8,167,150,180,120,120,120,167,120,135,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,1,0,193,0,208,1,
160,7,173,9,21,13,229,14,64,27,40,41,30,57,50,49,43,40,14,9,167,105,180,120,120,120,167,120,135,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,64,250,23,8,1,0,
192,0,168,1,208,7,196,9,32,13,0,15,64,27,0,30,27,50,44,44,38,34,13,8,167,100,180,120,120,120,
137,85,150,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,146,23,0,0,0,250,
0,0,0,0,6,0,1,0,204,0,158,2,252,4,60,10,168,12,10,15,0,28,40,47,32,52,71,39,47,23,
13,7,170,165,150,120,120,120,170,180,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,
0,191,197,24,223,182,176,250,125,182,3,0,204,0,93,2,208,4,60,10,168,12,10,15,0,28,50,115,45,89,
101,56,67,33,20,8,170,165,150,120,120,120,170,180,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,
0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,204,0,93,2,208,4,60,10,168,12,10,15,0,28,
30,104,42,84,96,53,64,32,19,8,170,165,150,120,120,120,170,180,120,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,190,0,32,2,242,5,84,10,240,12,
236,14,9,28,75,69,37,71,77,51,55,30,15,7,169,142,163,120,120,120,170,180,120,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,1,0,156,0,144,1,152,8,
140,10,152,13,166,14,32,28,30,37,31,54,47,57,44,32,10,8,167,90,195,120,120,120,122,120,135,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,64,250,23,8,1,0,156,0,
144,1,174,8,160,10,92,13,10,15,32,28,0,31,31,49,49,45,42,33,9,8,167,90,135,120,120,120,122,120,
120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,146,23,0,0,0,250,0,0,
254,251,248,244,241,237,233,229,225,221,217,213,208,204,199,195,190,185,180,176,171,166,161,156,151,146,141,136,131,126,
121,117,112,107,102,97,93,88,83,79,74,70,66,61,57,53,49,45,42,38,35,31,28,25,22,19,17,14,12,10,
8,6,5,3,2,1,0,0,0,0,0,0,0,1,2,4,5,7,9,12,14,17,21,24,27,29,32,34,37,39,
42,45,47,49,52,54,57,59,61,63,65,67,69,71,73,74,76,77,78,80,80,81,82,82,82,83,82,82,82,81,
80,79,77,76,74,71,69,66,175,0,4,0,1,0,130,0,80,1,162,8,240,10,112,13,100,15,120,26,45,48,
19,68,52,50,43,30,11,6,168,95,132,143,120,120,185,102,167,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,130,0,80,1,162,8,240,10,112,13,100,15,
120,26,70,89,26,93,71,68,59,40,16,8,168,95,132,143,120,120,185,102,167,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,130,0,80,1,162,8,200,10,
112,13,100,15,120,26,60,81,24,88,67,64,56,38,15,8,168,95,132,143,120,120,185,102,167,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,130,0,80,1,
162,8,200,10,112,13,100,15,120,26,0,36,16,58,44,43,37,25,10,5,168,95,132,143,120,120,185,102,167,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,175,0,
4,0,1,0,176,0,64,1,172,3,56,9,228,12,60,15,144,26,45,39,5,66,34,17,26,29,11,7,177,125,
102,120,120,120,177,125,117,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,
223,182,176,250,125,182,3,0,176,0,64,1,172,3,56,9,228,12,60,15,144,26,80,65,7,85,44,22,33,37,
14,9,177,125,102,120,120,120,177,125,117,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,
0,191,197,254,124,182,1,250,0,0,1,0,176,0,64,1,152,3,56,9,228,12,60,15,144,26,50,48,6,73,
38,19,28,31,12,7,177,125,102,120,120,120,177,125,117,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,
222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,176,0,64,1,132,3,56,9,228,12,60,15,144,26,
0,35,5,62,32,16,24,27,10,6,177,125,102,120,120,120,177,125,117,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,195,0,4,0,1,0,133,0,93,1,164,6,
242,8,208,12,114,14,24,25,45,41,21,57,47,41,38,32,10,11,173,111,133,121,121,130,187,126,137,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,133,0,
93,1,164,6,242,8,208,12,114,14,24,25,80,71,27,76,62,54,50,42,13,14,173,111,133,121,121,130,187,126,
137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,
1,0,133,0,93,1,164,6,242,8,208,12,114,14,24,25,70,57,25,68,55,49,45,38,12,13,173,111,133,121,
121,130,187,126,137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,
1,250,0,0,1,0,133,0,93,1,164,6,242,8,208,12,114,14,24,25,0,35,19,54,44,38,35,30,9,10,
173,111,133,121,121,130,187,126,137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,
188,40,60,182,64,250,23,8,245,0,6,0,1,0,72,1,136,3,40,5,140,10,112,13,191,14,32,28,45,50,
32,67,59,34,30,19,9,4,207,150,105,120,120,120,237,165,165,44,45,70,130,56,0,0,0,0,45,0,0,0,
0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,72,1,136,3,40,5,140,10,112,13,191,14,
32,28,40,101,43,96,85,49,43,27,13,6,207,150,105,120,120,120,237,165,165,44,45,70,130,57,0,0,0,0,
45,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,55,1,100,3,128,5,140,10,
116,13,189,14,32,28,75,82,41,88,78,48,40,26,12,6,203,144,114,120,120,120,237,165,165,44,45,70,130,56,
0,0,0,0,45,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,152,0,48,1,
56,9,164,11,232,13,220,15,160,26,40,59,21,68,68,61,54,32,15,7,167,110,120,120,120,120,167,110,120,44,
45,70,130,55,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,1,0,
105,0,48,1,56,9,164,11,232,13,220,15,93,26,45,31,15,51,51,47,46,26,12,8,172,106,109,120,120,120,
167,110,120,44,45,70,130,55,0,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,64,250,
23,8,1,0,105,0,48,1,56,9,164,11,232,13,220,15,93,26,0,31,15,51,51,47,46,26,12,8,172,106,
109,120,120,120,167,110,120,44,45,70,130,54,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,146,23,
0,0,0,250,0,0,60,0,5,0,5,0,100,0,16,1,64,6,40,10,232,13,24,16,124,21,15,1,4,9,
0,0,0,0,0,0,200,212,187,255,255,175,200,212,187,44,45,70,130,49,0,0,0,0,40,0,0,0,0,50,
124,182,40,53,0,191,197,24,223,182,176,250,125,182,5,0,100,0,16,1,64,6,40,10,232,13,24,16,124,21,
25,5,8,16,1,1,0,0,0,0,200,212,187,255,255,175,200,212,187,44,45,70,130,49,0,0,0,0,40,0,
0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,5,0,100,0,16,1,64,6,40,10,232,13,
24,16,124,21,20,5,8,16,1,1,0,0,0,0,200,212,187,255,255,175,200,212,187,44,45,70,130,49,0,0,
0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,100,0,16,1,64,6,
40,10,232,13,24,16,124,21,0,3,8,11,1,1,0,0,0,0,200,212,187,255,255,175,200,212,187,44,45,70,
130,49,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,1,0,100,0,
16,1,64,6,40,10,232,13,24,16,124,21,0,2,7,9,1,1,0,0,0,0,200,212,187,255,255,175,200,212,
187,44,45,70,130,49,0,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,64,250,23,8,
115,0,4,0,1,0,136,0,224,1,24,6,116,9,248,12,240,15,95,27,45,44,27,57,66,39,41,24,16,6,
170,137,135,122,124,128,197,137,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,
197,24,223,182,176,250,125,182,3,0,136,0,224,1,24,6,116,9,248,12,220,15,95,27,70,71,34,72,83,49,
52,30,20,8,170,137,135,122,124,128,197,137,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,
24,53,0,191,197,254,124,182,1,250,0,0,1,0,136,0,234,1,4,6,92,9,227,12,157,15,95,27,70,64,
33,69,79,47,50,30,19,7,170,137,135,122,124,128,197,137,120,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,136,0,4,2,240,5,36,9,178,12,10,15,
95,27,0,36,24,52,59,35,38,25,14,5,170,137,135,122,124,128,197,137,120,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,200,0,4,0,1,0,158,0,118,1,
192,8,44,11,132,13,0,15,8,28,50,40,18,55,57,49,46,30,11,8,180,111,153,120,120,120,185,112,155,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,
158,0,118,1,192,8,44,11,132,13,0,15,8,28,80,75,26,76,78,68,63,42,16,11,180,111,153,120,120,120,
185,112,155,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,
0,0,1,0,158,0,118,1,192,8,44,11,132,13,0,15,8,28,70,63,23,69,72,62,58,38,15,10,180,111,
153,120,120,120,185,112,155,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,
0,0,1,250,0,0,1,0,158,0,118,1,192,8,44,11,132,13,0,15,8,28,0,29,16,47,48,42,39,26,
10,6,180,111,153,120,120,120,185,112,155,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,
0,0,188,40,60,182,64,250,23,8,45,0,5,0,1,0,144,0,120,1,188,7,120,10,132,13,160,15,128,28,
45,45,22,58,58,58,47,44,11,8,185,107,127,120,120,120,185,107,127,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,144,0,120,1,188,7,120,10,132,13,
160,15,128,28,41,91,32,84,84,84,68,64,16,12,185,107,127,120,120,120,185,107,127,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,200,0,208,1,188,7,
80,10,132,13,216,14,128,28,74,93,38,84,88,84,68,51,16,12,185,107,127,120,120,120,185,107,127,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,200,0,
208,1,148,7,60,10,92,13,196,14,128,28,40,93,38,84,88,84,68,51,16,12,185,107,127,120,120,120,185,107,
127,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,
1,0,200,0,32,2,8,7,136,9,228,12,76,14,128,28,0,44,30,58,61,58,47,36,11,8,185,107,127,120,
120,120,185,107,127,44,45,70,130,59,0,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,
64,250,23,8,255,0,5,0,1,0,31,1,64,2,255,6,225,9,104,13,15,15,224,28,45,37,28,51,55,50,
39,28,9,6,244,132,159,120,120,120,135,180,150,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,
40,53,0,191,197,24,223,182,176,250,125,182,3,0,22,1,160,2,204,6,255,9,124,13,33,15,156,28,70,58,
37,68,71,61,48,35,12,7,245,138,159,124,120,120,135,180,150,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,242,0,97,3,196,5,122,10,204,13,109,15,
140,27,80,78,43,84,81,56,44,31,14,6,250,166,163,142,120,120,135,180,150,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,236,0,128,3,160,5,140,10,
216,13,120,15,102,27,60,83,41,81,77,51,41,29,13,5,251,170,163,145,120,120,255,174,173,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,1,0,236,0,128,3,
160,5,140,10,216,13,120,15,102,27,0,50,32,63,60,40,32,22,10,4,251,170,163,145,120,120,255,174,173,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,64,250,23,8,225,0,
6,0,1,0,177,0,117,1,37,3,102,10,50,12,55,15,148,26,45,38,11,53,49,26,23,20,12,6,162,127,
149,120,120,120,162,127,165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,
223,182,176,250,125,182,3,0,177,0,117,1,37,3,102,10,50,12,55,15,148,26,50,60,13,66,61,32,29,26,
16,8,162,127,149,120,120,120,162,127,165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,
0,191,197,254,124,182,1,250,0,0,1,0,189,0,168,1,84,3,128,10,68,12,5,15,185,26,50,64,24,59,
72,37,34,31,17,8,163,130,147,120,120,120,162,127,165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,
222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,244,0,128,2,36,4,240,10,148,12,41,14,96,27,
40,94,30,75,97,50,46,46,15,7,167,142,135,120,120,120,167,142,135,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,1,0,244,0,128,2,36,4,240,10,148,12,
41,14,96,27,40,84,29,71,92,47,44,44,14,7,167,142,135,120,120,120,167,142,135,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,64,250,23,8,1,0,244,0,128,2,36,4,
240,10,148,12,41,14,96,27,0,45,23,53,64,36,33,33,11,5,167,142,135,120,120,120,167,142,135,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,146,23,0,0,0,250,0,0,250,0,5,0,
1,0,152,0,24,1,232,8,4,11,52,13,0,15,160,26,45,27,6,51,45,46,46,22,10,5,167,105,120,120,
120,120,167,90,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,
176,250,125,182,3,0,152,0,24,1,232,8,4,11,52,13,0,15,160,26,80,65,9,78,70,70,71,34,16,8,
167,105,120,120,120,120,167,90,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,
197,254,124,182,1,250,0,0,1,0,161,0,67,1,160,8,207,10,36,13,208,14,0,27,65,48,12,66,59,62,
59,31,13,7,166,105,121,120,120,120,167,90,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,
49,229,0,182,8,0,0,0,1,250,0,0,1,0,31,1,72,2,244,6,0,10,104,13,15,15,224,28,60,38,
30,52,55,49,38,27,10,6,244,132,159,120,120,120,135,180,150,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,1,0,31,1,72,2,244,6,0,10,104,13,15,15,
224,28,0,33,28,48,51,46,35,25,9,6,244,132,159,120,120,120,135,180,150,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,64,250,23,8,240,0,5,0,1,0,168,0,240,1,
132,3,216,9,164,11,141,14,32,27,45,54,23,57,64,39,35,17,13,5,165,135,150,120,120,120,165,135,135,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,
168,0,240,1,132,3,216,9,164,11,141,14,32,27,80,105,33,80,89,54,49,24,18,7,165,135,150,120,120,120,
165,135,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,
0,0,1,0,170,0,224,1,138,3,186,9,168,11,141,14,76,27,55,83,27,74,79,48,43,22,16,6,164,133,
148,120,120,120,165,135,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,
0,0,1,250,0,0,1,0,192,0,120,1,32,3,172,8,204,11,141,14,224,28,60,44,23,63,38,26,17,15,
7,7,162,120,135,120,120,120,117,90,180,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,
0,0,188,40,60,182,64,250,23,8,1,0,176,0,104,1,32,3,92,8,204,11,141,14,224,28,0,33,19,57,
37,21,14,11,8,7,152,120,97,120,120,120,107,90,97,44,45,70,130,59,0,0,0,0,40,0,0,0,0,40,
60,182,40,54,0,191,77,60,59,182,64,250,23,8,0,0,5,0,1,0,16,1,96,2,8,7,225,9,104,13,
15,15,224,28,40,29,23,47,51,46,36,26,8,5,244,132,159,120,120,120,135,180,150,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,16,1,96,2,8,7,
225,9,104,13,15,15,224,28,66,69,36,73,77,71,55,40,13,8,244,132,159,120,120,120,135,180,150,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,6,1,
64,2,20,7,226,9,99,13,18,15,157,28,94,58,30,66,70,65,50,37,12,8,237,130,156,120,120,120,135,180,
150,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,
1,0,168,0,112,1,128,7,40,10,50,13,48,15,64,26,40,37,19,53,51,51,47,29,11,8,181,111,129,120,
120,120,135,180,150,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,
64,250,23,8,1,0,152,0,152,1,168,7,40,10,52,13,60,15,96,25,0,30,24,56,44,48,45,26,10,8,
160,105,120,120,120,120,130,60,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,
77,60,59,182,64,250,23,8,201,4,37,0,1,5,238,14,15,233,0,15,12,244,232,21,11,0,252,238,27,254,
250,251,0,30,251,232,4,19,244,249,15,238,27,244,247,11,249,2,8,250,2,7,249,8,243,14,242,2,29,243,
242,0,20,248,3,5,245,7,2,12,248,239,10,18,3,229,11,9,248,28,222,16,19,252,19,249,5,237,227,235,
239,35,16,242,248,244,11,239,33,20,213,26,249,5,21,227,0,35,39,240,220,12,29,29,243,242,16,29,2,229,
13,0,19,8,250,245,19,4,247,220,239,234,211,242,20,8,0,6,12,238,224,14,41,195,231,247,188,236,15,234,
1,25,3,231,252,28,27,35,252,236,23,58,255,232,34,41,255,8,19,252,252,29,46,235,238,74,8,189,13,27,
235,233,31,14,236,228,253,23,237,239,16,234,231,29,241,242,4,16,236,239,38,228,234,68,238,216,40,240,255,24,
247,11,239,255,3,21,18,227,243,44,224,253,15,5,10,216,247,51,8,200,4,36,250,2,218,249,45,2,213,11,
13,177,229,20,1,232,30,21,208,26,55,18,194,20,42,7,14,218,8,59,243,251,29,252,2,247,1,15,18,243,
253,10,4,255,11,252,232,248,23,250,242,243,21,246,222,33,252,244,13,253,221,255,38,250,201,55,247,214,13,0,
250,2,217,218,251,51,210,204,33,55,237,217,34,13,11,232,0,80,228,255,8,19,58,210,25,40,226,51,246,237,
37,12,255,234,27,26,203,36,19,221,3,1,0,237,250,28,221,237,35,240,240,1,229,253,0,7,9,244,245,233,
46,251,210,26,14,248,238,33,13,203,28,26,224,5,5,252,25,245,15,1,250,29,236,237,54,221,206,247,8,247,
187,21,51,222,25,35,233,12,25,219,254,45,3,245,21,26,5,253,0,5,237,35,236,226,22,43,206,238,52,19,
226,236,21,1,249,244,244,4,54,223,204,22,5,0,11,197,240,53,218,232,53,210,10,21,251,244,0,2,11,8,
255,249,241,38,249,217,26,27,5,11,251,218,55,26,199,5,30,10,12,198,38,7,221,38,255,227,13,6,43,224,
215,62,0,235,42,212,243,43,253,253,224,16,28,244,12,4,223,251,51,226,239,19,225,30,32,213,238,6,32,231,
232,27,240,238,13,11,233,247,27,237,3,250,2,22,216,19,25,222,36,10,211,254,37,46,215,220,50,230,240,30,
250,246,232,31,5,232,32,243,42,239,253,31,233,14,220,48,31,210,15,245,11,15,2,237,24,251,8,217,47,33,
207,7,31,17,190,11,20,242,218,34,10,179,23,52,222,236,14,25,16,246,243,10,239,183,244,12,195,241,62,188,
9,23,249,246,232,88,27,171,23,49,21,34,27,225,11,7,71,197,217,93,254,213,27,22,240,25,16,224,23,23,
223,36,243,220,57,242,219,218,38,13,172,28,18,226,179,57,41,164,244,66,208,251,248,234,23,34,29,195,45,248,
250,12,0,20,234,33,47,208,3,63,207,34,18,185,0,31,252,216,254,19,36,10,217,220,22,34,251,217,245,70,
2,181,18,35,220,96,161,18,92,165,252,42,254,10,1,228,32,0,246,2,4,30,18,240,235,26,235,225,246,35,
31,184,224,65,251,241,246,13,28,232,234,48,191,233,90,231,226,43,8,191,24,62,206,221,38,25,189,252,72,218,
222,69,5,208,46,245,209,21,53,250,180,54,0,198,76,7,194,26,41,235,1,240,31,240,237,51,199,237,112,217,
177,52,24,222,6,238,241,55,217,183,59,58,208,241,17,35,214,0,25,255,31,219,233,54,0,247,1,228,30,215,
20,53,200,20,249,238,83,254,142,16,125,236,153,40,54,253,18,206,254,49,36,205,182,51,75,223,172,9,247,48,
245,240,251,8,20,226,1,24,232,3,29,15,4,252,252,12,0,16,242,66,239,184,4,38,15,225,245,21,1,241,
3,219,11,227,250,38,248,188,216,77,64,187,240,5,69,230,203,57,39,243,5,240,39,19,208,248,28,2,234,248,
6,248,14,11,250,24,30,221,218,44,9,250,203,242,17,19,254,202,217,49,241,241,0,238,14,32,0,230,253,44,
0,223,86,233,246,39,1,246,6,4,12,234,3,38,237,16,223,223,50,23,229,211,250,27,254,246,233,219,46,250,
188,40,20,239,244,42,19,233,48,18,202,9,11,229,16,22,218,245,35,32,238,223,58,7,0,11,205,221,74,25,
186,10,34,244,222,250,53,16,200,20,37,254,252,227,13,18,14,252,252,31,216,204,28,50,6,234,225,35,1,230,
251,22,11,2,237,0,42,241,212,38,32,227,13,9,209,10,27,238,210,248,20,231,249,13,33,0,236,34,21,9,
11,227,12,29,249,226,245,14,224,196,1,3,196,242,12,37,234,243,40,16,250,21,3,252,18,11,209,241,70,18,
248,3,1,249,229,16,29,236,64,29,214,13,18,4,253,240,15,4,15,239,216,10,32,246,4,239,232,222,241,4,
10,1,242,238,255,12,227,242,16,248,244,10,248,244,7,0,28,35,12,237,5,32,20,17,226,0,26,4,231,15,
26,224,239,31,22,244,233,246,0,0,18,246,244,24,11,253,3,242,241,0,14,18,254,247,249,1,0,243,4,13,
2,243,0,6,1,29,219,236,44,3,248,243,6,48,241,242,31,4,12,252,250,22,13,240,247,1,253,237,231,246,
6,1,241,252,1,6,252,247,16,11,0,17,7,7,253,0,10,232,254,20,3,250,237,245,0,0,14,254,247,252,
243,0,252,248,6,7,252,0,0,0,175,0,4,0,1,0,208,0,144,2,24,6,136,9,22,13,216,14,92,27,
45,38,30,55,57,46,32,23,10,5,168,135,157,120,120,120,200,127,165,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,208,0,144,2,24,6,136,9,22,13,
216,14,92,27,70,61,38,70,73,58,41,29,13,6,168,135,157,120,120,120,200,127,165,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,202,0,136,2,0,6,
140,9,4,13,196,14,92,27,60,50,35,63,67,51,37,27,13,6,168,136,153,120,120,120,200,127,165,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,202,0,
136,2,0,6,140,9,4,13,196,14,92,27,0,27,27,46,49,37,23,17,9,4,168,136,153,120,120,120,200,127,
165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,
190,0,4,0,1,0,168,0,152,1,224,6,236,9,72,13,180,15,163,25,50,42,32,62,49,52,44,32,14,6,
161,98,126,120,120,120,130,107,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,
197,24,223,182,176,250,125,182,3,0,168,0,152,1,224,6,236,9,72,13,180,15,163,25,80,67,40,78,61,66,
55,40,17,8,161,98,126,120,120,120,130,107,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,
24,53,0,191,197,254,124,182,1,250,0,0,1,0,168,0,152,1,224,6,236,9,72,13,180,15,163,25,60,56,
37,71,56,61,51,37,16,7,161,98,126,120,120,120,130,107,120,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,168,0,152,1,224,6,236,9,72,13,180,15,
163,25,0,32,28,54,42,46,38,28,12,5,161,98,126,120,120,120,130,107,120,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,185,0,6,0,1,0,186,0,176,2,
84,6,80,10,192,13,100,15,160,27,50,41,39,54,66,42,33,27,15,0,180,150,125,120,120,120,200,120,120,44,
45,70,130,59,155,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,
186,0,176,2,84,6,80,10,192,13,100,15,160,27,50,63,48,66,81,52,40,33,18,0,180,150,125,120,120,120,
200,120,120,44,45,70,130,59,155,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,
0,0,1,0,186,0,160,2,84,6,80,10,192,13,100,15,160,27,45,47,42,52,75,45,36,29,16,0,180,150,
125,120,120,120,200,120,120,44,45,70,130,59,155,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,
0,0,1,250,0,0,1,0,188,0,34,2,57,5,54,10,250,12,206,14,197,27,45,25,37,37,42,30,25,21,
10,2,180,119,122,120,120,120,200,120,120,44,45,70,130,59,175,0,0,0,40,0,0,0,0,250,222,182,0,0,
0,0,188,40,60,182,64,250,23,8,1,0,192,0,135,1,222,3,20,10,6,12,21,14,244,27,40,19,40,29,
26,17,21,16,6,5,180,81,119,120,120,120,105,135,135,44,45,70,130,59,175,0,0,0,40,0,0,0,0,40,
60,182,40,54,0,191,77,60,59,182,64,250,23,8,1,0,192,0,135,1,222,3,20,10,6,12,21,14,244,27,
0,13,34,24,14,14,18,14,5,4,180,81,119,120,120,120,105,135,135,44,45,70,130,59,175,0,0,0,40,0,
0,0,0,0,0,0,0,0,0,0,146,23,0,0,0,250,0,0,245,0,6,0,1,0,228,0,40,2,128,3,
120,10,8,12,15,14,216,27,50,61,29,60,73,29,34,20,10,5,180,112,128,120,120,120,105,135,135,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,228,0,
40,2,128,3,120,10,8,12,15,14,216,27,40,85,34,71,86,34,40,24,11,6,180,112,128,120,120,120,105,135,
135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,
1,0,228,0,40,2,128,3,120,10,8,12,15,14,216,27,45,75,32,67,81,32,38,23,11,6,180,112,128,120,
120,120,105,135,135,44,45,70,130,60,155,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,
1,250,0,0,1,0,215,0,229,1,83,3,127,10,228,12,60,15,176,27,50,46,41,51,63,25,25,18,10,5,
164,96,118,120,120,120,105,135,135,44,45,70,130,59,155,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,
188,40,60,182,64,250,23,8,1,0,205,0,184,1,52,3,132,10,248,12,4,16,148,27,60,21,43,30,30,20,
13,13,9,4,153,85,112,120,120,120,105,135,135,44,45,70,130,59,175,0,0,0,40,0,0,0,0,40,60,182,
40,54,0,191,77,60,59,182,64,250,23,8,1,0,205,0,184,1,52,3,132,10,248,12,4,16,148,27,0,16,
37,26,26,17,11,11,8,3,153,85,112,120,120,120,105,135,135,44,45,70,130,59,175,0,0,0,40,0,0,0,
0,0,0,0,0,0,0,0,146,23,0,0,0,250,0,0,139,0,3,0,1,0,80,1,168,2,124,6,216,9,
192,13,185,15,32,29,50,49,35,57,69,51,38,29,10,8,255,150,180,120,120,120,135,180,150,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,88,1,168,2,
124,6,216,9,192,13,185,15,32,29,90,82,45,74,89,66,50,38,13,8,255,150,180,120,120,120,135,180,150,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,
88,1,168,2,124,6,216,9,192,13,185,15,32,29,0,47,34,56,67,50,38,28,9,9,255,150,180,120,120,120,
135,180,150,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,
0,0,167,10,52,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,255,253,255,0,1,1,0,
255,253,255,1,0,254,0,7,6,254,2,3,1,0,0,0,253,253,244,245,8,21,10,251,249,4,0,0,4,4,
246,237,246,10,15,27,27,225,225,2,34,31,7,252,226,4,33,247,210,242,25,37,13,247,241,243,25,28,247,237,
254,65,35,236,218,188,249,59,78,31,199,236,10,229,22,50,36,238,191,14,47,241,234,236,224,68,38,10,241,213,
43,0,6,33,244,26,235,221,6,233,38,252,235,235,5,57,253,254,18,15,5,221,203,212,219,255,22,52,57,23,
218,184,213,244,18,31,40,10,225,228,236,242,245,17,29,243,221,245,24,23,17,251,237,225,237,0,250,243,0,20,
17,21,246,216,245,30,55,242,209,2,7,27,23,248,236,219,6,19,254,47,23,250,227,207,5,12,23,13,7,0,
251,249,249,250,254,0,255,251,248,248,254,5,8,12,12,255,254,13,0,243,245,247,0,0,10,14,2,250,247,251,
4,1,253,243,250,4,4,255,1,2,2,1,4,0,1,255,0,3,5,7,4,5,9,5,1,0,3,4,11,8,
5,0,2,3,6,4,255,255,0,1,1,1,2,8,9,6,3,252,250,248,252,5,8,5,4,0,255,252,253,251,
1,7,4,0,252,254,253,1,3,2,254,0,255,252,252,255,254,1,3,253,253,0,3,255,253,2,4,4,6,2,
255,249,252,4,4,8,8,3,1,255,3,254,250,0,4,6,0,252,1,255,1,1,255,248,253,2,5,9,255,247,
251,251,0,10,2,251,236,250,2,7,6,0,1,11,7,5,4,3,3,245,253,6,253,0,0,254,243,244,1,5,
4,251,248,247,236,249,5,6,250,252,6,12,254,248,242,245,21,37,248,234,3,248,247,20,30,246,224,0,34,13,
14,239,248,10,0,16,0,3,9,253,3,3,247,244,238,23,49,1,247,225,0,29,245,1,3,253,236,249,11,14,
14,13,10,10,11,10,6,254,244,240,254,13,5,254,254,18,0,4,206,237,18,253,25,241,250,1,243,32,206,6,
52,241,211,219,46,28,221,18,238,221,47,39,8,197,0,239,208,39,69,254,208,241,15,5,245,0,238,41,15,190,
47,15,242,226,247,28,10,22,2,230,214,17,16,46,16,161,31,46,223,245,241,64,206,19,20,216,36,208,34,18,
211,27,207,62,231,221,100,183,255,41,235,242,245,100,239,150,0,52,13,16,253,8,23,0,248,15,24,206,211,226,
64,40,42,23,151,194,28,50,19,214,3,19,224,241,244,45,255,230,255,24,24,245,246,213,241,46,1,232,236,30,
30,5,77,20,2,57,17,35,9,250,10,221,25,21,255,15,213,226,5,241,238,208,211,12,234,0,244,188,253,26,
246,211,240,21,3,6,236,225,231,233,46,49,13,243,2,34,12,243,3,0,19,54,56,13,14,10,36,8,232,1,
0,252,2,4,255,228,250,246,250,244,226,235,242,236,237,213,231,10,23,242,225,242,26,5,251,250,9,8,13,8,
0,1,11,18,16,9,7,12,17,14,1,245,243,22,49,38,246,247,247,7,8,253,221,229,21,10,247,240,237,9,
15,232,229,252,33,22,237,1,249,228,0,14,37,4,226,21,0,214,14,41,39,4,217,243,17,22,6,243,12,15,
2,18,4,219,242,254,17,31,248,246,248,252,241,253,19,2,15,252,240,253,252,247,244,5,23,12,21,217,210,0,
5,39,7,239,249,248,25,0,251,240,221,36,49,14,244,224,0,10,226,247,24,9,18,10,5,250,235,5,243,1,
18,250,245,250,14,15,243,244,10,12,246,229,241,23,34,253,219,213,4,52,34,27,224,233,16,247,252,21,248,233,
7,3,3,237,225,12,23,26,17,251,4,243,224,235,240,22,23,29,11,212,215,28,18,12,0,248,8,237,247,250,
222,23,23,23,32,229,228,248,254,28,12,253,251,227,234,38,31,9,2,230,251,0,246,26,26,10,255,234,29,39,
207,213,230,7,66,19,238,242,223,247,13,25,38,6,230,233,0,0,255,239,250,0,24,36,9,239,236,255,11,12,
5,2,3,5,5,5,3,4,5,2,255,248,240,242,250,5,252,39,5,213,9,20,254,237,230,50,60,240,249,3,
212,244,22,2,21,239,17,27,220,228,35,6,221,239,11,52,14,210,8,25,4,229,200,38,22,236,33,5,215,207,
253,52,11,254,16,227,217,5,44,244,171,225,40,27,32,35,223,212,243,28,21,223,237,5,231,235,57,72,238,166,
222,248,23,45,52,14,170,252,54,249,220,198,30,43,215,18,38,19,241,245,10,211,195,55,73,250,226,0,37,226,
199,47,63,212,13,46,3,32,187,236,102,1,235,10,221,66,15,169,50,213,249,117,242,244,237,221,36,9,241,19,
219,246,65,218,215,27,33,13,209,13,250,225,243,75,45,191,223,223,19,33,5,66,208,188,29,11,39,246,221,38,
228,2,35,229,21,243,212,79,252,229,17,240,24,201,220,82,27,215,231,7,21,243,239,18,246,235,4,251,24,243,
5,6,221,5,16,23,230,247,23,251,224,228,35,41,1,237,205,20,68,243,219,235,16,31,240,243,218,225,255,11,
8,1,2,7,9,7,2,253,1,14,13,2,252,7,19,239,11,11,1,251,229,18,11,1,235,22,7,230,244,28,
252,24,243,252,241,12,7,34,230,239,22,239,34,249,239,246,244,29,16,252,4,0,201,16,37,247,244,6,19,251,
210,247,86,250,197,239,23,42,0,221,31,246,197,22,50,14,6,207,15,7,211,47,22,245,254,216,5,4,24,48,
245,175,199,75,66,45,209,179,241,241,71,92,223,203,205,16,23,255,24,23,244,242,239,242,11,2,45,254,229,205,
235,84,45,222,203,220,66,2,22,25,212,243,240,11,28,236,12,36,252,231,236,228,47,31,232,232,239,8,25,10,
17,200,238,35,34,35,238,224,229,222,249,57,66,23,185,189,244,58,55,226,253,5,244,8,232,0,11,21,19,203,
212,50,0,36,42,231,206,207,48,45,252,236,220,42,15,3,2,201,232,73,45,247,212,239,1,1,41,2,227,234,
10,30,14,241,252,17,0,236,25,236,247,29,12,250,250,233,21,5,252,251,21,17,32,210,237,229,243,13,0,252,
244,241,253,5,6,5,7,11,13,6,232,205,232,45,97,10,211,208,238,35,10,11,2,231,3,38,6,246,228,220,
49,29,234,224,220,12,45,49,250,185,227,22,52,49,242,178,237,22,44,11,209,247,6,227,34,25,18,243,22,67,
7,202,13,60,255,229,188,253,72,10,236,231,183,255,78,30,244,193,251,14,46,49,227,207,198,34,62,5,232,245,
13,236,228,0,15,237,214,233,1,3,28,249,1,253,18,17,0,6,6,241,16,0,0,4,238,255,22,31,254,202,
2,26,243,13,25,20,0,193,255,20,242,27,17,246,216,224,29,50,0,240,234,228,219,40,95,19,173,225,63,42,
7,0,0,241,251,19,28,240,223,238,46,39,219,201,245,13,31,11,219,195,255,51,28,214,198,7,41,37,20,254,
198,208,215,52,74,36,251,191,206,20,45,54,233,241,4,19,25,17,241,235,232,1,38,36,9,253,233,211,255,49,
11,222,20,56,247,208,181,243,55,21,14,23,240,212,253,24,29,33,201,225,14,39,68,254,193,212,252,20,2,252,
249,248,254,1,0,255,3,10,15,12,255,243,255,11,13,242,237,202,20,88,19,223,203,213,23,26,15,41,247,204,
250,243,47,44,215,205,17,11,40,4,232,253,8,235,1,14,14,7,241,11,24,2,240,241,234,218,10,87,37,227,
178,202,24,65,27,253,221,204,239,40,49,21,216,202,247,11,48,44,251,203,215,7,85,29,210,171,246,63,84,225,
184,250,34,254,245,248,45,19,223,227,227,50,74,13,251,185,194,38,248,15,59,253,234,196,231,127,5,228,216,209,
76,19,200,255,4,8,58,210,219,11,245,92,29,225,4,195,234,69,3,225,242,15,50,231,214,10,247,219,59,59,
227,199,188,53,85,245,237,218,214,44,50,237,214,13,46,14,233,251,251,242,251,37,19,216,211,22,59,26,217,229,
18,22,15,252,252,243,222,243,29,41,235,214,32,32,42,226,200,8,236,39,39,239,0,8,223,237,21,43,31,236,
200,19,51,22,235,217,0,6,230,31,48,24,251,201,214,27,39,17,236,207,251,48,10,248,235,2,14,247,254,0,
253,253,251,249,250,252,0,9,17,21,12,250,237,233,238,250,38,249,216,245,30,43,28,189,208,21,25,37,8,213,
200,220,39,66,252,242,219,248,21,13,9,12,226,193,254,61,37,230,199,234,17,50,6,254,249,221,11,36,248,245,
15,11,225,225,28,59,21,232,241,228,20,28,23,4,207,218,4,37,57,240,213,0,255,16,16,0,233,245,17,15,
22,252,231,15,252,228,253,10,52,41,231,244,236,211,5,29,53,24,222,207,224,30,75,14,224,220,253,48,18,202,
222,46,63,0,198,209,25,47,11,227,233,6,39,16,234,246,251,240,2,252,11,46,242,211,251,37,33,243,218,251,
29,0,252,251,3,248,242,21,15,6,251,239,252,252,1,5,23,8,222,232,27,30,247,228,252,13,6,19,13,244,
218,229,16,36,15,1,240,1,16,11,255,255,229,250,22,0,241,23,27,13,233,217,8,25,21,14,221,246,14,19,
255,245,229,240,22,37,25,242,209,244,3,17,26,240,220,234,2,48,24,235,218,224,16,39,247,246,2,17,1,244,
238,241,253,7,8,1,254,4,14,16,2,241,232,253,18,32,255,210,227,10,50,2,218,240,244,36,43,242,226,222,
255,35,47,253,213,216,245,33,39,16,247,238,253,10,5,15,255,231,247,6,7,5,27,3,237,7,0,0,7,12,
2,237,242,11,17,24,252,217,253,19,28,6,232,239,254,247,5,18,19,3,230,6,24,233,247,28,4,241,243,11,
13,4,244,249,0,252,25,25,255,231,220,16,37,250,232,238,36,33,250,1,253,226,248,6,36,5,219,234,245,10,
38,16,238,211,255,32,24,252,239,232,236,0,29,11,252,242,254,24,15,248,240,243,253,1,20,7,236,240,7,15,
12,6,247,4,251,255,16,254,250,255,254,0,252,16,37,13,231,236,2,21,23,6,241,245,255,18,12,246,244,10,
24,10,238,242,8,18,20,13,239,240,4,13,4,250,254,16,20,0,235,246,14,27,1,248,235,241,16,17,254,243,
234,238,6,27,1,245,253,7,232,233,5,254,253,12,0,248,244,6,246,220,2,9,9,18,245,242,248,249,2,3,
252,247,255,8,12,10,6,2,1,6,9,6,2,247,237,230,16,251,228,31,16,245,244,235,254,252,21,62,252,208,
219,221,30,71,253,213,251,18,8,238,36,36,231,212,248,232,42,78,14,181,209,40,31,234,30,59,241,182,5,28,
6,235,20,38,213,202,27,53,15,10,11,225,180,21,79,30,226,207,180,234,66,83,21,196,218,241,0,32,10,1,
235,187,2,67,39,231,189,235,40,51,22,205,209,13,31,10,244,220,242,32,45,18,232,218,247,21,31,23,228,210,
5,54,45,246,201,235,16,40,26,248,232,245,4,18,6,247,251,14,17,15,0,250,3,15,19,10,3,11,17,19,
25,15,9,19,25,18,7,17,28,23,12,9,6,5,12,20,14,255,250,0,10,10,254,242,241,247,249,249,244,244,
244,247,246,233,228,242,245,237,234,227,227,241,245,236,226,240,2,255,242,233,223,230,243,254,255,250,245,231,239,23,
28,245,218,235,0,8,9,14,247,236,229,252,23,28,13,246,240,0,251,4,8,1,0,254,4,0,15,17,3,253,
253,250,248,249,251,252,252,2,11,19,16,6,6,15,25,3,244,18,7,0,26,44,7,222,255,32,7,25,32,230,
218,20,51,16,231,222,253,55,21,219,253,32,3,239,2,242,231,12,14,8,18,247,212,246,43,12,223,251,36,2,
221,240,10,19,9,240,230,252,29,29,0,231,214,242,29,31,251,230,250,4,6,21,15,1,252,251,252,252,11,12,
253,252,253,249,251,10,10,7,10,18,35,55,52,27,252,0,24,28,32,32,18,9,21,36,34,25,18,9,6,10,
8,244,235,0,85,0,3,0,5,0,112,0,144,1,8,7,152,8,216,14,14,18,174,21,55,2,12,14,4,4,
4,3,5,5,92,165,137,137,150,175,92,165,137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,
40,53,0,191,197,24,223,182,176,250,125,182,5,0,112,0,144,1,8,7,152,8,216,14,14,18,174,21,30,3,
14,16,5,5,5,4,6,6,92,165,137,137,150,175,92,165,137,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,9,0,112,0,144,1,8,7,152,8,216,14,14,18,
174,21,0,3,13,15,4,4,4,3,5,5,92,165,137,137,150,175,92,165,137,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,240,0,5,0,1,0,184,0,72,2,
172,3,20,10,164,11,53,14,160,27,45,61,26,62,74,37,35,20,13,5,173,142,135,120,120,120,182,105,120,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,
184,0,72,2,172,3,20,10,164,11,53,14,160,27,75,118,36,86,103,51,49,28,18,7,173,142,135,120,120,120,
182,105,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,
0,0,1,0,184,0,52,2,158,3,240,9,168,11,61,14,192,27,60,96,33,79,91,46,43,26,16,7,172,140,
135,120,120,120,182,105,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,
0,0,1,250,0,0,1,0,192,0,120,1,32,3,172,8,204,11,141,14,224,28,60,47,27,63,39,27,18,16,
8,8,162,120,135,120,120,120,117,90,180,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,
0,0,188,40,60,182,64,250,23,8,1,0,176,0,104,1,32,3,92,8,204,11,141,14,224,28,0,36,23,58,
38,22,15,12,9,8,152,120,97,120,120,120,107,90,97,44,45,70,130,59,0,0,0,0,40,0,0,0,0,40,
60,182,40,54,0,191,77,60,59,182,64,250,23,8,144,9,55,0,0,1,1,1,1,1,2,3,3,3,1,0,
2,4,3,1,1,0,0,0,1,0,255,254,255,0,1,1,0,255,254,255,255,254,254,253,251,252,253,254,0,1,
1,1,2,2,0,0,0,0,2,1,0,0,0,0,2,3,3,3,2,3,3,3,1,0,0,255,255,0,1,0,
0,255,255,255,254,253,254,0,2,3,4,4,2,0,254,253,253,253,252,251,252,255,0,0,0,1,2,2,1,0,
255,254,253,252,253,255,0,1,2,3,3,2,3,3,0,255,0,0,253,251,252,254,0,3,5,4,3,3,1,0,
0,1,0,253,253,255,0,0,255,254,255,0,0,0,254,254,255,255,0,0,255,0,1,1,1,4,6,1,253,254,
2,8,8,5,0,255,254,254,0,2,0,255,255,1,4,6,6,4,3,2,1,0,255,254,250,246,243,245,249,0,
6,11,11,6,255,250,248,249,251,251,250,249,251,2,7,6,4,5,8,11,12,8,5,2,253,245,245,249,250,251,
1,10,15,17,15,5,252,251,248,241,243,251,252,251,0,2,0,253,253,252,255,4,5,0,1,4,1,250,245,245,
248,1,11,15,13,8,4,0,250,249,0,4,6,11,17,16,9,1,249,243,246,253,252,250,254,4,12,14,8,0,
254,0,254,248,246,246,239,238,254,14,14,1,248,247,1,14,15,4,254,252,250,252,253,248,245,0,11,11,8,11,
9,3,4,9,5,250,241,241,251,10,19,10,254,253,2,7,13,11,249,232,239,0,8,10,10,5,0,252,250,250,
250,246,244,0,16,18,6,255,2,8,10,4,250,244,248,251,249,252,1,0,253,2,10,12,12,13,8,255,248,246,
243,241,246,252,0,8,16,16,12,10,6,254,249,253,252,244,243,249,253,255,6,13,12,10,7,4,5,7,3,246,
236,245,2,6,8,8,2,255,254,253,251,253,0,253,251,255,4,8,10,4,251,253,6,6,254,250,252,0,2,0,
248,252,7,5,255,7,16,0,238,243,0,8,12,6,250,252,11,14,5,1,1,252,247,249,250,249,252,254,252,0,
15,20,9,251,245,248,255,1,253,248,1,10,5,254,254,0,254,254,2,11,15,5,247,242,248,0,2,1,0,3,
4,4,6,2,245,242,0,10,1,253,0,252,246,0,14,11,255,247,244,244,254,3,253,248,252,255,2,12,13,0,
247,249,253,1,10,12,254,237,238,250,254,1,11,14,8,10,17,12,254,246,244,243,249,3,7,5,2,255,254,5,
7,6,12,18,4,241,245,6,1,239,242,9,18,4,247,245,251,2,4,3,8,6,246,239,0,16,8,251,247,247,
255,19,33,16,243,235,246,0,5,3,253,251,1,4,2,8,13,1,244,252,10,6,253,2,11,5,251,253,8,13,
6,254,248,243,237,236,251,14,19,16,13,9,0,247,245,251,0,0,253,254,6,12,11,1,244,239,250,7,12,7,
4,2,255,247,245,0,6,251,242,255,16,19,6,245,235,240,1,20,26,14,242,225,235,249,1,17,31,15,240,236,
0,11,3,249,248,2,15,17,6,251,243,234,236,4,32,29,5,255,3,254,247,0,9,2,252,1,0,233,219,236,
8,28,32,16,248,245,5,2,241,240,250,250,1,23,22,246,226,236,251,6,20,17,247,240,14,31,10,242,238,240,
238,249,16,23,6,250,3,23,32,17,246,233,240,244,242,246,0,9,15,19,19,4,244,244,250,243,234,248,20,22,
1,254,2,249,237,243,255,254,251,2,10,7,5,4,253,247,251,251,244,252,6,254,246,11,31,17,248,239,247,8,
26,15,241,238,1,254,235,255,29,5,213,219,12,42,38,17,245,231,243,255,1,4,251,224,226,10,34,17,13,30,
13,236,243,11,8,238,218,225,255,24,20,2,0,10,16,27,28,255,219,221,255,20,6,234,225,248,22,28,7,248,
254,4,251,243,6,30,19,240,227,248,6,1,247,243,251,13,32,33,8,238,237,253,249,232,251,26,16,247,0,17,
4,242,249,1,255,1,8,9,17,16,247,234,255,250,215,231,36,45,253,240,11,4,222,219,250,9,11,21,14,252,
251,251,234,227,248,17,23,20,13,250,237,250,12,252,226,243,16,12,3,21,21,248,240,254,248,237,0,19,6,252,
8,8,250,255,2,238,230,251,10,5,7,25,30,14,246,228,225,238,5,19,10,246,233,242,14,41,35,251,211,215,
11,51,29,239,227,239,235,229,249,23,37,14,244,4,37,18,229,231,253,232,209,245,35,26,247,243,17,42,29,5,
6,9,236,211,235,7,252,248,33,58,29,248,244,10,15,234,204,237,22,2,226,246,33,46,26,251,231,241,6,3,
244,252,2,242,237,252,0,255,15,26,12,3,3,246,237,255,12,254,249,13,11,236,236,14,24,3,2,27,31,252,
212,216,253,8,246,251,35,62,43,7,233,218,235,253,230,214,255,44,32,5,11,23,15,0,230,196,220,24,26,236,
234,14,12,247,2,20,17,28,28,232,192,232,24,5,225,235,3,5,14,37,35,6,242,242,242,241,0,32,40,3,
229,245,5,240,226,0,30,22,3,3,14,13,247,214,211,3,50,30,247,11,42,0,198,213,3,13,254,248,0,20,
48,39,251,236,254,237,204,225,17,27,4,248,241,250,33,64,36,239,221,239,4,9,252,242,242,247,248,246,4,31,
35,12,0,7,10,254,236,229,242,254,252,2,20,15,249,252,14,4,240,254,20,254,222,240,24,19,236,223,0,28,
17,255,13,37,15,215,195,231,18,25,12,5,6,8,8,6,255,246,247,0,254,238,239,14,31,6,245,5,11,252,
0,14,254,233,249,11,0,240,250,9,12,4,253,3,19,11,245,244,251,240,237,6,20,3,243,237,243,14,34,23,
5,1,247,238,1,20,254,226,244,14,0,237,1,29,22,1,0,7,5,250,243,240,241,0,13,8,245,228,239,30,
63,18,210,224,27,41,2,230,240,3,252,227,237,16,25,9,255,254,252,2,17,2,216,213,12,54,39,2,237,239,
6,21,250,221,250,24,3,253,23,11,211,199,255,44,45,24,248,216,225,9,22,0,253,20,5,207,216,54,74,208,
156,32,126,27,176,223,44,32,230,203,234,31,37,250,239,18,27,3,255,244,211,233,32,18,229,250,36,17,245,6,
23,248,212,224,7,23,7,251,1,5,0,11,30,5,225,247,33,7,211,231,34,25,209,198,36,79,248,193,8,62,
254,189,224,25,15,230,231,21,53,30,242,238,8,2,235,253,20,0,240,3,252,206,218,41,68,15,250,20,14,233,
217,217,213,239,38,51,3,228,249,17,15,9,6,254,249,248,233,221,244,23,21,255,4,26,28,12,251,236,227,232,
253,9,2,249,246,2,30,37,12,251,4,4,233,207,212,252,35,30,0,3,38,27,238,235,13,9,225,219,3,29,
17,253,237,222,234,23,66,66,27,231,201,216,241,231,219,2,72,95,45,236,205,218,231,223,240,23,37,24,4,241,
228,240,11,17,4,6,13,8,0,243,224,221,238,255,3,20,56,56,9,232,221,200,188,233,40,52,31,16,255,228,
212,224,9,59,62,251,195,224,22,14,228,234,15,19,0,254,16,35,25,239,208,229,16,23,253,246,8,8,250,253,
0,1,30,49,0,183,182,252,42,14,230,247,35,44,9,228,213,223,1,33,30,255,225,222,247,18,27,21,25,37,
24,233,190,198,242,20,34,32,12,241,236,2,17,13,17,32,12,201,170,229,48,53,1,235,11,39,12,223,225,12,
23,241,219,246,11,255,242,4,32,34,14,8,16,247,198,201,8,46,6,229,22,67,10,184,204,36,71,35,247,226,
214,202,217,14,75,87,42,250,219,201,204,247,45,38,238,217,239,242,233,17,74,60,254,216,227,248,244,230,239,10,
14,1,11,24,9,250,24,67,33,190,141,193,18,57,57,29,253,247,247,238,242,11,37,26,241,216,240,5,223,186,
245,93,106,9,204,243,26,8,234,220,218,238,21,39,18,7,27,24,243,222,240,16,22,248,218,233,18,26,253,247,
23,29,242,228,26,65,4,170,171,0,65,54,10,236,228,234,252,41,79,44,215,160,181,247,48,60,30,7,9,18,
1,217,197,231,35,62,36,246,216,219,233,236,3,42,48,19,252,0,11,248,205,193,238,38,57,35,250,217,221,4,
39,30,251,245,14,12,230,223,253,251,215,231,56,102,45,216,200,238,2,5,12,6,243,232,240,1,24,28,12,12,
13,247,229,236,237,229,250,25,22,254,246,252,0,7,29,33,253,205,190,226,31,58,25,240,244,11,20,24,18,236,
201,219,253,12,21,22,0,240,251,6,13,32,39,7,222,221,245,252,247,250,3,18,31,26,254,221,213,243,28,39,
10,231,214,228,3,28,23,6,11,15,0,253,7,238,198,225,45,66,19,240,229,220,229,5,28,29,28,22,1,230,
209,218,9,49,35,245,228,242,249,3,30,34,6,244,251,0,245,227,223,251,13,1,1,21,16,245,242,9,17,9,
12,6,235,222,238,237,224,11,74,49,226,214,21,55,16,216,216,5,11,221,205,4,56,34,251,11,33,254,208,225,
14,23,254,222,210,240,35,49,20,6,10,248,221,240,24,21,234,209,228,10,26,7,5,51,71,11,194,179,219,14,
44,45,22,247,214,191,228,62,106,55,238,217,211,198,216,8,43,45,32,13,242,230,236,233,235,20,68,52,241,200,
203,222,253,30,48,52,42,251,176,164,238,49,51,27,19,8,251,243,224,217,6,61,39,221,214,18,30,255,252,10,
251,222,239,47,80,30,204,168,190,226,9,74,112,58,213,169,207,242,239,255,46,71,28,221,195,213,12,59,47,2,
239,251,250,227,228,3,30,27,7,253,1,4,254,250,255,252,243,250,8,6,253,250,248,253,19,35,12,230,222,245,
0,246,249,4,8,12,24,27,10,237,215,223,4,32,10,223,229,16,26,255,2,32,20,231,215,247,21,16,243,228,
245,15,19,0,246,10,30,24,11,249,207,168,192,17,80,78,22,225,216,233,0,27,48,33,239,201,210,240,255,251,
7,38,58,41,254,226,240,1,248,235,243,251,249,6,22,8,251,19,42,21,246,238,237,231,240,8,15,5,255,246,
248,21,46,29,249,239,249,250,237,223,226,253,34,53,38,2,234,234,249,9,18,3,229,219,248,16,18,17,17,254,
231,247,25,23,239,211,222,248,7,15,22,23,9,238,229,5,39,25,239,227,244,250,241,249,20,34,20,251,242,1,
15,4,245,244,255,6,0,239,231,1,38,44,21,249,236,241,243,236,245,20,31,253,222,238,16,25,17,16,8,247,
243,247,245,245,253,2,8,21,24,5,247,250,250,236,239,10,25,8,240,231,238,253,8,9,6,9,12,0,231,227,
252,13,9,8,9,0,245,247,252,254,2,9,2,249,255,16,23,17,4,241,223,230,7,28,15,252,247,255,6,7,
11,15,5,239,229,244,3,3,0,6,7,249,240,250,10,20,18,0,231,220,236,11,28,16,1,0,4,247,226,234,
15,44,32,0,238,238,8,7,88,0,0,0,0,0,0,0,255,0,2,2,0,255,254,253,254,0,4,8,8,5,
1,0,254,254,0,1,2,1,255,254,254,0,1,2,2,1,0,0,0,255,0,0,2,3,1,0,0,0,0,0,
0,0,0,255,0,1,3,5,9,18,26,21,254,230,223,231,248,4,10,14,12,1,251,251,0,0,255,255,0,255,
252,252,4,13,14,8,0,245,231,224,234,1,23,26,17,7,3,3,0,255,0,0,0,0,0,0,0,0,0,2,
2,2,0,255,255,0,0,0,1,2,2,1,255,254,254,0,2,3,1,255,254,254,0,2,6,8,7,3,0,253,
253,254,255,0,3,3,0,255,0,0,0,0,1,1,0,255,0,1,0,255,0,2,1,0,0,0,0,0,0,1,
0,0,0,0,0,0,2,7,13,15,6,247,235,236,246,1,9,14,13,7,254,250,251,253,255,0,2,4,3,1,
0,0,255,252,252,254,0,0,255,255,0,1,3,5,6,6,3,0,253,253,254,255,255,0,0,0,1,5,9,6,
255,251,252,0,2,1,0,0,4,7,4,252,246,248,255,5,9,6,255,249,250,1,15,35,51,47,20,246,225,214,
219,241,13,27,16,255,247,252,0,253,252,255,245,229,247,23,13,233,234,11,17,244,228,243,0,249,228,223,251,22,
24,23,23,1,232,240,11,13,253,251,0,1,6,17,18,4,251,7,15,252,242,7,22,7,244,249,7,11,6,3,
2,4,255,238,227,248,21,16,241,239,20,35,251,215,240,22,18,242,233,252,249,228,246,32,23,238,242,16,17,253,
240,245,4,6,243,246,24,29,250,231,252,24,10,229,237,21,15,233,236,16,28,11,244,245,7,3,240,251,27,27,
243,225,253,19,7,0,19,22,238,203,235,40,41,241,220,246,13,22,5,233,239,13,18,249,236,255,16,10,249,241,
246,246,244,10,40,23,229,222,5,18,0,247,0,14,4,232,239,25,31,251,238,0,13,10,244,242,25,43,254,207,
226,20,37,13,250,3,27,16,220,207,255,25,15,14,23,6,233,220,236,27,44,250,206,230,18,29,22,0,224,220,
247,26,35,10,241,224,219,244,36,46,12,250,246,234,238,255,253,248,25,53,1,179,199,42,68,254,220,1,20,248,
231,253,14,3,1,20,19,246,221,241,37,35,221,192,251,49,35,0,242,242,242,239,249,15,30,28,8,220,195,1,
69,16,190,221,65,80,243,190,242,30,255,221,9,75,46,209,183,241,18,250,243,25,45,254,192,232,64,53,234,205,
241,30,20,231,232,25,40,238,188,232,53,58,7,227,211,212,4,61,44,247,237,242,223,240,39,47,253,214,225,3,
28,23,6,0,242,230,255,34,27,0,245,226,203,240,65,86,6,174,182,23,78,10,190,212,20,39,23,7,243,227,
246,22,17,247,252,37,31,193,177,54,117,7,203,30,47,191,164,39,126,29,169,209,38,15,223,29,106,46,184,176,
5,29,232,235,55,67,228,176,0,67,10,203,245,33,249,222,10,22,231,229,27,34,236,208,239,16,8,237,235,1,
16,10,255,250,5,29,28,245,215,237,23,26,0,7,37,21,221,213,15,54,23,234,241,24,24,238,214,242,28,36,
11,248,241,232,226,244,14,23,14,247,228,245,12,248,213,247,66,45,184,148,8,106,41,190,222,68,44,191,198,56,
86,250,194,242,32,8,229,0,50,47,242,197,236,49,45,246,231,0,6,1,5,6,9,11,239,205,244,59,31,197,
213,54,54,227,224,25,15,226,242,18,13,6,4,230,220,19,41,245,241,36,14,219,249,38,3,219,2,39,255,229,
20,46,248,205,249,50,27,217,218,29,42,220,183,11,73,10,207,246,46,10,176,206,71,74,237,237,46,7,175,220,
81,74,220,197,12,29,244,246,22,22,247,225,241,18,35,20,234,215,245,21,25,18,4,234,245,26,4,226,9,48,
247,196,253,52,25,249,251,237,232,7,32,25,238,192,211,35,79,35,220,180,208,32,73,32,236,224,225,240,12,22,
27,28,252,218,235,15,11,243,249,18,24,9,248,236,240,9,24,6,238,245,19,23,240,220,3,35,18,241,227,247,
21,25,2,244,222,197,248,83,78,238,184,221,8,11,10,34,40,236,190,241,45,19,240,23,48,228,177,255,70,23,
205,206,9,37,11,255,11,249,214,243,48,35,230,230,6,250,239,14,38,27,255,246,6,0,228,233,21,28,243,244,
40,35,229,208,244,30,40,3,214,219,15,35,251,229,12,42,13,215,209,19,39,224,205,18,46,0,227,255,20,5,
252,253,245,241,248,11,36,29,244,218,239,19,24,6,254,244,232,244,12,17,5,0,250,242,6,31,4,212,224,15,
12,240,4,28,253,225,252,26,0,214,232,25,25,244,241,18,25,248,225,246,28,32,244,218,3,34,242,202,1,57,
19,230,241,249,238,7,28,2,245,1,247,229,0,37,21,242,238,241,242,9,28,14,243,215,220,14,59,48,250,197,
189,245,53,48,2,237,233,228,246,22,33,27,1,227,229,1,14,1,250,3,12,10,4,250,241,252,16,14,246,235,
2,27,8,222,231,23,35,4,233,237,6,21,10,253,245,218,217,35,90,32,198,193,246,13,3,15,38,7,203,206,
18,37,247,252,47,16,185,206,54,65,240,197,240,36,27,255,6,11,233,222,19,51,3,221,250,4,238,252,30,35,
9,243,253,7,239,218,252,35,8,231,10,49,9,212,223,14,45,25,227,203,243,32,12,224,244,38,35,244,211,249,
49,8,201,243,56,33,228,233,18,17,251,251,253,241,236,253,30,42,6,222,224,4,27,20,9,249,223,226,12,30,
6,249,4,2,244,8,28,241,204,242,28,19,2,9,6,236,232,8,33,5,216,221,14,29,253,246,23,20,222,198,
0,68,47,214,206,30,32,210,232,81,74,228,202,243,249,248,24,39,17,238,207,222,27,62,28,233,219,227,239,19,
47,16,227,215,239,20,41,29,0,227,215,232,13,33,17,1,6,244,220,253,50,38,232,208,240,8,5,12,29,15,
237,226,255,23,17,0,250,252,254,247,246,18,49,20,211,211,22,42,251,236,2,250,230,252,34,34,0,231,235,251,
3,14,25,5,219,230,31,37,243,228,15,37,254,219,248,33,14,228,241,23,7,227,246,27,5,227,255,36,0,212,
254,52,25,228,217,239,6,15,17,23,17,237,216,4,48,8,211,242,27,249,213,1,40,1,230,10,28,240,218,252,
4,234,245,18,10,1,17,6,217,220,28,48,249,211,224,0,25,26,5,1,21,13,229,229,30,50,245,196,226,16,
23,22,34,25,245,217,221,248,26,45,18,225,212,248,20,17,18,23,1,224,218,246,16,20,9,252,243,247,5,9,
1,7,16,255,220,216,5,48,37,247,222,236,9,23,11,247,242,0,10,0,244,252,7,8,0,248,252,3,5,255,
250,2,9,246,231,249,16,9,250,0,12,5,243,237,251,13,10,246,246,11,9,237,240,22,42,23,249,228,225,248,
25,31,8,251,252,250,254,16,28,10,238,231,247,5,14,10,254,249,253,248,246,6,20,1,235,243,3,253,237,244,
13,27,11,244,232,229,246,20,33,16,248,242,247,243,239,255,26,32,12,245,231,241,11,22,11,0,250,237,242,13,
24,8,255,7,4,245,247,9,14,3,251,246,240,246,12,25,18,2,249,244,247,255,3,6,12,12,254,236,242,4,
11,9,12,8,249,236,240,0,15,16,6,2,4,255,242,243,6,18,12,2,254,252,251,255,2,2,0,0,2,4,
0,253,1,8,1,246,248,5,9,0,248,248,249,246,250,6,10,253,238,240,251,1,4,3,255,252,252,253,0,2,
0,253,254,2,8,12,5,249,248,3,11,11,13,13,252,235,244,9,18,13,7,3,254,248,246,252,3,6,3,255,
254,253,252,253,2,6,2,250,244,242,244,251,0,253,248,254,5,3,255,0,0,249,243,245,253,6,10,6,0,254,
254,3,12,11,1,248,244,247,3,15,16,11,8,8,7,5,6,4,251,244,249,1,5,6,11,13,6,0,0,254,
250,249,248,249,251,0,4,7,10,10,122,6,55,0,253,254,0,0,0,0,0,0,0,1,0,255,255,255,255,254,
255,0,2,1,0,254,253,0,6,7,5,2,255,250,255,9,11,2,253,0,3,2,255,0,4,3,3,1,255,0,
4,1,254,3,7,0,248,248,254,4,9,5,253,248,250,255,8,9,250,243,253,4,2,255,254,255,253,252,255,5,
8,5,0,251,248,253,10,15,6,247,237,248,5,6,4,3,252,245,249,0,5,12,11,254,248,0,6,1,251,250,
255,9,14,252,236,251,9,13,12,248,235,1,25,11,251,253,251,250,5,10,6,8,255,231,233,7,28,26,2,234,
243,23,37,20,4,246,233,240,0,11,17,9,235,228,247,252,8,25,12,244,238,244,249,13,30,10,236,230,238,248,
11,21,5,245,245,249,250,254,7,24,27,251,221,238,15,18,11,13,0,239,247,7,8,7,2,250,4,10,246,240,
9,28,16,250,236,235,252,20,26,4,239,241,254,4,10,12,253,232,241,13,17,0,252,245,238,13,31,0,236,238,
245,4,20,10,7,20,253,222,242,16,15,8,6,248,244,255,254,253,3,8,14,14,249,230,245,2,254,5,23,23,
3,232,219,241,21,34,24,1,223,212,253,41,38,11,242,220,230,16,37,15,245,227,228,8,42,30,252,226,218,249,
40,30,252,4,3,222,230,27,28,253,1,1,223,224,14,34,23,7,239,219,228,3,39,47,252,192,213,19,48,42,
3,195,202,45,73,252,213,244,6,253,251,13,29,13,230,225,2,29,26,249,211,232,44,58,250,199,205,1,61,50,
237,209,243,2,255,28,53,0,201,223,1,23,39,25,3,12,19,253,0,43,59,26,235,219,245,2,239,227,246,251,
247,9,7,229,220,247,10,21,21,246,239,24,8,184,204,51,53,249,218,188,194,27,90,29,214,235,16,5,0,12,
7,27,50,3,195,222,33,46,32,6,221,205,244,68,82,250,192,220,3,31,48,11,211,227,1,240,245,25,12,235,
246,250,232,252,13,253,24,60,215,132,252,115,83,234,156,175,8,67,41,247,245,11,1,255,4,235,234,20,48,40,
5,222,216,245,12,41,73,27,214,209,212,236,60,99,28,197,184,226,40,62,0,223,248,254,234,242,16,7,235,255,
12,239,250,16,244,231,1,252,245,43,55,249,219,217,230,28,76,36,212,203,251,21,2,242,17,40,8,219,208,240,
29,55,39,241,200,218,10,49,57,0,189,205,13,59,49,234,173,228,62,51,10,5,233,203,234,21,29,39,25,220,
199,252,27,6,255,250,242,10,16,237,244,45,43,251,235,224,230,18,41,23,250,228,229,11,42,27,2,222,191,223,
31,54,34,1,215,221,23,29,0,11,15,232,207,231,11,45,50,1,210,225,18,27,250,233,251,9,0,235,248,52,
50,224,198,247,31,34,255,209,217,20,44,33,26,248,204,226,30,40,1,218,209,8,66,30,224,237,17,2,237,243,
8,26,252,209,232,35,57,24,238,215,220,252,23,12,5,25,0,209,229,34,51,33,255,199,196,252,27,33,25,247,
218,239,19,32,27,251,217,227,255,22,42,26,234,240,26,3,232,0,11,11,8,229,199,249,53,38,11,253,219,208,
251,26,29,49,22,192,184,26,76,26,226,194,220,40,67,22,228,208,221,17,61,41,252,217,210,246,33,33,0,243,
9,13,223,202,0,67,61,247,205,221,244,24,56,23,233,244,4,235,248,20,245,239,11,255,239,11,11,228,237,4,
240,238,29,54,2,190,193,2,69,84,11,199,212,230,251,48,64,17,241,237,220,240,40,47,22,248,224,244,15,11,
0,255,246,5,55,42,217,170,199,25,86,52,217,188,0,40,0,245,18,255,240,0,234,225,7,30,20,5,235,203,
228,37,48,2,229,223,241,35,53,21,250,233,229,255,32,32,5,231,218,1,39,24,22,24,237,208,241,19,13,16,
13,242,243,17,2,226,253,21,242,214,235,1,14,33,28,249,227,232,254,23,19,241,226,239,245,7,36,32,252,213,
203,6,87,43,199,216,12,16,28,47,25,1,247,201,197,12,54,50,17,208,192,27,76,255,220,252,239,239,47,35,
198,212,25,34,34,14,202,186,5,32,248,242,3,20,38,19,224,227,21,28,1,222,206,5,57,20,240,3,255,227,
3,36,33,30,233,165,208,70,121,70,235,153,163,254,58,69,40,220,161,217,49,43,14,33,4,170,175,24,65,18,
236,213,225,45,57,214,188,26,57,236,204,232,0,40,80,39,221,212,239,2,26,34,2,231,238,242,252,27,51,48,
3,201,198,251,35,36,12,227,221,16,35,6,3,6,225,210,3,31,21,5,233,222,255,45,64,26,204,155,196,21,
56,50,24,220,179,234,69,87,22,194,161,222,61,78,15,234,242,240,236,6,32,24,253,219,203,245,60,81,42,8,
242,207,212,4,23,25,25,237,191,237,60,45,234,216,248,13,253,230,237,13,31,16,251,249,5,7,241,216,232,13,
12,5,20,7,240,5,28,253,230,245,243,245,9,30,41,12,228,225,248,30,57,14,191,191,14,56,47,33,0,217,
230,32,57,29,252,237,240,5,31,36,33,18,232,196,216,5,14,248,229,233,247,242,232,234,241,254,0,234,217,224,
232,247,32,45,3,229,226,243,22,44,24,245,227,233,21,70,55,0,228,238,14,48,42,0,231,245,9,18,22,15,
0,250,252,241,228,249,23,23,2,234,222,239,11,22,3,238,238,251,254,245,246,3,10,0,246,2,23,13,239,235,
3,18,11,2,4,2,249,247,10,28,17,250,235,241,4,15,8,255,253,0,7,7,248,243,4,14,9,6,4,251,
249,3,13,14,8,252,240,242,3,14,5,253,1,5,6,12,7,239,228,245,6,9,3,248,239,250,7,0,245,251,
0,250,247,248,247,253,11,19,5,235,231,0,22,20,5,241,230,255,28,24,10,1,253,255,252,249,0,10,16,16,
7,251,255,8,5,0,1,255,254,3,6,253,242,242,253,10,19,8,239,223,230,247,6,23,22,4,249,241,240,0,
22,20,252,235,241,3,21,24,11,247,231,235,11,35,20,250,237,240,2,21,27,21,13,255,231,222,246,25,34,11,
236,222,236,11,33,19,239,217,232,13,36,20,240,224,243,17,27,15,3,249,243,251,2,0,1,9,14,10,253,238,
239,4,25,24,7,251,252,252,249,251,8,24,24,2,229,221,242,14,26,9,241,237,252,7,8,255,248,254,5,9,
12,6,246,228,230,3,31,26,255,231,227,244,10,21,15,3,249,242,243,251,6,12,1,241,242,253,0,255,249,244,
253,5,6,0,247,246,255,1,252,254,7,9,3,253,249,250,0,6,6,3,2,1,255,2,11,15,11,9,6,0,
0,5,8,10,7,0,254,0,4,7,5,0,252,251,255,3,2,0,255,0,255,254,253,253,254,255,0,0,0,0,
3,1,252,250,255,4,7,6,1,254,255,4,10,10,6,1,0,3,8,12,12,12,6,255,0,3,3,4,6,3,
253,248,252,2,7,8,2,251,253,0,251,244,251,6,6,0,248,246,252,1,254,246,242,248,8,13,254,244,243,246,
0,12,19,15,253,231,227,246,17,32,17,240,223,238,3,12,11,6,0,251,251,3,10,0,241,239,255,21,23,252,
226,224,247,20,29,14,254,247,250,254,253,2,18,27,14,246,234,247,7,15,11,4,0,0,255,247,245,0,14,22,
21,0,229,231,8,34,25,246,218,229,7,32,22,246,223,230,2,29,31,3,227,223,0,0,60,0,3,0,5,0,
176,0,248,1,176,4,192,8,48,12,210,15,96,27,60,2,16,5,3,1,0,0,0,0,210,75,120,120,120,120,
120,90,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,
125,182,1,0,176,0,248,1,176,4,192,8,48,12,210,15,96,27,0,11,35,12,8,3,1,1,1,0,210,75,
120,120,120,120,120,90,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,
124,182,1,250,0,0,1,0,176,0,248,1,176,4,192,8,48,12,210,15,96,27,0,11,35,12,8,3,1,1,
1,0,210,75,120,120,120,120,120,90,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,
0,182,8,0,0,0,1,250,0,0,52,3,36,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,4,7,
13,21,16,235,225,4,24,254,238,0,14,0,243,2,13,254,247,11,17,255,251,7,9,5,2,4,0,251,0,5,
1,253,254,0,0,249,254,3,1,255,253,253,252,247,242,7,16,255,2,26,30,218,217,27,25,228,218,26,92,34,
201,216,21,41,254,232,31,59,222,164,0,79,91,225,131,243,104,75,234,182,9,69,38,233,212,247,18,20,249,218,
254,25,9,234,237,3,13,4,239,249,9,12,243,3,11,10,17,13,15,254,234,229,249,25,19,230,226,16,13,245,
249,17,2,4,252,248,255,21,33,226,222,19,30,22,26,252,241,247,35,24,221,241,21,17,7,0,27,32,51,47,
19,239,18,28,6,225,254,5,244,230,9,7,7,2,5,6,12,246,245,12,10,235,214,14,21,252,7,24,254,15,
45,16,208,227,7,0,219,217,22,51,4,248,30,14,2,19,15,242,219,249,33,238,230,16,17,245,245,34,24,224,
240,51,27,223,237,17,15,251,8,33,24,4,25,19,253,4,9,254,251,245,12,0,237,2,21,255,8,31,250,248,
16,6,245,248,248,12,15,249,250,9,5,3,2,4,255,252,251,252,1,251,245,1,20,0,251,10,7,246,12,18,
245,245,9,0,245,255,253,238,240,5,7,251,239,0,255,254,248,252,9,245,238,14,6,240,0,16,9,1,5,14,
1,252,20,12,240,5,26,2,247,13,19,251,0,20,255,0,15,255,252,3,3,7,252,248,252,8,254,6,4,253,
9,11,250,241,0,6,250,2,2,248,6,13,252,242,6,5,254,251,248,14,13,241,253,6,251,241,250,0,248,242,
3,254,242,0,251,244,237,240,249,254,240,237,242,237,239,245,238,236,1,224,244,230,234,242,241,238,240,249,227,252,
4,211,17,252,240,0,8,250,249,5,3,250,4,9,4,8,23,11,11,14,18,14,255,19,17,6,10,25,17,10,
21,12,1,14,14,1,13,17,4,5,13,10,241,19,0,245,16,0,0,1,255,8,247,6,5,7,239,16,251,244,
255,0,254,247,0,5,249,2,4,246,2,5,1,252,1,253,9,1,3,253,16,4,14,9,2,11,14,4,5,18,
14,6,20,16,3,19,24,8,11,20,14,10,10,15,10,5,18,18,254,17,27,0,13,22,1,9,20,9,3,11,
27,6,7,30,255,7,20,247,0,5,6,7,12,246,9,244,245,8,232,246,251,247,226,250,235,236,250,245,236,237,
6,234,231,250,235,243,5,250,229,14,234,237,3,217,237,12,221,252,25,233,244,29,184,13,1,201,33,226,0,14,
235,253,245,246,255,254,238,237,0,238,239,247,255,241,20,18,244,21,25,242,20,7,12,23,28,7,8,31,22,11,
24,5,18,15,22,2,245,10,4,239,14,253,236,20,0,249,254,19,243,4,8,233,5,0,236,6,227,4,4,243,
244,0,233,248,253,228,232,236,250,230,237,252,235,238,254,237,227,0,244,228,5,234,237,247,246,230,249,238,250,254,
234,0,255,248,8,0,239,14,17,255,22,9,9,32,18,14,28,28,16,33,18,7,23,29,14,12,24,19,21,24,
10,14,16,24,14,7,21,21,14,18,17,9,18,18,17,3,15,11,0,8,0,0,7,1,0,254,251,6,0,246,
8,247,254,5,247,2,247,2,2,250,4,1,240,244,253,254,240,10,250,235,249,239,244,220,252,227,233,244,246,221,
228,2,216,222,248,225,210,11,241,213,4,244,193,218,234,177,215,248,193,205,225,226,214,206,1,205,211,31,224,211,
32,13,232,49,47,14,52,83,38,38,78,66,32,60,52,11,40,46,10,14,29,21,19,14,24,0,3,0,5,0,
116,0,232,0,240,5,176,9,152,13,60,15,124,21,25,3,12,8,4,4,4,4,0,0,200,212,187,255,255,175,
200,212,187,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,
125,182,1,0,116,0,232,0,240,5,176,9,152,13,60,15,124,21,0,3,12,8,4,4,4,4,0,0,200,212,
187,255,255,175,200,212,187,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,
124,182,1,250,0,0,1,0,116,0,232,0,240,5,176,9,152,13,60,15,124,21,0,3,12,8,4,4,4,4,
0,0,200,212,187,255,255,175,200,212,187,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,
0,182,8,0,0,0,1,250,0,0,219,11,36,0,7,17,19,225,216,254,31,13,216,207,17,33,10,243,229,3,
15,238,228,235,33,49,231,196,4,51,235,175,11,48,5,236,241,241,15,13,230,226,14,25,243,241,6,250,8,247,
239,250,26,19,216,234,44,11,226,0,19,245,247,1,255,14,11,239,1,4,231,0,33,21,242,237,5,229,244,45,
15,223,0,13,226,250,35,5,2,10,211,255,49,252,251,6,28,30,252,213,220,8,20,14,11,254,0,5,2,251,
242,248,37,12,245,8,0,229,252,1,234,10,16,10,13,228,222,22,38,252,210,243,36,252,227,22,38,233,246,2,
237,8,31,244,238,17,8,229,213,8,67,9,187,227,35,34,215,224,42,44,247,206,227,24,54,229,215,14,31,11,
243,222,0,45,9,221,236,8,25,24,241,226,10,31,229,230,18,28,11,241,213,242,39,5,239,10,251,236,7,22,
255,0,4,251,0,9,251,253,238,226,19,42,14,238,0,238,231,245,23,50,11,233,252,12,230,234,29,49,3,209,
226,26,48,249,228,34,37,211,200,18,53,34,240,229,0,37,254,206,250,78,44,196,221,36,22,243,230,252,32,32,
244,239,249,14,252,234,13,39,238,231,6,250,253,252,232,11,51,0,202,219,35,30,210,230,42,9,238,251,255,22,
10,214,224,17,32,15,235,252,24,251,213,28,33,238,13,13,238,1,20,246,249,2,14,19,254,233,248,28,9,5,
0,230,230,6,21,19,27,242,229,245,2,250,39,36,228,222,25,1,218,15,37,235,17,20,215,238,15,253,253,14,
37,5,220,220,21,21,1,234,253,37,3,191,10,57,240,236,21,230,244,33,235,228,18,24,250,242,223,3,44,5,
238,246,4,13,231,237,44,65,223,196,6,51,19,220,227,52,39,237,204,255,33,247,223,14,22,251,241,238,238,13,
30,0,240,255,6,247,243,12,1,7,25,246,250,15,251,230,255,30,25,237,225,11,19,240,254,17,21,1,215,219,
71,59,224,212,6,19,8,244,7,25,2,227,251,254,8,31,14,182,241,44,12,1,252,240,1,18,248,216,5,41,
239,243,37,234,209,16,53,218,230,52,8,193,247,50,26,238,239,0,28,38,219,185,31,81,249,201,19,40,230,204,
251,52,54,1,201,208,27,37,241,251,35,5,227,218,235,62,45,214,214,25,28,220,212,46,61,220,206,13,27,12,
237,0,15,27,253,231,15,17,250,233,3,2,16,15,0,234,7,11,235,7,14,248,236,254,30,22,235,236,251,13,
13,247,230,8,12,1,14,10,6,245,223,26,51,223,229,36,249,239,26,25,248,0,242,238,9,35,0,235,26,7,
223,253,33,251,240,4,2,29,28,227,228,13,252,242,255,32,51,235,200,254,26,244,255,22,8,251,237,5,18,253,
244,21,13,4,249,240,0,7,19,9,234,247,8,244,223,19,55,24,203,212,17,12,244,22,24,0,254,231,233,14,
36,6,231,252,29,252,233,0,235,0,44,234,230,35,8,212,233,21,24,246,210,10,45,3,230,216,26,40,235,235,
32,26,242,233,253,15,27,5,3,228,245,20,254,240,22,11,7,30,242,208,11,18,239,18,49,2,209,240,254,8,
15,28,5,248,231,235,6,25,6,245,237,230,18,18,228,2,25,244,221,1,22,28,252,218,252,5,252,23,232,224,
51,24,224,7,8,231,10,17,10,31,251,192,230,48,26,236,1,22,244,226,247,246,39,53,215,197,31,41,245,234,
245,27,34,251,219,249,31,243,228,38,46,227,231,242,241,31,57,250,196,245,20,26,0,1,15,244,228,220,13,25,
15,9,238,243,6,246,234,10,15,5,249,250,253,0,5,243,236,14,48,240,222,5,4,16,12,238,0,30,239,228,
15,20,13,8,231,218,27,56,252,217,238,16,36,247,220,18,35,237,210,235,48,55,251,210,249,4,229,228,45,57,
7,245,223,226,229,247,27,67,10,225,1,222,235,27,29,4,255,247,238,237,16,43,0,251,250,255,234,251,15,35,
18,245,231,248,15,255,248,242,35,29,252,215,234,12,19,250,220,5,20,244,244,17,19,20,192,207,51,21,223,9,
23,246,250,234,232,13,29,21,239,227,13,18,228,252,33,3,250,230,226,16,39,1,248,250,4,0,232,255,47,232,
213,40,52,221,206,13,30,6,231,238,23,35,251,206,9,29,244,236,11,33,17,221,175,3,80,11,227,11,0,223,
252,2,252,28,34,247,203,232,42,52,232,210,38,56,227,209,29,37,211,247,72,11,205,241,2,1,26,38,13,248,
204,229,54,36,218,10,57,204,194,15,35,7,24,242,214,9,0,232,14,25,17,16,232,194,245,22,17,4,11,7,
224,254,249,235,21,31,233,245,25,233,238,40,2,229,12,42,226,212,19,46,243,3,22,208,246,53,246,228,22,35,
244,208,23,41,239,228,0,15,0,14,255,229,8,12,249,232,11,41,234,187,14,69,240,225,10,3,221,243,33,24,
250,2,250,223,9,27,12,28,237,201,254,40,3,11,253,218,16,21,240,5,244,247,8,246,10,42,9,212,220,24,
33,9,225,6,14,252,245,247,22,30,239,234,18,243,2,36,216,249,70,241,206,37,252,237,56,2,207,16,21,249,
0,233,15,13,208,2,77,14,210,228,253,4,1,23,20,5,219,205,2,43,24,255,217,252,15,4,11,247,227,0,
253,255,10,12,253,0,32,250,222,240,1,21,21,241,255,36,254,194,238,29,26,10,19,15,233,209,4,28,15,11,
251,247,252,250,8,23,0,4,240,222,16,24,9,26,2,222,234,9,22,5,248,32,21,224,241,1,14,9,249,251,
24,12,222,250,16,29,15,207,239,69,8,199,7,254,247,42,243,181,40,84,209,178,18,68,16,223,223,35,42,227,
200,18,81,241,210,42,27,210,235,247,19,53,6,188,238,66,23,192,216,28,65,234,229,33,26,240,247,245,242,32,
43,237,237,23,15,253,17,0,223,0,34,16,21,25,247,216,221,11,61,30,242,233,238,6,8,20,22,255,221,227,
16,26,11,16,244,216,245,3,3,34,38,240,191,247,21,254,21,48,227,170,0,71,246,228,14,238,219,21,20,253,
33,251,205,1,19,12,7,252,2,234,225,14,21,13,26,223,213,19,3,13,53,234,207,14,254,243,41,20,222,35,
2,196,232,58,67,239,213,34,34,191,215,45,33,23,36,223,199,36,13,212,4,59,14,196,231,12,207,9,85,241,
187,0,247,2,45,242,226,43,0,189,251,22,5,13,0,250,15,237,214,7,14,31,19,195,225,63,13,191,255,18,
11,252,209,5,63,242,190,49,27,231,238,208,10,75,0,205,9,29,32,219,174,48,81,238,203,29,42,249,209,225,
13,31,10,11,17,5,217,209,6,29,31,0,242,10,253,234,243,23,44,245,220,14,9,239,34,27,229,238,4,17,
11,253,3,250,219,252,55,32,211,242,59,13,201,224,46,44,222,242,34,28,213,223,54,255,195,19,63,0,224,0,
20,244,18,8,239,6,3,231,12,41,16,212,254,44,239,241,250,233,38,51,224,209,25,45,233,214,234,19,49,236,
215,37,16,219,225,2,48,43,252,221,217,0,17,250,250,43,26,205,195,26,46,245,229,73,66,159,165,68,48,233,
251,231,36,77,191,151,53,92,238,221,32,60,252,203,218,6,76,94,3,186,9,27,228,240,52,62,20,181,215,72,
25,240,13,21,12,229,203,13,90,33,229,210,246,19,246,232,38,81,5,205,196,242,35,2,6,33,248,212,216,245,
48,69,6,194,220,33,34,26,254,239,6,43,241,192,37,72,237,225,41,12,226,244,236,3,34,1,222,15,62,229,
166,5,86,250,177,18,52,234,225,245,13,30,227,234,40,11,192,231,18,33,251,225,44,31,175,205,28,232,0,92,
17,190,207,25,6,225,9,29,249,231,215,252,54,0,196,236,12,245,244,24,18,233,205,237,43,26,229,211,240,31,
3,252,5,239,249,240,208,54,61,196,226,36,245,204,14,5,0,14,233,252,8,251,249,252,216,19,51,14,229,197,
234,56,42,250,251,5,216,236,28,255,255,42,27,200,195,49,61,211,220,35,13,231,249,50,35,204,217,29,28,248,
234,13,28,251,213,9,68,236,208,13,9,10,22,250,226,236,58,23,211,250,34,195,213,86,52,219,205,0,24,26,
248,233,249,8,22,237,6,37,250,231,223,2,77,30,181,210,43,19,254,253,6,27,246,167,2,95,12,177,5,50,
0,225,208,238,35,45,9,208,220,47,251,178,12,69,23,240,196,251,78,254,163,249,73,11,202,228,38,38,233,241,
4,11,8,242,220,19,46,250,238,250,9,250,222,240,50,61,242,199,253,33,243,233,13,60,15,217,211,25,72,7,
189,3,63,251,210,17,29,241,253,36,249,234,21,248,202,35,114,34,177,208,6,15,25,41,18,251,5,221,211,31,
21,231,32,42,214,212,3,22,61,238,205,47,16,157,234,89,47,243,246,240,241,3,246,235,49,58,230,184,251,13,
238,26,16,192,5,75,251,165,3,61,20,234,2,13,3,230,3,40,5,221,24,24,191,245,61,30,246,207,2,12,
10,13,4,243,254,239,219,43,21,238,38,248,183,29,56,204,14,37,215,242,40,234,215,47,35,218,224,1,251,253,
31,15,237,28,2,178,36,60,201,252,59,244,11,16,220,18,47,236,6,6,247,44,15,161,228,106,40,183,219,53,
63,187,199,64,47,238,233,204,43,117,226,164,27,75,234,197,222,48,72,233,223,22,252,194,214,50,75,215,173,49,
71,198,192,18,60,246,203,236,38,50,16,225,186,3,97,1,150,228,84,57,192,191,30,35,186,217,57,37,230,240,
208,212,22,20,255,23,8,245,191,179,33,84,250,242,254,207,224,229,248,77,52,193,203,23,3,0,235,251,71,242,
160,11,44,253,230,221,78,69,147,150,97,91,202,195,234,1,20,20,36,28,244,199,204,0,54,24,31,52,229,169,
251,27,23,54,39,195,218,46,7,249,51,17,222,8,61,235,227,49,10,5,65,255,180,30,83,221,226,97,31,172,
0,32,32,46,234,225,20,22,245,237,31,40,229,199,39,50,218,243,50,2,198,252,38,36,227,206,29,99,8,175,
1,71,244,203,62,47,218,233,1,233,10,69,5,209,209,11,23,6,222,13,72,211,136,32,115,202,161,79,87,207,
157,14,77,7,211,249,4,30,249,179,251,76,249,190,24,16,252,27,244,229,29,23,238,255,38,18,206,213,66,95,
236,164,253,82,0,137,9,119,5,173,255,16,5,17,200,201,124,106,142,160,70,25,206,253,51,56,247,169,210,47,
53,240,228,6,15,215,221,4,24,39,243,190,10,66,247,223,228,22,52,242,194,5,69,9,220,210,254,57,27,210,
221,33,19,219,221,60,41,225,7,56,248,236,209,234,70,64,234,13,22,231,230,11,5,40,40,217,223,0,236,15,
54,254,225,251,11,208,212,72,65,211,213,43,234,211,24,24,0,33,251,189,245,23,18,19,223,206,44,60,206,181,
23,88,230,156,47,71,193,200,20,29,22,234,245,10,245,244,30,226,233,48,13,224,219,254,35,4,251,32,37,203,
186,255,29,21,16,36,4,209,179,30,95,6,216,11,17,218,219,21,45,253,6,37,235,188,0,36,251,238,25,7,
224,251,20,214,213,58,43,208,211,6,5,250,246,12,22,0,210,217,27,34,249,9,27,233,248,250,224,6,79,17,
228,9,235,215,25,42,249,252,31,234,153,243,105,42,229,5,237,232,253,249,27,79,6,183,243,63,7,239,251,16,
237,236,30,1,198,10,34,213,250,44,223,230,18,229,255,42,230,242,33,4,206,245,56,65,243,178,216,44,61,255,
185,29,76,186,137,44,90,0,192,245,17,244,253,33,248,231,39,10,195,248,61,35,244,218,1,254,223,231,61,72,
226,157,228,68,52,199,216,62,62,233,209,246,34,250,249,39,17,190,232,11,22,29,23,5,226,0,23,254,244,54,
50,249,222,241,14,16,244,248,27,29,244,244,31,10,211,228,44,34,212,240,25,7,2,255,250,14,8,228,226,9,
33,30,0,191,220,25,18,241,248,44,12,201,199,28,36,7,251,219,220,22,252,216,39,67,235,217,252,11,6,15,
234,239,59,42,178,210,68,24,200,6,56,18,247,223,196,40,97,250,213,25,29,213,218,32,70,21,210,220,3,1,
250,243,26,52,228,212,32,43,223,235,41,21,254,249,232,232,36,34,220,239,26,7,218,236,33,29,232,229,253,13,
14,239,235,27,41,250,199,243,44,19,214,233,54,253,203,240,20,11,250,230,10,44,230,209,13,35,249,230,249,16,
9,245,251,11,17,7,211,225,31,29,7,253,230,233,15,16,1,8,241,238,8,250,251,32,19,226,226,254,19,35,
0,232,232,248,22,254,237,4,14,253,244,248,10,22,238,235,22,36,0,253,243,242,27,32,3,8,7,250,239,13,
42,2,215,245,11,26,28,251,226,12,25,233,255,42,0,223,246,5,9,11,230,236,10,4,252,249,251,7,248,227,
249,44,41,220,211,9,25,254,7,13,248,255,0,235,10,23,235,232,20,25,254,235,241,4,8,252,3,27,3,237,
251,16,11,7,15,0,239,249,2,254,15,32,1,223,242,14,11,254,240,247,22,4,208,0,49,250,234,34,16,227,
252,12,4,16,12,9,6,241,244,251,1,23,30,253,236,245,0,6,0,11,44,10,210,234,24,28,5,238,0,24,
244,218,4,32,12,246,244,254,8,253,237,251,27,12,241,235,254,252,253,243,250,13,4,230,221,254,16,3,246,251,
251,239,236,255,16,13,234,211,254,27,246,230,247,2,246,240,246,2,244,0,121,8,30,0,248,12,23,0,234,214,
221,242,8,252,4,28,34,36,47,28,249,224,232,242,227,215,244,15,6,13,43,54,41,33,40,28,245,226,226,222,
197,220,255,254,29,57,36,31,48,58,3,235,23,251,212,0,30,244,252,34,38,42,42,13,8,14,247,233,230,219,
200,242,23,18,10,48,61,46,39,236,225,252,225,204,217,233,237,27,53,33,48,44,255,20,5,220,223,230,200,214,
24,1,245,53,49,15,38,19,223,224,249,219,203,254,14,11,29,32,29,27,34,29,254,6,2,212,209,230,218,201,
217,19,24,12,37,49,27,18,31,244,212,235,244,224,223,254,11,9,26,30,29,39,28,15,1,225,219,244,227,234,
9,243,231,17,28,245,253,30,255,236,16,23,247,254,3,0,240,243,248,0,2,242,12,19,253,253,24,32,2,4,
255,237,241,236,212,241,19,11,17,56,50,16,37,17,184,192,223,179,180,2,27,33,73,93,66,41,41,13,224,217,
214,187,189,211,243,14,36,60,87,53,33,51,6,219,227,199,167,195,220,211,240,17,33,63,89,45,25,43,244,180,
222,206,188,240,242,242,34,46,22,34,24,250,247,241,211,211,228,234,249,13,32,18,37,62,32,23,34,6,227,242,
223,206,235,226,225,3,13,1,25,44,26,8,10,254,224,209,207,201,201,214,244,38,51,27,54,71,23,3,15,219,
192,223,215,220,238,235,11,46,32,38,41,6,0,245,221,208,219,232,228,246,8,16,28,46,43,32,4,223,218,236,
205,205,234,249,35,29,40,85,58,7,6,3,207,181,205,206,202,6,17,32,76,82,30,29,54,238,188,226,208,179,
220,233,246,12,31,39,67,69,42,59,26,210,177,182,194,184,223,9,16,52,92,78,63,43,0,217,213,213,188,203,
215,247,16,29,47,56,37,39,24,5,6,240,221,208,238,240,226,243,28,48,34,24,43,26,16,0,223,200,210,224,
225,247,244,240,34,39,8,42,59,6,243,6,247,211,217,203,215,1,6,21,51,54,37,20,21,30,0,223,229,207,
199,228,238,243,39,47,44,63,58,33,17,248,221,209,201,215,214,194,239,23,18,33,61,48,30,10,0,2,234,225,
230,239,0,14,37,32,36,46,59,31,247,234,236,203,213,236,206,214,3,19,11,47,64,19,31,50,255,231,250,224,
182,194,219,218,243,49,35,33,86,64,26,51,14,193,226,233,177,196,250,251,237,33,54,27,27,46,9,239,2,252,
219,219,206,212,4,16,16,29,48,64,19,10,27,224,202,230,219,224,1,22,37,37,22,17,46,27,210,191,228,202,
168,237,251,248,42,47,32,49,53,254,244,3,233,209,208,218,222,240,0,2,16,54,29,24,38,12,240,252,4,220,
198,220,244,252,21,29,25,31,62,49,251,13,14,217,219,220,217,232,243,19,49,67,45,32,44,15,239,215,207,208,
221,231,233,244,249,6,26,40,62,54,15,16,4,220,205,209,211,229,217,236,17,41,59,62,41,43,54,17,232,233,
216,178,178,216,232,245,27,41,36,63,68,40,1,232,241,200,159,182,226,231,247,44,63,64,70,67,4,3,254,176,
166,235,224,180,1,26,28,58,65,38,45,41,248,218,224,222,192,218,233,223,253,61,39,25,54,67,43,0,212,213,
213,197,210,249,248,2,56,51,34,41,27,7,22,250,209,185,203,246,210,213,42,46,11,78,74,35,59,28,231,240,
217,161,170,204,232,242,42,45,25,62,69,24,8,10,239,223,227,171,197,247,217,245,27,26,48,57,28,4,252,243,
233,228,227,8,31,41,24,29,37,17,240,230,239,226,228,249,3,6,7,23,15,5,42,28,222,248,5,235,239,223,
216,41,20,217,22,58,3,5,28,10,231,218,235,233,225,252,230,243,55,16,24,76,39,0,20,12,217,224,237,225,
192,231,18,252,248,39,32,19,48,19,235,247,243,238,221,197,221,251,237,217,26,63,30,5,42,49,253,244,3,237,
224,251,225,211,240,3,251,22,9,239,23,63,47,7,40,23,194,225,30,195,158,7,12,243,42,66,32,8,20,19,
243,226,2,8,254,12,244,238,14,13,235,252,242,237,8,254,5,11,15,4,5,0,252,241,247,4,8,243,0,16,
253,2,24,250,243,22,17,223,225,13,237,205,253,40,3,3,61,39,27,53,248,196,227,205,175,204,230,216,20,52,
33,52,65,32,243,6,25,217,215,11,243,216,234,9,32,25,22,41,43,20,26,16,239,225,228,229,236,229,229,240,
21,28,22,39,45,24,41,32,237,241,236,207,215,232,229,234,10,45,43,45,58,21,19,31,229,200,223,226,204,220,
248,255,249,20,47,26,0,17,42,21,248,246,12,0,219,229,228,216,225,13,25,6,24,31,10,0,10,0,207,218,
20,240,220,26,255,0,50,8,230,20,8,252,1,245,18,25,11,13,9,236,218,237,249,207,231,32,41,0,21,54,
41,23,14,8,250,227,226,206,216,245,244,20,49,60,63,61,29,1,13,211,149,215,209,148,216,51,6,2,67,44,
23,55,10,201,6,247,183,223,22,227,247,58,18,45,71,13,252,18,2,239,244,227,188,220,0,221,212,35,30,254,
44,60,248,229,12,231,200,226,251,196,195,10,29,11,23,43,31,13,14,8,241,244,238,238,9,34,27,19,6,19,
248,234,10,1,221,230,13,237,241,255,22,6,0,22,12,29,0,234,24,9,198,215,6,249,230,22,39,0,37,62,
211,180,247,210,228,52,253,228,74,52,2,74,34,212,26,31,214,225,8,231,211,9,233,211,65,37,218,30,53,232,
242,30,205,180,252,240,227,6,1,252,41,51,6,238,5,11,238,249,0,239,255,36,28,8,52,40,234,235,239,208,
212,244,206,223,46,22,245,48,70,238,241,20,227,190,252,248,218,253,23,22,29,11,6,35,241,208,49,51,197,242,
45,0,248,17,250,245,20,249,225,17,28,211,221,32,248,233,54,45,39,38,9,3,10,230,196,199,193,203,224,17,
24,15,77,78,22,45,66,233,214,17,219,154,201,255,235,9,9,251,36,73,8,0,17,214,201,215,209,215,15,63,
5,18,90,31,204,9,12,210,3,20,203,243,41,249,15,67,255,248,67,40,0,24,236,203,204,221,202,226,0,13,
53,55,31,35,73,3,195,247,232,166,212,1,229,232,24,0,243,71,50,5,37,14,218,255,12,202,220,243,212,221,
20,21,14,26,56,54,24,22,20,246,248,232,203,231,2,235,226,252,10,32,47,3,19,69,28,218,253,19,205,185,
20,21,210,26,70,3,15,61,254,252,19,206,205,234,215,211,242,230,246,35,39,21,28,39,54,23,228,234,241,235,
214,246,24,16,0,9,14,245,231,232,255,6,240,241,12,8,3,38,42,248,237,12,2,244,239,223,222,5,11,6,
50,54,26,38,48,248,229,244,227,192,214,241,1,33,56,68,52,36,4,1,27,227,183,187,194,208,230,35,59,68,
70,47,36,22,231,179,196,213,178,214,12,0,20,63,55,42,44,26,243,200,187,182,201,215,234,0,48,51,30,56,
65,26,11,247,206,207,197,201,216,237,245,244,14,79,98,79,76,50,247,219,199,152,159,180,200,219,8,76,94,103,
89,64,55,10,226,212,206,186,140,172,234,13,6,46,101,78,93,94,3,204,172,156,156,188,196,192,31,57,30,84,
94,29,25,63,248,155,199,203,149,192,0,239,29,125,94,52,89,46,205,225,199,141,175,203,220,1,43,49,67,56,
10,34,39,214,205,253,233,219,0,20,5,44,67,20,24,18,236,237,219,198,254,14,227,26,72,16,4,55,38,246,
240,241,215,219,252,248,253,15,2,255,19,248,230,17,241,193,24,84,244,225,43,25,219,230,248,236,237,253,253,255,
19,11,3,30,34,8,229,230,240,229,222,220,243,23,24,28,26,19,39,40,244,204,233,241,195,209,241,8,5,13,
81,87,17,12,39,249,202,241,220,188,235,253,227,255,47,26,20,35,253,251,30,17,251,222,225,0,252,250,6,244,
247,5,1,14,17,253,29,80,7,230,12,3,210,196,230,246,232,252,47,43,35,19,8,23,11,232,225,221,200,203,
238,242,250,80,102,43,43,80,35,211,211,230,192,152,185,241,251,14,89,78,42,94,91,1,228,248,179,149,183,174,
177,228,251,53,104,62,77,111,39,232,230,198,154,162,215,231,227,44,103,67,70,101,49,12,243,215,194,164,161,207,
226,238,47,52,33,79,69,6,21,18,225,162,175,206,177,216,18,15,37,97,84,33,23,36,232,180,168,177,197,186,
226,45,91,70,68,102,87,35,254,231,204,184,173,193,221,250,21,59,57,62,112,98,33,237,221,195,143,164,206,200,
228,241,23,49,65,57,41,47,9,6,251,206,209,227,220,214,221,253,29,22,24,59,64,27,22,32,9,253,236,228,
237,224,239,248,223,255,30,7,20,52,37,41,29,7,251,225,223,227,210,219,232,232,244,21,15,27,47,41,41,12,
21,18,222,232,228,229,245,234,244,18,5,12,29,13,16,24,1,27,17,241,254,243,222,230,236,229,210,248,17,18,
244,12,49,11,21,38,6,235,251,236,205,237,247,251,12,19,40,35,25,15,13,255,241,252,249,221,206,247,245,216,
246,33,32,35,27,39,62,12,0,234,209,214,187,183,248,231,248,41,33,43,67,42,30,24,243,216,216,190,193,214,
219,229,19,26,36,43,54,54,23,10,0,232,201,215,218,178,231,38,5,34,99,52,32,72,22,247,5,199,203,236,
204,240,10,2,22,33,47,31,255,10,6,233,225,229,230,221,249,0,0,34,34,15,40,10,252,0,231,205,228,253,
235,230,21,20,24,28,31,41,8,13,5,244,5,231,222,253,1,233,12,16,3,41,27,16,6,250,255,240,217,234,
249,242,246,0,0,0,76,11,178,0,10,246,247,248,0,19,0,242,9,16,0,239,239,3,14,11,4,253,1,252,
245,250,2,10,19,12,242,231,246,9,15,8,3,2,249,240,254,9,255,1,9,11,15,245,216,244,30,29,4,238,
244,11,253,232,5,27,16,5,242,231,0,17,0,236,253,31,27,244,233,253,1,247,5,27,8,235,242,3,1,250,
6,37,21,221,219,0,20,16,248,248,30,22,215,204,16,49,11,239,0,21,244,213,251,25,8,12,19,248,236,245,
1,15,2,245,14,13,241,246,254,255,19,20,253,248,247,246,250,249,7,23,18,250,236,248,2,3,255,253,13,27,
248,216,241,27,30,254,249,12,251,221,245,32,25,242,242,14,13,240,235,5,13,5,11,3,240,241,253,13,11,241,
253,45,18,194,206,35,53,248,226,7,26,250,230,254,19,10,2,3,250,242,0,13,246,232,16,42,11,230,230,0,
254,254,27,19,250,250,251,244,244,3,29,13,251,3,247,222,237,16,32,20,253,253,247,225,253,34,8,238,3,30,
21,216,185,1,70,37,1,246,233,243,245,250,15,32,20,231,225,12,13,232,244,41,46,240,202,240,24,8,238,0,
40,28,229,217,251,22,7,250,5,29,9,212,221,24,31,0,254,13,0,233,235,250,8,24,35,11,231,225,241,4,
24,27,10,238,232,247,4,255,3,28,25,245,230,240,6,9,252,6,22,253,227,246,5,9,21,4,241,0,10,244,
230,8,45,14,219,235,32,20,227,224,11,39,8,235,8,11,234,239,8,26,19,238,235,3,254,244,0,21,34,4,
232,243,249,254,10,11,255,2,7,244,232,254,24,20,3,254,247,242,247,4,12,0,2,36,8,204,222,24,42,13,
238,238,3,4,240,240,14,40,23,231,217,254,20,7,252,254,4,10,253,242,0,7,254,11,26,255,225,231,4,21,
11,8,3,238,235,4,13,0,0,9,15,9,241,232,244,252,11,28,21,245,229,250,20,12,254,253,3,249,234,251,
17,22,9,234,236,23,25,245,230,247,21,17,254,253,247,240,255,17,26,16,246,230,246,11,242,223,20,63,13,206,
219,40,43,218,207,29,57,3,213,223,28,35,237,237,26,12,232,231,12,42,4,221,1,22,236,217,13,54,26,226,
215,248,21,37,2,215,241,25,23,6,236,232,12,20,254,0,245,254,28,7,232,242,0,6,255,3,28,3,237,254,
4,0,7,0,233,244,20,19,251,247,18,20,239,215,246,21,13,6,26,8,219,215,7,44,25,233,242,36,6,188,
219,49,64,1,204,236,26,7,246,10,18,13,253,214,225,33,36,249,243,19,7,217,229,23,28,20,13,240,225,231,
9,23,255,11,34,247,207,232,13,22,18,22,2,225,236,11,9,252,0,29,17,217,222,21,20,249,2,11,0,0,
5,245,229,251,39,33,233,229,10,10,238,247,10,17,17,3,237,238,254,8,3,254,22,30,230,197,245,43,40,253,
248,8,237,219,5,29,15,11,255,236,240,249,10,9,10,23,254,223,247,25,6,232,1,26,9,245,225,232,24,49,
6,217,253,41,251,214,247,23,13,253,0,14,254,226,251,39,13,233,245,255,4,14,253,234,253,24,30,247,222,254,
27,3,230,252,15,3,255,11,9,240,237,11,25,4,235,243,19,7,238,2,29,6,227,232,13,25,247,241,21,12,
224,237,28,29,238,228,25,43,240,200,242,48,27,229,0,27,244,224,4,25,12,251,249,2,248,238,7,15,2,10,
2,240,237,237,16,53,6,224,238,12,34,3,204,225,33,47,6,229,237,13,15,247,239,253,10,17,9,246,244,6,
1,234,4,44,8,210,228,32,46,246,216,255,23,1,247,249,6,24,8,227,233,18,18,248,249,10,13,3,0,251,
238,249,14,12,255,242,4,21,244,229,249,17,29,6,244,255,3,250,6,2,238,1,23,253,235,245,22,44,250,197,
238,46,36,234,201,0,62,20,220,225,10,40,5,222,251,21,13,236,215,15,55,4,215,235,15,27,2,251,23,0,
206,239,27,17,2,14,15,245,214,251,29,13,5,246,232,255,3,1,19,13,245,251,8,6,251,236,247,27,18,245,
245,8,7,238,232,19,34,15,0,250,241,217,224,30,65,7,214,234,21,28,247,228,1,25,12,238,227,0,15,9,
16,14,232,226,6,27,22,245,223,7,30,242,218,4,52,30,223,227,9,0,250,18,19,244,239,2,249,247,25,43,
246,202,238,39,32,235,223,4,32,9,220,238,47,39,213,199,43,76,223,168,250,75,34,215,235,31,12,230,246,18,
16,0,228,231,22,31,249,245,0,0,9,11,242,252,13,246,251,11,0,0,0,248,14,23,239,238,0,3,14,0,
236,1,0,0,20,17,235,221,23,46,243,213,16,55,247,182,242,73,40,218,216,18,31,241,226,2,19,10,247,255,
22,6,220,230,27,22,236,4,32,11,233,224,0,24,254,247,15,14,248,241,252,4,4,3,2,0,8,2,247,248,
0,16,12,240,240,9,23,10,230,231,22,23,244,238,0,17,11,232,254,23,0,1,254,212,252,53,26,254,235,208,
254,46,23,248,234,238,15,12,243,4,252,240,33,34,234,227,0,12,247,249,19,16,244,245,8,3,251,7,0,246,
15,8,229,243,8,26,34,0,212,224,27,40,248,218,251,36,15,228,235,23,11,233,1,31,9,245,225,229,23,42,
13,240,232,253,21,252,216,3,61,33,216,190,246,50,41,1,232,237,17,27,240,203,244,63,49,232,207,254,28,10,
249,237,235,21,34,247,217,0,35,14,237,231,4,19,0,0,17,248,224,254,50,18,200,218,34,44,0,238,249,9,
7,255,245,0,10,250,245,27,30,221,199,14,61,24,227,227,17,3,210,255,44,18,236,233,31,47,207,161,11,104,
43,230,223,226,244,4,20,25,20,2,244,236,244,244,0,16,26,21,248,217,224,11,55,25,220,221,13,22,239,229,
12,45,11,223,247,17,0,252,244,254,21,14,248,225,243,33,15,234,255,31,17,223,223,11,15,255,9,7,8,2,
236,224,3,47,25,246,228,253,30,236,191,12,66,26,255,217,222,36,23,216,245,26,28,13,209,201,35,61,251,225,
17,39,222,184,3,81,17,173,237,94,37,205,217,3,32,19,235,241,9,241,240,30,16,250,20,4,218,240,31,11,
218,225,27,54,11,216,234,22,12,252,9,7,240,241,9,2,244,17,17,246,241,255,14,5,242,5,10,244,255,21,
244,220,0,43,40,229,206,3,38,9,240,240,12,7,241,11,9,239,0,20,5,249,238,10,24,245,239,16,14,245,
232,239,30,43,252,231,244,245,12,17,1,255,242,247,0,1,34,23,200,223,53,34,218,205,21,84,7,169,218,57,
62,221,177,26,98,251,173,233,60,62,209,181,49,67,212,201,10,52,26,216,225,41,12,212,3,45,0,228,230,252,
23,11,11,20,218,209,26,42,0,241,234,4,39,2,218,245,31,26,240,219,246,36,36,246,219,246,26,24,254,216,
226,38,71,250,191,237,46,22,212,233,40,17,239,1,5,234,230,14,50,252,212,11,25,236,239,18,37,8,223,215,
17,38,0,0,15,228,219,11,32,20,9,245,229,1,12,252,248,0,18,14,232,224,13,37,15,248,229,243,15,15,
247,231,6,54,250,182,246,77,32,210,224,39,14,197,251,74,20,212,215,252,46,20,242,11,11,234,237,252,255,30,
27,227,225,29,6,227,3,21,3,251,244,5,8,254,9,16,241,206,255,62,20,227,238,10,8,240,238,38,37,213,
212,25,42,20,242,202,238,46,32,233,226,4,46,38,205,187,26,68,13,221,219,15,35,252,223,230,9,43,16,244,
0,249,212,246,27,22,24,16,222,220,3,32,38,246,206,255,27,239,0,35,15,254,225,215,12,39,12,1,255,239,
254,13,245,243,13,20,248,221,8,55,11,197,227,32,32,4,238,235,5,29,11,231,240,13,7,244,245,9,27,8,
233,233,16,6,229,16,64,1,197,228,27,16,237,6,27,0,245,4,10,1,226,233,36,38,3,233,211,251,57,19,
211,235,30,14,234,10,15,233,243,28,11,237,229,248,24,21,3,12,2,232,221,255,45,12,242,14,11,219,218,21,
37,250,11,37,216,181,22,95,18,185,207,37,47,242,223,9,22,0,253,253,229,242,37,40,242,222,249,26,2,210,
248,69,21,216,245,9,253,244,251,31,27,234,226,6,32,252,217,240,35,31,246,236,22,24,239,231,238,249,47,30,
212,225,25,33,2,212,219,65,81,231,158,238,69,31,205,239,28,12,238,240,26,27,219,248,56,239,158,239,101,75,
197,176,43,83,223,180,8,79,7,189,233,39,29,227,217,42,48,204,236,74,32,185,188,25,64,243,231,27,12,223,
242,20,24,3,243,6,10,212,203,30,77,22,203,211,30,55,244,203,251,61,28,204,207,17,46,5,238,2,1,240,
0,23,13,252,239,234,0,26,2,241,12,16,241,230,6,69,25,176,195,49,68,246,201,2,61,1,185,219,28,50,
37,248,216,227,20,11,228,255,70,26,192,204,38,46,224,227,53,37,202,200,31,67,6,185,224,65,58,206,189,27,
46,245,240,19,18,241,220,249,22,28,24,239,226,0,17,250,229,3,36,24,237,226,238,9,32,20,233,239,24,6,
226,254,23,24,242,207,4,89,12,166,200,30,64,30,213,225,39,17,220,239,33,37,248,203,237,53,21,214,252,32,
16,236,212,245,58,45,224,212,12,33,226,194,18,91,21,184,230,54,7,202,248,51,44,246,174,219,79,53,208,224,
24,33,4,216,235,46,33,233,232,233,250,32,43,6,192,206,56,55,212,225,33,30,246,216,251,35,19,234,198,248,
105,50,156,177,81,103,213,130,5,114,12,179,241,59,32,216,200,26,69,242,198,14,46,244,209,253,59,27,201,215,
23,33,25,242,210,2,35,249,233,17,37,2,222,209,2,54,28,221,202,12,70,14,199,248,60,253,174,253,83,32,
207,234,22,250,236,22,30,237,213,15,72,4,182,238,48,10,215,233,24,56,13,216,239,251,236,252,29,46,0,204,
247,37,12,244,238,238,248,20,67,36,192,171,6,84,35,187,222,85,46,175,186,52,92,255,170,218,53,32,233,237,
25,25,230,216,2,35,36,229,202,16,51,250,208,244,40,58,2,228,0,238,192,243,56,49,249,217,4,46,245,214,
5,43,16,216,220,28,27,250,246,1,4,235,239,60,52,197,189,25,46,252,231,20,51,230,155,243,96,48,196,207,
33,70,0,180,224,52,31,248,14,246,212,10,38,2,223,216,43,76,230,201,8,38,3,204,199,45,75,11,229,228,
5,6,218,255,62,31,219,191,240,63,42,224,214,0,37,8,236,33,38,202,217,40,14,211,0,76,34,176,194,53,
52,227,215,28,55,242,192,237,35,42,253,222,1,36,20,232,215,18,29,198,209,53,87,13,171,178,35,92,16,207,
222,27,28,222,245,58,18,202,218,30,46,8,246,251,246,230,237,8,25,22,3,242,248,0,244,252,255,21,25,242,
229,40,16,173,225,87,61,217,186,242,27,10,23,34,242,204,1,67,14,165,220,89,40,206,220,25,56,253,195,251,
37,254,225,254,26,11,250,224,0,49,11,208,246,39,32,245,204,228,58,42,205,214,34,56,11,214,228,34,17,221,
239,36,8,207,229,47,35,241,236,246,13,19,250,0,15,245,217,234,24,44,17,224,251,51,8,200,217,28,53,6,
220,248,12,250,248,6,19,0,247,6,1,238,255,35,19,221,222,16,15,249,17,24,242,204,243,45,39,249,218,244,
43,253,211,0,30,6,247,246,30,25,218,211,20,58,8,209,242,15,10,12,247,0,30,0,242,254,242,244,14,17,
254,223,244,48,23,224,239,19,31,240,206,6,41,4,231,233,12,30,0,224,249,32,33,0,220,225,18,38,255,224,
244,32,21,226,234,33,38,246,218,243,36,13,222,231,11,40,14,219,236,38,29,232,233,16,14,231,233,32,33,223,
213,26,57,0,218,242,6,0,254,253,8,11,0,247,252,11,5,2,7,250,240,245,16,30,2,234,244,245,9,33,
11,242,246,3,6,249,243,15,14,227,239,25,21,252,242,0,13,253,239,0,21,7,239,245,2,9,13,247,252,252,
251,20,14,244,239,250,12,25,0,211,252,54,11,228,251,11,0,238,236,31,41,232,233,12,0,244,250,11,39,6,
233,253,251,227,241,27,44,13,240,233,224,248,35,33,10,239,219,243,20,17,15,13,245,228,227,6,44,27,243,230,
237,252,13,14,2,6,6,252,5,4,249,251,249,252,14,0,243,3,15,5,253,249,255,5,14,5,239,234,252,19,
16,255,236,239,11,30,18,254,238,251,0,246,0,6,11,14,248,242,255,1,16,8,249,8,0,233,241,9,12,6,
1,254,253,252,254,14,10,249,7,11,222,222,22,34,6,247,248,5,1,243,7,13,0,3,252,244,0,9,2,5,
5,244,243,4,5,3,6,253,253,5,0,254,1,3,9,9,248,245,0,255,1,2,182,7,69,0,0,7,18,244,
226,0,8,237,247,12,250,247,255,237,242,6,18,0,235,225,244,23,11,246,247,242,237,247,14,21,244,222,239,10,
8,246,255,251,239,1,3,244,248,0,251,253,251,237,8,22,229,226,11,9,253,240,247,10,251,236,255,15,241,224,
16,24,229,225,17,10,227,2,12,240,240,255,6,2,244,246,249,248,11,0,235,245,3,1,248,3,253,241,2,250,
238,0,8,4,247,238,243,7,14,242,248,6,243,232,8,20,254,234,250,0,233,251,35,7,202,238,28,5,239,0,
0,230,242,27,2,234,4,253,215,3,53,246,208,252,10,243,255,19,5,244,228,233,4,22,13,243,228,239,9,20,
245,232,0,2,242,0,21,235,220,22,22,225,240,18,253,232,5,15,238,235,15,6,235,239,13,12,240,231,255,19,
2,230,251,255,241,10,3,252,8,245,215,255,40,5,223,237,7,3,254,15,253,217,237,11,22,12,235,242,4,233,
229,27,32,245,233,242,242,250,30,20,228,229,4,1,244,6,14,246,228,255,13,0,249,252,248,230,249,42,12,213,
234,15,4,250,253,8,255,224,241,24,21,234,227,13,16,229,245,21,253,237,240,248,12,25,1,225,229,0,14,9,
9,234,241,2,248,12,21,238,211,252,34,19,226,247,17,242,226,18,38,239,227,253,4,5,9,255,240,247,246,250,
22,15,243,237,244,0,7,2,254,249,255,249,245,9,8,252,233,244,8,9,1,252,251,247,244,3,17,253,233,248,
6,2,5,245,238,14,14,230,242,17,250,238,14,18,253,229,233,4,24,7,227,0,19,241,231,18,17,240,237,8,
10,252,249,246,250,7,9,237,251,26,246,225,253,4,252,251,0,29,16,212,230,36,24,212,231,38,15,224,241,10,
252,8,23,247,227,222,0,53,31,219,215,253,13,252,251,19,10,235,226,249,16,9,0,243,249,10,251,235,5,21,
245,230,247,15,26,253,213,235,23,20,235,235,22,2,224,9,21,232,238,22,10,235,239,19,19,236,228,7,5,242,
14,34,246,208,2,25,246,248,6,253,249,0,11,247,236,3,3,249,0,3,249,235,255,38,16,217,219,17,19,237,
4,27,244,224,0,11,249,4,18,246,222,252,16,13,242,229,16,28,229,219,17,23,241,240,7,11,246,249,11,255,
229,252,18,10,239,227,6,30,3,228,235,11,17,0,243,248,8,255,240,249,26,13,217,234,10,12,8,12,3,225,
234,14,2,252,23,6,224,229,5,28,3,227,248,21,3,241,245,9,244,242,27,18,231,243,4,240,250,37,7,226,
240,254,15,0,233,10,30,255,234,252,7,250,241,13,21,240,235,6,6,240,0,13,4,242,239,5,0,240,6,12,
4,237,212,27,50,228,205,20,48,225,196,26,55,237,211,0,14,247,246,14,15,246,244,236,230,5,42,17,237,226,
242,16,16,1,8,243,201,239,43,62,251,201,233,0,245,253,49,41,244,176,191,42,44,1,240,238,240,234,16,64,
3,212,11,4,227,7,23,17,246,223,238,11,25,251,229,255,18,0,250,245,241,7,1,248,4,243,1,24,236,218,
251,30,24,229,246,27,215,211,54,51,245,233,251,255,240,15,29,0,228,228,0,13,248,5,31,243,196,242,47,18,
241,24,250,191,245,58,21,217,248,21,240,245,1,9,1,233,245,22,24,240,216,246,20,8,230,0,46,35,196,169,
1,54,45,21,233,202,220,9,44,21,214,240,34,245,196,23,80,0,151,233,88,22,219,245,9,253,249,2,21,10,
232,243,20,245,224,14,50,12,204,229,31,18,245,14,247,215,238,50,48,249,194,217,0,27,36,5,221,235,4,5,
244,254,32,26,221,187,254,55,67,235,155,240,48,10,241,21,37,214,176,9,94,11,193,220,19,35,26,223,212,13,
25,14,230,220,14,32,245,243,252,11,0,216,5,46,16,221,212,25,47,218,199,11,20,36,43,234,181,195,8,86,
46,242,236,248,233,190,252,100,49,206,181,237,35,32,239,250,25,251,216,253,43,13,227,209,252,45,32,240,225,226,
242,12,39,45,231,215,235,220,252,78,48,219,236,246,245,18,14,16,1,228,253,25,10,231,219,13,51,254,233,242,
236,250,50,48,222,197,217,247,25,57,49,233,190,233,6,246,8,24,36,5,224,0,11,208,183,22,90,34,234,0,
238,176,183,38,113,95,243,130,194,11,5,38,68,30,207,200,246,245,234,24,32,35,44,230,179,199,228,21,89,86,
255,143,199,9,4,11,61,253,208,252,39,19,168,173,60,120,29,173,175,235,16,73,66,219,177,233,12,36,5,230,
8,13,242,252,243,248,14,2,254,4,253,244,225,32,68,226,181,236,26,44,54,238,167,200,84,91,213,157,236,57,
12,243,41,42,213,163,206,53,69,26,2,234,179,206,33,78,29,194,228,31,243,210,50,46,233,185,251,94,26,177,
207,32,34,2,12,11,245,203,210,0,48,105,30,134,139,19,68,46,11,6,224,216,232,26,39,228,7,36,15,227,
182,217,51,45,31,9,198,214,5,6,15,15,254,30,28,194,168,31,76,33,203,226,41,4,238,248,250,239,18,20,
253,9,22,231,187,240,59,66,246,188,217,6,35,24,7,0,232,217,240,22,54,3,231,3,0,236,224,250,62,8,
213,25,24,230,218,252,2,232,11,87,46,179,151,253,65,16,234,54,65,200,136,216,60,80,19,252,206,181,255,93,
69,184,189,33,29,187,220,100,52,183,199,27,10,226,9,56,15,196,216,18,25,3,255,0,30,13,192,221,34,36,
238,246,45,8,167,226,70,26,189,217,98,77,177,134,4,72,13,244,26,29,210,171,249,70,38,15,0,222,208,235,
7,8,34,36,10,244,209,207,7,31,14,253,254,1,27,5,194,223,28,48,18,10,246,174,174,38,112,60,231,161,
206,251,241,23,77,50,229,208,188,236,37,24,252,22,31,245,210,212,1,15,237,4,68,50,188,153,224,41,63,43,
22,245,179,178,237,52,82,24,236,228,216,234,238,33,97,10,172,199,24,39,3,246,244,247,246,240,255,20,7,232,
233,253,28,4,246,4,242,232,235,22,46,13,214,184,241,36,31,4,7,224,190,239,53,46,8,223,213,243,10,26,
9,231,240,246,243,25,50,3,213,186,223,34,61,17,241,215,233,4,248,5,19,5,232,231,10,6,253,255,250,237,
240,7,33,13,236,195,223,42,18,238,8,11,221,195,246,59,28,246,240,0,238,195,0,59,7,238,4,0,227,203,
16,57,4,210,240,10,243,245,2,0,255,13,20,238,207,241,20,1,10,38,24,223,189,229,19,28,34,31,222,197,
248,42,15,229,14,20,240,226,237,5,20,10,0,0,236,240,0,232,247,41,39,243,208,226,25,15,238,4,4,3,
244,242,14,19,2,226,3,29,233,219,251,36,15,236,4,26,234,213,245,11,15,1,13,12,242,221,233,35,39,236,
221,0,23,255,219,248,37,28,240,229,236,12,28,254,243,19,14,235,239,1,20,2,240,14,14,250,250,255,0,17,
10,233,242,8,16,236,251,46,27,245,204,229,1,33,49,10,236,225,248,4,13,247,250,26,21,230,234,15,24,237,
226,0,37,31,249,229,244,255,2,14,43,21,230,226,254,15,0,252,20,18,253,240,239,1,20,9,230,248,46,22,
241,226,244,11,254,6,19,11,247,236,7,32,245,230,19,40,3,214,255,33,250,227,3,39,13,233,251,10,9,231,
237,38,38,247,232,0,12,238,3,26,22,5,228,241,14,254,243,5,42,24,233,246,253,250,253,3,26,10,247,250,
4,6,0,235,0,43,13,243,243,251,5,4,3,28,8,247,236,249,13,16,2,2,11,11,238,248,4,13,11,245,
3,2,5,1,251,252,13,8,251,4,23,245,224,6,27,14,245,0,27,248,234,2,18,7,1,17,11,229,252,12,
16,14,234,248,6,245,7,2,16,11,237,7,12,1,251,245,17,32,250,0,15,1,233,232,27,41,242,243,36,19,
209,216,28,33,4,7,8,5,239,227,13,34,14,244,252,19,247,234,18,24,255,252,14,10,245,249,7,2,2,0,
24,20,238,226,239,36,25,245,245,10,18,1,227,248,22,11,246,1,12,7,5,0,244,252,250,0,15,23,253,236,
2,5,251,20,9,0,242,253,18,250,0,1,248,18,13,243,251,3,10,255,239,17,38,16,241,231,250,18,0,237,
7,36,8,244,239,0,19,243,242,24,19,250,249,8,31,244,219,14,32,244,227,6,23,1,246,252,1,1,2,253,
239,233,250,21,15,248,249,0,248,246,244,19,11,246,248,9,16,242,246,13,12,234,230,11,38,0,238,254,5,5,
251,3,11,249,244,255,18,10,8,0,252,245,254,9,247,249,9,11,12,243,242,8,6,2,248,241,14,26,251,235,
251,13,2,248,22,21,233,216,253,27,7,251,13,12,239,228,252,22,5,236,0,0,18,9,134,0,0,0,0,1,
4,8,6,252,244,248,0,2,2,4,4,255,251,250,254,1,3,4,3,1,255,253,253,255,2,3,2,0,255,253,
253,255,1,2,1,0,254,254,254,255,0,0,0,0,255,254,254,255,0,0,0,0,255,254,254,255,255,255,0,0,
0,254,254,255,255,0,0,254,254,0,255,253,254,0,1,1,0,253,254,0,0,255,255,0,1,0,254,253,0,4,
4,4,0,247,245,0,5,2,0,3,2,250,246,254,5,4,2,1,0,254,0,0,253,255,5,5,0,254,0,0,
255,255,0,2,2,0,0,254,253,0,3,1,255,0,0,253,255,0,0,0,1,253,253,2,255,252,3,5,253,253,
255,255,2,3,0,1,0,250,253,3,3,0,252,249,0,6,1,252,253,255,0,0,253,254,2,0,252,251,254,1,
0,252,254,5,1,249,250,1,5,0,254,255,251,252,4,3,254,254,0,0,2,1,249,244,4,18,2,242,250,3,
255,255,8,6,252,246,249,1,7,5,1,252,244,251,9,2,249,1,8,0,245,250,5,1,253,3,3,0,253,250,
254,5,0,255,1,253,252,7,8,249,242,252,12,14,248,235,6,16,246,243,12,8,248,253,254,1,6,252,242,1,
5,253,0,1,252,3,4,253,1,5,255,1,4,254,255,8,3,246,245,6,15,252,242,4,9,3,2,255,248,253,
12,11,244,245,11,250,234,13,31,253,229,241,0,6,4,3,8,251,234,248,12,1,252,8,3,249,252,253,251,0,
9,2,252,252,254,253,253,4,5,251,253,7,253,235,254,22,8,246,250,1,253,251,2,12,8,248,238,253,16,4,
245,255,3,253,0,4,254,0,1,249,248,9,8,243,254,11,247,244,9,8,254,244,253,14,1,238,253,11,0,252,
1,3,252,247,1,8,254,250,0,0,254,8,0,236,253,23,1,242,1,5,254,253,254,2,8,253,252,4,0,248,
7,6,244,255,22,255,232,0,18,5,251,246,248,14,17,245,240,4,11,1,248,0,12,7,243,242,12,16,249,240,
253,10,11,245,239,15,22,240,239,11,10,253,252,253,255,8,1,248,255,5,4,9,1,247,1,6,254,250,0,2,
4,2,255,249,252,0,2,7,8,249,247,4,2,253,12,5,230,241,20,17,241,241,3,0,248,0,5,0,248,253,
6,249,239,5,15,1,7,5,237,1,40,31,1,247,254,7,247,227,249,17,8,241,242,25,17,203,226,58,33,214,
238,37,13,229,4,34,0,239,248,244,11,24,244,235,252,254,16,8,249,253,251,0,255,242,9,36,248,207,247,28,
13,3,249,244,8,9,246,253,14,255,244,252,255,4,14,253,242,1,255,237,9,35,243,223,10,19,248,255,17,0,
237,241,7,33,1,215,247,20,253,247,9,0,245,2,3,242,250,15,7,243,245,2,9,245,244,27,9,221,237,20,
19,237,238,31,11,216,229,19,32,252,234,4,4,250,248,250,22,21,242,230,253,20,0,236,6,25,1,240,243,2,
11,255,253,5,12,242,223,13,37,254,240,245,249,12,13,243,254,12,247,236,16,19,246,251,0,241,1,10,255,6,
254,244,4,13,253,237,13,21,232,240,17,6,252,2,248,250,12,2,238,237,12,30,253,228,3,18,242,232,23,33,
245,220,240,27,23,239,239,15,21,252,228,246,37,8,220,0,16,253,0,249,244,29,22,216,217,33,55,251,207,239,
33,12,240,252,9,0,245,249,4,9,3,1,245,241,9,22,245,249,4,1,251,254,253,11,15,238,224,28,47,211,
212,46,36,215,233,42,41,224,179,254,75,22,207,230,17,8,251,17,8,225,247,21,254,245,22,17,239,243,16,4,
12,18,243,226,254,240,241,14,32,34,248,198,251,67,28,221,232,21,24,242,227,25,48,227,191,7,41,254,223,255,
36,251,220,5,18,14,11,242,231,11,29,0,219,250,42,9,215,253,30,248,232,8,15,11,1,213,247,54,25,231,
235,9,30,3,208,245,33,13,1,5,255,2,1,226,230,18,29,242,226,15,30,234,233,16,254,247,11,10,243,243,
11,29,252,226,255,15,249,248,12,7,239,254,24,247,226,17,26,237,252,19,249,233,1,28,18,232,222,17,33,232,
242,47,9,202,239,50,18,209,235,29,4,237,9,19,247,223,250,36,34,238,221,251,9,14,24,0,213,239,33,22,
250,244,233,251,27,5,243,252,255,250,241,8,36,4,225,244,2,10,12,254,254,2,241,236,22,35,243,215,4,22,
3,240,244,17,0,213,251,68,22,184,221,45,24,249,243,0,254,244,246,20,21,233,238,19,4,235,9,32,239,200,
0,54,12,213,0,33,245,210,9,60,12,208,208,34,50,217,219,36,35,232,215,12,35,254,241,3,241,249,24,0,
251,32,11,207,220,35,43,253,229,236,253,11,8,15,1,240,244,8,16,2,240,252,16,3,252,253,253,2,254,0,
19,7,247,245,255,9,0,243,4,18,253,235,15,26,246,232,251,40,28,212,211,29,29,9,20,231,184,5,78,10,
213,238,7,255,253,17,23,242,227,2,15,20,12,230,237,27,254,239,27,5,213,7,38,243,237,10,3,4,253,239,
20,36,233,224,16,12,253,25,15,228,226,18,31,6,248,240,8,17,239,253,31,248,231,19,9,224,9,53,243,207,
255,34,18,252,226,230,32,21,237,4,11,245,10,0,218,13,70,246,193,254,38,13,247,7,33,11,222,228,21,49,
246,194,26,58,213,215,36,40,2,210,223,58,48,205,227,46,7,227,12,254,240,24,17,223,237,12,20,10,245,254,
20,250,227,7,41,11,219,238,24,15,254,255,1,16,18,225,207,43,72,232,178,252,69,36,205,211,45,34,214,226,
46,27,217,232,38,39,236,234,254,255,19,22,233,246,29,242,213,22,53,253,224,230,12,46,247,204,28,45,234,226,
3,18,21,239,215,27,45,244,222,8,33,15,226,219,26,40,250,255,255,234,244,26,40,12,220,221,26,40,225,207,
47,54,219,189,18,74,2,194,0,59,5,215,246,37,29,11,0,211,231,48,39,220,221,16,25,5,243,250,28,2,
230,6,21,8,8,8,10,23,11,237,237,13,35,244,205,8,43,10,228,209,9,55,8,204,218,22,60,25,210,226,
34,19,211,226,55,40,199,215,37,41,5,206,222,50,38,231,225,6,32,255,217,228,40,59,215,157,39,111,221,131,
7,98,17,181,214,64,37,197,221,31,19,252,229,244,39,0,189,4,79,246,184,2,43,243,228,29,5,215,1,42,
233,232,27,14,231,231,11,21,246,243,255,240,244,18,11,241,252,1,226,2,53,244,197,14,16,235,34,21,181,220,
50,38,225,219,30,3,194,7,70,251,167,234,85,24,155,234,89,245,187,7,43,22,218,206,35,53,216,222,28,255,
249,0,240,251,26,243,229,29,36,205,202,44,49,228,226,18,4,250,10,247,239,20,255,231,12,19,253,237,241,8,
21,1,244,245,249,3,0,13,2,244,8,20,219,223,31,31,233,223,15,25,217,211,37,45,4,221,223,17,41,240,
249,4,233,11,9,224,8,58,229,177,13,74,7,205,238,14,9,249,235,6,33,255,220,229,13,29,12,250,245,248,
245,19,23,231,232,12,9,248,0,7,2,0,2,246,2,8,255,248,250,254,17,12,255,251,240,9,29,242,221,32,
27,211,246,53,255,199,2,50,17,216,226,30,30,232,239,24,249,231,11,19,253,253,1,243,236,43,47,198,194,38,
35,233,232,12,12,232,233,33,30,230,241,18,254,247,32,1,206,250,42,4,239,251,234,9,58,229,199,47,24,196,
11,42,249,251,239,236,24,22,245,249,6,5,244,241,5,27,15,235,233,2,16,22,1,213,235,32,22,224,245,31,
253,226,254,20,22,5,212,243,24,245,240,30,5,225,238,7,19,245,0,18,235,224,21,20,237,10,31,239,226,4,
11,9,11,241,213,251,37,23,248,217,231,32,44,221,196,28,64,230,184,22,56,244,210,252,29,10,236,6,12,215,
250,59,13,200,240,35,11,237,242,240,12,42,236,214,21,35,232,245,37,10,210,247,40,251,230,25,20,215,1,38,
246,222,12,29,8,232,232,16,15,243,253,12,249,250,16,10,237,0,31,244,227,37,30,207,223,46,45,239,200,1,
62,10,202,236,48,26,218,248,55,251,202,25,52,234,233,14,23,0,236,253,18,12,249,255,241,3,36,20,221,245,
18,3,0,12,3,0,246,253,14,13,254,241,253,26,20,213,241,56,24,216,223,37,43,220,217,51,24,203,245,35,
21,241,228,22,33,240,240,18,253,253,23,8,238,14,31,244,223,251,23,24,248,232,254,21,6,231,18,46,237,197,
11,41,15,239,226,12,30,253,239,19,12,232,239,22,26,250,236,254,6,16,7,239,2,24,249,236,17,8,253,0,
5,13,21,241,223,21,41,239,210,14,45,2,224,0,18,5,0,250,0,12,255,245,5,3,0,22,5,235,255,25,
2,245,15,10,237,251,25,9,245,10,11,237,254,22,247,245,31,20,217,213,47,69,215,180,34,69,240,196,14,65,
252,211,247,25,19,239,235,29,16,213,243,45,23,226,225,13,36,247,229,9,8,241,10,15,240,238,18,22,226,242,
42,7,219,6,23,6,5,255,250,249,0,14,13,4,3,232,236,28,34,243,237,8,245,233,20,38,247,209,254,40,
1,238,29,33,224,195,14,77,17,195,235,32,246,230,32,34,242,223,249,19,20,13,255,231,248,43,11,213,255,46,
0,225,1,32,19,237,222,10,47,1,211,250,51,21,209,235,50,28,224,239,46,26,200,211,50,51,233,216,7,41,
0,209,1,43,255,218,8,40,243,207,8,54,1,208,247,40,4,217,245,30,7,228,251,32,12,237,245,2,14,8,
4,5,243,242,16,17,7,251,225,13,39,235,223,27,12,225,4,37,4,226,230,12,46,13,221,242,23,248,239,29,
22,232,239,14,11,3,2,4,254,243,11,35,3,206,247,54,7,205,7,51,241,208,26,49,231,209,11,41,3,219,
250,36,8,230,243,28,28,241,229,9,21,252,242,13,19,240,236,21,9,225,254,47,3,208,252,49,12,221,249,30,
10,232,245,16,15,251,247,0,2,0,6,3,0,2,244,246,10,16,3,255,252,253,1,0,10,15,248,235,5,25,
2,233,248,18,8,245,249,7,9,246,241,17,17,239,250,28,6,226,252,31,13,225,239,25,17,232,242,27,11,232,
2,25,2,250,3,255,247,4,0,0,225,1,33,0,8,4,7,7,20,44,10,4,9,250,252,247,237,225,218,237,
231,235,246,241,0,9,13,10,0,14,14,2,3,246,240,239,232,230,219,224,229,226,235,237,236,246,248,247,245,244,
247,241,236,233,223,217,220,218,209,207,210,214,222,230,235,237,243,251,0,255,255,252,252,253,253,250,250,0,6,10,
14,19,24,34,38,41,43,50,56,54,55,57,61,79,76,73,75,67,65,59,47,32,16,15,11,6,5,4,11,21,
28,36,30,33,35,25,21,12,253,245,233,220,213,200,197,192,192,198,192,197,212,215,223,231,236,239,236,241,236,222,
224,218,215,212,206,205,204,208,221,219,227,231,242,253,0,2,0,0,4,0,0,0,1,0,2,8,6,13,16,20,
24,27,27,25,27,24,8,4,254,231,221,178,176,59,41,45,88,81,98,114,125,80,4,22,232,215,213,158,170,198,
247,18,0,44,85,91,125,107,85,60,43,37,241,222,212,196,224,225,222,239,3,18,3,5,16,19,26,29,16,254,
255,14,6,2,245,226,242,245,252,247,228,235,246,246,250,237,231,228,228,235,217,218,213,205,221,216,222,235,234,242,
235,236,235,226,231,213,204,208,206,205,203,205,209,217,235,245,249,0,10,12,22,28,24,14,17,15,14,20,27,37,
41,49,60,59,65,63,62,66,63,68,66,63,63,58,59,59,61,56,42,42,45,40,47,37,30,20,8,6,1,250,
243,237,243,244,243,244,231,230,236,224,230,219,211,211,212,214,211,205,209,197,202,191,187,194,195,203,202,206,217,217,
229,236,219,218,203,207,209,209,218,221,233,248,0,14,11,20,28,27,35,16,1,0,252,1,254,249,0,9,36,50,
71,96,98,110,120,114,104,103,84,64,43,27,13,249,234,219,215,226,228,238,248,254,16,27,36,42,34,23,15,254,
239,221,194,182,179,181,197,214,236,1,17,49,59,66,64,45,35,14,1,246,222,223,224,232,3,15,29,43,53,67,
60,49,37,14,253,234,217,201,191,190,191,193,204,214,223,235,242,241,240,233,225,213,204,187,179,171,164,160,160,178,
210,226,244,4,0,247,239,240,224,217,225,217,230,246,0,0,0,0,108,0,5,0,5,0,196,0,114,1,84,4,
252,8,88,12,91,14,32,27,70,18,46,20,38,12,16,16,6,0,125,60,135,120,120,120,80,75,120,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,7,0,196,0,
114,1,84,4,252,8,88,12,91,14,32,27,0,19,47,20,38,12,16,16,6,0,125,60,135,120,120,120,80,75,
120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,
1,0,216,0,184,1,169,6,96,9,128,12,66,14,192,27,9,17,28,40,36,33,32,19,7,0,120,105,120,120,
120,120,30,105,150,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,
1,250,0,0,1,0,212,0,179,1,155,7,96,9,228,12,216,14,160,27,29,15,25,37,34,40,30,18,6,0,
120,105,180,120,120,120,24,96,99,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,
188,40,60,182,64,250,23,8,1,0,200,0,164,1,141,8,0,10,32,13,110,15,64,27,0,95,63,93,97,97,
76,45,16,0,120,105,120,120,120,120,15,75,75,44,45,70,130,59,0,0,0,0,40,0,0,0,0,40,60,182,
40,54,0,191,77,60,59,182,64,250,23,8,140,0,3,0,1,0,148,0,128,1,168,7,196,9,228,12,50,15,
96,25,50,6,8,22,28,22,24,15,6,3,160,92,120,143,120,120,130,95,120,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,148,0,128,1,168,7,196,9,
228,12,50,15,96,25,90,6,8,22,28,22,24,15,6,3,160,92,120,143,120,120,130,95,120,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,148,0,80,1,
32,8,60,10,42,13,50,15,96,25,0,1,4,11,14,12,12,7,3,1,160,92,120,143,120,120,130,95,120,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,175,0,
4,0,1,0,104,0,104,1,72,8,120,10,52,13,40,15,96,25,45,54,26,77,50,48,50,29,12,5,160,95,
120,167,120,120,130,95,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,
223,182,176,250,125,182,3,0,104,0,104,1,72,8,120,10,52,13,40,15,96,25,70,120,40,116,76,72,75,44,
18,8,160,95,120,167,120,120,130,95,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,
0,191,197,254,124,182,1,250,0,0,1,0,104,0,104,1,72,8,120,10,52,13,40,15,96,25,60,97,36,104,
68,64,67,39,16,7,160,95,120,167,120,120,130,95,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,
222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,104,0,104,1,72,8,100,10,72,13,40,15,96,25,
0,43,24,69,45,43,45,26,10,5,160,95,120,167,120,120,130,95,120,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,90,0,3,0,1,0,192,0,144,1,168,7,
236,9,32,13,60,15,96,25,50,38,29,64,37,26,24,8,5,5,160,90,120,120,120,120,130,90,120,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,192,0,
152,1,148,7,236,9,32,13,60,15,96,25,90,84,44,96,64,44,40,20,8,8,160,90,120,120,120,120,130,90,
120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,
1,0,192,0,152,1,168,7,236,9,32,13,60,15,96,25,0,31,26,58,41,29,21,14,4,5,160,90,120,120,
120,120,130,90,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,
1,250,0,0,195,0,4,0,1,0,141,0,84,1,144,6,16,9,172,13,160,15,104,25,45,64,13,76,60,68,
68,40,15,12,174,115,127,122,122,132,187,130,137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,
40,53,0,191,197,24,223,182,176,250,125,182,3,0,141,0,84,1,144,6,16,9,172,13,160,15,104,25,80,64,
13,76,60,68,68,40,15,12,174,115,127,122,122,132,187,130,137,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,141,0,84,1,144,6,16,9,172,13,160,15,
104,25,70,53,11,69,54,62,61,36,13,11,174,115,127,122,122,132,187,130,137,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,141,0,84,1,144,6,16,9,
172,13,160,15,104,25,0,34,9,55,43,49,49,29,11,8,174,115,127,122,122,132,187,130,137,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,170,0,4,0,1,0,
31,1,77,2,255,6,225,9,104,13,15,15,224,28,50,32,26,48,51,47,36,27,9,5,244,132,159,120,120,120,
135,180,150,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,
125,182,3,0,31,1,77,2,255,6,225,9,104,13,15,15,224,28,60,81,42,77,82,75,58,42,14,9,244,132,
159,120,120,120,135,180,150,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,
124,182,1,250,0,0,1,0,31,1,77,2,255,6,225,9,104,13,15,15,224,28,60,73,40,73,77,71,55,40,
13,8,244,132,159,120,120,120,135,180,150,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,
0,182,8,0,0,0,1,250,0,0,1,0,31,1,77,2,255,6,225,9,104,13,15,15,224,28,0,32,26,48,
51,47,36,27,9,5,244,132,159,120,120,120,135,180,150,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,
222,182,0,0,0,0,188,40,60,182,64,250,23,8,170,0,4,0,1,0,31,1,176,1,255,6,225,9,104,13,
15,15,224,28,50,34,26,40,51,47,36,27,9,5,244,132,159,120,120,120,135,180,150,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,31,1,184,1,255,6,
225,9,104,13,15,15,224,28,60,71,42,49,82,75,58,42,14,9,244,132,159,120,120,120,135,180,150,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,31,1,
160,1,255,6,225,9,104,13,15,15,224,28,60,60,40,39,77,71,55,40,13,8,244,132,159,120,120,120,135,180,
150,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,
1,0,31,1,168,1,255,6,225,9,104,13,15,15,224,28,0,26,26,26,51,47,36,27,9,5,244,132,159,120,
120,120,135,180,150,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,
64,250,23,8,170,0,4,0,1,0,31,1,77,2,255,6,225,9,104,13,15,15,224,28,50,24,26,40,43,38,
31,21,9,5,244,132,159,120,120,120,135,180,150,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,
40,53,0,191,197,24,223,182,176,250,125,182,3,0,31,1,77,2,255,6,225,9,104,13,15,15,224,28,60,55,
42,60,64,57,49,34,14,9,244,132,159,120,120,120,135,180,150,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,31,1,77,2,255,6,225,9,104,13,15,15,
224,28,60,54,40,61,64,54,50,32,13,8,244,132,159,120,120,120,135,180,150,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,31,1,77,2,255,6,225,9,
104,13,15,15,224,28,0,23,26,40,40,38,31,21,9,5,244,132,159,120,120,120,135,180,150,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,220,0,4,0,1,0,
153,0,198,1,44,3,255,9,194,11,151,14,244,26,50,41,24,49,52,39,36,20,14,6,165,126,145,120,120,120,
165,115,130,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,
125,182,3,0,153,0,198,1,44,3,255,9,194,11,151,14,244,26,90,63,31,60,64,51,46,26,19,8,165,126,
145,120,120,120,165,115,130,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,
124,182,1,250,0,0,1,0,153,0,192,1,44,3,255,9,194,11,151,14,244,26,80,53,28,54,61,45,42,23,
17,7,165,126,145,120,120,120,165,115,130,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,
0,182,8,0,0,0,1,250,0,0,1,0,153,0,176,1,56,3,216,9,194,11,151,14,244,26,0,31,21,43,
46,34,31,18,12,5,165,126,145,120,120,120,165,115,130,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,
222,182,0,0,0,0,188,40,60,182,64,250,23,8,140,0,3,0,1,0,204,0,158,2,252,4,60,10,168,12,
10,15,0,28,50,54,35,56,76,42,50,25,14,8,170,165,150,120,120,120,170,180,120,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,204,0,93,2,208,4,
60,10,168,12,10,15,0,28,90,108,43,86,98,54,65,32,19,8,170,165,150,120,120,120,170,180,120,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,204,0,
93,2,252,4,60,10,168,12,10,15,0,28,0,52,31,61,69,38,46,22,13,9,167,165,150,120,120,120,167,180,
120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,
100,0,4,0,1,0,176,0,64,1,132,3,56,9,12,13,60,15,144,26,50,45,3,73,36,21,21,30,12,7,
177,125,102,120,120,120,177,125,117,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,
197,24,223,182,176,250,125,182,3,0,176,0,64,1,132,3,56,9,12,13,60,15,144,26,50,77,4,96,48,28,
28,40,16,10,177,125,102,120,120,120,177,125,117,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,
24,53,0,191,197,254,124,182,1,250,0,0,1,0,176,0,64,1,132,3,56,9,12,13,60,15,144,26,70,61,
3,85,42,24,24,35,14,8,177,125,102,120,120,120,177,125,117,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,176,0,64,1,132,3,56,9,12,13,60,15,
144,26,0,30,2,60,30,17,17,25,10,6,177,125,102,120,120,120,177,125,117,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,50,0,5,0,1,0,135,0,96,1,
138,6,68,9,128,12,128,14,153,24,50,48,12,67,56,50,45,32,10,11,178,122,132,123,123,141,187,130,137,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,
135,0,96,1,138,6,68,9,128,12,128,14,153,24,115,80,16,86,72,64,58,41,13,14,178,122,132,123,123,141,
187,130,137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,
0,0,1,0,135,0,96,1,138,6,68,9,128,12,128,14,153,24,55,51,12,69,58,51,47,33,10,11,178,122,
132,123,123,141,187,130,137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,
0,0,1,250,0,0,1,0,135,0,88,1,138,6,68,9,128,12,128,14,153,24,40,43,10,64,51,48,44,31,
10,10,178,122,132,123,123,141,187,130,137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,
0,0,188,40,60,182,64,250,23,8,1,0,135,0,80,1,138,6,68,9,128,12,128,14,153,24,0,40,9,63,
46,40,35,30,8,8,181,122,132,123,123,141,190,130,137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,40,
60,182,40,54,0,191,77,60,59,182,64,250,23,8,0,0,5,0,1,0,84,0,104,1,70,6,212,8,148,12,
41,14,64,26,42,56,18,76,56,42,42,39,12,8,162,150,135,120,120,120,102,135,120,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,84,0,104,1,26,6,
212,8,148,12,116,14,192,25,40,87,23,91,86,77,60,55,19,8,167,135,135,120,120,120,107,90,120,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,88,0,
104,1,48,6,172,8,148,12,116,14,192,25,50,80,24,94,68,74,55,53,21,8,167,120,135,120,120,120,107,90,
120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,
1,0,84,0,64,1,106,5,192,8,68,12,116,14,192,25,67,39,12,67,43,38,32,31,14,8,165,135,135,120,
120,120,105,90,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,
64,250,23,8,1,0,84,0,34,1,255,3,172,8,28,12,116,14,192,25,0,34,17,60,37,18,21,21,10,8,
165,135,135,120,120,120,105,90,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,
77,60,59,182,64,250,23,8,139,0,3,0,1,0,112,0,13,2,161,5,36,9,188,12,116,14,96,27,50,60,
34,66,80,45,47,36,18,8,167,150,135,120,120,120,197,120,120,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,116,0,13,2,161,5,36,9,188,12,116,14,
96,27,90,87,41,79,96,54,56,43,23,8,167,150,135,120,120,120,197,120,120,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,116,0,13,2,161,5,36,9,
188,12,116,14,96,27,0,46,30,58,70,39,41,32,16,9,167,150,135,120,120,120,197,120,120,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,105,0,4,0,5,0,
88,0,24,1,6,9,140,10,32,13,191,14,224,28,30,19,10,42,37,34,45,22,7,0,135,120,135,120,120,120,
30,105,75,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,
125,182,7,0,88,0,24,1,174,8,196,9,32,13,91,14,224,28,17,24,7,55,33,35,37,24,7,0,135,90,
135,120,120,120,30,105,75,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,
124,182,1,250,0,0,5,0,88,0,84,1,188,7,36,9,168,12,191,14,224,28,58,20,5,45,20,48,40,26,
5,0,135,135,135,120,120,120,30,90,75,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,
0,182,8,0,0,0,1,250,0,0,1,0,168,0,144,1,56,7,212,8,168,12,191,14,224,28,0,86,34,108,
58,77,61,37,10,0,120,105,120,120,120,120,30,75,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,
222,182,0,0,0,0,188,40,60,182,64,250,23,8,0,0,6,0,5,0,180,0,248,2,185,8,200,10,32,13,
116,14,0,29,45,13,4,8,23,36,46,26,7,0,120,62,150,120,120,120,45,92,90,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,196,0,229,1,136,6,
36,9,28,12,116,14,0,28,50,37,32,53,66,51,49,29,6,0,120,120,150,120,120,120,75,105,120,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,244,0,
7,3,43,4,240,10,148,12,41,14,96,27,59,126,29,73,116,52,45,45,15,7,167,165,135,120,120,120,167,120,
135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,
1,0,228,0,7,3,10,4,240,10,52,13,41,14,224,27,58,116,30,82,97,55,57,54,13,8,167,135,150,120,
120,120,167,90,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,
64,250,23,8,1,0,228,0,243,2,255,3,160,10,148,12,41,14,224,27,38,71,34,67,87,37,41,38,14,8,
167,135,120,120,120,120,167,75,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,
77,60,59,182,64,250,23,8,1,0,164,0,27,3,98,4,20,10,148,12,41,14,224,27,0,40,24,60,59,29,
25,25,8,8,167,120,120,120,120,120,227,105,105,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,
0,0,0,0,146,23,0,0,0,250,0,0,154,0,4,0,1,0,248,0,137,3,40,5,140,10,112,13,35,15,
32,28,50,60,34,70,69,40,27,24,9,8,210,150,105,120,120,120,255,180,150,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,72,1,157,3,40,5,140,10,
112,13,191,14,32,28,40,66,42,75,65,49,43,27,13,7,207,150,105,120,120,120,237,165,165,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,72,1,157,3,
40,5,140,10,112,13,191,14,32,28,65,72,41,80,67,56,42,26,13,6,210,150,105,120,120,120,240,165,165,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,
16,1,128,3,60,5,100,10,112,13,191,14,160,28,0,54,35,70,63,37,33,26,8,9,210,135,105,120,120,120,
255,165,165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,
23,8,154,0,4,0,1,0,248,0,137,3,40,5,140,10,112,13,35,15,32,28,50,60,34,70,69,40,27,24,
9,8,210,150,105,120,120,120,255,180,150,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,
0,191,197,24,223,182,176,250,125,182,3,0,72,1,157,3,40,5,140,10,112,13,191,14,32,28,40,102,42,95,
85,49,43,27,13,7,207,150,105,120,120,120,237,165,165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,
0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,72,1,157,3,40,5,140,10,112,13,191,14,32,28,
65,97,41,93,83,56,42,26,13,6,210,150,105,120,120,120,240,165,165,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,16,1,128,3,60,5,100,10,112,13,
191,14,160,28,0,54,35,70,63,37,33,26,8,9,210,135,105,120,120,120,255,165,165,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,50,0,4,0,5,0,4,0,
16,1,220,5,136,9,58,14,216,19,224,21,40,5,8,23,10,6,6,6,4,4,150,125,137,137,150,175,150,125,
137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,
5,0,4,0,16,1,220,5,136,9,58,14,216,19,224,21,10,6,9,25,11,6,6,6,5,4,150,125,137,137,
150,175,150,125,137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,
1,250,0,0,5,0,4,0,16,1,220,5,144,9,58,14,216,19,224,21,0,6,9,26,12,7,7,7,5,4,
150,125,137,137,150,175,150,125,137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,
8,0,0,0,1,250,0,0,17,0,4,0,16,1,220,5,160,9,58,14,216,19,224,21,0,6,9,25,11,6,
6,6,5,4,150,125,137,137,150,175,150,125,137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,
0,0,0,0,188,40,60,182,64,250,23,8,253,2,193,0,1,254,252,255,0,0,0,1,1,1,1,1,0,0,
2,4,6,8,9,11,10,9,8,6,5,5,6,7,8,10,11,12,13,13,12,11,10,10,9,8,8,8,8,9,
9,8,7,5,3,3,4,4,1,254,251,251,251,252,252,251,252,252,252,252,252,252,252,252,252,253,251,245,236,226,
218,215,216,221,227,234,238,240,239,237,234,231,229,228,230,234,238,242,246,252,0,6,10,15,17,18,16,13,9,6,
5,7,11,17,22,26,28,28,27,23,19,15,10,7,4,1,0,255,255,254,254,254,254,253,252,250,247,243,240,237,
235,234,235,237,239,242,244,246,248,249,250,251,252,253,254,254,255,0,0,1,3,4,5,6,6,5,4,2,0,253,
252,251,252,254,0,3,5,5,5,3,1,0,254,253,251,250,250,251,253,0,1,3,3,3,3,2,1,0,0,0,
1,2,3,4,4,4,4,3,3,3,4,4,4,4,3,2,1,0,0,255,255,255,255,0,0,1,2,3,2,0,
255,253,252,253,254,0,0,2,3,4,4,3,2,2,2,3,3,2,0,0,0,2,4,5,6,6,4,2,0,254,
253,252,251,250,250,252,255,0,0,0,255,255,0,0,255,253,252,252,253,253,253,252,252,253,252,251,250,252,253,252,
250,251,0,8,14,16,14,13,13,13,11,8,6,6,7,9,15,23,32,39,40,27,253,209,166,138,130,142,167,197,
229,255,12,11,0,241,231,228,231,236,242,248,253,0,3,9,20,36,53,67,73,68,54,34,13,253,242,239,244,255,
12,23,27,23,14,3,249,240,234,230,229,227,224,219,215,212,214,220,230,240,249,254,255,250,243,235,229,228,232,241,
252,6,15,21,24,25,24,22,22,21,20,17,14,10,5,2,0,0,3,7,11,13,12,7,0,248,240,234,229,228,
229,232,236,240,242,244,245,246,247,248,250,253,255,0,0,0,0,2,5,10,15,20,25,26,26,23,19,15,11,8,
7,6,5,4,4,3,3,3,3,3,2,0,254,250,245,241,237,237,238,242,246,252,1,7,11,12,12,11,10,8,
6,6,6,8,10,12,15,17,20,22,24,24,21,15,9,3,0,252,249,249,251,255,2,3,2,0,255,252,250,247,
245,246,249,252,254,254,252,252,252,255,3,8,11,12,9,6,3,2,1,2,3,4,6,7,8,9,9,8,6,4,
3,3,4,7,9,9,8,5,2,1,3,7,12,14,12,4,249,234,221,213,214,223,237,254,13,23,24,17,6,252,
243,237,238,244,254,4,5,0,252,252,252,247,237,226,218,215,216,221,227,234,239,240,239,238,235,232,230,229,231,234,
239,243,247,252,1,6,11,15,17,18,17,14,10,7,6,8,12,17,23,27,29,29,27,24,19,15,11,7,4,1,
0,0,255,254,254,254,254,254,253,250,247,244,241,238,235,234,235,237,240,242,244,246,248,250,251,252,252,253,254,255,
0,0,1,3,4,5,6,7,7,6,5,2,0,254,252,251,252,255,1,3,5,6,5,4,2,0,255,253,251,250,
251,252,254,0,2,3,3,3,3,3,2,0,0,0,1,2,3,4,5,5,4,4,4,4,4,5,5,4,4,3,
2,0,0,0,255,255,0,0,0,1,3,3,3,1,0,254,253,253,255,0,1,3,4,4,5,4,3,2,2,3,
3,3,1,1,1,3,5,6,7,6,5,2,0,255,253,252,251,250,251,253,255,1,1,0,255,0,0,0,0,254,
252,0,0,0,50,0,5,0,1,0,132,0,16,1,28,7,232,8,228,12,96,14,100,25,45,35,17,54,37,34,
34,31,8,11,167,90,135,120,120,120,167,135,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,
40,53,0,191,197,24,223,182,176,250,125,182,3,0,132,0,16,1,28,7,232,8,228,12,96,14,100,25,50,68,
24,76,52,48,48,44,12,16,167,90,135,120,120,120,167,135,135,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,132,0,16,1,28,7,232,8,228,12,96,14,
100,25,85,55,21,68,46,43,43,39,10,14,167,90,135,120,120,120,167,135,135,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,132,0,16,1,28,7,232,8,
228,12,96,14,100,25,40,43,19,60,41,38,38,35,9,12,167,90,135,120,120,120,167,135,135,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,1,0,132,0,16,1,
8,7,212,8,228,12,96,14,100,25,0,29,15,50,34,29,31,29,7,10,167,90,135,120,120,120,167,135,135,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,64,250,23,8,235,0,
5,0,1,0,244,0,35,2,48,7,232,9,38,13,144,14,176,28,45,28,23,46,45,48,37,27,8,6,202,118,
143,120,120,120,135,180,150,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,
223,182,176,250,125,182,3,0,244,0,35,2,48,7,232,9,38,13,144,14,176,28,80,82,40,79,77,81,63,46,
14,10,202,118,143,120,120,120,135,180,150,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,
0,191,197,254,124,182,1,250,0,0,1,0,238,0,18,2,230,6,214,9,6,13,144,14,122,28,80,72,37,74,
71,73,58,41,14,9,198,118,144,120,120,120,135,180,150,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,
222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,184,0,120,1,192,3,46,9,224,11,136,14,144,26,
30,48,26,59,47,37,32,21,15,7,162,122,155,120,120,120,162,120,167,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,1,0,184,0,120,1,212,3,56,9,224,11,
136,14,144,26,0,29,20,45,39,32,28,17,13,5,162,125,155,120,120,120,162,120,165,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,64,250,23,8,48,0,3,0,5,0,168,0,
160,1,232,3,216,9,72,13,168,17,106,24,25,10,31,19,3,3,7,3,7,11,97,125,137,137,150,175,97,125,
137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,
9,0,168,0,160,1,232,3,216,9,72,13,168,17,106,24,23,10,31,19,3,3,7,3,7,7,97,125,137,137,
150,175,97,125,137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,
1,250,0,0,1,0,168,0,160,1,232,3,216,9,72,13,168,17,106,24,0,10,31,19,3,3,7,3,7,7,
97,125,137,137,150,175,97,125,137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,
8,0,0,0,1,250,0,0,175,0,4,0,1,0,24,1,96,3,0,5,140,10,132,13,140,15,32,28,45,44,
27,62,53,40,30,19,9,4,217,155,105,120,120,120,247,170,165,44,65,75,130,54,0,0,0,0,50,0,0,0,
0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,24,1,96,3,0,5,140,10,132,13,140,15,
32,28,70,93,40,90,76,58,43,27,13,6,217,155,105,120,120,120,247,170,165,44,65,75,130,54,0,0,0,0,
50,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,24,1,96,3,0,5,140,10,
132,13,140,15,32,28,60,83,38,85,72,55,41,26,12,6,217,155,105,120,120,120,247,170,165,44,65,75,130,54,
0,0,0,0,50,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,24,1,96,3,
0,5,140,10,132,13,140,15,32,28,0,39,26,58,50,38,28,18,8,4,217,155,105,120,120,120,247,170,165,44,
65,75,130,54,0,0,0,0,50,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,0,0,
4,0,33,0,152,0,40,1,232,8,4,11,52,13,0,15,160,26,52,30,12,39,42,51,51,33,12,6,167,190,
120,120,120,120,167,190,120,44,45,70,130,60,165,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,
223,182,176,250,125,182,3,0,152,0,40,1,232,8,4,11,52,13,0,15,160,26,75,47,15,49,53,64,64,41,
16,7,167,190,120,120,120,120,167,190,120,44,45,70,130,60,165,0,0,0,40,0,0,0,0,0,0,0,24,53,
0,191,197,254,124,182,1,250,0,0,1,0,152,0,40,1,232,8,4,11,52,13,0,15,160,26,79,38,13,44,
47,58,58,37,14,6,167,190,120,120,120,120,167,190,120,44,45,70,130,60,170,0,0,0,40,0,0,0,0,250,
222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,84,0,240,0,94,9,4,11,32,13,60,15,64,26,
0,21,11,34,38,37,38,21,9,7,175,200,105,120,120,120,175,200,120,44,45,70,130,60,170,0,0,0,40,0,
0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,150,0,4,0,1,0,253,0,152,2,120,5,
238,9,66,13,215,14,0,28,50,35,35,47,62,34,31,23,11,2,200,140,140,120,120,120,150,180,150,44,45,70,
130,59,155,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,253,0,
152,2,120,5,238,9,66,13,215,14,0,28,60,66,48,64,84,46,43,31,15,3,200,140,140,120,120,120,150,180,
150,44,45,70,130,59,160,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,
1,0,253,0,152,2,120,5,238,9,66,13,215,14,0,28,40,59,45,61,79,44,40,29,14,3,200,140,140,120,
120,120,150,180,150,44,45,70,130,59,170,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,
1,250,0,0,1,0,253,0,152,2,120,5,238,9,66,13,215,14,0,28,0,31,33,44,58,32,29,21,10,2,
200,140,140,120,120,120,150,180,150,44,45,70,130,59,170,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,
188,40,60,182,64,250,23,8,150,0,4,0,1,0,186,0,152,2,128,5,156,9,248,12,141,14,160,27,50,37,
31,52,63,36,29,23,13,0,180,145,125,120,120,120,200,127,120,44,45,70,130,59,155,0,0,0,40,0,0,0,
0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,186,0,152,2,128,5,156,9,248,12,141,14,
160,27,60,68,43,72,86,50,39,32,18,0,180,145,125,120,120,120,200,127,120,44,45,70,130,59,155,0,0,0,
40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,186,0,152,2,128,5,156,9,
248,12,141,14,160,27,40,61,40,68,81,47,37,30,17,0,180,145,125,120,120,120,200,127,120,44,45,70,130,59,
155,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,186,0,152,2,
128,5,156,9,248,12,141,14,160,27,0,32,29,49,59,34,27,22,12,0,180,145,125,120,120,120,200,127,120,44,
45,70,130,59,155,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,247,0,
5,0,1,0,186,0,146,2,128,5,156,9,248,12,141,14,160,27,45,41,33,55,66,38,30,24,13,0,180,150,
125,120,120,120,200,120,120,44,45,70,130,59,155,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,
223,182,176,250,125,182,3,0,186,0,146,2,128,5,156,9,248,12,141,14,160,27,60,62,41,68,82,47,37,30,
17,0,180,150,125,120,120,120,200,120,120,44,45,70,130,59,155,0,0,0,40,0,0,0,0,0,0,0,24,53,
0,191,197,254,124,182,1,250,0,0,1,0,186,0,146,2,128,5,156,9,248,12,141,14,160,27,80,49,36,60,
72,42,33,27,15,0,180,150,125,120,120,120,200,120,120,44,45,70,130,59,155,0,0,0,40,0,0,0,0,250,
222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,208,0,136,1,8,2,20,10,216,11,234,13,15,28,
62,26,39,30,16,28,28,19,6,5,186,83,122,120,120,120,105,135,135,44,45,70,130,59,165,0,0,0,40,0,
0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,1,0,208,0,136,1,8,2,20,10,216,11,
234,13,15,28,0,16,32,22,14,24,24,17,5,4,186,83,122,120,120,120,105,135,135,44,45,70,130,59,175,0,
0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,64,250,23,8,0,0,7,0,1,0,206,0,
200,1,72,3,38,10,208,11,47,14,159,27,24,49,28,50,69,23,36,20,10,5,177,100,131,120,120,120,105,135,
135,44,45,70,130,59,160,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,
3,0,206,0,200,1,72,3,38,10,208,11,47,14,159,27,55,77,35,63,86,28,45,25,13,7,177,100,131,120,
120,120,105,135,135,44,45,70,130,60,165,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,
1,250,0,0,1,0,206,0,200,1,72,3,38,10,208,11,47,14,159,27,65,69,33,59,82,27,43,23,12,6,
177,100,131,120,120,120,105,135,135,44,45,70,130,60,165,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,
8,0,0,0,1,250,0,0,5,0,201,0,184,1,80,5,16,9,243,11,67,14,134,27,25,39,26,56,46,36,
43,24,12,6,176,151,153,120,120,120,105,177,157,44,45,70,130,60,170,0,0,0,40,0,0,0,0,250,222,182,
0,0,0,0,188,40,60,182,64,250,23,8,1,0,152,0,120,1,244,6,172,8,168,12,0,15,160,26,48,30,
14,43,43,39,46,32,15,7,167,197,120,120,120,120,167,197,120,44,45,70,130,60,170,0,0,0,40,0,0,0,
0,40,60,182,40,54,0,191,77,60,59,182,64,250,23,8,1,0,152,0,56,1,248,7,220,10,12,13,0,15,
160,26,30,27,12,42,35,29,35,29,13,6,167,200,120,120,120,120,167,200,120,44,45,70,130,60,170,0,0,0,
40,0,0,0,0,0,0,0,0,0,0,0,146,23,0,0,0,250,0,0,1,0,152,0,56,1,248,7,220,10,
52,13,0,15,160,26,0,21,11,37,28,28,28,23,12,5,167,200,120,120,120,120,167,200,120,44,45,70,130,60,
170,0,0,0,40,0,0,0,0,250,222,182,120,54,0,191,188,40,60,182,64,250,23,8,0,0,7,0,1,0,
232,0,218,2,222,3,60,10,224,11,222,13,160,28,40,57,32,56,70,33,33,22,9,7,230,150,120,120,120,120,
185,105,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,
125,182,3,0,232,0,158,2,178,3,60,10,224,11,222,13,32,28,49,114,28,81,103,42,43,28,15,6,182,150,
120,120,120,120,182,105,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,
124,182,1,250,0,0,1,0,228,0,138,2,222,3,14,10,232,11,244,13,10,28,65,105,30,83,101,46,44,29,
16,7,181,145,123,120,120,120,182,105,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,
0,182,8,0,0,0,1,250,0,0,37,0,184,0,209,1,106,5,112,8,48,12,191,14,64,27,22,49,37,68,
39,59,39,22,15,7,167,100,152,120,120,120,137,115,167,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,
222,182,0,0,0,0,188,40,60,182,64,250,23,8,1,0,208,0,149,1,246,6,112,8,128,12,191,14,64,27,
48,45,32,57,36,60,35,23,14,7,155,105,150,120,120,120,125,150,165,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,40,60,182,40,54,0,191,77,60,59,182,64,250,23,8,1,0,160,0,54,1,199,7,136,9,228,12,
191,14,64,27,26,36,25,53,36,30,41,27,16,7,155,105,135,120,120,120,125,105,150,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,0,0,0,0,0,0,0,146,23,0,0,0,250,0,0,1,0,160,0,54,1,210,7,
252,8,92,13,35,15,64,28,0,25,27,45,27,21,33,22,13,8,157,105,135,120,120,120,82,105,150,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,250,222,182,120,54,0,191,188,40,60,182,64,250,23,8,0,0,5,0,
1,0,88,1,128,2,169,6,216,9,192,13,185,15,32,29,46,46,33,54,65,48,36,27,9,8,255,150,180,120,
120,120,135,180,150,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,
176,250,125,182,3,0,88,1,133,2,169,6,216,9,192,13,185,15,32,29,61,85,45,74,89,66,50,38,13,8,
255,150,180,120,120,120,135,180,150,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,
197,254,124,182,1,250,0,0,1,0,36,1,64,2,241,5,12,9,148,12,20,15,173,28,48,56,30,66,71,45,
36,29,13,7,222,132,153,120,120,120,135,180,150,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,
49,229,0,182,8,0,0,0,1,250,0,0,1,0,192,0,174,1,156,4,172,8,204,11,141,14,224,28,46,36,
26,61,37,26,17,15,8,8,162,120,135,120,120,120,117,90,180,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,1,0,176,0,134,1,189,3,92,8,204,11,141,14,
224,28,0,29,25,53,35,20,14,11,8,7,155,120,75,120,120,120,110,90,120,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,64,250,23,8,195,0,4,0,1,0,112,0,120,1,
235,5,156,9,208,12,60,15,90,26,45,28,23,48,46,43,40,28,15,6,168,135,148,120,120,120,107,90,120,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,
112,0,120,1,235,5,156,9,208,12,60,15,90,26,75,39,27,58,54,51,47,34,18,7,168,135,148,120,120,120,
107,90,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,
0,0,1,0,112,0,120,1,235,5,156,9,208,12,60,15,90,26,75,35,25,55,51,48,45,32,17,6,168,135,
148,120,120,120,107,90,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,
0,0,1,250,0,0,1,0,112,0,120,1,235,5,156,9,208,12,60,15,90,26,0,28,23,48,46,43,40,28,
15,6,168,135,148,120,120,120,107,90,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,
0,0,188,40,60,182,64,250,23,8,105,0,4,0,1,0,116,0,13,2,161,5,232,8,188,12,116,14,96,27,
30,13,18,34,28,16,14,14,5,3,167,150,135,120,120,120,197,120,120,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,5,0,116,0,13,2,161,5,232,8,188,12,
116,14,96,27,45,16,20,38,32,18,16,16,6,4,167,150,135,120,120,120,197,120,120,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,116,0,13,2,161,5,
232,8,188,12,116,14,96,27,30,16,20,38,32,18,16,16,6,4,167,150,135,120,120,120,197,120,120,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,116,0,
13,2,161,5,232,8,188,12,116,14,96,27,0,11,15,29,35,19,20,16,8,4,167,150,135,120,120,120,197,120,
120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,
80,0,4,0,1,0,104,0,44,1,172,5,84,11,12,13,135,15,32,28,0,32,17,53,34,32,55,26,8,0,
150,120,150,120,120,120,120,105,150,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,
197,24,223,182,176,250,125,182,11,0,104,0,44,1,172,5,84,11,12,13,135,15,32,28,40,23,14,45,29,27,
47,22,7,0,150,120,150,120,120,120,120,105,150,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,
24,53,0,191,197,254,124,182,1,250,0,0,9,0,136,0,184,1,48,6,84,11,92,13,210,15,32,28,40,14,
13,41,31,28,27,13,5,0,150,105,150,120,120,120,120,45,150,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,136,0,104,1,152,8,84,11,32,13,210,15,
32,28,0,76,20,78,80,78,76,34,10,0,150,150,120,120,120,120,120,105,120,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,103,0,4,0,5,0,236,0,124,1,
12,7,236,9,172,13,160,15,0,27,40,14,48,29,21,13,11,13,7,0,120,60,90,120,120,120,30,135,105,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,7,0,
236,0,144,1,12,7,236,9,172,13,160,15,0,27,15,12,46,28,22,16,14,16,10,0,120,60,90,120,120,120,
30,135,105,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,
0,0,1,0,236,0,164,1,122,7,80,10,172,13,235,15,128,27,49,9,28,24,31,32,28,18,6,0,120,75,
90,120,120,120,30,105,165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,
0,0,1,250,0,0,1,0,204,0,144,1,97,8,20,10,92,13,135,15,128,27,0,66,51,66,65,81,81,52,
12,0,120,105,150,120,120,120,45,105,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,
0,0,188,40,60,182,64,250,23,8,140,0,3,0,1,0,148,0,128,1,32,8,60,10,42,13,50,15,96,25,
50,6,8,21,26,24,23,14,6,2,160,92,120,143,120,120,130,95,120,44,45,70,130,52,0,0,0,0,40,0,
0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,148,0,128,1,32,8,60,10,42,13,
50,15,96,25,90,7,8,22,28,25,24,15,6,2,160,92,120,143,120,120,130,95,120,44,45,70,130,54,0,0,
0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,148,0,128,1,32,8,
60,10,42,13,50,15,96,25,0,1,4,11,14,12,12,7,3,1,160,92,120,143,120,120,130,95,120,44,45,70,
130,46,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,175,0,4,0,
1,0,176,0,240,1,204,3,196,9,104,12,166,14,204,26,45,50,29,56,64,39,34,24,17,5,164,141,150,120,
120,120,162,120,165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,
176,250,125,182,3,0,176,0,240,1,204,3,196,9,104,12,166,14,204,26,70,109,43,83,95,57,51,36,26,8,
164,141,150,120,120,120,162,120,165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,
197,254,124,182,1,250,0,0,1,0,176,0,240,1,204,3,196,9,104,12,166,14,204,26,60,88,39,75,85,51,
46,32,23,7,164,141,150,120,120,120,162,120,165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,
49,229,0,182,8,0,0,0,1,250,0,0,1,0,176,0,240,1,204,3,196,9,104,12,166,14,204,26,0,44,
27,53,60,36,32,23,16,5,164,141,150,120,120,120,162,120,165,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,120,0,7,0,33,0,152,0,32,1,224,8,4,11,
52,13,0,15,160,26,52,43,6,65,57,58,58,28,13,6,175,105,120,120,120,120,175,90,120,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,152,0,24,1,
232,8,4,11,52,13,0,15,160,26,50,69,9,81,72,72,73,35,17,8,167,105,120,120,120,120,167,90,120,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,
152,0,24,1,232,8,4,11,52,13,0,15,160,26,40,50,8,69,61,61,62,30,14,7,167,105,120,120,120,120,
167,90,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,
0,0,1,0,152,0,24,1,232,8,4,11,52,13,0,15,160,26,30,44,7,65,57,58,58,28,13,6,167,105,
120,120,120,120,167,90,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,
60,182,64,250,23,8,1,0,152,0,24,1,252,8,4,11,52,13,0,15,160,26,48,62,9,77,68,69,69,33,
16,8,167,105,120,120,120,120,167,90,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,40,60,182,40,54,
0,191,77,60,59,182,64,250,23,8,1,0,152,0,24,1,252,8,4,11,12,13,216,14,64,26,60,44,9,58,
58,61,62,33,11,8,167,105,120,120,120,120,167,105,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,
0,0,0,0,0,0,146,23,0,0,0,250,0,0,1,0,84,0,200,0,94,9,4,11,32,13,60,15,64,26,
0,21,7,40,41,38,39,22,9,8,175,105,105,120,120,120,175,135,120,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,250,222,182,120,54,0,191,188,40,60,182,64,250,23,8,250,0,5,0,1,0,141,0,80,1,244,6,
236,9,32,13,160,15,104,25,45,40,9,60,53,53,51,31,11,9,174,115,127,122,122,132,187,130,137,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,141,0,
80,1,244,6,236,9,32,13,160,15,104,25,80,64,12,76,68,68,65,39,15,12,174,115,127,122,122,132,187,130,
137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,
1,0,143,0,66,1,116,7,51,10,27,13,109,15,159,25,80,48,10,64,59,60,58,34,12,10,172,113,125,121,
121,129,187,130,137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,
1,250,0,0,1,0,152,0,24,1,232,8,4,11,12,13,216,14,64,26,45,39,9,55,55,58,59,31,11,7,
167,105,120,120,120,120,167,105,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,
188,40,60,182,64,250,23,8,1,0,84,0,200,0,94,9,4,11,32,13,60,15,64,26,0,22,8,41,41,39,
40,23,10,8,175,105,105,120,120,120,175,135,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,40,60,182,
40,54,0,191,77,60,59,182,64,250,23,8,0,0,5,0,1,0,84,0,104,1,180,5,212,8,148,12,41,14,
64,26,42,51,17,72,57,40,40,37,11,8,162,150,135,120,120,120,102,135,120,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,84,0,104,1,140,5,212,8,
148,12,116,14,192,25,40,79,21,87,82,73,57,52,18,8,167,135,135,120,120,120,107,90,120,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,88,0,96,1,
120,5,172,8,148,12,116,14,192,25,50,74,22,89,68,70,52,50,20,8,167,120,135,120,120,120,107,90,120,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,
109,0,64,1,113,4,187,8,23,12,121,14,244,25,67,49,11,68,57,41,37,33,15,8,165,135,138,120,120,120,
162,120,165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,
23,8,1,0,84,0,34,1,255,3,172,8,28,12,116,14,192,25,0,30,16,57,35,17,20,20,10,8,165,135,
135,120,120,120,105,90,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,
59,182,64,250,23,8,235,0,6,0,1,0,0,1,43,2,64,6,243,9,229,12,226,14,112,28,45,37,27,53,
51,46,38,25,10,5,222,133,154,120,120,120,135,180,150,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,
124,182,40,53,0,191,197,24,223,182,176,250,125,182,19,0,0,1,43,2,241,5,243,9,229,12,226,14,112,28,
40,46,31,59,57,52,42,28,11,6,222,133,154,120,120,120,135,180,150,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,162,0,16,2,16,4,216,9,58,12,
176,14,121,27,40,48,30,55,67,39,35,26,16,6,169,143,139,120,120,120,197,135,120,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,162,0,16,2,16,4,
216,9,58,12,176,14,121,27,70,54,32,58,71,41,37,27,16,6,169,143,139,120,120,120,197,135,120,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,1,0,162,0,
16,2,16,4,216,9,58,12,176,14,121,27,40,60,34,62,74,43,39,28,17,6,169,143,139,120,120,120,197,135,
120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,64,250,23,8,
1,0,162,0,16,2,16,4,216,9,58,12,176,14,121,27,0,38,27,49,59,34,31,23,14,5,169,143,139,120,
120,120,197,135,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,146,23,0,0,
0,250,0,0,255,0,5,0,1,0,243,0,200,1,8,7,216,9,28,13,170,14,164,28,45,36,23,48,54,53,
41,30,9,6,214,120,143,120,120,120,185,107,127,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,
40,53,0,191,197,24,223,182,176,250,125,182,3,0,237,0,196,1,174,6,202,9,27,13,183,14,116,28,70,57,
27,62,67,63,49,38,12,8,210,120,140,120,120,120,185,107,127,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,183,0,160,1,123,3,71,9,14,13,46,15,
193,26,80,82,23,87,71,32,30,40,15,9,181,124,113,120,120,120,185,107,127,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,176,0,88,1,32,3,56,9,
12,13,60,15,144,26,60,64,3,86,50,25,25,36,14,9,177,125,110,120,120,120,177,125,125,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,1,0,176,0,88,1,
32,3,56,9,12,13,60,15,144,26,0,31,2,60,35,17,17,25,10,6,177,125,110,120,120,120,177,125,125,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,64,250,23,8,255,0,
5,0,1,0,168,0,16,2,112,3,88,10,104,11,141,14,32,27,45,52,20,51,63,38,35,17,13,5,167,135,
150,120,120,120,167,135,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,
223,182,176,250,125,182,3,0,195,0,156,2,68,4,108,10,97,12,235,14,60,27,70,83,34,75,82,52,45,26,
16,6,201,149,155,130,120,120,167,135,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,
0,191,197,254,124,182,1,250,0,0,1,0,231,0,105,3,125,5,136,10,178,13,105,15,97,27,80,78,43,85,
82,54,44,30,14,5,246,167,162,143,120,120,167,135,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,
222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,236,0,128,3,160,5,140,10,216,13,120,15,102,27,
60,83,41,81,77,51,41,29,13,5,251,170,163,145,120,120,255,174,173,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,1,0,236,0,128,3,160,5,140,10,216,13,
120,15,102,27,0,56,34,67,63,42,34,23,11,4,251,170,163,145,120,120,255,174,173,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,64,250,23,8,20,0,3,0,5,0,136,0,
216,1,64,6,32,8,128,12,100,15,124,21,20,14,3,36,21,7,3,7,0,0,200,212,187,187,205,175,200,212,
187,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,
1,0,136,0,216,1,64,6,32,8,128,12,100,15,124,21,0,11,3,32,21,7,3,7,0,0,200,212,187,187,
205,175,200,212,187,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,
1,250,0,0,1,0,136,0,216,1,64,6,32,8,128,12,100,15,124,21,0,11,3,32,21,7,3,7,0,0,
200,212,187,187,205,175,200,212,187,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,
8,0,0,0,1,250,0,0,20,0,3,0,5,0,136,0,8,2,120,5,148,7,128,12,100,15,124,21,20,4,
4,20,16,8,4,8,0,0,200,212,187,187,205,175,200,212,187,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,1,0,136,0,8,2,120,5,148,7,128,12,100,15,
124,21,0,4,4,20,16,8,4,8,0,0,200,212,187,187,205,175,200,212,187,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,136,0,8,2,120,5,148,7,
128,12,100,15,124,21,0,4,4,20,16,8,4,8,0,0,200,212,187,187,205,175,200,212,187,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,8,1,23,0,255,2,
250,255,251,0,253,255,253,252,1,2,2,1,253,8,5,6,7,14,13,12,17,13,16,5,164,135,240,0,35,45,
3,43,36,3,19,0,247,11,247,252,12,228,242,255,240,250,251,3,3,244,8,13,1,248,3,3,2,25,11,0,
16,22,6,22,212,179,243,250,37,8,255,19,4,12,254,239,7,240,219,252,239,251,42,29,42,28,15,28,249,214,
226,225,240,240,240,15,9,245,23,14,4,246,238,11,21,16,5,249,251,23,6,9,5,248,241,251,246,255,227,234,
255,5,20,13,0,253,252,247,42,12,247,248,6,30,30,0,3,18,191,220,208,229,20,255,12,19,5,53,25,245,
19,215,7,47,251,12,213,238,248,247,4,229,37,250,228,246,12,20,37,3,230,33,231,223,243,40,76,233,219,36,
242,246,242,41,16,230,220,215,0,21,251,224,251,54,217,217,22,40,26,42,59,27,220,15,72,244,207,167,168,209,
3,239,12,33,63,6,218,45,55,222,243,44,11,241,23,29,247,250,16,193,238,25,218,204,251,37,16,218,24,18,
213,50,43,230,3,22,230,243,4,43,25,243,18,232,222,32,6,226,228,242,229,212,50,0,5,0,1,0,132,0,
24,1,12,8,36,9,228,12,96,14,100,25,45,35,17,54,37,31,34,31,8,11,160,90,135,120,120,120,160,135,
135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,
3,0,132,0,24,1,188,7,36,9,228,12,96,14,100,25,50,68,24,76,51,44,48,44,12,16,167,90,135,120,
120,120,167,135,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,
1,250,0,0,1,0,132,0,24,1,168,7,36,9,228,12,96,14,100,25,85,55,21,68,46,39,43,39,10,14,
167,90,135,120,120,120,167,135,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,
8,0,0,0,1,250,0,0,1,0,132,0,24,1,188,7,36,9,228,12,96,14,100,25,40,43,19,60,41,35,
38,35,9,12,165,90,135,120,120,120,165,135,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,
0,0,0,0,188,40,60,182,64,250,23,8,1,0,132,0,24,1,188,7,36,9,228,12,96,14,100,25,0,29,
15,50,34,29,31,29,7,10,167,90,135,120,120,120,167,135,135,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,40,60,182,40,54,0,191,77,60,59,182,64,250,23,8,175,0,4,0,1,0,144,0,128,1,128,7,176,9,
248,12,0,15,160,26,45,42,23,60,54,54,54,26,12,6,167,105,120,120,120,120,167,90,120,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,144,0,128,1,
128,7,176,9,248,12,0,15,160,26,70,81,32,84,76,76,75,36,17,8,167,105,120,120,120,120,167,90,120,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,
144,0,128,1,128,7,176,9,248,12,0,15,160,26,60,65,28,75,68,68,67,32,15,7,167,105,120,120,120,120,
167,90,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,
0,0,1,0,152,0,128,1,128,7,136,9,32,13,0,15,160,26,0,35,19,56,50,50,51,24,11,5,167,105,
120,120,120,120,167,90,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,
60,182,64,250,23,8,175,0,4,0,1,0,135,0,120,1,4,6,212,8,72,13,0,15,50,25,45,40,14,59,
47,56,44,26,10,5,178,122,132,123,123,141,187,130,137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,
124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,135,0,104,1,4,6,172,8,72,13,0,15,50,25,
70,73,20,80,64,68,60,36,13,8,178,122,132,123,123,141,187,130,137,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,135,0,104,1,4,6,192,8,72,13,
0,15,50,25,60,59,18,72,57,61,54,32,12,7,178,122,132,123,123,141,187,130,137,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,135,0,104,1,24,6,
232,8,72,13,0,15,50,25,0,30,12,51,40,43,38,23,8,5,178,122,132,123,123,141,187,130,137,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,115,0,3,0,
1,0,160,0,75,2,220,5,252,8,148,12,165,15,199,27,45,53,37,66,63,47,41,27,15,6,171,143,165,121,
122,125,171,120,172,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,
176,250,125,182,3,0,160,0,75,2,220,5,252,8,148,12,165,15,199,27,70,85,48,84,80,60,52,34,20,8,
171,143,165,121,122,125,171,120,172,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,
197,254,124,182,1,250,0,0,1,0,160,0,75,2,220,5,252,8,148,12,165,15,199,27,0,68,43,75,72,54,
46,31,18,7,171,143,165,121,122,125,171,120,172,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,
49,229,0,182,8,0,0,0,1,250,0,0,205,0,4,0,1,0,248,0,152,2,232,3,160,10,216,12,109,14,
87,27,45,50,25,54,60,33,35,31,9,5,167,148,135,120,120,120,167,145,131,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,248,0,152,2,232,3,160,10,
216,12,109,14,87,27,90,91,34,73,81,45,47,42,12,7,167,148,135,120,120,120,167,145,131,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,248,0,144,2,
252,3,140,10,216,12,109,14,87,27,70,73,31,67,74,41,43,38,11,6,167,148,135,120,120,120,167,145,131,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,
248,0,144,2,16,4,80,10,168,12,109,14,87,27,0,46,25,54,60,33,35,31,9,5,167,148,135,120,120,120,
167,145,131,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,
23,8,67,8,23,0,1,5,2,0,254,252,253,251,251,248,247,250,1,12,15,13,5,0,248,241,243,249,255,0,
8,22,34,38,35,30,23,10,1,251,238,223,220,231,239,243,247,253,251,246,252,0,249,238,235,237,242,254,4,0,
243,239,245,249,253,1,10,18,21,22,24,34,43,47,42,36,32,30,25,13,2,254,254,0,11,28,37,34,33,32,
24,15,9,5,249,242,245,242,219,197,197,210,219,221,226,244,17,48,58,44,25,20,20,7,242,225,224,238,2,14,
12,20,40,58,48,27,18,23,21,0,231,213,204,203,210,214,212,213,234,1,6,252,251,1,250,231,217,220,230,244,
254,0,253,4,22,30,21,10,6,10,13,11,1,249,255,8,9,252,244,251,13,29,33,32,31,38,44,39,24,14,
11,4,249,236,231,236,244,253,0,249,242,249,6,5,246,230,230,241,248,248,248,247,248,251,251,241,230,227,231,237,
235,234,234,239,245,250,246,235,234,243,246,237,232,239,249,0,253,248,242,242,249,251,243,232,238,250,5,8,8,13,
25,34,31,20,10,14,26,31,20,14,22,30,28,19,20,21,11,3,12,26,25,14,9,12,18,13,5,254,249,243,
238,238,239,244,241,238,243,2,10,12,15,19,15,3,250,248,248,239,230,223,227,241,2,12,24,45,60,61,52,36,
21,13,13,10,2,0,5,20,30,37,29,14,2,254,251,246,248,242,228,217,210,203,198,211,234,250,0,1,11,14,
11,5,253,243,238,248,1,11,18,23,20,11,6,11,14,2,245,246,2,11,12,5,8,19,31,33,22,2,247,251,
249,229,213,214,228,237,239,240,243,255,12,23,9,240,223,222,230,236,237,233,242,2,16,21,24,31,45,54,46,25,
10,5,0,237,208,195,202,221,234,243,251,8,18,21,20,15,0,251,253,237,205,193,212,228,236,247,16,42,54,56,
44,24,8,255,243,223,219,231,246,6,19,35,38,39,42,43,25,251,238,238,236,231,234,242,246,254,16,34,43,36,
29,17,4,0,2,2,252,254,0,6,8,13,13,3,242,230,231,238,244,240,223,213,226,243,243,226,222,234,252,8,
16,18,14,15,17,11,252,244,249,253,251,253,5,22,31,40,41,31,19,24,42,37,18,14,30,31,9,253,5,11,
4,250,245,241,241,248,246,240,236,238,237,233,231,221,208,213,231,236,211,206,234,9,26,32,36,25,30,52,62,39,
6,254,254,254,0,5,9,11,26,35,34,33,35,32,12,246,222,209,201,199,198,195,201,225,5,20,10,6,25,32,
2,230,227,225,211,207,221,230,237,11,43,44,28,35,57,55,23,247,236,247,254,246,229,239,14,40,46,40,41,36,
31,13,243,221,219,230,232,228,231,247,7,13,2,247,253,8,254,231,229,249,253,250,255,8,13,29,54,54,29,8,
9,254,230,210,212,222,231,251,13,29,33,44,55,51,29,7,249,229,216,226,234,221,209,229,249,246,253,17,21,251,
246,2,3,243,251,9,254,237,244,10,12,5,4,4,2,12,28,32,26,32,40,28,5,0,7,244,210,198,211,220,
224,241,6,17,28,41,46,30,14,0,235,223,227,239,235,234,253,24,39,41,37,28,20,21,18,0,236,234,243,245,
248,6,14,13,26,47,46,16,253,0,0,235,210,201,199,211,228,243,249,0,13,20,13,5,249,231,216,218,229,234,
235,251,19,32,33,30,28,23,31,36,22,251,243,253,238,214,221,1,21,24,25,38,40,37,16,244,219,211,213,217,
234,248,253,5,30,40,7,227,233,4,253,220,210,234,253,3,11,25,16,11,18,26,5,248,6,19,4,238,242,251,
252,0,12,21,26,42,56,38,10,2,9,1,234,226,218,213,214,234,240,226,224,4,35,44,55,82,77,26,233,218,
207,181,171,185,194,188,216,21,62,53,40,65,86,80,50,26,255,228,217,214,202,196,224,13,38,43,50,68,80,62,
25,249,230,219,197,176,172,188,212,248,27,47,43,49,67,68,24,233,223,237,233,211,199,209,231,5,34,42,31,36,
63,75,43,246,224,227,227,209,205,215,231,250,9,27,30,39,44,36,12,255,253,251,236,220,203,192,191,213,240,252,
254,8,36,58,63,55,45,40,33,10,223,195,211,243,245,212,211,252,35,37,25,27,27,29,31,34,13,236,230,237,
222,194,197,228,243,253,23,48,43,40,56,45,3,238,254,251,220,205,214,214,211,236,2,2,0,21,42,34,19,16,
14,247,229,231,249,249,236,235,251,8,9,15,28,32,33,39,50,36,3,232,223,232,233,224,213,232,3,20,28,49,
63,46,15,2,243,211,199,208,205,180,194,245,33,29,27,35,41,35,27,15,242,218,224,244,237,209,218,6,31,18,
13,44,56,41,41,54,32,244,234,246,231,199,192,211,227,252,34,48,38,42,75,80,37,240,233,239,224,188,182,204,
225,244,11,27,24,32,56,56,16,238,237,240,228,220,230,226,226,248,24,25,8,16,34,23,255,253,8,1,248,1,
10,12,13,26,22,2,245,245,246,243,239,228,228,242,6,9,16,27,42,34,29,28,23,244,202,173,168,174,190,219,
235,250,21,85,125,114,68,41,30,5,218,189,180,168,172,207,10,34,36,52,96,110,84,39,4,226,204,194,179,162,
168,215,5,29,38,47,60,59,49,23,245,213,191,190,197,205,209,221,255,42,80,84,67,48,35,20,254,228,205,188,
194,223,244,244,0,30,51,52,51,56,48,31,14,250,217,192,201,211,218,216,229,255,27,43,44,39,45,56,50,13,
235,227,231,220,196,191,196,198,219,20,62,50,36,70,105,74,19,3,1,217,179,186,210,203,211,245,18,9,13,42,
67,57,43,31,8,243,239,238,215,192,194,224,244,251,0,13,24,25,23,16,11,3,2,2,251,245,252,3,5,3,
10,12,6,251,245,247,253,2,0,2,22,46,43,16,5,14,21,14,252,238,217,210,219,233,229,217,228,9,47,46,
25,15,18,14,251,229,212,202,211,243,9,0,253,28,53,42,14,16,26,15,255,247,239,219,216,239,1,0,246,3,
31,55,50,24,6,11,24,6,225,205,218,240,246,247,249,255,7,24,36,20,245,246,0,249,216,214,245,3,244,240,
0,6,6,15,27,21,7,19,37,19,233,214,224,232,221,218,235,6,20,43,60,56,34,27,36,36,9,239,224,220,
213,212,210,224,4,42,52,34,40,56,58,22,241,219,206,196,205,217,215,212,233,11,19,9,11,37,42,28,16,10,
255,240,244,243,230,216,239,6,5,251,2,22,37,35,28,5,250,4,20,10,249,0,15,13,255,252,248,232,228,246,
1,243,239,16,45,38,13,0,253,241,236,232,224,213,233,0,4,5,28,46,40,29,23,18,253,235,221,201,196,224,
254,14,26,41,49,40,33,18,251,224,222,229,229,230,243,0,0,250,1,17,21,10,10,20,25,18,7,249,235,237,
0,1,234,221,247,17,12,254,1,6,12,16,25,10,245,244,9,5,235,218,223,240,255,8,8,9,19,35,31,12,
0,253,241,233,231,235,247,7,23,16,255,251,8,21,24,16,255,246,255,13,7,243,228,227,236,246,250,249,246,0,
7,11,14,24,26,28,33,32,10,243,236,239,225,205,212,240,4,7,16,35,51,46,35,27,6,238,228,233,230,220,
226,248,8,15,24,27,22,14,7,248,234,233,232,220,214,223,237,247,5,18,16,11,27,44,40,23,17,15,11,3,
251,238,227,227,231,226,227,250,23,41,47,52,58,54,36,13,241,210,199,208,214,207,214,253,36,49,46,46,36,21,
13,0,223,195,202,219,210,196,213,244,2,8,16,24,29,42,45,25,0,252,255,246,228,223,237,0,22,31,26,21,
31,43,38,12,243,233,238,247,251,237,221,230,4,20,14,6,14,21,19,13,4,247,240,240,236,227,230,245,1,4,
4,1,5,15,25,18,1,248,252,252,243,228,219,224,238,253,5,17,33,50,52,37,15,0,246,234,221,207,200,210,
238,7,15,20,34,48,55,54,44,23,4,254,245,227,215,225,236,243,252,14,24,29,37,41,24,0,249,250,237,215,
201,195,200,217,240,245,241,249,16,33,31,22,15,9,7,13,10,250,238,248,9,7,254,0,9,14,26,39,39,31,
38,49,38,16,10,7,246,228,226,223,217,227,249,254,242,242,1,5,253,244,240,236,238,249,1,253,248,0,8,3,
248,249,3,7,6,6,8,13,29,38,23,0,252,6,6,251,239,236,241,3,20,20,11,16,31,34,12,244,234,233,
228,219,212,213,226,246,3,0,251,255,4,0,243,230,224,228,244,255,1,6,23,42,45,36,26,21,18,12,4,254,
253,3,11,13,9,10,18,22,17,11,8,5,0,251,247,244,247,252,255,0,5,10,13,12,3,245,231,226,223,217,
215,217,220,223,230,236,242,251,4,8,4,0,0,4,5,1,251,246,244,251,8,16,12,9,14,21,23,24,25,20,
12,9,10,6,1,2,7,10,15,25,35,34,26,19,12,0,243,233,222,214,217,235,0,11,18,23,29,34,29,10,
244,225,210,199,197,204,217,230,244,3,22,40,49,50,44,36,26,17,8,249,234,228,235,245,0,6,16,33,57,65,
50,32,26,21,1,236,227,232,242,250,0,8,20,31,35,27,11,252,245,237,222,203,193,191,197,206,215,219,232,254,
16,19,15,14,15,11,253,233,218,219,229,240,250,3,16,35,55,62,54,43,38,32,21,7,254,250,255,6,8,6,
14,30,41,36,24,13,6,254,236,214,199,197,204,211,211,211,217,228,232,223,215,0,185,0,4,0,1,0,147,0,
22,1,238,7,186,9,17,13,141,14,81,26,45,41,10,62,52,48,52,29,12,8,167,101,123,120,120,120,167,90,
120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,
3,0,147,0,22,1,238,7,186,9,17,13,141,14,81,26,70,75,14,84,71,65,70,39,16,10,167,101,123,120,
120,120,167,90,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,
1,250,0,0,1,0,147,0,22,1,238,7,186,9,17,13,141,14,81,26,70,61,12,76,63,58,63,35,15,9,
167,101,123,120,120,120,167,90,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,
8,0,0,0,1,250,0,0,1,0,147,0,22,1,238,7,186,9,17,13,141,14,81,26,0,30,8,54,45,41,
45,25,10,6,167,101,123,120,120,120,167,90,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,
0,0,0,0,188,40,60,182,64,250,23,8,165,0,4,0,1,0,160,0,248,1,60,5,172,8,228,12,246,14,
95,27,45,43,27,55,64,43,40,30,16,6,170,133,127,122,124,128,197,131,127,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,160,0,248,1,60,5,172,8,
228,12,246,14,95,27,60,72,36,72,84,56,52,38,21,8,170,133,127,122,124,128,197,131,127,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,160,0,248,1,
60,5,172,8,228,12,246,14,95,27,60,60,32,65,76,50,47,35,19,7,170,133,127,122,124,128,197,131,127,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,
160,0,248,1,60,5,172,8,228,12,246,14,95,27,0,36,28,50,58,39,36,27,15,5,170,133,127,122,124,128,
197,131,127,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,
23,8,45,0,4,0,1,0,122,0,136,1,180,5,132,8,228,12,246,14,95,27,45,41,18,54,67,39,42,29,
16,6,170,133,127,122,124,128,197,131,127,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,
0,191,197,24,223,182,176,250,125,182,3,0,122,0,136,1,180,5,132,8,228,12,246,14,95,27,97,72,24,72,
88,52,55,38,21,8,170,133,127,122,124,128,197,131,127,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,
0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,122,0,136,1,120,5,112,8,228,12,246,14,95,27,
73,62,21,68,79,47,43,35,19,7,170,133,127,122,124,128,197,131,127,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,122,0,152,1,79,5,153,8,228,12,
246,14,95,27,0,39,23,54,57,37,34,23,11,6,170,133,127,122,124,128,197,131,127,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,165,0,4,0,1,0,24,1,
248,2,236,4,196,9,112,13,40,15,153,28,45,48,28,57,63,46,37,28,10,6,215,138,143,120,120,120,237,165,
165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,
3,0,24,1,248,2,236,4,196,9,112,13,40,15,153,28,60,83,38,76,83,60,48,37,13,8,215,138,143,120,
120,120,237,165,165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,
1,250,0,0,1,0,24,1,248,2,20,5,196,9,112,13,40,15,153,28,60,73,36,72,79,57,46,35,13,7,
215,138,143,120,120,120,237,165,165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,
8,0,0,0,1,250,0,0,1,0,24,1,248,2,40,5,196,9,112,13,40,15,153,28,0,40,26,53,59,43,
34,26,9,5,215,138,143,120,120,120,237,165,165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,
0,0,0,0,188,40,60,182,64,250,23,8,175,0,4,0,1,0,132,0,67,1,240,5,92,8,228,12,96,14,
100,25,45,41,18,63,40,35,37,34,9,12,167,105,135,120,120,120,167,112,135,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,132,0,67,1,240,5,92,8,
228,12,96,14,100,25,70,66,22,80,51,44,48,44,12,16,167,105,135,120,120,120,167,112,135,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,132,0,67,1,
240,5,112,8,228,12,96,14,100,25,60,58,21,75,48,41,45,41,11,15,167,105,135,120,120,120,167,112,135,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,
132,0,67,1,240,5,112,8,228,12,96,14,100,25,0,41,18,63,40,35,37,34,9,12,167,105,135,120,120,120,
167,112,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,
23,8,210,0,5,0,1,0,132,0,16,1,240,5,52,8,228,12,96,14,100,25,45,42,15,62,40,34,37,34,
9,12,167,90,135,120,120,120,167,135,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,
0,191,197,24,223,182,176,250,125,182,3,0,132,0,16,1,240,5,52,8,228,12,96,14,100,25,60,69,20,80,
51,44,48,44,12,16,167,90,135,120,120,120,167,135,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,
0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,132,0,16,1,240,5,52,8,228,12,96,14,100,25,
70,62,19,76,49,42,45,41,11,15,167,90,135,120,120,120,167,135,135,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,132,0,24,1,24,6,72,8,228,12,
96,14,100,25,35,41,15,62,40,34,37,34,9,12,167,90,135,120,120,120,167,135,135,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,1,0,132,0,24,1,24,6,
72,8,228,12,96,14,100,25,0,36,14,58,37,32,35,32,8,11,167,90,135,120,120,120,167,135,135,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,64,250,23,8,235,0,5,0,
1,0,8,1,8,3,60,5,236,9,32,13,191,14,64,27,45,53,34,66,72,43,43,31,4,6,167,135,165,120,
120,120,167,135,165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,
176,250,125,182,3,0,8,1,8,3,60,5,236,9,32,13,191,14,64,27,80,103,48,92,100,60,60,44,6,8,
167,135,165,120,120,120,167,135,165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,
197,254,124,182,1,250,0,0,1,0,254,0,222,2,146,5,252,9,44,13,189,14,86,27,70,92,46,88,95,60,
58,43,7,8,167,130,168,120,120,120,167,135,165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,
49,229,0,182,8,0,0,0,1,250,0,0,1,0,156,0,99,1,152,8,140,10,152,13,166,14,32,28,40,43,
32,55,49,58,45,33,10,8,167,90,195,120,120,120,122,120,135,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,1,0,156,0,99,1,174,8,160,10,92,13,10,15,
32,28,0,28,28,44,45,41,38,30,8,8,167,90,135,120,120,120,122,120,120,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,64,250,23,8,250,0,5,0,1,0,122,0,240,1,
140,5,132,8,228,12,246,14,95,27,45,38,25,54,60,37,39,28,15,6,170,133,127,122,124,128,197,131,127,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,
122,0,240,1,140,5,132,8,228,12,246,14,95,27,75,74,36,76,84,52,55,38,21,8,170,133,127,122,124,128,
197,131,127,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,
0,0,1,0,125,0,218,1,214,5,191,8,236,12,247,14,76,27,60,72,31,76,82,53,57,38,21,8,170,129,
127,122,124,127,197,131,127,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,
0,0,1,250,0,0,1,0,152,0,11,1,112,8,212,10,52,13,0,15,160,26,70,40,4,64,57,46,58,28,
13,6,167,99,120,120,120,120,167,97,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,
0,0,188,40,60,182,64,250,23,8,1,0,152,0,11,1,112,8,212,10,52,13,0,15,160,26,0,34,3,59,
53,43,54,26,12,6,167,99,120,120,120,120,167,97,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,40,
60,182,40,54,0,191,77,60,59,182,64,250,23,8,40,0,7,0,1,0,24,1,232,2,140,5,196,9,112,13,
40,15,153,28,40,50,33,63,63,48,38,29,10,6,215,138,143,120,120,120,237,165,165,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,24,1,232,2,140,5,
196,9,112,13,40,15,153,28,35,89,44,84,84,64,51,39,14,8,215,138,143,120,120,120,237,165,165,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,245,0,
176,2,104,5,160,9,112,13,40,15,153,28,40,81,41,79,79,53,49,38,13,8,215,138,143,120,120,120,237,165,
165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,
1,0,195,0,56,2,122,5,68,9,112,13,30,15,83,27,50,73,33,76,65,46,53,38,13,7,201,130,147,121,
121,127,237,165,165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,
64,250,23,8,1,0,144,0,173,1,140,5,232,8,55,13,20,15,13,26,60,55,21,69,49,38,39,32,12,7,
188,123,151,122,122,135,237,165,151,44,45,70,130,59,0,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,
77,60,59,182,64,250,23,8,1,0,147,0,64,1,20,5,34,9,40,13,15,15,105,25,35,37,10,61,46,28,
25,18,12,7,181,109,137,123,123,139,187,120,137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,
0,0,0,0,146,23,0,0,0,250,0,0,1,0,147,0,64,1,20,5,34,9,40,13,15,15,105,25,0,29,
9,54,41,25,22,16,11,6,181,109,137,123,123,139,187,120,137,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,250,222,182,120,54,0,191,188,40,60,182,64,250,23,8,155,0,4,0,1,0,133,0,144,1,64,6,116,9,
196,12,151,14,39,25,50,40,23,56,50,37,41,32,12,10,177,127,132,124,123,138,187,126,137,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,133,0,144,1,
64,6,116,9,196,12,151,14,39,25,70,52,26,64,57,43,46,37,13,11,177,127,132,124,123,138,187,126,137,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,
133,0,144,1,64,6,116,9,196,12,151,14,39,25,35,52,26,64,57,43,46,37,13,11,177,127,132,124,123,138,
187,126,137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,
0,0,1,0,133,0,144,1,64,6,116,9,196,12,151,14,39,25,0,31,20,50,44,33,36,28,10,9,177,127,
132,124,123,138,187,126,137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,
60,182,64,250,23,8,95,0,4,0,1,0,135,0,151,1,220,5,96,9,188,12,136,14,153,24,45,43,21,59,
56,46,37,28,10,11,178,126,132,123,123,141,187,126,137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,
124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,135,0,151,1,220,5,96,9,188,12,136,14,153,24,
80,71,28,76,72,60,48,36,13,14,178,126,132,123,123,141,187,126,137,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,135,0,202,1,233,5,179,9,188,12,
136,14,153,24,50,76,33,81,72,60,48,36,13,14,178,126,132,123,123,141,187,126,137,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,135,0,202,1,233,5,
179,9,188,12,136,14,153,24,0,76,33,81,72,60,48,36,13,14,178,126,132,123,123,141,187,126,137,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,0,0,4,0,
1,0,168,0,232,1,152,3,136,9,244,11,141,14,32,27,45,55,28,58,65,39,32,18,13,5,165,135,150,120,
120,120,165,135,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,
176,250,125,182,3,0,168,0,232,1,152,3,136,9,244,11,141,14,32,27,90,109,42,80,92,59,48,27,20,8,
165,135,150,120,120,120,165,135,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,
197,254,124,182,1,250,0,0,1,0,171,0,160,1,211,2,101,9,239,12,42,15,89,27,60,57,28,60,52,27,
22,14,11,8,196,108,123,120,120,120,165,135,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,
49,229,0,182,8,0,0,0,1,250,0,0,1,0,172,0,160,1,188,2,96,9,12,13,60,15,96,27,0,36,
24,48,40,24,20,12,10,8,200,105,120,120,120,120,200,105,135,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,155,0,5,0,1,0,136,0,232,1,64,6,140,10,
232,13,64,16,95,27,45,44,24,58,58,43,33,27,16,6,170,152,153,122,124,128,197,152,137,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,136,0,232,1,
64,6,140,10,232,13,64,16,95,27,60,67,30,72,72,53,41,34,20,8,170,152,153,122,124,128,197,152,137,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,
136,0,232,1,64,6,140,10,232,13,64,16,95,27,40,60,28,68,68,50,39,32,19,7,170,152,153,122,124,128,
197,152,137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,
0,0,1,0,160,0,136,1,12,8,60,10,127,13,159,14,16,28,50,46,31,55,51,54,33,36,10,7,168,109,
141,120,120,120,200,109,141,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,
60,182,64,250,23,8,1,0,160,0,136,1,12,8,60,10,127,13,159,14,16,28,0,32,26,46,43,45,27,30,
8,6,168,109,141,120,120,120,200,109,141,44,45,70,130,59,0,0,0,0,40,0,0,0,0,40,60,182,40,54,
0,191,77,60,59,182,64,250,23,8,90,0,4,0,5,0,196,0,114,1,84,4,252,8,88,12,91,14,32,27,
35,13,36,20,38,12,16,16,6,0,125,60,135,120,120,120,80,75,120,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,5,0,196,0,114,1,84,4,252,8,88,12,
91,14,32,27,25,13,36,20,38,12,16,16,6,0,125,60,135,120,120,120,80,75,120,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,5,0,196,0,114,1,84,4,
252,8,88,12,91,14,32,27,30,5,22,11,22,8,11,11,4,0,125,60,135,120,120,120,80,75,120,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,196,0,
114,1,84,4,252,8,88,12,91,14,32,27,0,3,19,9,19,7,9,9,3,0,125,60,135,120,120,120,80,75,
120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,
90,0,4,0,5,0,236,0,124,1,12,7,236,9,172,13,160,15,0,27,35,17,40,41,25,16,13,16,8,0,
132,60,90,120,120,120,42,135,105,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,
197,24,223,182,176,250,125,182,5,0,236,0,124,1,12,7,236,9,172,13,160,15,0,27,25,14,36,37,22,14,
12,14,8,0,132,60,90,120,120,120,42,135,105,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,
24,53,0,191,197,254,124,182,1,250,0,0,1,0,236,0,124,1,12,7,236,9,172,13,160,15,0,27,30,5,
22,22,20,12,10,12,7,0,132,60,90,120,120,120,42,135,105,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,236,0,124,1,12,7,236,9,172,13,160,15,
0,27,0,3,16,16,15,9,8,9,5,0,132,60,90,120,120,120,42,135,105,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,100,0,4,0,5,0,204,0,120,1,
92,8,124,11,172,13,160,15,0,27,30,19,41,45,19,19,15,15,9,0,135,60,90,120,120,120,45,135,105,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,5,0,
204,0,120,1,192,8,28,12,172,13,160,15,0,27,25,16,39,39,18,18,15,14,9,0,135,60,90,120,120,120,
45,135,105,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,
0,0,5,0,204,0,120,1,192,8,28,12,172,13,160,15,0,27,45,4,21,21,15,15,12,12,7,0,135,60,
90,120,120,120,45,135,105,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,
0,0,1,250,0,0,37,0,204,0,120,1,192,8,28,12,172,13,160,15,0,27,0,4,21,21,15,15,12,12,
7,0,135,60,90,120,120,120,45,135,105,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,
0,0,188,40,60,182,64,250,23,8,95,0,4,0,5,0,240,0,13,2,248,9,124,11,76,14,23,17,224,23,
40,17,44,14,19,10,10,13,4,0,162,90,165,120,120,120,132,165,135,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,5,0,240,0,13,2,248,9,124,11,76,14,
23,17,224,23,25,17,44,14,19,10,10,13,4,0,162,90,165,120,120,120,132,165,135,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,232,0,13,2,236,9,
44,11,76,14,23,17,224,23,30,5,25,6,15,8,8,10,3,0,162,90,165,120,120,120,132,165,135,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,232,0,
13,2,236,9,44,11,76,14,23,17,224,23,0,4,22,5,13,7,7,9,3,0,162,90,165,120,120,120,132,165,
135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,
97,9,23,0,0,255,255,254,255,255,255,255,254,254,254,254,254,254,255,255,254,254,254,255,255,254,255,255,254,255,
0,255,255,254,255,0,0,255,255,255,0,255,0,0,255,0,0,0,0,0,0,0,0,255,254,255,0,0,0,0,
0,0,0,7,40,43,3,236,248,2,254,9,28,28,15,6,0,251,1,17,25,17,16,22,13,9,24,30,25,29,
91,77,249,254,0,245,246,42,53,24,241,196,216,250,239,246,4,245,195,162,180,212,233,249,235,204,175,172,165,194,
235,223,215,169,135,191,226,235,0,249,242,239,213,191,2,90,36,246,254,12,72,57,93,127,43,26,20,11,36,68,
78,30,14,239,229,46,32,240,14,37,231,164,187,7,26,223,167,175,221,208,181,182,227,241,173,188,230,216,197,211,
247,213,230,240,192,228,1,8,26,5,224,3,32,24,15,20,16,23,0,6,20,4,32,64,49,40,78,49,13,11,
29,50,28,255,241,20,36,254,207,251,69,29,220,197,244,18,234,202,238,44,6,161,164,1,39,17,202,184,9,25,
210,178,243,56,29,215,166,250,83,246,197,14,80,17,190,216,15,58,55,31,6,243,241,251,33,38,249,24,40,233,
183,219,29,50,31,245,252,24,11,222,198,250,61,38,251,241,5,18,254,247,62,62,44,4,207,214,245,33,62,32,
250,252,226,202,207,241,26,47,29,187,175,228,242,236,243,11,11,228,208,180,194,235,46,31,222,220,242,250,202,215,
2,47,23,216,229,253,236,244,247,242,26,33,229,193,246,15,3,5,5,17,253,236,220,238,36,23,251,202,209,11,
23,248,242,37,8,193,208,245,10,31,2,240,1,254,228,192,221,16,38,27,244,253,244,209,223,0,40,39,241,239,
2,10,243,227,12,44,40,19,237,230,243,253,8,0,49,63,19,249,208,238,22,21,4,254,35,13,246,0,248,251,
0,10,23,32,29,254,252,243,240,16,32,13,19,38,11,246,0,251,251,7,29,41,34,28,232,231,10,9,254,4,
47,48,12,226,245,27,2,230,232,35,44,241,227,247,14,248,205,235,23,21,3,3,252,235,199,213,3,25,16,5,
253,4,10,232,217,248,39,18,226,248,32,13,222,197,251,44,248,236,45,45,0,220,216,251,3,4,7,22,33,252,
216,243,255,255,255,245,4,243,245,1,4,225,212,241,241,253,3,2,229,233,254,227,234,244,238,236,6,7,251,237,
242,247,234,247,14,2,0,248,241,238,235,255,8,17,255,248,14,18,240,207,7,63,27,234,242,20,11,224,217,1,
53,20,236,244,12,26,240,242,254,21,4,221,239,29,14,222,209,7,18,242,229,230,242,232,226,254,19,9,240,222,
243,2,19,232,219,17,25,0,238,29,24,242,237,255,7,245,254,23,19,29,2,221,235,1,15,2,7,13,16,242,
221,229,245,5,3,231,248,26,8,206,210,59,23,203,217,12,16,204,226,12,14,241,247,247,251,246,203,236,10,28,
3,249,10,38,14,225,250,18,5,235,11,35,24,5,8,4,246,1,237,240,245,239,0,17,4,231,11,6,211,223,
252,19,249,242,247,8,0,225,237,248,254,252,10,10,2,10,237,243,22,21,2,4,1,228,7,21,246,237,25,31,
246,246,252,0,247,254,4,32,32,15,18,254,255,231,240,252,27,21,247,252,250,14,2,253,3,250,238,244,3,254,
0,9,31,6,233,243,238,238,222,245,24,16,3,8,17,239,217,234,234,211,221,15,48,24,254,251,251,2,9,236,
242,6,3,223,242,29,8,244,229,13,251,218,219,241,0,231,0,42,57,49,28,29,14,6,3,12,21,23,19,35,
38,12,22,41,18,238,233,1,237,222,246,255,5,1,249,234,250,247,219,210,234,5,0,244,243,11,23,4,253,4,
0,237,242,13,34,7,0,21,21,11,2,251,246,3,11,18,15,1,2,2,5,242,232,227,240,255,249,230,222,242,
251,235,228,5,13,246,224,230,243,244,235,237,243,252,6,254,4,250,239,238,218,213,242,247,234,248,3,247,221,231,
240,221,202,201,206,223,234,249,251,246,225,225,228,212,215,238,0,250,238,245,12,252,226,228,242,241,226,229,252,4,
1,250,0,4,10,2,252,0,0,253,231,245,21,15,246,242,0,2,241,27,52,7,235,0,16,216,212,232,221,218,
242,3,2,9,4,234,232,234,240,235,228,235,228,238,0,251,4,17,17,13,244,222,226,237,246,6,29,58,54,33,
11,249,0,236,224,252,18,29,24,27,45,23,237,236,237,226,211,215,229,239,248,8,28,16,10,5,252,206,179,219,
229,227,18,45,36,18,25,11,236,227,223,231,9,20,7,13,49,29,246,232,225,213,224,237,229,5,28,16,253,252,
19,11,252,246,219,226,0,254,250,28,57,42,10,250,248,229,238,3,10,50,49,32,14,241,229,232,221,216,229,12,
21,254,4,16,16,246,219,226,241,252,242,0,23,28,0,223,242,10,7,253,254,4,246,225,242,6,17,18,19,16,
1,7,10,251,0,20,30,32,35,33,1,10,23,14,26,11,243,242,239,240,239,11,18,8,19,26,19,243,231,228,
204,203,195,225,24,39,35,24,28,13,228,198,197,222,243,237,244,34,76,71,38,43,42,17,237,235,6,24,6,246,
23,56,42,4,4,20,246,225,225,226,0,4,247,248,248,237,219,241,248,227,211,230,251,226,245,22,31,36,19,254,
1,12,238,200,233,20,15,26,49,42,27,45,7,216,235,5,243,229,32,45,10,16,25,21,6,228,221,241,220,186,
212,7,2,247,13,48,27,220,191,183,191,189,193,6,68,55,10,0,2,229,194,194,223,252,13,24,45,50,41,31,
27,17,248,228,229,219,222,7,28,27,26,30,26,8,231,207,198,204,220,222,0,37,41,40,40,18,238,243,244,225,
221,230,247,239,236,12,35,27,10,4,250,235,239,247,242,243,14,16,6,250,235,242,249,227,202,232,3,240,240,4,
16,22,251,222,231,1,10,0,1,33,48,27,253,227,237,3,240,226,7,27,15,11,25,31,15,22,252,234,245,241,
247,238,218,228,4,6,222,247,11,249,232,228,0,1,227,224,249,5,6,240,222,216,224,230,225,248,23,30,43,43,
16,9,7,0,230,223,249,29,33,25,30,23,23,16,242,237,9,12,243,230,244,243,238,211,205,239,7,5,244,3,
9,254,226,219,241,241,235,236,250,4,9,249,222,5,33,27,10,251,3,6,255,233,223,228,220,231,12,25,22,30,
41,27,252,229,234,229,220,228,241,250,246,7,29,32,12,232,224,213,212,230,229,240,239,8,21,19,28,26,13,236,
218,241,250,4,12,5,29,46,25,254,235,236,244,235,228,217,233,16,21,242,243,13,22,0,254,0,249,254,247,243,
252,255,7,23,46,37,13,16,247,228,222,237,10,27,23,24,45,51,26,241,236,227,211,229,0,3,3,14,19,13,
21,31,0,206,202,219,242,248,220,245,39,28,3,252,253,239,210,199,215,233,26,55,48,42,38,30,9,227,212,214,
221,247,8,11,28,48,45,25,253,250,245,218,197,202,236,15,15,30,33,9,7,250,217,206,214,226,255,18,22,47,
74,46,8,244,236,234,232,250,9,39,90,87,52,25,12,9,231,190,199,224,244,22,30,40,45,21,239,218,199,190,
226,22,44,21,47,60,19,223,204,233,235,220,220,3,42,50,30,15,3,239,232,217,214,239,14,29,32,39,42,47,
25,245,226,234,241,244,7,13,14,9,21,6,234,221,213,231,245,252,251,243,10,11,251,242,253,239,211,206,230,244,
241,0,16,27,29,13,235,222,208,206,244,10,4,1,29,43,24,253,238,239,235,237,235,243,13,28,21,6,15,20,
6,244,225,222,245,6,2,8,25,39,33,2,227,225,246,212,186,230,21,28,22,31,33,255,229,215,199,223,251,252,
18,61,59,38,17,7,250,231,222,218,232,249,10,38,57,35,5,249,239,227,213,221,5,14,3,19,36,43,36,7,
235,214,218,222,211,212,253,29,25,16,1,232,212,203,213,233,250,7,29,47,18,4,3,245,224,208,241,17,23,0,
248,14,27,23,242,242,255,249,250,252,253,2,7,0,247,239,223,205,231,254,245,254,250,7,249,220,237,18,254,222,
232,2,16,247,230,246,9,14,249,233,246,8,15,9,253,255,18,15,252,247,0,248,233,241,240,251,27,46,43,16,
249,236,221,218,220,238,8,17,21,251,238,1,252,225,207,221,252,9,9,10,18,26,7,227,221,235,233,238,11,27,
40,42,30,18,241,217,218,217,230,2,10,33,56,47,255,226,213,204,210,212,231,17,38,26,7,250,0,245,210,199,
216,234,253,12,22,21,7,245,231,211,218,249,7,11,24,24,17,10,240,229,226,235,4,14,34,40,23,17,1,232,
228,244,252,13,31,29,28,5,247,244,211,218,250,3,2,18,12,249,242,245,242,219,226,255,14,17,14,6,2,251,
244,238,236,253,8,18,37,38,13,226,231,254,249,255,19,35,37,26,9,0,236,212,226,249,251,252,31,64,40,245,
240,241,214,200,227,21,40,18,22,32,5,246,238,232,242,243,252,11,16,12,12,20,3,236,240,3,16,12,15,18,
11,250,247,248,238,240,250,254,11,16,33,35,9,236,225,239,10,0,233,5,27,10,245,239,254,8,3,2,14,1,
8,15,231,217,240,251,11,22,2,11,22,19,250,232,1,17,0,247,249,254,1,248,232,240,7,30,21,253,251,235,
226,245,253,243,253,28,36,20,5,0,7,1,234,220,228,245,7,12,4,245,247,254,243,224,230,238,246,10,7,249,
237,251,10,6,250,255,17,21,4,240,250,21,16,253,241,243,11,15,255,254,0,243,231,249,13,7,4,7,1,250,
230,223,251,3,254,12,34,36,15,252,243,245,239,244,255,15,20,26,31,7,243,222,220,236,243,0,21,20,8,7,
1,241,225,239,4,7,250,252,19,13,248,240,240,241,247,252,252,252,11,20,8,250,254,5,2,247,240,5,35,19,
0,9,17,18,12,3,0,253,239,239,3,3,243,252,16,8,237,233,237,232,229,227,239,20,20,253,248,242,228,240,
249,246,4,28,33,11,250,240,230,239,244,250,17,33,25,14,2,239,230,238,245,250,10,42,51,18,244,229,238,230,
216,231,6,32,28,2,235,228,218,192,183,222,15,37,26,5,244,237,226,225,248,8,21,42,56,41,10,242,230,231,
242,249,17,50,52,18,248,244,233,225,228,238,6,43,45,22,6,248,231,219,213,225,0,31,39,16,245,231,217,210,
225,253,25,45,31,4,236,228,239,239,240,249,19,37,22,4,245,241,249,245,243,5,21,16,2,252,250,255,0,241,
227,230,251,251,251,11,9,252,231,219,228,240,252,7,8,6,8,4,253,242,234,241,15,29,22,12,7,0,255,247,
234,248,12,22,14,0,0,0,90,0,2,0,37,0,184,0,24,2,112,5,72,8,0,10,188,12,136,19,90,2,
9,16,4,6,8,3,3,3,157,125,137,137,150,175,157,125,137,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,1,0,184,0,24,2,112,5,248,7,236,9,188,12,
131,24,0,0,7,2,3,8,6,2,1,1,157,125,137,137,150,175,157,125,137,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,0,1,3,5,7,9,11,13,15,17,
19,21,23,25,27,29,31,33,35,37,39,41,43,45,47,49,51,53,55,57,59,61,63,65,67,69,71,73,75,77,
79,81,83,85,87,89,91,93,95,97,99,101,103,105,107,109,111,113,115,117,119,121,123,125,127,129,131,133,135,137,
139,141,143,145,147,149,151,153,155,157,159,161,163,165,167,169,171,173,175,177,179,181,183,185,187,189,191,193,195,197,
199,201,203,205,207,209,211,213,215,217,219,221,223,225,227,229,231,233,235,237,239,241,243,245,247,249,251,253,254,254,
253,252,251,250,249,247,246,245,244,243,241,240,239,237,236,234,233,231,230,228,226,225,223,221,220,218,216,214,212,210,
209,207,205,203,201,199,197,195,193,191,189,186,184,182,180,178,176,174,171,169,167,165,162,160,158,156,153,151,149,147,
144,142,140,137,135,133,131,128,126,124,121,119,117,114,112,110,108,105,103,101,99,96,94,92,90,88,85,83,81,79,
77,75,73,70,68,66,64,62,59,57,55,53,51,49,46,44,42,40,38,35,33,31,29,27,25,23,20,18,16,14,
12,10,8,6,4,2,0,2,4,6,8,10,11,13,15,16,18,19,21,22,23,25,26,27,28,29,30,31,32,33,
34,35,36,36,37,38,39,40,40,41,42,43,43,44,45,46,47,48,48,49,50,51,52,53,54,55,56,58,59,60,
62,63,64,66,68,69,71,73,75,77,79,81,83,85,88,90,93,95,98,101,104,107,110,114,117,121,124,128,132,136,
140,145,149,154,159,163,166,170,174,177,181,184,188,192,195,199,202,206,209,213,216,219,223,226,229,232,235,238,241,243,
245,247,249,250,252,253,254,255,255,255,255,255,255,255,254,251,248,245,242,238,234,230,227,222,218,214,210,205,201,196,
191,187,182,177,172,167,162,157,152,147,142,137,132,127,122,117,112,107,102,97,92,87,82,78,73,69,64,60,56,51,
47,43,40,36,32,29,26,23,20,17,14,12,9,7,5,3,2,1,0,0,0,0,0,0,0,0,0,0,1,3,
5,7,10,12,15,19,23,27,31,36,41,46,52,58,65,72,79,86,94,103,112,117,122,127,132,137,142,147,152,157,
162,167,172,177,182,187,191,196,201,205,210,214,218,222,227,230,234,238,242,245,248,251,127,123,118,114,110,105,101,97,
94,90,86,82,79,75,72,68,65,62,59,56,53,50,47,44,42,39,37,34,32,30,28,26,24,22,20,19,17,16,
14,13,12,11,10,9,8,7,6,6,5,5,5,4,4,4,4,5,5,5,6,6,7,8,9,10,11,12,13,15,
16,18,20,21,23,25,27,30,32,34,37,40,42,45,48,51,55,58,61,65,68,72,76,80,84,88,93,97,101,105,
109,113,117,122,126,130,134,139,143,148,152,157,162,166,171,176,181,186,191,196,201,206,211,217,222,227,233,238,243,249,
152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,
152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,151,143,136,128,121,114,108,101,95,90,85,81,77,73,70,
68,66,65,65,66,67,69,72,76,81,86,93,101,109,119,130,142,152,152,152,152,151,151,151,151,150,150,150,150,149,
149,149,149,148,148,148,148,147,147,147,147,146,146,146,146,145,145,145,145,144,144,144,144,143,143,143,143,142,142,142,
142,141,141,141,141,140,140,140,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,
127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,
124,120,116,112,108,104,101,97,94,91,88,86,84,82,80,78,77,76,75,75,75,76,76,78,79,81,84,86,90,94,
98,103,108,114,120,127,127,127,127,127,127,127,127,127,127,127,127,87,0,0,0,0,0,0,0,0,0,0,0,0,
0,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,160,0,4,0,1,0,130,0,48,1,24,6,36,9,
12,13,0,15,151,25,45,37,19,55,43,34,40,30,10,11,167,96,127,120,120,120,197,120,127,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,50,124,182,2,0,0,0,2,0,0,0,176,250,125,0,3,0,130,0,48,1,
24,6,36,9,12,13,0,15,151,25,70,63,25,72,56,45,52,40,13,15,167,96,127,120,120,120,197,120,127,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,
130,0,48,1,24,6,36,9,12,13,0,15,151,25,45,51,22,64,50,40,46,36,11,13,167,96,127,120,120,120,
197,120,127,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,2,0,0,0,1,250,
0,0,1,0,130,0,48,1,24,6,36,9,12,13,0,15,151,25,0,63,25,72,56,45,52,40,13,15,167,96,
127,120,120,120,197,120,127,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,
60,182,64,250,23,8,185,0,4,0,1,0,112,0,244,1,132,5,36,9,188,12,116,14,96,27,45,41,27,54,
66,33,39,30,15,7,167,150,135,120,120,120,197,120,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,
124,182,2,0,0,0,2,0,0,0,176,250,125,0,3,0,116,0,244,1,132,5,16,9,188,12,116,14,96,27,
80,67,34,66,88,44,55,40,21,7,167,150,135,120,120,120,197,120,120,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,116,0,244,1,132,5,16,9,188,12,
116,14,96,27,60,54,30,59,79,39,49,36,19,7,167,150,135,120,120,120,197,120,120,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,250,222,182,49,229,0,182,2,0,0,0,1,250,0,0,1,0,116,0,244,1,132,5,
36,9,188,12,116,14,96,27,0,32,24,47,58,25,36,26,13,7,167,150,135,120,120,120,197,120,120,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,250,0,5,0,
1,0,24,1,224,2,220,5,196,9,112,13,40,15,153,28,45,46,31,60,60,46,36,28,10,6,215,138,143,120,
120,120,237,165,165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,2,0,0,0,2,0,0,0,
176,250,125,0,3,0,24,1,224,2,220,5,196,9,112,13,40,15,153,28,80,89,44,84,84,64,51,39,14,8,
215,138,143,120,120,120,237,165,165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,
197,254,124,182,1,250,0,0,1,0,218,0,8,2,168,7,50,10,102,13,25,15,93,28,80,58,35,62,62,51,
43,33,11,8,191,114,139,120,120,120,237,165,165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,
49,229,0,182,2,0,0,0,1,250,0,0,1,0,156,0,56,1,36,9,160,10,92,13,10,15,32,28,45,34,
30,46,47,43,39,31,9,8,167,90,135,120,120,120,122,120,120,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,1,0,156,0,56,1,36,9,160,10,92,13,10,15,
32,28,0,31,28,44,45,41,38,30,8,8,167,90,135,120,120,120,122,120,120,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,0,0,0,1,0,0,0,220,53,171,191,251,250,207,182,165,0,5,0,1,0,179,0,40,2,
172,3,96,10,15,12,141,14,32,27,45,47,26,53,60,38,37,17,13,5,166,135,150,120,120,120,167,135,135,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,2,0,0,0,2,0,0,0,176,250,125,0,3,0,
179,0,40,2,172,3,96,10,15,12,141,14,32,27,75,97,37,76,86,54,53,25,18,7,166,135,150,120,120,120,
167,135,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,
0,0,1,0,179,0,27,2,0,4,91,10,35,12,144,14,18,27,50,68,33,68,75,49,48,24,16,7,165,134,
149,120,120,120,167,135,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,2,0,
0,0,1,250,0,0,5,0,180,0,158,1,244,6,38,10,218,12,175,14,141,26,45,32,22,49,42,40,36,27,
10,4,161,128,142,120,120,120,167,135,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,
0,0,188,40,60,182,64,250,23,8,1,0,181,0,144,1,13,7,32,10,239,12,179,14,126,26,0,24,20,45,
37,37,34,26,9,4,160,127,142,120,120,120,130,87,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,
0,0,1,0,0,0,220,53,171,191,251,250,207,182,250,0,5,0,1,0,135,0,88,1,220,5,132,8,128,12,
128,14,153,24,45,38,11,58,50,44,41,29,9,10,178,122,132,123,123,141,187,130,137,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,50,124,182,2,0,0,0,2,0,0,0,176,250,125,0,3,0,135,0,88,1,220,5,
132,8,128,12,128,14,153,24,80,77,16,84,72,64,58,41,13,14,178,122,132,123,123,141,187,130,137,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,141,0,
86,1,132,6,29,9,192,12,170,14,158,25,80,50,14,68,54,50,47,35,11,11,175,118,139,122,122,134,187,130,
137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,2,0,0,0,1,250,0,0,
1,0,158,0,80,1,12,8,130,10,86,13,13,15,255,27,45,31,15,53,30,37,37,31,9,8,168,109,155,120,
120,120,177,109,152,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,
64,250,23,8,1,0,156,0,72,1,112,8,160,10,92,13,10,15,32,28,0,31,18,55,33,36,37,29,8,7,
167,105,155,120,120,120,122,105,140,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,1,0,0,0,
220,53,171,191,251,250,207,182,0,0,6,0,1,0,224,0,8,3,216,4,236,9,8,12,116,14,224,27,46,69,
26,64,75,42,45,28,10,5,225,120,187,120,120,120,255,120,187,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,50,124,182,2,0,0,0,2,0,0,0,176,250,125,0,3,0,224,0,8,3,216,4,236,9,8,12,116,14,
224,27,60,111,34,82,95,54,57,36,13,7,225,120,187,120,120,120,255,120,187,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,224,0,208,2,16,4,96,9,
8,12,116,14,224,27,70,100,32,77,64,51,54,34,12,6,225,120,187,120,120,120,255,120,187,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,2,0,0,0,1,250,0,0,1,0,240,0,24,2,
92,3,56,9,48,12,79,14,160,27,70,93,38,68,40,36,48,33,15,8,215,112,172,120,120,120,255,120,187,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,1,0,
0,1,200,1,52,3,16,9,8,12,41,14,96,27,30,84,36,76,59,21,35,23,15,8,205,105,157,120,120,120,
145,105,157,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,1,0,0,0,220,53,171,191,251,250,
207,182,1,0,172,0,152,1,188,2,192,8,88,12,60,15,96,27,0,37,24,48,40,24,20,12,10,8,200,90,
120,120,120,120,200,120,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,146,23,
0,0,53,250,0,0,217,0,6,0,1,0,104,0,144,1,132,8,160,10,72,13,60,15,32,27,42,45,17,61,
61,61,57,31,12,7,167,120,157,120,120,120,167,120,157,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,
124,182,2,0,0,0,2,0,0,0,176,250,125,0,3,0,104,0,144,1,132,8,160,10,72,13,60,15,32,27,
40,63,20,72,72,72,67,37,15,8,167,120,157,120,120,120,167,120,157,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,117,0,192,1,9,8,113,10,47,13,
24,15,42,27,50,64,24,74,74,68,64,38,16,8,167,122,153,120,120,120,167,120,157,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,250,222,182,49,229,0,182,2,0,0,0,1,250,0,0,1,0,169,0,69,2,26,6,
180,9,201,12,135,14,82,27,50,64,37,74,74,50,48,38,20,7,167,133,137,120,120,120,167,120,157,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,1,0,176,0,
128,2,220,5,156,9,188,12,116,14,88,27,35,58,37,71,71,46,44,37,19,7,167,135,135,120,120,120,197,135,
120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,1,0,0,0,220,53,171,191,251,250,207,182,
1,0,176,0,128,2,220,5,156,9,188,12,116,14,88,27,0,39,30,58,58,38,36,30,16,6,167,135,135,120,
120,120,197,135,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,146,23,0,0,
53,250,0,0,247,0,5,0,1,0,216,0,5,3,140,5,40,10,20,13,175,14,117,27,45,36,32,42,54,47,
39,32,13,3,196,162,200,120,120,120,249,174,255,44,45,70,130,59,170,0,0,0,40,0,0,0,0,50,124,182,
2,0,0,0,2,0,0,0,176,250,125,0,3,0,216,0,5,3,140,5,40,10,20,13,175,14,117,27,60,52,
38,50,64,55,46,38,16,4,196,162,200,120,120,120,249,174,255,44,45,70,130,59,170,0,0,0,40,0,0,0,
0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,216,0,223,2,50,5,38,10,245,12,156,14,
132,27,80,40,35,43,54,48,41,33,13,4,195,154,192,120,120,120,249,174,255,44,45,70,130,59,170,0,0,0,
40,0,0,0,0,250,222,182,49,229,0,182,2,0,0,0,1,250,0,0,1,0,208,0,136,1,8,2,20,10,
216,11,234,13,15,28,62,26,39,30,16,28,28,19,6,5,186,83,122,120,120,120,105,135,135,44,45,70,130,60,
155,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,1,0,208,0,136,1,
8,2,20,10,216,11,234,13,15,28,0,16,32,22,14,24,24,17,5,4,186,83,122,120,120,120,105,135,135,44,
45,70,130,60,155,0,0,0,40,0,0,0,0,0,0,0,1,0,0,0,220,53,171,191,251,250,207,182,255,0,
5,0,1,0,168,0,16,2,112,3,88,10,104,11,141,14,32,27,45,52,20,51,62,38,34,17,12,5,167,135,
150,120,120,120,167,135,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,2,0,0,0,2,0,
0,0,176,250,125,0,3,0,55,1,158,2,183,6,252,9,163,13,121,15,154,28,70,68,44,66,82,63,44,31,
11,6,255,140,173,120,120,120,150,180,150,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,
0,191,197,254,124,182,1,250,0,0,1,0,55,1,158,2,183,6,252,9,163,13,121,15,154,28,80,68,44,66,
82,63,44,31,11,6,255,140,173,120,120,120,150,180,150,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,
222,182,49,229,0,182,2,0,0,0,1,250,0,0,1,0,61,1,178,2,159,6,56,10,143,13,44,15,103,28,
60,56,48,54,80,51,42,28,11,6,226,136,157,120,120,120,150,180,150,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,1,0,61,1,178,2,159,6,56,10,143,13,
44,15,103,28,0,38,39,44,65,41,34,23,9,5,226,136,157,120,120,120,150,180,150,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,0,0,0,1,0,0,0,220,53,171,191,251,250,207,182,250,0,5,0,1,0,152,0,
24,1,232,8,4,11,52,13,0,15,160,26,45,27,6,51,45,45,46,22,10,4,167,105,120,120,120,120,167,90,
120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,2,0,0,0,2,0,0,0,176,250,125,0,
3,0,152,0,24,1,232,8,4,11,52,13,0,15,160,26,80,65,9,78,69,70,71,34,16,7,167,105,120,120,
120,120,167,90,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,
1,250,0,0,1,0,200,0,200,1,188,7,236,9,32,13,136,14,128,28,65,55,30,64,64,64,54,40,12,6,
185,107,127,120,120,120,185,107,127,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,
2,0,0,0,1,250,0,0,1,0,200,0,192,1,188,7,236,9,32,13,136,14,128,28,60,41,26,55,55,55,
46,35,11,5,185,107,127,120,120,120,185,107,127,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,
0,0,0,0,188,40,60,182,64,250,23,8,1,0,200,0,184,1,188,7,236,9,32,13,136,14,128,28,0,36,
24,51,51,51,43,33,10,5,185,107,127,120,120,120,185,107,127,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,0,0,0,1,0,0,0,220,53,171,191,251,250,207,182,175,0,4,0,1,0,148,0,0,1,228,2,96,9,
12,13,60,15,144,26,45,30,3,59,39,16,26,29,9,8,177,105,100,120,120,120,177,105,115,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,50,124,182,2,0,0,0,2,0,0,0,176,250,125,0,3,0,148,0,0,1,
228,2,96,9,12,13,60,15,144,26,70,44,4,72,48,20,32,36,12,10,177,105,100,120,120,120,177,105,115,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,
148,0,0,1,228,2,96,9,12,13,60,15,144,26,60,39,3,68,45,19,30,34,11,9,177,105,100,120,120,120,
177,105,115,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,2,0,0,0,1,250,
0,0,1,0,148,0,0,1,228,2,96,9,12,13,60,15,144,26,0,26,3,56,37,15,24,28,9,7,177,105,
100,120,120,120,177,105,115,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,
60,182,64,250,23,8,199,1,107,0,228,227,236,249,249,248,3,11,2,254,6,17,19,15,253,221,196,203,14,49,
10,9,24,68,126,69,24,33,24,255,225,210,227,248,226,203,208,217,213,219,247,11,11,3,254,0,253,244,245,6,
30,37,31,27,20,15,18,17,11,14,15,6,254,249,239,232,244,4,8,15,29,29,17,19,15,234,201,204,218,222,
226,234,240,250,9,13,12,30,55,56,44,36,23,5,0,252,231,219,233,251,251,249,0,2,254,1,7,0,241,241,
4,18,14,3,245,226,220,232,244,0,27,58,58,37,29,29,19,12,14,7,1,14,19,252,230,229,229,222,229,243,
245,240,246,254,246,232,233,240,246,2,25,40,34,24,24,21,11,6,8,6,4,11,11,252,242,251,2,4,12,23,
25,23,21,7,241,230,233,233,229,230,235,238,243,251,255,0,11,25,30,29,29,27,20,10,0,250,251,252,251,253,
253,250,251,1,7,8,0,249,250,1,1,255,0,4,1,0,3,3,254,2,17,15,0,0,10,4,251,255,2,0,
2,10,10,8,10,11,9,8,8,8,5,0,251,245,246,254,252,243,248,2,0,253,5,8,0,255,10,14,4,1,
8,3,249,252,7,4,252,0,9,11,6,4,5,3,1,7,13,11,7,7,9,3,253,253,254,248,244,250,0,0,
255,0,1,4,4,5,9,10,9,11,10,7,3,255,251,252,254,254,1,2,255,0,3,4,2,2,4,5,4,4,
6,5,0,255,1,0,0,1,2,2,2,0,1,4,6,10,12,8,3,4,8,9,4,1,3,1,252,251,253,252,
252,0,0,255,255,3,6,7,7,7,7,7,5,3,3,0,251,0,6,2,254,2,4,0,0,4,2,3,8,5,
0,0,1,2,1,0,0,2,4,7,7,4,4,6,6,5,7,7,5,2,255,255,0,0,255,0,255,0,5,4,
0,0,2,2,2,0,1,4,6,3,2,2,4,4,4,5,7,8,9,10,5,255,0,4,2,1,1,0,0,1,
1,0,0,2,3,4,3,1,1,3,5,3,3,4,3,0,110,0,4,0,5,0,76,0,80,1,200,5,40,10,
152,13,160,15,32,29,40,19,11,48,18,14,36,21,9,0,150,123,97,120,120,120,90,116,97,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,50,124,182,2,0,0,0,2,0,0,0,176,250,125,0,1,0,76,0,80,1,
200,5,40,10,152,13,160,15,32,29,35,27,13,57,22,17,42,25,11,0,150,123,97,120,120,120,90,116,97,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,17,0,
76,0,80,1,200,5,40,10,152,13,160,15,32,29,35,27,13,57,22,17,42,25,11,0,150,123,97,120,120,120,
90,116,97,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,2,0,0,0,1,250,
0,0,1,0,76,0,80,1,200,5,40,10,152,13,160,15,32,29,0,27,13,57,22,17,42,25,11,0,150,123,
97,120,120,120,90,116,97,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,
60,182,64,250,23,8,236,5,35,0,255,2,6,7,2,254,3,10,4,248,254,10,1,243,253,8,255,251,5,5,
252,247,246,254,7,0,248,1,10,5,255,252,1,10,4,249,254,5,1,0,5,9,7,252,245,0,10,1,245,246,
3,10,250,239,6,20,254,242,3,7,251,251,5,8,1,252,0,2,253,254,8,10,3,251,246,2,12,250,238,3,
12,250,251,10,3,250,5,6,247,252,6,244,243,41,55,238,208,12,30,226,204,1,49,35,236,215,3,25,238,217,
1,32,17,0,2,6,251,247,4,2,242,6,34,9,242,3,7,250,0,9,252,241,244,253,253,236,241,20,16,233,
239,13,5,251,6,16,20,12,251,6,22,248,231,7,10,238,245,8,252,228,225,4,39,10,227,5,47,23,255,253,
243,245,255,247,248,4,255,1,10,245,235,4,254,234,255,14,3,17,30,1,242,5,9,245,237,3,17,253,248,14,
251,222,8,28,228,232,39,13,222,4,22,233,243,27,6,238,0,11,4,5,252,242,5,18,243,216,255,43,7,214,
253,33,222,189,40,106,17,203,2,47,255,210,251,51,16,200,227,43,13,199,218,254,237,243,25,11,232,250,42,49,
4,235,25,60,0,204,250,29,248,238,13,249,200,229,42,22,195,214,61,46,199,222,61,34,220,2,53,6,213,243,
35,19,220,220,20,30,242,234,12,24,0,229,238,19,19,241,251,18,247,234,20,22,228,230,20,16,227,219,0,24,
13,250,252,20,22,236,218,16,45,248,226,20,31,248,246,11,0,245,5,14,253,238,253,10,249,237,1,2,237,254,
26,4,233,0,24,5,246,255,247,241,15,27,242,240,39,35,220,212,14,28,241,224,10,44,6,214,246,33,1,226,
5,31,253,224,251,34,19,225,229,27,25,231,232,13,19,4,254,4,16,253,220,246,30,255,217,255,43,20,224,216,
15,47,244,200,6,59,9,212,236,36,40,231,202,19,66,2,210,245,26,22,243,216,255,52,17,209,220,8,19,2,
242,251,16,1,237,8,28,252,231,2,35,25,231,216,25,56,235,190,255,40,0,232,253,2,248,254,14,12,244,229,
0,41,29,229,223,26,46,250,217,240,9,18,11,234,221,11,38,247,223,10,28,248,238,14,15,234,234,25,43,254,
222,255,36,15,219,208,8,59,17,205,221,19,8,231,245,12,16,19,8,246,254,4,243,255,30,8,227,253,33,13,
240,240,249,4,16,6,237,232,3,24,0,222,237,20,26,255,235,251,36,41,251,230,0,4,250,9,14,246,245,13,
9,238,224,235,3,22,19,255,247,4,16,3,242,246,0,5,11,11,1,3,16,11,244,230,241,2,3,246,247,5,
8,3,7,12,6,254,250,2,5,242,236,14,31,250,228,8,36,2,220,230,8,14,254,255,12,11,3,4,3,250,
244,245,1,12,2,248,0,0,247,253,2,251,0,10,2,253,255,255,10,12,244,246,16,2,236,254,11,2,0,249,
0,21,2,222,248,24,249,231,9,20,0,0,9,9,8,5,252,248,244,241,251,9,1,244,255,15,10,250,243,4,
24,7,237,250,3,239,251,30,9,236,2,12,242,242,7,3,246,255,14,3,241,0,15,249,250,29,11,228,250,16,
251,246,254,249,7,21,251,232,249,7,8,3,255,10,17,255,249,253,235,229,3,18,3,1,7,4,10,18,1,247,
5,8,253,1,9,10,12,251,224,238,2,242,255,32,3,232,14,22,236,236,4,255,252,2,254,248,245,248,9,17,
6,0,253,255,8,252,231,255,24,6,245,0,6,255,249,2,20,16,251,247,0,255,1,9,12,13,8,0,252,247,
250,0,250,244,1,5,255,0,255,0,13,0,239,6,24,255,238,253,9,2,233,229,3,4,231,249,31,19,249,255,
12,12,253,239,3,31,12,241,1,21,0,235,252,3,239,248,21,5,242,8,10,245,249,247,233,254,22,19,6,239,
220,240,255,241,253,24,36,37,11,238,11,42,1,222,244,15,21,4,240,253,12,251,244,255,248,248,16,22,253,230,
223,230,244,2,8,0,0,21,22,237,213,238,13,21,10,5,16,18,1,241,236,245,4,1,245,0,14,10,4,3,
0,0,0,0,8,9,255,0,8,4,254,253,7,21,10,248,253,1,255,252,236,232,4,12,251,5,16,251,247,0,
244,246,8,6,251,249,245,248,9,15,3,254,7,8,248,244,252,253,4,10,5,14,16,244,246,21,1,239,15,12,
245,20,23,233,232,1,5,2,243,246,27,17,235,253,0,232,15,36,243,250,22,237,232,8,228,219,30,32,245,3,
8,224,212,234,250,5,17,39,62,50,21,11,4,249,254,7,8,17,29,9,233,232,243,237,247,11,254,247,12,246,
207,224,239,233,9,26,249,254,27,10,246,244,225,230,5,1,242,0,27,37,20,246,245,13,19,17,16,255,242,2,
15,2,245,255,15,12,3,5,5,4,9,247,229,251,7,245,249,8,3,9,18,0,242,246,249,248,245,245,253,252,
244,252,1,246,240,248,1,9,2,254,10,7,250,4,14,7,5,1,0,15,8,252,12,9,243,3,15,249,248,6,
10,15,2,241,248,237,229,10,8,235,17,27,230,2,42,232,217,25,2,217,255,9,232,239,10,14,0,251,15,9,
226,246,30,253,235,18,2,218,230,231,230,19,44,40,55,49,26,31,13,236,255,22,3,0,4,245,251,7,243,221,
228,241,251,249,237,239,254,244,226,235,245,240,255,23,9,251,11,6,241,2,15,246,247,21,19,253,244,245,2,16,
17,19,17,0,0,12,3,2,16,11,6,23,28,11,250,244,0,5,250,245,246,246,4,9,242,234,248,243,236,245,
245,243,253,255,253,255,248,248,0,254,254,10,13,1,254,252,249,0,2,1,8,17,18,13,10,6,0,254,7,7,
1,11,16,0,0,19,11,250,2,6,240,234,248,239,228,246,251,230,242,10,253,250,12,3,0,13,250,246,21,249,
221,18,17,230,22,31,214,251,43,229,243,51,229,210,50,3,203,34,249,130,231,69,246,14,105,44,13,82,46,232,
0,20,14,7,221,233,30,230,184,0,246,185,7,44,200,213,43,238,179,236,247,229,17,24,253,13,9,248,17,8,
239,24,21,205,232,44,14,253,34,19,254,30,42,17,255,241,250,8,246,246,19,3,242,27,39,0,14,49,21,246,
249,236,220,237,245,228,225,240,247,241,230,237,0,253,239,254,254,227,248,23,249,240,31,35,7,21,24,253,249,254,
3,18,6,253,25,18,244,11,24,249,4,33,11,252,8,6,0,245,233,250,254,231,245,13,0,253,253,225,222,248,
254,251,250,250,6,6,252,8,12,0,16,15,243,3,16,234,237,7,247,0,19,243,248,25,1,254,21,245,231,238,
182,195,32,25,24,116,94,26,93,87,228,254,50,229,192,231,231,228,223,192,207,232,227,21,63,252,233,2,151,0,
3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,3,
3,3,3,3,3,3,3,2,2,2,2,3,3,4,3,3,3,2,1,2,2,3,3,3,3,3,2,2,2,2,
2,2,3,3,3,3,3,2,2,1,2,2,2,3,3,3,3,2,2,1,2,2,2,2,3,3,3,2,2,1,
1,1,1,2,3,3,3,2,2,1,1,1,2,2,2,2,2,3,2,1,1,1,1,1,2,3,3,3,3,1,
0,0,1,1,3,4,4,4,4,3,1,1,0,0,2,3,4,5,5,4,2,0,0,0,1,3,5,5,5,4,
3,2,1,1,3,4,5,7,8,7,10,14,11,4,2,6,12,19,25,23,12,0,250,252,3,11,15,14,11,7,
4,0,0,4,9,15,15,12,13,19,23,19,12,7,7,11,18,26,34,35,27,13,0,251,0,4,11,23,24,11,
3,7,8,5,5,5,5,14,23,23,16,9,5,0,251,250,4,14,14,18,24,16,5,2,254,249,1,16,19,21,
24,20,12,7,3,2,7,19,33,34,23,20,20,12,7,9,7,4,3,0,255,11,23,24,15,0,250,0,4,0,
0,3,8,11,12,8,5,255,245,244,0,5,5,7,8,11,17,17,6,247,239,248,10,19,17,21,22,13,4,3,
3,2,0,253,251,0,3,3,8,20,23,9,252,255,9,11,9,14,17,15,13,11,2,251,248,247,252,9,18,14,
10,8,4,255,250,249,0,8,5,1,8,12,10,9,6,253,248,252,1,6,11,16,15,5,254,0,5,9,9,5,
0,4,13,10,3,0,254,255,2,4,4,7,8,4,0,255,255,0,253,250,251,255,2,7,7,0,249,246,247,252,
0,253,250,251,0,0,253,248,248,254,1,1,255,252,251,252,252,251,252,253,254,0,0,0,0,2,3,1,255,255,
2,4,4,4,4,5,5,4,2,0,3,7,9,9,8,6,6,7,9,10,8,6,6,9,14,15,13,11,9,10,
12,14,15,14,13,10,9,11,14,13,8,6,7,10,11,10,7,3,0,254,253,252,251,250,248,244,240,239,240,240,
239,236,230,227,224,221,217,213,211,210,210,209,206,201,199,202,209,213,214,214,216,218,221,225,229,232,235,239,243,248,
254,1,4,6,8,11,14,16,19,22,24,26,27,27,26,24,23,24,26,26,25,21,16,12,9,7,5,5,4,3,
3,4,5,5,1,255,255,1,4,7,9,10,8,8,10,12,15,19,24,29,34,36,35,31,28,29,34,39,41,43,
44,43,40,38,35,31,29,27,25,23,18,8,254,246,241,238,239,243,243,238,229,217,202,185,171,164,163,165,167,167,
160,146,136,142,162,181,194,203,204,197,193,199,210,222,235,248,0,13,26,32,30,29,35,40,44,49,54,55,53,50,
46,40,32,26,20,17,20,21,14,1,246,235,224,215,211,209,205,200,197,194,194,196,195,192,192,195,197,198,204,214,
226,238,249,0,5,12,17,23,31,41,51,61,69,77,83,86,86,85,83,82,80,79,79,79,79,76,72,68,63,56,
50,46,43,41,37,33,28,23,19,15,14,16,17,15,10,6,1,252,246,242,239,237,236,233,229,224,218,208,196,187,
180,172,165,159,152,143,134,131,139,162,193,218,232,236,233,224,216,218,229,245,8,32,56,73,80,0,0,0,160,5,
191,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,
0,0,0,255,0,0,0,0,0,0,1,0,0,0,1,1,0,0,1,1,0,255,0,2,0,0,0,0,0,0,
0,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,255,1,0,254,0,1,0,254,255,1,
1,0,255,2,3,0,255,1,1,0,0,1,1,0,255,0,2,0,0,2,2,0,0,0,0,255,0,1,1,0,
0,2,0,254,0,4,1,253,255,1,0,252,253,1,4,2,0,1,2,0,0,255,255,0,254,250,251,2,7,8,
5,2,3,4,255,249,253,3,3,0,253,253,0,0,254,0,2,0,253,254,1,3,2,0,1,4,0,254,4,10,
7,0,253,252,250,249,253,6,10,6,2,0,253,253,0,1,2,3,0,255,0,0,254,0,2,0,252,253,2,5,
0,255,6,7,251,246,0,6,4,2,1,0,253,247,248,0,3,0,2,6,3,255,255,0,3,2,0,5,0,232,
223,243,6,13,25,43,43,11,227,213,228,249,9,24,30,22,8,248,233,238,4,21,15,253,235,234,247,1,9,20,
25,13,249,232,226,236,254,7,4,1,3,3,255,248,253,8,7,251,244,246,250,255,6,12,16,20,14,254,245,248,
251,249,249,3,17,22,15,6,1,251,247,248,250,0,8,8,0,0,4,3,2,0,250,245,248,247,243,249,3,9,
9,3,255,250,241,235,244,0,4,11,24,25,9,249,243,248,255,0,0,8,13,10,3,0,1,9,10,0,244,241,
246,0,8,8,8,10,6,251,242,242,248,1,6,1,254,2,4,255,253,254,250,247,252,254,253,2,10,9,1,251,
253,2,5,7,3,231,190,220,43,40,246,27,127,75,201,159,206,253,9,25,53,54,20,249,235,227,225,232,249,252,
225,213,254,44,31,250,246,244,235,234,219,235,2,9,14,14,13,20,18,252,232,232,248,250,1,31,26,255,12,37,
17,251,250,0,255,245,241,2,21,19,9,9,7,241,224,228,234,233,243,7,20,12,251,245,249,241,229,235,245,249,
0,8,7,10,15,10,5,0,247,248,0,255,1,10,18,26,31,21,10,255,243,247,251,237,241,15,25,1,241,244,
245,234,226,236,248,251,3,13,9,6,6,252,248,252,244,246,10,13,1,5,11,8,3,250,242,242,244,255,9,0,
255,12,4,255,12,4,245,0,231,185,249,59,13,16,98,76,242,188,195,234,250,1,36,42,8,2,1,233,221,220,
228,255,246,214,243,35,30,243,236,5,5,233,230,0,5,239,249,33,34,7,11,19,252,235,246,253,2,18,21,13,
17,24,17,0,242,240,244,245,245,248,252,6,13,0,244,255,251,225,221,236,240,247,11,18,8,2,2,253,242,236,
243,255,3,10,21,19,13,21,18,0,252,3,7,2,248,248,13,28,14,252,250,251,239,225,230,247,253,253,3,6,
0,250,247,243,239,241,251,4,9,13,13,10,9,4,0,4,1,242,251,15,7,249,2,7,255,250,248,250,1,0,
248,248,0,11,11,254,255,244,194,192,18,57,30,47,83,38,219,203,224,246,7,20,25,19,17,13,235,206,223,237,
225,239,7,255,252,15,6,242,255,9,248,237,252,3,247,251,23,27,0,2,25,11,245,253,255,244,5,28,20,9,
15,16,3,251,249,243,241,249,252,245,247,2,1,252,254,251,240,238,244,246,245,0,16,13,2,2,1,249,248,253,
249,246,0,16,26,20,8,9,10,1,255,2,254,254,3,4,4,7,6,0,247,237,236,242,245,249,252,254,6,10,
0,251,253,246,240,248,1,7,12,14,11,6,0,1,5,253,245,254,8,6,1,0,1,5,0,240,238,3,14,249,
235,4,25,4,247,252,229,192,218,31,38,48,78,63,6,206,206,234,250,14,40,30,13,19,7,224,205,218,227,233,
252,6,1,4,14,255,235,251,9,247,241,4,4,244,3,29,15,248,11,37,9,234,248,252,238,6,37,24,14,25,
7,238,249,5,248,236,250,5,249,240,3,11,251,247,249,234,234,251,248,246,13,24,11,2,0,248,244,246,253,0,
253,1,20,28,18,3,250,253,5,0,0,14,17,4,253,251,254,9,9,247,237,244,248,241,243,1,5,254,1,4,
247,246,0,250,244,5,15,8,11,17,4,246,252,10,3,245,252,9,2,255,3,255,251,2,0,245,251,7,5,249,
248,11,17,0,0,244,187,189,31,46,26,81,93,18,203,198,223,245,7,32,44,30,12,6,237,201,203,226,235,250,
10,9,5,8,254,241,251,1,248,245,0,6,1,2,15,19,6,7,23,13,242,239,250,247,0,31,40,16,4,6,
254,244,248,251,246,250,5,4,250,252,4,254,242,248,254,241,234,244,252,5,20,20,5,253,249,242,238,247,4,10,
7,13,21,13,0,251,247,253,10,11,3,5,10,7,0,0,9,5,245,245,254,250,247,250,250,0,7,0,251,254,
245,239,245,251,5,15,6,1,13,9,252,251,0,6,6,253,4,18,1,244,2,2,251,254,246,247,7,0,249,10,
2,249,18,16,243,234,206,197,22,44,28,94,90,247,196,212,219,241,17,27,34,39,22,5,233,201,193,216,237,0,
20,14,10,13,249,238,2,251,230,242,1,6,13,11,8,12,8,6,19,9,235,233,247,3,21,33,27,13,253,247,
253,249,242,249,255,1,16,17,255,243,244,245,247,254,0,247,241,248,0,5,14,11,249,241,249,252,249,246,245,0,
18,25,18,8,3,0,244,237,2,23,14,4,4,4,10,13,252,242,254,4,254,250,251,253,254,255,3,1,249,247,
248,242,244,255,4,9,9,1,254,2,3,253,248,255,12,13,5,6,1,249,253,254,251,254,253,254,8,1,248,10,
6,241,7,24,250,243,241,190,220,47,31,55,101,47,223,198,202,219,251,21,46,51,28,19,251,208,192,193,221,252,
27,29,16,20,11,235,235,250,233,230,249,7,18,22,15,5,255,250,0,5,252,248,250,0,22,35,22,16,13,247,
238,254,251,242,0,11,8,12,13,253,235,237,248,251,251,0,0,249,1,12,4,251,252,249,240,245,0,253,250,5,
11,2,6,11,255,248,255,250,246,12,27,13,4,15,16,253,240,249,4,6,7,5,255,0,6,249,240,255,3,246,
246,0,255,251,250,253,4,5,252,250,1,0,254,1,8,9,3,1,5,0,245,250,7,8,255,250,2,8,252,244,
255,2,85,5,64,0,0,0,255,0,2,0,0,2,1,255,0,0,255,0,1,1,3,2,0,0,3,1,255,0,
0,0,0,2,1,0,1,0,255,1,2,255,254,0,0,0,1,1,0,1,0,254,255,0,1,4,3,255,255,0,
0,0,1,0,0,0,0,0,0,0,254,0,3,2,0,255,0,2,3,0,0,2,1,255,0,0,0,0,1,2,
1,255,253,255,1,2,0,254,0,3,1,255,0,1,0,255,0,1,0,0,0,1,1,0,0,0,1,1,255,255,
2,3,0,0,0,0,0,0,0,0,0,255,0,2,1,255,0,0,1,0,255,255,0,0,0,0,2,1,1,0,
0,1,0,0,1,0,0,1,2,0,0,0,254,255,3,2,255,0,0,0,0,1,0,0,0,1,4,2,253,253,
0,2,2,2,0,255,1,3,1,0,0,1,0,255,0,1,3,3,255,253,0,0,2,4,1,254,254,0,0,3,
1,254,0,3,2,0,0,255,1,4,255,251,1,8,5,0,0,254,245,245,12,35,15,229,225,1,20,12,1,240,
231,5,34,13,241,243,251,254,9,12,255,247,252,3,13,13,250,238,252,13,7,251,1,8,252,248,5,3,247,254,
10,6,254,252,0,7,4,251,252,3,6,5,1,251,251,255,7,11,252,240,4,18,251,239,5,14,251,248,7,3,
245,1,17,1,244,0,1,251,7,4,246,8,13,236,246,28,4,235,7,10,238,0,21,0,242,0,13,9,243,234,
9,29,255,237,255,1,250,3,12,1,250,1,8,4,248,239,5,35,8,220,246,26,255,250,29,247,200,7,54,4,
233,248,251,15,23,244,242,11,252,248,15,2,236,255,16,8,253,245,0,10,248,251,26,12,234,250,15,246,236,21,
36,245,220,1,16,247,248,10,10,16,6,223,234,26,20,255,6,241,226,21,42,248,230,253,254,254,8,5,2,2,
253,5,7,236,237,19,25,4,253,238,237,14,21,240,234,9,26,14,237,218,2,48,20,225,230,13,20,246,244,25,
29,240,219,245,17,24,254,239,19,21,212,214,36,56,0,209,222,37,53,223,199,15,44,30,254,191,220,62,31,218,
7,14,218,1,33,246,249,253,229,32,70,229,178,250,57,50,234,184,250,48,9,5,10,207,222,51,41,238,230,245,
14,21,245,251,18,245,242,19,5,249,2,243,254,23,250,247,18,246,243,22,239,221,39,44,238,237,0,0,4,238,
243,49,37,208,206,32,59,230,176,19,87,251,220,20,227,201,44,46,238,9,3,217,253,3,0,61,19,180,239,27,
238,27,47,219,229,8,231,33,54,180,202,87,44,239,14,202,170,43,80,11,3,231,213,28,6,181,22,121,248,149,
1,72,250,208,16,46,254,220,236,8,26,254,214,4,77,33,184,162,247,87,69,238,242,12,211,211,27,15,11,58,
241,182,31,34,175,250,112,18,185,221,248,25,41,235,4,82,230,132,248,51,251,44,61,204,218,43,217,167,32,98,
53,252,178,184,45,62,225,225,29,33,0,205,213,41,35,227,39,77,186,135,23,90,20,233,251,23,12,216,210,248,
7,31,48,7,239,0,239,214,235,15,55,50,234,216,1,230,213,35,69,16,215,184,251,100,28,164,1,96,238,166,
253,44,20,3,254,13,1,200,233,66,15,183,250,86,32,190,195,30,61,245,219,22,20,235,255,6,243,9,2,225,
13,44,240,229,1,236,10,68,253,192,11,40,245,245,244,227,21,44,251,4,16,201,212,47,16,209,27,88,14,188,
186,249,51,25,249,28,0,196,6,37,194,242,118,16,160,17,42,189,237,53,247,8,73,236,166,243,15,242,23,64,
35,227,189,233,36,10,238,18,30,8,253,221,213,21,38,242,253,52,23,199,187,2,47,7,250,51,40,198,175,241,
25,19,9,21,41,17,217,205,230,250,31,64,38,250,231,201,196,18,80,29,237,6,252,196,215,21,34,36,38,241,
200,230,247,230,5,64,69,16,223,220,219,198,244,79,66,250,10,27,206,171,239,31,23,16,16,12,5,239,214,232,
25,31,251,253,22,251,220,0,39,25,242,213,232,21,13,249,27,26,220,227,23,7,229,246,13,22,25,13,253,237,
228,249,11,0,5,15,252,252,22,5,229,237,248,242,2,33,34,4,240,248,252,240,248,6,10,22,16,240,250,17,
231,213,18,35,248,245,9,10,10,249,227,251,25,13,241,235,6,35,13,229,236,0,6,21,7,229,253,34,252,218,
0,20,250,255,25,9,231,236,6,7,250,245,249,14,37,7,215,241,44,18,208,224,28,28,255,6,17,243,227,255,
14,248,232,254,27,22,253,0,8,236,219,0,23,0,243,15,45,27,223,205,5,26,228,214,25,67,23,221,234,25,
5,207,238,35,0,233,31,41,244,236,253,242,248,10,254,250,14,7,250,12,15,233,217,0,34,12,244,16,34,239,
209,253,19,251,251,5,255,5,14,1,254,254,231,236,21,24,253,2,17,5,244,239,245,253,251,1,20,21,9,6,
248,230,242,0,253,5,16,13,17,13,241,232,248,248,248,6,8,11,25,9,234,243,9,1,240,236,0,31,29,0,
245,250,247,250,2,0,254,0,1,3,0,248,6,17,244,228,3,16,2,9,15,251,244,0,5,4,254,239,247,15,
17,3,255,255,255,252,244,245,0,9,22,27,8,247,246,234,230,2,22,12,13,11,238,238,13,6,236,246,3,255,
5,15,5,254,255,251,247,255,6,255,239,253,30,24,248,250,251,215,217,13,22,2,32,54,14,239,238,226,221,246,
14,24,32,35,20,244,215,215,231,246,19,40,18,5,27,16,233,232,243,229,240,19,24,11,13,7,245,238,238,240,
245,248,4,22,17,5,13,5,235,237,1,252,243,255,8,14,24,22,6,246,226,226,251,8,7,16,20,11,12,3,
233,231,248,247,0,27,25,5,8,9,247,243,0,2,255,252,0,6,9,8,11,6,244,239,251,250,245,0,6,4,
13,15,255,250,254,241,238,3,5,252,9,17,0,249,252,245,246,253,255,6,7,0,12,18,249,243,0,240,232,8,
20,8,19,21,0,250,255,247,246,0,6,10,13,12,4,246,242,0,0,242,250,0,0,0,152,153,153,154,156,157,
159,161,164,167,169,172,176,179,182,186,190,193,197,201,205,209,212,216,220,223,227,230,234,237,240,242,245,247,249,251,
252,253,254,254,255,255,255,255,255,255,254,253,251,250,248,246,243,241,238,236,233,230,228,224,221,218,215,211,208,204,
200,196,192,188,184,180,176,172,167,163,159,154,150,145,141,136,132,127,123,118,114,109,105,101,96,92,88,84,80,76,
72,68,64,60,57,53,50,47,43,40,38,35,32,29,26,23,21,18,15,13,10,8,7,5,3,2,1,0,0,0,
0,0,81,0,5,0,1,0,16,1,136,3,40,5,140,10,112,13,35,15,32,28,32,58,36,70,64,40,27,24,
9,8,217,150,105,120,120,120,255,180,150,44,65,70,130,53,0,0,0,0,50,0,0,0,0,50,124,182,3,0,
0,0,3,0,0,0,176,250,125,0,3,0,32,1,136,3,40,5,140,10,112,13,191,14,32,28,16,146,53,116,
96,70,52,33,16,8,217,155,105,120,120,120,247,170,165,44,65,75,130,54,0,0,0,0,50,0,0,0,0,0,
0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,32,1,136,3,40,5,140,10,112,13,191,14,32,28,
17,146,53,116,96,70,52,33,16,8,217,155,105,120,120,120,247,170,165,44,65,75,130,53,0,0,0,0,50,0,
0,0,0,250,222,182,49,229,0,182,3,0,0,0,1,250,0,0,1,0,16,1,128,3,60,5,100,10,112,13,
191,14,160,28,16,45,33,64,58,33,30,23,7,8,217,135,105,120,120,120,255,165,165,44,65,70,130,53,0,0,
0,0,50,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,1,0,200,0,216,1,111,5,
196,9,224,13,160,15,244,26,0,1,0,16,8,8,4,4,0,0,187,125,137,137,150,175,187,125,137,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,0,0,0,1,0,0,0,220,53,171,191,251,250,207,182,170,0,4,0,
1,0,148,0,224,1,248,2,150,10,188,12,236,14,38,27,45,52,22,54,54,36,34,22,14,6,165,131,156,120,
120,120,165,110,130,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,3,0,0,0,3,0,0,0,
176,250,125,0,3,0,148,0,224,1,248,2,150,10,188,12,236,14,38,27,70,92,30,72,72,48,46,30,19,8,
165,131,156,120,120,120,165,110,130,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,
197,254,124,182,1,250,0,0,1,0,148,0,224,1,248,2,150,10,188,12,236,14,38,27,55,83,28,68,68,45,
43,28,18,8,165,131,156,120,120,120,165,110,130,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,
49,229,0,182,3,0,0,0,1,250,0,0,1,0,148,0,224,1,248,2,150,10,188,12,236,14,38,27,0,45,
21,50,50,33,32,21,13,5,165,131,156,120,120,120,165,110,130,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,46,0,8,0,1,0,200,0,127,2,126,5,127,9,
197,12,114,14,244,26,12,59,40,72,72,40,28,20,16,12,187,125,137,137,150,175,187,125,137,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,200,0,125,2,
136,5,127,9,207,12,123,14,244,26,12,66,52,72,72,44,32,28,20,8,187,125,137,137,150,175,187,125,137,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,
200,0,103,2,9,6,181,9,248,12,224,14,244,26,12,53,52,60,64,36,28,28,20,16,187,125,137,137,150,175,
187,125,137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,
0,0,1,0,200,0,65,2,159,6,235,9,253,12,61,15,244,26,12,43,52,48,52,28,28,28,8,8,187,125,
137,137,150,175,187,125,137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,
60,182,64,250,23,8,1,0,152,0,200,1,12,3,144,11,16,14,180,15,159,27,48,32,36,32,44,36,32,20,
16,8,172,142,135,120,120,120,167,135,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,40,60,182,40,54,
0,191,77,60,59,182,64,250,23,8,1,0,152,0,72,1,208,2,144,11,16,14,200,15,159,27,24,22,36,20,
20,8,4,4,8,8,172,142,135,120,120,120,167,135,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,
0,0,0,0,0,0,146,23,0,0,0,250,0,0,1,0,152,0,72,1,208,2,144,11,16,14,200,15,159,27,
24,22,36,20,20,8,4,4,8,8,172,142,135,120,120,120,167,135,135,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,250,222,182,120,54,0,191,188,40,60,182,64,250,23,8,1,0,152,0,72,1,208,2,144,11,16,14,
200,15,159,27,0,22,36,20,20,8,4,4,8,8,172,142,135,120,120,120,167,135,135,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,250,222,182,188,133,0,182,48,163,115,8,104,250,222,182,0,0,9,0,1,0,250,0,
176,2,40,4,246,10,188,12,92,14,87,27,28,62,24,59,74,42,38,34,10,6,167,147,147,120,120,120,167,142,
135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,
3,0,250,0,176,2,40,4,246,10,188,12,92,14,87,27,35,127,35,84,105,60,54,49,14,8,167,147,147,120,
120,120,167,142,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,
1,250,0,0,1,0,250,0,176,2,40,4,246,10,188,12,92,14,87,27,29,127,35,84,105,60,54,49,14,8,
167,147,147,120,120,120,167,142,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,
8,0,0,0,1,250,0,0,1,0,250,0,160,2,76,4,246,10,188,12,92,14,87,27,43,118,35,84,105,60,
54,49,14,8,167,147,147,120,120,120,167,142,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,
0,0,0,0,188,40,60,182,64,250,23,8,1,0,204,0,93,2,252,4,60,10,168,12,10,15,0,28,50,40,
28,53,61,33,40,20,11,8,167,165,150,120,120,120,167,180,120,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,40,60,182,40,54,0,191,77,60,59,182,64,250,23,8,1,0,152,0,200,1,12,3,144,11,16,14,180,15,
159,27,21,32,36,32,44,36,32,20,16,8,172,142,135,120,120,120,167,135,135,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,0,0,0,0,0,0,0,146,23,0,0,0,250,0,0,1,0,152,0,72,1,208,2,144,11,
16,14,200,15,159,27,21,22,36,20,20,8,4,4,8,8,172,142,135,120,120,120,167,135,135,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,250,222,182,120,54,0,191,188,40,60,182,64,250,23,8,1,0,152,0,72,1,
208,2,144,11,16,14,200,15,159,27,43,22,36,20,20,8,4,4,8,8,172,142,135,120,120,120,167,135,135,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,188,133,0,182,48,163,115,8,104,250,222,182,1,0,
152,0,72,1,208,2,144,11,16,14,200,15,159,27,0,22,36,20,20,8,4,4,8,8,172,142,135,120,120,120,
167,135,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,47,222,182,49,229,0,182,120,17,115,8,8,250,
171,191,0,0,6,0,1,0,228,0,224,2,180,5,196,9,68,12,216,14,80,28,45,46,25,55,66,44,36,32,
12,5,172,142,180,120,120,120,255,120,165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,
0,191,197,24,223,182,176,250,125,182,3,0,228,0,224,2,180,5,196,9,68,12,216,14,80,28,66,83,34,75,
90,60,49,43,17,7,172,142,180,120,120,120,255,120,165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,
0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,222,0,224,2,40,5,96,9,98,12,76,14,247,27,
41,73,29,63,84,46,52,35,14,7,168,124,204,120,120,120,255,120,165,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,0,1,96,2,87,4,16,9,48,12,
41,14,128,27,40,64,28,61,77,35,52,36,15,7,237,126,192,120,120,120,141,126,147,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,1,0,0,1,208,1,189,3,
16,9,8,12,41,14,96,27,40,65,36,68,59,21,35,23,15,8,205,90,180,120,120,120,145,120,135,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,64,250,23,8,1,0,172,0,
200,1,152,3,192,8,168,12,60,15,96,27,0,30,25,50,42,16,18,13,11,9,200,90,120,120,120,120,200,120,
135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,146,23,0,0,0,250,0,0,
34,0,8,0,1,0,200,0,196,2,190,6,114,9,178,13,224,13,244,26,12,56,40,72,68,64,20,20,20,12,
187,125,137,137,150,175,187,125,137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,
197,24,223,182,176,250,125,182,3,0,200,0,201,2,197,6,100,9,129,13,48,14,244,26,12,66,40,80,76,64,
24,24,16,16,187,125,137,137,150,175,187,125,137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,
24,53,0,191,197,254,124,182,1,250,0,0,1,0,200,0,200,2,192,6,98,9,90,13,131,14,244,26,12,56,
40,72,72,60,40,0,16,12,187,125,137,137,150,175,187,125,137,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,200,0,197,2,184,6,97,9,75,13,174,14,
244,26,24,51,36,68,68,56,48,12,16,16,187,125,137,137,150,175,187,125,137,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,1,0,200,0,182,2,153,6,108,9,
67,13,220,14,244,26,36,48,36,68,60,48,44,28,16,12,187,125,137,137,150,175,187,125,137,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,64,250,23,8,1,0,152,0,200,1,
12,3,144,11,16,14,180,15,159,27,24,32,36,32,44,36,32,20,16,8,172,142,135,120,120,120,167,135,135,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,146,23,0,0,0,250,0,0,1,0,
152,0,72,1,208,2,144,11,16,14,200,15,159,27,36,22,36,20,20,8,4,4,8,8,172,142,135,120,120,120,
167,135,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,120,54,0,191,188,40,60,182,64,250,
23,8,1,0,152,0,72,1,208,2,144,11,16,14,200,15,159,27,0,22,36,20,20,8,4,4,8,8,172,142,
135,120,120,120,167,135,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,188,133,0,182,48,163,
115,8,104,250,222,182,89,0,9,0,1,0,200,0,104,1,38,8,98,10,18,13,10,15,244,26,12,55,30,57,
48,42,39,24,12,9,187,125,137,137,150,175,187,125,137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,
124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,200,0,136,1,230,7,48,10,17,13,30,15,244,26,
12,111,36,92,64,64,56,36,20,12,187,125,137,137,150,175,187,125,137,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,200,0,136,1,223,7,46,10,23,13,
38,15,244,26,12,110,40,88,64,64,56,40,24,16,187,125,137,137,150,175,187,125,137,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,200,0,136,1,224,7,
48,10,26,13,40,15,244,26,12,97,36,84,60,60,56,36,24,12,187,125,137,137,150,175,187,125,137,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,1,0,200,0,
144,1,245,7,60,10,43,13,84,15,244,26,12,68,40,60,56,56,56,40,20,12,187,125,137,137,150,175,187,125,
137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,64,250,23,8,
1,0,152,0,200,1,152,8,140,10,16,14,180,15,159,27,24,24,36,32,36,36,32,20,16,8,172,142,135,120,
120,120,167,135,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,146,23,0,0,
0,250,0,0,1,0,168,0,96,1,204,6,196,9,176,14,48,17,244,26,42,37,44,40,8,36,24,12,0,0,
125,125,137,137,150,175,125,125,137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,120,54,0,191,
188,40,60,182,64,250,23,8,1,0,168,0,96,1,204,6,196,9,176,14,68,17,244,26,30,37,44,40,8,36,
24,12,0,0,125,125,137,137,150,175,125,125,137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,
188,133,0,182,48,163,115,8,104,250,222,182,1,0,168,0,96,1,204,6,196,9,176,14,68,17,244,26,0,26,
40,32,8,16,8,12,0,0,125,125,137,137,150,175,125,125,137,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,47,222,182,49,229,0,182,120,17,115,8,8,250,171,191,0,0,5,0,1,0,200,0,38,1,6,5,126,10,
152,11,253,14,244,26,29,91,56,52,48,44,16,28,12,8,187,125,137,137,150,175,187,125,137,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,200,0,58,1,
37,5,140,10,174,16,160,15,244,26,51,74,48,52,40,36,12,16,16,12,187,125,137,137,150,175,187,125,137,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,
200,0,42,1,244,4,57,10,85,10,215,16,244,26,98,59,48,40,32,20,8,4,4,4,187,125,137,137,150,175,
187,125,137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,
0,0,1,0,152,0,72,1,208,2,144,11,16,14,200,15,159,27,104,52,52,36,20,8,4,4,8,8,172,142,
135,120,120,120,167,135,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,
60,182,64,250,23,8,1,0,152,0,72,1,208,2,144,11,16,14,200,15,159,27,0,22,36,20,20,8,4,4,
8,8,172,142,135,120,120,120,167,135,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,40,60,182,40,54,
0,191,77,60,59,182,64,250,23,8,23,0,7,0,1,0,200,0,191,1,229,5,86,9,209,12,236,14,244,26,
23,73,36,72,76,40,40,28,24,12,187,125,137,137,150,175,187,125,137,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,200,0,193,1,232,5,89,9,218,12,
246,14,244,26,24,70,32,72,76,44,44,36,28,16,187,125,137,137,150,175,187,125,137,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,200,0,194,1,241,5,
85,9,209,12,239,14,244,26,12,55,32,64,60,36,36,28,20,8,187,125,137,137,150,175,187,125,137,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,200,0,
200,1,119,6,146,9,16,13,86,15,244,26,12,38,36,48,40,32,32,24,16,12,187,125,137,137,150,175,187,125,
137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,
1,0,152,0,200,1,12,3,144,11,16,14,180,15,159,27,36,39,44,36,44,36,32,20,16,8,172,142,135,120,
120,120,167,135,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,
64,250,23,8,1,0,152,0,72,1,208,2,144,11,16,14,200,15,159,27,48,22,36,20,20,8,4,4,8,8,
172,142,135,120,120,120,167,135,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,
146,23,0,0,0,250,0,0,1,0,152,0,72,1,208,2,144,11,16,14,200,15,159,27,0,22,36,20,20,8,
4,4,8,8,172,142,135,120,120,120,167,135,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,
120,54,0,191,188,40,60,182,64,250,23,8,0,0,6,0,1,0,152,0,56,2,132,3,44,11,192,13,120,15,
159,27,45,62,29,67,58,32,29,22,14,6,172,142,135,120,120,120,167,135,135,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,152,0,56,2,132,3,44,11,
192,13,120,15,159,27,84,116,40,92,80,44,40,31,20,8,172,142,135,120,120,120,167,135,135,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,152,0,72,2,
92,3,144,11,232,13,140,15,159,27,40,112,40,80,80,44,40,31,20,8,172,142,135,120,120,120,167,135,135,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,
152,0,200,1,12,3,144,11,16,14,180,15,159,27,55,32,36,32,44,36,32,20,16,8,172,142,135,120,120,120,
167,135,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,
23,8,1,0,152,0,72,1,208,2,144,11,16,14,200,15,159,27,60,22,36,20,20,8,4,4,8,8,172,142,
135,120,120,120,167,135,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,
59,182,64,250,23,8,1,0,152,0,72,1,208,2,144,11,16,14,200,15,159,27,0,22,36,20,20,8,4,4,
8,8,172,142,135,120,120,120,167,135,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,
0,0,146,23,0,0,0,250,0,0,0,0,6,0,1,0,152,0,56,2,132,3,44,11,192,13,120,15,159,27,
55,116,40,92,80,44,40,31,20,8,172,142,135,120,120,120,167,135,135,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,1,0,152,0,56,2,132,3,44,11,192,13,
120,15,159,27,74,116,40,92,80,44,40,31,20,8,172,142,135,120,120,120,167,135,135,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,3,0,176,0,56,1,92,3,
56,9,12,13,60,15,144,26,46,78,4,96,52,28,28,40,16,10,177,125,102,120,120,120,177,125,117,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,152,0,
200,1,12,3,144,11,16,14,180,15,159,27,17,32,36,32,44,36,32,20,16,8,172,142,135,120,120,120,167,135,
135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,
1,0,152,0,72,1,208,2,144,11,16,14,200,15,159,27,16,22,36,20,20,8,4,4,8,8,172,142,135,120,
120,120,167,135,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,
64,250,23,8,1,0,152,0,72,1,208,2,144,11,16,14,200,15,159,27,0,22,36,20,20,8,4,4,8,8,
172,142,135,120,120,120,167,135,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,
146,23,0,0,0,250,0,0,175,0,4,0,1,0,116,0,232,1,136,4,236,9,168,12,156,14,96,27,45,48,
27,63,60,34,37,31,16,6,167,150,135,120,120,120,197,120,120,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,116,0,232,1,136,4,236,9,168,12,156,14,
96,27,70,93,38,88,84,48,52,43,23,8,167,150,135,120,120,120,197,120,120,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,116,0,232,1,136,4,236,9,
168,12,156,14,96,27,60,75,34,79,75,43,46,39,20,7,167,150,135,120,120,120,197,120,120,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,116,0,232,1,
136,4,236,9,168,12,156,14,96,27,0,41,25,58,56,32,34,29,15,5,167,150,135,120,120,120,197,120,120,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,110,0,
3,0,5,0,240,0,13,2,108,7,128,12,156,14,23,17,224,23,60,24,54,8,8,16,6,8,4,0,162,90,
165,120,120,120,132,165,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,
223,182,176,250,125,182,5,0,240,0,13,2,108,7,128,12,156,14,23,17,224,23,50,24,54,8,8,16,6,8,
4,0,162,90,165,120,120,120,132,165,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,
0,191,197,254,124,182,1,250,0,0,1,0,240,0,13,2,108,7,128,12,156,14,23,17,224,23,0,15,43,6,
6,13,5,6,3,0,162,90,165,120,120,120,132,165,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,
222,182,49,229,0,182,8,0,0,0,1,250,0,0,181,2,30,0,23,23,23,23,23,22,22,23,23,23,23,23,
23,23,23,23,22,22,23,23,24,24,23,23,24,24,24,23,23,22,22,22,21,21,22,22,22,22,22,22,21,22,
22,22,22,21,21,21,22,21,21,22,21,21,21,21,21,21,21,21,21,21,21,21,21,20,20,20,20,20,20,20,
19,19,19,20,20,19,19,19,19,19,19,19,19,19,19,19,19,19,18,18,17,18,18,18,17,17,17,17,18,18,
18,18,18,18,18,18,18,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,16,16,16,16,16,
16,16,16,16,17,17,17,17,16,16,15,16,17,17,17,17,17,17,17,17,17,16,16,16,17,17,17,16,17,17,
16,16,16,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,18,17,17,17,17,17,17,17,17,
17,17,17,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,19,19,19,19,18,19,18,18,
18,18,17,17,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,19,19,19,19,19,
20,20,19,19,19,19,19,19,20,20,19,19,20,20,20,20,19,19,20,20,19,19,20,20,20,20,21,21,21,21,
21,21,21,21,20,20,21,21,21,21,21,21,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,23,23,
23,23,23,23,23,24,23,23,23,23,23,23,23,22,22,23,23,23,23,24,24,24,24,24,24,24,24,24,24,23,
23,23,24,24,24,24,25,25,25,24,24,24,24,24,24,24,24,24,24,24,24,24,23,23,24,24,24,24,24,24,
24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,23,23,23,23,23,23,23,22,22,22,22,
22,22,22,22,22,22,22,21,21,21,21,21,22,22,22,22,22,23,22,22,22,22,22,22,21,21,21,21,21,20,
21,21,20,20,20,19,19,18,18,17,14,12,7,1,222,165,138,148,195,198,198,244,25,46,55,66,97,101,57,31,
23,253,219,214,234,2,15,26,54,77,73,65,79,75,55,28,2,254,245,236,249,23,34,48,51,57,73,62,47,36,
29,22,3,249,248,1,11,20,50,73,76,44,6,13,30,51,1,2,2,251,226,225,253,13,8,4,31,33,20,10,
32,44,25,243,222,217,210,204,204,253,34,46,54,65,72,71,46,40,52,37,7,255,7,22,2,246,23,47,56,15,
36,47,51,22,16,49,55,31,255,25,43,30,1,22,43,40,6,19,42,28,242,222,9,8,241,226,12,37,31,35,
46,81,83,51,45,74,60,27,17,41,65,55,29,42,42,247,179,146,149,154,146,144,229,243,17,31,88,105,125,118,
68,76,252,220,204,207,195,218,252,22,59,44,8,243,191,206,217,166,153,171,211,228,251,20,87,118,103,109,84,65,
31,255,232,250,252,253,9,18,43,85,96,88,59,31,48,48,245,191,205,221,31,35,18,39,43,19,237,232,244,248,
215,195,212,205,218,236,20,42,32,19,12,21,246,225,229,255,2,1,27,51,57,0,0,0,75,8,18,0,40,40,
40,40,40,40,40,40,40,39,39,39,39,39,40,39,39,39,38,39,38,38,38,38,38,38,38,37,37,36,36,36,
36,36,35,35,36,35,35,34,35,34,34,33,33,33,33,33,33,33,33,33,32,32,32,32,31,31,31,31,30,30,
30,30,30,30,30,29,29,29,29,29,30,29,29,29,28,29,28,28,28,28,27,27,27,28,27,27,27,27,27,27,
27,27,27,27,26,26,26,27,27,26,26,25,25,25,26,26,26,26,26,26,25,25,26,26,26,26,25,26,26,26,
26,25,24,24,25,25,25,25,26,25,26,26,26,25,25,25,25,25,25,25,25,25,25,25,25,24,24,24,24,25,
25,26,26,25,26,26,26,26,26,26,26,26,27,26,26,26,26,26,26,27,27,27,26,26,26,26,26,26,26,26,
26,27,27,28,27,28,28,28,28,28,28,28,28,28,28,28,29,30,30,30,30,30,30,30,30,30,30,30,30,30,
30,30,29,30,30,30,31,31,31,31,30,30,30,30,30,30,30,31,31,30,31,31,31,31,31,31,32,32,33,33,
33,33,33,33,34,34,34,34,34,34,34,34,34,34,34,35,35,35,35,36,36,36,36,36,36,37,37,36,36,36,
37,37,37,37,37,38,37,37,37,38,38,38,38,38,38,39,39,38,39,40,40,39,39,39,40,41,41,41,41,42,
42,42,42,42,42,42,42,41,42,42,42,42,42,42,42,42,43,43,43,43,43,44,43,43,43,43,44,44,44,44,
45,45,45,45,45,45,44,44,45,45,45,45,45,46,45,45,45,46,45,45,45,45,45,45,45,45,45,45,44,44,
44,45,45,45,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,
44,44,43,43,43,43,43,43,42,42,42,42,42,42,42,42,42,42,43,43,42,42,42,42,42,42,42,42,42,42,
41,41,41,41,41,42,42,42,41,42,42,42,42,42,42,42,41,42,41,41,41,41,41,41,41,42,42,41,41,40,
40,40,40,39,39,39,39,39,38,38,38,38,38,38,39,39,39,39,38,38,38,38,38,38,38,37,37,38,37,36,
36,36,36,36,36,36,35,35,35,35,35,35,35,35,36,35,34,32,32,33,34,34,34,33,32,31,32,33,32,32,
31,31,30,30,31,31,31,31,30,30,30,31,31,31,32,31,31,30,30,30,30,30,29,29,29,28,29,31,33,31,
26,25,27,30,31,31,29,27,27,28,28,29,31,31,28,26,27,26,26,18,238,195,224,70,120,72,11,245,235,247,
42,84,72,32,5,251,0,31,65,61,27,7,10,20,34,48,49,33,16,12,20,33,45,48,35,16,8,19,36,44,
42,32,20,14,19,33,44,43,31,18,16,23,33,38,36,28,22,21,24,28,29,30,32,33,29,23,23,29,32,31,
32,32,27,22,23,28,30,32,31,22,21,28,33,31,30,30,25,21,22,31,38,33,21,20,29,32,28,29,32,26,
21,29,37,33,27,28,28,27,32,37,30,23,28,35,32,28,30,36,38,32,21,25,42,41,29,29,34,29,29,39,
43,34,26,26,29,33,40,42,38,31,29,31,32,33,41,47,40,27,23,28,38,47,46,31,24,38,45,32,30,45,
46,34,33,39,36,35,41,42,37,34,35,34,35,43,46,37,33,40,42,34,37,46,40,32,43,48,33,29,45,52,
42,33,32,38,44,44,46,49,41,28,33,52,57,40,25,36,53,52,36,32,46,54,44,37,46,45,33,42,58,52,
37,36,38,38,48,58,48,32,31,42,50,51,42,34,43,54,46,36,44,45,34,42,60,51,31,43,58,37,22,47,
62,47,42,45,33,32,54,59,39,31,36,45,55,46,31,31,43,53,58,51,33,22,28,44,61,59,39,30,34,34,
42,54,47,33,36,44,34,32,61,70,25,0,32,61,64,66,45,254,255,58,82,50,35,40,26,21,48,60,45,46,
41,13,25,74,70,25,23,42,38,36,49,52,46,45,35,21,38,63,55,37,30,28,36,47,47,50,50,33,15,30,
60,58,34,34,44,29,18,48,77,55,19,17,30,29,47,73,56,21,16,28,39,48,47,35,33,42,42,30,26,33,
38,37,43,52,43,21,14,34,46,37,34,44,41,23,17,24,36,52,59,39,2,254,30,46,46,62,53,3,243,29,
51,30,33,58,41,7,12,33,38,42,42,19,13,44,46,9,6,45,55,26,12,31,33,9,23,63,51,255,246,30,
54,41,33,35,16,255,13,37,49,52,40,8,241,8,57,70,41,11,0,255,22,66,72,29,255,3,20,35,44,41,
25,15,26,34,21,19,39,51,30,0,8,44,48,20,13,29,29,25,42,48,22,4,19,35,32,36,48,39,17,5,
13,32,48,48,27,16,30,32,13,12,39,54,38,22,22,21,16,28,36,31,35,46,42,13,240,2,60,89,52,253,
243,4,31,71,79,22,234,9,45,33,37,63,36,243,2,54,58,29,22,22,16,35,62,42,7,6,27,48,50,33,
22,26,24,20,31,53,48,18,10,32,45,40,25,17,40,57,33,8,16,41,53,32,21,45,48,17,255,22,69,78,
34,254,14,49,39,14,50,73,18,245,43,83,43,253,7,50,66,52,37,21,3,17,61,75,52,26,6,4,37,71,
63,35,27,21,13,40,74,58,26,20,24,44,62,47,26,27,30,43,60,59,35,2,9,48,72,69,48,23,17,24,
34,59,69,33,17,60,73,14,246,43,78,66,51,30,10,23,54,64,49,38,38,32,35,52,47,30,40,59,44,21,
37,54,38,36,57,44,17,44,72,37,9,42,65,45,37,44,36,29,45,55,35,25,51,61,39,27,35,40,48,60,
46,19,31,57,50,38,46,46,21,21,57,72,48,26,11,17,69,88,32,252,31,60,39,34,59,56,23,15,37,42,
34,55,74,42,254,9,57,67,49,36,31,28,28,43,60,56,39,23,10,25,62,74,48,22,20,27,33,48,64,58,
33,14,18,40,57,57,55,34,0,9,59,74,54,37,15,254,25,74,71,26,17,49,42,4,24,73,62,23,22,34,
25,26,62,69,18,0,41,57,28,23,48,43,17,28,46,33,27,36,28,29,50,45,16,15,44,53,31,20,33,38,
34,40,33,11,20,49,49,29,19,26,41,42,15,0,31,58,47,31,24,10,8,36,55,41,27,21,10,9,34,57,
43,18,27,36,10,2,39,51,29,28,30,10,16,46,37,5,14,43,45,26,15,23,29,25,28,38,39,27,21,24,
22,15,26,46,38,15,15,28,34,29,24,21,27,36,27,16,28,40,28,11,22,48,39,5,9,40,44,30,28,27,
14,12,33,54,46,21,5,8,30,50,45,27,16,18,26,37,42,31,14,18,32,24,21,48,57,27,0,4,27,50,
52,26,9,23,38,27,19,30,38,35,34,28,14,13,29,45,44,31,22,20,22,26,30,35,35,25,21,30,37,33,
29,27,19,23,43,46,25,15,22,24,32,48,44,18,7,25,41,33,25,34,40,26,19,31,34,26,34,41,28,18,
27,36,29,29,44,42,19,14,35,43,27,23,43,45,20,16,36,45,41,42,31,15,27,49,44,27,28,37,33,34,
44,37,20,26,45,47,34,31,36,37,32,33,43,46,36,31,33,32,32,42,50,43,30,27,36,46,46,37,33,32,
32,43,58,53,31,22,30,41,52,56,44,31,28,30,37,53,59,42,23,27,42,51,50,42,29,26,42,58,57,42,
27,24,35,50,55,47,34,32,38,41,43,47,46,37,31,36,42,43,42,47,46,33,27,41,56,49,35,34,37,38,
44,51,46,37,36,37,37,40,46,46,39,30,31,41,48,45,41,38,32,31,39,46,44,41,41,38,34,35,40,43,
44,44,38,31,33,41,42,40,36,39,46,42,28,31,43,42,37,42,43,36,37,41,33,29,40,44,35,34,41,39,
32,31,37,42,42,36,32,33,33,34,41,45,38,30,33,37,35,34,38,40,37,33,34,38,38,37,37,36,34,34,
36,36,36,35,32,30,37,47,41,26,24,33,38,41,43,36,25,27,36,40,42,39,31,25,29,35,36,38,39,33,
27,31,34,33,35,36,31,28,32,34,33,36,36,30,27,33,35,32,33,32,30,29,32,34,34,34,29,23,25,32,
36,34,29,27,28,27,27,31,35,31,25,22,23,26,31,33,31,29,27,22,22,29,34,33,29,25,21,25,32,34,
29,27,27,26,25,25,27,29,30,28,27,26,24,23,24,28,29,27,25,24,26,28,30,29,26,25,26,29,28,24,
22,27,31,30,29,29,25,22,25,29,28,29,30,27,23,24,28,29,30,30,27,23,24,27,31,33,33,27,24,26,
30,31,31,32,28,24,26,31,31,30,30,28,25,27,32,31,26,26,29,29,30,32,30,27,28,30,30,29,30,32,
32,29,27,28,31,34,33,28,27,28,29,29,33,34,29,27,30,31,31,32,32,29,28,30,31,32,33,31,28,28,
31,32,32,32,30,27,29,33,33,32,31,31,31,32,33,32,32,35,36,33,33,34,35,33,33,35,36,34,33,33,
34,34,34,34,34,33,33,33,33,34,35,35,35,34,33,33,34,35,35,35,34,35,37,37,36,35,35,36,37,39,
39,38,36,36,36,38,39,37,37,38,38,37,37,38,38,38,38,38,39,38,37,38,39,38,37,38,38,37,37,38,
38,38,37,37,38,39,39,38,38,39,40,39,39,39,39,39,38,39,41,41,39,37,39,40,40,40,41,40,38,39,
40,40,41,42,40,38,39,39,41,41,39,38,38,40,42,40,39,39,40,40,40,0,59,11,50,0,7,251,250,9,
253,8,246,253,17,225,2,33,228,2,29,239,238,19,3,255,0,249,12,254,3,7,252,250,241,17,31,231,239,24,
248,234,10,12,16,253,242,4,252,6,11,238,253,254,30,19,213,253,23,235,254,20,252,17,3,232,15,245,237,33,
254,225,15,25,255,246,4,252,234,13,11,235,10,27,253,242,14,243,239,14,241,22,48,245,211,236,6,8,18,11,
248,234,0,18,244,251,21,245,236,5,4,24,4,229,254,17,5,244,4,19,240,246,21,10,240,2,2,229,19,14,
5,7,224,244,23,9,240,252,34,253,206,8,50,235,0,25,229,4,32,237,243,12,6,16,239,236,27,254,4,254,
244,28,247,253,21,244,241,9,248,13,20,236,13,10,232,244,25,4,217,12,38,254,223,224,0,43,40,243,222,238,
15,27,236,239,32,20,214,225,21,29,247,241,0,11,31,248,220,7,0,21,22,217,203,39,56,222,237,20,253,4,
9,238,227,9,23,11,0,242,242,242,53,4,207,45,255,228,27,255,220,12,45,250,249,244,235,8,19,8,253,18,
241,212,249,40,39,244,225,248,23,12,255,8,217,0,42,251,233,22,29,215,234,19,6,253,0,19,250,238,3,3,
24,35,221,209,36,21,237,10,8,250,228,6,29,10,243,227,247,0,5,29,18,216,243,46,231,252,22,244,254,249,
249,255,1,250,7,14,252,29,246,189,21,33,9,13,233,246,0,243,12,30,249,221,40,20,210,252,255,1,46,25,
220,237,15,13,31,233,209,30,44,219,230,29,238,253,35,255,236,251,7,253,5,254,19,48,197,189,50,11,34,29,
191,4,34,236,247,242,246,35,43,231,216,7,9,37,3,190,247,64,16,216,5,243,241,59,237,197,19,56,18,207,
223,253,37,45,215,206,32,51,232,224,13,26,37,229,222,251,22,43,226,219,28,251,247,13,2,0,253,3,251,240,
31,25,226,232,2,25,37,254,217,234,26,21,246,232,245,18,31,247,216,15,20,231,226,16,55,250,218,12,57,216,
206,81,255,199,44,51,221,198,6,248,27,58,225,215,243,27,48,239,188,47,52,186,242,45,6,0,237,203,5,85,
241,190,21,15,235,49,33,167,255,98,212,241,46,194,0,48,236,9,2,222,23,35,0,232,0,25,249,9,4,227,
4,37,46,240,171,233,46,11,225,19,18,228,231,248,33,28,215,241,35,241,6,69,223,151,32,72,199,19,69,188,
199,35,46,243,226,34,3,200,246,46,34,255,249,231,231,41,27,211,220,24,38,24,243,0,254,205,243,56,1,254,
22,226,244,12,244,247,26,54,239,222,241,3,46,28,247,204,236,32,14,245,238,30,23,252,245,210,0,34,227,244,
74,7,237,4,202,243,44,36,245,249,9,241,238,232,59,55,157,197,93,60,204,250,23,177,244,82,8,1,6,199,
5,35,2,6,197,234,54,9,18,6,216,229,13,25,27,255,181,252,73,253,236,236,246,51,33,234,224,10,11,248,
5,0,235,24,21,234,18,0,224,31,31,199,236,46,252,234,239,5,48,246,216,24,26,226,217,249,52,52,3,241,
206,207,23,39,12,255,31,247,194,22,51,0,210,201,55,90,228,187,249,14,16,22,254,246,249,226,13,31,243,253,
34,0,238,7,0,241,246,238,39,56,232,210,227,253,33,28,228,214,55,56,208,213,15,252,217,222,26,103,29,197,
232,251,228,0,233,29,96,245,215,0,0,245,242,34,31,24,25,202,180,254,8,35,65,216,219,48,53,252,159,205,
49,81,27,209,182,224,78,31,231,4,255,30,238,200,16,2,238,10,250,30,67,220,165,4,64,38,254,214,215,33,
50,254,234,204,7,61,39,242,214,16,246,218,11,20,32,30,247,179,228,97,35,196,212,16,34,3,5,5,215,225,
4,16,52,27,214,245,247,239,17,24,1,239,240,34,50,233,176,239,69,48,210,203,250,54,82,209,200,41,240,243,
21,242,241,24,24,2,244,4,255,238,10,7,246,23,1,250,24,237,227,19,7,9,9,233,250,0,254,23,251,4,
245,208,32,60,251,198,199,40,91,11,180,213,48,22,233,240,0,249,255,36,12,243,211,226,46,48,241,243,239,207,
225,38,81,23,213,239,17,39,7,220,225,249,13,0,246,33,36,248,243,0,247,248,2,20,24,4,238,229,2,240,
223,28,88,27,202,211,244,6,217,13,77,223,220,43,242,231,38,1,24,29,175,213,33,2,21,28,10,241,250,4,
246,236,11,31,253,25,25,207,248,14,8,32,246,202,237,8,57,34,227,199,243,12,244,42,48,242,222,221,43,34,
197,200,13,72,22,244,222,189,13,34,1,37,38,194,194,47,19,250,0,179,4,125,15,171,248,3,219,50,64,199,
213,77,44,244,0,168,224,91,4,222,32,40,239,248,7,249,6,10,14,16,250,5,238,224,37,25,247,246,192,230,
99,69,186,201,34,13,240,242,6,20,40,8,202,253,252,223,30,28,243,254,248,4,20,230,237,249,3,36,241,193,
242,36,30,1,236,244,210,226,85,78,227,203,203,250,47,5,1,51,35,246,234,194,208,30,54,42,15,211,226,21,
19,246,236,6,46,18,235,206,216,27,28,43,13,195,251,12,18,23,236,5,30,230,236,18,221,231,59,50,233,200,
14,62,239,220,41,240,240,39,14,222,244,48,41,244,223,242,251,216,246,62,31,224,245,25,7,220,232,4,5,19,
7,231,11,10,241,1,227,237,42,44,0,230,244,239,238,30,34,19,234,196,215,23,37,14,3,214,0,36,255,192,
185,50,91,43,253,218,226,244,2,250,243,41,28,243,10,9,226,245,242,246,63,33,239,21,212,202,11,37,53,32,
252,229,208,243,6,252,37,59,21,233,226,211,228,33,38,247,229,7,4,243,221,224,83,74,210,198,202,5,62,27,
245,232,17,3,210,25,76,241,185,29,80,236,201,228,20,78,39,240,185,200,56,76,13,237,223,200,246,48,32,251,
249,13,39,14,199,171,10,79,44,241,166,181,37,66,33,242,221,233,240,252,39,20,216,2,249,2,26,194,221,52,
40,18,7,243,219,227,14,26,48,21,206,241,13,217,254,43,3,0,30,241,221,5,12,20,49,28,202,178,227,13,
41,51,29,0,216,208,251,34,1,237,3,2,5,4,230,240,7,42,31,246,207,213,19,6,27,82,243,194,220,10,
42,32,230,208,63,60,192,239,16,251,34,47,2,229,13,4,199,3,62,47,248,190,197,253,17,37,55,231,151,37,
71,194,214,42,23,0,252,252,2,10,7,9,3,242,251,241,223,248,36,61,255,187,203,246,12,22,39,0,236,253,
232,11,52,8,202,199,6,68,42,241,236,5,255,0,15,249,0,243,252,60,38,215,184,231,37,66,34,229,237,17,
11,244,7,16,254,253,25,0,212,251,2,222,249,30,40,1,232,240,7,1,236,242,255,5,17,4,248,0,238,250,
252,244,29,24,243,212,245,22,222,6,56,245,215,3,0,1,20,240,8,14,222,42,72,223,213,234,15,33,21,11,
234,12,25,247,237,6,252,5,20,237,251,18,255,17,12,4,251,214,239,21,12,41,11,180,214,52,31,238,248,2,
8,29,247,216,2,40,248,240,7,243,22,18,233,246,245,238,34,52,249,252,253,221,241,1,26,35,229,218,10,41,
22,235,1,14,237,233,252,252,0,18,22,24,5,246,245,245,219,254,53,14,249,11,1,225,245,255,2,20,37,255,
214,224,16,22,249,234,224,253,17,250,3,249,227,233,255,54,44,225,209,209,232,60,95,239,172,222,31,27,252,12,
0,252,32,37,35,224,180,246,55,47,11,231,213,2,28,3,37,23,231,192,232,41,17,242,247,253,25,39,236,212,
244,18,45,244,245,1,221,8,28,252,253,13,230,216,14,23,35,33,243,5,11,245,230,241,29,24,0,12,16,0,
11,8,254,2,246,234,243,250,33,44,0,217,214,238,15,50,11,215,211,6,28,254,2,234,219,23,24,37,25,218,
243,255,233,246,25,13,251,28,11,14,33,223,174,0,60,0,240,248,232,254,18,21,29,26,208,187,13,11,50,48,
215,223,252,251,253,41,64,26,220,200,1,238,234,30,48,59,242,206,223,189,255,83,50,249,218,197,227,29,23,0,
250,236,236,9,36,231,203,21,33,251,249,219,221,243,51,33,243,240,223,21,15,0,51,252,191,17,68,32,242,238,
232,225,32,62,6,206,1,29,233,221,248,20,32,57,46,227,202,215,235,25,59,47,244,203,0,33,4,4,8,235,
208,231,20,36,19,253,1,241,228,0,21,12,246,248,0,47,10,214,229,215,12,55,27,243,200,236,32,52,47,5,
213,212,227,252,37,69,31,246,225,231,6,32,49,205,190,21,238,210,243,5,12,27,55,253,169,195,239,19,11,45,
63,219,192,4,255,246,27,11,249,38,52,38,14,237,235,234,11,64,36,8,255,237,251,13,244,229,246,31,49,35,
230,178,201,240,16,34,37,246,201,233,212,212,35,60,39,252,186,178,253,41,45,67,12,228,226,195,211,52,104,46,
225,238,244,248,21,237,232,59,69,15,191,169,251,50,67,33,253,232,212,236,245,254,26,14,252,242,245,221,193,246,
31,60,77,16,170,160,240,57,64,19,225,220,219,7,44,238,251,53,3,226,5,244,234,11,35,38,0,251,3,251,
11,17,8,251,241,240,8,20,251,0,238,248,43,0,234,4,243,251,29,250,242,52,44,229,207,250,11,7,49,30,
232,8,251,215,211,228,31,46,39,253,196,185,253,51,4,253,14,240,242,3,253,236,249,16,22,22,4,254,0,252,
248,238,249,243,252,27,8,222,235,22,12,242,229,232,14,44,26,246,240,254,13,7,236,249,38,20,10,33,220,198,
7,24,31,10,251,2,227,236,24,44,1,215,250,5,34,28,237,1,48,44,213,167,212,2,48,70,28,219,192,214,
42,68,236,236,9,252,237,242,11,29,14,234,213,219,232,20,57,32,246,194,196,239,26,53,35,28,246,228,241,3,
50,33,19,34,14,234,218,245,9,26,44,16,239,240,214,228,34,41,8,244,214,222,4,255,16,36,248,211,204,249,
22,19,14,237,224,235,248,233,241,41,84,35,204,213,15,2,236,5,30,37,246,193,220,23,65,66,8,223,224,210,
205,23,68,43,20,235,230,240,3,18,4,21,30,254,248,10,3,253,10,23,26,245,240,4,217,207,6,28,7,253,
226,197,1,41,13,248,212,224,242,247,25,45,39,226,225,18,19,25,9,220,7,67,43,243,193,197,14,94,77,8,
227,216,252,14,2,8,28,5,170,178,20,57,32,204,164,218,37,60,34,230,217,1,244,240,16,16,0,237,1,35,
252,232,228,227,40,50,9,221,200,7,84,73,26,244,174,182,39,81,49,17,194,183,0,28,45,27,227,230,2,12,
251,244,248,218,10,25,3,22,238,233,246,233,36,60,13,247,2,12,0,21,7,224,18,58,36,243,191,207,238,18,
32,28,33,3,238,251,14,251,217,239,3,3,33,6,218,227,251,36,40,245,207,194,218,25,54,10,233,3,249,231,
4,35,12,240,238,4,15,244,239,16,9,18,15,224,251,18,12,247,1,17,253,254,254,7,245,4,52,7,202,226,
6,14,17,22,242,214,3,33,21,19,228,199,252,38,65,44,214,187,232,11,37,61,22,197,179,227,17,34,31,12,
244,1,245,222,250,252,8,28,14,248,234,235,225,252,40,43,10,227,229,1,26,41,23,233,203,222,248,47,74,16,
237,216,235,29,27,251,2,250,220,236,6,0,9,49,56,15,218,197,210,249,46,46,16,251,225,225,2,13,11,32,
253,211,247,12,240,251,14,243,13,49,12,218,226,243,2,30,49,22,249,232,228,1,18,5,248,255,7,12,16,16,
246,230,3,23,19,0,235,233,14,49,17,254,235,205,249,12,35,16,215,218,3,30,245,218,223,222,248,31,41,17,
237,227,243,248,249,7,11,16,36,9,244,8,8,247,255,39,36,240,220,245,20,41,17,243,254,13,15,13,250,230,
238,252,11,15,9,1,11,22,253,223,232,8,0,255,6,248,230,236,0,1,13,19,255,242,227,230,3,18,250,241,
238,241,9,21,23,16,13,250,222,231,4,31,37,21,254,244,227,230,2,22,32,23,253,228,216,248,37,56,29,251,
214,209,243,13,39,42,247,236,239,240,18,246,254,31,246,235,3,245,250,10,13,22,20,11,239,228,227,4,17,6,
17,16,0,236,12,33,250,254,247,241,14,249,249,12,4,2,6,243,228,254,16,10,12,14,4,246,245,252,245,6,
19,3,15,5,248,250,247,2,255,0,12,1,240,228,247,20,30,4,231,235,251,253,231,240,35,34,254,254,248,226,
240,248,14,31,4,245,254,251,9,17,12,22,4,227,222,5,29,16,245,239,24,8,246,14,13,244,228,238,5,29,
18,5,249,229,250,3,15,15,247,241,237,248,18,2,3,10,253,7,2,232,237,0,116,8,28,0,1,1,1,0,
1,3,2,255,252,252,255,3,7,8,5,0,253,253,255,0,3,3,2,0,254,1,4,4,2,0,255,0,0,0,
0,0,3,5,4,0,253,249,250,253,0,0,254,253,254,1,8,10,5,255,244,238,239,246,245,231,228,234,249,20,
41,42,24,1,239,232,245,9,24,27,17,1,247,247,254,5,9,8,5,2,1,1,1,3,7,8,5,0,252,250,
250,253,1,6,8,6,4,0,255,255,0,0,0,254,253,254,255,0,1,4,7,6,2,255,251,249,252,2,7,7,
8,9,11,14,15,5,240,223,215,197,189,207,232,6,33,41,31,15,4,253,254,4,12,21,21,15,8,254,248,249,
255,2,1,0,3,3,0,254,0,3,6,9,9,6,6,7,2,0,2,255,254,255,251,253,1,2,1,0,1,1,
0,0,253,252,253,0,7,2,255,0,255,255,0,0,254,249,248,247,253,4,254,0,2,245,240,250,251,246,0,6,
0,4,10,3,1,6,3,4,5,7,8,12,2,252,0,2,0,9,7,255,6,12,254,254,9,251,241,6,13,247,
253,8,249,254,10,2,1,1,251,252,4,251,254,12,255,238,0,3,249,0,14,8,246,0,4,246,255,1,253,5,
3,252,252,255,250,1,9,0,0,6,252,249,1,4,10,2,0,5,242,253,15,255,252,9,255,244,4,11,0,4,
5,251,253,250,0,9,255,253,7,255,242,254,4,248,12,17,245,253,0,246,8,9,249,6,3,244,253,4,248,4,
10,253,0,7,2,4,254,0,254,252,254,251,252,9,6,13,6,247,252,5,250,6,4,251,2,2,252,5,4,0,
3,252,250,255,253,4,14,0,244,2,254,253,11,3,0,6,250,240,0,5,0,9,6,252,0,248,245,6,10,6,
2,252,4,250,253,5,7,6,0,255,5,252,252,0,3,2,252,255,5,248,0,5,245,251,17,6,0,9,249,248,
3,2,0,6,6,248,240,0,254,248,14,12,5,9,253,1,4,242,5,11,246,6,11,250,3,1,1,255,238,2,
0,237,12,14,243,7,10,249,9,12,246,3,2,242,1,12,250,254,11,2,248,0,248,244,4,246,252,16,0,10,
13,231,253,10,246,4,25,1,249,3,0,244,1,12,6,4,6,0,250,248,252,255,2,1,10,0,245,254,8,1,
0,11,1,241,1,0,243,15,15,240,11,11,231,1,16,250,8,11,246,250,252,250,0,6,7,2,16,0,240,4,
248,234,20,6,237,13,8,235,5,12,0,2,0,252,10,252,254,0,248,255,0,255,0,248,7,10,255,11,1,245,
9,5,248,3,2,248,1,9,4,7,255,1,13,249,247,9,248,245,15,8,4,14,247,246,11,246,242,19,0,245,
16,251,239,16,246,233,24,6,237,17,252,235,13,0,246,26,4,249,28,254,225,4,250,239,14,254,251,15,11,0,
255,249,254,255,0,253,12,17,254,249,247,249,10,10,0,4,3,252,0,250,240,9,12,248,10,12,246,2,255,246,
11,2,247,18,11,241,4,2,233,10,15,243,0,2,247,3,254,254,19,8,251,0,252,240,243,4,4,9,19,0,
248,10,239,239,18,252,1,22,248,247,14,251,2,9,241,253,4,243,5,13,0,5,255,253,1,254,4,244,246,27,
255,252,22,250,234,6,7,251,3,15,250,248,7,240,232,19,12,253,27,6,227,6,255,234,15,16,0,13,2,246,
0,7,249,241,7,7,247,18,2,245,19,255,230,10,245,249,34,7,247,28,249,223,2,2,250,13,13,249,249,245,
3,13,255,251,5,241,246,19,2,251,16,249,235,12,8,250,7,254,238,0,12,3,248,11,11,251,20,0,230,22,
7,249,10,239,242,21,243,250,24,252,244,11,249,250,8,9,2,247,250,0,251,12,8,253,11,6,249,254,255,0,
247,252,15,0,242,10,10,254,245,250,6,253,250,21,255,241,0,1,255,247,2,27,241,247,25,255,236,3,237,244,
13,10,15,19,3,11,250,233,11,15,247,8,4,239,13,0,235,10,12,241,254,3,246,24,22,243,10,244,214,6,
6,254,39,12,239,4,6,241,248,16,253,251,18,241,238,31,238,217,41,8,215,35,20,216,17,18,225,9,7,236,
12,7,238,4,255,255,20,241,252,31,0,243,20,8,238,6,1,6,252,234,18,18,235,14,250,242,14,252,249,26,
251,233,253,13,251,232,22,33,242,250,30,239,225,16,2,217,26,31,232,251,27,248,247,6,255,4,4,243,9,8,
243,3,0,9,13,226,12,5,218,40,38,230,26,242,233,13,233,248,41,236,245,31,234,245,19,233,2,17,231,4,
11,230,254,13,247,16,20,7,8,246,240,0,243,8,36,2,229,22,15,229,13,6,245,4,0,243,244,9,26,232,
14,45,217,245,34,212,255,51,235,235,50,245,248,36,228,220,18,238,250,27,244,238,12,245,248,14,254,254,25,6,
248,7,238,254,27,2,249,6,235,9,7,11,5,248,252,253,230,249,24,3,240,42,23,233,10,254,219,3,0,233,
18,18,235,3,29,0,234,247,247,252,254,11,21,0,253,253,237,11,42,237,252,29,232,225,21,254,7,8,219,249,
39,231,22,47,219,6,41,225,9,11,221,3,19,250,1,9,240,252,4,255,11,239,254,23,254,237,22,253,245,19,
247,237,14,245,244,21,5,244,1,1,6,251,253,37,7,230,37,17,207,6,31,229,242,28,251,234,13,244,250,24,
249,3,13,214,18,47,242,12,3,245,44,7,224,43,255,223,45,245,233,22,252,255,255,203,245,221,170,235,244,185,
26,35,218,12,20,237,40,35,238,43,32,236,46,20,220,62,253,205,55,6,197,57,251,209,49,23,225,43,244,227,
23,20,244,0,18,12,221,245,47,234,243,48,249,193,37,13,210,11,34,254,10,244,25,4,215,13,17,201,22,7,
187,38,30,204,40,12,212,9,242,230,21,220,0,45,229,236,25,249,17,23,253,10,254,24,242,239,17,240,230,41,
5,216,19,29,222,11,62,219,202,48,245,216,44,21,213,21,1,229,253,11,0,8,233,19,9,252,254,252,16,40,
241,251,13,230,249,17,2,0,9,19,3,238,15,241,251,24,248,4,4,231,235,245,7,37,14,253,14,3,221,0,
233,245,25,4,3,67,225,220,55,231,194,74,230,203,79,237,180,76,232,231,116,223,210,46,174,240,68,180,34,50,
185,40,39,162,23,38,217,29,41,200,28,28,200,11,38,194,16,45,244,4,13,231,6,7,211,35,19,217,0,14,
240,15,14,12,254,250,24,245,252,32,224,0,44,204,13,21,223,37,248,194,77,6,179,56,20,171,37,22,184,47,
22,226,56,231,204,78,231,199,69,235,210,63,229,228,82,221,215,85,191,216,86,229,225,90,220,209,51,246,211,59,
12,222,47,249,179,63,21,160,89,23,159,66,27,130,31,55,192,12,60,209,3,56,232,247,42,243,226,33,243,198,
23,9,216,36,16,201,251,25,255,245,18,22,250,8,19,210,17,9,237,50,11,201,45,8,207,36,251,239,37,238,
215,49,1,222,56,26,210,251,245,236,34,19,238,1,25,205,236,50,243,216,46,14,219,12,1,220,37,31,215,23,
5,224,15,17,248,24,218,236,36,210,32,44,182,24,92,168,243,73,212,241,60,226,237,43,212,250,36,252,254,29,
220,18,4,218,11,17,224,68,35,166,19,7,191,49,42,220,32,246,246,16,200,21,79,208,16,59,150,233,49,212,
16,52,232,253,19,210,228,0,7,10,22,23,249,214,37,251,199,20,41,224,36,27,185,2,25,208,33,52,207,15,
28,218,18,17,238,48,16,200,17,253,213,41,29,223,4,0,0,29,247,230,5,242,248,31,17,235,244,239,27,11,
245,27,239,226,58,9,206,19,244,239,76,253,210,20,254,254,25,237,249,41,12,228,249,253,236,2,40,18,210,247,
12,243,239,232,246,13,240,37,27,213,23,41,196,247,46,233,237,25,0,242,6,238,0,31,4,249,9,254,238,248,
25,26,237,244,21,238,242,32,251,225,5,255,221,14,19,244,18,7,13,22,243,253,236,246,35,15,243,25,2,243,
18,15,247,22,248,237,35,0,231,8,246,245,14,246,5,3,231,16,232,228,19,253,245,34,251,250,30,240,231,33,
251,240,13,228,247,33,223,3,44,248,253,10,252,7,30,33,0,3,14,7,249,246,0,247,241,23,11,253,1,229,
230,16,248,234,11,222,224,38,0,217,31,0,206,47,5,206,54,20,207,32,18,204,19,67,209,237,49,209,228,60,
217,229,66,241,214,50,9,224,38,3,215,31,10,231,36,5,223,14,24,220,2,39,210,215,58,239,204,51,254,201,
33,0,203,30,28,222,18,38,211,236,47,220,241,40,253,237,47,43,214,6,53,240,0,47,252,0,42,20,244,9,
6,244,4,19,3,252,7,4,226,245,24,244,253,37,245,225,20,242,223,11,8,241,21,21,233,0,12,221,254,13,
221,0,8,211,243,249,242,251,0,228,241,250,236,11,7,243,16,1,250,7,253,247,8,1,247,20,6,218,12,27,
249,11,29,249,6,7,255,16,255,6,40,6,2,30,10,249,251,6,244,239,2,2,253,10,22,253,6,25,252,247,
28,1,233,2,251,227,1,15,228,244,8,234,249,22,255,252,9,3,239,0,11,5,246,0,5,253,8,3,250,242,
4,5,235,243,15,245,247,8,244,246,8,4,251,13,254,255,11,12,9,14,28,12,255,13,6,250,3,11,4,10,
23,0,236,1,15,251,4,11,250,255,4,247,249,8,253,253,12,255,237,251,3,246,248,245,238,250,3,254,8,5,
1,252,1,253,241,7,15,237,240,0,232,248,15,248,237,242,232,247,254,242,250,250,252,1,0,251,5,251,2,11,
232,11,45,0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,12,12,12,12,12,12,12,13,13,13,13,14,
13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,14,14,14,14,14,14,14,14,
14,14,14,14,14,14,14,14,15,15,15,15,15,15,15,15,15,15,15,15,15,15,16,16,16,16,17,17,16,16,
16,16,16,16,16,16,16,17,17,17,17,16,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,
17,17,17,17,17,17,17,17,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,
18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,17,17,17,17,18,17,17,17,17,17,17,
17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,16,16,
16,16,16,17,17,17,16,16,16,16,16,16,16,16,16,16,16,16,16,17,16,16,16,16,16,16,16,16,16,16,
16,16,16,16,16,16,16,16,16,16,16,15,16,15,15,15,15,16,15,15,15,15,15,15,15,15,15,15,15,15,
15,15,14,14,14,14,14,14,14,14,14,13,13,14,13,13,13,13,13,13,13,12,12,12,12,12,12,12,12,12,
12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,
10,10,10,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,
9,9,9,9,9,9,9,9,9,10,9,9,9,10,10,10,10,9,9,9,10,10,9,9,9,10,10,10,10,10,
10,10,10,9,9,9,9,9,9,9,9,9,9,9,9,9,10,9,9,9,9,9,9,9,9,9,9,9,9,9,
9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,10,10,10,10,10,
10,10,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,
11,11,12,12,12,12,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,14,14,
14,14,14,14,14,14,14,14,14,14,14,14,14,14,15,15,14,14,15,15,15,15,15,15,15,15,15,15,15,15,
15,15,15,15,15,15,15,15,15,16,15,15,16,16,16,16,16,15,15,15,15,15,15,16,16,16,16,16,16,16,
16,16,15,16,16,16,16,16,16,16,16,16,16,16,16,16,16,17,16,16,16,16,17,17,16,16,17,17,17,17,
16,16,16,16,17,17,16,17,17,17,17,17,16,17,17,17,17,17,17,16,17,17,17,17,17,17,17,17,17,17,
17,17,17,17,17,17,17,17,17,16,16,16,16,16,16,16,16,16,16,16,16,16,16,15,16,16,16,16,15,16,
16,16,16,16,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,14,
14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,13,13,13,13,14,13,13,13,13,13,13,13,
13,13,12,12,12,12,13,13,13,13,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,
11,11,11,11,11,10,10,10,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,10,10,10,10,
10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,
10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,
11,11,11,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,10,10,10,10,10,10,10,10,10,10,10,10,
11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,12,12,12,12,12,12,12,12,12,
12,12,12,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,
13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,11,9,3,0,0,12,42,58,34,
0,250,6,11,11,14,16,14,14,19,23,24,20,14,10,10,11,13,17,22,23,20,15,13,15,17,18,18,16,13,
12,14,19,22,23,21,17,14,12,13,17,20,21,21,19,17,16,16,17,17,18,19,20,19,17,17,19,19,17,17,
17,17,18,19,19,19,17,16,15,16,17,19,20,20,18,17,16,17,17,17,17,18,19,18,17,16,17,17,18,18,
17,16,16,17,17,17,18,18,19,19,18,17,15,17,18,16,16,19,20,17,16,18,18,17,16,17,18,18,17,17,
17,18,18,17,16,17,17,17,16,17,18,17,17,18,18,18,16,16,14,8,249,229,213,226,37,119,127,62,10,0,
241,208,200,228,1,13,22,44,70,85,77,49,14,239,221,226,248,11,13,5,5,20,35,46,55,61,51,13,214,182,
207,7,48,60,61,55,37,12,254,0,3,0,253,3,17,30,42,46,36,16,255,243,246,10,29,26,16,15,9,247,
227,214,223,9,67,95,76,37,8,0,1,0,255,249,238,245,24,54,52,41,38,18,239,227,250,22,32,33,32,23,
6,0,14,26,12,250,251,5,13,24,31,28,21,17,11,1,0,0,3,15,25,17,7,13,29,34,14,243,244,14,
24,6,252,5,24,34,22,10,14,15,0,253,18,22,1,253,14,20,13,10,12,21,25,11,254,6,19,16,6,6,
8,10,21,29,17,254,249,6,29,36,12,251,4,13,8,16,27,19,10,7,0,7,32,30,251,240,14,36,20,11,
22,15,0,2,10,20,29,10,239,3,45,35,251,2,39,29,243,233,8,47,42,5,249,10,23,19,12,6,9,17,
20,13,3,9,28,33,12,240,239,11,44,48,23,0,247,247,5,31,43,28,6,0,6,6,3,13,20,15,13,20,
21,11,8,22,22,250,243,14,26,17,26,42,19,237,240,30,45,2,240,19,35,10,8,30,25,7,13,19,253,237,
11,57,52,2,233,4,34,23,8,18,25,8,1,20,32,21,8,8,10,9,6,16,42,48,16,241,244,18,44,39,
18,4,247,244,20,63,44,248,249,28,28,8,7,15,20,27,17,3,14,31,19,250,248,9,16,252,221,216,242,20,
55,92,103,60,3,241,250,244,228,252,47,54,11,8,68,92,33,216,200,251,45,30,9,55,79,9,225,18,41,10,
13,39,26,247,225,251,61,76,22,4,34,31,1,246,252,12,33,47,37,0,239,26,60,20,244,24,43,0,237,21,
56,33,251,241,9,58,67,13,242,13,14,246,12,38,18,8,24,28,23,17,14,26,22,246,248,27,33,25,32,11,
239,8,50,35,255,249,17,40,29,2,5,34,19,234,6,69,43,241,251,21,37,51,16,207,211,32,90,74,14,230,
237,17,44,41,9,236,253,35,36,19,21,13,13,50,38,212,204,50,94,18,228,5,34,32,22,2,253,19,17,249,
19,64,47,1,236,239,15,44,24,253,21,40,3,239,11,41,39,31,12,229,222,3,41,46,33,12,4,26,27,242,
220,8,59,41,252,252,10,4,11,41,38,252,234,14,48,20,236,235,22,60,34,228,238,55,67,4,205,208,18,85,
66,253,228,240,2,39,53,20,0,253,232,245,48,50,248,235,26,64,31,209,194,39,106,18,191,238,56,47,253,243,
24,32,246,249,43,33,242,252,17,0,8,41,32,254,245,0,3,12,36,47,18,232,232,24,50,7,225,248,35,45,
31,0,215,239,64,80,0,210,241,20,26,28,15,250,0,32,43,13,246,244,2,17,16,10,24,27,245,251,42,33,
252,254,250,246,30,47,10,2,20,5,243,10,37,28,10,252,240,254,31,54,33,240,214,254,67,70,242,200,7,46,
15,19,36,253,228,15,34,11,12,19,3,13,36,7,237,14,28,254,5,37,14,249,26,37,247,232,23,47,13,243,
253,12,24,52,48,253,235,5,8,245,5,41,46,16,2,21,22,241,221,20,88,59,216,193,34,98,30,225,254,10,
248,32,85,37,217,230,26,30,14,28,38,24,255,240,5,40,24,242,18,75,50,242,227,242,13,56,59,11,242,253,
17,40,39,11,250,253,15,50,56,3,222,0,41,26,19,41,24,233,244,47,45,0,1,37,30,3,7,23,24,9,
2,9,16,34,54,38,254,237,245,0,27,61,55,9,246,10,14,2,19,44,33,252,237,16,69,54,238,225,30,58,
25,252,238,244,50,97,26,201,231,37,43,48,41,241,233,35,37,254,26,59,1,207,249,44,63,68,30,222,213,1,
37,53,44,1,240,27,43,0,1,45,28,236,248,26,28,24,23,16,27,35,6,243,5,21,25,29,21,9,12,13,
9,26,40,17,235,235,29,78,61,254,225,240,6,38,55,24,251,6,23,21,25,24,3,253,15,24,25,23,11,11,
29,27,13,9,254,255,33,54,21,245,3,31,25,0,255,27,48,20,238,244,31,52,30,246,234,13,45,33,4,1,
15,26,21,0,244,7,46,47,6,239,3,24,11,8,30,26,250,251,17,31,37,9,225,250,47,36,0,1,19,17,
1,3,19,18,5,19,28,253,240,10,26,21,25,19,0,250,3,18,25,24,12,255,252,16,38,7,226,10,83,51,
215,199,5,56,48,7,238,2,26,13,0,24,35,4,247,12,12,254,10,21,9,2,13,29,32,12,242,254,27,18,
243,239,16,54,50,10,242,253,8,3,14,38,22,242,244,12,35,47,20,230,241,30,22,4,36,41,234,214,22,58,
26,254,253,13,32,30,3,247,6,16,9,18,41,27,243,242,22,44,22,3,6,253,248,29,55,14,241,12,38,18,
251,8,35,23,239,231,18,60,48,12,6,250,215,246,83,94,3,210,225,243,26,85,73,250,206,238,38,64,29,226,
222,32,84,34,203,218,63,74,236,209,25,66,36,4,248,237,241,15,57,61,6,222,249,47,54,5,224,247,35,40,
12,5,19,5,247,27,64,25,226,238,31,42,22,4,247,252,28,49,46,28,247,221,246,33,57,53,12,229,248,42,
43,0,239,13,45,47,32,0,231,253,34,31,16,25,30,8,254,28,44,10,242,6,31,30,30,33,14,248,253,17,
26,33,44,30,253,248,15,24,18,15,15,23,29,18,7,12,26,37,28,247,230,19,61,38,4,8,10,2,21,46,
39,12,244,235,13,58,40,0,10,38,17,242,5,47,44,1,246,17,36,27,10,12,21,8,0,24,50,39,8,250,
9,28,2,242,31,67,32,0,8,13,7,7,20,34,29,14,7,2,0,27,56,35,247,240,15,36,24,9,14,24,
15,3,14,32,30,17,0,239,2,54,55,4,246,21,26,254,253,25,45,27,254,255,18,21,13,21,31,14,249,253,
7,21,48,50,7,233,247,20,32,22,16,18,15,9,7,8,20,34,21,253,0,25,31,6,0,26,36,5,239,9,
54,46,1,245,255,0,16,44,45,11,240,0,31,29,7,0,13,33,29,0,246,8,35,35,4,253,27,28,243,247,
52,59,250,217,254,31,30,28,21,4,2,12,12,17,31,18,242,241,21,38,15,9,33,27,247,243,12,19,11,20,
31,13,0,8,4,252,20,38,13,247,6,20,18,34,30,240,221,5,35,26,15,13,20,21,254,241,13,36,15,247,
250,7,29,45,17,239,255,19,2,1,22,18,10,13,4,7,30,20,238,242,27,32,11,15,12,247,3,32,15,252,
11,16,247,249,37,53,5,219,245,34,39,8,247,3,18,11,6,26,32,0,232,248,21,29,20,15,9,5,9,8,
2,3,2,4,27,35,7,254,17,9,246,10,32,13,249,3,27,30,13,0,3,11,12,6,255,253,15,46,48,11,
236,240,1,16,30,32,10,240,251,35,53,27,239,222,251,38,51,27,252,241,4,33,33,12,0,253,252,12,36,34,
10,255,9,17,11,13,22,9,244,4,40,44,15,241,241,21,43,20,0,3,12,17,19,17,15,6,0,18,39,17,
241,251,22,20,12,28,42,19,240,235,9,38,34,13,9,19,5,249,23,49,19,240,254,31,32,7,1,13,18,21,
27,21,9,8,4,2,20,37,28,15,16,15,5,253,4,25,37,33,23,12,7,5,5,14,24,18,14,28,38,25,
253,241,2,29,38,30,21,16,5,254,8,24,29,32,26,8,8,19,9,254,19,42,30,8,5,13,17,15,14,11,
9,17,39,46,14,234,241,18,31,22,25,34,31,13,246,242,11,35,34,29,26,9,250,255,17,30,27,8,2,27,
41,19,255,2,6,4,13,32,41,27,6,4,18,16,254,252,19,40,33,11,6,12,7,8,31,41,14,242,248,20,
42,35,7,248,5,25,27,21,23,22,1,242,5,35,32,13,13,24,21,8,255,4,21,27,20,13,9,11,22,23,
8,5,19,21,8,2,10,25,36,27,1,248,12,30,13,252,18,40,14,248,11,30,20,11,14,8,1,9,22,22,
15,11,10,10,13,15,16,17,17,10,2,6,17,19,15,16,15,10,9,13,12,10,14,15,13,11,8,7,13,17,
12,11,21,18,2,255,9,13,14,19,16,9,8,9,5,6,18,24,13,255,4,20,17,3,8,19,10,253,2,20,
23,11,5,13,17,7,1,6,12,15,13,8,2,6,18,24,13,0,1,12,10,2,11,20,12,2,4,10,16,15,
6,3,12,14,8,10,14,9,4,7,8,7,14,23,19,5,0,8,14,12,9,7,6,12,17,10,2,9,21,22,
11,0,0,12,16,10,9,12,8,7,13,12,7,11,21,21,11,4,5,10,9,3,218,12,24,0,23,23,23,23,
23,23,23,23,23,23,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,21,22,22,22,
21,21,21,22,22,22,22,22,22,22,22,22,22,23,23,23,23,23,23,23,22,23,22,22,22,22,23,23,23,23,
23,23,23,23,23,23,23,23,23,23,24,23,23,24,23,23,24,24,24,24,24,24,24,24,24,24,24,24,23,23,
23,22,22,22,23,23,23,23,23,23,23,23,23,23,23,24,24,24,23,23,23,23,24,24,24,24,24,24,24,24,
24,24,24,24,24,24,24,24,24,24,24,24,25,24,24,24,25,25,25,25,25,25,25,25,25,25,25,25,25,26,
25,26,26,26,27,27,27,27,27,27,28,28,28,28,28,28,28,27,27,27,27,28,28,28,28,28,28,28,29,29,
28,28,28,28,29,28,28,28,29,29,29,29,29,29,29,29,29,29,30,30,29,29,29,30,29,29,29,29,29,30,
30,30,29,29,29,29,29,29,29,29,29,29,29,29,29,29,28,28,28,29,29,29,29,29,29,29,29,29,29,29,
29,29,29,28,28,28,28,28,28,29,29,29,28,28,28,28,28,27,27,27,27,27,27,28,28,28,27,28,28,28,
27,27,27,27,28,27,27,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,
28,28,28,28,28,28,28,28,28,28,28,28,28,29,28,28,28,28,28,28,28,28,28,28,28,27,27,27,27,27,
27,26,26,26,26,26,26,27,26,26,26,26,26,26,26,26,25,25,25,25,25,25,25,25,25,25,25,25,25,25,
25,25,24,24,24,24,24,24,24,24,24,23,23,23,24,23,23,23,23,23,23,22,22,22,22,22,22,22,22,22,
22,22,22,22,22,23,22,23,22,22,22,22,22,22,22,22,22,22,22,22,22,21,21,21,21,21,21,21,21,21,
21,21,21,22,22,22,22,21,21,21,21,21,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,
22,22,22,21,21,22,22,23,22,22,22,23,23,23,23,22,22,22,22,22,21,21,21,21,21,21,21,22,22,22,
22,22,22,22,22,23,22,22,22,22,22,22,22,22,23,23,23,23,23,22,22,22,22,22,22,22,22,22,23,23,
23,23,23,23,23,22,22,22,22,23,23,23,23,22,22,23,23,23,23,23,23,23,22,22,22,22,23,24,24,24,
24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,25,25,25,25,25,25,25,25,25,26,26,26,26,26,
26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,27,27,27,27,27,
28,27,28,28,28,28,28,28,28,27,27,27,27,27,28,28,28,28,28,28,28,29,29,29,28,29,29,29,29,29,
29,29,29,29,29,29,30,30,30,30,31,30,30,30,30,30,30,29,30,30,30,31,31,30,30,30,30,30,30,30,
30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,29,30,29,29,29,29,29,29,29,29,
29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,28,28,28,29,29,29,28,28,28,28,28,28,28,
28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,27,27,27,28,28,28,28,
27,27,28,28,28,28,28,28,28,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,26,26,
26,27,27,26,26,26,26,26,26,26,26,26,25,25,26,26,26,25,26,26,26,25,25,25,25,24,25,25,25,25,
25,24,24,24,24,23,23,23,23,23,22,23,23,23,23,23,22,23,22,22,22,22,23,23,23,22,22,22,22,22,
22,22,22,21,21,21,21,21,21,21,21,20,21,21,22,22,22,21,20,19,19,19,20,20,20,21,20,20,20,21,
22,21,20,20,18,1,223,195,201,247,42,74,82,63,30,3,239,210,185,197,243,24,43,60,71,65,53,43,28,6,
246,241,247,6,31,56,69,66,48,24,2,250,253,5,14,23,30,34,37,38,33,25,18,11,7,3,4,12,23,33,
39,39,34,24,14,7,4,5,16,34,44,35,22,16,24,25,13,9,24,35,27,11,13,31,44,39,22,12,10,13,
18,26,35,39,32,17,10,15,22,30,36,34,24,14,15,26,34,30,20,22,25,24,23,26,28,26,31,38,23,4,
8,37,49,32,15,16,28,32,25,22,23,19,25,32,34,27,22,19,20,30,36,33,23,18,14,21,26,32,45,43,
15,242,252,15,17,6,21,48,55,54,39,12,4,29,52,25,7,27,38,17,18,53,54,23,19,42,37,3,252,33,
64,47,12,14,33,42,35,31,16,13,44,47,5,4,42,51,32,29,35,8,15,39,52,39,35,41,16,254,12,66,
73,32,254,252,40,71,52,15,24,50,32,3,10,44,49,33,31,31,11,234,227,236,6,39,50,44,23,28,57,60,
34,34,41,26,14,18,22,38,67,70,35,1,1,27,53,49,27,20,29,27,11,9,39,66,51,41,28,249,240,27,
71,48,16,32,34,8,23,61,40,9,27,37,13,1,38,56,28,35,74,29,206,243,85,88,29,37,44,253,229,28,
76,58,26,24,29,16,26,31,42,39,24,15,15,48,53,23,4,31,50,35,29,32,28,23,25,14,29,51,23,3,
45,75,18,231,26,88,47,244,247,31,48,44,33,22,21,30,38,21,12,15,39,68,39,249,5,39,23,1,34,83,
51,235,246,51,57,18,25,24,246,248,71,98,15,231,1,28,32,46,70,19,227,4,59,49,23,4,252,27,48,24,
22,78,39,214,230,56,60,252,22,68,26,212,12,82,34,236,22,74,18,232,22,59,36,247,13,55,25,1,24,53,
17,237,2,36,34,33,69,27,213,246,65,42,248,4,46,52,20,18,13,245,24,66,39,237,244,35,27,34,57,36,
251,245,40,25,243,15,52,64,7,211,0,87,73,244,227,29,53,247,245,66,72,0,246,28,19,250,22,72,41,235,
238,22,70,59,5,0,26,19,245,7,58,67,25,19,34,248,217,14,84,79,5,243,2,9,37,57,33,253,255,27,
49,43,15,6,31,63,14,201,255,89,76,245,251,57,67,7,235,19,21,0,50,86,25,226,7,45,25,4,35,57,
28,39,37,239,231,44,73,9,241,43,62,3,237,67,91,253,219,11,33,33,25,45,54,15,19,29,4,249,46,78,
7,229,36,79,64,23,238,248,38,51,36,21,8,20,52,28,239,19,69,58,27,21,24,247,236,47,64,25,42,80,
30,241,254,23,59,59,39,0,235,39,67,41,39,46,12,237,255,47,81,69,21,1,12,26,41,34,35,59,57,254,
238,68,79,10,255,35,45,2,15,71,94,40,217,246,69,58,251,14,92,59,243,20,74,8,229,75,97,6,221,25,
67,51,42,55,21,240,36,52,20,34,55,22,6,42,78,31,229,252,82,122,40,207,229,59,71,32,20,33,63,34,
246,2,54,89,62,17,239,242,37,57,27,24,58,65,25,11,41,40,254,255,34,46,62,62,18,243,25,88,53,0,
23,28,254,252,67,93,12,241,34,55,15,255,53,59,36,23,16,11,13,51,63,20,247,36,76,45,8,1,14,37,
41,45,26,0,22,59,43,25,41,31,252,3,33,70,64,24,33,9,242,18,64,51,18,16,25,16,36,73,38,235,
237,39,48,22,39,37,8,23,55,17,234,10,36,38,37,32,0,251,24,39,33,35,20,0,32,44,28,21,38,20,
238,29,90,56,235,254,33,25,29,69,55,246,245,31,37,6,31,65,32,234,243,59,71,5,221,1,42,44,42,14,
252,23,41,21,4,13,32,27,250,9,43,44,37,22,5,5,14,14,26,38,16,0,31,48,27,255,254,251,10,64,
70,12,220,243,35,22,244,25,71,45,239,241,11,254,15,65,42,235,225,8,45,56,35,251,232,4,39,27,249,8,
46,26,251,17,35,18,0,10,30,17,14,20,18,6,254,9,28,28,16,39,54,4,202,226,21,57,71,46,1,227,
245,24,29,22,14,22,45,20,240,10,40,30,8,250,13,48,45,15,253,254,13,18,39,41,250,231,15,67,56,21,
245,247,5,249,228,230,4,10,12,18,248,233,6,43,59,32,236,247,49,73,37,9,13,29,35,23,13,8,18,36,
36,16,4,27,47,15,254,30,61,39,250,246,17,22,24,36,20,0,3,18,22,28,33,16,252,3,29,39,37,34,
20,13,27,34,15,13,46,63,52,14,247,8,45,66,44,7,1,19,34,35,22,30,46,47,18,252,5,12,30,57,
56,28,253,3,30,26,20,33,38,33,37,34,16,14,32,50,40,5,255,29,59,61,33,19,33,38,8,248,24,61,
61,28,11,28,39,34,31,41,30,10,25,56,25,254,29,42,25,32,57,42,20,20,20,16,39,60,38,2,16,71,
69,20,22,41,44,35,23,37,31,22,44,66,37,1,9,36,51,25,26,58,42,3,2,35,49,34,18,10,29,56,
53,19,5,15,29,41,34,36,26,18,33,60,61,42,14,251,17,56,69,34,16,26,28,33,40,42,34,28,28,23,
25,43,49,22,16,42,48,26,24,44,54,35,24,26,9,17,63,71,15,248,24,76,78,17,231,1,53,57,23,18,
39,25,252,28,86,54,0,2,49,55,1,10,66,77,42,10,4,25,34,28,21,39,68,48,9,8,41,47,28,29,
20,16,35,66,68,12,246,32,56,46,29,24,27,22,35,62,52,10,244,21,74,75,20,13,51,38,251,0,40,48,
26,30,33,25,21,38,44,19,14,21,15,5,37,70,55,15,0,3,18,45,40,24,29,41,34,17,5,19,39,45,
31,25,50,65,3,221,0,58,52,1,14,52,53,22,250,0,53,72,37,251,239,23,69,56,21,19,49,45,252,247,
27,57,55,52,17,247,19,25,27,56,77,38,239,250,19,43,75,75,14,223,16,87,81,22,237,244,36,68,40,255,
9,69,66,29,33,22,246,16,72,70,27,22,32,14,15,22,43,48,64,76,19,247,22,22,253,30,93,71,2,12,
58,50,7,2,37,48,29,31,36,22,11,20,36,30,33,43,22,7,26,50,55,50,21,3,250,22,73,66,34,18,
39,35,4,0,21,44,33,26,40,39,15,3,48,75,28,238,3,31,30,49,52,25,13,36,41,15,1,13,38,56,
54,21,249,32,66,32,252,25,65,31,242,249,54,80,47,17,7,11,9,21,37,50,41,27,36,20,240,2,54,68,
41,26,16,18,24,30,32,31,31,32,24,254,17,47,45,22,30,37,25,17,19,13,13,54,61,30,248,3,42,62,
48,13,12,37,36,21,12,42,63,47,28,16,25,19,17,32,61,58,19,17,39,39,25,36,56,30,20,38,42,28,
18,21,21,54,75,37,249,244,11,31,66,72,22,248,7,38,38,41,50,35,255,5,48,54,31,23,16,20,51,64,
40,3,1,46,37,1,28,67,41,0,19,51,36,17,25,37,31,44,64,35,0,18,30,24,18,34,58,49,34,17,
25,13,3,28,51,49,25,30,42,37,24,28,40,6,4,41,59,55,47,40,12,6,27,24,17,51,75,42,0,12,
45,34,13,19,26,28,44,66,51,16,0,6,29,60,69,46,24,21,14,13,36,57,56,37,25,13,16,42,57,43,
35,30,10,19,60,66,19,16,49,42,14,11,26,42,42,23,12,20,50,55,46,47,33,250,248,51,71,29,9,41,
53,37,46,56,31,255,6,33,40,43,43,28,14,26,50,41,16,39,50,19,0,6,21,44,59,35,0,255,47,91,
70,20,245,254,39,44,17,12,38,63,40,8,20,41,21,1,24,37,10,242,21,54,68,54,7,248,12,30,21,17,
24,38,24,11,19,17,18,38,48,38,16,0,1,1,19,45,47,34,18,16,33,27,19,27,40,37,3,248,13,21,
17,30,64,80,32,240,2,24,255,240,42,71,17,248,30,48,21,20,30,7,233,1,50,46,16,10,9,0,16,42,
49,35,18,9,7,23,29,8,3,20,41,51,44,36,21,4,247,6,35,31,20,17,15,20,50,56,22,255,1,12,
21,35,20,243,252,35,36,24,28,25,6,3,33,43,17,5,10,16,37,52,37,26,29,35,28,12,11,27,23,5,
2,16,44,54,29,5,19,19,253,7,30,14,0,26,51,30,0,4,37,46,29,19,12,12,15,14,3,2,29,48,
27,6,18,43,19,237,5,52,45,14,11,19,26,52,53,10,4,37,34,3,14,40,25,255,17,43,28,5,14,36,
23,11,18,28,41,41,250,212,251,68,83,46,18,4,251,13,60,64,19,254,0,22,43,37,26,41,46,23,0,1,
17,23,27,33,29,14,22,49,32,245,241,22,57,61,41,8,238,247,24,41,34,29,28,17,254,2,45,65,31,0,
6,10,4,17,41,51,44,21,0,9,22,28,38,33,8,5,30,29,28,35,28,3,5,46,60,28,3,5,11,28,
42,56,53,21,240,2,40,46,43,37,27,17,17,14,9,19,43,41,25,26,34,28,29,35,23,9,12,32,34,31,
37,35,17,17,38,42,33,28,30,22,24,37,32,14,12,30,34,32,47,50,31,17,8,1,11,29,47,56,39,22,
16,26,46,50,48,28,0,4,34,46,35,19,10,17,33,38,28,18,27,32,13,3,25,51,39,14,12,27,37,35,
28,25,23,29,36,22,14,16,27,41,39,34,32,31,28,24,25,34,32,12,9,29,42,32,20,24,28,26,32,30,
21,10,7,18,39,46,38,30,21,21,21,26,36,36,11,6,32,38,28,34,39,29,17,17,28,37,33,17,14,22,
22,18,29,40,35,23,21,34,31,10,255,6,19,26,33,31,21,19,27,33,31,27,19,6,11,30,22,5,16,33,
40,39,31,23,8,5,21,31,22,11,17,30,38,32,25,26,31,28,20,18,19,20,26,41,34,3,247,17,43,39,
29,31,24,10,6,5,1,9,31,39,17,0,13,36,31,14,8,10,20,29,19,6,11,25,24,21,34,39,19,4,
19,32,26,23,33,19,249,0,35,43,25,21,27,19,4,15,27,20,16,19,17,9,13,28,37,31,27,30,26,17,
13,17,18,19,32,42,35,23,22,26,23,18,27,34,33,30,17,8,13,31,34,30,36,34,23,18,17,16,24,32,
27,13,9,21,33,32,26,27,26,17,9,13,24,31,32,31,28,19,13,20,31,31,29,32,31,20,12,13,25,32,
30,24,22,28,26,17,16,22,27,31,33,26,16,20,27,30,29,30,26,17,19,25,27,25,26,31,30,21,15,18,
26,34,36,28,15,10,21,29,27,28,35,33,23,20,24,26,29,35,31,21,18,22,28,30,27,27,31,33,30,22,
18,23,33,35,26,19,25,32,28,26,29,30,26,26,26,19,0,0,175,0,4,0,1,0,44,1,66,3,196,4,
130,10,112,13,48,15,32,28,45,50,30,64,60,39,31,20,9,5,186,152,120,120,120,120,192,155,135,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,44,1,
66,3,196,4,130,10,112,13,48,15,32,28,70,104,44,92,87,57,44,29,13,7,186,152,120,120,120,120,192,155,
135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,
1,0,44,1,66,3,216,4,240,10,112,13,48,15,32,28,60,80,45,77,82,54,42,27,13,6,186,152,120,120,
120,120,192,155,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,
1,250,0,0,1,0,44,1,66,3,216,4,84,11,152,13,80,15,32,28,0,30,37,35,56,37,29,19,9,4,
186,152,120,120,120,120,192,155,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,
188,40,60,182,64,250,23,8,45,0,5,0,1,0,240,0,212,2,106,4,200,10,2,13,238,14,192,27,45,61,
34,63,75,41,34,29,11,5,165,148,135,120,120,120,167,142,135,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,248,0,212,2,106,4,200,10,2,13,238,14,
192,27,130,112,43,86,102,55,46,39,15,7,165,148,135,120,120,120,167,142,135,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,218,0,120,2,169,3,161,10,
109,12,71,14,60,27,55,109,34,71,93,53,42,37,17,8,166,145,137,120,120,120,167,142,135,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,144,0,208,1,
12,3,196,9,254,11,157,14,216,26,40,67,25,64,64,45,41,24,17,8,163,120,143,120,120,120,165,115,130,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,1,0,
144,0,208,1,12,3,196,9,254,11,157,14,216,26,0,42,19,51,51,35,32,19,14,6,163,120,143,120,120,120,
165,115,130,44,45,70,130,59,0,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,64,250,
23,8,195,0,4,0,1,0,141,0,80,1,204,6,0,10,208,12,40,15,104,25,45,36,12,54,51,51,49,30,
11,9,174,115,127,122,122,132,187,130,137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,
0,191,197,24,223,182,176,250,125,182,3,0,141,0,80,1,204,6,0,10,208,12,40,15,104,25,75,63,16,72,
68,68,65,39,15,12,174,115,127,122,122,132,187,130,137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,
0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,141,0,80,1,204,6,0,10,208,12,40,15,104,25,
75,46,13,61,57,57,55,33,12,10,174,115,127,122,122,132,187,130,137,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,141,0,80,1,204,6,0,10,208,12,
40,15,104,25,0,30,11,49,46,47,45,27,10,8,174,115,127,122,122,132,187,130,137,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,210,0,5,0,1,0,171,0,
105,1,248,7,2,11,28,13,224,14,196,26,45,29,17,48,48,38,38,24,10,5,167,113,125,120,120,120,167,90,
120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,
3,0,214,0,18,2,160,6,203,10,77,13,4,15,79,27,60,58,30,71,73,55,50,32,14,7,175,128,129,120,
120,120,167,90,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,
1,250,0,0,1,0,24,1,16,3,156,4,120,10,152,13,60,15,32,28,60,73,36,66,79,56,43,28,13,7,
186,152,135,120,120,120,192,155,150,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,
8,0,0,0,1,250,0,0,1,0,24,1,16,3,156,4,120,10,152,13,60,15,32,28,45,65,37,62,75,52,
40,27,12,6,186,152,135,120,120,120,192,155,150,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,
0,0,0,0,188,40,60,182,64,250,23,8,1,0,24,1,16,3,156,4,120,10,152,13,60,15,32,28,0,43,
30,50,61,42,33,22,10,5,186,152,135,120,120,120,192,155,150,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,40,60,182,40,54,0,191,77,60,59,182,64,250,23,8,203,0,6,0,1,0,200,0,29,1,245,8,36,11,
186,12,165,15,244,26,61,64,0,88,56,44,48,36,16,8,187,125,137,137,150,175,187,125,137,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,200,0,34,2,
165,7,70,9,110,13,79,15,244,26,70,85,40,88,68,64,40,20,16,8,187,125,137,137,150,175,187,125,137,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,
200,0,9,3,208,4,241,9,60,13,194,14,244,26,72,99,52,96,92,48,44,32,16,8,187,125,137,137,150,175,
187,125,137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,
0,0,1,0,14,1,212,2,106,4,200,10,2,13,238,14,192,27,61,140,52,95,114,62,51,43,16,8,165,148,
135,120,120,120,167,142,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,
60,182,64,250,23,8,1,0,200,0,145,2,228,3,118,10,225,12,56,15,244,26,60,127,48,108,68,40,44,28,
16,8,187,125,137,137,150,175,187,125,137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,40,60,182,40,54,
0,191,77,60,59,182,64,250,23,8,1,0,200,0,45,2,57,3,209,10,2,13,122,15,244,26,0,106,46,86,
54,36,32,18,14,7,187,125,137,137,150,175,187,125,137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,
0,0,0,0,0,0,146,23,0,0,0,250,0,0,215,0,5,0,33,0,173,0,64,1,156,8,220,10,66,13,
19,15,228,26,45,44,12,60,60,59,56,29,13,6,182,105,128,120,120,120,167,105,120,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,173,0,64,1,156,8,
220,10,66,13,19,15,228,26,40,56,14,68,68,66,64,32,14,7,182,105,128,120,120,120,167,105,120,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,244,0,
229,1,108,7,82,10,89,13,17,15,34,28,90,58,28,67,66,65,55,35,13,8,221,122,147,120,120,120,167,105,
120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,
1,0,31,1,72,2,204,6,0,10,104,13,15,15,224,28,40,43,31,56,56,55,42,31,10,6,244,132,159,120,
120,120,135,180,150,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,
64,250,23,8,1,0,31,1,72,2,204,6,0,10,104,13,15,15,224,28,0,32,26,48,48,47,36,27,9,5,
244,132,159,120,120,120,135,180,150,44,45,70,130,59,0,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,
77,60,59,182,64,250,23,8,225,0,5,0,1,0,136,0,44,1,8,7,96,9,148,12,41,14,144,26,45,27,
13,56,44,37,29,23,11,0,120,120,105,120,120,120,60,90,90,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,136,0,164,1,120,5,196,9,48,12,41,14,
144,26,40,52,27,82,60,46,40,29,19,0,120,120,112,120,120,120,60,75,112,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,192,0,40,2,132,3,20,10,
204,11,96,14,88,27,80,106,35,84,81,51,49,28,18,7,172,142,135,120,120,120,167,135,135,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,192,0,40,2,
92,3,100,10,164,11,96,14,159,27,60,105,32,76,83,46,44,26,16,7,172,142,135,120,120,120,167,135,135,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,1,0,
192,0,40,2,92,3,100,10,164,11,96,14,159,27,0,55,23,55,60,34,32,18,12,5,172,142,135,120,120,120,
167,135,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,64,250,
23,8,102,0,6,0,1,0,200,0,14,1,21,9,210,11,91,12,164,15,244,26,43,65,3,83,38,41,38,38,
11,7,187,125,137,137,150,175,187,125,137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,
0,191,197,24,223,182,176,250,125,182,3,0,144,0,76,1,251,8,200,10,111,12,209,14,244,26,60,104,11,102,
72,64,60,49,15,9,187,125,137,137,150,175,187,125,137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,
0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,104,0,154,1,228,6,50,9,139,12,250,14,244,26,
107,56,33,69,42,48,42,27,12,6,187,125,137,137,150,175,187,125,137,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,200,0,207,1,11,4,244,9,110,12,
228,14,244,26,124,75,32,80,54,35,25,16,12,6,187,125,137,137,150,175,187,125,137,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,1,0,104,0,168,1,29,3,
47,10,55,12,77,15,244,26,35,84,41,76,64,22,15,7,15,7,187,125,137,137,150,175,187,125,137,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,64,250,23,8,1,0,200,0,
114,1,202,2,115,10,103,12,72,15,244,26,0,64,24,63,45,21,15,9,12,6,187,125,137,137,150,175,187,125,
137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,146,23,0,0,0,250,0,0,
160,0,4,0,1,0,132,0,8,2,136,4,136,9,128,12,156,14,84,27,50,40,30,52,60,40,33,28,16,6,
167,148,143,120,120,120,197,135,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,
197,24,223,182,176,250,125,182,3,0,132,0,8,2,136,4,136,9,128,12,156,14,84,27,60,71,40,70,80,54,
44,38,22,8,167,148,143,120,120,120,197,135,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,
24,53,0,191,197,254,124,182,1,250,0,0,1,0,132,0,8,2,136,4,136,9,128,12,156,14,84,27,50,53,
34,60,69,46,38,33,19,7,167,148,143,120,120,120,197,135,120,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,132,0,8,2,136,4,136,9,128,12,156,14,
84,27,0,33,27,48,55,37,30,26,15,5,167,148,143,120,120,120,197,135,120,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,239,0,5,0,1,0,80,0,96,1,
52,3,193,10,228,12,114,15,244,26,87,79,30,80,61,42,30,0,15,7,187,125,137,137,150,175,187,125,137,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,
80,0,191,1,17,3,196,10,108,12,119,15,244,26,50,97,53,83,53,41,38,34,15,7,187,125,137,137,150,175,
187,125,137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,
0,0,1,0,128,0,80,2,81,3,120,10,94,12,201,14,244,26,53,122,49,83,79,38,30,19,19,7,187,125,
137,137,150,175,187,125,137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,
0,0,1,250,0,0,1,0,200,0,57,3,115,4,10,10,41,12,214,13,244,26,49,96,50,90,75,54,28,39,
14,7,187,125,137,137,150,175,187,125,137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,
0,0,188,40,60,182,64,250,23,8,1,0,200,0,57,3,115,4,10,10,41,12,214,13,244,26,0,97,54,90,
75,54,28,39,14,7,187,125,137,137,150,175,187,125,137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,40,
60,182,40,54,0,191,77,60,59,182,64,250,23,8,14,1,6,0,1,0,200,0,68,1,46,3,69,11,54,13,
160,15,244,26,48,50,11,68,41,15,11,0,15,7,187,125,137,137,150,175,187,125,137,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,200,0,124,1,239,2,
107,10,86,12,52,16,244,26,45,96,30,79,57,26,22,15,15,7,187,125,137,137,150,175,187,125,137,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,200,0,
197,2,187,3,240,9,163,12,23,15,244,26,67,134,49,91,83,49,38,30,15,7,187,125,137,137,150,175,187,125,
137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,
1,0,224,0,30,3,60,5,1,9,112,13,119,14,244,26,70,94,49,106,68,57,38,0,15,7,187,125,137,137,
150,175,187,125,137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,
64,250,23,8,1,0,200,0,190,1,106,8,33,10,134,12,93,14,244,26,40,58,27,69,54,46,34,31,15,7,
187,125,137,137,150,175,187,125,137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,
77,60,59,182,64,250,23,8,1,0,200,0,190,1,106,8,33,10,134,12,93,14,244,26,0,23,17,44,34,29,
22,19,7,4,187,125,137,137,150,175,187,125,137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,
0,0,0,0,146,23,0,0,0,250,0,0,38,1,6,0,1,0,200,0,126,1,12,3,253,9,107,12,48,14,
244,26,46,107,24,88,72,40,40,40,16,8,187,125,137,137,150,175,187,125,137,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,168,0,215,1,238,3,112,9,
161,12,217,14,244,26,50,145,48,100,100,44,40,44,16,8,187,125,175,137,150,175,187,125,175,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,200,0,203,1,
170,6,140,8,3,12,148,13,244,26,62,128,45,98,60,91,68,38,15,9,187,125,137,137,150,175,187,125,137,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,
200,0,176,1,88,8,132,9,72,12,130,14,244,26,60,81,32,75,68,57,57,32,14,7,187,125,137,137,150,175,
187,125,137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,
23,8,1,0,176,0,88,1,180,8,228,10,161,12,16,15,244,26,76,85,12,92,64,60,56,28,16,8,187,125,
137,137,150,175,187,125,137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,
59,182,64,250,23,8,1,0,152,0,72,1,232,8,160,10,92,13,10,15,32,28,0,46,26,66,44,44,37,29,
11,7,167,90,135,120,120,120,122,120,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,
0,0,146,23,0,0,0,250,0,0,240,0,6,0,1,0,142,0,62,1,138,2,166,9,38,12,203,14,24,27,
40,35,7,66,37,18,19,14,8,4,148,126,80,120,120,120,75,90,90,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,142,0,62,1,138,2,166,9,38,12,
203,14,24,27,40,39,8,69,39,18,20,15,8,4,148,126,80,120,120,120,75,90,90,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,147,0,85,1,159,2,
185,9,25,12,193,14,37,27,40,38,10,68,43,21,22,20,9,4,151,127,85,120,120,120,75,90,90,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,192,0,
40,2,92,3,100,10,164,11,96,14,159,27,70,99,31,74,81,45,43,25,16,6,172,142,135,120,120,120,167,135,
135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,
1,0,184,0,72,2,172,3,20,10,164,11,53,14,160,27,50,81,30,71,86,42,41,23,15,6,173,142,135,120,
120,120,182,105,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,
64,250,23,8,1,0,184,0,72,2,172,3,20,10,164,11,53,14,160,27,0,46,23,54,64,32,30,18,11,4,
173,142,135,120,120,120,182,105,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,
146,23,0,0,0,250,0,0,205,0,5,0,1,0,132,0,24,1,184,6,36,9,228,12,96,14,100,25,45,27,
15,48,33,28,30,28,7,10,160,90,135,120,120,120,160,135,135,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,132,0,24,1,184,6,36,9,228,12,96,14,
100,25,40,38,18,58,39,33,36,33,9,12,160,90,135,120,120,120,160,135,135,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,142,0,83,1,156,6,74,9,
252,12,124,14,151,25,80,53,24,69,50,41,43,38,11,13,169,98,137,122,120,120,160,135,135,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,232,0,104,3,
160,5,160,10,216,13,120,15,102,27,40,84,44,78,82,54,44,30,14,5,255,170,163,145,120,120,255,174,173,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,1,0,
232,0,104,3,160,5,160,10,216,13,120,15,102,27,0,45,32,57,60,40,32,22,10,4,255,170,163,145,120,120,
255,174,173,44,45,70,130,59,0,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,64,250,
23,8,205,0,5,0,1,0,147,0,22,1,238,7,186,9,17,13,141,14,81,26,45,38,10,60,51,47,50,28,
12,7,167,101,123,120,120,120,167,90,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,
0,191,197,24,223,182,176,250,125,182,3,0,132,0,16,1,28,7,232,8,228,12,96,14,100,25,30,40,18,58,
39,36,36,33,9,12,167,90,135,120,120,120,167,135,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,
0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,147,0,54,1,186,6,58,9,241,12,113,14,189,25,
80,54,23,68,49,43,44,39,11,13,168,94,137,120,120,120,160,135,135,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,3,1,17,2,200,6,216,9,80,13,
239,14,63,28,50,61,34,68,64,62,50,38,12,9,228,124,154,120,120,120,160,135,135,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,1,0,31,1,72,2,204,6,
0,10,104,13,15,15,224,28,0,35,28,51,50,49,38,28,9,6,244,132,159,120,120,120,135,180,150,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,64,250,23,8,0,0,5,0,
1,0,132,0,16,1,8,7,232,8,228,12,96,14,100,25,40,39,18,57,39,36,36,33,9,12,167,90,135,120,
120,120,167,135,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,
176,250,125,182,3,0,132,0,16,1,8,7,232,8,228,12,96,14,100,25,65,61,22,72,49,45,45,41,11,15,
167,90,135,120,120,120,167,135,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,
197,254,124,182,1,250,0,0,1,0,128,0,52,1,219,6,6,9,218,12,241,14,225,25,50,59,24,70,54,45,
46,39,13,13,167,105,135,120,120,120,167,135,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,
49,229,0,182,8,0,0,0,1,250,0,0,1,0,116,0,160,1,84,6,96,9,188,12,164,16,88,27,40,33,
23,48,51,34,37,25,15,6,167,150,135,120,120,120,197,120,120,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,1,0,116,0,224,1,44,6,116,9,12,13,224,16,
88,27,0,30,24,48,50,34,34,21,13,5,167,150,135,120,120,120,197,120,120,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,64,250,23,8,220,0,4,0,1,0,153,0,208,1,
52,3,255,9,194,11,151,14,244,26,50,36,18,47,51,30,28,15,11,5,165,126,145,120,120,120,165,115,130,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,
153,0,208,1,52,3,255,9,194,11,151,14,244,26,90,94,30,77,82,49,45,25,18,8,165,126,145,120,120,120,
165,115,130,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,
0,0,1,0,153,0,198,1,44,3,255,9,194,11,151,14,244,26,80,82,28,71,76,45,42,23,17,7,165,126,
145,120,120,120,165,115,130,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,
0,0,1,250,0,0,1,0,184,0,184,1,52,3,40,10,244,11,141,14,128,26,0,55,27,57,58,38,30,24,
17,8,162,135,150,120,120,120,162,120,165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,
0,0,188,40,60,182,64,250,23,8,59,2,47,0,8,6,5,4,199,131,133,214,44,105,96,34,233,229,248,253,
2,24,34,7,223,227,0,36,38,3,228,232,220,203,209,208,225,2,22,15,252,223,199,197,227,232,242,233,212,232,
248,255,9,28,14,253,5,253,244,16,43,37,2,240,254,0,1,7,10,24,19,25,245,243,4,24,7,246,7,252,
6,11,5,232,16,33,2,12,23,233,219,16,40,4,249,28,17,247,0,33,28,6,0,5,31,21,19,2,242,24,
28,0,236,241,246,243,5,242,235,253,33,16,236,238,241,5,19,10,0,8,7,253,253,12,14,10,3,13,10,0,
248,255,11,10,11,1,246,250,8,16,0,4,254,249,252,247,250,243,251,242,245,19,18,238,202,214,222,225,236,246,
248,233,250,255,235,235,251,3,12,20,15,255,3,9,23,24,16,7,0,12,28,19,9,17,27,22,16,0,251,2,
8,3,5,8,10,251,239,245,1,0,231,226,222,236,243,252,248,245,246,243,240,240,244,238,235,241,253,3,10,14,
5,0,251,254,1,1,12,12,3,0,10,22,38,42,27,14,13,13,8,6,254,245,252,5,6,0,250,242,242,237,
238,238,242,242,247,249,0,10,16,14,6,10,15,11,17,20,19,21,19,14,4,8,13,12,9,12,14,8,254,253,
255,252,249,253,8,11,10,1,1,4,4,3,251,248,247,247,249,250,246,248,249,247,250,243,239,236,231,231,246,254,
245,240,245,254,0,0,255,250,245,242,242,245,250,254,252,1,4,0,0,0,255,251,248,253,3,0,255,3,7,15,
23,22,15,6,6,11,9,9,14,14,14,14,13,7,1,3,7,4,255,250,247,248,250,1,3,2,255,252,249,249,
247,244,250,253,254,251,254,252,249,253,0,2,3,4,3,0,0,3,3,3,3,3,1,1,2,2,2,4,8,8,
6,3,0,3,5,4,1,0,1,3,1,0,5,7,6,7,8,8,5,2,0,1,4,9,9,7,4,2,6,11,
13,11,8,4,0,0,253,251,253,1,6,7,5,7,1,253,251,251,251,250,251,254,0,255,0,2,2,0,255,254,
253,253,255,0,255,0,2,1,0,254,253,254,0,255,254,253,252,252,253,255,254,253,0,0,253,250,250,250,252,255,
0,1,0,254,254,254,255,255,1,0,255,254,254,255,0,1,2,2,1,255,251,251,252,251,254,252,251,250,251,253,
253,253,252,251,250,251,249,247,245,247,250,252,251,248,244,245,247,249,250,252,250,246,244,242,243,244,247,250,251,249,
249,245,242,244,246,249,249,248,245,245,244,245,249,254,0,0,174,0,4,0,1,0,136,0,192,1,0,5,96,9,
100,12,156,14,12,27,44,39,23,57,56,39,34,26,14,5,165,141,141,120,120,120,162,127,165,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,136,0,192,1,
0,5,96,9,100,12,156,14,12,27,80,58,28,69,68,47,41,31,17,6,165,141,141,120,120,120,162,127,165,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,
136,0,192,1,0,5,96,9,100,12,156,14,12,27,50,52,26,65,64,45,39,29,16,6,165,141,141,120,120,120,
162,127,165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,
0,0,1,0,136,0,192,1,0,5,96,9,100,12,156,14,12,27,0,35,22,54,53,37,32,24,14,5,165,141,
141,120,120,120,162,127,165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,
60,182,64,250,23,8,160,0,4,0,1,0,142,0,52,2,136,4,160,10,188,12,236,14,99,27,50,42,31,57,
60,33,36,28,16,6,168,147,130,120,120,120,197,135,130,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,
124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,142,0,52,2,136,4,160,10,188,12,236,14,99,27,
60,75,42,76,80,44,49,38,22,8,168,147,130,120,120,120,197,135,130,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,142,0,52,2,136,4,160,10,188,12,
236,14,99,27,50,57,36,66,69,38,42,33,19,7,168,147,130,120,120,120,197,135,130,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,142,0,52,2,136,4,
160,10,188,12,236,14,99,27,0,35,28,52,55,30,33,26,15,5,168,147,130,120,120,120,197,135,130,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,160,0,4,0,
1,0,169,0,193,1,89,3,196,9,244,11,146,14,186,26,50,43,23,52,55,34,29,20,14,4,163,130,148,120,
120,120,162,120,165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,
176,250,125,182,3,0,169,0,193,1,89,3,196,9,244,11,146,14,186,26,70,85,33,72,77,48,41,28,20,6,
163,130,148,120,120,120,162,120,165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,
197,254,124,182,1,250,0,0,1,0,169,0,193,1,89,3,196,9,244,11,146,14,186,26,40,71,30,66,71,44,
38,25,18,6,163,130,148,120,120,120,162,120,165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,
49,229,0,182,8,0,0,0,1,250,0,0,1,0,169,0,193,1,89,3,196,9,244,11,146,14,186,26,0,43,
23,52,55,34,29,20,14,4,163,130,148,120,120,120,162,120,165,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,165,0,4,0,1,0,180,0,144,1,216,4,152,8,
148,12,226,14,144,26,45,36,24,51,51,36,36,30,15,7,170,125,145,120,120,120,162,125,145,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,180,0,144,1,
216,4,152,8,148,12,226,14,144,26,80,65,32,68,68,48,48,40,20,10,170,125,145,120,120,120,162,125,145,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,
180,0,144,1,216,4,152,8,148,12,226,14,144,26,40,58,30,64,64,45,45,38,19,9,170,125,145,120,120,120,
162,125,145,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,
0,0,1,0,180,0,144,1,216,4,152,8,148,12,226,14,144,26,0,31,22,47,47,33,33,28,14,7,170,125,
145,120,120,120,162,125,145,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,
60,182,64,250,23,8,185,0,4,0,1,0,116,0,240,1,32,5,104,9,180,12,132,14,96,27,45,59,31,64,
78,41,48,37,19,7,167,150,135,120,120,120,197,120,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,
124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,116,0,240,1,32,5,104,9,180,12,132,14,96,27,
80,73,35,72,86,45,53,41,21,8,167,150,135,120,120,120,197,120,120,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,116,0,240,1,32,5,104,9,180,12,
132,14,96,27,60,59,31,64,78,41,48,37,19,7,167,150,135,120,120,120,197,120,120,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,116,0,240,1,32,5,
104,9,180,12,132,14,96,27,0,73,35,72,86,45,53,41,21,8,167,150,135,120,120,120,197,120,120,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,170,0,4,0,
1,0,246,0,80,2,164,6,201,9,70,13,255,14,73,28,50,33,27,49,54,44,34,25,9,5,219,138,158,120,
120,120,135,180,150,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,
176,250,125,182,3,0,246,0,80,2,164,6,201,9,70,13,255,14,73,28,60,83,43,78,87,70,54,39,15,8,
219,138,158,120,120,120,135,180,150,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,
197,254,124,182,1,250,0,0,1,0,246,0,80,2,164,6,201,9,70,13,255,14,73,28,60,74,40,74,82,67,
51,37,14,8,219,138,158,120,120,120,135,180,150,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,
49,229,0,182,8,0,0,0,1,250,0,0,1,0,246,0,80,2,164,6,201,9,70,13,255,14,73,28,0,33,
27,49,54,44,34,25,9,5,219,138,158,120,120,120,135,180,150,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,190,0,5,0,1,0,132,0,24,1,184,6,36,9,
228,12,96,14,100,25,40,23,14,45,31,26,28,26,7,9,160,90,135,120,120,120,160,135,135,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,132,0,24,1,
184,6,36,9,228,12,96,14,100,25,30,48,20,64,44,37,40,37,10,13,160,90,135,120,120,120,160,135,135,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,
166,0,136,1,18,7,138,9,228,12,56,14,242,26,40,68,30,76,60,65,57,45,13,13,160,97,131,120,120,120,
160,135,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,
0,0,1,0,6,1,33,2,26,7,232,9,77,13,228,14,125,28,80,71,37,72,73,69,54,41,13,9,227,125,
153,120,120,120,160,135,135,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,
60,182,64,250,23,8,1,0,31,1,72,2,28,7,0,10,104,13,15,15,224,28,0,32,26,48,51,47,36,27,
9,5,244,132,159,120,120,120,135,180,150,44,45,70,130,59,0,0,0,0,40,0,0,0,0,40,60,182,40,54,
0,191,77,60,59,182,64,250,23,8,125,0,5,0,13,0,76,0,224,0,8,7,4,11,156,14,220,15,32,29,
0,19,7,46,7,28,21,10,7,3,150,115,97,120,120,120,90,130,97,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,13,0,76,0,224,0,8,7,4,11,156,14,
220,15,32,29,50,19,7,46,7,28,21,10,7,3,150,115,97,120,120,120,90,130,97,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,76,0,224,0,8,7,
4,11,156,14,220,15,32,29,45,17,6,44,10,27,20,10,6,3,150,115,97,120,120,120,90,130,97,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,76,0,
224,0,8,7,4,11,156,14,220,15,32,29,30,13,6,39,9,24,18,9,6,3,150,115,97,120,120,120,90,130,
97,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,
1,0,76,0,224,0,136,9,4,11,156,14,220,15,32,29,0,15,6,41,9,28,22,12,6,3,150,115,97,120,
120,120,90,130,97,44,45,70,130,59,0,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,
64,250,23,8,105,0,4,0,1,0,76,0,224,0,156,9,4,11,156,14,220,15,32,29,35,19,7,46,10,28,
18,10,5,3,150,115,97,120,120,120,90,130,97,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,
40,53,0,191,197,24,223,182,176,250,125,182,13,0,76,0,224,0,156,9,4,11,156,14,220,15,32,29,40,19,
7,46,10,28,18,10,5,3,150,115,97,120,120,120,90,130,97,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,76,0,224,0,156,9,4,11,156,14,220,15,
32,29,30,19,7,46,10,28,18,10,5,3,150,115,97,120,120,120,90,130,97,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,76,0,224,0,156,9,4,11,
156,14,220,15,32,29,0,19,7,46,10,28,18,10,5,3,150,115,97,120,120,120,90,130,97,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,65,0,3,0,5,0,
140,0,224,1,178,3,84,11,152,13,104,16,0,27,35,16,16,43,23,15,10,13,7,0,160,150,120,120,120,120,
145,60,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,
125,182,5,0,140,0,224,1,178,3,84,11,152,13,104,16,0,27,30,20,18,48,25,17,12,14,8,0,160,150,
120,120,120,120,145,60,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,
124,182,1,250,0,0,1,0,140,0,224,1,178,3,84,11,152,13,104,16,0,27,0,20,18,48,25,17,12,14,
8,0,160,150,120,120,120,120,145,60,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,
0,182,8,0,0,0,1,250,0,0,35,0,3,0,5,0,224,0,248,2,140,5,60,10,20,13,175,14,117,27,
35,24,21,43,36,31,26,21,9,2,196,162,200,120,120,120,249,174,255,44,35,70,130,50,0,0,0,0,45,0,
0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,5,0,224,0,248,2,140,5,40,10,20,13,
175,14,117,27,40,22,21,41,35,30,25,21,8,2,196,162,200,120,120,120,249,174,255,44,35,70,130,50,0,0,
0,0,45,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,208,0,224,2,100,5,
236,9,1,13,155,14,105,27,0,22,21,42,30,22,20,20,9,2,192,158,201,120,120,120,249,174,255,44,35,70,
130,52,0,0,0,0,45,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,75,0,4,0,
5,0,224,0,216,2,60,5,232,8,20,13,175,14,117,27,60,15,19,32,27,23,19,16,6,1,196,162,200,120,
120,120,249,174,255,44,45,70,130,46,0,0,0,0,45,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,
176,250,125,182,5,0,224,0,216,2,60,5,232,8,20,13,175,14,117,27,0,22,20,40,34,29,24,20,8,2,
196,162,200,120,120,120,249,174,255,44,45,70,130,50,0,0,0,0,45,0,0,0,0,0,0,0,24,53,0,191,
197,254,124,182,1,250,0,0,13,0,224,0,216,2,60,5,232,8,20,13,175,14,117,27,15,21,20,40,33,28,
24,20,8,2,196,162,200,120,120,120,249,174,255,44,45,70,130,50,0,0,0,0,45,0,0,0,0,250,222,182,
49,229,0,182,8,0,0,0,1,250,0,0,1,0,224,0,216,2,80,5,232,8,20,13,175,14,117,27,0,23,
21,41,34,30,25,20,8,2,196,162,200,120,120,120,249,174,255,44,45,70,130,50,0,0,0,0,45,0,0,0,
0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,42,8,58,0,5,3,2,1,1,1,1,1,0,255,
0,0,0,0,0,0,1,1,1,1,2,0,0,0,0,251,205,197,210,213,253,5,20,56,54,53,43,36,36,15,
234,214,204,220,221,221,228,253,22,35,32,35,44,42,30,4,246,242,237,227,216,222,237,251,4,5,19,30,31,28,
16,5,230,203,181,162,174,184,205,237,4,33,58,75,86,79,61,41,17,252,226,207,202,209,219,233,248,11,33,44,
49,48,42,33,17,254,239,229,222,220,218,226,240,254,7,18,24,30,31,23,17,7,0,248,238,238,240,247,253,255,
241,232,232,226,226,224,228,245,0,9,18,24,7,249,237,226,230,228,232,243,253,10,21,31,48,51,41,28,16,9,
255,237,226,225,227,233,234,246,8,20,28,27,22,25,16,3,247,236,232,232,225,224,235,245,254,7,12,22,27,22,
14,10,3,1,249,243,242,249,253,0,3,12,20,23,20,16,13,9,1,251,244,242,242,245,246,250,0,5,9,9,
8,11,9,0,253,246,246,246,245,245,250,0,3,7,8,12,8,7,4,253,253,245,243,244,243,248,252,255,4,5,
8,8,10,7,4,5,0,252,253,251,255,5,1,5,10,3,8,8,2,5,3,1,0,253,254,0,1,4,1,4,
5,5,3,255,254,0,253,250,252,252,255,2,254,3,9,8,11,5,6,13,12,9,4,7,7,6,2,0,1,7,
6,0,0,2,6,2,0,1,4,4,2,252,251,227,222,204,199,209,209,234,246,1,22,27,40,47,38,30,22,9,
1,245,236,235,243,245,252,0,8,20,22,26,25,25,16,4,252,245,243,241,237,240,247,255,2,3,11,15,19,18,
15,13,13,12,9,11,8,251,245,246,255,7,18,35,57,72,47,19,252,228,213,173,156,173,186,192,199,221,8,59,
62,52,66,62,55,28,246,242,248,241,222,226,243,18,37,35,47,64,67,52,21,0,248,239,220,207,210,225,245,251,
3,20,40,49,40,24,15,231,219,215,215,247,15,30,48,55,46,52,47,24,253,197,162,144,132,140,150,182,228,8,
22,46,60,75,66,41,11,254,230,211,198,198,225,249,8,26,44,65,67,55,38,27,13,245,220,204,200,211,218,228,
244,7,17,24,17,13,10,253,242,225,213,214,216,219,234,248,12,33,38,44,42,42,36,28,4,254,248,244,243,242,
252,6,25,25,30,31,31,28,18,5,254,0,255,249,250,248,5,252,226,226,225,237,242,243,249,8,13,2,254,1,
4,250,233,220,230,237,235,232,243,7,21,19,13,19,30,22,13,9,6,11,2,245,249,2,6,9,4,4,14,13,
7,0,255,252,247,242,238,245,249,245,248,252,0,6,5,253,252,250,249,249,245,248,0,254,1,2,8,15,14,11,
6,9,4,6,255,255,0,254,252,255,1,8,5,4,1,8,10,3,0,252,248,248,241,242,247,246,249,252,0,5,
11,3,0,2,255,0,247,250,246,250,254,252,2,6,5,9,255,252,248,238,234,231,225,229,237,239,254,6,11,27,
29,23,23,13,5,0,246,238,241,246,245,252,3,10,21,17,23,14,22,5,250,237,233,230,236,241,254,8,19,19,
21,16,15,9,4,243,243,234,235,234,240,252,10,24,20,23,22,12,18,5,255,249,249,242,241,247,243,255,5,0,
11,10,10,12,6,0,4,5,252,0,251,248,251,251,250,0,2,9,10,9,4,6,3,255,252,247,247,252,250,2,
5,9,17,10,18,12,15,5,12,0,1,0,0,0,1,255,3,6,0,252,1,1,5,2,0,255,2,250,252,252,
252,0,255,253,2,7,7,7,7,0,254,252,244,242,244,245,248,255,2,14,12,13,12,3,2,252,240,236,239,233,
242,246,252,4,8,12,21,20,15,16,14,7,4,254,247,245,245,246,0,7,12,25,29,28,31,21,10,1,242,238,
238,238,243,254,3,13,14,20,19,19,11,0,246,239,243,244,247,247,250,0,1,7,11,21,22,19,5,0,254,248,
248,244,250,5,8,12,7,7,16,15,2,250,246,246,244,238,242,247,0,0,254,0,8,7,10,2,0,3,255,250,
242,247,247,255,254,0,6,13,17,18,16,9,4,252,247,240,236,234,237,245,246,3,9,11,12,7,6,1,1,243,
242,244,240,249,249,255,5,4,3,7,12,13,9,2,251,244,231,225,225,228,236,243,252,0,10,15,11,14,12,14,
4,248,236,236,237,240,244,251,7,20,21,23,30,27,25,16,6,250,247,236,237,242,251,4,8,8,9,16,15,17,
18,7,6,253,240,236,236,236,244,250,250,7,14,23,32,30,25,11,0,248,248,248,245,251,254,6,9,16,13,7,
10,5,7,1,0,252,249,245,240,244,244,246,244,245,255,0,255,252,248,253,247,242,244,242,251,252,0,5,9,5,
2,4,4,9,8,4,1,0,248,246,241,241,243,247,253,5,8,9,10,11,11,4,254,252,250,248,243,246,247,248,
255,0,6,14,13,14,12,10,0,254,244,239,246,244,255,4,11,14,15,9,8,11,5,3,252,254,249,249,248,255,
3,8,10,7,12,14,10,13,2,255,251,254,0,2,0,0,2,1,6,6,9,8,3,254,245,251,253,252,249,244,
249,253,1,2,14,21,20,12,7,6,6,1,245,247,244,254,254,253,10,16,20,19,17,14,14,0,245,241,247,244,
242,243,249,6,13,17,14,14,15,5,255,250,244,243,237,227,234,246,249,255,3,5,8,9,8,8,3,4,252,248,
240,240,247,0,7,5,13,15,15,12,6,7,8,12,11,16,16,16,17,12,8,9,11,9,5,7,1,6,6,0,
11,9,11,11,5,0,251,254,253,254,1,1,2,0,251,244,246,248,254,2,6,10,10,1,247,240,239,239,238,236,
246,251,1,2,17,20,23,24,12,7,4,0,251,255,250,251,0,249,255,4,5,12,19,17,13,10,3,2,2,250,
243,238,228,230,230,234,237,244,247,254,4,9,14,16,11,6,3,0,254,2,1,5,9,12,21,21,31,31,30,21,
6,1,255,0,0,255,0,4,5,9,8,10,11,11,12,4,3,1,254,248,247,245,244,248,241,239,240,247,249,254,
0,0,4,0,254,250,249,252,247,249,247,246,246,249,252,251,254,251,243,242,238,241,246,253,1,10,17,19,22,19,
19,13,8,253,244,240,236,237,242,246,253,2,12,14,16,15,13,7,255,242,229,221,210,213,221,233,250,3,15,19,
26,24,21,13,5,2,251,244,240,241,247,255,1,8,15,17,17,15,13,12,11,4,251,245,246,245,249,248,254,8,
14,17,16,18,14,9,250,245,238,239,234,230,233,234,246,250,3,8,13,15,10,7,255,248,242,235,235,233,235,233,
237,242,250,4,6,8,8,8,6,8,8,253,254,248,242,246,246,250,250,251,253,255,6,4,255,251,249,253,255,252,
0,6,10,12,12,12,10,6,0,0,3,6,8,8,10,17,20,17,17,19,22,24,21,19,20,22,17,11,5,252,
247,239,231,233,237,241,244,248,255,2,6,2,0,252,248,242,234,232,231,231,230,231,236,241,246,249,251,253,0,0,
255,252,252,0,255,254,254,254,252,249,247,247,248,250,249,250,0,1,2,1,251,250,253,255,0,0,0,0,2,2,
1,4,1,254,252,252,252,254,254,252,252,255,0,4,7,6,8,6,9,12,15,13,14,8,6,4,2,2,4,5,
4,1,1,255,0,2,8,13,19,22,24,24,21,18,13,5,0,255,255,254,253,251,253,0,3,6,9,14,13,11,
7,2,0,252,251,0,4,9,8,8,5,8,10,11,12,10,7,1,252,246,244,245,244,246,248,254,1,3,8,10,
7,4,0,252,251,251,251,251,253,253,0,4,8,11,9,8,5,4,4,4,6,9,11,11,11,9,7,5,2,254,
250,246,248,252,2,2,4,3,4,5,2,0,251,247,239,238,237,235,237,239,244,252,5,14,20,25,27,28,23,15,
5,0,251,251,253,252,252,252,253,2,5,12,16,19,22,20,16,12,7,2,254,252,248,247,245,244,248,250,254,254,
255,254,253,255,252,249,243,244,249,253,1,2,1,252,248,243,245,251,0,5,4,5,3,0,254,250,250,249,246,245,
246,245,248,251,0,0,1,0,0,0,253,253,254,254,0,3,4,4,5,7,8,9,11,15,13,9,4,255,250,247,
246,247,249,0,8,16,20,22,22,19,15,8,4,254,249,244,239,240,241,242,242,243,244,250,3,11,18,23,24,24,
21,18,12,7,0,250,247,241,239,239,239,242,250,2,10,15,17,18,17,17,13,6,255,245,238,232,231,232,234,236,
240,246,252,4,9,13,15,13,11,7,2,254,251,248,245,244,244,246,248,250,255,2,4,5,4,4,3,3,0,251,
245,241,235,229,227,227,233,241,253,4,11,14,13,13,10,10,10,7,3,254,251,247,247,244,245,249,254,1,5,10,
16,21,23,24,22,18,14,8,3,255,251,250,247,247,247,248,247,247,247,245,247,246,249,252,251,251,248,248,248,249,
250,250,250,251,254,1,6,11,14,12,8,5,0,0,253,249,245,241,238,236,237,242,248,255,4,9,12,16,15,12,
7,2,254,253,252,251,251,250,249,249,250,252,255,3,6,5,6,3,3,3,3,3,0,253,248,248,250,252,254,254,
254,255,0,3,3,4,3,2,3,3,3,4,3,5,6,8,10,10,11,11,11,10,9,8,7,5,3,4,4,4,
2,0,254,251,248,246,247,247,249,252,0,0,0,7,15,22,29,36,43,50,57,63,70,76,83,89,95,101,107,112,
118,123,129,134,139,144,149,153,158,162,167,171,175,179,183,187,190,194,197,201,204,207,210,213,215,218,220,223,225,227,
229,231,232,234,236,237,238,239,240,241,242,243,243,244,244,244,244,244,244,244,243,243,242,241,240,239,238,237,236,234,
232,231,229,227,225,223,220,218,215,213,210,207,204,201,197,194,190,187,183,179,175,171,167,162,158,153,149,144,139,134,
129,123,118,112,107,101,95,89,83,76,70,63,57,50,43,36,29,22,15,7,6,4,18,0,2,2,3,4,1,253,
253,255,255,251,250,254,0,254,247,244,246,253,4,7,5,0,251,249,249,250,253,1,6,9,6,0,252,250,251,0,
7,15,21,16,5,251,2,22,57,89,49,247,211,200,229,18,45,32,1,230,221,226,236,3,21,17,0,232,213,217,
238,2,9,5,251,240,235,237,243,248,3,14,7,244,237,240,243,249,4,12,13,6,1,254,239,230,244,11,32,50,
105,109,22,211,165,174,230,50,98,75,8,212,223,4,11,255,210,196,14,70,52,251,226,207,227,2,8,20,24,10,
245,233,6,52,44,0,210,148,137,233,50,104,109,35,224,209,210,200,225,29,101,122,52,217,138,136,248,99,123,55,
219,172,180,225,25,55,39,15,5,249,234,242,15,23,12,0,228,207,215,236,8,23,12,251,233,225,225,242,245,237,
0,16,5,239,232,242,0,14,15,18,30,32,30,18,3,0,5,11,19,21,14,12,4,3,22,24,7,243,245,6,
11,8,3,246,246,254,0,3,253,226,218,246,7,15,28,17,251,248,250,246,243,247,255,6,7,3,251,239,236,244,
11,14,6,5,3,255,249,245,242,249,7,22,19,255,237,234,243,2,13,14,252,245,247,247,5,11,0,241,242,251,
6,12,7,254,246,249,0,0,254,0,2,9,9,2,251,242,245,3,15,18,8,253,246,251,0,2,6,11,14,4,
252,247,254,11,14,9,0,249,0,13,11,2,251,249,255,6,14,14,5,251,0,9,6,9,9,3,5,1,244,243,
251,7,23,20,0,240,235,238,0,17,14,2,250,243,244,4,14,6,252,250,255,255,255,0,252,253,5,7,248,236,
238,253,8,14,11,250,241,246,251,255,9,13,6,247,243,253,253,2,5,8,8,253,245,246,2,15,17,2,248,245,
251,0,2,1,0,3,0,0,252,246,254,6,11,11,7,253,247,253,4,8,7,5,1,2,3,0,252,255,4,1,
0,1,3,1,252,255,0,254,2,7,5,3,255,250,250,0,8,12,5,254,249,253,1,2,3,1,252,251,2,6,
1,250,250,255,0,4,5,251,253,4,2,3,4,247,239,248,5,8,3,1,252,247,0,4,251,251,2,0,255,5,
2,250,251,7,12,8,3,0,251,255,7,6,252,248,255,7,13,6,254,253,255,5,8,6,3,0,0,5,6,0,
0,5,8,5,1,1,0,253,253,2,5,4,1,255,253,254,0,0,0,0,254,254,254,255,0,0,254,253,252,253,
0,1,0,253,247,250,0,2,4,2,253,250,249,250,1,2,255,255,255,0,1,0,255,254,254,1,4,2,0,255,
254,254,254,2,7,7,0,251,248,252,4,8,9,0,249,246,249,4,8,6,1,253,254,1,6,6,2,1,4,5,
2,0,2,4,5,9,7,1,254,255,0,3,5,4,3,2,2,2,1,0,0,2,6,7,3,0,255,0,3,6,
3,255,253,255,3,3,0,0,0,1,2,1,0,0,0,2,3,1,255,254,0,1,1,2,0,252,251,255,1,3,
3,1,253,250,253,0,2,1,0,0,255,254,254,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,22,21,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,1,0,0,0,0,1,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,
0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,255,255,255,255,254,255,255,254,253,251,249,245,238,230,224,229,251,22,38,34,17,
252,234,229,235,252,10,15,20,16,5,250,236,241,247,254,12,15,16,3,244,232,235,254,11,24,26,27,17,250,243,
242,251,1,247,239,244,4,7,234,201,193,236,60,94,65,11,222,209,192,184,221,27,76,64,17,235,218,205,200,222,
14,62,62,32,1,238,233,228,239,6,26,16,5,8,239,1,11,1,28,250,249,2,223,246,247,254,35,17,3,250,
221,235,241,232,251,0,27,40,10,5,242,218,231,248,13,30,26,11,248,237,236,240,2,19,19,8,250,244,237,233,
249,7,20,29,22,0,240,238,245,247,248,5,27,37,23,253,242,239,248,1,249,233,234,40,82,39,234,205,234,253,
248,3,8,31,31,245,251,252,233,249,248,12,25,5,8,249,240,253,244,7,34,18,8,249,236,243,250,18,18,1,
11,4,7,27,4,233,228,234,26,48,25,14,0,3,5,234,219,246,33,49,30,253,237,232,231,239,249,36,65,16,
223,219,249,26,19,246,238,5,30,25,13,4,252,1,253,230,245,20,20,4,247,9,38,41,13,224,219,229,203,203,
252,43,65,46,8,245,224,199,201,231,14,36,37,23,253,241,228,220,254,15,11,18,12,9,3,241,239,251,252,240,
242,3,17,10,254,252,0,7,255,242,240,242,249,11,20,0,237,237,250,6,9,1,2,7,247,234,247,9,9,1,
0,2,252,236,236,252,10,11,0,0,2,254,244,232,239,252,250,255,15,9,247,242,252,5,4,250,0,14,1,243,
234,242,18,22,255,244,249,14,32,4,221,226,252,13,14,10,20,24,4,242,236,244,252,1,16,21,27,14,243,248,
0,243,247,13,19,14,3,250,3,18,3,247,254,0,20,20,247,249,5,5,0,252,8,18,253,249,3,3,20,17,
7,16,13,247,233,240,250,26,42,3,240,245,250,12,18,10,5,253,6,6,244,241,251,16,12,253,4,8,1,239,
224,5,39,18,4,0,245,255,0,246,2,24,21,18,22,15,244,208,227,19,24,11,17,2,230,0,246,217,19,28,
17,21,246,245,236,239,245,1,56,61,6,240,240,212,253,22,247,24,33,34,3,214,239,218,251,58,31,39,43,220,
170,1,35,5,27,0,10,32,5,7,248,228,254,29,29,23,238,227,24,7,213,207,226,17,66,61,7,229,249,12,
4,2,3,6,32,19,226,220,1,8,245,24,31,9,29,255,220,237,2,249,232,24,52,7,248,5,0,4,3,220,
240,45,37,0,254,5,249,241,229,217,250,10,247,247,13,15,244,244,249,214,217,9,8,243,252,246,245,3,241,220,
225,2,16,255,11,255,221,240,255,9,31,4,213,220,252,1,1,5,16,36,14,213,193,232,26,33,16,6,242,240,
5,250,218,223,7,35,7,242,3,3,247,228,227,1,22,15,244,237,248,252,245,255,15,1,0,246,227,249,4,2,
6,13,13,3,242,228,246,248,14,43,12,4,242,219,233,248,17,17,26,25,253,246,243,8,253,229,11,16,5,32,
30,246,232,227,242,22,12,35,56,1,241,1,11,250,232,250,28,50,250,228,11,22,9,219,217,29,61,2,223,255,
8,5,239,212,22,87,27,218,223,0,24,4,228,253,79,89,235,169,233,48,17,205,241,76,83,23,201,183,223,19,
57,16,17,49,3,237,247,244,0,0,9,53,25,226,239,13,47,56,247,213,4,6,223,218,235,51,122,57,223,233,
6,251,200,181,6,81,62,0,237,10,18,250,220,232,2,11,36,16,248,22,21,248,0,10,1,252,246,241,209,207,
11,66,96,37,208,225,249,234,224,220,21,84,72,58,27,220,201,209,228,22,37,8,242,8,36,245,215,229,218,248,
23,19,10,248,244,248,2,241,232,15,2,232,1,25,9,237,206,212,17,33,4,246,221,194,207,255,31,37,10,249,
240,204,215,237,249,22,25,45,16,215,210,209,236,8,13,21,40,12,213,202,209,12,29,8,11,249,6,232,186,234,
24,38,38,255,226,238,230,238,244,0,45,23,8,4,226,243,9,255,242,14,37,7,240,220,220,23,46,0,0,11,
2,227,195,248,21,33,47,13,7,221,199,243,24,62,38,8,0,239,253,250,224,236,24,66,54,241,227,2,250,249,
252,250,21,32,11,246,241,246,243,242,1,55,66,245,188,193,2,56,40,15,17,28,245,199,203,234,22,49,45,31,
35,23,224,183,202,0,52,80,31,230,245,0,234,228,247,8,48,60,249,222,236,255,21,0,23,55,0,223,189,188,
32,89,50,224,217,20,7,220,191,251,75,40,1,249,252,252,234,252,19,30,35,250,236,8,12,25,249,215,239,7,
21,255,2,47,43,242,207,243,17,0,221,226,54,104,34,185,166,0,65,12,209,250,47,30,240,229,19,23,246,231,
233,31,49,245,193,212,52,89,249,185,254,44,23,3,238,237,254,12,4,243,15,15,253,253,221,246,255,229,253,14,
45,23,206,159,173,251,57,101,70,239,196,209,250,4,247,241,9,5,228,212,219,25,39,245,234,22,54,0,194,204,
11,46,2,216,223,251,36,32,210,189,13,50,7,210,203,13,35,254,242,245,35,50,249,221,231,12,47,1,175,177,
8,95,97,11,208,206,215,233,9,49,61,54,12,223,207,198,235,44,80,44,249,8,13,226,195,221,33,77,69,12,
218,222,224,226,8,38,35,24,19,17,232,186,215,1,53,76,3,217,252,19,5,215,206,54,114,28,205,195,239,28,
30,25,6,230,246,10,254,18,40,18,242,200,202,244,16,56,62,25,2,212,199,9,35,23,29,29,9,231,230,253,
237,0,60,55,254,237,12,252,229,248,250,6,41,40,3,236,215,246,34,234,214,21,84,72,252,195,184,7,44,250,
234,9,68,34,210,213,238,20,29,238,246,31,33,254,221,237,2,12,250,245,47,66,13,229,214,191,240,64,58,34,
7,1,37,252,166,174,253,65,61,26,56,29,206,188,188,231,250,9,108,112,18,211,181,213,252,0,35,76,22,227,
225,201,244,47,47,26,0,0,242,238,248,239,9,27,0,245,12,34,24,229,193,221,250,17,16,247,247,255,251,226,
197,213,24,56,10,247,255,237,231,223,248,47,28,4,6,2,1,237,241,11,4,236,8,47,1,217,228,253,17,7,
7,16,241,219,235,234,221,248,25,27,2,230,228,245,252,254,253,249,254,253,249,246,0,18,12,254,236,240,6,4,
250,246,2,19,9,246,233,236,251,7,8,249,246,245,252,0,234,245,5,0,15,11,237,233,1,28,20,251,243,230,
248,39,30,235,236,23,36,241,223,11,23,18,253,252,9,251,0,243,2,16,242,12,17,247,230,230,20,45,27,231,
197,240,21,12,8,9,33,42,240,210,219,14,47,14,3,248,5,38,5,194,202,39,48,236,232,8,24,255,202,229,
48,60,12,208,221,6,5,18,26,20,10,221,221,9,28,20,7,18,26,13,237,227,6,32,17,0,5,6,28,23,
235,227,18,48,250,229,10,47,52,243,223,3,33,40,244,219,253,18,24,1,245,35,34,231,221,5,24,227,206,249,
62,112,32,195,208,14,22,239,246,13,21,25,15,250,7,18,254,237,223,13,55,8,188,192,6,33,34,10,231,250,
27,0,200,219,26,49,25,2,233,219,247,17,13,4,3,240,250,15,0,242,225,231,242,241,17,43,9,216,225,8,
10,219,198,224,11,50,19,244,252,240,215,199,231,28,33,0,249,255,230,231,248,242,1,4,239,247,252,251,249,225,
240,254,235,244,6,23,19,255,230,201,228,17,20,249,235,2,20,9,221,210,255,21,17,4,236,234,245,230,243,6,
255,4,250,234,243,245,233,237,2,8,7,238,221,251,11,246,232,253,11,23,2,213,225,247,17,21,241,0,12,250,
1,245,229,224,1,52,24,1,234,231,8,241,243,250,18,48,0,252,251,236,253,243,4,19,38,54,242,206,233,0,
5,2,31,23,32,44,233,210,232,13,12,254,23,14,3,244,240,17,29,25,8,233,230,239,20,70,21,239,16,6,
5,24,4,2,11,1,7,25,31,17,240,210,255,53,50,31,0,0,14,13,0,237,6,41,48,27,250,235,242,16,
35,24,9,17,21,248,224,207,245,80,78,33,22,251,237,214,215,26,32,27,58,49,19,218,167,180,247,66,94,50,
244,254,12,227,214,253,27,10,243,3,62,88,34,209,177,236,40,35,4,240,248,8,247,234,254,249,253,11,7,15,
237,195,215,7,33,20,15,2,255,1,221,207,237,4,16,13,8,17,7,226,207,223,252,254,251,19,22,16,14,230,
205,217,242,3,246,6,24,4,249,229,216,214,243,26,24,1,228,233,251,242,238,244,250,250,253,12,20,241,199,202,
249,39,4,218,234,253,254,213,197,229,10,25,2,248,229,210,225,0,1,232,7,23,0,7,246,215,217,255,20,249,
2,1,244,23,248,226,0,248,6,5,236,243,6,18,246,219,242,3,17,19,237,245,252,230,249,245,0,31,23,5,
220,211,246,0,16,24,34,16,215,212,226,19,39,255,29,25,9,254,206,231,254,28,41,4,25,13,4,254,209,215,
0,60,59,14,255,15,29,221,209,18,29,12,9,17,3,243,252,251,12,35,5,254,5,237,250,250,247,36,22,244,
3,21,5,241,244,0,24,20,0,254,251,39,42,244,235,246,8,13,15,10,246,1,14,15,5,248,252,32,40,217,
201,15,39,18,250,5,15,238,225,250,14,16,9,3,4,255,2,10,255,250,237,242,255,6,47,50,9,228,197,217,
19,45,27,252,245,252,244,243,253,244,251,30,32,236,198,226,2,13,13,0,3,24,11,223,222,0,254,248,6,5,
255,253,22,35,248,238,229,201,251,17,4,10,250,9,24,238,191,204,6,44,35,246,226,241,7,251,211,224,4,22,
17,0,246,228,243,4,239,239,3,14,6,245,239,224,226,0,9,10,19,6,241,231,226,234,3,13,4,254,255,252,
246,241,221,230,13,13,0,0,243,247,255,239,233,241,17,31,253,236,238,0,17,2,219,223,19,22,2,0,227,221,
20,18,241,247,237,1,14,238,244,13,9,231,237,7,7,15,254,243,11,21,243,222,244,8,31,32,8,247,251,255,
228,237,21,27,23,0,248,13,244,220,245,10,25,32,26,3,231,226,246,25,21,237,249,32,27,7,247,249,7,235,
223,10,33,30,17,239,252,45,23,234,228,253,27,31,24,11,254,244,236,9,37,17,0,255,16,32,7,245,3,30,
41,12,255,12,26,15,221,236,37,24,0,6,22,39,20,235,231,15,41,20,253,13,20,5,255,244,17,32,251,236,
6,33,32,16,8,9,245,235,251,3,32,32,5,5,1,250,253,243,243,25,55,41,5,245,238,215,217,10,51,43,
16,5,0,236,227,238,1,14,15,23,4,241,242,247,2,13,22,8,237,229,3,28,14,255,238,249,19,22,4,233,
250,17,7,245,238,3,31,24,234,226,9,36,13,218,223,23,41,253,229,243,2,20,248,228,12,11,247,248,255,1,
247,254,1,14,20,247,248,18,4,230,247,247,245,39,24,243,241,248,9,254,254,1,2,13,246,232,244,249,0,17,
24,5,238,240,14,2,219,233,26,52,13,236,230,245,17,249,234,250,24,50,3,230,235,241,3,7,20,24,12,250,
225,241,12,12,0,238,251,17,3,251,244,2,15,250,251,3,2,2,9,6,250,247,246,2,2,4,14,253,245,252,
5,248,234,246,252,24,37,8,227,225,15,8,230,247,27,40,11,238,235,2,14,240,222,3,43,19,229,240,24,23,
254,246,3,11,252,241,248,8,6,4,16,6,1,5,245,244,251,255,7,6,21,24,9,248,227,254,16,245,237,6,
36,30,251,230,240,252,4,6,1,12,32,22,239,224,249,22,20,244,252,31,29,13,253,241,244,3,23,13,0,3,
5,22,26,255,243,255,10,14,0,250,5,13,24,25,5,255,20,23,230,200,236,39,58,20,245,9,26,0,228,216,
246,31,26,1,0,23,15,246,241,250,10,18,7,3,12,6,244,237,0,25,16,1,2,1,2,3,7,5,255,253,
244,3,34,25,0,238,236,10,27,2,231,255,29,20,1,237,247,21,16,254,246,246,8,19,3,250,239,242,12,18,
1,248,250,10,15,0,239,244,17,11,246,249,248,3,10,252,2,12,255,251,2,251,246,252,255,5,9,6,0,252,
240,234,0,30,27,248,231,240,5,13,238,228,3,20,22,7,233,233,255,255,255,255,253,12,13,2,238,227,255,1,
252,8,19,24,243,225,2,0,240,242,250,13,17,7,17,6,224,232,249,241,9,18,5,10,6,4,246,240,11,3,
242,251,244,17,45,255,230,247,8,12,230,218,15,56,26,227,223,0,14,2,238,236,17,39,4,244,3,0,251,240,
229,252,16,24,20,243,226,245,252,2,2,240,247,21,35,16,241,237,239,233,250,16,34,33,253,240,4,4,246,243,
249,3,19,20,15,1,243,0,0,238,246,17,21,1,251,248,6,10,239,242,7,14,7,250,246,254,9,0,243,246,
3,18,9,250,244,247,249,252,6,8,9,7,253,251,254,255,251,247,0,11,8,1,4,0,242,241,254,18,25,11,
245,243,6,9,252,237,254,29,23,250,237,255,14,2,235,240,24,41,13,239,232,246,0,6,13,19,20,14,255,240,
246,249,249,2,15,33,28,4,236,233,255,5,0,0,14,26,12,5,0,239,252,9,10,17,6,0,10,3,1,1,
245,245,1,14,17,13,5,253,253,254,245,243,5,24,22,8,1,249,232,223,239,17,37,25,252,235,240,255,6,248,
245,12,23,13,2,247,242,238,237,1,14,9,22,23,251,234,230,237,6,21,13,0,9,16,255,244,239,241,242,6,
27,18,24,7,232,231,234,255,18,17,22,11,239,231,239,252,17,23,2,0,5,250,237,229,249,21,25,7,251,10,
8,251,249,228,222,4,38,29,10,250,245,251,248,0,9,12,16,4,4,7,231,216,250,23,26,21,5,238,245,253,
248,250,243,1,17,20,10,232,243,249,233,14,30,12,1,249,248,0,16,2,249,6,9,5,241,247,6,246,247,255,
2,10,4,255,253,3,3,246,240,249,19,26,250,240,255,1,254,250,254,3,17,8,231,245,10,4,7,6,4,9,
254,235,244,16,31,8,238,250,17,16,245,234,249,0,7,12,6,0,247,244,249,1,9,3,251,2,7,254,244,248,
0,1,8,6,252,245,247,0,9,9,252,235,240,9,20,3,242,253,9,252,240,249,14,17,251,240,251,9,15,255,
239,252,7,249,249,1,1,8,6,247,240,254,13,9,252,243,249,0,4,10,7,2,0,253,245,241,253,5,5,2,
249,2,12,0,247,243,252,11,7,247,248,5,5,0,0,0,246,246,6,21,18,254,247,246,241,249,251,0,9,19,
19,0,246,244,251,249,238,248,12,30,19,242,238,252,253,250,1,8,12,12,0,248,4,0,230,233,10,24,18,255,
247,0,1,243,232,255,21,19,7,249,2,9,249,232,242,12,11,244,248,18,21,1,245,243,249,253,0,0,8,13,
255,251,251,249,251,254,4,4,8,2,248,255,0,0,9,3,243,245,5,14,6,248,0,5,251,249,250,1,9,7,
0,246,247,1,3,7,253,250,6,248,242,0,1,18,17,247,246,4,9,250,232,239,12,33,24,6,247,245,248,246,
255,7,9,16,26,22,253,224,224,245,3,21,14,5,19,5,249,240,228,244,18,27,5,2,255,248,5,4,2,1,
10,21,254,234,255,18,8,6,14,4,1,1,246,247,255,0,255,13,28,10,247,235,232,246,8,34,31,0,247,242,
242,252,251,1,20,18,255,240,246,255,3,5,0,252,253,5,11,255,240,251,14,7,248,0,15,4,241,239,252,15,
10,247,251,254,0,11,0,239,248,255,255,1,249,250,10,14,0,238,246,0,252,251,1,8,5,254,246,249,2,255,
248,249,0,10,15,251,234,252,8,254,243,245,5,18,10,248,243,0,5,245,238,254,11,17,6,249,249,253,248,239,
247,8,12,5,253,0,5,250,238,242,2,14,7,0,1,0,246,238,249,7,9,7,1,1,0,240,239,252,2,12,
13,9,0,246,240,244,4,5,0,4,8,13,7,242,239,0,7,252,242,0,13,10,252,245,1,7,246,240,252,8,
12,1,252,0,0,254,252,254,1,3,4,1,1,0,252,253,250,250,3,8,9,2,249,246,0,11,1,252,252,254,
7,6,252,254,10,9,247,240,254,14,7,252,1,5,9,0,236,244,8,11,4,250,0,15,7,245,246,3,8,3,
6,253,251,8,253,249,11,9,248,247,9,9,1,6,254,253,4,251,248,2,12,7,254,6,12,252,244,251,0,11,
4,247,0,11,15,3,245,246,254,13,9,246,255,9,5,4,2,251,254,8,1,247,255,11,14,7,252,254,8,4,
4,252,248,20,23,5,253,248,5,10,254,244,1,28,21,3,243,237,10,15,246,253,19,21,14,255,244,0,254,245,
254,14,32,24,247,230,248,14,11,250,249,6,22,25,255,237,253,9,18,10,239,243,11,18,6,255,253,6,21,3,
243,245,253,15,15,0,0,8,5,249,239,246,13,20,4,0,4,251,241,252,11,12,4,251,252,1,1,3,4,1,
3,2,0,2,5,1,249,246,252,6,14,7,250,248,251,255,254,254,5,12,11,255,244,240,246,4,9,4,3,6,
5,1,248,241,253,9,7,3,3,1,252,248,244,250,8,13,5,250,244,248,1,4,253,251,4,7,0,251,248,248,
2,7,254,249,2,8,2,250,247,0,5,254,247,251,8,13,0,242,246,0,3,0,250,250,1,7,3,248,245,253,
2,5,252,246,2,8,0,249,246,251,2,6,2,252,253,250,255,4,251,247,0,4,7,7,253,248,248,250,1,3,
254,253,0,5,8,253,244,248,1,1,250,0,8,11,5,250,248,250,251,253,1,9,7,0,254,254,253,251,253,3,
2,255,254,2,10,253,246,0,2,6,1,254,2,2,0,253,255,4,1,255,0,2,7,4,248,245,3,13,3,251,
254,7,15,2,241,238,251,12,14,11,5,255,0,247,245,252,0,12,15,9,255,247,255,0,254,3,7,1,3,6,
1,254,246,247,4,10,5,0,10,7,246,246,253,10,16,7,254,248,0,1,254,3,0,254,7,13,9,251,243,255,
9,3,247,246,10,20,11,251,240,255,4,252,254,0,0,4,9,11,11,0,244,249,0,6,7,2,4,6,8,3,
249,247,252,3,9,9,7,0,249,253,0,255,4,2,3,10,6,4,255,248,255,1,4,13,13,254,245,249,0,4,
254,250,4,20,18,254,238,242,255,2,0,4,14,16,0,249,250,250,0,0,0,11,16,10,253,245,251,0,253,252,
5,9,14,10,251,251,0,248,244,1,11,14,18,6,249,245,243,250,0,2,1,10,18,5,249,248,251,252,249,252,
12,21,7,252,248,252,1,249,241,254,21,26,11,250,240,246,253,249,253,10,18,16,3,250,245,239,246,3,7,9,
9,4,0,252,249,252,254,0,4,5,8,9,255,242,241,253,10,6,252,253,2,9,6,246,238,250,10,8,255,0,
3,0,253,250,248,1,10,2,247,248,4,5,253,254,0,5,5,253,248,252,255,255,2,5,6,1,253,253,0,255,
252,0,1,2,3,255,249,250,0,3,1,253,252,0,0,249,253,4,4,0,252,251,1,4,253,249,0,3,3,255,
250,254,254,253,254,0,3,1,0,253,1,6,0,249,249,255,3,2,0,255,0,254,255,0,252,255,6,3,252,250,
255,255,0,1,253,2,6,0,252,249,0,4,4,0,247,252,3,3,1,251,0,6,2,254,248,246,255,2,0,3,
9,9,0,245,243,250,0,4,2,4,11,7,253,244,246,255,4,4,3,5,9,2,248,249,248,252,1,3,12,14,
5,250,243,246,246,252,6,12,16,9,252,244,243,241,249,10,18,18,6,253,252,243,239,252,8,18,24,10,245,237,
241,251,2,9,15,12,8,2,245,241,245,254,8,14,10,4,5,3,248,238,241,0,16,20,10,1,253,249,247,248,
0,10,15,10,0,253,254,252,245,252,9,11,12,9,0,248,246,251,255,2,8,9,10,7,252,244,247,253,0,6,
9,8,8,3,253,249,246,248,7,16,7,0,251,255,8,2,249,248,252,3,12,8,255,253,1,0,249,251,5,16,
14,2,254,251,252,254,254,3,9,10,6,253,248,250,0,3,5,8,8,0,252,252,250,253,5,7,9,10,1,251,
251,254,0,0,0,5,7,6,4,2,0,251,249,253,0,4,3,6,11,2,253,253,252,254,0,1,8,12,8,3,
249,243,249,1,7,7,7,8,4,253,250,250,251,3,11,9,2,254,255,0,255,255,2,6,7,1,255,254,250,251,
0,4,8,6,0,255,0,254,251,255,6,8,4,254,252,0,2,0,0,0,2,3,3,1,255,254,255,0,0,2,
1,4,2,251,249,254,5,9,5,0,0,3,1,251,250,1,10,7,254,253,0,1,0,251,251,4,7,3,255,0,
1,255,252,252,255,4,5,0,0,4,1,251,251,255,3,2,255,0,8,9,255,250,252,253,0,3,3,2,2,2,
0,251,251,255,0,2,3,3,6,4,255,248,248,254,3,7,8,3,0,254,251,253,254,255,3,9,5,0,2,0,
253,250,250,1,10,10,1,254,0,0,254,251,253,0,6,8,6,1,248,245,253,3,6,7,5,2,0,251,250,253,
0,2,5,9,8,255,248,249,251,2,8,7,3,0,0,255,251,250,254,8,10,0,255,0,0,253,252,1,5,8,
4,252,251,254,0,0,255,3,8,4,254,254,254,255,0,1,3,3,0,253,254,3,1,254,1,6,4,0,254,254,
0,1,1,0,2,2,2,255,254,0,0,1,2,1,2,0,253,254,255,2,8,4,1,1,251,251,0,6,5,2,
1,1,0,254,252,255,1,3,5,3,3,3,254,250,254,2,5,5,3,0,255,0,0,0,0,3,5,3,254,251,
254,4,6,2,0,0,1,1,0,255,2,7,7,3,254,251,253,3,2,253,1,8,7,3,0,253,253,255,0,1,
5,6,1,253,252,253,1,1,1,4,4,5,3,253,251,252,255,1,5,6,5,1,251,251,255,0,0,1,3,2,
2,1,253,253,0,0,1,3,0,254,255,2,3,255,252,254,2,2,0,255,2,5,3,254,249,254,5,3,0,0,
4,2,255,253,255,0,0,0,0,0,200,0,4,0,1,0,191,0,180,1,28,8,44,10,124,13,216,14,128,28,
50,41,25,54,56,53,42,34,11,8,185,107,137,120,120,120,185,107,127,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,191,0,180,1,28,8,44,10,124,13,
216,14,128,28,80,77,35,75,77,73,57,47,15,11,185,107,137,120,120,120,185,107,127,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,191,0,180,1,28,8,
44,10,124,13,216,14,128,28,70,65,32,69,71,67,53,43,13,10,185,107,137,120,120,120,185,107,127,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,191,0,
180,1,28,8,44,10,124,13,216,14,128,28,0,29,22,46,48,45,35,29,9,7,185,107,137,120,120,120,185,107,
127,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,
175,0,4,0,1,0,214,0,168,2,240,5,200,9,22,13,200,14,102,27,45,38,30,56,55,42,32,25,11,3,
179,145,174,120,120,120,200,127,165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,
197,24,223,182,176,250,125,182,3,0,214,0,168,2,240,5,200,9,22,13,200,14,102,27,70,61,38,71,70,53,
40,31,14,5,179,145,174,120,120,120,200,127,165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,
24,53,0,191,197,254,124,182,1,250,0,0,1,0,214,0,168,2,240,5,200,9,22,13,200,14,102,27,60,51,
35,65,64,48,37,29,13,4,179,145,174,120,120,120,200,127,165,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,1,0,214,0,168,2,240,5,200,9,22,13,200,14,
102,27,0,28,25,48,47,36,27,21,9,3,179,145,174,120,120,120,200,127,165,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,172,7,130,0,1,1,1,1,1,1,
1,2,4,12,31,46,11,197,182,214,6,55,45,33,240,222,13,255,213,207,230,4,90,100,0,167,227,243,38,96,
2,131,232,24,14,75,16,202,2,34,243,255,239,214,7,41,2,11,20,17,13,235,211,226,247,19,6,19,16,35,
6,1,9,216,216,255,0,52,53,255,249,242,247,255,249,232,207,233,32,41,0,21,2,234,252,251,29,57,247,206,
220,232,54,39,14,222,240,239,8,49,37,3,222,223,0,37,16,240,237,249,24,10,245,212,227,7,52,32,244,226,
230,4,0,0,16,41,45,23,212,217,231,17,26,4,238,218,239,254,249,255,226,247,7,1,233,217,238,19,40,64,
20,3,242,231,246,3,250,0,18,18,10,14,22,9,10,251,217,235,10,10,15,12,24,32,30,230,222,231,1,9,
4,251,252,20,27,15,254,231,231,241,255,7,9,5,3,246,254,12,236,238,225,7,13,8,12,246,4,10,8,249,
239,1,2,231,227,10,21,81,57,250,200,214,225,6,24,1,253,9,22,12,251,230,232,250,18,12,7,247,249,246,
249,253,5,4,6,255,240,235,248,23,42,9,248,229,0,6,19,0,239,247,8,20,8,255,248,5,22,32,11,244,
228,238,254,12,10,0,252,3,4,0,4,0,253,249,251,3,11,5,5,248,233,247,0,10,8,250,237,247,5,3,
255,2,249,249,0,3,2,0,251,250,4,3,5,12,12,2,252,252,250,8,10,5,6,13,3,3,7,251,255,253,
244,250,4,0,3,4,253,243,246,250,1,1,251,245,255,3,2,2,251,244,247,251,251,8,2,248,254,5,6,2,
5,255,0,253,250,7,10,7,255,0,0,5,11,10,6,1,250,0,3,2,251,253,3,9,10,2,255,253,254,6,
10,8,0,252,4,10,5,253,246,252,0,7,7,1,3,252,253,0,4,1,0,255,253,253,0,255,1,0,254,253,
2,2,0,2,1,255,255,255,0,4,3,0,0,0,1,1,2,2,2,3,0,2,3,1,0,0,255,0,0,2,
2,3,2,1,0,254,252,0,0,0,0,255,255,0,0,255,254,253,253,254,0,0,2,255,251,251,254,0,2,0,
255,255,255,1,2,0,255,255,255,0,3,2,1,255,254,254,0,2,2,0,255,255,0,0,0,0,0,0,255,254,
0,1,1,254,254,255,255,1,1,255,254,255,255,0,0,0,0,0,0,1,0,1,0,255,254,254,0,1,2,2,
0,255,0,1,0,1,0,254,1,2,2,1,0,255,0,0,0,1,0,0,255,0,0,2,2,2,0,255,0,0,
1,0,0,0,0,1,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,255,0,0,0,1,0,0,
0,1,0,0,0,0,0,1,2,0,0,0,0,0,1,0,0,0,0,0,0,2,2,1,0,0,255,0,0,0,
0,0,0,0,1,1,0,255,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,1,1,0,255,0,0,0,0,0,
0,0,0,1,0,0,255,0,0,1,0,0,255,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,1,0,0,0,1,1,0,0,0,0,
1,1,1,0,0,0,1,1,1,0,0,0,0,0,2,1,1,0,0,1,1,0,0,0,0,2,1,1,0,0,
0,0,0,1,1,1,0,0,0,2,0,0,0,1,1,1,2,0,0,0,1,1,1,0,0,1,1,0,1,1,
1,1,1,1,0,1,1,1,1,1,0,0,0,0,2,1,0,0,0,0,1,1,1,1,0,1,1,0,0,0,
1,2,1,1,1,0,0,0,1,1,1,1,0,0,2,1,0,1,0,0,2,0,0,0,0,2,2,0,0,0,
2,1,0,0,0,1,2,1,0,0,1,1,1,1,0,0,0,1,1,2,0,0,0,1,0,0,0,1,1,1,
0,0,0,0,0,1,0,0,1,1,0,0,0,1,2,0,0,0,0,1,1,0,0,1,1,0,0,0,0,1,
1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,255,0,0,1,2,0,255,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,1,0,0,255,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,255,255,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,1,0,0,0,255,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,2,3,2,255,251,247,247,251,1,8,10,7,
4,1,254,252,249,250,248,255,4,9,10,4,2,0,255,254,253,255,254,1,3,3,1,255,255,254,0,0,1,3,
2,1,0,254,254,252,254,254,0,2,3,4,4,2,0,254,254,254,255,0,2,3,3,2,2,0,255,0,0,0,
1,2,1,0,0,0,0,0,1,1,2,1,0,254,251,252,255,1,3,3,3,2,1,0,0,253,252,253,0,4,
5,5,4,2,0,0,0,254,254,0,2,3,1,1,0,0,255,0,0,0,1,1,0,0,0,0,0,0,255,0,
2,4,3,2,0,0,0,0,255,0,0,2,3,3,1,1,0,0,0,0,0,1,1,0,0,0,0,0,0,0,
0,0,0,1,1,0,0,0,0,0,0,0,0,1,3,3,1,0,0,0,0,0,1,1,1,1,1,1,0,0,
0,0,0,0,0,0,0,255,254,253,255,2,5,6,3,0,254,253,255,0,0,0,2,4,5,5,2,0,254,253,
255,1,2,1,0,0,0,0,1,0,255,255,0,1,2,1,0,0,255,255,0,0,0,0,2,3,2,2,0,255,
0,0,1,2,1,1,1,1,1,0,0,0,2,2,1,0,255,253,251,251,253,0,2,5,7,5,1,254,253,252,
252,253,255,2,5,7,7,4,0,254,254,255,0,0,0,2,2,1,1,0,255,255,255,0,1,1,1,0,255,255,
255,255,255,0,0,2,4,3,2,1,0,254,255,0,0,1,2,2,2,1,0,0,0,255,0,0,1,0,0,0,
255,0,0,0,0,0,0,1,0,0,0,0,0,1,2,2,1,0,0,254,253,253,253,254,1,3,6,7,3,255,
251,251,253,255,255,0,2,4,5,5,1,254,252,252,0,1,2,1,1,0,1,1,0,255,254,0,2,3,2,0,
0,254,255,0,0,0,0,0,2,3,2,0,255,255,255,0,0,1,1,1,2,1,0,0,255,0,0,0,1,2,
1,0,255,0,0,0,0,0,1,2,1,0,0,255,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,
0,1,1,0,0,0,0,2,2,1,0,254,253,252,254,1,2,3,4,3,2,255,253,254,255,0,0,3,4,2,
1,0,0,255,0,1,1,2,0,0,0,0,0,255,0,0,0,2,2,3,1,0,0,255,255,255,0,1,1,2,
3,2,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,1,2,
1,1,1,1,0,0,0,0,1,1,1,1,1,0,1,0,0,0,0,0,0,0,1,1,0,0,0,0,1,1,
0,0,0,0,1,1,0,0,0,1,1,1,0,1,1,1,1,1,0,0,0,1,1,0,0,0,0,0,1,1,
1,0,0,0,0,0,0,0,254,254,0,2,4,3,2,0,0,0,1,1,0,0,0,2,3,2,0,0,255,0,
1,2,2,0,0,0,0,0,0,0,0,0,1,2,2,1,0,0,0,0,0,0,0,0,1,2,2,1,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,1,1,0,0,1,1,1,
0,0,0,0,1,1,1,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,
0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,35,0,3,0,5,0,136,0,216,0,220,5,140,10,228,12,24,16,124,21,35,9,
16,16,9,6,3,3,0,0,200,212,187,255,255,175,200,212,187,44,30,50,85,54,0,0,0,0,40,0,0,0,
0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,1,0,136,0,216,0,220,5,140,10,228,12,24,16,
124,21,0,9,16,16,9,6,3,3,0,0,200,212,187,255,255,175,200,212,187,44,30,50,85,54,0,0,0,0,
40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,136,0,216,0,220,5,140,10,
228,12,24,16,124,21,0,9,16,16,9,6,3,3,0,0,200,212,187,255,255,175,200,212,187,44,30,50,85,54,
0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,0,0,6,0,1,0,
180,0,128,2,120,5,126,9,233,12,116,14,176,27,40,47,32,60,67,43,38,31,13,3,174,157,145,120,120,120,
200,120,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,
125,182,3,0,180,0,128,2,120,5,126,9,233,12,116,14,176,27,45,105,48,89,101,65,57,47,19,4,174,157,
145,120,120,120,200,120,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,
124,182,1,250,0,0,1,0,187,0,120,2,181,5,125,9,234,12,110,14,189,27,45,78,41,77,87,59,51,42,
16,4,175,155,147,120,120,120,200,120,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,
0,182,8,0,0,0,1,250,0,0,1,0,216,0,88,2,184,6,136,9,242,12,86,14,243,27,70,61,33,67,
75,58,50,40,14,5,180,144,158,120,120,120,200,120,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,
222,182,0,0,0,0,188,40,60,182,64,250,23,8,1,0,156,0,96,1,192,8,140,10,152,13,166,14,32,28,
40,44,33,56,50,60,46,33,10,8,167,90,195,120,120,120,122,120,135,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,40,60,182,40,54,0,191,77,60,59,182,64,250,23,8,1,0,156,0,96,1,192,8,160,10,92,13,
10,15,32,28,0,31,30,47,48,44,40,32,9,8,167,90,135,120,120,120,122,120,120,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,0,0,0,0,0,0,0,146,23,0,0,0,250,0,0,245,0,5,0,1,0,253,0,
168,2,120,5,238,9,66,13,215,14,0,28,45,45,40,54,70,39,36,26,12,3,200,140,140,120,120,120,150,175,
150,44,45,70,130,59,155,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,
3,0,253,0,168,2,120,5,238,9,66,13,215,14,0,28,70,81,54,72,94,52,48,35,17,4,200,140,140,120,
120,120,150,175,150,44,45,70,130,59,160,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,
1,250,0,0,1,0,211,0,232,1,108,7,133,10,75,13,255,14,10,27,70,48,35,52,65,48,46,31,13,4,
183,150,134,120,120,120,158,175,135,44,45,70,130,60,175,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,
8,0,0,0,1,250,0,0,1,0,169,0,56,1,192,8,28,11,84,13,40,15,20,26,60,31,20,37,44,47,
47,30,11,5,166,170,129,120,120,120,167,190,120,44,45,70,130,60,175,0,0,0,40,0,0,0,0,250,222,182,
0,0,0,0,188,40,60,182,64,250,23,8,1,0,169,0,56,1,192,8,28,11,84,13,40,15,20,26,0,16,
14,27,32,34,34,22,8,3,166,170,129,120,120,120,167,190,120,44,45,70,130,60,175,0,0,0,40,0,0,0,
0,40,60,182,40,54,0,191,77,60,59,182,64,250,23,8,0,0,6,0,1,0,238,0,168,2,60,5,136,9,
48,12,191,14,88,28,46,47,26,58,67,47,36,31,12,5,170,131,172,120,120,120,255,120,142,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,238,0,168,2,
60,5,136,9,48,12,191,14,88,28,25,108,40,88,102,72,56,48,19,8,170,131,172,120,120,120,255,120,142,44,
45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,
230,0,128,2,32,5,124,9,50,12,193,14,92,28,43,69,31,71,80,54,44,36,15,6,169,133,166,120,120,120,
255,132,138,44,45,70,130,58,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,
0,0,1,0,198,0,248,1,176,4,76,9,58,12,204,14,112,28,60,71,28,76,72,41,43,25,14,8,166,142,
142,120,120,120,170,180,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,
60,182,64,250,23,8,5,0,192,0,174,1,196,4,172,8,204,11,141,14,224,28,46,39,28,64,39,27,18,16,
8,8,162,120,135,120,120,120,117,90,180,44,45,70,130,59,0,0,0,0,40,0,0,0,0,40,60,182,40,54,
0,191,77,60,59,182,64,250,23,8,1,0,176,0,134,1,189,3,92,8,204,11,141,14,224,28,0,33,24,58,
38,22,15,12,9,8,152,120,75,120,120,120,107,90,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,
0,0,0,0,0,0,146,23,0,0,0,250,0,0,247,0,5,0,1,0,251,0,128,2,96,4,92,10,60,12,
48,14,235,27,45,49,32,65,69,26,39,24,7,5,182,124,126,120,120,120,105,139,135,44,45,70,130,59,160,0,
0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,251,0,128,2,96,4,
92,10,60,12,48,14,235,27,60,70,39,78,82,31,47,29,8,6,182,124,126,120,120,120,105,139,135,44,45,70,
130,59,160,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,230,0,
8,2,52,3,56,10,10,12,13,14,253,27,80,44,41,50,48,30,37,25,7,6,184,116,124,120,120,120,105,149,
135,44,45,70,130,59,170,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,
1,0,208,0,136,1,8,2,20,10,216,11,234,13,15,28,62,26,39,30,16,28,28,19,6,5,186,83,122,120,
120,120,105,135,135,44,45,70,130,60,155,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,
64,250,23,8,1,0,222,0,130,1,0,5,0,10,194,12,197,14,136,27,0,22,47,35,19,23,22,17,6,3,
153,71,106,120,120,120,67,135,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,40,60,182,40,54,0,191,
77,60,59,182,64,250,23,8,165,0,3,0,1,0,116,0,24,2,140,5,116,9,188,12,116,14,88,27,110,86,
41,79,96,54,56,43,23,8,167,150,135,120,120,120,197,120,120,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,7,0,116,0,24,2,136,5,16,9,88,12,16,14,
88,27,55,24,22,43,46,30,28,21,11,4,167,150,135,120,120,120,197,120,120,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,116,0,72,2,120,5,208,7,
224,11,152,13,88,27,0,21,22,43,37,30,13,11,6,4,167,150,135,120,120,120,197,120,120,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,0,0,3,0,1,0,
116,0,24,2,140,5,116,9,188,12,116,14,88,27,50,50,31,60,73,41,43,33,17,6,167,150,135,120,120,120,
197,120,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,
125,182,3,0,116,0,24,2,140,5,116,9,188,12,116,14,88,27,90,86,41,79,96,54,56,43,23,8,167,150,
135,120,120,120,197,120,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,
124,182,1,250,0,0,1,0,116,0,24,2,140,5,116,9,188,12,116,14,88,27,0,42,28,55,67,38,39,30,
16,6,167,150,135,120,120,120,197,120,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,
0,182,8,0,0,0,1,250,0,0,0,0,3,0,1,0,123,0,15,2,181,5,176,9,198,12,136,14,38,27,
50,49,30,62,69,42,44,32,16,6,166,145,133,120,120,120,197,120,120,44,45,70,130,59,0,0,0,0,40,0,
0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,123,0,15,2,181,5,176,9,198,12,
136,14,38,27,90,88,40,83,92,56,58,43,22,8,166,145,133,120,120,120,197,120,120,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,123,0,15,2,181,5,
176,9,198,12,136,14,38,27,0,42,27,57,63,38,40,30,15,5,166,145,133,120,120,120,197,120,120,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,201,0,6,0,
1,0,104,0,139,1,9,8,80,10,72,13,60,15,160,27,42,46,10,66,56,58,42,33,10,8,150,165,150,120,
120,120,150,105,165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,
176,250,125,182,3,0,104,0,139,1,20,8,160,10,72,13,60,15,32,27,50,60,16,66,78,77,67,37,15,8,
167,120,150,120,120,120,167,120,165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,
197,254,124,182,1,250,0,0,1,0,128,0,179,1,232,7,80,10,52,13,60,15,64,27,31,45,20,70,53,50,
46,25,9,8,180,90,150,120,120,120,180,105,165,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,
49,229,0,182,8,0,0,0,1,250,0,0,1,0,168,0,3,2,67,7,196,9,112,13,60,15,64,27,44,40,
25,65,56,50,38,25,12,8,167,90,150,120,120,120,167,90,165,44,45,70,130,59,0,0,0,0,40,0,0,0,
0,250,222,182,0,0,0,0,188,40,60,182,64,250,23,8,1,0,168,0,3,2,103,6,156,9,32,13,85,15,
64,28,34,25,21,43,43,45,36,20,6,8,167,150,120,120,120,120,167,105,135,44,45,70,130,59,0,0,0,0,
40,0,0,0,0,40,60,182,40,54,0,191,77,60,59,182,64,250,23,8,1,0,184,0,3,2,59,6,156,9,
112,13,29,16,192,28,0,25,26,43,39,39,31,16,4,8,167,150,120,120,120,120,167,105,135,44,45,70,130,59,
0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,146,23,0,0,0,250,0,0,180,0,4,0,1,0,
158,0,56,1,165,8,215,10,49,13,9,15,112,26,50,32,10,58,42,49,50,24,11,5,166,105,120,120,120,120,
130,75,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,
125,182,3,0,158,0,56,1,165,8,215,10,49,13,9,15,112,26,70,73,15,88,64,74,75,37,17,8,166,105,
120,120,120,120,130,75,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,
124,182,1,250,0,0,1,0,158,0,56,1,165,8,215,10,49,13,9,15,112,26,60,65,14,83,60,70,71,35,
16,7,166,105,120,120,120,120,130,75,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,
0,182,8,0,0,0,1,250,0,0,1,0,125,0,0,1,56,9,4,11,20,13,0,15,64,26,0,33,8,52,
52,53,54,29,11,8,167,99,114,120,120,120,167,105,120,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,
222,182,0,0,0,0,188,40,60,182,64,250,23,8,95,0,4,0,1,0,157,0,144,1,90,5,252,8,168,12,
181,14,148,25,45,41,21,56,54,42,37,29,12,9,174,125,138,121,121,130,187,126,137,44,45,70,130,59,0,0,
0,0,40,0,0,0,0,50,124,182,40,53,0,191,197,24,223,182,176,250,125,182,3,0,157,0,144,1,90,5,
252,8,168,12,181,14,148,25,90,74,29,75,73,56,50,39,16,12,174,125,138,121,121,130,187,126,137,44,45,70,
130,59,0,0,0,0,40,0,0,0,0,0,0,0,24,53,0,191,197,254,124,182,1,250,0,0,1,0,143,0,
183,1,0,5,65,9,121,12,164,14,155,26,50,60,29,67,70,44,41,32,16,7,168,136,140,120,120,123,187,126,
137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,49,229,0,182,8,0,0,0,1,250,0,0,
1,0,143,0,183,1,0,5,65,9,121,12,164,14,155,26,0,44,25,58,60,38,36,27,14,6,168,136,140,120,
120,123,187,126,137,44,45,70,130,59,0,0,0,0,40,0,0,0,0,250,222,182,0,0,0,0,188,40,60,182,
64,250,23,8,51,1,61,0,0,0,3,3,34,126,63,228,224,253,19,246,245,31,94,39,4,4,31,47,12,255,
17,4,41,10,7,12,9,8,13,12,5,243,226,244,244,251,240,226,238,62,71,228,217,12,18,14,249,10,3,233,
224,4,36,44,25,254,4,35,16,240,229,2,18,12,5,11,0,245,243,249,16,11,253,241,231,251,4,238,233,250,
8,11,3,252,0,250,243,254,5,37,34,8,239,251,34,27,27,11,16,40,29,12,11,7,7,239,247,6,23,9,
245,233,8,7,6,247,234,6,236,209,242,5,246,224,219,0,30,9,224,212,223,249,246,235,227,234,10,15,237,7,
242,22,6,217,215,0,48,10,217,227,12,32,7,235,2,9,231,226,241,248,28,221,213,247,17,5,248,246,244,214,
224,245,234,241,2,19,221,246,6,247,236,228,23,0,240,234,11,5,253,1,10,3,32,19,241,254,15,249,240,14,
35,8,238,20,47,17,252,246,241,0,13,33,1,9,5,9,0,6,20,0,249,244,3,250,0,39,11,220,241,39,
38,14,227,236,255,255,252,250,251,4,250,246,254,254,245,231,234,248,248,243,243,244,246,245,240,236,238,239,239,240,
239,242,244,238,233,239,242,243,242,235,234,238,236,240,240,246,0,5,6,9,5,241,242,245,251,10,2,19,23,19,
23,15,15,2,0,253,5,13,19,19,6,8,4,247,246,0];
var intonations=[115,49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,24,8,0,0,0,0,46,57,0,16,0,0,
255,80,50,255,4,5,248,248,248,251,251,251,0,64,8,0,70,18,24,12,0,70,18,24,12,0,0,0,0,0,
0,0,0,0,0,0,0,0,99,49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,24,8,0,0,
0,0,46,57,0,16,0,0,255,80,46,255,4,5,248,248,248,251,251,251,4,80,18,6,78,22,34,52,6,78,
22,34,52,0,0,0,0,0,0,0,0,0,0,0,0,0,113,49,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,12,38,22,7,0,0,0,0,45,56,0,16,0,0,255,75,43,255,3,5,249,249,249,0,0,0,4,89,
21,6,86,21,34,68,6,86,21,34,68,0,0,0,0,0,0,0,0,0,0,0,0,0,101,49,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,10,52,32,20,10,0,0,0,46,57,0,16,0,0,255,90,50,255,3,5,
247,247,247,0,0,0,0,92,8,0,92,80,76,8,0,92,80,76,8,0,0,0,0,0,0,0,0,0,0,0,
0,0,115,95,109,108,0,0,0,0,0,0,0,0,0,0,0,0,0,40,24,8,0,0,0,0,46,57,0,16,
0,0,255,40,60,255,3,5,15,15,15,30,30,30,0,64,8,0,70,18,24,12,0,70,18,24,12,0,0,0,
0,0,0,0,0,0,0,0,0,0,113,49,97,0,0,0,0,0,0,0,0,0,0,0,0,0,16,40,24,8,
0,0,0,0,46,57,0,16,0,0,255,75,43,255,4,5,249,249,249,0,0,0,4,88,22,6,82,22,34,66,
6,82,22,34,66,0,0,0,0,0,0,0,0,0,0,0,0,0,115,50,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,33,24,8,0,0,0,0,46,57,0,16,0,0,75,65,60,255,4,5,251,248,248,251,251,251,
0,44,28,0,50,42,34,28,0,50,42,34,28,0,0,0,0,0,0,0,0,0,0,0,0,0,99,50,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,40,24,8,0,0,0,0,46,57,0,16,0,0,255,65,50,255,
4,5,249,248,248,249,251,251,2,60,42,2,55,42,34,52,2,55,42,34,52,0,0,0,0,0,0,0,0,0,
0,0,0,0,113,50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,40,24,8,0,0,0,0,40,75,
0,16,0,0,255,75,43,255,4,5,249,249,249,249,0,0,2,70,50,2,35,45,60,70,2,35,45,60,70,0,
0,0,0,0,0,0,0,0,0,0,0,0,101,50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,52,
32,20,10,0,0,0,46,57,0,16,0,0,255,90,50,255,3,5,249,247,247,249,0,0,0,92,8,0,92,80,
76,8,0,92,80,76,8,0,0,0,0,0,0,0,0,0,0,0,0,0,115,51,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,40,24,8,0,0,0,0,46,57,0,16,0,0,255,80,50,255,4,5,249,248,248,249,
251,251,0,64,8,0,70,18,24,12,0,70,18,24,12,0,0,0,0,0,0,0,0,0,0,0,0,0,99,51,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,24,8,0,0,0,0,46,57,0,16,0,0,255,70,
30,255,4,5,249,248,248,249,251,251,4,75,50,0,70,18,24,12,0,70,18,24,12,0,0,0,0,0,0,0,
0,0,0,0,0,0,113,51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,40,24,8,0,0,0,0,
46,57,0,16,0,0,255,75,43,255,4,5,249,249,249,249,0,0,4,88,22,6,82,22,34,66,6,82,22,34,
66,0,0,0,0,0,0,0,0,0,0,0,0,0,101,51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
10,52,32,20,10,0,0,0,46,57,0,16,0,0,255,90,50,255,3,5,249,247,247,249,0,0,0,92,8,0,
92,80,76,8,0,92,80,76,8,0,0,0,0,0,0,0,0,0,0,0,0,0,115,52,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,40,24,8,0,0,0,0,46,57,0,16,0,0,255,80,50,255,4,5,249,248,
248,249,251,251,0,64,8,0,70,18,24,12,0,70,18,24,12,0,0,0,0,0,0,0,0,0,0,0,0,0,
99,52,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,24,8,0,0,0,0,46,57,0,16,0,0,
255,76,42,255,4,5,249,248,248,249,251,251,4,77,25,6,78,25,24,52,6,78,25,24,52,0,0,0,0,0,
0,0,0,0,0,0,0,0,113,52,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,35,28,38,0,
0,0,47,58,0,16,0,0,60,75,53,60,5,5,48,249,44,62,1,40,4,95,29,6,92,21,34,79,6,92,
21,34,79,0,0,0,0,0,0,0,0,0,0,0,0,0,101,52,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,25,51,48,44,42,0,0,0,46,57,0,16,0,0,255,77,53,80,5,5,249,249,72,249,0,60,0,92,
8,0,88,77,75,10,0,88,77,75,10,0,0,0,0,0,0,0,0,0,0,0,0,0];
var en_dict=[0,4,0,0,193,251,0,0,14,69,92,131,193,52,144,107,137,119,65,6,140,0,16,70,77,66,76,21,69,15,
89,47,113,55,122,47,139,0,14,69,64,20,212,73,144,48,141,89,47,34,37,0,8,197,40,19,15,65,144,17,
0,12,68,52,21,5,60,65,119,47,141,139,0,10,199,56,81,129,72,147,213,76,17,10,199,52,19,9,12,147,
213,76,17,18,71,12,132,153,76,19,9,76,49,34,124,89,13,55,124,89,0,15,70,5,85,15,65,54,64,133,
108,126,48,89,37,0,0,12,68,4,229,15,56,35,50,47,126,50,0,12,68,16,149,129,56,72,113,84,35,50,
0,20,72,16,144,80,32,19,143,85,48,72,140,6,35,83,13,50,13,89,0,0,18,71,80,18,87,4,225,83,
20,47,140,58,13,50,6,132,88,0,14,70,77,81,134,60,194,192,89,129,83,13,49,0,13,68,72,82,197,100,
34,4,132,49,6,132,0,10,199,12,83,5,9,34,84,100,17,17,71,5,85,8,61,34,84,100,119,87,126,34,
113,47,37,0,0,24,73,32,85,5,72,241,197,56,245,83,107,122,47,114,6,126,75,13,50,13,89,0,103,23,
73,32,85,5,72,241,197,56,245,83,107,122,47,34,139,75,6,132,50,13,89,0,11,200,12,128,76,12,81,15,
57,144,66,0,11,65,4,35,55,35,0,81,108,97,32,16,65,4,119,15,58,140,55,0,81,119,104,105,108,101,
32,17,70,60,33,83,37,70,64,139,71,6,132,89,13,47,37,0,9,67,32,150,65,107,140,119,0,17,71,24,
16,197,80,147,213,76,83,119,89,132,91,13,89,0,11,65,4,141,119,50,72,0,81,38,32,19,65,4,35,49,
119,11,0,85,46,32,107,32,46,32,97,32,46,32,6,65,4,141,0,49,4,193,4,34,0,11,68,77,81,68,
20,89,58,141,72,0,14,70,61,85,23,5,33,0,138,47,58,114,72,0,7,196,20,98,76,20,20,16,70,12,
243,150,20,229,0,49,126,50,84,13,50,47,0,11,68,8,144,140,20,71,140,71,118,0,13,69,5,0,67,32,
80,119,48,35,76,37,0,9,68,4,148,204,20,147,55,0,6,65,108,2,35,0,12,4,95,116,117,114,47,6,
131,50,72,0,5,193,108,43,49,0,8,197,52,19,15,56,80,17,13,69,12,20,15,56,80,49,119,48,139,50,
0,12,69,76,244,8,36,80,89,139,83,37,0,8,197,48,18,15,72,80,17,12,67,96,208,83,122,49,89,65,
119,89,0,13,69,60,53,1,88,80,126,49,47,124,84,0,8,197,37,2,15,56,80,20,13,69,24,83,9,56,
80,83,132,55,140,50,0,12,69,5,35,213,76,80,119,34,138,88,0,0,12,201,76,147,85,49,64,78,20,245,
83,67,0,7,196,77,66,76,48,32,10,67,80,129,89,86,141,0,72,32,8,197,61,85,9,56,112,65,17,70,
24,193,88,36,35,5,83,55,122,49,89,124,71,118,0,24,73,20,193,67,81,34,67,37,70,64,113,55,122,49,
47,34,6,124,89,113,47,37,0,22,73,12,243,77,60,228,197,57,49,64,49,126,65,13,50,89,6,122,50,89,
0,6,65,8,71,132,0,0,17,71,76,19,9,76,37,82,100,89,133,55,89,71,34,37,0,15,70,88,17,213,
21,53,0,84,141,81,13,89,47,0,18,71,76,80,210,21,64,82,100,89,122,49,34,13,47,34,124,0,20,71,
52,243,69,57,64,82,100,65,139,65,13,50,108,143,34,37,0,103,19,71,52,243,69,57,64,82,100,65,139,65,
13,50,47,13,34,37,0,0,14,69,56,144,207,48,16,50,124,49,13,55,13,0,11,68,9,34,69,56,71,34,
147,50,0,7,196,52,147,1,56,66,24,68,8,21,15,56,71,35,47,13,50,15,34,6,137,90,0,81,114,111,
117,103,101,32,21,72,81,32,74,20,53,15,73,144,47,34,13,75,122,49,47,13,34,124,0,12,68,76,83,69,
56,89,132,65,13,50,0,7,196,72,21,15,56,17,15,69,52,144,83,52,16,65,140,6,35,88,65,13,0,7,
196,24,83,15,56,16,12,68,12,243,15,56,49,139,55,13,50,0,8,196,8,21,15,56,103,17,14,69,5,85,
9,76,208,133,108,124,88,13,65,0,15,70,4,195,5,72,114,67,119,55,131,75,124,49,0,6,195,85,64,192,
13,14,67,21,64,192,122,47,6,89,122,47,34,13,0,0,0,15,70,12,20,142,20,114,69,49,130,50,13,81,
37,0,13,69,5,21,73,56,240,119,49,132,50,139,0,9,198,88,19,8,4,195,1,66,14,69,56,21,129,40,
240,50,121,84,13,107,139,0,18,70,48,147,135,21,34,69,55,126,50,90,13,34,6,141,0,103,16,70,48,147,
135,21,34,69,55,126,50,90,13,34,37,0,9,67,4,131,217,119,107,142,0,14,202,4,69,133,73,66,83,20,
209,78,80,103,67,24,74,4,69,133,73,66,83,20,209,78,80,119,72,84,131,47,124,89,65,13,50,47,0,6,
65,12,89,132,0,0,15,6,100,105,100,110,39,116,72,124,72,50,47,0,32,10,67,56,80,82,4,50,145,0,
10,17,70,52,20,148,36,225,90,65,130,47,6,132,50,122,88,0,18,67,80,80,82,47,6,143,15,6,126,83,
0,81,111,102,102,32,21,67,80,80,82,47,4,143,15,119,48,130,47,0,81,97,112,97,114,116,32,9,67,80,
80,82,47,143,0,36,9,67,80,80,82,47,145,0,47,14,70,16,85,137,48,81,0,72,122,84,118,72,0,0,
12,68,72,19,79,56,34,119,65,139,50,0,14,69,12,147,133,52,16,89,124,50,13,65,13,0,0,13,68,52,
83,149,76,65,122,50,57,137,88,0,0,14,69,74,36,213,54,32,34,122,88,137,65,141,0,12,69,13,80,203,
60,240,49,117,49,137,0,6,65,16,72,132,0,0,19,73,16,84,204,5,84,137,21,36,192,72,113,55,136,34,
124,141,0,11,68,12,130,76,20,76,124,55,37,0,11,68,16,147,196,20,72,140,139,72,0,0,8,197,32,244,
129,12,80,16,12,69,12,243,142,36,80,49,126,50,37,0,14,69,8,83,9,104,80,71,122,55,6,132,88,0,
13,69,85,49,65,28,80,57,137,89,113,75,0,8,197,76,85,20,20,80,66,14,69,72,81,15,56,80,34,132,
72,6,129,50,0,13,69,72,21,137,56,80,34,13,84,132,50,0,14,69,52,244,143,76,80,65,13,34,6,139,
89,0,13,69,12,84,137,76,80,89,13,34,132,88,0,0,26,67,80,128,84,86,119,47,107,119,88,71,124,50,
0,76,82,104,97,115,32,98,101,101,110,32,17,67,80,128,84,2,86,35,47,86,115,0,81,116,104,101,32,19,
67,80,128,84,86,6,35,47,58,4,128,50,0,81,111,110,101,32,19,67,80,128,84,86,119,47,15,58,128,88,
0,49,81,119,97,115,32,17,67,80,128,84,4,86,119,47,124,47,0,33,81,105,116,32,17,67,80,128,84,4,
86,35,47,13,50,0,34,81,97,110,32,15,67,80,128,84,4,86,35,47,13,0,34,81,97,32,13,67,80,128,
84,86,35,47,0,72,34,10,33,13,70,85,36,85,32,20,148,131,49,130,47,0,14,70,28,128,78,16,130,64,
81,35,50,72,37,0,15,70,52,19,1,12,130,64,65,35,55,13,49,140,0,17,70,9,84,149,56,66,64,71,
117,34,6,117,50,72,37,0,15,70,92,244,139,76,134,64,58,151,49,91,140,0,105,14,70,92,244,139,76,134,
64,58,131,49,91,140,0,16,70,81,148,129,56,230,64,47,145,34,13,50,37,0,103,15,70,81,148,129,56,230,
64,47,124,34,13,50,37,0,10,3,105,46,101,140,132,11,0,8,11,4,95,100,112,116,48,142,50,47,0,0,
8,67,52,22,65,65,147,0,13,69,8,84,137,56,112,71,143,34,124,68,0,21,65,20,83,135,122,81,88,6,
120,65,48,118,0,83,46,32,103,32,46,32,5,65,20,132,0,0,17,71,52,18,143,72,85,20,20,65,141,75,
114,6,122,47,0,17,71,24,21,143,85,34,84,20,83,141,84,14,34,113,47,0,16,70,21,0,85,48,85,0,
122,48,13,55,6,122,47,0,15,70,8,148,195,84,149,0,71,124,89,49,124,47,0,0,21,72,48,16,143,72,
21,15,73,144,55,35,71,34,13,47,133,34,37,0,103,21,72,48,16,143,72,21,15,73,144,55,119,71,6,126,
34,13,47,34,124,0,11,200,12,243,147,84,211,65,80,80,65,0,14,70,48,147,132,76,86,64,55,124,50,88,
37,0,14,70,48,147,132,76,22,64,55,124,50,88,37,0,9,198,16,18,15,52,86,64,17,15,70,8,19,15,
56,86,64,71,13,55,139,50,37,0,0,15,70,81,37,80,32,243,133,47,34,137,83,139,50,0,16,71,77,64,
82,8,240,82,16,89,47,130,71,114,72,0,11,67,65,83,153,48,57,137,50,37,0,16,70,52,243,143,80,243,
133,65,126,50,13,47,139,50,0,9,198,52,17,193,104,147,133,67,19,72,4,195,8,4,195,15,93,48,133,55,
107,6,35,55,139,88,0,6,65,24,122,83,0,0,19,71,65,35,193,13,66,86,20,48,34,139,6,35,49,47,
124,84,0,17,70,65,33,84,21,133,0,48,34,132,108,122,49,89,47,0,10,67,48,145,78,55,132,13,50,0,
16,70,32,82,78,20,177,78,107,140,50,13,49,13,50,0,20,71,21,132,12,21,66,86,20,122,49,89,48,55,
125,47,124,84,0,103,20,71,21,132,12,21,66,86,20,122,49,89,48,55,6,132,47,124,84,0,19,71,12,243,
66,5,66,86,20,49,13,65,71,35,47,124,84,0,103,0,17,71,29,35,211,88,83,143,72,81,34,139,84,13,
50,114,0,0,15,70,16,85,133,72,21,88,72,122,84,114,34,139,0,11,68,4,148,133,76,140,34,124,88,0,
12,68,76,147,149,76,89,140,50,13,89,0,12,68,12,84,133,76,89,144,34,132,88,0,0,19,71,9,80,200,
5,33,83,80,71,137,49,119,34,6,122,89,47,0,14,70,52,84,137,56,117,69,65,13,34,35,68,0,15,70,
4,224,76,60,117,69,35,50,13,55,126,81,0,6,65,28,75,132,0,0,27,67,92,80,82,58,6,143,15,119,
50,72,15,47,6,143,0,82,97,110,100,32,116,101,97,114,32,10,199,12,243,131,61,84,147,20,65,0,13,67,
12,19,128,2,49,35,50,0,32,46,10,14,69,56,245,77,20,16,50,137,65,6,141,13,0,10,67,80,243,128,
47,129,50,0,47,11,67,76,19,128,4,89,35,50,0,46,8,197,64,18,129,52,16,17,12,68,52,84,207,56,
65,132,88,126,50,0,13,69,52,22,72,20,208,65,141,107,122,65,0,14,69,12,20,9,80,16,49,35,48,124,
47,13,0,0,12,68,72,242,129,76,34,139,107,121,89,0,10,68,48,245,73,76,55,137,37,0,11,68,76,178,
69,76,89,49,140,88,0,11,68,4,208,83,76,119,65,35,89,0,0,12,201,12,148,131,84,212,212,4,224,197,
15,6,65,32,141,76,0,0,11,68,48,80,70,100,55,132,83,37,0,17,70,36,226,5,72,149,0,124,50,107,
6,122,34,124,47,0,0,14,69,4,230,79,56,80,122,50,124,58,128,50,0,8,197,28,240,84,20,80,66,12,
68,136,194,84,20,124,55,6,132,47,0,12,69,8,195,213,76,80,71,55,138,88,0,0,18,70,4,196,133,4,
70,64,133,55,34,122,72,37,0,74,32,10,15,70,72,150,154,60,194,64,34,113,88,139,55,37,0,13,70,44,
82,71,32,194,64,49,141,55,37,0,16,70,77,64,78,16,38,64,89,47,35,50,72,71,140,0,8,1,35,107,
35,91,0,27,0,16,65,36,140,15,107,6,35,72,0,49,81,104,97,100,32,18,65,36,140,91,6,35,55,0,
49,42,81,115,104,97,108,108,32,18,65,36,2,140,91,4,119,55,0,42,81,115,104,97,108,108,32,14,65,36,
2,140,35,65,0,49,42,81,97,109,32,13,65,36,2,140,119,65,0,42,81,97,109,32,9,65,36,140,0,76,
32,46,42,11,68,4,129,65,16,119,107,122,72,0,13,68,17,145,133,16,72,6,129,84,124,72,0,12,68,72,
16,137,16,34,141,71,124,72,0,11,68,48,149,133,16,55,124,84,72,0,16,70,8,18,197,48,149,5,71,141,
49,13,55,140,47,0,5,65,36,140,0,0,17,70,37,0,78,20,208,64,124,48,119,50,6,132,65,13,0,20,
71,88,145,5,61,64,80,20,84,6,124,72,132,139,108,4,141,48,0,17,70,60,193,20,36,209,82,139,55,72,
47,6,140,65,114,0,16,70,60,48,213,64,145,82,126,49,57,137,48,140,114,0,6,195,37,0,68,20,21,72,
21,128,67,80,83,69,57,64,122,81,88,35,49,47,13,65,6,153,0,18,72,16,83,143,84,83,69,57,64,72,
141,50,6,137,65,154,0,6,195,37,0,195,13,6,195,37,0,64,13,13,1,37,48,151,89,6,122,50,47,0,
105,27,12,1,37,48,114,89,6,122,50,47,0,27,0,11,67,37,68,192,124,47,89,0,72,34,9,67,100,84,
128,57,114,0,76,16,70,12,245,133,80,245,83,49,129,84,13,47,13,89,0,18,70,8,244,133,4,194,83,71,
136,34,124,6,35,55,124,89,0,9,1,38,10,35,50,72,0,76,5,193,112,43,49,0,18,73,8,245,84,60,
227,137,21,33,64,71,137,19,50,6,145,0,19,71,5,52,1,72,17,213,76,119,89,48,35,34,13,81,13,89,
0,0,18,70,60,34,84,84,20,153,139,71,6,124,76,137,143,37,0,103,16,70,60,34,84,84,20,153,126,71,
6,124,76,146,37,0,9,198,48,147,143,48,85,77,66,18,70,16,147,1,80,244,153,72,124,55,35,47,152,34,
124,0,103,17,70,16,147,1,80,244,153,72,124,55,13,47,13,34,124,0,6,65,40,75,141,0,0,11,68,96,
131,211,4,49,133,89,13,0,16,70,84,229,207,84,225,0,129,50,58,6,138,50,72,0,0,11,67,76,148,128,
89,4,151,0,105,46,10,67,76,148,128,89,4,131,0,46,13,1,42,35,89,47,13,34,124,89,49,0,27,0,
16,70,92,147,12,36,19,64,58,124,55,57,13,65,0,103,15,69,8,244,212,60,224,71,134,89,47,13,50,0,
103,9,67,72,134,76,34,124,55,0,14,70,12,128,84,32,19,64,76,35,47,13,65,0,12,201,77,80,131,5,
65,71,61,38,64,66,9,198,36,229,5,72,147,64,65,11,68,32,83,12,60,107,13,55,139,0,22,73,4,227,
137,88,84,147,5,38,64,35,50,124,84,6,131,89,13,34,37,0,6,195,5,2,0,13,8,1,43,48,55,129,
89,0,0,8,197,17,147,129,52,240,65,11,5,99,39,101,115,116,89,141,0,72,6,65,44,49,141,0,0,16,
70,20,69,65,72,67,192,122,72,58,6,130,72,139,0,13,68,52,241,5,52,65,139,72,13,65,0,103,12,68,
52,241,5,52,65,139,72,122,65,0,14,70,16,145,72,5,33,0,72,140,107,130,72,0,17,70,4,193,146,20,
67,192,35,55,83,34,6,141,72,139,0,0,21,72,88,145,84,56,19,69,76,80,84,132,122,47,50,13,65,6,
132,88,0,8,67,76,129,87,91,139,0,14,203,36,225,9,76,52,137,52,147,129,80,80,16,0,9,198,20,229,
18,4,147,0,65,6,195,20,68,212,13,9,1,47,89,55,35,91,0,27,0,28,68,52,145,200,80,4,65,140,
47,107,6,35,84,47,116,0,32,49,82,104,97,118,101,32,116,111,32,21,68,52,145,200,80,65,140,47,107,119,
84,0,35,77,81,104,97,118,101,32,14,68,52,145,200,80,4,65,140,47,0,32,10,46,14,69,80,82,129,56,
240,47,125,107,121,50,139,0,12,68,72,81,137,80,34,132,83,124,47,0,10,67,52,84,193,65,141,89,13,0,
13,4,95,100,105,97,6,117,65,55,138,47,0,6,65,48,122,55,0,0,17,70,72,244,193,72,147,192,34,139,
88,6,130,34,124,139,0,12,68,52,83,5,20,65,141,55,141,0,103,11,68,52,83,5,20,65,122,55,141,0,
17,70,28,19,9,48,83,192,81,35,55,113,55,6,141,139,0,0,19,72,69,81,83,4,66,76,48,16,49,141,
89,13,6,72,132,13,0,9,67,5,85,15,133,47,139,0,0,13,67,92,128,84,4,58,129,47,0,103,10,47,
12,67,92,128,84,4,58,126,47,0,50,47,12,67,92,128,84,58,2,126,47,0,10,47,15,70,80,147,79,80,
134,64,47,124,65,13,87,37,0,15,70,16,243,129,28,134,64,72,126,50,6,107,132,0,16,70,61,97,82,80,
198,64,139,84,6,131,47,55,124,0,0,8,196,85,4,197,80,65,37,17,70,72,81,137,56,84,153,34,113,83,
140,50,13,34,124,0,12,68,20,116,133,80,132,81,34,13,47,0,9,198,12,243,148,72,149,5,66,18,70,12,
243,148,72,20,153,49,126,50,47,34,143,34,37,0,103,17,70,12,243,148,72,20,153,49,126,50,47,34,13,34,
124,0,6,65,52,122,65,0,0,16,71,76,86,67,32,83,12,20,89,141,91,6,122,55,0,6,195,53,0,65,
13,0,13,69,8,85,19,21,144,71,122,47,89,37,0,11,200,64,84,137,92,147,139,48,80,65,0,15,70,65,
33,83,48,86,64,48,34,122,89,55,37,0,15,70,81,84,142,44,86,64,47,151,50,49,132,0,105,14,70,81,
84,142,44,86,64,47,131,50,49,132,0,16,70,81,34,76,60,118,64,47,34,124,55,13,75,37,0,17,70,65,
34,86,4,54,64,48,34,140,84,13,89,37,0,103,17,71,52,243,129,72,50,9,12,65,13,50,130,49,124,49,
0,0,16,70,52,148,211,61,84,137,65,124,88,6,146,34,37,0,13,70,12,129,83,32,148,133,76,122,91,114,
0,15,70,65,33,77,36,84,133,48,34,13,65,145,0,103,9,198,61,97,82,81,84,133,65,10,67,44,149,201,
49,132,58,132,0,6,65,56,122,50,0,0,17,71,64,130,76,37,2,78,20,83,124,55,113,48,132,50,0,18,
71,52,20,135,5,34,78,20,65,130,75,114,34,13,50,0,103,17,71,52,20,135,5,34,78,20,65,130,75,114,
34,132,50,0,18,71,12,243,15,77,49,85,52,49,126,55,13,89,6,144,65,0,0,26,74,16,80,207,53,2,
76,5,66,79,56,72,132,49,126,65,48,113,55,6,141,91,13,50,0,0,33,8,99,111,117,108,100,110,39,116,
6,49,117,72,14,50,47,35,84,47,116,0,32,10,82,104,97,118,101,32,116,111,32,27,8,99,111,117,108,100,
110,39,116,49,117,72,14,50,47,13,84,0,35,77,81,104,97,118,101,32,20,8,99,111,117,108,100,110,39,116,
4,49,117,72,14,50,47,0,32,10,16,71,48,145,200,80,226,78,28,55,140,47,50,124,68,0,9,198,12,243,
137,12,19,0,65,24,73,12,243,15,56,244,195,61,6,64,49,139,55,13,50,6,126,89,49,13,48,37,0,0,
34,9,115,104,111,117,108,100,110,39,116,6,91,117,72,14,50,47,35,84,47,116,0,32,10,82,104,97,118,101,
32,116,111,32,29,9,115,104,111,117,108,100,110,39,116,91,117,72,14,50,47,107,13,84,0,35,77,81,104,97,
118,101,32,22,9,115,104,111,117,108,100,110,39,116,4,91,117,72,14,50,47,0,32,10,46,13,70,76,86,77,
61,84,128,89,132,65,136,0,18,70,77,83,1,92,84,201,89,137,55,119,58,6,141,89,37,0,5,65,60,139,
0,0,9,67,60,208,82,139,65,130,0,15,70,16,243,15,72,84,192,72,13,55,136,125,89,0,12,68,64,192,
90,4,48,55,121,88,13,0,13,69,61,0,81,84,80,139,48,6,141,49,0,12,1,61,9,132,49,58,118,88,
9,0,27,0,9,67,104,249,0,88,139,37,0,12,69,76,129,73,48,16,91,132,55,13,0,14,69,64,19,129,
52,16,48,35,50,13,65,121,0,12,68,25,85,15,56,83,137,47,126,50,0,8,197,64,51,67,36,16,13,0,
11,67,52,241,84,65,139,6,122,47,0,11,68,4,81,201,76,132,75,124,89,0,0,15,70,81,33,65,80,148,
197,47,34,132,47,124,88,0,14,68,16,80,149,80,72,141,71,6,57,137,0,103,12,68,16,80,149,80,72,141,
71,57,137,0,9,1,64,10,35,47,10,0,76,6,65,64,48,132,0,0,9,198,65,33,83,20,229,0,36,17,
70,65,33,83,20,229,0,48,34,122,88,13,50,47,0,46,0,14,69,48,245,73,76,80,55,137,58,6,132,88,
0,12,69,80,245,80,20,80,47,137,48,141,0,12,69,53,148,148,48,80,65,131,47,118,0,6,195,36,211,192,
13,0,15,70,16,244,143,80,134,64,72,126,34,13,87,37,0,16,70,4,229,8,60,230,64,35,50,47,13,50,
37,0,135,17,70,77,112,72,36,194,64,89,58,121,107,6,132,55,37,0,0,13,69,76,145,206,85,0,89,140,
50,129,48,0,11,68,61,85,5,16,138,47,125,72,0,17,70,21,132,5,16,149,5,122,49,89,48,13,72,140,
47,0,16,70,16,84,207,48,21,5,72,122,89,13,55,13,47,0,7,65,68,49,57,137,0,0,12,68,88,83,
149,20,84,122,50,57,137,0,10,68,80,134,77,20,47,140,65,0,18,71,64,84,134,20,53,12,100,48,131,83,
122,49,47,55,124,0,15,70,64,17,197,4,229,0,48,35,75,13,50,47,0,15,70,8,20,146,4,50,192,71,
122,34,13,49,0,103,14,70,8,20,146,4,50,192,71,35,34,13,49,0,12,68,4,226,77,20,35,50,124,65,
141,0,16,70,4,64,77,4,229,0,35,72,13,65,13,50,47,0,0,16,70,25,32,78,12,242,83,83,34,35,
50,89,58,121,0,10,67,16,85,83,72,141,117,89,0,6,195,60,144,192,13,0,11,68,12,128,78,28,76,35,
68,0,47,11,68,12,128,78,28,76,141,50,75,0,0,17,70,64,83,133,48,244,5,48,13,50,122,55,13,48,
37,0,13,68,76,18,5,48,89,121,107,6,122,55,0,17,70,36,225,21,77,68,153,124,50,72,129,89,47,34,
124,0,5,65,72,130,0,0,17,70,20,193,67,81,35,206,113,55,122,49,47,34,126,50,0,0,19,67,80,129,
64,86,115,15,58,140,55,0,81,119,104,105,108,101,32,10,67,80,129,64,86,115,0,46,34,18,70,72,80,204,
85,49,83,34,122,49,55,137,89,125,88,0,103,17,70,72,80,204,85,49,83,34,113,49,55,137,89,125,88,0,
0,12,68,29,82,68,60,81,58,132,72,139,0,16,70,72,84,85,36,83,64,34,122,49,58,113,122,65,0,18,
4,95,100,111,116,58,124,86,72,6,126,47,119,71,129,84,0,0,11,68,80,145,1,48,47,140,72,118,0,15,
70,76,242,143,85,35,128,89,139,75,151,50,0,105,14,70,76,242,143,85,35,128,89,139,75,131,50,0,0,15,
70,40,84,137,12,131,192,75,122,34,124,49,139,0,9,198,85,4,212,5,37,0,65,16,70,80,244,142,4,67,
192,47,135,50,6,141,72,139,0,17,71,77,0,71,32,85,20,36,89,48,119,81,122,47,37,0,17,70,61,33,
71,4,227,192,126,34,124,81,6,121,50,139,0,8,67,48,145,82,55,148,0,11,68,12,240,207,4,49,139,49,
139,0,0,15,70,48,19,66,21,66,0,55,35,65,71,13,87,0,9,67,92,129,87,83,57,137,0,9,67,28,
145,192,81,124,81,0,0,10,68,12,244,144,76,49,135,0,46,12,68,8,192,78,12,71,55,153,50,49,0,0,
16,70,52,17,5,49,147,128,65,35,72,13,55,113,50,0,12,68,76,19,1,16,89,35,55,13,72,0,14,69,
33,80,146,37,48,107,137,71,34,124,89,0,6,65,80,47,132,0,0,5,194,4,48,13,0,12,67,60,225,83,
58,128,50,88,0,46,11,13,70,12,21,1,73,34,0,49,13,47,130,0,14,69,8,197,82,73,144,71,55,151,
34,124,0,105,13,69,8,197,82,73,144,71,55,131,34,124,0,10,67,4,229,83,141,50,129,89,0,10,67,4,
211,192,35,65,139,0,103,6,195,12,147,192,13,0,12,68,85,50,78,28,57,137,88,124,68,0,17,70,36,229,
5,73,3,204,124,50,47,114,48,139,55,0,103,9,198,36,229,5,73,3,204,65,16,70,29,33,68,36,83,148,
81,34,132,72,144,50,47,0,0,9,198,76,85,133,72,149,25,17,14,69,52,147,4,21,112,65,124,55,72,57,
137,0,12,68,24,16,197,80,83,35,89,122,47,0,6,65,84,57,137,0,0,9,66,85,0,4,129,48,0,10,
16,70,64,85,71,20,245,0,48,57,137,90,6,139,0,103,11,200,81,34,85,53,2,1,57,64,66,9,198,32,
19,1,80,147,206,17,16,70,16,83,9,52,149,0,72,113,55,124,65,124,47,0,0,14,69,64,145,211,81,144,
48,124,81,89,47,140,0,15,69,28,19,1,97,144,81,35,55,119,49,89,37,0,6,195,21,132,15,65,0,16,
70,76,245,84,32,83,132,89,121,83,6,122,50,72,0,18,71,65,54,67,32,245,9,12,89,140,49,6,126,47,
124,49,0,19,70,25,35,206,80,83,132,83,34,6,129,50,47,4,122,50,72,0,21,67,33,69,16,141,76,108,
132,108,132,6,48,132,10,0,81,58,47,47,32,0,17,70,81,32,86,21,53,25,47,34,35,84,13,89,47,37,
0,10,67,73,80,153,34,137,71,37,0,9,67,5,116,153,119,34,140,0,6,65,88,84,132,0,0,21,66,5,
48,4,35,88,124,47,4,124,88,0,76,82,105,116,32,105,115,32,16,66,5,48,4,35,88,4,124,88,0,8,
81,105,115,32,9,66,5,48,2,35,88,0,46,17,70,48,198,87,20,198,78,55,117,58,6,122,55,124,50,0,
16,71,44,21,8,21,34,78,20,49,35,87,34,113,50,0,18,71,64,19,5,77,66,78,20,48,35,55,13,89,
47,140,50,0,19,71,80,19,135,21,34,78,20,47,35,50,75,13,34,6,132,50,0,9,198,65,35,202,20,53,
0,36,17,70,65,35,202,20,53,0,48,34,126,75,122,49,47,0,47,9,198,64,21,137,48,147,206,17,11,199,
9,150,129,57,66,78,20,103,65,0,0,17,70,12,246,149,52,83,0,49,126,88,13,65,6,122,55,0,26,67,
12,245,80,49,137,72,13,15,81,34,6,121,0,82,100,101,32,103,114,195,162,99,101,32,25,67,12,245,80,49,
137,72,13,15,81,34,6,121,0,82,100,101,32,103,114,97,99,101,32,0,14,69,28,192,68,101,48,81,55,35,
72,124,89,0,14,69,13,84,148,37,48,49,151,47,125,89,0,105,13,69,13,84,148,37,48,49,131,47,125,89,
0,11,68,8,20,197,48,71,121,88,118,0,14,69,76,224,70,85,48,89,50,35,83,137,88,0,13,69,72,80,
197,77,48,34,132,89,122,89,0,16,70,64,193,84,32,244,129,48,55,122,87,114,34,13,0,22,73,56,243,69,
56,51,1,81,84,133,50,13,65,122,68,49,55,13,76,114,0,13,68,52,245,5,48,65,139,47,6,122,55,0,
13,69,52,148,211,21,48,65,124,89,113,88,0,8,197,17,84,133,77,48,66,14,69,13,34,83,21,48,49,34,
140,89,132,88,0,16,70,8,20,130,21,21,69,71,130,71,13,49,57,137,0,14,69,4,48,197,77,48,35,49,
89,122,89,0,36,14,69,4,48,197,77,48,35,49,89,122,89,0,47,15,69,72,148,195,61,48,34,124,89,49,
139,122,89,0,12,1,92,71,35,49,89,55,35,91,0,27,11,65,92,72,6,129,71,118,57,137,0,0,17,67,
80,128,78,4,86,35,50,13,50,0,34,81,97,110,32,15,67,80,128,78,4,86,35,50,13,0,34,81,97,32,
11,67,80,128,78,86,119,50,0,72,46,14,70,32,145,5,61,85,0,107,140,72,138,47,0,18,70,5,1,82,
37,66,70,119,48,122,34,13,47,6,132,83,0,0,19,67,80,243,192,47,6,137,15,65,129,76,0,81,109,117,
99,104,32,20,67,80,243,192,47,6,137,15,65,122,50,37,0,81,109,97,110,121,32,18,67,80,243,192,47,6,
137,15,83,57,137,0,81,102,101,119,32,8,67,100,83,192,57,139,0,0,18,70,36,66,84,5,35,196,140,72,
6,124,47,13,34,126,72,0,0,17,70,65,33,84,20,228,197,48,34,132,47,122,50,89,0,103,14,69,13,34,
83,37,48,49,34,140,89,124,89,0,7,65,96,122,49,89,0,0,9,198,76,128,77,64,243,192,66,16,70,48,
243,135,4,115,192,55,126,68,81,13,81,139,0,0,13,69,77,80,129,73,80,89,137,71,114,137,0,14,69,76,
144,201,49,144,89,124,89,113,55,37,0,8,197,12,243,151,5,144,65,14,69,81,37,69,49,144,47,34,137,55,
124,0,32,13,69,77,84,133,81,144,91,146,13,47,37,0,8,67,4,65,0,35,72,0,0,20,71,17,80,146,
61,99,137,44,72,137,71,34,6,126,84,50,124,49,0,0,17,70,80,20,5,77,68,153,47,35,48,13,89,47,
34,124,0,12,69,21,48,200,21,112,113,89,76,137,0,9,198,12,243,131,48,21,133,65,0,13,69,32,20,143,
48,64,107,35,34,118,72,0,13,69,92,144,203,20,64,58,124,49,125,72,0,15,69,84,228,133,4,64,129,50,
34,6,122,72,0,46,16,70,76,245,86,20,226,82,89,137,84,13,50,6,145,0,13,69,73,81,199,20,64,34,
129,81,125,72,0,7,196,20,35,204,4,20,15,70,16,147,143,76,21,82,72,140,50,13,89,135,0,13,69,16,
83,79,20,64,72,122,65,139,72,0,6,195,37,5,22,13,0,9,67,72,81,83,34,132,89,0,11,67,48,244,
192,4,55,126,89,0,46,19,72,5,85,15,52,240,137,48,80,133,47,13,65,13,71,144,55,0,0,9,198,88,
19,133,77,48,64,17,19,71,64,20,129,49,148,201,76,48,13,34,35,55,13,89,124,89,0,0,16,70,76,19,
65,57,66,1,89,119,65,35,50,87,13,0,11,68,52,241,213,48,65,139,81,118,0,7,65,104,88,132,0,103,
7,65,104,88,122,72,0,0,16,69,8,86,79,56,64,71,124,57,126,50,72,0,74,10,19,66,5,64,6,141,
108,132,13,50,47,6,132,0,82,38,32,116,32,18,66,5,64,119,47,10,58,6,124,55,0,81,119,105,108,108,
32,18,66,5,64,119,47,10,58,128,50,89,0,81,111,110,99,101,32,14,66,5,64,35,47,113,47,0,49,81,
105,116,32,13,66,5,64,2,35,47,13,0,34,81,97,32,10,66,5,64,35,47,0,34,46,72,13,69,40,84,
129,48,64,75,143,34,118,72,0,11,68,104,18,82,20,88,140,6,145,0,23,73,52,147,142,20,20,15,48,148,
192,65,124,50,132,6,35,48,13,55,113,89,0,10,68,76,131,206,20,91,126,50,0,16,70,64,244,197,36,67,
206,48,13,89,140,72,13,50,0,15,70,52,85,1,64,131,210,65,122,47,13,83,135,0,0,17,67,92,20,192,
58,2,129,88,86,115,0,81,116,104,101,32,14,67,92,20,192,58,2,129,88,119,0,81,97,32,13,67,92,20,
192,2,58,129,88,0,103,35,46,12,67,92,20,192,2,58,126,88,0,35,46,16,70,56,144,200,60,192,83,50,
124,49,13,55,13,89,0,12,201,40,242,1,56,225,83,9,84,135,66,9,67,80,133,64,87,150,0,105,8,67,
80,133,64,87,131,0,9,67,21,84,128,57,146,0,46,0,17,70,45,147,195,21,32,64,49,140,13,89,6,144,
34,13,0,15,70,72,146,1,56,224,64,34,124,6,121,50,13,0,15,70,92,144,200,37,64,64,58,124,76,113,
47,130,0,20,72,5,161,82,8,18,74,4,224,35,88,114,71,140,75,6,121,50,0,15,70,80,17,134,21,64,
64,47,35,83,125,47,13,0,14,70,56,21,83,20,19,64,50,133,88,144,65,0,9,198,12,17,1,9,32,64,
17,16,70,4,193,197,9,32,64,35,55,75,113,71,34,13,0,18,73,4,48,207,84,50,5,52,83,148,119,49,
137,91,65,154,0,6,195,61,67,200,13,0,18,70,80,148,129,52,148,213,47,124,34,35,65,124,6,89,137,0,
10,67,60,176,89,139,49,6,141,0,16,70,56,84,5,57,66,5,50,113,48,122,50,87,37,0,10,4,100,39,
121,101,72,57,13,0,0,14,69,72,84,197,48,192,34,132,89,6,122,55,0,8,67,64,145,82,48,145,0,10,
199,36,229,5,72,197,68,20,65,20,72,32,19,12,20,197,74,4,128,107,35,55,113,6,55,137,57,13,0,18,
71,20,193,67,81,35,196,20,113,55,122,49,47,34,139,72,0,17,70,5,50,65,80,144,192,141,91,124,6,35,
47,124,49,0,17,71,4,195,5,52,19,132,20,35,55,13,65,35,50,72,0,0,19,4,105,116,39,115,124,47,
89,107,35,72,0,78,81,104,97,100,32,8,67,16,245,192,72,138,0,0,14,70,44,83,132,20,195,0,49,122,
50,72,118,0,0,10,68,76,243,212,32,89,137,86,0,13,69,65,33,67,37,48,48,34,141,89,132,0,6,195,
25,64,65,13,0,15,70,92,128,84,56,245,0,58,128,47,50,126,47,0,18,72,72,144,207,12,129,84,20,64,
34,124,49,13,91,141,72,0,5,194,4,80,13,0,11,67,32,245,192,4,107,138,0,10,47,12,67,4,230,64,
4,122,50,37,0,34,46,9,67,80,134,64,4,86,140,0,14,69,56,144,197,81,144,50,140,89,13,47,37,0,
15,69,9,84,201,49,144,71,124,88,113,55,124,0,32,0,0,16,70,88,144,207,16,147,128,84,140,49,13,72,
125,50,0,16,70,64,242,197,52,243,128,48,139,49,141,65,126,50,0,10,67,80,147,153,47,140,50,37,0,14,
68,72,83,73,80,34,132,65,6,124,47,0,36,12,68,72,83,73,80,34,132,65,124,47,0,9,198,64,192,84,
60,243,128,17,16,70,32,20,132,12,244,25,107,130,72,49,126,48,37,0,0,7,196,76,21,143,100,17,18,71,
80,83,5,64,21,8,100,47,13,55,122,48,13,87,37,0,16,70,76,243,21,80,147,206,89,13,55,137,91,13,
50,0,16,70,56,81,193,80,147,206,50,113,81,141,91,13,50,0,17,70,12,149,1,80,147,206,89,140,47,6,
141,91,13,50,0,0,11,68,76,243,129,72,89,139,50,130,0,10,67,76,147,15,89,140,55,139,0,14,69,64,
19,20,73,144,48,133,55,47,34,124,0,11,200,12,130,77,64,19,154,20,80,67,7,196,84,226,3,72,13,0,
12,69,12,243,142,61,32,49,126,50,114,0,13,70,12,18,83,20,19,0,49,35,91,118,0,12,68,80,17,213,
76,47,141,81,13,89,0,0,15,70,64,84,146,36,84,128,48,122,34,124,6,141,0,14,70,49,84,211,36,84,
128,55,129,89,124,141,0,13,69,80,129,83,37,48,87,132,89,124,89,0,0,16,70,12,244,143,56,85,0,49,
126,34,13,50,122,47,0,14,70,8,245,81,84,85,0,71,137,49,6,141,0,7,66,5,80,4,139,0,10,67,
5,32,66,35,34,13,71,0,6,195,85,48,70,13,0,10,67,72,83,143,34,132,50,139,0,20,71,76,84,143,
80,243,137,56,89,122,34,13,47,6,139,50,124,50,0,11,68,72,85,133,72,34,113,84,145,0,0,15,70,4,
197,8,61,81,200,126,55,86,6,139,0,8,21,72,45,148,135,101,164,212,4,224,49,131,34,81,124,89,47,6,
121,50,0,22,72,29,80,84,20,208,76,4,224,81,58,121,47,124,65,6,121,55,13,50,0,0,0,14,69,52,
145,213,20,192,65,132,100,6,122,55,0,12,68,32,20,212,100,107,141,89,47,124,0,0,14,4,95,54,48,111,
89,6,124,49,89,47,144,0,10,1,126,47,124,55,72,13,0,27,0,12,4,105,116,39,100,2,124,47,13,72,
0,8,197,12,86,76,60,224,66,8,197,52,20,143,60,224,17,13,69,12,245,80,60,224,49,137,48,126,50,0,
15,4,95,101,116,104,132,87,124,6,126,48,124,49,0,13,4,95,116,108,100,47,6,124,55,72,13,0,0,9,
198,12,243,142,60,195,25,65,14,69,77,64,83,37,48,89,47,141,89,125,89,0,11,68,64,85,9,80,48,13,
47,132,0,14,69,4,194,66,37,48,35,55,13,71,140,88,0,0,11,67,85,3,206,13,48,126,50,0,74,11,
68,77,84,200,36,89,137,91,37,0,12,68,76,81,213,20,89,122,81,58,141,0,10,68,21,148,137,20,144,34,
37,0,16,70,12,240,207,57,85,0,49,139,49,13,50,129,47,0,0,9,67,21,96,64,132,84,13,0,22,72,
32,148,208,4,226,79,48,16,107,124,89,48,13,50,57,6,139,55,13,0,11,200,4,229,1,72,53,9,12,16,
66,19,71,44,147,15,52,85,5,72,49,124,55,6,126,65,113,47,114,0,0,12,69,65,85,20,36,224,48,117,
19,50,0,13,69,12,240,207,60,224,49,13,49,137,50,0,19,71,4,208,82,100,195,9,76,35,65,13,34,6,
124,55,124,89,0,0,15,70,88,145,206,21,69,5,84,113,50,57,122,47,0,0,11,68,80,130,78,20,4,86,
140,50,0,12,68,48,83,206,20,55,132,6,139,50,0,11,68,77,80,86,20,89,58,121,84,0,12,69,52,148,
211,20,64,65,124,89,47,0,15,69,28,147,5,4,64,81,6,124,55,124,35,72,0,13,202,24,244,133,44,227,
215,48,81,7,20,66,12,69,8,144,83,20,64,71,147,89,47,0,0,12,200,72,245,78,17,64,66,48,80,15,
66,18,71,64,84,137,52,85,5,72,48,13,34,124,65,113,47,114,0,17,71,64,20,211,20,225,197,72,48,35,
89,113,50,75,114,0,18,71,64,20,129,52,85,5,72,48,13,34,35,65,113,47,114,0,11,200,52,85,1,77,
64,66,48,80,15,21,72,32,244,208,37,64,66,48,80,107,126,89,48,6,124,47,13,71,118,0,18,71,8,20,
143,52,85,5,72,71,13,34,126,65,113,47,114,0,18,72,4,195,5,28,144,78,12,80,119,55,132,75,13,50,
89,0,0,9,198,44,21,18,36,224,64,17,11,68,37,48,65,12,140,89,13,49,0,16,70,4,229,9,29,80,
64,35,50,47,6,132,81,13,0,13,69,13,85,15,24,96,49,129,47,126,83,0,0,27,68,29,32,78,16,81,
34,6,35,50,72,89,13,55,6,132,50,0,81,115,97,108,105,110,101,32,20,68,92,245,78,16,58,4,138,50,
72,15,6,129,48,0,81,117,112,32,23,68,92,245,78,16,58,4,138,50,72,15,6,72,138,50,0,81,100,111,
119,110,32,13,68,92,245,78,16,58,138,50,72,0,38,46,11,68,92,245,78,16,58,137,50,72,0,0,12,68,
56,243,206,20,50,139,58,128,50,0,14,69,52,244,211,4,64,65,139,89,6,121,72,0,10,68,72,81,83,20,
34,132,89,0,13,68,48,83,204,4,55,132,6,139,55,13,0,16,70,85,68,133,12,133,0,57,137,47,34,122,
99,47,0,0,11,67,84,225,15,129,50,72,6,137,0,16,70,52,16,200,37,51,79,65,119,76,124,88,65,139,
0,6,195,20,97,128,13,0,9,198,64,19,132,61,32,64,66,15,70,52,147,133,73,96,64,65,113,50,131,84,
13,0,13,70,16,245,71,4,195,0,72,137,81,118,0,15,70,8,20,130,5,32,64,71,130,71,13,34,13,0,
16,70,56,144,71,5,32,64,50,140,6,35,81,34,13,0,9,198,5,81,213,77,64,64,66,15,70,92,19,19,
4,195,0,58,133,55,89,133,55,0,16,70,77,67,205,5,64,64,89,47,139,65,13,47,13,0,9,198,72,240,
149,77,64,64,66,15,70,32,83,12,85,96,64,107,122,55,13,84,13,0,15,70,12,131,204,21,32,64,49,126,
55,13,34,13,0,17,70,12,19,4,21,32,64,49,126,55,72,6,143,34,13,0,22,73,9,84,133,5,80,210,
4,54,64,71,57,146,6,126,49,34,13,89,37,0,0,16,70,12,243,65,56,50,5,49,13,65,35,50,76,37,
0,15,70,4,36,201,57,66,5,35,71,89,124,50,87,0,6,195,53,48,65,13,0,13,69,8,244,133,48,192,
71,13,34,122,55,0,13,69,76,195,213,28,128,89,55,129,83,0,36,19,71,72,84,21,80,16,140,20,34,122,
48,57,137,47,13,71,118,0,13,69,72,83,9,76,128,34,122,55,113,91,0,19,71,65,35,205,20,224,68,20,
48,34,126,65,13,50,6,121,72,0,16,70,64,244,148,20,225,0,48,136,47,6,122,50,72,0,20,72,32,19,
12,20,197,73,4,128,107,35,55,113,6,55,137,57,13,0,0,13,69,76,147,162,4,64,91,113,50,141,72,0,
0,7,196,80,16,143,60,66,13,69,24,20,212,20,224,83,120,89,13,50,0,0,9,198,28,19,12,21,34,65,
15,9,198,4,229,9,52,243,153,66,0,11,69,80,131,213,28,128,4,86,139,0,10,66,8,80,71,132,0,35,
46,76,19,66,16,16,72,119,84,124,50,76,37,0,81,118,105,110,99,105,32,13,69,72,81,9,4,192,34,132,
72,147,55,0,13,69,12,20,9,76,128,49,119,48,132,91,0,13,68,9,86,15,52,71,129,49,89,13,65,0,
0,12,68,64,84,133,104,48,114,34,122,88,0,10,67,61,66,83,139,47,124,89,0,9,67,81,115,211,47,137,
88,0,16,70,80,84,146,36,98,67,47,114,34,124,83,124,49,0,9,198,64,21,8,21,66,67,17,15,70,12,
21,8,60,194,67,49,35,87,55,124,49,0,0,7,196,21,113,69,44,20,15,69,12,243,150,20,224,49,127,50,
84,6,132,50,0,17,70,5,21,69,17,80,212,35,49,58,125,72,129,49,47,0,6,195,77,50,80,13,0,10,
67,92,145,137,58,140,83,140,0,0,15,70,92,245,78,16,81,0,58,137,50,72,125,72,0,0,10,67,77,34,
64,89,34,4,132,0,10,68,44,131,69,72,49,65,145,0,10,67,80,241,15,47,13,72,137,0,17,70,52,244,
209,84,149,15,65,13,89,49,6,132,47,139,0,0,12,68,4,115,133,76,35,81,50,13,89,0,0,13,70,32,
243,211,36,84,128,107,137,90,114,0,15,70,53,144,78,52,20,128,65,57,121,50,65,130,0,15,70,80,147,73,
16,84,128,47,124,65,124,72,114,0,14,70,76,227,207,44,84,128,89,50,137,49,114,0,9,67,69,83,201,49,
58,121,0,15,70,65,33,77,36,84,128,48,34,13,65,145,0,103,15,70,65,33,77,36,84,128,48,34,122,65,
124,114,0,16,70,64,243,9,80,84,128,48,13,55,6,140,47,114,0,15,70,61,85,12,36,84,128,6,138,47,
55,4,148,0,16,70,60,53,15,8,84,128,126,49,47,6,139,71,114,0,10,67,40,81,9,75,122,72,140,0,
15,70,36,51,206,8,20,128,140,49,126,50,71,130,0,14,70,16,244,211,36,84,128,72,126,89,124,141,0,15,
70,12,21,5,72,84,128,49,141,47,114,34,114,0,14,70,12,20,200,36,84,128,49,35,91,6,145,0,14,70,
4,227,212,32,84,128,119,50,129,86,114,0,0,0,15,70,16,80,143,72,18,0,72,122,71,13,34,13,0,11,
68,68,21,1,72,49,35,47,130,0,11,68,48,17,197,72,55,121,81,114,0,7,196,44,21,1,72,17,11,68,
25,33,69,72,83,34,132,114,0,0,20,67,92,19,12,58,6,133,55,89,47,34,4,132,47,0,81,115,116,32,
15,70,76,48,76,64,83,0,89,49,35,55,48,118,0,9,67,64,243,12,48,139,55,0,22,72,28,20,135,4,
229,21,4,224,81,130,81,6,35,50,76,137,13,50,0,103,11,200,28,20,135,4,229,21,4,224,66,0,18,71,
72,243,211,21,97,76,80,34,139,88,13,84,122,55,47,0,0,13,69,5,33,217,48,192,130,81,38,140,55,0,
16,70,80,85,1,57,84,192,47,122,47,13,50,13,89,0,9,197,72,80,193,48,192,66,36,13,69,72,80,193,
48,192,34,132,49,133,55,0,14,70,64,149,5,61,84,192,48,124,47,144,89,0,16,70,64,81,193,77,84,192,
48,122,81,13,89,13,89,0,15,70,13,148,18,21,52,192,89,140,48,34,13,89,0,14,70,4,230,9,61,84,
192,35,68,91,13,89,0,0,12,67,9,85,0,4,71,129,47,0,8,46,18,72,64,130,76,37,4,9,56,80,
83,124,55,113,48,132,50,0,20,71,12,243,15,72,17,1,56,49,126,55,114,34,6,121,72,13,50,0,20,72,
77,68,153,12,131,137,56,80,89,47,34,6,124,49,50,132,50,0,17,71,12,128,82,48,21,1,56,91,130,55,
13,47,13,50,0,0,16,70,88,149,18,36,243,0,84,124,47,34,132,13,55,0,13,69,48,144,200,20,224,55,
140,49,13,50,0,14,69,9,83,137,60,224,71,129,50,113,13,50,0,0,9,198,4,225,197,48,146,193,66,17,
70,56,80,146,5,50,193,50,13,71,34,35,89,49,13,0,0,15,69,64,243,9,76,128,48,139,55,124,91,0,
41,46,11,68,76,21,68,36,89,138,72,37,0,9,197,16,85,1,36,192,103,66,11,67,13,144,78,89,140,6,
35,50,0,0,17,71,24,244,146,21,53,5,72,83,126,34,125,89,47,114,0,16,70,88,244,148,36,49,83,84,
135,47,124,89,132,88,0,10,199,76,84,85,21,53,5,72,66,12,68,56,146,207,56,50,140,49,126,50,0,0,
14,69,16,80,204,4,224,72,122,49,55,119,50,0,14,69,4,194,83,60,224,35,55,124,89,13,50,0,12,68,
12,243,135,60,49,126,68,81,139,0,14,69,77,83,148,4,224,89,129,50,47,35,50,0,12,69,61,36,8,4,
224,135,83,13,50,0,11,67,61,1,68,126,48,6,122,72,0,8,197,48,17,207,60,224,17,0,21,67,93,114,
73,72,129,71,118,57,137,72,129,71,118,57,137,47,6,137,0,7,196,57,148,19,16,13,4,193,128,43,0,0,
16,71,28,19,12,4,114,5,72,81,35,55,13,81,114,0,18,70,5,67,1,57,66,83,35,47,55,6,35,50,
47,124,89,0,21,72,77,67,206,20,129,78,28,80,89,47,4,139,50,107,6,122,50,75,0,16,70,77,148,8,
36,194,83,89,124,83,13,55,125,89,0,18,72,8,192,78,12,208,78,28,80,71,55,13,65,126,50,90,0,19,
71,4,198,136,20,147,69,72,121,55,47,89,107,140,65,114,0,103,17,71,4,198,136,20,147,69,72,35,55,47,
89,140,65,114,0,0,14,70,8,192,78,12,129,64,71,55,121,50,91,0,14,70,76,145,206,4,113,64,89,140,
50,113,75,0,15,70,64,148,5,81,65,64,48,124,48,6,122,47,0,17,70,56,18,86,21,65,64,50,140,6,
132,84,13,47,141,0,14,70,48,82,83,85,33,64,55,132,90,114,0,103,13,70,48,82,83,85,33,64,55,122,
90,114,0,14,70,12,245,84,85,33,64,49,137,47,6,146,0,15,70,9,34,79,12,129,64,71,34,132,6,139,
91,0,0,19,71,52,144,210,61,51,198,80,65,140,49,34,13,89,126,83,47,0,12,201,53,83,20,37,3,5,
96,84,128,65,0,16,70,24,84,135,85,51,206,83,131,81,13,89,13,50,0,11,68,5,34,83,20,119,34,140,
88,0,6,194,17,32,13,42,11,66,17,32,72,126,49,47,114,0,24,0,0,11,67,85,32,76,57,137,13,34,
118,0,18,72,12,128,82,48,84,212,60,224,76,130,55,89,47,13,50,0,14,70,24,147,133,77,49,64,83,113,
50,122,89,0,18,67,24,21,88,83,4,139,15,48,6,121,0,81,112,97,115,32,8,67,24,21,88,83,139,0,
0,11,67,52,17,5,65,4,141,72,0,10,13,67,52,17,5,65,4,141,72,0,10,46,76,9,67,8,81,5,
71,132,72,0,10,67,76,241,129,89,139,83,13,0,6,195,21,97,193,13,0,10,199,92,244,139,80,16,140,20,
15,15,70,92,147,132,36,225,192,58,140,50,72,124,68,0,11,67,85,64,78,137,47,6,35,50,0,17,71,80,
147,69,80,16,140,20,47,140,65,47,141,71,118,0,17,71,64,147,133,5,4,12,20,48,6,140,50,35,48,118,
0,21,71,64,83,137,57,53,76,4,48,13,50,6,124,50,89,57,117,55,13,0,20,71,29,80,67,4,211,204,
20,81,58,121,49,119,65,6,139,55,132,0,18,71,4,67,73,72,16,140,20,35,72,65,13,34,13,71,118,0,
0,10,67,65,35,211,48,34,139,88,0,13,69,24,21,8,60,208,83,35,86,13,65,0,17,71,5,48,197,73,
64,73,56,35,89,114,47,6,141,50,0,6,195,21,5,0,13,0,14,69,28,144,147,60,224,81,124,71,89,13,
50,0,15,70,12,19,80,8,83,12,49,35,65,71,13,55,0,13,68,64,144,78,60,48,124,6,35,50,139,0,
15,70,24,244,133,80,83,12,83,136,47,6,122,55,0,0,10,67,12,17,133,49,35,83,141,0,0,13,68,52,
144,77,36,65,140,6,35,65,37,0,17,70,65,35,212,136,120,128,112,114,111,116,101,103,101,0,29,12,69,16,
145,83,20,192,72,132,88,118,0,5,194,4,144,13,0,15,70,21,97,78,36,225,211,132,84,50,124,68,88,0,
0,8,4,95,111,114,100,87,0,0,0,23,73,12,243,145,84,148,212,4,67,210,49,126,50,49,6,132,89,47,
13,72,136,0,15,69,4,192,133,37,64,133,55,71,6,132,124,47,0,15,4,95,109,99,110,65,6,35,49,34,
4,126,50,0,0,10,68,21,83,5,72,142,55,114,0,11,68,80,147,79,72,47,132,65,136,0,13,70,72,19,
5,36,114,0,34,121,55,37,0,17,70,12,243,131,21,37,15,49,13,50,76,6,143,47,139,0,19,72,12,132,
143,52,244,207,52,80,49,34,139,65,13,89,139,65,0,6,195,12,85,0,13,0,15,70,72,85,18,36,19,0,
34,132,47,34,147,55,0,10,67,64,147,148,48,140,50,47,0,8,197,12,20,133,21,32,17,12,68,5,67,1,
76,35,47,55,13,89,0,0,12,68,61,97,82,80,139,84,6,131,47,0,11,68,52,80,78,80,65,122,50,47,
0,11,68,48,80,78,80,55,122,50,47,0,15,70,32,243,19,80,84,128,107,139,55,89,47,114,0,0,20,71,
48,245,73,76,144,78,4,55,137,4,132,88,132,6,35,50,13,0,9,198,4,193,201,21,36,192,66,9,198,64,
85,9,80,147,206,17,17,71,52,147,5,77,67,206,20,65,140,55,89,47,139,50,0,18,70,29,32,78,17,51,
206,81,34,6,35,50,72,89,129,50,0,13,70,28,245,82,52,85,0,81,146,65,141,0,9,198,24,148,200,56,
85,0,15,25,74,5,4,18,61,130,77,5,65,76,100,119,48,34,126,49,89,124,65,13,47,55,37,0,0,24,
6,110,195,180,116,114,101,50,139,47,34,13,6,72,121,65,0,81,100,97,109,101,32,0,12,68,88,81,193,76,
84,141,81,13,89,0,20,72,5,35,65,28,81,4,60,224,130,65,119,81,6,122,72,13,50,0,17,70,81,34,
83,69,81,76,47,34,124,89,49,6,122,55,0,20,72,76,129,78,4,226,71,4,224,91,125,50,35,50,124,81,
13,50,0,10,68,64,147,213,76,48,147,89,0,13,69,28,86,83,21,32,81,140,88,114,0,103,12,69,28,86,
83,21,32,81,132,88,114,0,12,68,8,20,201,76,71,141,89,124,89,0,0,11,68,12,20,143,48,49,35,34,
118,0,17,70,52,243,148,21,33,89,65,126,50,47,13,34,6,141,0,0,17,70,4,211,206,29,53,0,119,65,
129,68,89,47,0,74,10,13,69,32,19,73,76,128,107,141,65,124,91,0,15,70,56,149,18,61,84,192,50,140,
47,34,13,89,0,13,69,33,86,154,4,128,107,13,88,6,121,0,0,19,71,29,85,9,21,36,133,104,81,137,
47,57,6,122,34,122,88,0,18,72,24,243,11,21,53,15,56,80,83,139,49,89,47,139,50,0,19,71,12,83,
148,85,34,79,56,89,122,50,76,6,146,34,144,50,0,15,4,95,55,48,111,89,6,122,84,13,50,47,144,0,
0,13,69,72,81,201,60,224,34,132,75,13,50,0,19,71,52,18,143,72,67,205,60,65,141,75,114,72,6,139,
65,139,0,0,18,70,72,80,68,60,227,25,4,34,132,72,6,139,50,55,124,0,18,72,24,193,68,28,83,9,
56,112,83,55,122,75,55,124,68,0,12,68,12,240,143,48,49,139,71,126,55,0,12,68,12,195,212,32,49,55,
139,86,0,36,9,198,4,195,19,64,144,197,65,0,14,69,105,84,137,12,128,88,57,117,34,124,49,0,12,69,
5,35,65,28,128,130,65,6,121,0,18,71,64,20,211,21,36,194,100,48,35,89,114,88,71,6,140,0,10,68,
4,32,133,100,35,71,37,0,6,194,4,160,13,41,0,12,68,17,147,1,56,72,124,55,13,50,0,10,199,81,
32,70,4,193,193,72,17,9,198,77,64,67,12,21,15,17,0,14,69,8,133,84,4,224,71,137,47,6,35,50,
0,8,197,88,147,204,36,224,66,0,15,70,12,243,142,20,195,25,49,126,50,13,55,37,0,21,73,18,32,207,
48,193,84,4,113,64,72,141,49,126,55,47,6,121,90,0,0,0,18,72,12,129,83,5,1,65,44,80,76,122,
89,13,48,132,49,0,19,72,5,4,18,20,229,9,12,80,119,48,34,122,50,108,124,89,0,0,13,68,4,211,
206,28,119,65,129,68,0,74,10,16,70,69,82,74,61,65,64,49,132,6,107,139,47,141,0,14,70,76,85,137,
48,193,64,89,13,84,124,55,0,14,70,76,49,80,81,33,64,89,122,48,47,114,0,15,70,52,16,200,21,65,
64,65,119,91,122,47,37,0,16,70,52,16,193,9,33,64,65,13,49,121,71,34,13,0,14,70,28,20,146,61,
65,64,81,119,34,126,47,0,15,70,20,228,143,85,65,64,126,50,34,6,137,47,0,14,70,8,150,154,5,33,
64,71,125,88,6,130,0,0,15,70,76,145,206,60,97,128,89,6,140,50,126,83,0,15,70,76,129,82,36,97,
128,91,6,122,34,113,83,0,18,71,52,148,195,72,80,78,80,65,124,89,49,34,144,50,47,0,0,12,68,76,
243,137,4,89,126,50,57,13,0,11,68,20,194,83,20,113,55,132,88,0,11,68,12,131,15,20,49,55,139,37,
0,16,70,93,148,201,93,145,192,58,124,88,132,58,124,81,0,12,68,85,48,71,20,57,137,89,113,75,0,13,
68,72,85,83,20,34,132,6,57,137,88,0,9,198,8,197,68,28,83,206,16,0,10,67,100,245,64,57,137,0,
72,32,20,71,92,148,195,60,228,201,56,58,113,89,49,6,126,50,89,113,50,0,18,71,76,80,210,21,66,79,
56,89,113,49,34,132,91,13,50,0,0,9,198,65,81,82,36,193,64,16,13,70,76,19,201,73,49,64,89,144,
91,13,0,16,70,20,228,137,69,81,64,122,50,34,6,132,49,141,0,17,70,36,224,197,57,49,64,124,50,89,
6,122,50,89,0,36,15,70,16,148,197,5,49,64,72,124,88,6,132,88,0,14,70,12,193,65,57,49,64,49,
55,122,50,88,0,15,70,4,229,9,69,81,64,35,50,47,6,132,49,0,0,17,71,5,32,200,36,32,76,16,
130,76,124,71,133,55,72,0,0,14,70,92,20,146,36,225,192,58,135,34,124,68,0,15,71,76,128,82,20,16,
140,20,91,143,13,71,118,0,14,70,72,82,78,36,225,192,34,141,50,124,68,0,17,71,52,245,83,80,16,200,
20,65,13,89,47,6,120,91,0,16,70,21,21,65,80,147,206,113,49,58,141,90,13,50,0,17,71,12,128,77,
60,210,76,20,49,35,65,13,65,140,55,0,11,199,5,69,18,36,37,84,20,17,36,18,71,5,69,18,36,37,
84,20,35,47,34,124,71,57,137,47,0,0,10,67,76,83,147,89,122,50,89,0,20,71,76,83,73,12,243,15,
56,89,122,65,124,49,6,139,55,13,50,0,0,18,67,77,80,200,89,129,76,15,10,119,88,0,8,81,97,115,
32,9,67,65,34,88,48,34,132,0,0,0,14,70,48,83,206,5,33,0,55,122,50,114,72,0,18,66,16,80,
72,141,75,6,146,34,37,0,81,106,117,114,101,32,8,66,16,80,72,13,0,46,0,9,67,76,178,64,89,49,
132,0,0,16,70,76,243,5,56,242,68,89,139,55,13,50,142,72,0,0,12,68,81,38,83,80,47,34,124,89,
47,0,12,68,16,84,15,80,72,132,48,139,0,103,11,68,16,84,15,80,72,122,48,139,0,0,14,70,48,16,
143,72,81,0,55,141,71,13,72,0,10,198,12,243,150,36,53,0,66,36,9,198,12,243,150,36,53,0,65,14,
69,12,195,211,21,64,49,55,126,88,113,47,0,0,16,67,80,18,64,47,140,6,76,132,0,81,99,104,105,32,
8,67,76,50,64,89,140,0,9,67,52,242,64,65,58,121,0,6,195,4,98,192,13,0,21,68,92,147,132,76,
58,6,140,50,72,88,15,6,129,48,0,81,117,112,32,24,68,92,147,132,76,58,6,140,50,72,88,15,72,6,
138,50,0,81,100,111,119,110,32,13,69,53,84,141,85,32,65,151,65,114,0,105,12,69,53,84,141,85,32,65,
131,65,114,0,12,69,16,83,137,21,32,72,113,50,148,0,0,15,70,4,225,204,21,49,89,35,68,81,118,89,
37,0,7,196,5,96,83,80,17,0,8,66,9,144,71,140,0,76,19,71,65,33,68,20,98,78,20,48,34,132,
72,113,83,6,140,50,0,10,199,64,243,25,80,129,78,20,65,14,69,17,33,65,53,64,72,34,122,65,48,47,
0,11,68,8,146,143,84,71,132,90,137,0,13,69,8,19,12,61,64,71,35,55,13,47,0,0,9,67,80,131,
192,86,139,0,46,15,70,64,131,197,56,150,0,83,132,50,124,49,89,0,14,6,110,97,195,175,118,101,50,140,
6,132,84,0,6,195,84,99,192,13,0,12,69,76,128,75,85,32,91,119,49,146,0,14,69,5,50,77,61,96,
35,88,125,65,126,83,0,12,69,48,243,211,21,32,55,137,88,114,0,8,197,12,243,139,21,32,65,13,69,12,
21,137,5,32,49,35,84,124,130,0,8,197,8,22,129,5,32,17,8,67,5,32,200,130,76,0,0,0,9,198,
65,35,212,21,53,0,36,17,70,65,35,212,21,53,0,48,34,139,108,122,89,47,0,47,17,70,25,37,73,80,
147,206,83,34,137,6,124,91,13,50,0,9,198,12,243,148,21,53,0,36,17,70,12,243,148,21,53,0,49,126,
50,108,122,89,47,0,47,0,11,67,32,147,64,4,107,124,65,0,46,9,67,84,227,192,137,50,139,0,19,72,
36,227,143,88,21,9,88,80,124,50,13,84,141,47,124,84,0,11,200,36,225,9,12,21,9,88,80,66,6,195,
21,53,0,13,6,195,4,115,64,13,0,0,15,70,48,21,82,20,224,197,55,126,34,13,50,89,0,16,70,65,
35,214,20,224,197,48,34,126,84,6,153,89,0,18,72,93,35,206,28,67,201,56,112,34,126,68,72,137,124,68,
0,11,67,88,83,149,84,122,50,57,137,0,16,70,37,52,213,4,224,197,124,91,137,13,50,89,0,103,17,70,
25,84,197,48,17,197,83,57,137,88,13,55,121,90,0,0,13,68,88,242,76,108,84,58,121,55,6,121,0,0,
6,195,36,145,3,13,0,22,73,64,131,212,60,116,129,64,134,64,83,13,47,6,126,81,34,13,83,37,0,9,
3,95,35,57,47,35,71,0,0,17,70,76,50,65,80,144,193,89,140,6,35,47,124,49,13,0,17,71,24,244,
133,77,64,76,48,83,136,89,47,6,133,55,0,9,67,4,195,0,133,55,0,42,0,14,70,72,86,78,60,193,
0,34,122,50,118,72,0,11,68,64,21,8,20,48,35,87,141,0,19,71,4,67,73,72,16,140,100,35,72,65,
13,34,13,71,55,37,0,0,8,197,52,81,21,76,16,17,14,69,64,19,69,48,16,48,35,65,13,55,13,0,
15,69,80,244,5,44,16,47,139,48,6,132,49,13,0,15,69,37,64,76,36,16,124,47,6,35,55,113,13,0,
14,69,28,83,133,88,16,75,13,50,132,84,13,0,14,69,20,198,83,20,80,141,55,6,132,88,141,0,13,69,
24,19,73,56,80,83,35,65,124,50,0,13,69,20,229,18,20,80,126,50,47,34,141,0,8,197,20,212,9,72,
80,65,8,197,20,208,143,48,80,65,13,69,16,244,193,28,80,72,139,89,113,75,0,13,69,16,240,66,48,80,
72,137,13,71,118,0,14,69,12,19,129,64,80,49,35,50,13,48,141,0,8,197,12,18,143,48,80,17,9,67,
4,197,0,126,55,47,0,6,195,20,69,0,13,0,6,195,77,50,68,13,0,12,69,4,50,9,56,112,141,49,
124,68,0,0,11,68,25,147,4,20,83,140,55,72,0,12,68,49,144,210,4,55,140,49,34,13,0,11,200,36,
228,201,28,133,6,84,192,66,0,13,69,48,19,65,104,80,55,119,65,121,88,0,13,69,29,32,69,52,80,81,
34,141,13,65,0,13,69,12,129,82,36,80,91,143,34,6,132,0,13,69,4,198,83,76,16,119,55,124,89,13,
0,14,69,88,145,78,56,16,84,124,6,122,50,13,0,14,69,32,21,129,56,16,107,119,84,35,50,13,0,8,
197,5,32,66,36,16,17,13,69,5,33,217,48,80,130,81,6,140,55,0,14,69,80,148,129,16,80,47,140,34,
6,141,72,0,14,69,80,145,82,72,16,47,124,6,143,34,13,0,14,69,76,145,82,72,16,89,132,6,143,34,
13,0,13,69,72,148,209,84,80,34,113,89,49,141,0,15,69,72,144,133,56,16,34,140,71,6,132,50,13,0,
13,69,60,85,86,72,80,151,84,34,13,0,105,12,69,60,85,86,72,80,131,84,34,13,0,9,197,56,85,193,
28,80,15,66,13,69,52,244,129,48,80,65,13,34,35,55,0,10,199,52,81,1,48,194,79,56,17,14,69,28,
19,1,28,16,81,35,55,13,81,13,0,14,69,24,147,129,48,80,83,113,50,121,55,37,0,15,69,8,19,129,
56,16,71,119,50,35,50,13,0,103,8,197,8,19,129,56,16,17,8,197,5,32,193,16,80,66,12,69,4,195,
5,48,80,119,55,132,55,0,0,9,198,61,85,19,44,148,148,65,0,14,68,76,128,76,48,4,91,35,55,0,
32,46,10,14,69,64,82,201,56,112,48,132,49,6,124,68,0,9,67,21,34,69,144,34,37,0,10,67,8,18,
129,71,121,107,121,0,0,20,71,8,83,133,88,83,148,20,71,122,50,124,84,6,122,50,47,141,0,17,71,77,
84,146,60,112,84,20,89,131,13,81,13,47,0,103,17,71,77,84,146,60,112,84,20,89,129,34,13,81,141,47,
0,18,71,65,33,68,36,48,84,20,48,34,122,72,113,49,141,47,0,10,199,36,224,78,36,208,84,20,16,17,
71,24,244,148,84,224,84,20,83,135,76,13,50,13,47,0,10,199,21,133,18,36,48,84,20,65,10,199,16,84,
208,21,32,84,20,16,17,71,12,244,146,84,112,84,20,49,126,34,13,81,141,47,0,10,199,12,244,144,61,32,
84,20,16,16,70,9,33,84,33,33,78,71,34,122,86,34,13,50,0,14,69,4,97,140,85,128,119,83,55,129,
49,89,0,0,8,197,52,19,1,92,144,17,6,195,73,67,211,13,4,193,136,43,0,16,70,52,84,133,16,149,
8,65,122,34,13,72,124,87,0,0,11,67,32,18,1,107,121,107,6,121,0,6,195,57,66,65,13,0,16,6,
104,97,100,110,39,116,107,35,72,14,50,47,0,35,15,70,92,21,6,61,33,0,58,126,47,83,13,72,0,19,
71,80,83,5,52,85,18,100,47,13,55,122,65,13,47,34,37,0,0,9,198,72,81,3,72,244,211,66,16,70,
16,83,79,56,84,211,72,132,65,13,50,122,89,0,6,195,16,150,64,13,6,195,4,209,0,13,0,17,67,52,
244,212,65,139,89,47,15,13,84,0,81,111,102,32,18,70,9,81,1,64,84,212,71,137,72,13,48,6,122,89,
47,0,17,70,76,85,133,72,84,212,89,13,84,144,34,13,89,47,0,10,67,72,84,212,34,122,89,47,0,12,
201,65,84,144,61,37,5,16,198,64,66,11,67,48,244,212,55,134,89,47,0,103,0,12,68,4,114,83,80,141,
75,124,89,47,0,0,14,69,65,33,83,21,64,48,34,132,89,122,47,0,9,198,52,83,69,57,67,192,17,13,
69,17,81,207,85,64,72,129,81,138,47,0,13,69,13,85,15,85,64,49,129,47,138,47,0,0,11,68,48,16,
143,72,55,141,71,114,0,10,67,44,147,15,49,132,55,139,0,0,13,67,92,83,148,2,58,122,50,47,0,10,
46,16,70,8,145,5,24,244,132,71,124,72,124,83,13,72,0,12,68,29,84,149,76,81,137,34,137,88,0,13,
69,9,84,147,5,32,71,151,89,114,0,105,12,69,9,84,147,5,32,71,131,89,114,0,11,68,5,34,69,76,
143,34,132,88,0,0,13,69,76,85,77,85,48,91,137,65,13,89,0,0,15,69,41,83,9,21,64,75,137,55,
124,6,122,47,0,17,71,29,82,78,21,97,82,20,81,58,124,50,125,84,145,0,14,69,60,49,76,61,64,126,
89,13,55,126,47,0,8,197,60,48,213,49,64,17,9,197,36,228,213,49,64,65,47,8,197,36,228,213,49,64,
66,5,194,21,80,13,0,14,68,84,225,5,72,129,50,72,114,0,72,10,46,11,68,16,245,133,72,72,139,84,
114,0,11,68,44,81,137,72,49,132,83,114,0,0,13,69,45,35,199,21,32,49,34,139,81,114,0,13,69,52,
19,135,21,32,65,141,50,75,114,0,10,67,52,19,12,65,133,55,0,103,9,67,52,19,12,65,35,55,0,13,
69,40,17,213,5,32,75,35,81,58,130,0,13,69,33,83,135,21,32,107,129,68,81,114,0,13,69,12,243,135,
21,32,49,126,68,81,114,0,12,69,8,243,199,21,32,71,117,81,114,0,12,68,5,50,197,92,119,89,49,57,
137,0,0,0,11,67,73,82,90,34,137,6,132,88,0,9,67,76,85,206,89,139,50,0,12,68,24,198,66,100,
83,55,140,71,140,0,16,70,8,84,212,21,53,0,71,122,89,47,13,89,47,0,0,12,68,48,85,133,56,55,
132,84,13,50,0,20,72,64,82,143,72,21,9,88,80,48,13,75,126,34,13,47,124,84,0,17,72,32,84,133,
80,241,143,72,80,107,145,108,117,83,136,0,13,69,8,243,199,21,144,71,117,81,37,0,103,0,11,67,85,64,
72,57,137,108,134,0,103,10,67,85,64,72,57,137,108,121,0,12,68,12,193,82,44,49,55,130,49,0,135,0,
0,12,67,4,225,0,35,50,72,0,72,8,46,24,73,81,34,67,21,32,84,61,4,192,47,34,140,89,6,122,
34,13,47,126,48,89,0,12,68,65,34,86,100,48,34,124,84,37,0,0,9,66,4,224,119,50,0,34,46,12,
68,12,243,129,56,49,139,50,13,50,0,11,68,4,195,5,56,35,55,13,50,0,21,72,12,147,131,36,227,129,
80,144,89,124,50,89,124,50,6,35,47,37,0,12,68,48,147,133,56,55,124,50,113,50,0,14,69,32,243,73,
49,144,107,126,65,13,55,37,0,0,7,196,36,64,72,60,65,18,71,65,54,67,32,244,201,76,89,140,49,6,
139,89,124,89,0,7,196,36,229,18,60,65,20,71,36,115,143,72,19,85,76,124,81,50,136,34,6,141,65,13,
89,0,15,70,24,16,213,49,70,64,83,35,49,118,108,37,0,0,13,68,92,130,76,20,58,4,140,55,0,28,
9,12,68,4,32,66,4,35,71,119,71,13,0,12,68,56,147,138,4,50,124,50,75,13,0,0,14,69,72,149,
133,72,16,34,113,84,143,34,13,0,8,197,76,16,137,56,16,17,14,69,4,225,197,48,16,35,50,75,13,55,
13,0,13,69,4,194,67,36,16,119,55,132,91,13,0,12,69,65,32,71,84,80,48,34,121,81,0,12,69,64,
84,147,36,16,48,131,90,13,0,13,69,77,83,132,4,80,89,129,50,72,141,0,14,69,76,145,78,56,16,89,
132,6,122,50,13,0,14,69,72,81,5,100,80,34,6,122,72,4,140,0,14,69,65,146,129,52,16,48,13,75,
121,65,13,0,8,197,64,20,143,48,80,17,13,69,61,32,78,28,80,126,34,113,50,75,0,8,197,52,18,143,
72,16,17,18,72,32,83,131,20,99,210,80,128,107,122,50,89,83,136,87,0,13,69,28,20,143,80,80,81,119,
34,126,47,0,13,69,21,36,129,80,16,113,34,121,47,13,0,15,69,16,148,213,76,80,72,124,89,6,57,137,
89,0,13,69,16,18,12,36,16,72,141,55,132,13,0,14,69,12,246,79,80,80,49,140,6,139,47,37,0,11,
69,12,128,73,76,80,91,141,88,0,12,69,12,20,143,48,80,49,35,34,118,0,20,71,4,227,206,100,210,84,
100,35,50,13,50,6,124,65,113,47,37,0,14,69,4,69,193,72,80,6,35,72,58,4,143,0,0,0,14,69,
81,80,82,20,112,47,58,130,34,122,81,0,10,67,52,19,9,65,121,55,37,0,17,71,72,83,132,21,99,213,
76,34,126,50,72,113,84,137,0,13,69,48,244,201,56,112,55,137,88,124,68,0,16,70,29,32,78,17,0,64,
81,34,35,50,72,48,121,0,6,195,5,96,192,13,0,11,68,4,48,210,4,35,49,34,119,0,13,68,48,83,
206,4,55,132,6,139,50,13,0,12,68,28,243,142,4,81,4,13,50,13,0,11,68,28,83,196,20,75,132,139,
72,0,12,68,12,240,146,4,49,139,71,34,13,0,6,195,4,66,4,13,0,8,197,52,240,137,48,80,16,15,
69,100,19,65,32,16,57,121,65,13,107,121,0,103,14,69,100,19,65,32,16,57,35,65,13,107,121,0,8,197,
101,99,206,56,80,66,12,69,64,131,197,8,80,83,132,71,132,0,15,69,52,22,9,56,80,65,35,49,89,6,
132,50,0,10,67,92,147,143,58,140,50,139,0,22,73,77,84,5,72,99,21,61,84,192,89,137,48,6,131,83,
55,137,13,89,0,13,69,72,80,129,80,80,34,132,71,141,47,0,12,68,72,80,68,16,34,132,6,35,72,0,
11,69,69,82,67,32,80,49,132,91,0,12,69,65,54,67,32,80,89,140,49,132,0,13,69,64,148,129,80,80,
48,140,34,13,47,0,20,73,52,148,195,32,145,86,61,84,192,65,124,89,76,113,84,13,89,0,14,69,52,147,
149,80,80,65,124,50,124,47,0,47,13,69,52,17,1,52,80,65,35,72,13,65,0,14,69,44,20,129,80,80,
49,13,34,121,47,37,0,13,69,21,98,78,12,80,113,84,124,50,89,0,12,69,5,84,211,36,80,126,89,37,
0,103,11,69,5,84,211,36,80,126,88,37,0,13,69,4,84,129,80,80,143,34,6,141,47,0,0,0,11,67,
32,82,5,107,132,107,6,132,0,8,67,21,113,64,57,137,0,11,67,16,82,129,72,141,90,121,0,46,9,67,
9,34,69,71,34,132,0,8,197,52,211,210,64,112,13,0,20,71,88,145,201,48,19,148,20,84,124,75,113,55,
6,35,50,47,37,0,0,15,69,16,210,84,72,144,72,13,65,132,47,34,37,0,14,69,32,21,193,36,144,107,
13,58,6,140,132,0,11,200,81,34,80,48,144,193,80,80,16,8,197,76,17,129,72,144,17,11,200,52,243,25,
8,65,78,84,208,66,11,200,36,195,9,80,84,129,80,80,16,11,200,16,83,9,8,84,129,80,80,16,21,72,
12,243,210,16,147,129,80,80,49,139,6,135,72,113,50,141,47,0,36,20,72,12,19,148,4,195,213,64,80,49,
35,50,47,13,55,139,48,0,103,0,21,72,8,19,135,48,81,5,76,128,71,35,68,81,55,13,72,6,122,91,
0,12,68,4,192,77,60,35,55,13,65,139,0,0,32,7,109,117,115,116,110,39,116,65,6,129,89,14,50,47,
107,35,84,47,116,0,35,82,104,97,118,101,32,116,111,32,27,7,109,117,115,116,110,39,116,65,129,89,14,50,
47,107,119,84,0,35,77,81,104,97,118,101,32,17,7,109,117,115,116,110,39,116,65,129,89,14,50,47,0,32,
16,70,28,147,214,4,227,137,75,13,84,6,121,50,37,0,13,68,77,81,1,56,89,137,72,6,35,50,0,12,
68,76,81,1,56,89,113,72,35,50,0,9,198,64,150,154,21,34,65,15,13,69,21,98,76,16,240,132,84,118,
72,137,0,16,70,21,2,80,32,19,153,113,48,124,83,13,50,124,0,16,69,4,192,137,56,240,35,55,71,6,
140,50,139,0,103,0,33,8,119,111,117,108,100,110,39,116,4,58,117,72,14,50,47,35,84,47,116,0,32,10,
82,104,97,118,101,32,116,111,32,28,8,119,111,117,108,100,110,39,116,58,117,72,14,50,47,13,84,0,73,35,
10,81,104,97,118,101,32,11,68,8,128,74,36,71,121,75,37,0,4,193,140,43,0,19,67,16,145,0,72,124,
72,50,126,47,0,32,78,81,110,111,116,32,10,67,16,145,0,72,124,72,0,32,20,67,32,17,0,107,4,35,
72,15,89,129,65,0,81,115,111,109,101,32,19,67,32,17,0,107,4,35,72,15,122,50,37,0,81,97,110,121,
32,17,67,32,17,0,107,35,72,58,129,50,0,81,111,110,101,32,19,67,32,17,0,107,4,35,72,86,122,65,
0,81,116,104,101,109,32,16,67,32,17,0,107,4,35,72,113,47,0,81,105,116,32,21,67,32,17,0,2,107,
119,72,2,71,124,50,0,35,81,98,101,101,110,32,16,67,32,17,0,107,35,72,47,137,0,49,81,116,111,32,
16,67,32,17,0,107,2,35,72,47,116,0,81,116,111,32,11,67,32,17,0,4,107,35,72,0,49,13,67,32,
17,0,2,107,119,72,0,35,10,46,16,70,72,19,73,72,86,128,34,119,65,145,34,122,88,0,13,69,28,19,
132,32,144,81,35,50,72,37,0,13,69,17,84,136,4,208,72,129,34,13,65,0,9,198,76,16,130,5,66,67,
17,17,70,72,129,84,61,34,67,34,122,47,13,34,124,49,0,47,18,70,16,241,205,5,66,67,72,126,81,65,
6,35,47,124,49,0,0,20,66,16,144,72,125,65,121,90,124,139,0,81,109,97,103,103,105,111,32,8,66,16,
144,72,140,0,41,15,70,88,20,137,21,70,64,84,13,34,147,47,37,0,8,67,37,35,206,148,50,0,17,70,
36,228,85,37,38,64,124,50,49,58,13,34,37,0,103,9,66,16,144,72,4,124,0,46,16,66,20,112,83,135,
122,81,88,6,120,65,48,118,0,46,0,10,67,72,243,137,34,126,50,37,0,8,197,52,86,9,12,240,65,14,
69,44,244,207,88,240,49,126,89,13,84,139,0,12,68,81,38,73,56,47,34,140,124,50,0,10,67,28,83,137,
75,132,50,37,0,8,197,12,20,201,56,240,17,6,195,4,243,0,13,0,6,195,5,48,80,13,0,15,70,12,
16,146,36,195,15,49,119,71,34,132,139,0,18,71,20,194,83,4,33,84,32,113,55,124,88,13,71,13,87,0,
17,70,52,85,8,36,226,211,65,132,87,6,124,68,49,89,0,20,72,12,243,77,84,226,81,84,80,49,13,65,
57,137,50,113,49,141,0,0,11,199,65,34,69,77,65,83,76,103,16,0,9,198,76,19,135,84,147,133,16,9,
198,65,34,83,80,147,133,66,16,70,41,82,197,8,246,0,75,137,49,71,126,49,89,0,0,10,199,80,129,82,
20,99,210,20,65,18,71,76,80,210,21,66,86,20,89,132,49,34,13,47,124,84,0,9,198,61,97,82,48,244,
132,65,17,71,56,20,146,5,66,86,20,50,35,34,13,47,124,84,0,15,70,13,35,195,32,85,0,49,34,139,
91,6,141,0,17,71,4,116,133,77,50,86,20,119,81,34,122,89,124,84,0,10,199,4,66,133,13,66,86,20,
65,0,19,73,92,129,82,21,114,84,32,19,0,58,143,58,124,86,133,55,0,13,68,4,69,76,80,35,72,129,
55,47,0,135,0,12,68,72,83,85,76,34,132,65,13,89,0,12,68,52,21,137,76,65,141,84,124,89,0,12,
68,105,83,21,76,88,137,55,137,88,0,10,68,81,35,201,76,47,58,121,0,0,12,68,12,84,193,72,89,141,
88,6,130,0,9,198,76,83,73,80,243,133,65,13,69,64,147,5,85,0,48,140,55,129,48,0,16,70,16,240,
212,72,147,133,72,126,49,47,34,113,50,0,13,68,16,80,207,72,72,141,49,6,135,0,103,11,68,16,80,207,
72,72,141,49,135,0,10,68,5,81,197,72,133,81,114,0,0,0,22,73,56,80,78,16,84,148,32,19,0,50,
132,6,35,50,72,114,87,121,55,0,11,199,36,229,5,73,37,80,80,67,36,11,199,36,229,5,73,37,80,80,
65,47,0,13,202,52,20,211,4,50,21,76,85,20,76,67,0,17,70,80,21,193,44,243,137,47,119,58,121,49,
13,50,37,0,21,72,49,86,5,52,35,213,72,112,55,129,49,89,13,65,71,151,81,0,105,20,72,49,86,5,
52,35,213,72,112,55,129,49,89,13,65,71,131,81,0,12,68,72,84,201,56,34,122,88,124,50,0,0,19,71,
80,83,80,61,32,82,100,47,122,65,48,34,13,34,124,0,135,10,199,64,149,21,37,64,82,100,66,15,70,61,
85,16,61,53,0,138,47,48,139,89,47,0,0,14,69,9,37,78,20,144,71,34,137,50,6,140,0,22,73,77,
67,210,101,65,76,48,147,135,89,47,133,34,124,47,122,55,124,68,0,16,70,72,21,133,56,245,83,34,35,84,
13,50,13,89,0,0,15,70,40,16,213,105,162,64,75,13,49,137,88,37,0,17,71,32,22,129,72,67,213,76,
107,35,88,114,72,13,89,0,6,66,20,128,141,0,11,68,4,213,67,44,119,65,129,49,0,0,15,69,24,144,
83,12,240,83,132,6,35,89,49,139,0,6,195,60,52,128,13,0,6,195,9,147,196,13,6,195,9,51,196,13,
0,18,71,20,194,90,4,33,84,32,113,55,124,88,13,71,13,87,0,19,72,64,244,148,84,117,69,76,80,48,
136,76,13,81,6,132,88,0,17,72,8,245,82,28,83,201,76,80,71,146,90,58,121,88,0,17,71,5,85,15,
29,32,80,32,133,47,13,81,34,35,83,0,0,14,68,16,242,78,28,4,72,137,124,68,0,10,46,8,67,40,
245,82,90,146,0,10,68,8,242,78,28,71,142,68,0,20,71,5,4,1,72,21,21,76,35,48,13,34,6,35,
47,13,89,0,103,19,71,5,4,1,72,21,21,76,35,48,13,34,6,141,47,13,89,0,0,14,70,64,130,76,
37,4,5,83,113,55,132,48,0,0,19,67,92,147,132,58,6,140,50,72,15,6,129,48,0,81,117,112,32,23,
67,92,147,132,58,6,124,50,72,15,48,6,138,114,0,81,112,111,119,101,114,32,11,67,92,147,132,58,140,50,
72,0,36,13,70,76,193,73,28,133,0,89,55,140,47,0,0,10,199,81,32,78,77,3,210,80,36,19,71,81,
32,78,77,3,210,80,47,34,35,50,89,48,136,47,0,46,13,69,24,147,137,80,80,83,140,50,140,47,0,13,
68,20,208,133,16,122,65,71,6,122,72,0,13,3,226,132,162,47,34,141,72,65,130,49,0,0,0,10,67,80,
147,129,47,132,50,13,0,17,71,12,128,77,20,193,79,56,49,13,65,132,55,144,50,0,19,71,5,85,15,52,
21,15,56,133,47,6,126,65,13,47,13,50,0,0,10,199,81,84,142,80,16,140,20,15,11,68,76,243,142,100,
89,129,50,124,0,24,74,36,224,80,65,35,208,72,144,84,20,124,50,119,48,34,6,139,48,34,144,47,0,12,
68,16,80,210,100,72,113,49,34,140,0,9,198,12,243,148,21,133,0,65,0,10,68,76,83,213,48,89,139,55,
0,11,68,72,81,193,48,34,132,81,118,0,13,69,32,83,9,84,208,107,132,55,144,65,0,11,200,21,129,67,
85,64,66,48,80,67,0,13,69,72,17,9,76,128,34,35,72,124,91,0,17,70,52,20,129,80,131,206,65,35,
34,13,87,126,50,0,103,15,70,21,48,200,20,195,206,122,91,13,55,126,50,0,0,9,67,56,243,133,50,129,
50,0,9,67,16,243,133,72,129,50,0,13,67,28,243,133,2,81,134,50,0,103,10,46,12,67,28,243,133,2,
81,126,50,0,10,46,9,67,80,243,133,47,139,50,0,6,195,72,85,128,24,6,195,32,149,128,13,4,193,144,
43,0,9,198,16,147,12,5,33,0,16,9,198,52,149,3,32,83,12,16,0,10,67,5,33,83,143,34,132,88,
0,8,67,20,145,0,132,72,0,11,68,8,84,153,48,71,122,34,118,0,0,17,70,32,84,143,37,51,64,107,
122,34,139,124,88,13,65,0,14,69,16,148,205,4,192,72,124,88,65,13,55,0,0,14,69,52,243,129,12,240,
65,126,50,13,49,139,0,16,70,16,162,66,61,85,9,75,124,71,6,137,47,37,0,0,10,198,12,243,148,72,
20,212,66,36,14,67,80,36,208,47,141,71,118,89,48,137,50,0,0,13,67,28,85,0,2,81,122,47,0,10,
35,46,16,70,32,20,137,76,243,128,107,35,34,124,89,13,50,0,10,67,81,34,79,47,34,132,139,0,15,70,
20,66,84,36,243,128,113,72,124,91,13,50,0,12,68,16,243,149,80,72,139,50,129,47,0,16,70,12,128,71,
72,147,128,91,119,81,34,124,50,0,103,15,70,12,128,71,72,147,128,91,35,81,34,124,50,0,17,70,8,149,
21,52,83,128,71,124,76,137,65,13,50,0,135,13,3,226,132,150,50,57,137,65,13,34,139,0,0,6,195,36,
227,2,13,0,13,202,92,244,132,65,35,195,21,52,207,72,66,16,70,12,240,203,77,84,133,4,49,126,49,91,
6,146,0,15,70,12,20,200,52,84,133,49,35,90,65,145,0,103,14,70,12,20,200,52,84,133,49,35,91,65,
145,0,17,70,9,35,195,33,84,133,71,34,139,6,91,146,34,0,103,14,70,9,35,195,33,84,133,71,34,139,
91,114,0,0,20,71,65,34,77,5,97,82,4,48,34,132,65,13,84,6,143,34,13,0,12,201,92,244,132,65,
35,195,21,52,192,66,17,71,48,147,79,85,50,78,20,55,124,65,13,88,132,50,0,17,71,33,84,146,36,48,
78,20,107,131,13,49,141,50,0,103,17,71,33,84,146,36,48,78,20,107,129,34,113,49,141,50,0,21,73,12,
193,65,56,194,78,21,52,192,49,55,122,50,55,124,50,13,89,0,23,73,12,128,82,37,51,65,80,144,192,49,
35,34,124,89,65,6,35,47,124,49,0,0,12,68,52,243,133,80,65,139,50,6,141,0,14,70,64,197,77,8,
84,128,48,55,129,65,114,0,15,69,52,147,9,21,80,65,132,55,6,57,137,0,103,13,69,52,147,9,21,80,
65,132,55,57,131,0,11,68,48,80,80,80,55,122,48,47,0,0,16,70,12,149,1,16,83,0,89,124,47,13,
72,122,55,0,0,17,70,4,117,73,48,84,129,35,81,132,55,6,143,34,13,0,13,69,12,19,143,21,48,49,
13,50,137,88,0,13,3,226,133,148,47,137,87,6,131,72,88,0,0,15,67,92,147,12,58,124,55,47,116,0,
81,116,111,32,9,195,92,147,12,76,46,32,10,12,68,12,129,82,36,91,143,34,6,132,0,15,70,32,244,212,
21,52,192,107,139,89,47,122,89,0,0,12,68,36,229,5,48,124,50,108,122,55,0,10,199,28,243,196,56,145,
200,80,66,0,0,10,199,76,80,129,77,66,65,56,17,16,70,88,145,78,56,84,197,84,132,13,50,6,132,88,
0,19,71,65,34,86,5,66,79,56,48,34,140,84,6,141,91,13,50,0,18,72,21,97,82,101,66,9,56,112,
122,84,34,113,87,124,68,0,9,198,16,144,71,56,244,197,67,10,199,8,21,20,4,194,79,56,17,0,12,68,
81,32,67,100,47,34,141,89,37,0,11,67,72,21,76,34,138,6,137,55,0,15,70,8,19,12,5,53,0,71,
35,55,13,89,47,0,13,3,226,133,147,58,126,50,87,6,131,72,0,0,13,69,16,148,206,21,144,72,124,88,
50,37,0,18,70,12,243,15,72,17,15,49,126,55,114,34,6,121,72,139,0,14,203,77,84,5,73,53,18,84,
53,21,72,80,65,11,68,72,83,129,48,34,132,50,118,0,11,68,64,83,129,48,48,132,50,118,0,13,69,57,
83,66,49,144,50,129,65,55,37,0,14,203,36,225,146,5,53,18,84,53,21,72,80,65,12,68,12,19,129,48,
49,13,50,35,55,0,11,68,8,19,129,48,71,141,50,118,0,0,17,70,20,33,78,21,160,82,122,71,13,50,
6,132,88,114,0,23,73,72,84,208,37,32,84,61,38,64,34,122,89,48,34,13,47,152,34,37,0,103,23,73,
72,84,208,37,32,84,61,38,64,34,113,89,48,124,34,13,47,13,34,124,0,17,70,32,243,73,56,83,64,107,
126,65,13,50,13,65,0,103,16,70,32,243,73,56,83,64,107,126,65,124,50,122,65,0,15,70,24,19,73,48,
144,82,83,13,65,124,55,145,0,0,6,195,76,192,64,13,0,15,70,64,148,85,4,229,0,48,132,49,13,50,
47,0,9,198,61,85,12,60,242,192,65,11,68,36,225,9,20,124,50,72,37,0,9,198,24,20,133,92,83,12,
66,0,17,70,100,84,133,88,19,128,57,122,34,13,84,6,35,50,0,9,198,8,18,18,4,147,128,66,12,68,
12,197,217,16,49,55,137,124,72,0,17,71,48,16,153,72,147,148,32,55,35,71,114,124,50,87,0,0,0,15,
70,12,19,12,36,244,5,49,119,55,147,48,37,0,9,198,20,229,133,48,244,5,36,17,70,20,229,133,48,244,
5,121,50,84,13,55,139,48,0,103,17,70,20,229,133,48,244,5,122,50,84,13,55,139,48,0,46,10,67,4,
128,64,121,107,6,121,0,16,8,95,98,114,97,105,108,108,101,71,34,6,141,55,0,0,11,68,52,20,137,20,
65,119,34,132,0,11,68,5,33,213,20,130,81,57,137,0,0,18,70,76,19,148,36,17,207,89,35,50,47,124,
6,121,81,139,0,10,68,78,81,8,20,91,132,13,0,12,68,52,244,5,16,65,139,48,122,72,0,0,0,10,
67,16,19,129,72,141,50,13,0,9,67,88,81,192,84,122,75,0,13,201,84,225,5,72,116,143,84,225,0,65,
37,21,73,52,17,5,52,242,83,20,195,5,65,35,72,13,65,13,88,122,55,0,8,67,20,113,192,122,81,0,
18,71,16,19,132,20,194,79,56,72,35,50,72,113,55,147,50,0,11,3,226,130,172,57,146,34,139,88,0,0,
18,71,12,145,193,72,85,20,20,89,124,81,13,6,34,122,47,0,0,13,69,77,64,82,73,144,89,47,121,34,
124,0,0,15,70,13,34,67,33,67,206,49,34,140,47,13,50,0,9,3,226,130,169,58,126,50,0,0,17,70,
52,244,137,5,37,25,65,126,34,124,6,130,47,37,0,11,68,28,198,78,56,81,55,124,50,0,9,67,72,81,
192,34,122,75,0,10,67,32,243,1,21,101,115,0,47,17,70,32,84,133,16,149,25,107,114,34,122,72,113,47,
37,0,11,67,28,19,1,81,141,55,13,0,103,9,67,12,243,133,49,139,50,0,15,70,8,245,84,37,21,69,
71,137,47,6,132,49,0,6,195,84,51,1,13,10,3,226,130,168,34,137,48,132,0,0,15,70,64,198,77,61,
85,8,48,55,124,65,13,87,0,19,71,80,83,5,64,131,206,100,47,13,55,6,122,83,13,50,37,0,0,10,
67,80,133,83,86,129,89,0,8,22,72,64,19,5,77,66,78,36,16,48,35,55,13,89,47,6,124,50,132,13,
0,10,67,64,197,83,48,55,129,89,0,15,69,52,145,4,5,144,65,4,124,72,72,6,141,0,11,67,21,129,
83,122,49,89,125,88,0,0,18,66,32,80,107,132,15,107,6,35,72,0,49,81,104,97,100,32,9,66,32,80,
107,132,0,72,33,10,67,73,82,78,34,137,113,50,0,7,66,40,16,57,121,0,8,66,24,144,83,4,140,0,
0,9,198,56,21,9,88,149,25,17,17,70,52,18,143,72,149,25,65,13,75,126,34,113,47,37,0,0,14,67,
92,20,212,2,58,126,89,47,0,46,35,46,10,67,92,20,212,58,141,89,47,0,17,70,88,243,3,4,227,192,
84,126,55,49,6,141,50,139,0,10,67,32,82,0,107,122,107,0,46,16,70,12,16,137,56,85,0,49,35,71,
125,50,13,47,0,0,16,70,32,245,83,80,243,128,107,57,137,89,47,13,50,0,9,198,4,229,9,28,83,128,
65,15,4,95,111,103,111,6,126,81,126,50,4,122,49,0,0,0,13,69,76,80,77,85,48,91,141,65,13,89,
0,14,69,44,19,147,5,48,49,35,50,88,13,89,0,13,69,32,80,146,21,112,107,132,71,34,137,0,13,69,
84,225,9,21,48,129,50,72,37,88,0,13,69,76,84,137,21,48,89,145,34,37,88,0,8,197,61,85,12,5,
112,65,14,70,32,145,200,24,149,133,107,140,83,140,84,0,19,70,21,48,193,64,148,205,122,89,49,6,141,48,
113,88,13,65,0,18,70,12,243,9,76,85,77,49,126,55,13,89,6,132,13,65,0,0,17,70,65,35,212,60,
51,204,48,34,139,47,13,49,126,55,0,16,70,64,84,134,20,53,0,48,114,83,122,49,47,0,36,16,70,64,
84,134,20,53,0,48,131,83,122,49,47,0,47,10,67,24,150,0,83,124,49,89,0,12,67,17,81,84,72,57,
137,6,122,47,0,17,71,4,69,133,73,66,90,20,35,72,84,114,47,140,88,0,0,10,67,81,148,15,47,140,
48,139,0,11,4,95,104,111,107,107,6,117,49,0,0,10,66,37,48,2,124,88,0,35,46,16,70,32,19,73,
49,67,206,107,35,65,118,47,13,50,0,16,70,4,192,193,80,83,0,35,55,49,119,47,122,55,0,6,195,65,
35,198,24,0,13,69,80,131,205,5,48,47,126,65,13,89,0,16,70,12,19,130,21,36,129,49,35,50,71,13,
34,13,0,13,69,24,17,67,21,48,83,132,89,132,88,0,0,11,68,72,82,75,36,34,141,49,132,0,0,7,
196,64,21,5,48,17,11,200,88,81,197,80,21,9,88,80,15,11,68,80,245,1,48,47,139,47,118,0,19,72,
64,130,76,37,53,9,56,80,83,124,55,113,89,47,140,50,0,13,69,24,82,83,81,144,83,140,89,47,37,0,
14,69,12,19,129,73,144,49,13,50,143,34,37,0,12,68,8,20,201,48,71,141,88,118,0,103,0,10,67,21,
96,78,122,84,13,50,0,6,195,37,52,0,13,0,15,70,80,245,76,61,84,197,47,137,55,6,137,88,0,15,
70,77,83,77,60,228,197,89,129,65,13,50,88,0,9,67,72,83,192,34,132,139,0,10,199,64,244,131,20,192,
73,56,16,15,70,13,33,86,5,52,197,49,34,13,84,35,89,0,0,15,70,24,18,82,21,53,0,83,143,34,
13,89,47,0,15,70,5,32,200,37,51,192,130,76,6,140,89,139,0,0,15,70,5,34,193,57,48,83,130,49,
13,50,89,133,0,15,69,84,225,5,57,144,129,50,72,124,50,6,140,0,13,69,81,35,208,33,144,47,34,139,
83,37,0,8,197,77,84,150,21,144,36,14,69,77,84,150,21,144,89,151,84,141,0,105,47,13,69,77,84,150,
21,144,89,131,84,141,0,47,13,69,72,84,12,5,144,34,132,48,55,141,0,15,69,49,86,21,73,144,55,129,
49,91,114,34,37,0,13,69,12,243,69,49,144,49,129,65,55,124,0,0,9,66,20,192,4,122,55,0,46,5,
194,36,64,13,0,10,67,32,20,192,107,35,88,0,42,17,67,32,20,192,107,4,35,88,113,47,0,49,81,105,
116,32,19,67,32,20,192,107,119,88,50,126,47,0,35,49,81,110,111,116,32,19,67,32,20,192,107,13,88,50,
2,126,47,0,35,81,110,111,116,32,16,67,32,20,192,107,35,88,47,137,0,49,81,116,111,32,21,67,32,20,
192,2,107,119,88,2,71,124,50,0,35,81,98,101,101,110,32,11,67,32,20,192,107,35,88,0,46,49,12,67,
32,20,192,2,107,119,88,0,35,46,9,198,52,83,12,37,52,193,17,8,67,81,148,128,47,148,0,10,67,80,
148,192,47,124,88,0,46,6,195,36,244,192,13,0,15,70,40,19,133,37,35,192,90,119,50,143,34,139,0,6,
195,48,20,4,13,0,15,70,77,65,80,32,83,128,89,47,132,84,13,50,0,15,70,20,209,82,76,243,128,122,
65,114,89,13,50,0,17,70,4,225,207,48,19,128,35,68,81,6,139,55,13,50,0,10,67,28,245,15,81,139,
47,137,0,10,67,56,21,15,50,141,47,139,0,0,9,198,52,83,9,77,48,64,17,9,198,52,83,12,37,48,
64,17,13,69,72,17,199,20,64,34,35,81,125,72,0,14,69,53,148,137,4,64,65,124,34,124,35,72,0,13,
69,40,17,199,20,64,75,35,81,125,72,0,12,69,32,19,135,20,64,107,35,68,72,0,13,69,16,241,199,20,
64,72,126,81,125,72,0,15,71,8,245,82,28,83,201,76,71,146,90,58,121,0,0,13,67,32,148,192,107,124,
88,0,72,34,46,10,17,71,44,132,149,76,50,5,88,49,34,137,89,76,122,83,0,12,67,48,20,192,4,55,
121,89,0,103,46,11,67,48,20,192,4,55,35,89,0,46,0,11,68,37,33,78,20,140,34,132,50,0,15,70,
29,37,70,25,145,4,81,34,124,83,124,87,0,16,70,72,84,18,37,48,76,34,113,48,34,140,88,118,0,16,
70,72,83,78,4,229,0,34,122,65,50,13,50,47,0,13,68,64,20,212,4,48,121,89,47,13,0,103,10,68,
60,50,18,20,139,49,114,0,0,10,199,28,19,12,37,96,78,80,15,10,67,8,19,11,71,133,49,0,103,0,
6,194,37,64,42,13,19,66,37,64,2,124,47,15,58,129,88,0,103,49,81,119,97,115,32,18,66,37,64,2,
124,47,15,58,126,88,0,49,81,119,97,115,32,16,66,37,64,2,124,47,15,124,88,0,49,81,105,115,32,18,
66,37,64,2,124,47,15,107,35,88,0,49,81,104,97,115,32,9,66,37,64,124,47,0,72,33,15,70,32,84,
146,21,32,64,107,13,34,143,34,13,0,9,198,40,18,193,73,64,64,17,16,70,72,80,204,85,49,64,34,122,
49,55,137,89,0,103,12,69,4,195,9,20,64,35,55,140,72,0,12,4,95,98,114,118,71,34,6,132,84,0,
0,19,67,24,85,192,83,6,57,137,65,4,136,0,81,109,111,114,101,32,16,70,81,34,67,100,51,5,47,34,
140,89,124,49,118,0,10,67,77,84,197,89,137,89,13,0,0,9,198,77,84,193,56,224,72,66,19,71,52,19,
1,100,19,1,52,65,35,55,141,6,121,55,13,65,0,14,69,28,149,8,84,32,81,124,47,107,129,71,0,0,
10,67,104,85,83,88,137,89,0,103,10,67,104,85,83,88,57,137,89,0,10,199,56,21,8,4,226,69,48,17,
12,69,12,20,211,21,144,49,141,89,37,0,16,70,16,80,146,36,81,128,72,132,71,34,6,132,83,0,0,14,
69,32,244,141,20,192,107,136,65,6,122,55,0,14,69,37,52,129,20,192,124,88,34,132,118,0,103,18,4,95,
97,99,50,72,129,71,13,55,119,49,57,6,137,47,0,0,11,67,64,20,1,48,121,48,13,0,103,11,67,64,
20,1,48,119,48,6,121,0,10,67,4,36,129,35,71,34,13,0,0,12,67,32,21,8,2,107,35,87,0,35,
46,15,69,4,208,90,60,224,35,65,119,88,126,50,0,103,13,69,76,243,5,52,224,89,126,55,13,65,0,18,
70,12,243,80,21,65,68,49,13,65,48,6,132,47,124,72,0,16,70,8,84,137,56,113,68,71,113,34,124,68,
81,72,0,6,195,37,70,0,13,0,14,69,72,83,69,17,144,34,122,65,13,72,37,0,9,197,56,80,82,9,
144,66,49,10,67,37,34,83,140,34,124,89,0,11,67,5,129,83,35,49,89,125,88,0,0,15,66,16,240,72,
137,15,89,139,0,49,81,115,111,32,17,66,16,240,72,137,50,126,47,0,32,78,81,110,111,116,32,8,66,16,
240,72,137,0,32,12,68,80,242,217,60,47,139,49,124,139,0,14,69,52,20,131,20,192,65,130,89,6,122,55,
0,10,67,49,146,78,55,140,124,50,0,11,200,12,245,78,80,84,129,13,64,67,12,69,12,130,83,20,192,76,
124,88,118,0,23,73,4,197,5,72,224,84,20,198,64,133,55,47,6,131,50,13,47,55,124,0,32,10,66,36,
80,140,132,11,0,8,46,0,11,67,4,229,9,35,50,47,140,0,103,0,10,199,52,147,23,5,82,197,20,66,
15,69,76,145,206,60,224,89,4,140,50,6,126,50,0,0,17,70,52,145,5,88,83,128,65,4,124,72,6,132,
84,50,0,0,12,67,32,212,6,107,6,13,65,48,83,0,9,67,32,84,130,131,71,0,103,0,14,69,9,81,
78,61,48,71,58,141,50,126,89,0,16,70,77,80,144,60,83,129,89,137,48,6,132,50,13,0,13,69,64,21,
8,61,48,48,141,87,126,89,0,0,9,67,72,245,84,34,138,47,0,11,68,4,66,69,84,119,72,57,137,0,
0,15,70,92,131,197,88,84,128,107,137,122,84,114,0,66,14,70,76,49,80,80,84,128,89,122,48,47,114,0,
22,73,65,33,68,20,49,83,76,244,128,48,34,122,72,125,89,122,89,114,0,103,7,196,44,20,21,80,17,0,
11,68,12,132,137,76,49,34,124,89,0,0,7,196,56,85,133,72,32,13,69,80,240,137,5,48,47,13,71,147,
89,0,10,199,52,145,4,48,83,65,56,15,13,69,4,197,193,101,48,133,55,58,141,88,0,0,15,70,4,112,
73,57,53,0,119,81,122,50,89,47,0,16,70,64,20,25,73,84,192,48,119,48,140,34,13,89,0,12,68,44,
128,75,36,49,35,49,37,0,103,11,68,16,148,200,100,72,124,91,37,0,15,70,12,243,131,32,84,192,49,126,
50,76,125,88,0,10,67,5,115,204,141,58,126,55,0,0,14,69,77,68,137,65,144,89,47,34,140,48,124,0,
0,13,69,72,20,195,4,192,34,120,89,49,118,0,0,12,68,16,85,143,56,72,122,84,13,50,0,0,13,69,
72,80,71,4,224,34,141,81,13,50,0,14,69,80,18,87,4,224,47,140,6,58,121,50,0,17,71,12,19,66,
72,145,7,20,49,141,65,71,34,124,75,0,0,12,68,40,19,65,48,75,119,65,126,55,0,19,70,32,243,132,
85,32,83,107,126,50,72,6,57,146,34,13,89,0,15,70,48,147,131,60,195,128,55,124,50,49,13,50,0,11,
68,77,112,84,32,89,58,126,87,0,16,70,64,19,131,72,80,83,48,35,50,49,34,144,89,0,0,7,194,36,
96,72,8,46,19,66,20,224,126,50,15,34,6,137,47,0,81,114,111,117,116,101,32,19,66,20,224,126,50,15,
65,6,35,89,0,81,109,97,115,115,101,32,12,69,9,35,207,12,128,71,34,139,76,0,11,67,5,131,206,35,
49,89,126,50,0,0,10,67,36,225,25,124,50,72,37,0,12,3,95,51,88,87,6,150,47,37,0,105,11,3,
95,51,88,87,6,131,47,37,0,13,3,95,46,112,48,144,34,124,13,72,0,103,0,7,196,4,226,84,4,17,
16,70,80,244,143,57,67,192,47,13,34,126,50,47,139,0,10,68,80,243,142,20,47,129,50,0,9,198,12,243,
148,20,229,0,38,9,198,12,243,148,20,229,0,36,10,198,12,243,148,20,229,0,65,47,18,70,12,192,82,36,
225,84,49,55,35,34,13,50,6,122,47,0,14,69,5,34,83,20,224,13,34,124,88,13,50,0,14,3,95,48,
67,107,6,129,50,72,34,13,72,0,0,15,70,36,195,9,56,242,83,124,55,13,50,6,142,0,17,70,4,224,
76,101,50,83,119,50,35,55,13,89,124,89,0,0,15,70,80,129,82,21,48,64,47,13,34,132,88,13,0,13,
69,76,147,133,4,64,91,113,50,141,72,0,14,69,52,84,131,20,64,65,131,89,6,122,72,0,12,69,92,147,
135,20,64,58,124,68,72,0,12,69,64,147,135,20,64,48,124,68,72,0,14,69,24,244,141,36,64,83,135,65,
6,124,72,0,13,69,8,19,135,20,64,71,35,68,81,72,0,0,16,70,52,20,131,20,195,1,65,130,89,6,
122,55,13,0,0,9,198,88,84,141,60,229,0,66,21,72,52,17,1,28,20,195,5,32,65,35,72,13,81,6,
35,89,49,114,0,13,68,88,147,204,4,84,140,6,139,55,13,0,16,70,64,81,5,77,64,76,48,122,72,113,
89,47,118,0,14,70,12,244,144,61,32,76,49,135,48,34,118,0,0,12,67,84,229,15,4,129,50,108,117,0,
103,11,67,84,229,15,4,129,50,47,117,0,19,71,20,66,78,9,84,135,32,122,72,124,50,71,2,129,34,13,
0,18,72,12,128,82,16,243,142,5,144,91,130,72,13,50,6,141,0,0,28,69,76,131,213,48,64,91,117,72,
107,35,84,47,116,0,74,32,10,82,104,97,118,101,32,116,111,32,26,69,76,131,213,48,64,91,117,72,107,35,
84,124,47,0,78,82,104,97,118,101,32,105,116,32,21,69,76,131,213,48,64,91,117,72,13,84,0,35,77,81,
104,97,118,101,32,15,69,76,131,213,48,64,4,91,117,72,0,32,46,10,16,70,72,240,133,73,64,64,34,129,
71,6,131,47,13,0,16,70,88,83,148,85,32,64,84,122,50,47,6,146,13,0,13,69,52,20,129,84,64,65,
13,34,133,72,0,0,10,67,64,84,5,48,122,48,141,0,9,198,12,129,86,20,195,5,17,8,67,61,84,197,
137,88,0,10,67,60,180,129,139,49,34,13,0,17,70,20,228,197,52,35,5,126,50,89,6,126,65,71,118,0,
16,70,16,148,195,37,3,5,72,124,89,6,140,48,118,0,16,70,12,130,80,61,67,5,76,113,48,139,47,55,
141,0,6,195,60,65,128,13,6,195,57,148,197,13,6,195,21,129,64,13,0,19,71,40,84,149,76,19,5,52,
75,13,34,137,89,13,55,13,65,0,0,10,67,49,82,83,55,137,124,89,0,18,71,52,81,9,4,85,129,48,
65,122,72,124,6,132,84,118,0,15,3,226,136,158,124,50,83,6,124,50,113,47,37,0,0,15,69,72,17,129,
20,192,34,121,83,140,6,122,55,0,15,69,52,19,149,20,192,65,35,50,58,6,122,55,0,10,67,77,81,90,
89,137,113,88,0,12,68,25,81,71,60,83,58,141,81,139,0,23,73,5,81,205,20,229,1,80,147,206,133,81,
65,122,50,47,6,141,91,13,50,0,0,11,67,92,84,133,2,58,131,0,35,46,28,67,32,84,133,107,6,145,
15,13,50,72,15,86,6,143,0,82,97,110,100,32,116,104,101,114,101,32,12,68,21,134,15,56,122,49,89,126,
50,0,9,67,20,148,133,143,34,13,0,12,68,25,33,79,56,83,34,132,126,50,0,11,68,4,112,73,56,119,
81,122,50,0,16,3,226,137,160,50,126,47,6,132,49,58,118,47,117,0,0,12,68,81,37,68,100,47,34,137,
72,37,0,14,70,93,33,84,12,129,68,34,122,76,125,72,0,16,70,77,3,207,56,97,68,89,48,137,50,83,
122,72,0,17,70,76,80,207,56,65,68,89,13,49,126,50,72,125,72,0,12,68,72,84,12,100,34,113,48,55,
140,0,15,70,72,80,193,48,193,68,34,113,49,133,55,72,0,12,68,12,16,212,36,49,35,49,47,140,0,13,
68,4,212,12,100,35,65,48,55,124,0,32,0,19,71,36,212,5,72,97,67,80,124,65,48,6,131,83,122,49,
47,0,17,70,17,32,77,5,66,67,72,34,13,65,35,47,124,49,0,15,3,226,136,154,89,49,58,4,143,34,
6,137,47,0,0,13,68,52,20,137,60,65,130,34,124,139,0,103,17,66,48,16,55,119,107,142,13,0,81,106,
111,108,108,97,32,13,69,61,33,5,4,192,135,72,6,144,55,0,16,66,48,16,55,35,15,84,6,132,0,81,
118,105,101,32,6,194,48,16,13,42,9,66,48,16,4,55,35,0,46,18,66,40,80,90,13,47,122,65,0,81,
116,39,97,105,109,101,32,21,66,40,80,90,13,50,13,89,6,141,0,82,110,101,32,115,97,105,115,32,13,3,
95,49,57,50,6,140,50,47,132,50,0,0,9,198,28,243,9,5,66,0,17,12,68,76,147,79,56,89,140,65,
13,50,0,15,70,29,84,141,84,178,9,81,146,65,117,49,37,0,19,72,84,225,5,72,194,78,29,48,129,50,
72,114,55,124,68,88,0,10,67,36,67,25,140,72,55,124,0,6,195,5,2,64,13,11,3,95,49,56,6,141,
47,132,50,0,0,17,71,80,83,142,21,52,197,20,47,122,50,13,89,6,132,0,8,197,76,148,8,60,224,16,
11,67,21,130,84,122,81,88,124,47,0,10,67,21,98,84,122,84,113,47,0,14,69,8,21,13,4,224,71,35,
47,65,35,50,0,16,3,226,151,143,71,55,4,35,49,89,6,131,49,118,0,0,18,71,77,68,133,4,208,133,
16,89,47,34,132,65,71,122,72,0,16,71,12,245,78,80,84,133,16,49,138,50,47,114,72,0,0,12,68,8,
85,23,76,71,122,47,117,89,0,6,195,21,36,194,13,0,16,70,28,83,210,28,147,129,75,135,6,75,132,50,
13,0,9,198,32,243,143,49,83,21,67,0,13,68,44,80,78,84,49,124,6,121,50,137,0,18,70,81,34,66,
84,224,76,47,34,140,71,6,57,137,50,118,0,15,70,80,81,84,61,64,76,47,132,108,139,47,118,0,15,70,
64,20,133,57,64,76,48,114,122,50,47,118,0,0,13,70,48,242,78,56,148,128,55,129,50,144,0,16,71,29,
33,69,57,114,67,32,81,34,122,50,124,76,0,14,70,76,243,4,36,84,128,89,139,55,75,114,0,14,70,64,
147,206,20,84,128,48,147,50,6,145,0,13,70,52,19,136,61,84,128,65,35,50,149,0,16,70,36,224,207,52,
147,135,124,50,49,129,65,124,68,0,9,198,32,245,197,88,84,128,66,14,70,28,192,67,36,84,128,81,55,141,
91,114,0,14,70,25,35,212,32,84,128,83,34,126,87,114,0,15,70,4,195,15,88,84,128,133,55,6,139,84,
114,0,11,3,226,136,146,65,140,50,13,89,0,0,11,68,32,21,133,76,107,35,84,88,0,12,68,88,83,149,
76,84,132,50,13,89,0,14,70,76,85,133,72,19,0,89,122,84,34,118,0,13,3,95,49,49,124,55,6,122,
84,13,50,0,0,16,70,12,20,143,48,147,133,49,35,34,13,55,140,50,0,11,67,60,18,21,139,6,121,107,
137,0,17,70,52,81,9,12,147,133,65,122,72,13,89,13,50,0,103,15,70,52,81,9,12,147,133,65,122,72,
89,13,50,0,16,70,44,84,143,76,83,133,49,122,34,13,89,132,50,0,9,198,36,225,5,24,147,133,67,18,
71,28,83,148,48,83,69,56,75,122,50,47,118,65,13,50,0,16,70,24,83,73,56,147,133,83,122,65,13,50,
124,50,0,11,68,12,81,1,72,89,132,72,114,0,10,3,95,49,48,47,6,122,50,0,0,12,70,40,16,209,
84,84,192,90,35,49,0,9,198,88,148,135,36,224,76,15,14,70,32,20,142,21,52,192,107,130,50,125,89,0,
14,70,12,128,83,76,148,192,76,35,89,37,0,103,13,70,12,128,83,76,148,192,91,35,89,37,0,13,3,95,
49,51,87,6,150,47,132,50,0,105,12,3,95,49,51,87,6,131,47,132,50,0,0,11,68,20,66,84,32,132,
72,124,87,0,18,71,21,21,73,88,240,193,48,113,49,58,124,84,13,49,118,0,10,199,12,19,143,56,144,193,
48,17,15,70,4,230,84,32,147,135,122,50,113,87,124,68,0,6,195,60,196,3,13,12,3,95,49,50,47,58,
6,122,55,84,0,0,13,69,20,194,74,4,128,113,55,140,75,13,0,12,68,16,84,133,44,72,122,34,124,49,
0,14,69,53,83,137,12,128,65,57,137,50,124,49,0,12,69,33,84,146,4,128,107,13,34,121,0,13,69,28,
20,137,76,128,81,143,34,124,91,0,7,196,20,35,207,44,20,13,69,8,197,73,76,128,71,55,137,124,91,0,
12,201,4,99,210,20,209,78,80,147,206,66,13,3,95,49,53,83,6,124,83,47,132,50,0,15,4,95,99,121,
114,89,113,34,6,124,55,124,49,0,0,12,3,95,49,52,83,6,136,47,132,50,0,0,10,67,16,245,8,72,
129,87,0,76,18,67,92,149,8,58,2,124,86,86,115,0,34,81,116,104,101,32,10,67,92,149,8,58,124,86,
0,72,14,69,56,148,211,4,224,50,124,89,121,50,0,103,16,71,21,66,5,72,145,7,20,122,87,14,34,124,
75,0,14,69,80,19,80,60,224,47,35,65,48,126,50,0,12,68,76,48,76,100,89,49,141,55,124,0,18,71,
65,33,67,37,2,67,20,48,34,122,89,113,48,124,89,0,13,68,56,240,140,100,50,139,71,55,124,0,32,17,
71,20,229,15,85,32,71,20,126,50,108,117,34,121,90,0,16,3,95,49,55,89,6,13,84,13,50,47,132,50,
0,107,15,3,95,49,55,89,6,122,84,13,50,47,132,50,0,0,14,3,95,49,54,89,6,124,49,89,47,132,
50,0,0,12,69,56,144,200,60,192,50,124,49,118,0,13,69,16,19,137,76,128,72,141,50,124,91,0,22,73,
60,211,137,76,50,69,56,49,64,126,65,50,6,124,89,124,13,50,89,0,11,68,44,22,65,44,49,140,35,49,
0,21,73,12,243,69,85,4,1,56,49,64,49,129,65,6,129,48,13,50,89,0,0,16,67,52,19,153,65,122,
50,124,13,84,0,81,111,102,32,11,67,52,19,153,65,122,50,37,0,34,11,200,33,148,15,13,34,84,21,48,
16,19,72,24,21,143,85,34,84,21,48,83,141,84,14,34,113,47,89,0,20,72,5,32,200,36,209,68,21,48,
130,49,124,65,6,132,72,132,88,0,15,3,95,55,88,89,6,13,84,13,50,47,37,0,107,14,3,95,55,88,
89,6,122,84,13,50,47,37,0,0,18,72,44,132,149,76,128,200,21,96,49,34,137,89,76,122,83,0,15,69,
16,21,19,84,224,72,121,47,89,13,50,0,103,12,68,56,17,9,4,50,121,72,57,13,0,11,68,16,83,9,
4,72,132,55,144,0,13,69,4,68,137,4,224,141,72,34,144,50,0,12,68,21,32,83,20,113,34,141,89,0,
103,11,68,21,32,83,20,113,34,141,88,0,12,68,16,82,67,20,72,132,6,140,89,0,10,68,8,82,71,20,
71,141,90,0,6,195,52,245,4,13,0,20,71,76,182,82,60,50,197,80,89,49,6,140,34,4,126,49,124,47,
0,17,70,12,194,84,61,34,83,49,55,124,47,114,34,125,89,0,0,9,198,16,84,208,37,65,64,8,14,70,
48,17,137,81,65,64,55,119,83,132,47,0,15,70,92,80,147,37,65,64,58,122,71,89,140,47,0,15,70,84,
224,87,5,33,64,129,50,13,58,6,143,0,15,70,76,80,210,21,65,64,89,113,49,34,132,47,0,15,70,72,
148,15,77,65,64,34,113,48,126,89,47,0,16,70,72,84,208,37,65,64,34,122,89,48,124,47,0,103,15,70,
72,84,208,37,65,64,34,122,89,48,140,47,0,15,70,72,84,212,37,97,64,34,122,89,47,124,84,0,16,70,
72,84,208,37,65,64,34,122,89,48,113,47,0,103,15,70,65,33,76,5,65,64,48,34,122,55,13,47,0,9,
198,64,194,67,5,65,64,66,10,198,52,19,132,5,65,64,66,36,15,70,36,228,208,37,33,64,124,50,89,48,
6,148,0,9,198,25,34,71,5,65,64,16,16,70,20,229,5,57,65,64,126,50,47,6,126,50,47,0,16,70,
20,224,204,5,97,64,126,50,49,55,141,84,0,103,16,70,16,85,5,57,65,64,72,141,47,6,126,50,47,0,
16,70,16,85,1,57,65,64,72,141,47,6,126,50,47,0,16,70,12,243,131,5,97,64,49,126,50,49,6,141,
84,0,15,70,12,243,12,5,65,64,49,139,55,141,47,0,103,17,70,12,83,5,9,33,64,89,122,55,6,122,
71,34,13,0,14,70,8,150,129,73,33,64,71,125,88,6,130,0,9,198,4,230,77,61,33,64,67,0,15,70,
4,65,76,4,145,5,35,72,13,55,141,72,0,9,198,77,64,77,64,81,5,66,16,70,72,83,133,28,17,5,
34,122,50,13,81,141,72,0,9,198,48,83,79,56,17,5,67,9,67,9,84,192,71,129,89,0,0,15,70,72,
18,77,20,229,0,34,141,65,13,50,47,0,11,200,32,19,2,21,33,9,21,32,15,20,71,16,148,12,60,208,
67,100,72,124,48,55,6,139,65,13,89,37,0,19,72,12,128,78,16,83,9,21,32,91,35,50,72,13,55,6,
145,0,19,71,5,85,15,13,32,67,100,133,47,6,126,49,34,13,89,37,0,10,3,95,49,111,83,6,150,0,
105,9,3,95,49,111,83,6,131,0,0,16,70,8,83,215,84,193,128,71,141,13,58,117,55,83,0,0,16,70,
8,80,193,85,49,64,71,124,49,129,88,0,66,8,19,72,72,84,212,5,84,129,57,64,34,122,89,47,34,126,
50,47,0,9,198,24,21,9,29,81,64,17,23,72,16,81,146,4,115,69,57,64,72,132,83,34,35,81,65,6,
122,50,47,0,135,13,70,12,240,203,21,145,64,49,126,49,140,0,9,198,8,20,143,69,81,64,17,9,198,4,
69,133,73,49,64,66,0,9,67,81,165,64,47,89,137,0,9,198,76,128,78,28,128,73,66,9,67,76,149,5,
89,140,47,0,18,70,40,84,143,8,240,77,75,122,34,13,71,6,139,13,65,0,11,3,224,165,164,72,129,50,
72,119,0,0,6,195,4,116,12,13,0,11,68,52,144,193,32,65,140,49,13,0,8,197,76,128,90,4,208,17,
12,68,32,243,193,32,107,6,137,6,121,0,0,13,69,64,83,131,36,192,48,122,50,89,118,0,0,16,70,72,
84,1,73,65,69,34,122,48,130,47,6,141,0,16,70,56,81,204,36,113,69,50,122,81,55,124,90,141,0,10,
67,16,245,133,72,139,84,0,38,10,67,16,245,133,72,139,84,0,36,13,4,95,97,99,117,119,49,57,6,137,
47,0,0,7,196,44,146,5,36,66,10,68,20,20,140,100,131,55,124,0,10,3,95,50,111,89,6,122,49,0,
11,4,95,99,114,108,49,6,131,55,0,0,14,70,29,82,78,56,84,211,81,124,50,124,89,0,10,67,45,34,
83,49,34,124,89,0,11,68,37,50,65,32,140,88,6,147,0,11,68,72,18,129,32,34,121,75,121,0,16,69,
21,133,18,20,208,122,49,89,47,34,6,132,65,0,0,0,14,67,52,134,128,65,122,81,13,107,131,47,89,0,
0,10,199,64,81,5,77,68,137,4,17,19,71,52,16,193,16,19,73,4,65,35,49,13,72,6,141,65,144,0,
16,70,16,81,137,12,149,0,72,122,83,113,89,124,47,0,4,193,160,43,0,12,68,64,84,143,80,48,122,34,
6,139,0,9,198,61,85,3,72,244,0,65,0,8,197,28,20,146,61,64,17,15,70,12,240,85,80,131,210,49,
139,6,133,87,114,0,0,12,201,84,197,18,5,98,79,48,85,0,67,10,67,16,83,9,72,122,55,124,0,16,
3,226,150,160,71,55,6,35,49,89,49,58,6,143,0,0,9,198,36,228,212,20,17,0,8,16,70,8,20,133,
57,68,192,71,35,34,13,50,47,89,0,12,69,76,145,206,21,32,89,140,50,114,0,17,70,65,33,84,72,144,
76,48,34,132,47,34,6,140,118,0,20,71,36,225,140,84,83,154,4,124,50,83,55,137,6,122,50,88,13,0,
11,67,16,243,148,72,139,50,47,0,46,10,3,95,51,111,87,6,150,0,105,9,3,95,51,111,87,6,131,0,
8,4,95,35,114,100,72,0,0,15,70,76,83,129,80,244,128,89,122,50,13,47,114,0,14,70,61,4,15,76,
84,128,13,48,139,88,114,0,15,70,48,16,143,72,84,128,55,141,71,13,34,114,0,9,198,37,3,1,100,84,
128,20,0,0,10,68,61,85,5,72,138,47,114,0,15,70,40,82,15,88,18,0,75,13,107,139,84,13,0,13,
3,95,50,88,47,58,6,122,50,108,37,0,0,12,69,92,149,8,21,32,58,124,86,114,0,13,69,76,243,4,
21,32,89,121,72,114,0,103,13,69,76,243,4,21,32,89,126,55,72,114,0,9,198,60,211,137,9,84,192,65,
16,70,52,147,137,9,84,192,65,124,50,124,71,129,89,0,15,70,36,229,5,73,96,76,124,50,47,114,84,118,
0,10,198,28,241,4,21,52,192,103,16,20,73,8,83,12,100,16,200,36,225,192,71,122,55,124,141,49,124,68,
0,0,10,199,16,240,212,72,147,129,48,15,0,16,70,52,144,200,36,112,78,65,124,91,124,81,13,50,0,15,
69,8,241,207,81,192,98,111,103,111,116,97,0,29,16,69,8,83,135,4,192,71,4,122,50,81,6,133,55,0,
20,72,72,80,201,65,35,195,4,192,34,113,89,124,48,34,13,49,118,0,0,12,68,5,4,143,56,141,48,34,
13,50,0,0,14,69,9,33,77,20,224,71,34,122,65,13,50,0,13,69,92,83,23,100,224,58,122,55,124,50,
0,14,69,89,83,3,4,224,84,129,55,49,13,50,0,11,68,80,241,1,100,47,13,72,141,0,13,3,226,136,
171,124,50,47,124,81,34,118,0,0,19,8,112,105,195,177,97,116,97,115,48,132,67,6,35,47,119,88,0,12,
201,24,244,133,76,131,210,80,83,128,66,0,13,69,77,147,66,60,192,89,124,65,71,118,0,15,70,72,84,212,
25,83,0,34,122,89,47,83,118,0,0,21,72,65,149,8,4,115,210,5,48,48,140,87,6,35,81,13,34,13,
89,0,20,71,25,35,206,81,0,71,20,83,34,6,129,50,47,48,4,141,75,0,6,195,4,16,64,13,0,12,
68,76,147,131,20,89,124,50,89,0,8,11,68,4,194,67,20,35,55,124,89,0,14,68,44,244,133,4,49,114,
34,6,132,13,0,103,13,68,44,244,133,4,49,134,34,6,132,13,0,11,68,13,84,147,20,49,151,89,0,105,
10,68,13,84,147,20,49,131,89,0,13,68,8,192,83,20,71,55,121,88,6,141,0,12,68,5,35,205,4,119,
34,139,65,13,0,0,10,67,72,84,15,34,132,48,139,0,0,14,70,92,146,77,61,65,64,58,132,65,139,47,
0,14,70,52,17,213,37,33,64,65,13,81,58,148,0,16,7,104,97,119,97,105,39,105,107,13,58,6,140,132,
0,15,70,61,85,12,37,97,64,138,47,55,6,124,84,0,13,70,56,245,200,21,33,64,50,139,58,143,0,9,
198,28,20,143,81,65,64,17,17,70,21,129,67,85,65,64,122,49,89,113,49,57,137,47,0,16,70,13,33,77,
5,65,64,49,34,132,65,141,47,0,103,14,70,12,83,147,85,33,64,89,122,50,91,114,0,14,70,12,21,137,
5,33,64,49,35,84,124,130,0,10,67,12,19,22,49,35,84,0,103,9,67,12,19,22,49,121,84,0,14,70,
5,84,212,21,33,64,133,89,47,6,145,0,0,9,67,4,50,25,141,49,37,0,0,11,68,40,244,135,20,107,
136,107,141,0,11,68,20,147,165,56,122,50,132,50,0,11,200,52,18,78,80,18,78,21,32,66,10,68,24,244,
131,20,83,136,89,0,11,68,12,19,143,20,49,13,50,137,0,11,68,4,226,83,20,35,50,124,89,0,19,72,
4,69,133,73,66,83,21,32,35,72,84,114,47,140,88,114,0,10,3,95,53,111,83,6,124,83,0,11,3,95,
63,63,89,124,65,71,118,0,0,13,67,49,65,0,55,124,65,113,47,113,72,0,0,14,70,80,129,82,21,49,
64,47,13,34,132,88,0,16,70,20,195,213,37,49,64,122,55,137,58,6,132,88,0,9,198,77,84,18,37,49,
64,66,9,198,77,81,134,85,49,64,66,21,72,76,80,207,56,67,69,57,64,89,13,49,126,50,72,65,13,50,
47,0,14,70,12,129,77,37,49,64,91,13,65,132,88,0,5,194,49,64,24,11,66,53,32,65,124,89,47,114,
0,24,0,10,67,64,21,5,48,35,108,141,0,10,67,48,21,129,55,121,84,13,0,9,67,24,85,5,83,141,
47,0,10,67,16,85,129,72,132,84,13,0,11,3,95,52,88,83,6,136,47,37,0,0,10,68,37,51,1,100,
140,55,13,0,9,198,12,240,84,80,18,76,18,0,23,67,32,244,147,135,6,72,131,84,88,0,81,100,39,111,
101,117,118,114,101,115,32,10,67,21,35,211,144,34,126,89,0,0,13,68,64,16,140,60,48,121,71,55,139,0,
103,0,19,67,32,21,133,107,119,84,50,126,47,0,35,49,81,110,111,116,32,19,67,32,21,133,107,119,84,50,
4,126,47,0,35,81,110,111,116,32,21,67,32,21,133,2,107,119,84,2,71,124,50,0,35,81,98,101,101,110,
32,13,67,32,21,133,107,35,84,0,35,46,72,10,10,67,48,149,133,55,124,84,0,36,10,67,48,149,133,55,
140,84,0,47,11,67,8,85,1,71,141,47,13,0,103,10,67,8,85,1,71,132,47,13,0,10,67,4,229,5,
35,50,47,132,0,0,14,70,40,84,146,5,33,0,75,114,34,130,72,0,9,198,37,48,193,72,147,212,66,13,
68,56,19,205,36,50,141,6,139,65,37,0,11,68,76,147,129,36,89,140,50,140,0,9,198,32,20,150,5,33,
0,16,9,4,95,35,115,116,89,47,0,0,11,68,13,40,77,20,49,34,122,65,0,0,10,66,28,240,4,81,
139,0,10,46,15,66,48,80,55,132,6,35,50,0,81,97,110,110,32,15,69,77,147,148,5,128,89,124,50,108,
35,49,89,0,9,66,48,80,55,13,23,0,46,16,69,12,243,150,21,128,49,126,50,84,6,122,49,89,0,18,
4,95,115,117,98,89,4,129,71,89,49,34,124,48,47,15,0,0,21,72,72,130,78,60,49,82,61,48,34,140,
50,6,126,89,13,34,13,89,0,14,70,52,19,77,61,66,0,65,35,65,13,87,0,12,3,95,53,88,83,6,
124,83,47,37,0,0,25,67,53,84,212,65,4,129,89,47,35,84,47,116,0,35,82,104,97,118,101,32,116,111,
32,21,67,53,84,212,65,129,89,47,107,35,84,0,35,49,81,104,97,118,101,32,20,67,53,84,212,65,129,89,
47,119,84,0,35,65,81,104,97,118,101,32,6,195,53,84,212,32,16,71,29,82,76,48,21,77,20,81,132,57,
6,139,65,0,17,71,28,147,12,21,52,9,20,81,113,55,122,89,48,37,0,11,68,32,18,75,84,107,140,49,
137,0,17,71,25,34,67,5,52,197,20,83,34,124,49,119,89,141,0,10,67,5,67,208,119,47,126,48,0,0,
13,67,28,245,0,2,81,126,47,0,10,35,46,12,201,16,148,212,72,144,149,80,244,128,66,12,4,95,114,110,
103,34,6,124,68,81,0,0,12,197,12,19,142,61,64,103,66,32,46,10,16,70,52,148,129,8,83,0,65,124,
34,13,71,122,55,0,14,69,64,84,141,37,64,48,114,65,124,47,0,36,14,69,64,84,141,37,64,48,131,65,
124,47,0,47,15,70,56,21,21,72,19,0,50,35,76,13,34,118,0,15,69,12,21,133,5,64,49,35,84,124,
121,47,0,103,14,69,12,21,133,5,64,49,35,84,124,35,47,0,0,24,67,25,35,205,2,83,34,129,65,15,
58,6,124,76,0,8,81,119,104,105,99,104,32,23,67,25,35,205,2,83,34,129,65,15,58,6,143,0,8,81,
119,104,101,114,101,32,18,67,25,35,205,2,83,34,129,65,86,115,0,81,116,104,101,32,12,67,25,35,205,83,
34,129,65,0,103,72,11,67,25,35,205,83,34,126,65,0,72,17,70,80,83,133,72,145,133,47,122,50,114,34,
6,132,83,0,0,11,68,56,21,82,84,50,138,34,137,0,17,70,52,147,129,72,85,0,65,124,50,13,34,6,
122,47,0,12,69,32,82,70,21,32,107,122,83,114,0,12,69,28,81,90,21,32,81,132,88,114,0,9,198,21,
132,12,60,149,0,36,10,198,21,132,12,60,149,0,65,47,9,198,12,20,143,80,145,0,17,13,69,5,96,84,
5,32,35,84,119,47,130,0,19,72,4,208,129,77,48,68,61,32,119,65,71,35,89,13,72,114,0,0,10,67,
56,148,143,50,144,34,139,0,0,14,69,8,83,143,37,64,71,122,50,58,6,121,0,10,199,84,225,5,72,194,
78,28,65,15,70,77,65,78,12,147,0,89,47,122,50,89,118,0,16,69,52,147,149,21,64,65,124,50,57,137,
6,122,47,0,13,69,52,84,140,61,64,65,131,55,6,139,0,6,195,21,5,66,20,19,71,12,243,80,21,66,
78,28,49,13,65,48,6,132,47,124,68,0,12,201,12,192,78,16,84,212,36,225,64,66,13,69,4,35,1,85,
64,35,71,55,138,47,0,6,195,4,149,2,13,0,15,70,80,133,82,76,64,89,87,151,88,72,141,0,105,14,
70,80,133,82,76,64,89,87,131,88,72,141,0,6,195,60,83,64,13,13,3,95,54,88,89,6,124,49,89,47,
37,0,0,13,69,72,21,8,21,32,34,121,86,114,0,135,13,69,44,147,20,21,32,49,124,55,47,114,0,15,
70,28,245,82,52,19,132,81,146,65,121,50,72,0,12,69,16,144,80,21,32,72,140,48,114,0,11,69,4,85,
8,21,32,132,87,13,0,8,4,95,35,116,104,87,0,0,0,17,71,72,81,133,73,34,78,28,34,113,83,131,
34,124,68,0,0,14,7,116,104,101,114,101,39,100,2,86,143,72,0,15,70,32,243,69,64,17,197,107,139,65,
48,141,75,0,0,0,16,70,76,144,133,48,149,83,89,113,71,141,55,144,89,0,22,72,65,33,70,21,32,66,
49,144,48,34,122,83,14,34,13,71,55,124,0,32,0,0,21,73,12,243,142,20,53,9,13,85,0,49,13,50,
122,47,113,49,13,47,0,23,73,80,83,5,64,131,206,37,53,0,47,13,55,6,122,83,13,50,124,89,47,0,
10,67,5,4,128,35,48,34,13,0,0,12,68,56,17,10,4,50,121,72,57,13,0,11,68,52,242,82,4,65,
142,34,13,0,15,69,48,244,133,57,160,55,126,34,13,50,47,89,0,13,202,36,229,5,73,35,199,5,67,210,
100,67,16,70,28,84,212,4,197,0,81,13,91,47,121,55,47,0,11,68,4,112,80,20,119,81,141,48,0,0,
14,69,80,84,133,76,16,47,13,34,132,89,13,0,15,69,4,197,21,72,16,133,55,47,6,146,34,13,0,13,
69,76,80,78,12,80,89,141,126,50,89,0,12,69,29,82,78,20,16,81,124,50,37,0,13,69,16,83,135,84,
80,72,122,50,81,37,0,0,12,68,72,83,9,12,34,122,55,124,49,0,0,11,67,80,22,25,47,35,49,89,
37,0,14,69,32,84,143,36,48,107,113,34,139,124,49,0,7,195,48,36,192,13,42,11,67,48,36,192,48,138,
50,72,88,0,0,17,71,88,246,69,85,34,83,52,84,142,114,124,88,13,65,0,15,70,76,84,135,20,19,148,
89,130,75,13,50,47,0,16,70,61,4,15,56,83,148,13,48,139,50,13,50,47,0,12,68,5,33,78,4,119,
34,132,50,13,0,0,8,197,88,148,137,48,80,16,8,197,16,240,201,48,80,16,13,69,76,51,5,72,16,89,
49,55,144,34,0,8,197,76,19,9,88,16,17,13,69,72,84,193,48,80,34,132,89,141,55,0,14,69,48,240,
193,48,80,55,139,49,6,120,55,0,8,197,28,19,5,56,16,17,13,69,24,16,193,16,80,83,13,89,121,72,
0,13,69,16,80,193,16,80,72,122,49,141,72,0,12,69,5,3,133,60,16,35,48,50,144,0,0,14,70,12,
243,142,20,195,0,49,126,50,13,55,0,15,70,65,33,67,37,49,64,48,34,113,89,140,89,0,21,73,12,84,
148,36,98,67,5,65,64,89,114,47,124,83,124,49,13,47,0,0,9,67,104,241,64,88,139,37,0,8,197,5,
32,66,36,48,65,10,3,95,56,88,6,141,47,37,0,0,19,72,48,84,18,20,50,1,84,224,55,122,48,34,
13,49,133,50,0,19,71,12,243,150,60,197,84,20,49,126,50,84,13,55,6,137,47,0,16,71,12,131,195,60,
192,84,20,76,126,49,55,13,47,0,16,71,5,4,5,48,192,84,20,119,48,122,55,13,47,0,18,71,4,197,
5,72,224,84,20,133,55,47,114,50,141,47,0,36,19,71,4,197,5,72,224,84,20,133,55,47,6,131,50,13,
47,0,46,0,11,67,32,84,147,107,131,88,0,72,10,13,5,100,111,110,39,116,72,139,50,47,0,32,14,69,
80,18,80,20,144,47,4,140,48,6,141,0,15,69,53,84,197,84,208,65,57,137,88,6,144,65,0,15,69,8,
146,201,56,144,71,124,49,6,132,50,37,0,0,15,69,72,81,140,85,128,34,132,83,55,129,49,89,0,15,69,
72,81,140,21,128,34,132,83,55,122,49,89,0,0,15,69,52,242,137,80,240,65,139,107,6,132,47,139,0,8,
197,21,50,201,52,240,65,0,0,0,9,66,52,80,65,132,0,50,49,9,66,52,80,4,65,132,0,46,11,200,
4,229,9,12,132,137,77,64,65,0,19,72,92,147,4,21,35,133,77,48,58,124,55,72,114,50,13,89,0,12,
69,32,18,82,16,240,107,143,72,137,0,12,3,95,57,88,50,6,140,50,47,37,0,0,6,195,41,84,212,32,
14,70,32,20,146,36,85,0,107,35,34,144,47,0,16,70,88,144,146,5,67,192,84,113,71,34,121,47,139,0,
16,70,56,81,204,20,53,0,50,113,81,55,122,49,47,0,8,67,52,82,0,65,122,0,15,70,13,35,207,44,
81,0,49,34,117,49,124,72,0,0,0,12,68,13,148,149,76,89,140,34,13,89,0,8,197,61,85,19,21,64,
65,13,68,60,20,197,76,139,6,141,89,132,88,0,16,70,8,148,5,16,19,0,71,140,48,6,132,72,118,0,
0,26,67,52,22,64,4,65,141,107,6,35,84,47,116,0,32,49,82,104,97,118,101,32,116,111,32,19,67,52,
22,64,65,141,107,119,84,0,35,77,81,104,97,118,101,32,10,67,52,22,64,65,141,0,32,10,11,67,92,22,
25,58,35,49,89,37,0,0,13,69,21,131,79,61,32,122,49,89,65,146,0,16,70,12,244,9,48,245,0,49,
139,48,140,55,13,47,0,0,0,15,69,92,130,76,77,64,58,4,140,55,89,47,0,8,11,68,76,16,200,76,
89,35,49,89,0,12,68,32,17,5,76,107,141,72,132,88,0,8,197,104,80,76,61,64,16,15,70,72,80,201,
80,19,0,34,113,89,140,47,118,0,13,69,64,20,146,61,64,48,35,34,13,47,0,14,69,20,194,67,37,64,
113,55,124,89,113,47,0,8,197,5,34,71,33,64,17,11,3,95,63,65,55,4,122,47,114,0,0,12,68,72,
18,137,88,34,121,75,132,84,0,18,71,48,193,87,20,195,25,56,55,117,58,6,122,55,124,50,0,22,68,36,
229,5,72,124,50,47,114,15,6,141,55,144,0,81,97,108,105,97,32,0,12,69,21,53,8,21,32,122,89,47,
114,0,14,69,21,129,84,21,32,122,49,89,124,47,114,0,13,69,52,148,212,21,32,65,124,89,47,114,0,16,
70,16,83,79,48,148,200,72,113,65,126,55,124,91,0,0,20,72,16,81,137,56,149,9,88,80,72,113,83,124,
50,113,47,124,84,0,13,69,5,98,65,73,144,141,84,144,34,37,0,12,4,95,52,48,111,83,6,136,47,144,
0,0,14,69,88,244,148,21,128,84,135,108,122,49,89,0,8,197,88,84,148,21,128,18,0,11,68,4,20,143,
56,143,34,13,50,0,10,67,80,16,149,47,35,71,137,0,0,9,198,92,245,76,17,53,0,76,9,67,81,84,
200,47,117,91,0,19,71,21,132,5,73,66,83,20,122,49,89,48,114,47,6,132,88,0,12,68,12,20,18,36,
49,119,48,34,132,0,19,4,95,115,117,112,89,4,137,48,114,89,49,34,124,48,47,15,0,0,13,4,95,115,
116,107,89,47,34,6,139,49,0,0,17,70,80,241,197,80,129,82,47,13,81,122,86,114,0,74,10,10,198,52,
18,193,77,48,82,17,16,11,200,80,132,143,84,114,15,85,64,66,11,200,80,129,82,20,16,143,85,64,67,14,
70,76,131,213,48,65,82,91,139,55,72,114,0,9,198,76,83,69,77,65,82,17,15,71,72,145,200,80,83,213,
76,34,140,76,13,89,0,21,72,74,36,201,77,64,78,12,80,34,141,88,124,89,47,6,153,50,89,0,15,70,
52,20,129,84,65,82,65,13,34,133,72,114,0,0,19,66,36,224,124,50,119,15,34,6,139,0,82,97,32,114,
111,119,32,20,66,36,224,124,50,15,58,124,76,0,74,8,81,119,104,105,99,104,32,15,66,36,224,2,124,50,
86,115,0,81,116,104,101,32,11,66,36,224,2,124,50,0,9,46,34,18,72,12,130,86,4,196,143,85,48,91,
124,84,118,34,13,89,0,5,194,56,64,46,9,3,226,153,175,91,130,48,0,0,10,67,72,81,15,34,132,72,
137,0,10,199,4,69,133,73,50,84,100,66,6,195,65,48,64,13,6,195,53,144,64,13,0,12,68,32,21,143,
12,107,35,84,13,49,0,10,3,226,153,173,83,55,35,47,0,0,19,71,16,243,129,80,83,12,60,72,126,50,
13,47,6,122,55,139,0,10,67,28,20,153,81,35,34,37,0,10,199,48,16,143,72,147,213,76,17,20,71,12,
243,148,72,19,20,60,49,13,50,47,34,6,35,55,47,139,0,0,9,198,85,5,9,28,133,0,66,16,70,13,
84,146,20,229,0,49,6,131,13,50,47,0,103,0,11,69,100,245,78,28,80,57,129,68,0,8,197,56,144,207,
48,80,66,14,69,24,83,9,64,80,83,125,55,132,48,141,0,13,69,4,225,18,20,16,35,50,72,34,144,0,
15,69,76,18,1,72,16,89,119,107,35,34,13,0,103,8,197,76,18,1,72,16,17,14,69,72,80,201,64,80,
34,122,89,113,48,132,0,14,69,57,80,78,12,80,50,137,126,50,89,0,103,13,69,28,83,143,52,80,75,132,
50,139,65,0,15,69,24,81,15,72,16,83,113,72,6,136,34,13,0,12,69,12,243,77,36,80,49,126,65,124,
0,0,0,27,68,92,245,76,16,58,117,72,107,35,84,47,116,0,74,32,10,82,104,97,118,101,32,116,111,32,
21,68,92,245,76,16,58,117,72,107,35,84,0,35,49,81,104,97,118,101,32,22,68,92,245,76,16,58,2,117,
72,107,2,119,84,0,35,81,104,97,118,101,32,10,196,92,245,76,16,76,32,46,10,10,67,80,145,25,47,140,
72,37,0,10,67,48,147,25,55,124,55,37,0,0,9,66,61,32,135,0,72,8,46,18,72,76,132,133,88,84,
15,73,64,91,34,132,84,48,136,47,0,13,68,104,80,146,4,88,132,71,34,13,0,103,12,68,77,82,84,20,
89,58,132,47,0,47,11,67,61,129,78,126,49,89,13,50,0,12,68,20,51,204,20,124,49,6,139,55,0,0,
8,197,24,16,201,48,80,16,15,69,8,84,201,16,80,71,124,89,140,72,0,74,10,8,197,76,20,137,76,16,
17,14,69,32,80,193,80,80,107,122,49,13,47,141,0,13,69,16,20,8,56,80,72,35,83,50,37,0,13,69,
12,80,201,48,80,89,122,89,132,55,0,14,69,88,17,201,56,16,84,13,75,140,50,13,0,8,197,85,1,1,
80,80,36,9,197,85,1,1,80,80,65,47,14,69,76,243,21,80,80,89,126,55,57,137,47,0,13,69,76,81,
1,80,80,89,113,72,141,47,0,8,197,72,245,1,80,80,66,15,69,72,81,201,56,16,34,125,75,132,50,13,
0,103,13,69,72,81,193,48,80,34,113,81,141,55,0,13,69,56,81,193,80,80,50,113,81,141,47,0,13,69,
48,145,193,80,80,55,132,81,141,47,0,14,69,13,84,129,80,80,49,57,146,34,141,47,0,15,69,12,194,67,
32,80,49,55,132,91,6,141,0,103,13,69,12,194,67,32,80,49,55,132,91,141,0,0,20,70,37,53,1,56,
37,76,4,124,89,47,4,35,50,71,6,117,55,0,12,201,12,243,148,72,245,133,73,54,64,65,10,67,5,149,
72,119,57,6,13,0,0,13,5,104,101,39,108,108,107,132,55,0,72,32,15,70,76,19,131,32,86,128,89,35,
50,76,122,88,0,9,67,4,70,133,35,72,88,0,0,16,6,104,97,115,110,39,116,107,35,88,14,50,47,0,
35,16,6,115,104,97,110,39,116,4,91,121,50,47,0,32,10,13,68,16,243,2,100,72,139,55,71,37,0,103,
19,71,5,2,18,60,66,84,20,35,83,34,13,72,6,140,47,37,0,11,68,16,128,66,36,72,121,71,37,0,
17,71,76,245,78,16,34,84,20,89,138,50,72,71,140,47,0,11,68,72,16,130,36,34,35,71,140,0,19,71,
64,85,18,60,193,85,52,48,13,47,34,139,55,132,13,65,0,11,68,24,145,82,100,83,148,34,124,0,19,71,
21,133,18,4,66,84,20,122,49,89,47,34,13,72,140,47,0,11,199,12,243,80,61,50,84,20,103,66,0,15,
7,116,104,101,121,39,108,108,86,141,55,0,72,32,16,4,95,115,109,99,89,65,6,133,55,49,4,35,48,0,
0,0,10,68,53,148,146,32,65,151,0,105,9,68,53,148,146,32,65,131,0,0,16,70,60,33,76,37,50,192,
126,71,13,55,113,89,49,0,0,8,67,61,82,64,58,132,0,10,68,36,227,133,72,124,50,114,0,10,67,29,
82,64,81,137,37,0,47,0,12,68,80,149,21,76,47,140,47,13,89,0,20,73,4,192,149,69,81,82,69,81,
64,35,55,71,13,49,131,49,37,0,13,68,80,22,9,76,47,35,49,89,37,88,0,9,198,61,85,2,85,36,
212,65,15,70,36,208,71,21,38,64,124,65,124,75,34,37,0,12,68,24,85,21,76,83,132,47,13,89,0,9,
198,24,84,146,5,34,64,17,15,70,12,130,65,57,66,64,49,57,121,50,47,37,0,16,70,4,230,9,21,70,
64,35,68,88,6,147,47,37,0,16,70,4,34,76,37,70,64,119,71,124,55,13,47,37,0,15,67,16,84,20,
72,113,48,130,47,65,13,50,47,0,0,14,68,76,128,76,80,4,91,35,55,47,0,32,46,10,67,52,243,153,
65,129,50,124,0,0,18,70,77,83,65,81,32,78,89,137,65,6,121,47,34,13,50,0,16,70,76,243,9,12,
149,0,89,13,55,124,89,113,47,0,16,70,52,83,1,52,81,0,65,122,55,13,65,122,72,0,16,71,12,130,
72,84,18,21,4,76,113,58,121,58,13,0,0,11,68,80,21,1,72,47,121,47,114,0,11,68,72,17,1,72,
34,141,72,130,0,11,68,48,149,5,72,55,132,47,114,0,12,68,36,225,133,72,124,50,83,6,131,0,13,5,
99,39,109,111,110,49,13,65,126,50,0,0,12,68,4,225,5,76,35,50,72,132,88,0,10,4,95,35,110,100,
13,50,72,0,0,14,68,21,128,76,80,122,81,88,6,126,55,47,0,0,11,68,100,17,83,84,57,141,89,137,
0,18,70,9,80,200,4,224,78,71,57,137,49,6,35,50,13,50,0,12,200,81,32,78,76,52,137,65,64,65,
47,13,70,65,54,67,32,81,0,89,140,49,72,0,5,194,61,48,13,11,4,95,98,97,114,10,71,6,130,0,
19,4,95,99,105,114,89,6,131,49,129,65,83,55,4,122,49,89,0,4,193,172,43,0,9,67,36,19,128,132,
13,50,0,23,67,8,243,128,71,126,50,15,84,142,6,121,90,0,81,118,111,121,97,103,101,32,0,6,195,61,
54,0,13,0,16,70,21,97,82,100,243,133,122,84,34,124,58,128,50,0,16,70,52,17,5,48,147,133,65,35,
72,13,55,113,50,0,15,69,28,64,78,76,176,81,14,72,35,50,89,49,0,15,70,5,1,78,56,147,133,35,
48,13,50,140,50,0,16,70,88,20,197,48,147,133,84,35,89,13,55,132,50,0,8,197,32,148,8,61,0,18,
13,69,32,84,133,80,240,107,145,6,47,137,0,0,17,70,92,128,84,21,97,82,58,128,47,122,84,114,0,66,
8,14,70,77,84,16,48,145,82,89,13,48,55,148,0,9,198,52,244,133,61,97,82,66,15,70,52,19,149,21,
97,82,65,13,50,137,84,114,0,15,70,52,19,133,85,97,82,65,13,50,137,84,114,0,9,198,52,19,9,56,
113,82,17,13,4,95,48,77,50,65,6,124,55,144,50,0,0,17,71,64,243,80,4,67,213,72,48,126,65,48,
119,72,136,0,14,69,92,20,193,8,144,58,119,89,121,71,37,0,12,68,61,34,79,56,126,34,6,147,50,0,
21,72,36,212,5,72,21,9,88,80,124,65,48,6,122,34,13,47,124,84,0,11,200,16,84,143,28,21,9,88,
80,66,21,67,13,83,64,49,117,65,55,6,138,72,37,0,81,108,97,117,100,101,32,13,4,95,48,77,51,71,
6,124,55,144,50,0,0,18,71,20,116,133,28,147,213,76,124,81,34,6,132,75,13,89,0,12,68,12,19,69,
60,49,35,65,124,139,0,24,73,4,36,129,12,17,1,9,32,64,35,71,34,13,49,13,72,6,35,71,34,13,
0,0,8,197,4,208,78,16,240,17,15,69,16,144,66,48,240,72,132,6,121,71,55,139,0,14,4,95,48,77,
49,87,6,138,88,13,50,72,0,0,10,199,52,19,135,4,225,83,20,65,10,199,16,148,195,61,84,147,20,65,
18,71,8,243,15,28,225,83,20,71,126,55,13,50,6,141,88,0,0,15,69,80,35,9,76,144,47,14,71,55,
132,89,37,0,19,72,65,54,67,32,144,84,73,144,89,140,49,6,147,47,34,124,0,8,67,52,148,128,65,145,
0,0,16,70,65,35,199,20,230,64,48,34,126,75,13,50,37,0,0,11,67,60,227,25,139,50,55,37,0,40,
17,70,76,85,133,72,83,25,89,113,84,6,145,55,124,0,32,12,68,56,18,197,16,50,141,49,125,72,0,17,
71,52,19,135,21,67,213,80,65,126,50,90,47,6,137,0,10,199,48,245,68,52,245,84,32,15,10,199,28,240,
76,52,245,84,32,15,0,12,67,61,97,82,139,84,114,0,72,10,46,11,68,40,19,73,20,75,141,65,37,0,
11,67,49,99,214,55,14,84,126,84,0,9,198,92,81,75,20,225,0,66,11,68,48,83,77,20,55,122,65,37,
0,10,68,32,243,13,20,107,139,65,0,0,10,67,56,244,128,50,135,0,8,46,18,67,24,244,128,83,135,58,
128,50,0,66,49,81,111,110,101,32,23,67,24,244,128,83,114,13,15,58,6,140,55,0,82,97,32,119,104,105,
108,101,32,16,67,24,244,128,83,114,86,115,0,34,81,116,104,101,32,15,67,24,244,128,83,114,13,50,0,34,
81,97,110,32,13,67,24,244,128,83,114,13,0,34,81,97,32,9,67,24,244,128,83,135,0,72,20,72,72,80,
207,53,1,78,76,80,34,122,49,13,65,48,122,50,89,0,10,67,36,225,15,124,50,72,139,0,20,72,12,243,
80,72,243,73,76,80,49,126,65,48,34,13,65,140,88,0,0,15,70,8,244,215,20,195,0,71,126,88,58,122,
55,0,0,18,70,100,244,197,52,149,5,57,139,89,6,122,65,13,47,37,0,10,67,72,83,25,34,113,55,140,
0,16,70,64,20,129,76,149,5,48,35,34,13,89,140,47,0,9,198,60,33,21,72,21,5,16,17,70,52,241,
5,72,21,5,65,126,72,13,34,141,47,0,36,9,198,48,149,5,72,21,5,16,18,70,29,32,68,84,21,5,
81,34,35,72,57,137,141,47,0,36,9,198,29,32,68,84,21,5,16,9,198,16,83,9,12,21,5,16,10,67,
8,83,25,71,113,55,140,0,9,198,4,229,9,16,245,5,65,0,11,68,44,21,9,20,49,141,47,37,0,11,
68,80,84,5,20,47,132,48,132,0,17,70,52,20,212,60,67,206,65,35,89,47,13,72,126,50,0,24,74,12,
148,131,84,209,133,72,83,131,20,89,131,49,6,129,65,83,34,13,50,89,0,0,14,69,32,82,193,80,80,107,
122,49,13,47,141,0,13,69,8,160,82,56,80,71,57,130,50,13,0,20,72,21,146,129,24,160,76,48,16,141,
57,119,83,57,35,47,55,119,0,16,70,48,147,69,72,144,203,55,124,65,13,34,124,49,0,10,67,5,53,83,
141,89,13,89,0,6,195,65,53,64,13,14,4,95,108,105,103,55,4,124,81,119,76,13,0,0,16,70,72,82,
78,32,243,4,34,140,50,107,139,55,72,0,16,70,72,81,201,56,19,4,34,122,75,124,50,118,72,0,31,76,
88,145,5,60,51,206,24,84,133,56,49,64,84,6,124,72,132,139,15,49,6,126,50,83,34,13,50,89,0,0,
16,5,105,115,110,39,116,4,124,88,13,50,47,0,35,10,17,70,40,147,69,56,86,128,107,124,65,6,122,50,
122,88,0,11,68,56,145,197,48,50,140,75,118,0,11,68,12,80,201,48,89,122,89,118,0,12,68,80,146,193,
48,47,113,49,121,55,0,11,68,80,18,197,48,47,35,49,118,0,11,68,8,17,197,48,71,141,81,118,0,0,
18,71,72,21,9,60,224,76,20,34,35,91,13,50,6,35,55,0,11,68,29,80,195,36,81,137,76,37,0,0,
14,69,40,16,207,8,144,75,119,49,139,71,37,0,16,70,92,147,142,37,1,71,58,124,50,113,48,122,81,0,
0,0,15,68,92,130,67,32,4,58,124,76,0,8,10,46,32,30,5,99,97,110,39,116,4,49,35,50,47,6,
35,84,47,116,0,103,32,49,82,104,97,118,101,32,116,111,32,22,5,99,97,110,39,116,49,35,50,47,119,84,
0,103,35,81,104,97,118,101,32,16,5,99,97,110,39,116,49,35,50,47,0,103,32,46,10,29,5,99,97,110,
39,116,4,49,121,50,47,6,35,84,47,116,0,32,49,82,104,97,118,101,32,116,111,32,21,5,99,97,110,39,
116,49,121,50,47,119,84,0,35,81,104,97,118,101,32,15,5,99,97,110,39,116,49,121,50,47,0,32,46,10,
17,70,52,243,148,4,117,69,65,126,50,108,13,81,57,137,0,16,70,64,21,18,36,50,65,48,119,47,34,124,
91,13,0,13,68,72,80,133,48,34,113,71,122,55,0,36,10,199,28,83,204,60,114,83,80,66,17,70,16,84,
137,76,244,153,72,113,34,140,88,13,34,37,0,15,70,8,20,212,36,243,128,71,35,89,47,144,50,0,21,72,
5,34,84,32,209,84,36,48,119,34,124,87,65,13,47,124,49,0,47,0,16,70,12,131,210,37,163,192,76,134,
34,6,132,88,139,0,18,71,8,16,203,77,67,210,100,71,35,49,89,47,136,34,37,0,24,66,44,208,89,49,
58,4,143,49,124,55,6,126,65,124,47,114,88,0,81,194,178,32,0,9,198,77,147,65,57,65,67,66,0,12,
68,16,244,137,76,72,126,34,124,89,0,12,68,8,244,137,76,71,126,34,124,89,0,16,70,64,192,89,80,84,
212,48,55,141,47,122,89,47,0,14,70,12,244,132,36,19,0,49,135,75,118,0,103,20,72,12,20,130,85,33,
84,61,32,49,130,71,13,34,141,47,114,0,103,20,72,12,20,130,85,33,84,61,32,49,130,71,13,34,6,122,
47,114,0,9,198,5,4,1,72,19,0,17,13,68,4,66,79,76,35,86,57,6,152,89,0,0,13,69,16,19,
12,5,48,72,35,55,13,89,0,12,69,44,245,212,61,112,49,138,108,138,0,13,69,32,84,141,21,48,107,131,
65,132,88,0,10,67,16,83,153,72,113,50,140,0,13,69,4,66,69,85,48,119,72,57,137,88,0,0,16,70,
52,147,4,72,81,0,65,124,55,72,34,113,72,0,16,70,52,244,143,12,48,78,65,13,34,126,49,13,50,0,
21,73,56,243,133,80,129,76,21,52,192,50,129,50,86,13,55,6,122,89,0,21,71,36,225,197,57,82,84,100,
124,50,75,113,50,6,57,137,113,47,37,0,19,71,12,243,77,84,226,84,100,49,13,65,57,137,50,113,47,37,
0,16,70,8,19,145,84,85,0,71,35,68,49,58,113,47,0,0,14,70,56,244,151,36,50,0,50,126,34,113,
76,0,7,195,52,149,0,13,42,0,12,68,28,20,197,76,81,35,89,125,88,0,11,200,21,48,213,80,50,5,
60,224,66,6,195,85,80,208,13,0,9,198,80,129,79,16,244,133,65,10,67,64,243,25,48,126,55,124,0,8,
197,52,243,1,77,48,17,18,70,16,144,83,64,244,129,72,140,6,35,89,48,13,34,13,0,14,70,13,33,65,
81,84,133,49,34,132,76,114,0,15,69,12,244,205,61,48,49,126,88,65,139,89,0,103,14,69,12,244,205,61,
48,49,126,88,65,126,89,0,0,10,66,53,144,65,140,0,72,34,10,18,71,12,20,211,4,225,18,4,49,13,
89,35,50,72,34,13,0,16,71,52,83,2,61,84,142,20,65,122,55,71,114,50,0,19,71,36,225,15,12,130,
78,4,124,50,72,139,76,6,140,50,13,0,16,70,77,84,144,49,84,192,89,131,48,55,129,89,0,103,16,70,
77,4,129,100,48,78,89,48,34,141,49,35,50,0,17,70,64,193,66,20,144,78,48,55,13,71,6,132,13,50,
0,10,199,52,148,129,56,66,90,20,66,16,70,12,194,67,32,81,0,49,55,132,91,6,141,72,0,17,71,12,
128,77,64,17,206,20,91,35,65,48,6,141,50,0,18,71,4,49,84,100,193,78,20,119,89,122,47,13,55,132,
50,0,14,4,95,114,101,118,34,124,84,6,131,89,72,0,0,17,70,76,49,78,5,34,79,89,13,50,35,34,
37,139,0,103,16,70,76,49,78,5,34,79,89,13,50,130,34,37,139,0,17,70,24,192,77,20,224,207,83,55,
119,65,122,68,49,139,0,13,4,95,53,48,111,83,6,124,83,47,144,0,0,0,14,69,29,34,71,36,240,81,
34,132,90,6,139,0,16,70,76,22,79,56,20,129,89,140,13,50,6,130,13,0,11,68,21,21,65,48,132,49,
58,118,0,8,197,16,243,73,56,240,65,15,69,16,80,149,56,176,72,132,71,6,129,50,49,0,0,17,70,16,
144,77,21,65,82,72,140,6,35,65,113,47,114,0,15,70,8,20,211,37,53,0,71,141,89,124,89,47,0,14,
70,4,148,144,61,113,82,6,143,48,4,149,0,0,15,67,61,85,0,4,138,47,13,84,0,81,111,102,32,15,
69,81,34,65,56,144,47,34,132,6,35,50,37,0,7,196,100,83,69,56,16,12,68,4,211,65,56,119,65,6,
121,50,0,19,72,4,197,18,36,224,200,4,208,133,55,47,34,124,68,13,65,0,17,70,32,84,131,84,193,83,
107,131,49,57,117,55,132,88,0,17,70,16,144,66,21,65,83,72,147,71,6,132,47,132,88,0,0,18,4,95,
114,102,120,34,6,122,47,34,13,83,55,122,49,89,0,0,15,70,28,147,12,36,19,128,75,124,55,132,13,50,
0,17,70,104,147,66,4,37,197,88,113,65,71,121,71,58,37,0,17,70,56,84,1,48,84,197,50,122,48,13,
55,6,132,88,0,9,198,81,32,86,21,36,197,17,10,67,80,241,149,47,139,83,137,0,14,70,76,80,76,36,
243,128,89,132,55,147,50,0,16,70,64,20,129,16,148,197,48,35,34,13,72,140,89,0,17,70,48,81,193,48,
84,197,55,132,81,13,55,6,132,88,0,17,70,36,224,210,20,20,197,124,50,49,34,6,132,89,0,36,9,198,
12,243,150,21,36,197,36,10,198,12,243,150,21,36,197,65,46,0,16,66,60,96,3,128,84,86,115,0,34,81,
116,104,101,32,19,66,60,96,128,84,58,124,76,0,66,8,81,119,104,105,99,104,32,14,66,60,96,13,84,13,
50,0,34,81,97,110,32,12,66,60,96,13,84,13,0,34,81,97,32,9,66,60,96,128,84,0,72,46,12,68,
64,19,19,100,48,133,55,88,37,0,20,71,36,229,133,57,67,210,100,124,50,84,13,50,47,152,34,37,0,103,
18,71,36,229,133,57,67,210,100,124,50,84,13,50,47,34,37,0,13,202,12,243,148,20,212,12,5,66,86,20,
66,24,74,5,85,8,61,34,84,5,66,86,20,119,87,6,135,125,108,141,47,124,84,0,103,24,74,5,85,8,
61,34,84,5,66,86,20,133,87,6,126,34,113,47,13,47,124,84,0,0,9,67,52,144,192,65,140,49,0,0,
0,11,68,76,178,69,16,89,49,132,72,0,15,70,49,82,197,92,20,141,55,137,49,58,135,65,0,19,71,4,
97,137,16,21,137,80,35,83,124,72,6,141,84,124,47,0,0,11,68,16,21,137,20,72,141,84,37,0,10,68,
4,113,201,20,35,81,37,0,0,0,0,11,68,5,52,193,16,119,89,121,72,0,6,195,36,212,9,65,10,67,
32,244,9,107,139,48,132,0,9,198,12,20,211,21,69,5,17,12,68,8,148,5,16,71,140,48,122,72,0,0,
15,70,28,84,129,36,229,0,81,122,34,140,50,47,0,12,68,84,229,9,20,129,50,47,6,140,0,15,70,56,
20,195,20,229,0,50,141,89,13,50,47,0,11,68,8,147,205,20,71,140,139,65,0,15,70,4,116,143,84,225,
0,119,81,34,138,50,72,0,0,8,67,4,33,64,141,71,0,10,67,81,112,83,47,58,126,88,0,0,0,10,
68,60,208,71,32,139,65,121,0,12,201,80,129,82,52,244,212,4,35,5,15,23,73,72,84,212,61,32,84,36,
243,128,34,122,89,47,13,34,6,141,91,13,50,0,23,73,72,84,208,37,32,84,36,243,128,34,122,89,48,125,
34,6,141,91,13,50,0,13,201,65,35,199,72,19,77,4,35,5,103,66,23,73,65,33,80,5,32,84,36,243,
128,48,34,122,48,13,34,6,141,91,13,50,0,21,73,64,131,206,20,209,84,4,35,5,83,139,50,132,65,47,
141,71,118,0,12,201,16,148,210,21,5,84,4,35,5,66,21,73,4,97,137,72,208,84,36,243,128,35,83,114,
65,6,141,91,13,50,0,0,9,198,48,83,212,5,33,0,18,13,202,36,225,5,80,84,141,36,224,84,20,16,
0,11,200,65,35,202,20,53,9,48,80,16,12,67,60,225,64,58,128,50,0,34,47,11,6,195,60,209,192,13,
0,16,70,21,48,193,72,115,212,113,89,49,6,130,81,139,0,14,4,95,99,101,100,89,13,72,6,124,55,119,
0,0,14,70,76,147,194,32,19,128,91,13,84,133,50,0,16,70,48,80,129,56,243,128,55,122,71,13,50,126,
50,0,16,70,32,244,137,104,243,128,107,13,34,140,88,13,50,0,15,70,25,34,83,76,243,128,83,34,132,89,
6,154,0,14,70,8,19,12,60,243,128,71,13,55,137,50,0,16,70,4,33,15,52,83,128,35,71,72,13,65,
13,50,0,0,13,68,49,82,71,36,55,137,6,132,75,37,0,14,70,28,84,136,5,33,0,81,143,107,130,47,
0,14,70,80,129,82,21,67,192,86,143,47,6,137,0,10,199,12,244,143,48,192,82,100,66,0,14,69,64,148,
129,13,144,48,148,34,13,89,37,0,14,69,12,241,9,25,144,49,139,72,113,83,140,0,15,70,4,229,9,60,
50,0,35,50,108,132,126,49,0,0,17,70,72,20,8,4,83,0,34,121,83,140,6,122,55,0,103,15,70,80,
83,132,72,147,0,47,122,50,72,34,118,0,19,71,77,68,129,80,81,201,12,89,47,34,13,47,132,75,124,49,
0,15,70,61,3,211,77,83,64,13,48,126,89,13,65,0,23,73,12,19,65,72,17,5,72,145,64,49,35,65,
13,34,6,121,72,13,34,37,0,0,14,69,21,33,66,85,48,122,34,125,71,13,89,0,13,68,69,80,137,80,
49,57,137,71,124,47,0,13,69,32,17,199,37,48,107,35,81,124,89,0,11,68,17,85,133,80,72,137,84,141,
0,11,68,8,145,5,80,71,132,72,141,0,12,69,5,52,197,77,48,119,89,122,89,0,0,19,71,41,83,66,
4,192,89,4,75,129,65,71,13,55,6,140,13,0,0,0,10,67,77,81,84,89,137,113,47,0,21,72,4,67,
79,56,149,9,60,224,35,72,65,13,50,6,124,91,13,50,0,0,13,68,88,19,5,80,84,35,55,6,141,0,
103,11,68,88,19,5,80,84,35,55,141,0,14,69,80,84,212,21,48,47,122,89,47,132,88,0,16,70,72,83,
1,80,149,133,34,122,55,13,47,124,84,0,19,71,72,80,207,52,209,78,16,34,4,122,49,13,65,122,50,72,
0,17,70,65,83,129,80,149,133,48,57,137,50,13,47,124,84,0,13,69,64,148,195,21,48,48,140,89,132,88,
0,15,70,56,244,197,16,149,133,50,139,88,72,140,84,0,18,70,20,229,5,56,68,133,126,50,47,6,126,50,
72,34,14,0,15,69,16,148,195,85,48,72,124,89,49,13,89,0,46,14,69,16,81,133,57,48,72,113,83,122,
50,89,0,0,20,71,48,165,66,48,160,78,4,55,57,137,71,55,57,6,121,50,13,0,17,71,52,86,154,4,
226,78,20,65,122,88,13,50,132,50,0,10,199,4,229,9,12,194,78,20,65,5,194,57,144,13,0,9,67,65,
81,0,48,117,72,0,9,67,28,83,192,75,132,139,0,6,195,36,35,64,13,0,14,4,95,99,97,112,49,4,
35,48,14,47,118,0,0,9,198,52,243,69,57,69,77,66,0,13,202,16,83,79,57,53,18,5,66,86,20,17,
15,70,12,245,207,72,177,82,49,139,58,131,49,114,0,9,198,12,21,129,48,145,82,15,0,12,67,65,85,0,
4,48,117,47,0,47,10,16,70,52,19,4,37,97,83,65,133,55,72,6,132,84,0,14,69,72,244,193,73,144,
34,139,88,13,34,37,0,14,69,16,84,195,73,144,72,113,89,49,34,141,0,11,200,4,229,9,25,33,69,104,
80,65,6,195,57,149,0,13,6,195,12,83,192,13,0,17,70,52,145,20,21,35,64,65,6,124,72,47,4,131,
65,0,0,17,70,8,85,23,20,83,128,71,124,47,58,132,50,0,74,10,16,70,32,17,18,36,19,128,107,141,
72,34,132,13,50,0,13,68,56,84,1,48,50,122,48,6,133,55,0,17,70,88,149,1,52,147,128,84,140,47,
13,65,125,50,0,103,16,70,88,149,1,52,147,128,84,124,47,13,65,125,50,0,14,70,80,84,146,4,147,128,
47,13,34,141,50,0,12,68,72,84,5,48,34,113,48,122,55,0,11,68,64,20,1,48,48,141,48,118,0,9,
198,61,85,8,61,84,197,65,15,70,61,69,15,52,19,128,126,47,13,65,13,50,0,16,70,56,243,147,20,228,
197,50,126,50,89,13,50,89,0,17,70,52,242,9,12,19,128,65,139,107,6,132,49,13,50,0,16,70,48,144,
73,76,243,128,55,132,6,141,88,126,50,0,7,196,48,20,5,48,17,15,70,29,34,70,24,243,128,81,34,124,
83,13,50,0,9,198,29,32,70,24,149,9,17,11,68,5,4,1,48,119,48,133,55,0,0,13,3,95,194,183,
65,124,72,118,72,126,47,0,0,12,67,61,84,128,138,114,0,103,72,34,46,10,67,61,84,128,149,0,72,34,
46,17,3,95,194,180,119,49,57,137,47,35,49,89,122,50,47,0,0,14,69,77,84,5,72,32,89,137,48,6,
131,71,0,16,70,76,52,143,81,83,64,89,49,34,139,47,13,65,0,11,67,72,80,68,34,122,72,0,38,46,
9,67,72,80,68,34,132,72,0,9,67,48,80,68,55,132,72,0,0,18,70,76,148,129,13,84,193,89,145,13,
49,57,6,137,89,13,0,9,198,5,32,80,4,131,197,17,0,12,68,25,33,68,4,83,34,132,72,13,0,10,
68,4,242,70,20,132,83,13,0,9,198,64,16,201,24,144,192,17,14,69,52,17,18,36,64,65,13,72,34,124,
72,0,13,68,88,242,76,4,84,58,121,55,6,121,0,12,68,85,34,78,20,57,146,34,124,50,0,11,68,12,
17,18,20,49,121,72,114,0,12,68,4,67,194,20,119,72,139,71,37,0,0,19,72,12,19,79,84,99,1,28,
80,49,35,65,13,83,55,121,90,0,6,195,36,148,192,13,0,9,198,52,21,9,48,64,64,17,16,70,80,146,
149,4,224,64,47,144,58,6,121,50,13,0,17,70,52,243,148,4,224,64,65,126,50,47,6,35,50,13,0,15,
70,64,148,129,56,128,64,48,13,34,121,50,13,0,9,198,52,17,15,56,224,64,17,16,70,32,244,141,60,224,
76,107,136,65,6,139,50,118,0,19,70,25,32,71,52,83,148,83,34,35,81,65,6,122,50,47,0,36,15,70,
12,244,143,48,192,64,49,13,34,139,55,13,0,16,70,12,130,77,21,32,64,49,140,65,6,144,34,13,0,0,
10,67,52,147,73,65,132,65,37,0,17,70,64,20,129,8,243,1,48,13,34,35,71,13,55,13,0,11,68,24,
147,210,16,83,132,135,72,0,0,9,68,92,131,210,20,107,136,0,14,3,33,63,51,89,36,50,47,37,36,50,
47,0,13,69,76,80,66,20,64,89,132,71,122,72,0,12,68,61,2,78,20,139,48,6,140,50,0,11,68,44,
244,10,20,49,126,48,37,0,13,3,33,63,51,83,39,34,47,40,50,36,0,13,69,8,19,12,4,64,71,35,
55,13,72,0,0,12,68,52,81,193,56,65,122,81,13,50,0,9,67,4,37,64,35,71,137,0,9,67,72,245,
192,34,138,0,37,8,67,72,245,192,34,139,0,20,67,8,245,192,71,4,138,15,72,6,138,50,0,81,100,111,
119,110,32,9,67,8,245,192,71,138,0,36,8,67,8,245,192,71,139,0,11,68,5,33,207,56,130,81,126,50,
0,11,68,4,65,15,56,35,72,126,50,0,4,193,188,43,0,8,197,88,84,142,60,224,16,13,69,56,117,89,
20,224,50,137,57,122,50,0,16,70,20,118,80,80,144,64,124,75,6,124,48,91,13,0,12,68,64,21,9,60,
48,35,47,124,139,0,15,70,52,147,9,80,144,64,65,13,55,124,91,13,0,9,198,52,83,79,72,144,76,17,
17,70,33,148,15,96,144,64,107,140,48,6,126,49,89,144,0,9,198,32,16,137,81,80,76,17,14,70,25,80,
200,76,144,64,83,57,137,91,13,0,17,70,9,83,9,52,144,64,71,117,55,6,124,65,144,0,103,10,67,8,
193,72,71,55,122,107,0,12,3,95,194,173,65,35,49,34,126,50,0,0,16,70,88,243,1,80,147,5,84,126,
55,119,47,118,0,103,6,195,60,224,197,8,10,67,52,144,193,65,140,49,13,0,6,195,16,208,193,13,0,9,
198,65,84,144,61,37,0,66,13,69,64,22,80,4,192,48,141,48,35,55,0,12,68,52,19,135,100,65,141,50,
75,37,0,18,3,95,194,171,55,122,83,47,6,81,124,55,13,65,122,47,0,0,10,67,56,245,192,50,138,0,
32,42,6,195,56,245,192,32,8,67,101,97,83,132,84,0,10,67,48,242,83,55,139,124,89,0,13,69,5,53,
12,21,144,35,89,47,55,37,0,15,69,77,80,148,49,144,89,129,47,13,55,124,0,32,14,69,52,148,197,73,
144,65,124,88,13,34,124,0,9,67,16,69,64,86,124,0,46,15,3,95,194,168,72,140,119,34,6,132,89,124,
89,0,0,16,70,28,241,6,72,145,68,81,126,72,83,34,132,72,0,16,69,44,244,133,4,224,49,114,34,6,
132,13,50,0,103,15,69,44,244,133,4,224,49,134,34,6,132,13,50,0,16,70,77,68,137,56,113,68,89,47,
34,124,68,81,72,0,0,10,67,36,224,193,124,68,49,13,0,15,3,95,194,166,71,34,139,49,13,50,71,6,
130,0,0,11,68,32,82,68,36,107,140,72,37,0,11,68,88,147,12,36,84,124,55,140,0,9,198,24,244,133,
92,20,142,66,0,14,69,88,17,193,73,144,84,141,81,13,34,124,0,14,69,61,97,82,49,144,139,84,114,55,
124,0,46,8,197,61,85,12,5,144,65,0,14,69,20,198,83,136,80,141,55,6,132,88,141,0,12,68,73,84,
197,76,34,137,88,125,88,0,12,68,9,84,197,76,71,129,89,125,88,0,10,67,5,149,80,119,57,129,48,0,
0,8,197,92,147,12,37,48,15,17,71,92,21,5,73,50,5,16,58,133,47,114,91,122,72,0,13,69,52,245,
137,21,48,65,137,84,124,88,0,13,69,52,245,84,33,48,65,138,86,88,0,46,8,197,29,32,84,37,48,15,
0,20,71,52,83,129,28,84,137,20,65,13,50,6,35,75,57,13,34,37,0,0,10,67,48,81,207,55,122,81,
139,0,13,3,95,194,160,107,130,72,89,48,141,89,0,0,27,3,95,194,161,2,124,50,84,4,131,47,113,72,
122,49,89,49,55,13,65,6,141,91,13,50,0,0,13,69,56,20,12,21,48,50,141,48,118,88,0,14,69,52,
17,18,5,48,65,13,72,34,120,89,0,13,69,88,84,147,85,48,84,131,89,113,88,0,15,71,80,19,201,76,
80,67,32,47,132,91,13,101,0,0,9,198,17,32,71,56,85,0,15,0,12,68,92,150,133,56,58,124,88,13,
50,0,14,70,92,130,84,37,50,0,58,140,47,124,91,0,0,14,69,32,84,143,36,224,107,122,34,139,124,50,
0,8,197,12,20,133,20,224,17,0,0,11,68,48,84,143,100,55,132,34,142,0,11,68,16,83,8,36,72,122,
55,37,0,12,69,48,85,8,4,192,55,132,87,118,0,13,69,48,21,78,12,128,55,121,50,76,0,103,0,12,
68,44,20,133,56,49,35,34,13,50,0,16,70,20,212,8,5,49,83,122,65,83,13,89,132,88,0,12,68,12,
18,149,56,49,141,75,13,50,0,0,16,8,116,104,101,114,101,39,108,108,86,143,55,0,72,32,20,71,65,35,
199,56,244,201,76,48,34,126,81,50,6,139,89,124,89,0,16,70,64,244,148,72,18,84,48,136,47,34,141,47,
0,135,14,69,8,147,141,4,224,71,124,50,65,35,50,0,11,68,4,113,210,60,35,81,34,139,0,0,9,198,
12,243,12,20,83,128,66,17,70,12,130,76,20,19,128,76,124,55,6,132,13,50,0,103,9,198,44,147,12,20,
83,128,66,15,70,77,70,71,36,19,128,89,47,124,75,144,50,0,16,70,32,19,15,28,83,128,107,35,55,13,
75,13,50,0,15,70,20,50,5,48,243,128,122,91,13,55,126,50,0,15,70,8,81,15,84,147,128,71,122,72,
137,125,50,0,0,17,71,88,83,135,20,19,131,20,84,122,50,75,13,50,89,0,19,71,80,20,203,24,244,131,
20,47,6,35,89,49,83,4,136,89,0,10,199,36,229,5,72,96,67,20,65,18,71,36,225,133,72,83,131,20,
124,50,83,13,34,13,50,89,0,19,71,36,212,5,16,19,131,20,124,65,48,6,132,72,13,50,89,0,18,71,
20,51,205,52,84,131,20,6,132,49,4,126,65,131,89,0,11,68,16,80,207,100,72,132,49,142,0,5,194,72,
64,46,0,12,69,32,20,150,21,144,107,130,84,37,0,11,200,64,144,195,4,66,76,49,144,67,13,68,52,245,
9,24,65,139,47,6,132,83,0,13,69,52,243,132,5,144,65,129,50,72,141,0,0,15,70,52,20,135,5,33,
84,65,130,81,34,13,47,0,15,70,72,144,207,12,129,84,34,124,49,13,91,141,0,9,198,52,20,148,36,225,
84,67,16,70,36,229,5,72,225,84,124,50,47,114,50,122,47,0,21,73,16,80,207,48,193,84,4,113,64,72,
141,49,126,55,47,6,121,90,0,11,200,12,240,84,32,19,135,21,32,18,16,70,12,16,133,72,225,84,49,35,
71,114,50,6,141,0,11,200,4,229,9,52,21,20,21,32,65,21,72,4,225,77,60,209,84,21,32,35,50,124,
65,6,126,65,113,47,114,0,20,72,4,197,15,28,85,8,21,32,4,133,55,47,13,81,122,86,114,0,0,19,
70,28,83,205,21,68,153,75,37,38,6,126,65,13,47,34,37,0,0,13,68,92,129,82,20,4,58,143,0,8,
10,47,13,69,5,35,213,56,64,119,34,138,50,72,0,14,69,80,245,193,72,64,47,117,58,135,72,0,66,26,
68,76,19,148,4,89,6,35,50,47,13,15,49,55,6,133,88,0,81,99,108,97,117,115,32,11,68,52,148,200,
4,65,132,91,13,0,8,197,36,225,210,36,64,65,9,198,20,225,137,20,193,0,65,19,71,16,243,7,20,195,
1,84,72,126,55,81,6,122,99,55,140,0,12,68,88,149,146,20,84,132,84,34,14,0,11,68,76,16,146,20,
89,141,71,114,0,15,69,72,81,149,56,64,34,132,83,129,50,72,0,37,8,197,72,80,207,72,64,36,15,69,
72,80,207,72,64,34,122,49,114,72,0,103,47,14,69,72,80,207,72,64,34,122,49,135,72,0,47,14,69,64,
20,212,20,64,48,141,89,47,125,72,0,14,69,52,148,212,20,64,65,124,89,47,125,72,0,16,70,49,83,129,
80,144,192,55,137,50,13,47,124,49,0,0,16,70,16,147,65,28,114,79,72,125,65,121,90,124,139,0,0,17,
70,52,147,133,60,192,64,65,124,50,132,6,139,55,13,0,15,70,72,81,133,73,32,76,34,113,83,131,34,118,
0,15,70,52,246,137,48,192,64,65,13,88,124,55,13,0,17,70,48,20,193,28,224,64,55,13,88,121,50,57,
13,0,103,16,70,48,20,193,28,224,64,55,13,88,35,50,57,13,0,15,70,28,244,137,48,192,64,81,114,34,
124,55,13,0,6,195,60,80,196,13,0,17,70,72,17,129,20,195,1,34,121,83,140,6,122,55,13,0,9,198,
84,208,146,20,195,1,66,15,70,80,244,148,36,195,1,47,135,47,6,132,119,0,11,67,76,83,73,89,122,65,
140,0,103,0,11,68,17,80,78,20,72,58,141,50,0,14,69,4,193,146,20,64,35,55,83,34,113,72,0,12,
68,45,80,76,4,49,58,121,55,119,0,12,69,76,48,82,20,64,89,49,143,72,0,12,69,72,82,78,20,64,
34,141,50,72,0,14,69,32,21,18,20,64,107,141,47,34,125,72,0,12,68,28,83,146,20,90,126,50,34,13,
0,0,20,67,80,130,83,86,6,124,89,58,4,128,50,0,33,81,111,110,101,32,12,67,80,130,83,86,124,89,
0,76,34,33,10,67,5,33,64,2,130,0,35,46,0,17,70,81,83,137,76,144,64,47,137,50,6,132,90,13,
0,103,17,70,48,144,133,72,144,64,55,140,71,6,144,34,132,13,0,9,198,64,85,21,56,144,64,17,16,70,
29,32,78,16,208,64,81,34,35,50,72,65,121,0,17,70,16,147,5,52,208,64,72,125,55,6,122,65,13,0,
103,16,70,16,147,5,52,208,64,72,140,55,6,122,65,13,0,15,70,12,240,200,48,80,64,49,126,49,55,132,
13,0,14,69,12,19,148,60,224,49,35,50,47,126,50,0,15,70,8,22,143,60,176,64,71,119,88,137,49,13,
0,9,198,5,32,66,36,48,64,17,0,14,70,52,144,200,20,195,5,65,113,91,122,55,0,10,68,93,34,84,
32,34,140,86,0,15,70,93,34,84,4,35,5,34,140,47,13,71,118,0,19,71,65,148,129,52,145,1,48,48,
113,34,6,35,65,124,72,118,0,15,70,24,19,12,36,35,5,83,35,55,13,71,118,0,0,12,67,92,129,78,
4,58,122,50,0,50,47,12,67,92,129,78,58,2,122,50,0,10,47,14,6,115,104,101,39,108,108,91,132,55,
0,72,32,13,69,28,20,133,80,128,81,35,34,13,87,0,10,67,64,83,206,48,132,13,50,0,9,198,12,243,
131,21,37,0,36,10,198,12,243,131,21,37,0,65,47,0,8,196,76,19,15,56,103,17,10,67,64,242,83,48,
58,121,0,46,8,67,21,33,64,143,0,46,0,14,69,4,198,67,20,224,35,55,124,89,13,50,0,16,70,4,
48,213,73,49,68,119,49,151,89,125,72,0,105,15,70,4,48,213,73,49,68,119,49,131,89,125,72,0,0,6,
195,72,144,65,13,0,12,68,20,210,76,100,122,65,113,55,37,0,10,67,4,128,66,141,107,35,71,0,9,66,
72,80,34,4,132,0,46,5,194,60,176,13,0,11,68,61,48,193,72,126,89,49,114,0,11,68,88,144,193,72,
84,124,49,114,0,11,68,48,20,197,72,55,141,88,114,0,0,13,70,72,16,200,4,83,0,34,141,76,118,0,
12,68,64,83,137,76,48,132,50,113,89,0,11,68,52,144,79,92,65,132,6,138,0,0,8,197,104,243,20,112,
224,65,14,70,48,148,85,21,84,128,55,113,49,131,0,103,14,70,48,148,85,21,84,128,55,113,49,57,146,0,
0,17,70,4,225,18,20,20,192,121,50,72,34,6,141,13,89,0,17,70,4,225,197,48,84,192,35,50,75,13,
55,125,89,0,103,16,70,4,225,197,48,84,192,35,50,75,13,55,132,89,0,17,70,88,149,1,48,148,192,84,
140,47,6,35,55,125,89,0,14,70,80,80,82,28,20,192,47,145,81,35,89,0,17,70,65,148,137,80,84,192,
48,140,34,6,140,47,132,88,0,19,71,33,145,18,4,225,197,4,107,140,72,34,6,141,50,75,13,0,10,199,
29,80,82,4,229,5,20,67,16,71,12,243,77,37,69,5,20,49,13,65,124,47,37,0,16,70,12,242,143,56,
84,192,49,13,107,139,50,141,89,0,9,198,12,130,76,36,84,192,19,16,70,4,48,213,76,84,192,119,49,57,
137,88,125,88,0,5,131,239,187,191,0,10,68,17,34,69,72,72,34,148,0,0,9,198,76,21,129,56,224,72,
17,11,68,4,65,9,76,35,72,124,89,0,12,68,92,131,201,76,107,137,6,124,88,0,17,70,65,34,77,21,
96,76,48,34,140,65,6,132,84,118,0,0,11,67,80,129,77,4,86,122,65,0,46,10,67,72,83,73,34,13,
65,132,0,18,70,12,20,143,48,147,129,49,35,34,13,55,6,140,50,13,0,0,23,3,95,194,191,2,124,50,
84,4,131,47,113,72,49,58,6,122,89,76,13,50,0,0,12,201,29,32,77,52,21,9,12,19,0,17,0,16,
70,77,84,5,72,224,76,89,137,48,6,131,50,118,0,27,75,72,80,207,52,209,78,16,21,9,60,224,34,122,
49,13,65,122,50,72,6,141,91,13,50,0,0,9,198,48,244,146,4,147,133,17,18,71,64,145,67,20,209,65,
48,48,6,132,89,65,4,132,55,0,23,73,20,112,76,37,64,82,36,19,128,113,81,35,55,113,47,6,143,34,
144,50,0,10,199,12,21,8,20,68,129,48,17,0,10,67,80,129,78,86,122,50,0,32,15,70,64,20,129,52,
245,82,48,35,34,119,65,146,0,15,70,52,243,147,36,85,82,65,13,89,57,151,0,105,14,70,52,243,147,36,
85,82,65,13,89,57,131,0,13,69,9,34,68,4,192,71,34,140,72,118,0,17,3,95,194,187,34,140,47,6,
81,124,55,13,65,122,47,0,0,9,198,16,19,65,76,53,83,17,12,68,40,20,1,56,75,13,48,35,50,0,
15,70,12,245,83,12,245,83,49,137,89,49,137,89,0,13,3,95,194,184,89,122,72,6,124,55,13,0,0,14,
69,36,211,199,20,224,124,65,13,75,13,50,0,15,69,12,19,131,84,224,49,35,50,49,6,137,50,0,8,197,
4,81,197,4,224,66,8,197,32,84,133,36,224,66,18,71,13,33,83,12,83,132,60,49,34,13,91,122,50,72,
139,0,0,22,72,28,193,78,72,245,8,21,48,81,55,4,122,50,34,6,126,87,125,89,0,21,72,4,229,9,
80,129,83,21,48,35,50,47,6,124,87,13,89,132,88,0,0,16,70,92,149,8,61,85,0,58,124,86,138,47,
0,74,10,9,198,92,149,8,61,85,0,66,19,72,80,245,82,56,148,85,21,64,47,131,50,125,49,125,47,0,
103,18,71,76,16,210,36,98,67,20,89,35,49,34,113,83,140,89,0,17,71,72,81,133,72,83,131,20,34,122,
83,34,13,50,89,0,18,71,65,34,86,36,193,71,20,48,34,124,84,113,55,113,75,0,17,71,56,84,195,36,
83,131,20,50,122,89,124,13,50,89,0,17,71,25,33,69,48,19,131,20,83,34,132,55,120,50,89,0,18,71,
21,52,9,60,224,71,20,122,89,48,124,13,50,121,90,0,18,71,12,243,131,36,84,135,20,49,126,50,89,124,
6,143,90,0,0,10,67,48,147,79,55,124,65,139,0,0,21,73,72,83,129,37,52,193,56,49,64,34,122,50,
13,89,126,50,89,0,103,19,72,8,243,66,5,33,9,21,32,71,126,65,71,114,72,6,145,0,9,67,4,113,
68,141,75,72,0,0,11,67,76,144,77,89,140,6,35,65,0,15,70,80,129,82,20,241,128,86,143,34,6,126,
84,0,19,71,12,16,146,36,243,5,80,49,35,71,34,132,13,55,6,141,0,0,14,70,65,85,20,36,225,192,
48,117,47,124,68,0,15,70,24,193,77,36,225,192,83,55,122,65,124,68,0,12,68,16,243,3,20,72,126,55,
76,141,0,9,198,8,82,74,36,225,192,66,14,70,80,243,137,28,133,0,47,13,50,140,47,0,14,70,21,97,
78,36,225,192,132,84,50,124,68,0,12,4,95,103,114,118,81,34,6,121,84,0,0,10,67,92,16,207,58,141,
49,139,0,0,14,68,28,242,78,28,4,81,139,124,68,0,10,46,14,70,24,245,83,32,81,64,83,137,91,6,
141,0,14,70,92,19,12,4,49,64,58,126,55,125,89,0,15,70,72,244,193,48,145,64,34,139,88,119,55,37,
0,9,198,77,84,16,61,49,64,66,10,67,60,193,68,139,55,122,72,0,14,70,52,20,145,84,81,64,65,130,
49,6,132,0,9,198,28,243,196,9,145,64,66,16,70,21,2,84,60,209,64,113,48,124,47,13,65,124,0,16,
70,12,243,131,37,49,64,49,127,50,89,6,140,89,0,16,70,4,48,68,20,209,64,119,49,35,72,13,65,37,
0,0,9,198,44,83,148,84,50,217,66,9,198,8,83,7,72,17,5,66,9,198,76,84,133,56,17,5,67,17,
70,12,242,78,12,145,5,49,139,124,50,89,6,140,72,0,16,70,8,195,195,44,17,5,71,55,126,49,6,141,
72,0,9,2,195,151,47,140,65,88,0,0,13,68,92,131,211,20,4,107,137,88,0,8,46,9,198,92,20,148,
32,241,192,18,10,68,28,21,71,20,81,141,75,0,22,72,4,229,5,12,81,5,57,64,35,50,47,124,89,6,
132,72,13,50,47,0,5,194,77,64,24,5,194,77,64,46,9,66,77,64,89,13,50,47,0,0,0,9,198,77,
65,82,36,193,64,16,16,70,56,84,195,4,97,64,50,122,89,49,35,83,141,0,15,70,36,211,199,20,225,64,
124,65,13,75,13,50,0,14,69,17,83,131,4,224,72,129,50,49,13,50,0,14,70,12,244,137,56,225,64,49,
13,34,132,50,0,15,69,60,130,79,4,224,139,107,6,140,139,13,50,0,13,70,88,82,9,12,193,64,84,144,
49,118,0,18,70,84,181,76,20,193,64,57,137,49,13,55,6,141,55,37,0,15,70,77,65,82,36,193,64,89,
47,122,34,140,55,0,7,66,78,80,91,132,0,9,198,76,20,132,36,225,64,66,9,198,72,245,84,36,225,64,
66,9,198,53,83,132,4,225,64,66,14,70,52,244,129,36,225,64,65,13,34,141,50,0,9,198,48,21,18,36,
225,64,17,15,70,40,20,205,36,225,64,75,35,88,65,124,50,0,14,70,28,148,129,24,97,64,75,113,34,120,
83,0,16,70,24,243,212,32,243,4,83,117,47,107,139,55,72,0,15,70,12,240,193,36,225,64,49,139,49,6,
141,50,0,9,198,12,20,195,4,65,64,17,0,17,70,44,21,193,76,18,201,49,138,13,89,6,121,49,37,0,
9,198,8,85,8,21,49,1,17,10,67,88,81,193,84,132,81,13,0,9,198,52,83,79,72,144,77,17,0,12,
68,52,147,132,100,65,124,50,72,37,0,10,67,4,192,78,35,55,13,50,0,10,67,13,37,90,49,34,137,88,
0,12,5,112,105,195,177,97,48,132,67,119,0,10,67,56,83,206,50,132,126,50,0,0,16,70,8,83,133,5,
66,0,71,113,50,132,87,0,74,10,0,13,69,65,149,8,60,224,48,140,87,13,50,0,14,69,8,243,130,60,
224,71,126,50,71,126,50,0,0,17,70,17,83,135,5,33,69,72,129,68,81,119,34,6,132,0,10,199,12,243,
147,81,37,67,80,36,11,199,12,243,147,81,37,67,80,65,47,9,198,4,36,197,57,65,69,67,12,2,195,159,
91,4,130,48,6,122,89,0,11,2,194,167,89,122,49,91,13,50,0,0,17,66,56,240,50,6,139,4,65,136,
0,81,109,111,114,101,32,23,66,56,240,50,4,139,15,55,6,126,68,81,114,0,81,108,111,110,103,101,114,32,
17,66,56,240,6,50,139,6,58,128,50,0,81,111,110,101,32,11,68,64,131,143,52,48,50,126,65,0,8,197,
9,32,90,36,192,17,21,73,80,130,78,29,83,65,40,145,192,87,124,68,13,65,13,75,124,81,0,11,68,12,
243,77,36,49,126,65,124,0,9,198,8,243,66,5,33,0,66,8,66,56,240,50,139,0,42,15,2,194,164,49,
129,34,13,50,89,124,89,140,50,0,0,8,67,12,144,79,76,138,0,8,2,194,165,57,122,50,0,0,12,69,
76,130,86,21,32,91,124,84,114,0,10,67,76,86,0,89,122,49,89,0,13,69,69,82,86,21,32,49,58,124,
84,114,0,10,2,194,162,89,122,50,47,89,0,0,26,68,24,148,147,80,83,6,150,89,47,10,48,55,4,141,
89,0,105,81,112,108,97,99,101,32,25,68,24,148,147,80,83,6,131,89,47,10,48,55,4,141,89,0,81,112,
108,97,99,101,32,10,67,52,17,201,65,141,75,140,0,15,70,8,243,138,61,84,128,71,133,50,90,6,146,0,
8,2,197,139,122,68,81,0,9,2,194,163,48,138,50,72,0,0,16,70,5,68,143,64,244,192,35,47,34,13,
48,126,89,0,15,70,52,83,80,32,148,192,65,122,65,83,113,89,0,8,197,85,3,9,25,64,66,9,198,52,
18,78,80,18,78,66,8,197,36,228,197,13,64,65,16,70,36,225,9,12,84,192,124,50,72,113,89,132,88,0,
13,69,5,81,213,77,64,133,81,13,89,47,0,16,70,5,4,143,64,244,192,35,48,34,13,48,6,139,0,0,
11,67,56,245,0,50,126,47,0,42,40,15,67,56,245,0,4,50,126,47,13,0,34,81,97,32,26,67,56,245,
0,4,50,126,47,107,35,84,47,116,0,35,9,82,104,97,118,101,32,116,111,32,20,67,56,245,0,50,126,47,
107,35,84,0,35,49,81,104,97,118,101,32,19,67,56,245,0,50,126,47,119,84,0,35,73,81,104,97,118,101,
32,13,67,56,245,0,4,50,126,47,0,40,46,9,12,68,81,81,15,72,47,57,137,72,114,0,13,70,64,128,
82,4,242,0,83,143,34,139,0,9,67,56,245,0,50,139,47,0,10,68,24,246,69,72,83,142,141,0,10,67,
16,80,207,72,122,49,139,0,0,14,7,116,104,101,121,39,114,101,2,86,141,114,0,12,68,40,84,213,76,75,
132,88,13,89,0,15,70,64,244,148,84,112,76,48,136,76,13,81,118,0,12,68,40,84,213,76,75,132,88,13,
89,0,13,2,194,174,34,122,75,124,89,47,114,72,0,0,15,8,116,104,101,114,101,39,118,101,86,143,84,0,
72,0,13,66,77,80,89,137,89,13,0,81,115,101,32,9,198,65,35,195,20,81,0,46,9,198,65,35,195,20,
81,0,36,16,70,65,35,195,20,81,0,48,34,139,89,132,72,0,47,8,197,12,18,15,61,64,17,12,2,194,
172,50,126,47,23,89,140,50,0,5,130,195,164,43,0,22,73,12,131,204,21,53,5,72,243,0,49,13,55,122,
89,47,13,34,126,55,0,13,68,8,192,83,136,71,55,121,88,6,141,0,0,18,70,52,243,148,72,80,76,65,
126,50,47,34,124,6,133,55,0,10,198,12,243,80,61,83,132,66,36,0,11,68,76,20,129,32,89,143,34,13,
0,17,70,65,35,212,20,120,128,112,114,111,116,101,103,101,0,29,12,68,60,244,129,32,6,137,34,6,121,0,
16,71,21,52,197,57,66,65,48,113,89,122,50,91,118,0,0,0,9,198,76,16,129,81,69,83,17,12,2,194,
169,49,126,48,124,34,140,47,0,0,12,68,44,147,211,44,49,132,126,89,49,0,13,2,194,182,48,35,34,13,
81,34,35,83,0,0,9,198,21,53,18,4,225,197,66,5,130,197,159,43,5,130,195,175,43,0,15,66,60,224,
2,126,50,86,115,0,81,116,104,101,32,9,66,60,224,4,126,50,0,10,22,73,8,20,148,32,243,15,52,85,
192,71,130,87,6,126,55,13,65,57,137,0,22,73,64,131,212,60,116,129,64,129,82,83,13,47,6,126,81,34,
13,83,114,0,0,9,198,4,229,9,32,84,143,65,6,195,4,32,192,13,10,2,194,181,65,140,49,34,139,0,
0,10,67,12,241,68,49,139,122,72,0,20,72,12,19,148,36,193,86,21,32,49,35,50,47,125,55,132,84,114,
0,19,72,9,81,7,21,34,71,5,32,71,129,75,13,34,124,81,130,0,8,2,194,178,47,137,0,51,0,11,
67,56,22,137,50,121,47,89,124,0,18,71,12,129,86,72,243,5,80,91,122,84,34,13,55,6,141,0,9,2,
194,179,87,34,132,0,51,0,18,70,28,85,20,36,225,192,4,81,122,47,124,68,0,10,35,46,11,68,40,84,
211,20,75,122,89,37,0,10,68,72,245,83,20,34,138,88,0,14,70,72,80,68,36,225,192,34,132,72,124,68,
0,14,70,64,19,12,36,225,192,48,35,55,124,68,0,12,2,194,176,72,124,81,34,6,132,88,0,0,9,67,
4,176,64,35,49,119,0,16,2,194,177,48,55,129,89,135,65,6,140,50,13,89,0,0,14,70,52,21,82,36,
49,64,65,126,34,124,89,0,14,70,77,81,134,36,49,64,89,13,83,140,89,0,18,70,65,35,196,84,49,64,
48,34,126,72,57,137,89,0,37,46,15,70,65,33,70,4,49,64,48,34,122,83,13,89,0,15,70,52,21,9,
56,81,64,65,35,47,13,50,141,0,17,70,44,20,129,60,177,64,49,35,34,124,6,139,49,37,0,9,198,36,
65,86,36,49,64,20,15,70,32,244,212,4,113,64,107,126,89,47,113,75,0,9,198,24,147,129,56,49,64,36,
16,70,24,147,129,56,49,64,83,140,50,35,50,89,0,46,15,70,16,84,129,56,113,64,72,113,34,141,50,75,
0,10,67,4,33,68,119,71,122,72,0,13,2,194,190,87,34,132,49,58,135,47,114,0,0,15,70,28,149,133,
5,112,89,81,124,84,119,58,141,0,10,67,4,64,77,35,72,13,65,0,6,195,85,35,0,13,13,2,195,183,
72,113,84,6,140,72,71,140,0,0,9,67,76,80,78,91,133,50,0,17,70,8,83,138,4,210,78,71,122,50,
75,13,65,125,50,0,11,67,60,208,78,139,65,6,35,50,0,21,72,60,211,137,76,50,69,57,64,126,65,50,
6,124,91,13,50,47,0,103,16,70,16,84,195,4,229,0,72,122,89,49,35,50,47,0,9,198,4,229,9,48,
241,192,65,11,2,194,188,119,49,58,135,47,114,0,0,19,4,104,101,39,115,107,132,88,107,35,72,0,78,81,
104,97,100,32,12,4,104,101,39,115,107,132,88,0,72,35,8,67,72,17,64,34,141,0,8,67,20,177,64,132,
49,0,9,2,194,189,119,107,121,83,0,0,9,198,25,32,71,36,193,64,16,15,70,76,243,69,60,225,64,89,
129,65,58,128,50,0,20,5,115,104,101,39,115,91,132,88,107,35,72,0,78,81,104,97,100,32,13,5,115,104,
101,39,115,91,132,88,0,72,35,16,67,20,16,200,132,76,15,13,84,0,8,81,111,102,32,14,70,12,19,73,
48,193,64,49,119,65,132,55,0,16,70,77,3,203,4,225,64,89,48,139,49,6,35,50,0,15,70,100,245,84,
84,33,64,57,137,108,137,71,0,103,15,70,92,19,142,4,33,64,58,126,50,119,71,132,0,9,198,88,16,195,
36,225,64,66,9,67,48,240,200,55,126,101,0,17,70,48,20,193,28,225,64,108,97,115,97,103,110,97,0,29,
20,73,37,36,133,64,20,129,8,193,64,113,34,122,48,114,13,71,118,0,15,70,36,208,71,36,225,64,113,65,
35,75,113,50,0,15,70,32,84,143,36,225,64,107,122,34,139,124,50,0,15,70,29,33,78,4,65,64,81,34,
13,50,141,72,0,16,70,16,80,129,12,193,64,72,141,71,6,121,49,118,0,16,70,12,243,82,4,65,64,49,
126,65,34,35,72,0,103,15,70,12,19,9,12,129,64,49,119,55,132,76,37,0,9,67,12,16,200,49,35,91,
0,9,198,8,148,12,4,225,64,65,16,70,5,69,1,12,129,64,35,108,35,6,91,141,0,103,16,70,5,69,
1,12,129,64,35,47,6,35,91,141,0,46,14,70,4,50,9,48,193,64,119,49,124,55,132,0,0,10,67,76,
81,193,89,141,81,13,0,10,67,76,17,193,89,121,81,13,0,18,70,32,16,201,20,225,1,107,121,89,124,6,
122,50,72,13,0,6,195,36,81,69,13,0,16,70,8,84,142,5,33,0,71,131,50,6,130,72,0,103,14,70,
8,84,142,5,33,0,71,131,50,13,72,0,15,70,100,241,200,85,37,0,57,139,81,114,47,0,103,14,70,100,
241,200,85,37,0,57,126,81,114,47,0,11,68,72,83,1,100,34,132,55,141,0,7,2,195,176,122,86,0,0,
5,130,195,177,43,0,8,2,195,190,87,135,50,0,0,9,67,80,129,69,4,86,132,0,6,195,36,177,65,66,
22,67,80,83,0,47,4,122,55,15,119,84,6,132,84,0,81,97,118,105,118,32,16,70,36,229,5,72,225,69,
124,50,47,6,131,50,132,0,6,195,85,49,1,13,0,0,14,70,80,132,143,84,114,0,87,34,137,0,72,10,
15,70,56,147,133,88,82,0,50,124,50,124,84,13,0,0,0,18,4,105,39,118,101,140,84,107,35,72,0,78,
81,104,97,100,32,11,4,105,39,118,101,140,84,0,72,35,10,67,48,144,77,55,132,13,65,0,16,70,64,20,
211,21,32,153,48,35,89,114,71,6,140,0,12,68,8,145,207,80,71,124,81,13,47,0,7,2,202,131,122,91,
0,5,130,195,187,43,0,13,69,8,241,193,73,64,71,139,81,130,47,0,14,69,48,85,129,57,64,55,13,84,
35,50,47,0,9,198,77,84,208,20,53,0,36,17,70,77,84,208,20,53,0,89,129,89,48,122,49,47,0,47,
8,197,61,85,6,37,64,65,13,69,60,209,76,21,64,126,65,55,13,47,0,8,197,60,34,133,13,64,36,9,
197,60,34,133,13,64,65,47,11,68,52,144,79,84,65,132,6,138,0,15,70,24,192,67,12,145,0,83,55,35,
89,124,72,0,14,69,16,80,197,57,64,72,132,89,13,50,47,0,14,69,8,19,12,21,64,71,35,55,6,141,
0,103,12,69,8,19,12,21,64,71,35,55,141,0,0,0,22,7,116,104,101,121,39,118,101,86,141,84,107,35,
72,0,78,81,104,97,100,32,15,7,116,104,101,121,39,118,101,86,141,84,0,72,35,14,70,52,146,200,4,147,
0,65,124,49,140,55,0,12,69,84,145,200,85,32,58,132,81,146,0,17,70,85,65,78,76,147,0,57,137,47,
6,122,50,89,118,0,12,69,44,244,200,21,32,49,139,91,114,0,12,69,12,243,208,21,32,49,137,48,114,0,
15,70,12,20,9,80,243,0,49,35,48,124,47,118,0,6,195,85,3,144,13,0,9,198,52,19,132,4,192,89,
67,9,198,92,148,133,80,20,0,18,0,6,194,85,48,13,42,9,66,85,48,4,129,89,0,46,14,70,52,21,
20,32,85,192,65,35,87,57,137,0,14,69,8,82,82,85,64,71,141,34,6,137,47,0,15,70,28,192,83,28,
245,192,81,55,120,88,81,139,0,8,197,85,4,143,61,64,66,14,69,81,37,69,77,64,47,34,137,13,89,47,
0,13,70,76,128,76,48,245,192,91,35,55,139,0,14,69,76,80,193,57,64,89,132,49,13,50,47,0,15,69,
76,21,129,57,64,89,119,84,121,50,47,0,103,16,69,72,84,15,77,64,34,4,132,48,6,139,89,47,0,15,
70,48,80,82,56,81,0,55,131,50,125,72,0,37,10,67,44,240,78,49,139,121,50,0,9,198,32,18,82,56,
85,0,15,14,69,21,132,5,73,64,122,49,89,48,131,47,0,14,69,16,84,197,73,64,72,113,88,131,47,0,
36,14,69,16,84,197,73,64,72,122,89,114,47,0,46,13,69,16,84,197,73,64,72,113,88,131,47,0,14,69,
12,245,133,73,64,49,139,84,6,131,47,0,9,198,12,243,132,84,53,0,36,9,198,12,243,132,84,53,0,65,
14,69,12,243,80,5,64,49,13,65,48,35,47,0,13,69,4,211,213,57,64,119,65,138,50,47,0,20,71,4,
35,210,36,114,78,20,35,71,13,34,6,124,75,13,50,37,0,12,2,201,148,139,48,13,50,6,133,10,0,0,
10,67,4,193,67,35,55,124,49,0,0,0,8,67,80,131,213,86,138,0,0,17,71,52,17,5,48,82,78,20,
65,35,72,13,55,113,50,0,19,71,52,21,83,60,193,85,52,65,133,89,13,6,55,132,13,65,0,8,2,196,
184,49,34,121,0,0,17,70,16,85,18,37,69,83,72,113,47,34,140,47,13,89,0,9,67,32,211,64,107,13,
65,0,0,13,69,12,128,86,21,160,76,121,84,122,88,0,9,67,56,240,72,50,139,129,0,10,2,204,134,71,
34,122,84,10,0,0,16,70,76,16,143,80,17,197,89,35,71,13,47,121,90,0,17,70,65,33,83,80,145,197,
48,34,122,89,47,6,132,90,0,16,70,21,21,73,64,17,197,122,49,58,124,48,124,75,0,16,70,8,85,133,
72,17,197,71,122,84,13,34,113,75,0,0,12,2,204,132,65,35,49,34,126,50,10,0,20,2,203,140,89,6,
122,49,13,50,72,34,124,89,47,34,4,122,89,0,15,2,202,148,81,55,6,126,19,118,89,47,126,48,0,0,
13,68,44,80,129,8,49,13,71,121,71,0,103,12,68,44,80,129,8,49,13,71,35,71,0,0,9,67,72,82,
68,34,132,72,0,23,74,52,148,195,20,195,1,56,83,213,76,65,124,89,13,55,6,141,50,144,89,0,16,2,
204,130,89,131,49,129,65,83,55,122,49,89,10,0,7,2,202,146,122,90,0,0,11,2,204,131,47,124,55,72,
13,10,0,13,2,201,155,139,48,13,50,6,122,12,10,0,0,7,196,4,114,76,20,16,11,68,84,224,204,20,
129,68,49,118,0,10,68,76,145,8,20,91,132,13,0,11,68,48,21,20,20,55,121,108,141,0,12,68,37,32,
84,20,140,34,6,141,47,0,10,198,36,212,12,4,229,0,66,36,10,2,204,128,81,34,121,84,10,0,10,2,
203,136,89,47,34,122,89,0,0,13,67,60,229,15,4,126,50,108,117,0,103,10,12,67,60,229,15,4,126,50,
47,117,0,10,13,69,48,85,137,56,80,55,13,84,132,50,0,8,197,4,208,78,16,16,17,15,69,88,144,71,
72,16,84,140,6,35,81,34,13,0,14,69,64,20,1,100,16,48,119,48,140,38,13,0,12,69,61,4,15,76,
80,13,48,139,88,0,12,69,49,144,200,20,80,55,132,76,132,0,8,197,33,83,65,56,80,66,8,67,21,36,
128,143,0,103,7,67,21,36,128,131,0,13,69,16,245,1,28,80,72,139,47,113,75,0,13,69,16,148,15,48,
80,72,140,48,139,55,0,12,68,16,80,193,24,72,132,49,35,83,0,8,197,5,32,193,56,80,66,11,2,204,
129,119,49,57,137,47,10,0,8,2,201,153,91,58,121,0,0,12,68,48,147,1,12,55,140,55,13,49,0,17,
70,16,80,197,16,83,148,72,125,89,132,72,13,50,47,0,0,15,69,16,144,76,60,112,72,140,13,55,133,81,
0,103,9,67,5,81,9,138,72,37,0,11,67,4,129,77,13,107,6,13,65,0,0,13,68,4,53,82,4,35,
49,57,117,34,13,0,12,68,81,34,78,4,47,34,132,50,13,0,13,68,17,98,78,4,72,13,84,132,50,13,
0,12,68,33,86,154,4,107,13,88,6,121,0,14,67,4,209,78,4,141,65,6,122,50,0,103,47,11,67,4,
209,78,119,65,122,50,0,103,13,67,4,209,78,4,121,65,6,122,50,0,47,12,2,201,164,34,35,65,89,107,
135,50,0,0,8,197,25,85,9,48,80,16,15,69,8,80,193,52,80,71,124,49,141,65,0,74,10,12,69,80,
129,78,12,80,86,122,50,89,0,14,69,72,19,79,56,16,34,119,65,139,50,13,0,8,197,44,20,133,56,80,
17,15,69,56,85,129,16,16,50,113,84,35,72,13,0,103,14,69,56,85,129,16,16,50,113,84,121,72,13,0,
14,69,32,20,129,72,80,107,119,34,121,34,37,0,15,69,28,243,69,72,16,81,139,65,6,143,34,13,0,14,
69,85,48,66,48,80,57,137,88,13,71,118,0,13,69,80,147,66,72,80,47,35,65,71,114,0,13,69,76,84,
133,56,80,89,13,34,132,50,0,8,197,61,35,129,80,80,66,13,69,25,84,195,36,16,83,57,137,91,13,0,
14,69,24,18,137,80,16,83,119,107,132,47,13,0,13,69,12,20,129,24,80,49,119,34,35,83,0,13,69,12,
19,137,56,80,49,141,50,140,50,0,14,69,8,245,212,36,80,71,4,139,47,6,140,0,13,69,8,243,199,36,
80,71,117,81,37,0,103,12,69,8,243,199,36,80,71,137,81,37,0,0,8,197,12,244,148,21,160,66,9,67,
76,146,200,89,132,49,0,12,201,20,193,67,81,35,195,85,65,64,66,23,73,5,4,18,61,130,77,5,65,64,
119,48,34,126,49,89,124,65,141,47,0,36,23,73,5,4,18,61,130,77,5,65,64,119,48,34,126,49,89,124,
65,13,47,0,46,10,2,204,138,34,124,68,81,10,0,0,23,74,12,243,135,72,84,211,36,243,129,48,49,13,
50,81,34,122,91,13,50,118,0,0,15,6,97,114,101,110,39,116,4,130,50,47,0,35,10,15,70,77,65,87,
5,37,0,89,47,137,114,47,0,103,15,70,77,65,87,5,37,0,89,47,57,137,114,47,0,10,67,48,83,206,
55,132,126,50,0,14,70,72,20,16,61,37,0,34,35,48,6,136,0,15,70,52,148,195,32,145,70,65,124,89,
76,125,83,0,10,199,24,192,71,20,195,21,52,17,10,67,20,65,78,132,72,13,50,0,10,68,4,195,1,100,
119,55,141,0,12,2,204,136,72,148,34,132,89,113,89,0,13,2,203,144,55,122,68,87,13,50,72,10,0,0,
9,67,93,84,211,58,117,89,0,12,68,64,80,193,56,48,125,49,121,50,0,12,68,64,80,193,56,48,132,49,
13,50,0,13,69,28,241,4,4,208,81,126,72,35,65,0,0,0,11,67,52,18,197,65,4,141,49,0,10,12,
67,52,18,197,65,4,141,49,0,10,46,13,69,8,20,129,12,176,71,119,34,121,49,0,18,70,60,179,1,32,
243,65,139,49,55,119,107,6,139,65,13,0,21,71,21,133,18,20,210,83,80,122,49,89,47,34,6,132,65,124,
89,47,0,8,2,202,167,76,122,91,0,0,22,73,92,129,69,48,32,82,72,245,192,58,6,132,55,10,71,4,
35,34,139,0,7,66,76,144,89,132,0,20,71,65,33,83,20,229,12,100,48,34,122,88,13,50,47,55,124,0,
32,11,68,56,245,193,100,50,139,58,141,0,11,67,56,18,70,50,140,6,132,83,0,6,195,72,226,66,13,8,
2,202,164,75,122,90,0,0,17,7,104,97,118,101,110,39,116,107,35,84,14,50,47,0,35,18,70,8,20,130,
4,67,211,71,130,6,71,141,72,139,89,0,103,17,70,8,20,130,4,67,211,71,130,6,71,141,72,126,89,0,
10,67,52,83,79,65,122,65,139,0,11,68,20,208,133,72,122,65,71,114,0,11,68,4,35,5,72,141,71,55,
114,0,0,14,69,76,192,86,21,32,89,55,35,84,114,0,36,15,70,33,149,78,16,18,64,107,129,50,72,141,
0,103,17,70,21,48,193,48,195,208,122,89,49,6,121,55,13,48,0,14,69,20,194,88,37,32,113,55,124,49,
89,114,0,0,9,198,61,97,82,80,147,69,65,0,13,69,24,147,12,21,64,83,113,55,141,0,103,10,198,21,
133,18,4,53,0,66,36,10,198,21,133,18,4,53,0,65,46,10,198,21,133,18,4,53,0,65,47,14,69,12,
243,66,5,64,49,126,65,71,35,47,0,13,69,4,114,1,77,64,119,81,120,89,47,0,0,9,198,61,85,2,
72,80,75,65,21,73,36,225,143,52,84,131,36,19,0,124,50,83,139,65,6,131,91,118,0,10,67,16,81,207,
72,141,81,139,0,0,12,69,72,85,84,21,32,34,142,47,114,0,10,198,64,192,84,20,21,64,103,66,9,197,
36,225,15,61,32,65,46,15,70,24,195,213,72,148,200,83,55,131,113,91,0,103,15,70,24,195,213,72,148,200,
83,55,129,34,113,91,0,13,70,12,128,84,20,21,64,91,35,47,139,0,18,2,204,158,119,48,34,6,126,49,
89,124,65,13,50,47,10,0,0,15,70,52,16,203,20,227,129,65,13,49,122,50,13,0,11,68,32,82,83,80,
107,140,89,47,0,0,13,67,8,81,78,4,71,124,50,0,103,35,46,12,67,8,81,78,4,71,132,50,0,35,
46,14,69,52,246,129,73,64,65,139,47,89,130,47,0,25,73,80,245,1,48,149,1,72,144,78,47,139,47,4,
35,55,113,47,6,143,34,144,50,0,8,197,80,244,8,5,64,18,17,70,36,229,5,72,210,78,124,50,47,6,
131,65,124,50,0,19,71,21,84,8,20,210,83,52,57,137,83,13,65,124,88,13,65,0,14,69,17,34,69,77,
64,72,34,140,13,89,47,0,8,197,12,21,143,73,64,17,14,4,95,103,117,114,81,6,146,65,117,49,37,0,
0,10,67,77,147,131,89,124,68,49,0,11,4,95,56,48,111,6,141,47,144,0,0,19,70,77,80,141,20,229,
64,89,6,129,71,65,4,122,50,57,137,0,12,201,36,228,212,36,224,212,37,97,64,66,14,70,13,84,2,60,
20,132,49,129,71,13,72,0,22,73,4,197,5,72,224,84,37,97,64,133,55,47,6,131,50,13,47,124,84,0,
7,2,201,178,67,122,0,0,15,69,17,99,210,4,176,72,14,84,136,90,35,49,0,14,70,12,129,89,20,227,
133,91,140,6,35,50,0,0,17,70,92,129,78,21,97,82,58,122,50,122,84,114,0,74,8,9,198,81,32,78,
76,97,82,36,10,198,81,32,78,76,97,82,65,47,16,70,60,193,65,56,65,82,139,55,124,35,50,72,114,0,
16,70,48,21,133,56,65,82,55,35,84,13,50,72,114,0,9,198,33,83,135,61,97,82,66,0,9,198,12,243,
21,52,37,83,17,12,68,8,83,137,56,71,122,50,124,50,0,14,69,77,66,78,29,144,89,47,124,50,75,37,
0,15,70,76,192,86,37,50,0,89,55,141,84,124,91,0,8,197,76,19,1,52,144,17,7,196,64,20,133,56,
17,13,68,44,244,129,56,49,135,34,6,121,50,0,14,70,44,224,86,37,50,0,50,141,84,124,91,0,12,68,
12,19,143,56,49,35,50,13,50,0,0,15,70,44,20,129,12,130,64,49,119,34,130,76,37,0,16,70,12,195,
211,20,198,64,49,55,139,89,55,124,0,32,16,70,4,227,205,4,198,64,119,50,126,65,13,55,37,0,0,11,
200,81,33,77,20,225,15,85,48,17,11,200,72,145,9,13,83,15,85,48,66,18,72,72,83,132,21,165,143,85,
48,34,126,50,72,113,84,137,0,11,200,48,20,195,37,98,79,85,48,17,20,72,4,36,212,20,210,79,85,48,
119,71,89,47,6,132,65,144,89,0,11,2,201,190,10,6,130,47,35,48,0,0,14,70,56,244,134,60,194,192,
50,135,83,13,49,0,19,71,36,212,18,20,50,83,20,124,65,48,34,124,89,6,140,89,0,17,71,4,69,133,
73,66,83,20,35,72,84,114,47,140,88,0,10,2,204,165,34,124,68,81,10,0,0,22,72,84,226,86,21,36,
201,81,144,57,137,50,124,84,6,131,89,113,47,37,0,9,67,4,160,82,119,75,130,0,5,194,80,128,46,6,
66,80,128,87,0,0,14,69,69,81,66,20,48,49,58,113,71,122,49,0,8,67,5,32,192,130,49,0,6,195,
37,32,192,13,0,13,68,17,80,78,4,72,58,6,121,50,13,0,12,68,4,192,78,4,119,55,35,50,13,0,
16,70,76,130,73,80,18,197,91,132,47,6,121,49,155,0,11,68,76,21,84,20,89,133,47,141,0,11,68,8,
20,212,20,71,141,89,47,0,12,2,202,178,65,4,126,72,75,6,141,0,0,15,69,8,80,207,52,80,71,124,
49,129,65,0,74,10,14,69,8,81,143,72,80,71,124,83,136,0,74,10,13,69,77,65,86,36,80,89,47,132,
84,37,0,13,69,48,83,143,72,80,55,122,50,6,136,0,13,69,48,80,78,56,80,55,132,6,35,50,0,13,
69,40,19,137,56,80,75,13,50,132,50,0,13,69,24,18,78,56,80,83,35,50,38,13,0,11,69,4,242,70,
24,80,132,83,13,0,13,69,4,112,84,32,16,35,81,119,87,13,0,15,69,52,242,129,88,80,65,139,107,6,
121,84,37,0,13,69,37,66,1,12,16,124,87,13,49,13,0,13,69,88,19,9,76,80,84,119,55,132,89,0,
13,69,81,34,65,28,80,47,34,132,121,90,0,14,69,76,145,67,48,80,89,57,122,49,55,14,0,14,69,76,
85,133,72,80,89,113,84,6,145,0,46,14,69,72,85,9,56,16,34,122,47,124,50,13,0,14,69,64,21,9,
56,16,48,35,47,124,50,13,0,13,69,52,19,149,72,80,65,13,50,57,146,0,13,69,8,85,1,44,80,71,
113,47,141,49,0,0,13,70,73,84,211,20,195,0,34,129,89,118,0,15,70,32,21,193,36,144,78,107,13,58,
6,147,50,0,18,70,16,17,197,77,64,78,72,121,81,124,89,47,6,121,50,0,15,70,76,246,65,8,80,78,
89,142,13,71,132,50,0,6,195,85,52,210,13,15,2,202,176,35,89,48,113,34,141,47,113,72,10,0,0,17,
70,28,241,26,36,195,1,81,126,72,88,6,124,55,13,0,13,69,76,49,78,36,48,89,132,50,124,49,0,6,
195,85,48,64,13,17,2,204,175,50,4,126,50,89,113,55,6,35,71,113,49,0,8,2,209,135,76,122,12,0,
0,12,68,16,19,148,20,72,121,50,108,141,0,13,68,20,194,90,4,124,55,6,140,88,13,0,12,68,52,243,
148,20,65,126,50,108,37,0,11,68,61,82,74,4,58,132,75,13,0,10,67,36,34,68,124,71,125,72,0,9,
2,209,134,47,89,122,12,0,0,27,68,12,245,76,16,49,117,72,107,35,84,47,116,0,74,32,10,82,104,97,
118,101,32,116,111,32,21,68,12,245,76,16,49,117,72,107,35,84,0,35,49,81,104,97,118,101,32,20,68,12,
245,76,16,4,49,117,72,119,84,0,35,81,104,97,118,101,32,14,68,12,245,76,16,2,49,117,72,0,32,10,
46,13,69,81,34,67,36,16,47,34,124,91,13,0,14,69,76,16,137,56,80,89,119,71,6,132,50,0,12,69,
72,81,199,36,80,34,122,75,37,0,13,69,61,69,1,92,16,126,47,119,58,13,0,8,197,52,19,137,48,16,
17,14,69,12,19,129,16,16,49,35,50,13,72,13,0,8,197,4,226,193,72,16,65,8,197,104,21,129,48,16,
17,12,69,88,81,199,36,80,84,122,75,124,0,13,69,84,228,213,72,80,129,50,91,6,146,0,13,69,80,245,
67,32,80,47,137,91,141,0,46,14,69,76,84,193,52,80,89,122,89,119,65,37,0,12,68,76,48,76,16,89,
49,126,55,72,0,13,69,72,246,65,48,80,34,142,6,35,55,0,14,69,72,81,201,52,80,34,141,90,6,132,
65,0,14,69,64,17,76,48,16,48,140,6,122,55,13,0,15,69,53,85,1,80,80,65,57,137,47,6,141,47,
0,11,69,28,21,67,32,80,81,139,91,0,15,69,21,84,133,44,16,57,137,6,34,132,49,119,0,11,67,4,
192,83,119,55,6,35,89,0,8,2,209,133,101,35,12,0,0,9,198,77,83,12,37,96,78,16,24,75,72,80,
207,56,224,73,77,48,78,12,80,34,113,49,126,50,124,89,13,50,89,0,5,194,85,96,13,13,2,202,188,113,
75,122,49,47,113,84,10,0,7,2,209,132,122,83,0,0,14,69,76,195,214,4,176,89,55,139,84,35,49,0,
9,67,76,130,65,91,132,13,0,10,68,72,82,71,56,34,141,50,0,9,67,40,242,69,90,58,121,0,6,195,
64,50,69,13,7,2,209,131,40,12,0,0,11,68,5,97,82,100,141,84,114,37,0,12,68,72,85,18,100,34,
132,47,34,140,0,6,195,96,19,76,13,11,2,204,170,72,122,50,47,118,10,0,8,2,209,130,47,122,12,0,
0,13,69,29,32,72,4,208,81,34,141,13,65,0,14,69,28,83,73,56,144,75,122,65,113,50,140,0,9,67,
8,144,83,71,147,89,0,7,2,209,129,122,89,0,0,6,195,76,243,206,32,10,67,96,83,206,88,132,126,50,
0,17,70,65,83,138,4,34,64,48,129,50,75,6,121,71,37,0,10,67,4,65,78,141,72,13,50,0,15,70,
49,83,12,4,38,64,55,129,55,13,71,140,0,10,67,36,51,206,140,49,126,50,0,7,2,209,128,122,34,0,
0,10,67,48,146,197,55,140,49,0,10,17,7,100,111,101,115,110,39,116,72,129,88,13,50,47,0,32,9,67,
28,18,65,81,140,13,0,10,67,85,49,64,57,137,88,0,36,9,67,85,49,64,57,137,89,0,21,72,52,19,
129,28,84,133,77,48,65,35,50,113,75,13,34,6,122,89,0,8,2,209,143,57,35,12,0,0,27,74,52,144,
210,60,244,135,4,226,83,52,65,140,49,34,139,6,135,81,13,50,124,88,13,65,0,12,68,4,194,66,36,35,
55,13,71,140,0,8,2,209,142,57,40,12,0,0,28,5,119,111,110,39,116,58,6,139,50,47,35,84,47,116,
0,32,10,82,104,97,118,101,32,116,111,32,27,5,119,111,110,39,116,58,139,50,47,107,35,84,124,47,0,78,
82,104,97,118,101,32,105,116,32,23,5,119,111,110,39,116,58,139,50,47,107,35,84,0,35,49,81,104,97,118,
101,32,22,5,119,111,110,39,116,58,139,50,47,119,84,0,35,73,81,104,97,118,101,32,16,5,119,111,110,39,
116,58,139,50,47,0,76,32,10,46,10,199,32,80,68,24,148,147,80,66,17,71,16,20,142,20,65,83,80,72,
130,50,72,13,89,47,0,18,71,9,33,65,44,96,83,80,71,34,122,49,83,13,89,47,0,7,2,209,141,122,
12,0,0,22,72,84,226,78,80,84,133,77,64,129,50,6,124,50,47,13,34,13,89,47,0,16,70,76,80,210,
20,54,64,89,132,49,34,13,89,37,0,22,72,72,18,78,24,244,133,77,64,34,6,141,50,83,4,126,34,113,
89,47,0,9,198,5,32,200,92,22,64,65,10,2,209,140,57,6,36,34,37,0,0,12,68,80,129,73,72,86,
143,0,72,34,46,10,67,32,211,77,107,6,13,65,0,11,68,12,145,193,72,89,113,81,130,0,6,195,25,146,
64,13,10,2,209,139,57,6,122,34,40,0,0,10,67,88,86,0,84,122,49,89,0,8,2,209,138,57,122,34,
0,0,9,2,209,137,91,76,35,12,0,0,16,70,80,240,143,28,112,78,47,13,71,126,81,13,50,0,12,68,
52,147,149,76,65,140,50,13,89,0,8,2,209,136,91,35,12,0,0,14,70,32,20,151,36,50,0,107,35,34,
124,75,0,10,68,60,97,133,72,126,83,114,0,11,68,56,244,201,72,50,139,89,131,0,10,68,24,194,69,72,
83,55,148,0,0,18,70,52,242,1,52,81,0,109,111,104,97,109,109,97,100,0,29,10,2,95,34,49,58,139,
47,89,0,0,16,70,72,21,133,56,147,135,34,35,84,13,50,113,68,0,15,70,64,192,71,84,147,135,48,55,
141,81,124,68,0,16,70,25,34,78,28,147,135,83,34,124,50,75,124,68,0,9,67,12,130,67,91,132,49,0,
17,2,95,33,122,49,89,49,55,13,65,6,141,91,13,50,0,0,20,73,80,83,80,21,32,84,85,33,64,47,
122,65,48,34,113,76,114,0,21,73,25,84,148,32,84,141,61,33,64,83,151,86,114,65,6,136,0,105,8,20,
73,25,84,148,32,84,141,61,33,64,83,131,86,114,65,6,136,0,8,10,67,4,227,206,119,50,126,50,0,0,
16,70,9,34,83,8,19,133,71,34,124,89,71,13,50,0,9,67,76,243,128,89,129,50,0,14,69,64,81,1,
48,240,48,122,72,13,55,139,0,13,68,48,241,207,56,55,126,81,6,126,50,0,9,67,12,243,128,49,126,50,
0,10,198,12,17,134,20,147,133,103,66,9,2,95,39,49,58,139,47,0,0,9,2,209,146,72,57,122,12,0,
13,2,95,38,35,65,48,13,89,35,50,72,0,0,7,2,209,145,57,152,0,13,2,95,37,48,151,89,6,122,
50,47,0,105,12,2,95,37,48,114,89,6,122,50,47,0,0,16,70,92,129,82,21,97,82,58,2,143,44,122,
84,114,0,15,70,12,128,82,80,145,82,91,130,47,37,6,141,0,16,70,56,18,82,60,34,64,50,140,34,6,
139,71,37,0,16,70,37,52,129,20,194,64,124,88,34,6,141,55,37,0,14,70,72,82,78,16,81,82,34,141,
50,72,145,0,15,70,28,244,211,4,209,82,81,126,89,13,65,114,0,17,70,25,35,206,80,145,82,83,34,129,
50,47,6,145,0,103,15,70,25,35,206,80,145,82,83,34,129,50,47,145,0,17,70,13,84,212,60,209,82,49,
6,129,89,47,13,65,114,0,9,2,95,36,72,126,55,114,0,0,16,67,88,19,128,84,35,50,72,131,0,81,
100,101,114,32,17,67,88,19,128,84,35,50,72,122,50,0,81,100,101,110,32,9,67,80,83,128,47,122,50,0,
19,72,77,83,16,33,84,143,85,48,89,129,55,83,114,34,13,89,0,12,68,72,148,197,56,34,124,88,13,50,
0,0,9,198,61,85,3,5,53,0,65,13,2,95,42,35,89,47,13,34,124,89,49,0,0,22,72,52,243,148,
28,243,69,73,144,65,126,50,47,81,6,126,65,13,34,37,0,20,72,69,80,84,21,35,129,73,144,49,58,13,
47,131,50,13,34,124,0,13,2,95,41,34,140,47,48,119,34,122,50,0,0,10,67,44,145,86,49,132,122,83,
0,16,70,36,225,129,56,54,64,124,50,83,13,50,89,37,0,9,67,4,96,82,119,83,130,0,9,2,209,156,
49,57,122,12,0,14,2,95,40,55,122,83,47,48,119,34,122,50,0,0,11,67,32,84,128,107,131,0,72,34,
46,17,67,64,84,128,48,4,131,15,89,6,141,0,81,115,101,32,20,67,64,84,128,48,114,15,89,6,122,50,
47,0,81,99,101,110,116,32,9,67,64,84,128,48,131,0,72,11,67,84,229,25,129,50,47,6,140,0,6,195,
37,36,192,13,8,2,209,155,78,122,12,0,0,11,68,4,193,137,20,35,55,83,37,0,13,68,60,209,71,4,
139,65,6,141,81,13,0,15,7,111,39,99,108,111,99,107,13,49,55,126,49,0,11,68,28,147,77,20,81,124,
65,37,0,8,2,95,46,72,126,47,0,0,12,67,36,229,15,4,124,50,108,117,0,103,11,67,36,229,15,4,
124,50,47,117,0,23,73,52,144,200,20,192,78,28,83,15,65,140,49,118,6,35,50,75,13,55,139,0,12,68,
4,131,69,16,35,101,65,122,72,0,9,2,209,153,55,57,122,12,0,9,2,95,45,72,35,91,0,103,11,2,
95,45,107,4,140,83,13,50,0,0,9,67,4,112,82,141,81,130,0,9,67,4,49,82,141,89,114,0,6,195,
48,245,18,13,9,2,95,44,49,126,65,13,0,0,19,67,24,20,128,83,6,130,10,65,4,136,0,81,109,111,
114,101,32,10,67,41,81,25,75,137,72,37,0,10,198,80,83,80,48,21,5,103,16,9,198,77,64,71,56,21,
5,66,17,70,76,84,1,72,21,5,89,122,48,114,34,141,47,0,36,16,70,76,84,1,72,21,5,89,122,48,
14,34,13,47,0,16,70,60,36,207,48,85,5,126,71,89,13,55,132,47,0,17,70,21,53,9,52,21,5,122,
89,47,113,65,141,47,0,36,9,198,4,48,213,72,21,5,16,12,67,53,36,192,65,124,89,113,88,0,24,9,
2,95,51,87,34,6,132,0,0,16,70,81,83,129,24,148,200,47,137,50,13,83,124,91,0,13,67,9,99,4,
71,117,55,13,84,130,72,0,8,2,95,50,47,6,137,0,0,12,68,40,20,133,16,75,35,34,13,72,0,13,
69,64,85,9,80,80,48,13,47,132,47,0,9,2,95,49,58,6,128,50,0,0,21,72,77,80,147,21,21,69,
57,64,89,129,71,89,113,49,58,13,50,47,0,17,7,112,105,195,177,97,116,97,48,132,67,6,35,47,119,0,
16,70,52,240,195,5,50,78,65,126,49,13,89,125,50,0,11,200,12,243,77,4,225,1,57,64,15,12,201,12,
21,1,77,68,143,64,129,64,17,10,2,95,48,88,6,144,34,139,0,0,8,197,80,21,20,60,240,66,22,73,
36,229,5,72,209,68,36,21,5,124,50,47,114,65,6,132,72,144,47,0,24,73,16,148,195,60,228,207,48,21,
5,72,124,89,49,6,126,50,89,13,55,13,47,0,22,73,12,243,77,20,228,213,72,21,5,49,13,65,122,50,
89,114,34,13,47,0,9,67,4,195,197,35,55,139,0,12,2,95,55,89,6,13,84,13,50,0,107,11,2,95,
55,89,6,122,84,13,50,0,0,15,70,76,19,5,72,227,192,89,119,55,143,50,139,0,17,70,16,144,66,60,
195,192,72,140,6,35,71,13,55,139,0,10,2,95,54,89,6,124,49,89,0,0,19,67,16,241,83,72,129,88,
50,126,47,0,32,78,81,110,111,116,32,10,67,16,241,83,72,129,88,0,32,15,70,4,195,25,76,243,128,35,
55,124,89,13,50,0,9,2,95,53,83,6,140,84,0,14,3,95,98,110,71,122,50,81,6,121,55,37,0,0,
17,6,119,97,115,110,39,116,58,129,88,50,47,0,103,35,46,17,6,119,97,115,110,39,116,58,4,126,88,50,
47,0,35,46,16,70,76,132,137,48,198,64,91,34,124,55,55,124,0,32,8,2,95,52,83,6,136,0,0,17,
7,119,101,114,101,110,39,116,4,58,131,50,47,0,35,10,9,67,105,83,133,88,137,50,0,9,67,37,51,1,
140,55,13,0,9,67,20,211,65,122,65,13,0,10,67,48,147,65,55,132,65,119,0,8,67,92,131,193,58,139,
0,10,67,33,83,1,107,137,55,13,0,18,70,8,84,137,8,84,137,71,122,34,124,71,6,122,34,37,0,8,
2,208,183,88,122,12,0,15,2,95,59,89,122,65,124,49,6,139,55,13,50,0,0,15,70,104,130,86,4,115,
192,90,113,84,121,81,139,0,12,68,20,211,210,100,122,65,114,34,37,0,13,69,52,20,137,4,224,65,35,34,
144,50,0,8,2,208,182,90,122,12,0,10,2,95,58,49,139,55,13,50,0,0,13,68,56,240,133,48,50,139,
71,6,122,55,0,15,70,5,81,21,8,243,128,133,72,13,71,126,50,0,12,68,88,147,153,48,84,140,50,125,
55,0,7,196,12,16,129,48,17,9,2,95,57,50,6,140,50,0,8,2,208,181,57,122,12,0,0,19,66,92,
80,58,132,91,6,35,55,0,49,81,115,104,97,108,108,32,19,66,92,80,58,2,132,91,4,119,55,0,81,115,
104,97,108,108,32,10,66,92,80,58,132,0,72,32,46,12,68,48,17,207,76,55,141,81,126,89,0,8,66,100,
16,57,119,0,46,13,69,76,145,206,4,192,89,124,81,50,118,0,14,70,64,131,5,28,214,64,83,55,122,65,
37,0,13,68,60,20,201,76,139,6,141,89,113,89,0,13,70,32,80,82,76,22,64,107,145,89,141,0,9,198,
28,243,196,16,22,64,66,16,70,24,20,129,92,22,64,83,130,34,13,58,6,141,0,15,70,13,85,1,92,22,
64,49,129,47,13,58,141,0,18,70,12,240,88,36,19,0,49,139,6,35,49,89,124,13,55,0,18,70,12,20,
129,52,83,0,49,35,34,13,65,122,55,0,135,47,5,194,84,144,13,8,2,95,56,6,141,47,0,8,2,208,
180,72,122,12,0,0,16,70,64,84,147,64,86,0,48,131,89,48,122,49,89,0,13,69,24,147,133,77,48,83,
113,50,122,89,0,11,68,12,243,69,72,49,129,65,114,0,9,68,12,241,85,72,49,131,0,8,2,208,179,81,
122,12,0,12,2,95,63,49,58,122,89,76,13,50,0,0,10,67,65,52,212,48,89,89,47,0,9,67,56,245,
20,50,126,47,0,10,67,24,144,84,83,132,13,47,0,8,2,208,178,84,122,12,0,13,2,95,62,81,34,141,
47,13,86,35,50,0,0,12,68,52,147,149,80,65,124,50,124,47,0,23,73,21,132,15,56,83,148,36,19,0,
122,49,89,48,13,50,6,122,50,91,118,0,8,2,208,177,71,122,12,0,10,2,95,61,132,49,58,118,88,0,
0,17,70,16,243,133,28,19,0,72,126,50,113,81,6,133,55,0,7,2,208,176,35,12,0,11,2,95,60,55,
122,89,86,35,50,0,0,13,69,17,83,12,21,48,72,129,55,13,89,0,13,69,16,83,142,37,48,72,122,50,
125,89,0,14,69,84,227,5,77,48,129,50,55,6,122,89,0,21,72,81,32,78,77,3,210,81,48,47,34,35,
50,89,48,136,47,89,0,34,13,69,80,83,142,37,48,47,122,50,125,89,0,13,69,72,16,130,37,48,34,35,
71,140,88,0,9,198,60,211,137,88,244,133,65,14,69,32,147,132,85,48,107,124,50,72,137,88,0,8,2,208,
191,48,122,12,0,0,22,73,65,54,67,32,144,84,72,148,212,89,140,49,6,147,47,34,124,89,47,0,18,71,
49,83,131,33,35,207,52,55,129,50,76,15,34,137,65,0,6,2,208,190,152,0,0,11,68,52,147,133,80,65,
113,50,141,0,13,4,95,57,48,111,50,6,140,50,47,144,0,7,2,208,189,122,50,0,0,17,70,20,118,80,
80,144,78,124,75,6,124,48,91,13,50,0,9,67,72,82,78,34,141,50,0,9,198,52,17,201,12,144,78,17,
17,67,48,80,78,55,132,50,15,47,137,0,44,81,116,111,32,10,67,4,114,78,119,81,124,50,0,7,2,208,
188,122,65,0,10,2,95,64,35,47,89,140,50,0,0,14,69,76,245,197,80,240,89,13,58,122,47,139,0,10,
68,52,22,65,56,65,147,50,0,8,2,208,187,122,56,17,0,0,11,4,105,39,108,108,140,55,0,72,32,9,
67,92,131,204,107,139,55,0,15,70,88,19,12,20,163,192,84,119,55,141,107,139,0,9,198,61,85,2,4,50,
192,65,14,70,16,145,66,4,50,192,72,140,71,35,49,0,12,2,215,130,89,124,50,72,126,47,10,0,8,2,
208,186,49,35,12,0,0,17,70,32,80,146,36,65,83,107,122,71,34,13,72,132,88,0,17,70,4,229,9,48,
193,83,35,50,47,6,124,55,132,88,0,15,70,52,19,22,21,35,128,65,133,55,84,114,50,0,17,70,52,84,
131,20,65,83,65,131,89,6,141,72,132,88,0,15,70,5,69,1,12,129,83,119,47,35,76,125,88,0,10,67,
4,115,199,119,81,126,81,0,12,2,215,129,91,124,50,72,126,47,10,0,17,2,208,185,4,124,49,14,16,6,
35,47,49,134,57,37,0,0,15,70,12,132,153,76,193,82,49,34,140,89,55,114,0,15,70,12,193,65,57,49,
82,49,55,122,50,88,114,0,7,2,208,184,124,12,0,0,10,67,64,84,149,48,13,34,137,0,17,70,64,82,
201,56,84,197,48,132,49,125,50,6,132,88,0,15,70,32,80,68,4,50,25,107,122,72,141,49,37,0,12,68,
16,83,79,56,72,132,65,13,50,0,0,12,68,5,52,193,52,35,89,6,35,65,0,0,11,68,88,148,129,48,
84,148,34,118,0,16,70,72,19,65,16,19,128,34,35,65,119,72,121,50,0,11,68,69,80,83,32,49,58,126,
91,0,11,68,28,21,133,48,81,35,84,118,0,11,68,12,244,129,48,49,126,34,118,0,21,72,12,243,77,20,
229,1,73,144,49,126,65,13,50,47,122,34,37,0,103,19,72,12,243,77,20,229,1,73,144,49,126,65,13,50,
47,34,124,0,12,4,95,226,128,163,71,117,55,113,47,0,0,8,67,12,129,82,91,143,0,9,198,4,224,84,
60,214,64,17,16,4,194,182,194,182,48,35,34,13,81,34,35,83,89,0,12,4,95,226,128,162,71,117,55,113,
47,0,0,10,67,4,64,64,141,72,13,0,47,16,70,65,32,67,80,148,197,48,34,35,49,47,113,89,0,15,
4,95,226,128,161,72,129,71,118,72,35,81,114,0,0,18,72,81,35,213,8,17,15,85,32,47,34,137,71,13,
72,136,0,11,68,80,146,203,4,47,132,49,13,0,16,70,8,16,203,20,225,0,71,35,49,6,122,50,72,0,
11,4,95,226,128,160,72,35,81,114,0,0,10,68,4,50,5,16,141,49,47,0,4,193,212,43,0,12,67,100,
245,82,57,146,0,106,72,34,46,11,67,100,245,82,57,135,0,72,34,46,15,4,95,226,128,166,124,55,6,124,
48,89,124,89,0,0,14,70,60,209,76,21,69,5,126,65,55,13,47,0,13,70,12,82,76,36,66,0,49,141,
55,37,0,6,195,85,48,128,13,9,2,215,151,101,36,47,10,0,7,2,217,135,107,35,0,11,3,95,101,108,
81,34,6,132,49,0,13,4,95,226,128,165,47,137,72,126,47,89,0,0,12,68,65,84,133,20,48,57,146,34,
141,0,12,2,215,150,88,6,35,57,37,50,10,0,9,2,217,134,50,40,12,50,0,10,4,95,226,128,164,72,
126,47,0,0,13,68,84,229,197,16,129,50,58,6,122,72,0,13,68,84,225,133,16,129,50,83,6,122,72,0,
9,2,215,149,84,35,84,10,0,8,2,217,133,65,132,65,0,15,4,95,226,128,155,55,122,83,47,49,58,139,
47,0,0,20,73,72,21,1,80,245,73,48,193,64,34,35,47,13,47,6,137,124,0,21,72,12,148,131,84,213,
133,57,64,89,150,49,13,65,84,122,50,47,0,105,20,72,12,148,131,84,213,133,57,64,89,131,49,13,65,84,
122,50,47,0,8,2,215,148,107,36,10,0,8,2,217,132,55,35,65,0,13,4,95,226,128,154,55,139,49,58,
139,47,0,0,17,67,76,243,69,89,129,65,58,128,50,0,81,111,110,101,32,13,67,76,243,69,4,89,129,65,
0,34,11,46,10,67,12,195,197,49,55,139,37,0,9,198,12,19,3,85,69,1,66,11,67,81,83,129,47,137,
50,13,0,103,11,67,81,83,129,47,57,137,50,13,0,15,70,76,21,67,21,0,78,89,133,89,48,13,50,0,
12,2,215,147,6,72,35,55,36,47,10,0,8,2,217,131,49,35,83,0,14,4,95,226,128,153,34,140,47,49,
58,139,47,0,0,16,70,80,19,12,100,131,192,47,35,55,124,6,107,139,0,9,67,52,16,200,65,121,49,0,
14,70,48,83,208,5,33,0,55,122,48,114,72,0,13,202,32,84,141,5,2,18,60,66,84,20,66,12,2,215,
146,6,81,37,65,36,55,10,0,9,2,217,130,104,35,12,83,0,15,4,95,226,128,152,55,122,83,47,49,58,
139,47,0,0,12,67,28,241,83,2,81,139,88,0,10,46,13,69,16,147,135,33,144,72,124,68,81,37,0,9,
2,215,145,71,36,47,10,0,7,2,217,129,83,35,0,16,4,95,226,128,159,55,122,83,47,49,58,139,47,89,
0,0,15,70,40,240,67,32,147,64,75,139,13,49,124,65,0,6,195,37,48,142,13,11,2,215,144,6,35,55,
36,83,10,0,15,3,95,103,117,81,137,75,114,34,6,121,47,37,0,14,4,95,226,128,158,55,139,49,58,139,
47,89,0,0,11,200,72,81,193,72,67,5,77,48,8,11,67,76,129,64,91,132,0,72,46,33,10,67,52,19,
65,65,121,65,119,0,9,2,215,159,50,40,50,10,0,6,2,217,143,40,0,15,4,95,226,128,157,34,140,47,
49,58,139,47,89,0,15,2,95,91,55,122,83,47,71,34,35,49,113,47,0,0,12,68,32,19,143,36,107,35,
50,6,142,0,16,70,65,33,67,21,5,0,48,34,132,89,122,48,47,0,10,198,12,243,150,21,37,0,65,37,
9,198,12,243,147,61,37,0,36,9,198,12,243,147,61,37,0,65,9,67,4,224,76,141,50,118,0,9,2,215,
158,65,36,65,10,0,6,2,217,142,35,0,7,2,218,134,76,35,0,16,4,95,226,128,156,55,122,83,47,49,
58,139,47,89,0,0,16,70,52,20,137,49,147,128,65,35,34,13,55,113,50,0,15,70,65,35,206,61,83,128,
48,34,139,50,138,50,0,13,69,32,245,11,21,144,107,126,47,49,132,0,12,200,4,36,207,49,85,5,49,144,
67,32,9,2,215,157,65,36,65,10,0,10,4,95,226,128,147,72,35,91,0,0,19,66,76,240,89,6,139,15,
65,4,129,76,0,81,109,117,99,104,32,20,66,76,240,89,4,139,15,65,6,122,50,37,0,81,109,97,110,121,
32,18,66,76,240,89,6,139,15,83,4,130,0,10,81,102,97,114,32,9,66,76,240,4,89,139,0,10,15,70,
52,19,3,60,195,64,65,35,55,49,13,65,0,15,70,65,33,84,104,83,0,48,34,122,47,89,118,0,20,73,
8,245,82,28,83,201,76,145,64,71,146,90,58,121,88,6,132,0,6,194,88,144,13,42,5,194,84,176,13,12,
2,215,156,55,6,35,65,36,72,10,0,10,4,95,226,128,146,72,35,91,0,0,15,69,12,144,76,37,48,89,
132,6,35,55,125,89,0,13,70,4,19,9,100,18,0,13,55,132,13,0,17,70,77,84,137,56,19,69,89,146,
34,124,50,6,35,65,0,14,69,52,244,129,77,48,65,126,34,6,35,89,0,12,69,52,80,68,61,112,65,122,
72,139,0,12,69,4,148,130,85,48,143,71,129,89,0,9,2,215,155,49,35,83,10,0,12,4,95,226,128,145,
107,140,83,13,50,0,14,2,95,95,6,129,50,72,114,89,49,4,136,0,0,19,71,4,227,129,52,20,137,4,
35,50,13,65,119,34,6,132,13,0,9,2,215,154,49,35,83,10,0,8,2,217,138,57,122,19,0,11,4,95,
226,130,160,57,146,34,139,0,12,4,95,226,128,144,107,140,83,13,50,0,17,2,95,94,89,150,49,129,65,83,
55,4,122,49,89,0,105,16,2,95,94,89,131,49,129,65,83,55,4,122,49,89,0,0,11,67,60,130,79,139,
107,6,140,139,0,17,70,52,147,132,4,224,79,65,124,50,72,13,50,6,138,0,7,196,12,17,5,80,17,9,
2,215,153,57,39,72,10,0,19,2,217,137,35,55,6,37,83,10,65,35,49,89,6,40,34,35,0,14,2,95,
93,34,140,47,71,34,35,49,113,47,0,0,15,70,77,83,132,36,19,0,89,129,50,72,147,55,0,13,70,40,
245,82,56,19,0,75,131,50,118,0,15,70,12,130,70,25,35,206,91,124,83,34,126,50,0,9,2,215,152,47,
36,47,10,0,8,2,217,136,58,35,58,0,15,4,95,226,128,150,72,4,129,71,118,71,6,130,0,0,11,69,
80,129,73,73,48,86,143,88,0,15,69,4,52,143,77,48,13,49,34,126,89,0,74,10,8,197,32,20,146,37,
48,15,16,70,26,84,137,56,225,64,83,132,34,124,50,38,13,0,13,69,32,84,144,21,48,107,131,48,132,88,
0,15,69,21,131,196,85,48,122,49,89,13,72,13,89,0,13,69,12,20,133,77,48,49,13,34,122,89,0,14,
69,12,19,150,5,48,49,35,50,84,13,89,0,14,69,12,19,80,85,48,49,35,65,48,13,89,0,12,69,5,
32,200,21,48,130,76,125,88,0,9,2,215,167,49,40,83,10,0,20,4,95,226,128,149,107,126,34,113,88,4,
126,50,47,118,71,6,130,0,0,12,2,215,166,47,89,6,35,72,37,10,0,12,4,95,226,128,148,122,65,72,
35,91,0,0,12,68,24,147,5,80,83,113,55,141,0,103,12,2,215,165,47,89,6,35,72,37,10,0,13,3,
95,97,114,6,35,34,13,71,124,49,0,6,2,95,97,141,0,0,19,71,36,212,9,56,114,78,28,124,65,48,
6,124,50,75,124,68,0,8,2,215,164,48,36,10,0,12,2,95,96,71,35,49,48,34,140,65,0,0,10,67,
16,145,85,21,102,114,0,47,8,2,215,163,48,36,10,0,0,12,68,8,85,19,100,71,122,47,89,37,0,9,
198,61,85,13,61,53,0,65,28,74,36,229,133,77,66,71,5,66,86,20,124,50,84,4,122,89,47,113,81,6,
141,47,124,84,0,103,12,2,215,162,19,6,35,57,37,50,10,0,11,2,217,146,89,40,49,6,40,50,0,0,
12,68,4,69,137,48,35,72,84,124,55,0,17,70,65,148,133,56,81,83,48,124,34,13,50,6,132,88,0,17,
70,17,83,70,72,145,83,72,129,65,83,34,6,132,89,0,16,70,88,84,148,36,49,83,84,131,47,124,89,132,
88,0,15,69,84,229,9,17,144,129,50,47,6,140,72,37,0,13,69,72,80,76,49,144,34,144,55,124,0,32,
13,69,65,33,84,81,144,48,34,124,47,37,0,12,2,215,161,89,6,35,65,36,101,10,0,10,2,217,145,91,
6,35,72,119,0,0,16,70,4,36,129,32,19,64,141,71,34,13,107,35,65,0,11,68,12,18,82,60,49,140,
34,139,0,9,2,215,160,50,40,50,10,0,6,2,217,144,37,0,7,2,218,136,72,36,0,0,9,67,72,147,
192,34,132,139,0,16,70,76,21,129,28,84,153,89,35,84,124,75,34,37,0,21,72,64,131,212,60,198,83,37,
48,83,139,47,6,126,55,13,89,124,89,0,21,72,52,85,18,61,3,204,37,48,65,13,47,34,126,48,13,55,
124,89,0,9,198,16,83,9,88,84,153,16,12,201,12,131,15,72,244,12,5,53,0,65,9,67,8,147,192,71,
140,139,0,8,67,4,195,64,121,65,0,6,2,214,183,35,0,10,2,216,167,35,55,6,37,83,0,0,12,68,
32,148,129,52,107,140,34,13,65,0,9,198,80,16,129,76,51,192,17,13,68,32,20,133,52,107,121,34,6,132,
65,0,6,2,214,182,122,0,19,2,216,166,107,6,35,65,88,35,10,19,55,35,10,57,122,19,0,0,14,70,
32,84,141,4,227,128,107,131,65,13,50,0,12,69,12,129,78,21,144,76,141,50,37,0,10,67,100,246,79,57,
139,57,139,0,15,69,56,240,143,17,144,6,50,139,71,126,72,37,0,10,67,16,83,79,72,122,65,139,0,11,
68,8,20,193,48,71,141,89,118,0,6,2,214,181,122,0,22,2,216,165,35,55,6,37,83,10,47,35,107,47,
10,107,6,35,65,88,35,0,0,19,72,24,18,18,20,226,5,37,64,83,35,34,13,50,107,140,47,0,18,67,
18,34,155,72,141,90,121,15,84,6,137,0,81,118,117,32,5,194,100,64,13,6,2,214,180,132,0,14,2,219,
140,83,6,130,89,37,15,57,6,36,0,19,2,216,164,107,6,35,65,88,35,10,19,55,35,10,58,35,58,0,
0,20,67,88,148,192,84,132,88,119,84,6,132,0,82,97,32,118,105,115,32,21,67,88,148,192,84,132,88,119,
84,6,132,0,82,195,160,32,118,105,115,32,6,195,20,32,89,20,6,2,214,179,39,0,22,2,216,163,107,6,
35,65,88,35,10,47,35,107,47,10,35,55,6,37,83,0,0,10,68,52,17,86,20,65,141,84,0,16,70,16,
243,73,56,144,192,72,126,65,113,50,124,49,0,12,68,60,208,72,4,139,65,119,107,121,0,13,69,80,20,137,
24,96,47,35,34,124,83,0,9,198,76,21,1,56,144,192,17,11,68,68,17,68,4,49,140,72,13,0,12,68,
64,17,18,20,48,121,72,34,141,0,11,68,52,149,18,20,65,140,47,114,0,13,68,44,240,76,4,49,139,6,
121,55,13,0,16,70,44,147,133,80,144,192,49,125,50,122,47,124,49,0,14,70,5,36,197,56,144,192,130,89,
50,124,49,0,6,2,214,178,35,0,9,2,215,170,47,35,84,10,0,19,2,216,162,35,55,6,37,83,10,65,
35,65,72,6,40,72,119,0,0,15,70,72,241,5,72,144,203,34,126,72,34,124,49,0,14,70,12,130,83,92,
144,203,76,124,88,124,49,0,17,71,81,33,66,84,50,5,80,47,34,122,71,117,91,141,0,6,2,214,177,122,
0,9,2,215,169,91,37,50,10,0,7,2,218,145,92,36,0,11,2,216,161,107,6,35,65,88,35,0,0,18,
70,80,21,9,4,224,64,47,121,47,57,6,121,50,13,0,103,17,70,80,21,9,4,224,64,47,35,47,124,6,
121,50,13,0,9,198,56,21,1,76,128,64,17,8,197,12,243,146,4,64,65,16,70,5,34,65,56,224,64,35,
34,124,6,121,50,13,0,15,70,80,84,85,36,192,64,47,13,49,132,55,13,0,15,69,72,245,21,56,64,34,
139,47,6,129,50,72,0,16,70,64,84,147,60,224,64,48,131,89,6,139,50,13,0,12,69,36,227,129,72,64,
124,50,114,72,0,13,70,8,149,5,12,128,64,71,140,76,13,0,16,70,8,83,9,76,128,64,71,13,55,6,
132,91,13,0,17,70,4,193,129,48,96,64,35,55,83,6,35,55,83,13,0,17,70,4,48,80,20,192,64,35,
49,119,48,6,122,55,13,0,8,2,214,176,91,84,121,0,9,2,215,168,51,36,91,10,0,12,3,95,104,101,
107,6,132,71,34,137,0,0,19,67,16,84,192,72,13,65,142,50,0,81,109,111,105,110,101,115,32,31,67,48,
84,192,55,141,65,124,88,122,34,6,121,71,55,14,0,81,109,105,115,195,169,114,97,98,108,101,115,32,9,2,
216,175,72,35,56,17,0,7,2,95,115,122,89,0,0,13,68,4,35,214,20,13,71,129,84,0,74,10,11,67,
40,244,226,107,139,89,6,141,0,19,71,64,243,25,4,210,68,20,48,126,55,124,6,141,65,140,72,0,18,70,
64,85,21,48,19,148,48,122,76,13,55,13,50,47,0,103,17,70,64,83,131,32,19,148,48,122,50,91,13,50,
47,0,103,15,70,64,83,131,32,19,148,48,126,50,91,126,50,0,10,199,53,83,20,37,69,68,20,65,11,68,
12,19,22,20,49,35,84,0,103,10,68,12,19,22,20,49,121,84,0,8,2,216,174,101,122,19,0,0,10,199,
56,240,212,85,35,129,48,66,8,2,216,173,107,122,19,0,14,4,95,104,97,99,107,6,35,76,4,122,49,0,
0,16,69,8,82,9,56,64,71,124,107,140,50,72,0,74,10,9,198,56,21,129,76,48,64,17,14,69,72,20,
200,36,64,34,121,91,6,132,72,0,17,70,56,144,207,76,144,64,50,124,49,13,89,6,132,13,0,15,70,12,
80,201,48,144,64,89,113,89,132,55,144,0,15,69,84,229,201,56,64,129,50,58,6,140,50,72,0,17,70,64,
19,129,12,80,64,48,35,50,119,89,6,132,13,0,17,69,48,149,133,12,64,55,6,140,84,89,132,72,6,132,
0,13,69,21,36,129,56,64,122,34,13,50,72,0,11,2,214,188,72,6,35,81,122,91,0,8,2,216,172,75,
132,65,0,0,17,71,8,81,84,32,245,133,56,71,141,108,139,84,13,50,0,10,67,49,84,5,55,137,48,141,
0,10,67,88,148,193,84,132,88,13,0,10,199,32,19,12,61,113,69,56,67,11,67,17,84,5,72,57,137,48,
0,135,6,2,214,187,40,0,8,2,216,171,87,122,19,0,0,21,72,104,147,66,4,37,197,4,224,88,113,65,
71,121,71,58,124,13,50,0,14,69,92,21,19,60,224,58,126,47,89,13,50,0,15,70,77,21,73,73,33,76,
89,49,58,131,64,0,103,15,70,77,21,73,73,33,76,89,49,58,124,34,118,0,8,197,76,19,15,60,224,17,
12,68,16,147,135,100,72,124,50,75,124,0,12,2,219,146,71,35,34,37,57,6,36,0,7,2,216,170,47,35,
0,0,9,67,76,22,83,89,122,88,0,13,69,76,17,133,81,144,89,141,83,47,37,0,8,197,61,85,3,73,
144,65,10,67,56,245,19,50,126,47,89,0,13,69,48,149,133,49,144,55,140,84,55,124,0,13,69,36,229,18,
5,144,124,50,47,34,141,0,12,69,33,84,146,5,144,107,13,34,141,0,10,67,4,225,87,119,50,137,0,103,
10,67,4,225,87,119,50,57,137,0,6,2,214,185,39,0,17,2,216,169,47,6,122,19,65,35,52,71,6,40,
47,119,0,0,14,6,121,111,117,39,108,108,57,137,55,0,72,32,14,69,37,48,66,20,192,124,88,13,71,122,
55,0,12,68,17,32,67,60,72,34,141,49,139,0,11,67,8,17,90,71,140,6,122,88,0,18,72,80,244,146,
20,229,9,4,192,47,13,34,122,50,91,118,0,23,73,36,228,212,4,195,1,80,147,206,124,50,89,47,13,55,
6,141,91,13,50,0,19,72,12,243,12,61,21,73,4,192,49,13,55,139,49,58,124,118,0,13,69,12,128,78,
20,192,91,119,50,122,55,0,12,69,12,83,9,16,128,49,141,55,37,0,6,2,214,184,35,0,7,2,218,152,
90,35,0,7,2,216,168,71,35,0,0,11,68,32,82,78,104,107,140,50,88,0,10,67,88,20,197,84,121,88,
0,135,9,67,80,20,197,47,141,88,0,9,67,16,244,197,72,139,89,0,9,2,216,183,47,107,121,19,0,13,
2,95,123,55,122,83,47,71,34,141,89,0,0,14,69,80,82,18,4,224,47,143,34,6,121,50,0,13,69,48,
84,201,60,224,55,132,90,13,50,0,9,198,12,243,134,48,144,212,36,10,198,12,243,134,48,144,212,65,47,10,
2,216,182,72,35,12,72,14,0,20,4,95,226,128,188,122,49,89,49,55,119,65,6,141,91,13,50,88,0,0,
10,199,64,83,143,9,48,207,80,17,15,69,76,147,135,49,144,89,124,68,81,55,124,0,32,12,69,64,80,82,
49,144,48,131,55,37,0,17,70,24,244,133,57,50,67,83,13,34,122,50,89,124,49,0,17,71,20,21,133,76,
68,143,64,132,84,88,72,34,126,48,0,10,2,216,181,89,35,12,72,14,0,15,4,95,226,128,179,72,129,71,
118,48,34,140,65,0,0,9,66,80,240,47,137,0,72,42,9,66,80,240,47,137,0,72,49,23,66,80,240,47,
137,13,50,72,83,34,6,139,0,82,97,110,100,32,102,114,111,32,16,66,80,240,2,47,117,10,47,116,0,32,
81,116,111,32,16,66,80,240,47,13,15,6,71,132,0,49,81,98,101,32,15,66,80,240,47,13,71,2,37,0,
35,81,98,101,32,8,66,80,240,47,116,0,32,12,69,76,130,76,60,128,91,140,55,139,0,8,66,100,80,57,
132,0,76,12,69,64,20,137,4,128,48,13,34,147,0,15,70,16,80,201,8,83,0,72,122,89,125,71,118,0,
15,70,8,16,200,20,195,210,71,35,76,13,55,114,0,8,2,216,180,91,132,50,0,14,3,95,106,97,75,6,
35,48,13,50,132,88,0,11,4,95,226,128,178,48,34,140,65,0,0,11,67,92,134,64,4,58,140,0,10,47,
14,69,13,148,18,85,48,89,140,48,34,13,89,0,16,70,12,243,15,52,34,65,49,13,55,129,65,71,144,0,
9,67,20,198,64,132,55,37,0,17,70,4,195,5,49,82,65,35,55,113,55,6,137,57,13,0,8,2,216,179,
89,132,50,0,0,17,71,52,16,203,20,230,137,20,65,13,49,122,50,88,37,0,18,70,53,82,1,52,208,68,
109,111,104,97,109,109,97,100,0,29,9,2,216,178,88,122,57,50,0,13,3,95,107,111,107,6,35,50,81,40,
55,0,13,4,95,226,128,176,48,131,65,6,132,55,0,0,13,68,4,35,213,80,119,71,138,47,0,74,10,15,
70,25,34,78,28,84,128,83,34,124,50,75,114,0,8,2,216,177,52,121,19,0,13,3,95,107,110,49,6,121,
50,119,72,13,0,11,3,95,100,118,47,6,121,50,119,0,12,2,95,125,34,140,47,71,34,141,89,0,0,11,
68,80,80,200,76,47,122,49,89,0,21,73,32,81,66,36,82,133,20,38,64,107,132,71,132,75,6,132,71,37,
0,11,200,16,148,195,61,83,148,20,64,66,9,2,216,176,86,35,56,17,0,10,2,95,124,84,132,71,6,130,
0,0,13,69,5,66,5,57,48,35,87,113,50,88,0,12,69,60,97,133,73,48,126,83,114,88,0,15,69,32,
144,84,85,48,107,140,6,141,47,13,89,0,11,68,16,243,143,72,72,139,50,114,0,14,69,16,80,146,37,48,
72,13,71,34,132,0,103,13,69,16,80,146,37,48,72,122,71,34,132,0,12,68,4,66,5,72,35,72,107,6,
145,0,8,197,36,35,84,81,48,13,9,2,218,175,81,35,12,83,0,0,12,68,66,36,133,104,48,122,34,122,
88,0,18,70,77,80,138,20,53,0,89,129,71,75,6,122,49,47,0,36,14,70,12,243,15,72,81,0,49,129,
55,114,72,0,10,67,4,33,84,119,71,122,47,0,16,4,95,226,128,180,47,34,124,48,118,48,34,140,65,0,
0,10,67,16,148,195,72,124,89,49,0,12,68,12,243,69,80,49,126,65,113,47,0,11,5,95,48,97,110,100,
13,50,0,135,0,12,3,95,107,97,75,6,135,75,13,50,0,0,0,16,69,92,149,8,36,224,58,124,86,124,
50,0,74,10,28,11,68,92,19,12,100,58,126,55,37,0,13,69,56,21,8,4,224,50,141,87,13,50,0,16,
70,48,84,207,80,131,192,55,13,89,6,137,47,137,0,11,67,4,160,88,141,75,35,49,89,0,10,2,216,186,
6,103,122,37,50,0,0,15,70,16,145,201,61,35,143,72,125,90,136,50,139,0,17,70,16,19,79,12,193,83,
72,35,65,13,49,55,132,88,0,14,69,72,20,137,81,144,34,143,34,13,47,37,0,17,70,20,212,8,5,50,
83,122,65,83,13,89,124,89,0,46,18,70,4,224,76,101,49,83,35,50,13,55,140,88,125,88,0,36,17,70,
4,224,76,101,49,83,119,50,35,55,13,89,132,88,0,11,68,4,210,83,32,121,65,124,91,0,14,4,95,50,
48,111,47,58,6,122,50,47,144,0,10,2,218,169,49,6,35,12,83,0,10,2,216,185,6,19,122,37,50,0,
0,12,67,16,245,206,4,72,138,50,0,46,10,19,71,72,241,18,36,117,69,76,34,126,72,34,6,132,81,122,
88,0,14,69,54,35,129,28,80,65,141,50,6,121,90,0,11,68,32,245,212,60,107,138,47,137,0,8,2,216,
184,86,121,19,0,0,17,71,92,129,82,20,85,133,72,58,2,143,44,122,84,114,0,0,15,70,52,244,143,12,
51,192,65,13,34,126,49,139,0,11,68,88,81,199,100,84,122,75,124,0,7,2,217,190,48,35,0,0,18,72,
65,33,83,12,145,78,12,80,48,34,132,89,144,50,89,0,20,72,65,33,67,20,65,78,12,80,48,34,122,89,
113,72,13,50,89,0,19,72,36,229,5,73,53,9,12,80,113,50,47,131,89,47,124,89,0,0,18,71,24,84,
142,4,225,5,76,83,114,50,121,50,72,122,89,0,12,69,16,20,146,100,192,72,35,34,118,0,19,71,21,84,
8,72,21,5,76,57,137,83,34,6,141,47,132,88,0,17,71,12,132,137,77,67,65,76,49,34,124,89,65,13,
89,0,14,69,4,211,210,4,192,141,65,6,126,34,118,0,6,194,84,224,13,42,0,10,199,88,19,131,61,85,
133,72,66,10,67,60,33,89,139,71,6,141,0,10,199,13,84,8,60,193,5,72,18,0,20,68,80,129,82,20,
86,2,143,4,58,131,0,9,81,119,101,114,101,32,21,68,80,129,82,20,86,2,143,58,4,129,88,0,103,9,
81,119,97,115,32,20,68,80,129,82,20,86,2,143,58,4,126,88,0,9,81,119,97,115,32,16,68,80,129,82,
20,86,143,71,6,132,0,81,98,101,32,17,68,80,129,82,20,86,143,6,124,88,0,49,81,105,115,32,18,68,
80,129,82,20,86,2,143,4,130,0,9,81,97,114,101,32,12,68,80,129,82,20,86,143,0,72,10,46,12,68,
4,225,18,20,126,50,72,34,141,0,16,70,64,245,15,52,16,192,48,13,47,139,65,13,49,0,9,198,76,21,
9,72,144,192,17,17,70,64,243,9,80,144,192,48,126,55,13,47,124,49,0,47,16,70,52,81,5,88,16,192,
65,122,72,124,84,35,49,0,6,195,57,148,4,13,0,7,2,217,185,47,36,0,0,9,198,52,83,9,56,64,
64,17,15,70,52,18,197,56,224,64,65,13,49,122,50,13,0,13,69,40,20,146,4,64,75,35,34,13,72,0,
16,70,9,34,65,56,224,64,71,34,124,6,35,50,13,0,15,70,44,19,142,4,64,64,49,121,50,13,72,13,
0,17,70,8,243,15,28,224,64,71,13,55,139,50,38,13,0,41,14,69,92,147,132,20,64,58,124,50,72,125,
72,0,9,198,88,19,137,48,192,64,17,15,69,52,148,204,20,64,65,124,89,55,6,122,72,0,13,69,24,24,
1,16,80,83,13,89,121,72,0,15,70,8,243,15,28,224,64,71,13,55,139,50,37,0,0,9,67,52,21,73,
65,138,132,0,15,3,95,109,108,65,35,55,141,6,121,55,13,65,0,0,20,71,4,225,18,60,209,68,4,35,
50,72,34,6,126,65,124,72,13,0,11,68,80,129,84,4,87,132,47,13,0,8,2,218,190,107,6,13,0,0,
9,67,72,134,83,34,132,89,0,10,67,4,211,211,141,65,126,89,0,12,3,95,111,114,133,34,6,37,35,12,
0,0,16,70,80,149,1,56,144,64,47,124,47,6,121,50,144,0,11,69,92,20,146,20,64,58,135,72,0,14,
69,76,16,210,20,64,89,141,49,34,13,72,0,16,70,24,244,141,36,48,64,83,135,65,6,140,49,13,0,13,
3,95,104,121,130,65,6,132,50,144,50,0,0,11,68,12,242,5,56,49,139,13,50,0,10,67,56,20,193,50,
35,89,119,0,6,195,4,65,128,13,0,14,69,76,18,71,60,224,89,140,81,6,126,50,0,20,72,52,147,142,
21,51,212,4,224,65,113,50,113,89,139,47,13,50,0,12,68,48,18,84,100,55,141,13,47,37,0,13,68,16,
82,84,100,72,132,13,108,37,0,103,12,68,16,82,84,100,72,141,13,47,37,0,17,70,12,20,143,85,49,76,
49,35,34,13,89,6,122,55,0,6,195,97,134,0,13,0,6,195,56,50,83,13,0,13,69,85,49,70,84,192,
57,137,89,83,118,0,11,200,32,244,137,104,243,148,4,192,67,14,69,9,33,65,80,128,71,34,132,86,0,36,
47,13,69,9,33,65,80,128,71,34,122,87,0,47,11,4,95,35,51,50,89,48,141,89,0,0,23,6,116,104,
97,116,39,115,86,119,47,89,71,124,50,0,76,81,98,101,101,110,32,20,6,116,104,97,116,39,115,86,35,47,
89,6,124,47,0,81,105,116,32,11,67,40,244,197,107,139,89,6,141,0,15,70,8,243,136,60,210,69,71,126,
50,13,65,132,0,0,14,69,69,88,130,20,48,49,58,113,71,122,49,0,14,69,61,33,71,60,224,126,34,113,
81,13,50,0,17,70,77,80,195,36,224,212,89,13,49,89,124,68,49,47,0,13,69,76,19,13,60,224,89,35,
65,13,50,0,9,197,36,229,5,72,224,65,47,14,69,36,229,5,72,224,124,50,47,131,50,0,37,0,12,68,
28,241,84,32,81,139,13,87,0,76,11,67,52,249,20,65,139,6,122,47,0,9,198,76,17,9,77,66,67,17,
23,74,72,20,16,72,240,200,20,209,78,80,34,35,48,34,139,91,65,6,153,0,103,9,198,32,243,9,77,66,
67,17,18,70,28,145,193,57,66,67,75,140,81,6,35,50,47,124,49,0,9,198,28,19,1,13,66,67,17,0,
12,69,72,16,200,20,192,34,141,76,118,0,12,69,92,148,146,4,192,58,124,34,118,0,13,68,84,225,15,76,
129,50,72,6,137,88,0,13,69,12,20,144,20,192,49,130,48,13,55,0,14,70,5,36,197,56,19,0,130,89,
13,50,118,0,0,18,70,4,36,197,57,66,65,35,71,89,6,122,50,108,132,13,0,6,195,5,66,64,13,0,
15,70,77,69,82,28,148,192,89,47,131,75,124,89,0,15,70,28,83,135,32,148,192,75,122,68,81,124,89,0,
17,70,52,242,1,52,208,68,65,139,107,6,35,65,113,72,0,16,70,56,83,69,76,148,192,50,122,65,13,89,
125,89,0,15,70,52,20,145,84,148,192,65,130,34,49,6,132,0,15,70,52,17,208,36,84,192,65,35,81,48,
140,88,0,0,15,70,16,18,77,48,84,128,72,140,65,55,114,0,103,0,12,68,16,21,137,76,72,141,84,124,
89,0,11,200,76,83,65,64,131,210,20,64,15,0,9,67,20,211,89,122,65,37,0,10,199,52,19,136,5,69,
1,56,66,18,71,12,20,137,8,33,65,56,49,35,34,13,71,6,144,50,0,12,68,52,150,5,72,65,124,49,
89,114,0,17,71,12,245,82,80,84,193,56,49,136,47,125,88,13,50,0,11,68,12,243,15,72,49,129,55,114,
0,0,16,70,21,53,15,65,1,76,122,89,47,6,126,48,118,0,10,67,20,66,84,122,72,124,47,0,17,70,
16,148,213,76,81,0,72,124,89,6,57,137,88,72,0,12,68,13,147,82,84,49,129,65,34,37,0,6,195,4,
194,84,17,0,0,5,194,97,144,13,12,3,95,104,105,107,6,124,50,72,37,0,0,12,68,48,241,201,56,55,
126,81,124,50,0,22,73,48,16,153,72,147,148,32,147,133,55,35,71,114,6,124,50,87,132,50,0,12,68,8,
244,213,56,71,139,89,13,50,0,6,195,5,67,64,13,0,14,69,72,17,5,60,224,34,141,72,132,126,50,0,
13,69,4,97,200,4,224,35,83,81,35,50,0,15,71,52,244,133,12,19,66,20,65,136,49,13,65,0,13,68,
53,83,20,36,65,129,55,47,140,0,103,0,13,5,119,101,39,108,108,58,132,55,0,72,32,0,15,6,116,104,
97,116,39,100,2,86,35,47,13,72,0,18,71,76,20,211,4,100,129,76,89,35,89,119,83,34,35,89,0,17,
70,76,16,143,80,85,82,89,35,71,13,47,6,151,0,105,16,70,76,16,143,80,85,82,89,35,71,13,47,6,
131,0,13,68,72,80,83,44,34,132,6,120,89,49,0,15,69,36,228,212,4,192,124,50,89,47,6,133,55,0,
20,72,4,229,9,64,131,206,4,192,35,50,47,6,124,83,13,50,118,0,0,13,68,53,83,143,104,65,137,50,
57,139,88,0,23,74,48,145,67,33,65,78,77,65,73,56,55,124,101,47,13,50,89,47,140,50,0,10,199,28,
144,146,4,197,1,72,66,7,196,12,17,9,104,17,18,71,80,81,4,100,33,65,72,47,6,122,72,124,71,4,
143,0,19,71,48,19,132,61,115,133,72,55,6,35,50,72,4,139,50,114,0,16,71,32,243,69,61,115,133,72,
107,139,65,139,50,114,0,12,68,8,148,207,56,71,140,89,13,50,0,0,23,73,56,85,198,61,83,132,48,19,
132,50,57,137,83,13,50,72,55,119,50,72,0,29,69,72,18,83,60,224,34,141,88,126,50,15,72,6,122,47,
34,14,0,81,100,39,195,170,116,114,101,32,0,16,70,28,147,210,16,147,143,75,135,72,6,132,50,139,0,18,
72,12,243,147,12,145,78,12,80,49,126,50,91,13,50,89,0,12,201,8,240,82,16,209,77,8,84,128,65,0,
15,68,8,82,78,28,4,71,132,124,68,0,35,46,10,12,69,12,129,82,100,192,91,122,34,118,0,19,71,37,
51,211,12,83,5,76,140,89,6,126,89,13,55,132,88,0,14,69,12,244,146,4,192,49,13,34,6,35,55,0,
14,69,12,20,148,20,192,49,130,47,6,122,55,0,11,68,4,114,78,28,141,75,124,68,0,0,10,199,92,130,
67,32,85,133,72,66,19,71,76,243,77,20,194,69,72,89,129,65,13,55,57,6,141,0,103,17,71,76,243,77,
20,194,69,72,89,126,65,6,122,55,144,0,18,71,9,34,71,4,66,69,72,71,34,124,81,119,72,6,145,0,
8,67,5,52,192,35,89,0,0,16,70,93,147,205,36,225,192,58,140,6,139,65,124,68,0,11,68,80,18,15,
20,47,121,107,139,0,15,70,32,20,212,36,225,192,107,141,89,47,124,68,0,14,70,80,80,82,36,225,192,47,
143,44,124,68,0,7,196,76,84,9,4,20,15,70,76,48,82,36,225,192,89,49,143,34,124,68,0,11,68,64,
244,211,20,48,126,89,37,0,11,68,32,245,83,20,107,138,88,0,36,10,68,28,81,83,20,81,132,89,0,15,
70,12,243,77,20,229,0,49,126,65,122,50,47,0,0,12,68,32,84,143,16,107,122,34,13,72,0,0,15,70,
88,84,147,4,49,64,84,114,89,121,76,37,0,15,70,56,21,1,48,145,64,50,35,47,119,55,37,0,15,70,
12,19,132,4,49,64,49,35,50,72,124,89,0,15,70,92,20,212,4,113,64,58,141,89,47,113,75,0,15,70,
88,84,212,36,113,64,84,122,89,47,113,75,0,9,198,77,80,140,36,209,64,66,16,70,72,81,133,72,81,64,
34,122,83,13,34,6,132,0,17,70,65,35,212,20,113,64,48,34,139,47,13,90,141,0,103,16,70,65,35,212,
20,113,64,48,34,126,47,13,90,141,0,15,70,65,33,83,4,113,64,48,34,122,89,124,75,0,15,70,64,244,
212,4,113,64,48,139,89,47,113,75,0,9,198,61,85,18,4,113,64,65,15,70,53,148,208,4,49,64,65,140,
89,48,141,89,0,15,70,52,20,211,4,113,64,65,119,89,121,90,0,103,14,70,52,20,211,4,113,64,65,35,
89,121,90,0,15,70,12,244,147,4,113,64,49,135,89,6,121,90,0,15,70,12,243,12,4,113,64,49,126,55,
6,121,90,0,15,70,8,20,146,4,113,64,71,114,34,121,90,0,103,14,70,8,20,146,4,113,64,71,35,34,
121,90,0,0,11,67,41,83,25,75,137,55,6,140,0,0,14,68,80,131,211,20,86,139,88,0,72,34,10,46,
14,71,56,145,84,105,48,200,20,50,132,76,37,0,15,70,48,82,80,104,145,192,55,140,48,89,124,81,0,20,
71,80,20,129,57,69,76,4,47,13,34,35,50,47,57,117,55,13,0,12,68,65,34,77,4,48,34,132,65,13,
0,17,71,61,33,193,56,83,12,20,135,81,13,50,6,122,55,0,16,70,16,81,129,80,145,192,72,113,83,35,
47,124,81,0,15,70,12,243,77,20,225,0,49,13,65,122,50,72,0,12,68,12,195,211,20,49,55,139,88,0,
36,12,68,12,195,211,20,49,55,139,89,0,46,10,199,12,194,69,57,65,76,20,66,0,11,200,76,83,73,12,
148,131,48,80,65,21,72,36,212,12,4,48,66,48,80,124,65,48,55,6,35,49,13,71,118,0,0,9,198,77,
84,193,56,225,64,66,14,70,52,144,200,20,193,64,65,113,91,122,55,0,15,70,76,80,84,80,193,64,89,132,
6,35,47,118,0,14,70,12,243,15,28,225,64,49,13,55,139,50,0,15,70,77,80,147,36,65,64,89,13,71,
89,140,72,0,15,70,76,245,70,24,193,64,89,137,83,55,6,141,0,19,72,76,130,76,48,83,1,28,128,91,
4,113,55,6,141,55,13,0,15,70,76,84,85,36,225,64,89,132,49,58,113,50,0,9,198,61,85,12,36,225,
64,65,16,70,28,83,149,36,225,64,75,122,50,57,137,125,50,0,14,70,21,2,83,80,193,64,113,48,124,89,
118,0,13,70,20,20,140,60,33,64,145,55,139,71,0,12,68,12,243,66,60,49,126,65,71,139,0,9,198,9,
34,71,4,65,64,66,14,70,5,3,211,80,193,64,119,48,126,89,118,0,16,70,4,225,77,60,225,64,119,50,
122,65,13,50,37,0,0,9,67,33,85,192,107,57,137,0,10,67,36,245,193,140,13,58,13,0,14,69,16,148,
212,72,240,72,124,89,47,34,139,0,10,67,4,117,69,141,81,57,137,0,0,11,67,4,193,88,35,55,124,49,
89,0,0,18,71,36,229,5,72,209,78,80,113,50,47,131,65,13,50,47,0,10,67,16,18,83,72,141,124,89,
0,0,10,199,77,64,84,37,53,9,12,17,12,201,12,245,20,60,227,79,85,66,0,15,19,71,4,84,212,32,
85,9,12,122,89,87,6,122,47,124,49,0,103,0,10,67,76,181,65,89,49,137,13,0,8,197,28,22,133,8,
240,17,0,13,69,44,145,82,4,224,49,144,34,13,50,0,19,70,36,225,9,72,80,212,124,50,72,114,34,6,
122,49,47,0,103,9,198,36,225,9,72,80,212,67,9,198,12,243,148,72,16,212,36,10,198,12,243,148,72,16,
212,65,47,19,70,4,36,212,72,16,212,119,71,89,47,34,6,35,49,47,0,36,18,70,4,36,212,72,16,212,
35,71,89,47,34,35,49,47,0,46,0,11,68,40,243,129,32,75,139,50,13,0,11,68,16,147,129,32,72,140,
50,13,0,18,72,44,19,7,60,244,140,36,80,49,35,55,81,146,55,37,0,9,198,65,35,199,72,84,211,36,
18,70,65,35,199,72,84,211,48,34,126,81,34,122,89,0,103,46,17,70,65,35,199,72,84,211,48,34,139,81,
34,122,89,0,46,19,70,40,19,1,64,83,143,107,121,55,13,48,6,141,50,38,139,0,18,70,5,48,133,77,
67,211,35,89,71,6,122,89,47,13,89,0,0,19,71,76,50,5,52,21,9,12,89,49,13,65,35,47,124,49,
0,103,20,71,52,85,1,8,243,9,12,65,122,47,13,71,6,126,55,124,49,0,13,3,95,109,121,65,57,6,
121,50,65,130,0,14,3,95,115,105,89,6,124,68,107,13,55,13,0,0,11,200,24,244,133,76,128,68,61,112,
66,14,67,28,134,128,81,124,81,13,107,131,47,89,0,0,20,5,119,101,39,118,101,58,132,84,107,35,72,0,
78,81,104,97,100,32,13,5,119,101,39,118,101,58,132,84,0,72,35,16,70,72,19,69,76,84,192,34,35,65,
13,89,132,88,0,14,70,80,129,82,52,244,192,87,131,65,13,89,0,19,70,21,128,213,76,84,192,122,49,89,
49,57,6,137,89,125,88,0,0,21,6,121,111,117,39,118,101,57,137,84,107,35,72,0,78,81,104,97,100,32,
14,6,121,111,117,39,118,101,57,137,84,0,72,35,0,9,198,80,131,210,20,21,64,17,12,68,72,81,201,76,
34,132,75,113,89,0,15,69,72,240,149,77,64,34,139,71,6,129,89,47,0,12,68,64,84,149,76,48,13,34,
137,88,0,8,197,61,85,16,85,64,65,14,69,52,84,133,77,64,65,144,34,13,89,47,0,13,69,52,16,200,
21,64,65,35,91,6,141,0,14,69,44,147,133,13,64,49,113,50,122,49,47,0,12,68,24,144,213,76,83,140,
49,13,89,0,8,197,21,132,15,73,64,36,9,197,21,132,15,73,64,65,47,11,68,4,194,65,76,141,55,144,
89,0,0,15,70,77,2,78,4,50,0,89,48,124,50,113,76,0,18,71,20,69,193,72,66,65,56,122,72,58,
6,135,72,144,50,0,18,72,12,128,78,28,83,9,56,112,76,141,50,75,55,124,68,0,0,12,68,76,224,70,
84,89,50,35,83,137,0,0,11,68,64,147,143,80,48,132,50,139,0,0,14,70,76,147,194,33,195,128,91,13,
84,133,50,0,14,69,100,241,213,73,64,57,139,81,114,47,0,103,14,69,88,145,206,21,64,84,113,50,57,122,
47,0,16,70,80,83,5,64,131,206,47,122,55,113,83,139,50,0,14,69,80,19,5,57,64,47,35,55,13,50,
47,0,12,69,76,244,130,21,64,89,135,71,141,0,12,68,48,20,211,60,55,35,89,139,0,103,12,68,48,20,
211,60,55,35,89,6,137,0,12,67,28,242,78,4,81,139,113,50,0,46,6,195,21,52,14,13,0,0,23,72,
88,243,11,77,112,71,20,224,84,6,139,55,49,89,84,4,121,81,13,50,0,22,72,12,244,5,56,128,71,20,
224,49,139,48,13,50,107,6,141,81,13,50,0,22,72,72,84,21,80,21,9,60,224,34,122,48,57,137,47,6,
141,91,13,50,0,14,69,13,33,84,36,224,49,34,132,19,42,0,103,16,71,5,80,133,72,114,78,20,139,71,
114,90,132,50,0,21,72,4,48,213,76,21,9,60,224,35,49,57,137,88,6,141,91,13,50,0,13,67,13,68,
140,49,13,50,47,34,139,55,0,9,3,95,108,111,55,6,138,0,0,9,198,4,67,204,64,133,83,17,13,4,
95,51,48,111,87,6,150,47,144,0,105,12,4,95,51,48,111,87,6,131,47,144,0,0,11,200,76,80,129,77,
67,208,60,192,17,0,21,72,4,229,9,80,129,83,37,48,35,50,47,6,124,87,13,89,124,89,0,0,17,71,
44,148,139,12,19,4,100,49,150,49,6,126,72,37,0,0,10,67,4,211,203,119,65,126,49,0,0,13,69,28,
244,208,20,192,81,126,89,48,118,0,19,71,20,229,133,48,244,5,76,121,50,84,13,55,139,48,89,0,103,18,
71,20,229,133,48,244,5,76,122,50,84,13,55,139,48,89,0,12,69,12,128,80,20,192,76,35,48,118,0,5,
194,96,192,13,12,3,95,116,97,47,6,35,65,113,55,0,0,16,70,65,33,78,80,144,197,48,34,122,50,108,
124,89,0,8,67,100,80,64,57,141,0,15,70,56,80,203,48,16,197,50,122,49,55,13,89,0,9,198,4,229,
9,8,241,25,65,11,67,76,52,201,89,49,129,88,37,0,0,14,68,80,129,83,20,86,132,88,0,72,34,10,
46,10,198,80,244,141,20,229,0,66,36,9,198,80,244,141,20,229,0,65,14,70,76,129,66,4,225,192,91,125,
71,35,68,0,15,70,64,20,212,36,225,192,48,141,89,47,124,68,0,14,70,56,245,8,36,225,192,50,129,87,
124,68,0,13,70,52,20,147,32,19,12,65,130,91,118,0,11,68,48,192,77,4,55,121,65,13,0,11,68,32,
84,143,20,107,144,34,139,0,0,0,15,70,92,80,144,4,113,64,58,122,71,48,141,75,0,14,70,76,51,213,
72,113,64,89,49,151,75,0,105,13,70,76,51,213,72,113,64,89,49,131,75,0,16,70,72,243,65,56,49,64,
34,139,65,6,35,50,89,0,15,70,72,85,133,72,145,64,34,122,84,13,34,37,0,9,198,64,20,148,4,177,
64,66,15,70,61,97,82,4,113,64,139,84,13,44,141,75,0,9,198,61,85,3,60,209,64,65,14,70,56,80,
203,80,145,64,50,122,49,47,140,0,14,70,52,147,5,4,113,64,65,140,55,113,75,0,16,70,48,147,133,4,
113,64,55,124,50,124,38,125,75,0,14,70,29,35,213,64,145,64,81,34,137,48,37,0,16,70,16,85,143,80,
81,64,72,122,84,139,47,6,132,0,14,70,12,243,12,20,113,64,49,126,55,113,75,0,15,70,12,20,18,36,
49,64,49,119,48,34,132,89,0,15,70,5,97,82,4,113,64,35,84,14,34,113,75,0,15,70,5,50,193,56,
49,64,119,89,49,120,50,89,0,13,3,95,116,101,47,6,122,55,40,81,40,0,0,9,67,44,144,64,49,132,
119,0,6,195,12,144,64,13,0,12,68,52,20,137,4,65,119,34,132,13,0,11,68,12,148,131,20,89,131,89,
37,0,13,202,84,225,5,72,48,82,72,144,71,20,65,18,71,76,244,1,64,147,12,4,89,139,48,13,48,6,
132,13,0,9,198,52,19,139,36,225,0,66,11,68,48,83,147,20,55,122,50,88,0,18,71,36,225,129,57,66,
76,20,124,50,83,13,50,47,140,55,0,19,71,33,148,5,72,35,204,20,107,140,48,6,131,71,13,55,37,0,
19,71,33,148,5,72,35,204,4,107,140,48,6,131,71,13,55,13,0,12,68,20,69,67,20,113,72,57,137,89,
0,17,71,5,96,76,4,224,200,20,35,84,13,55,120,50,91,0,0,18,72,56,145,200,81,64,66,48,80,50,
140,19,47,141,71,118,0,0,9,198,80,83,147,36,193,64,16,14,70,52,148,211,36,193,64,65,124,89,118,0,
103,9,198,32,244,212,36,193,64,16,9,198,24,84,148,36,193,64,16,9,198,17,80,212,36,193,64,16,12,70,
64,244,147,12,129,64,48,136,91,0,14,70,56,85,137,48,193,64,50,122,84,124,55,0,15,70,21,66,69,56,
225,64,122,47,124,6,122,50,0,13,70,12,129,65,16,193,64,76,132,72,118,0,15,70,104,84,16,60,193,64,
88,122,48,13,55,37,0,9,198,85,1,210,4,65,64,36,10,198,85,1,210,4,65,64,65,47,16,70,65,33,
76,84,65,64,48,34,141,55,137,72,0,103,16,70,65,33,76,84,65,64,48,34,122,55,57,137,72,0,9,198,
64,19,129,12,129,64,17,20,67,52,18,78,65,6,141,50,89,47,34,4,132,47,0,81,115,116,32,10,67,16,
242,78,72,137,124,50,0,15,70,12,128,82,4,65,64,91,119,34,141,72,0,103,14,70,12,128,82,4,65,64,
91,119,34,121,72,0,17,70,12,19,26,60,225,64,49,35,55,88,6,139,50,37,0,9,198,5,53,18,36,65,
64,17,0,12,68,48,80,78,56,55,132,6,35,50,0,6,195,76,17,64,13,0,14,69,45,148,135,101,160,49,
131,34,81,124,88,0,0,19,71,65,33,67,20,65,78,80,48,34,122,89,113,72,13,50,47,0,10,199,12,243,
134,36,64,78,80,15,0,11,200,84,225,5,73,115,210,48,64,65,13,69,4,66,69,85,128,119,72,57,137,88,
0,0,0,0,0,0,9,67,92,146,64,58,132,12,0,21,72,16,145,76,20,53,18,36,48,72,147,55,6,122,
49,47,34,124,49,0,0,11,5,119,101,39,114,101,2,58,145,0,8,197,52,145,1,37,32,66,14,69,21,32,
83,21,32,113,34,141,89,114,0,103,13,69,21,32,83,21,32,113,34,141,88,114,0,11,69,17,32,87,21,32,
72,34,135,0,9,67,12,243,208,49,137,48,0,13,69,12,195,211,21,32,49,55,139,89,114,0,0,13,6,121,
111,117,39,114,101,2,57,146,0,106,12,6,121,111,117,39,114,101,2,57,135,0,12,68,20,66,67,80,132,72,
124,49,47,0,0,14,69,80,16,140,21,64,47,35,71,55,13,47,0,14,70,80,16,140,20,21,64,47,35,71,
55,139,0,13,69,77,84,133,77,64,91,146,13,89,47,0,12,69,76,16,200,21,64,89,35,91,141,0,15,69,
36,228,197,73,64,124,50,89,6,131,47,0,36,14,69,36,228,197,73,64,124,50,89,131,47,0,47,14,69,36,
225,9,13,64,124,50,72,6,140,47,0,15,69,21,48,207,73,64,122,89,49,6,135,47,0,36,12,69,12,128,
76,21,64,91,35,55,141,0,12,69,12,16,200,21,64,49,35,91,141,0,14,69,8,197,69,77,64,71,55,137,
13,89,47,0,14,69,4,195,79,77,64,133,55,65,139,89,47,0,14,69,4,35,5,77,64,141,71,55,13,89,
47,0,0,15,70,5,69,15,72,225,89,119,47,151,50,37,0,105,14,70,5,69,15,72,225,89,119,47,131,50,
37,0,0,12,69,72,20,9,21,32,34,141,48,145,0,13,69,33,84,211,5,32,107,129,88,6,130,0,12,69,
12,245,71,5,32,49,137,81,114,0,15,70,12,16,129,72,85,0,49,35,71,13,34,141,0,4,193,228,43,0,
20,72,64,84,147,21,2,15,56,80,48,114,89,6,122,83,13,50,37,0,12,68,8,16,213,64,71,141,49,13,
48,0,16,71,92,82,18,52,16,200,80,84,143,65,35,101,47,0,17,72,76,16,195,32,20,137,56,80,89,35,
49,114,124,50,0,22,73,72,84,197,73,96,84,36,243,128,34,122,88,114,84,6,141,91,13,50,0,12,68,64,
147,15,80,48,140,55,13,47,0,23,73,16,80,204,5,32,84,36,243,128,72,122,49,55,13,6,34,141,91,13,
50,0,18,72,12,243,12,5,32,143,56,80,49,126,55,114,71,139,50,0,0,15,70,13,66,21,48,133,64,49,
14,87,137,105,137,0,14,69,77,69,65,73,64,89,47,137,114,47,0,103,14,69,77,69,65,73,64,89,47,57,
137,114,47,0,14,69,76,80,210,21,64,89,132,49,34,13,47,0,13,69,72,21,197,77,64,34,133,13,89,47,
0,14,69,65,84,137,77,64,48,57,146,124,89,47,0,14,69,64,21,5,57,64,48,35,19,42,47,0,103,15,
69,16,145,197,77,64,72,140,75,122,89,47,0,37,14,69,16,81,133,13,64,72,132,83,122,49,47,0,13,69,
9,81,134,21,64,71,129,83,141,0,37,21,73,4,196,8,4,33,84,37,161,64,35,55,83,13,71,13,47,140,
88,0,14,69,4,69,133,73,64,119,72,84,131,47,0,36,14,69,4,65,9,13,64,35,72,124,49,47,0,47,
16,69,4,36,197,57,64,35,71,89,6,122,50,47,0,36,0,13,67,92,131,192,4,107,137,0,32,8,10,47,
9,67,4,67,192,119,72,137,0,0,12,4,119,101,39,100,58,132,72,0,72,35,16,70,52,18,13,61,81,0,
65,35,101,65,6,137,72,0,11,199,12,132,137,77,66,78,20,103,66,16,71,12,21,8,21,34,78,20,49,35,
87,34,113,50,0,15,70,81,114,76,36,114,20,47,58,140,55,140,47,0,18,71,36,229,5,77,66,78,20,113,
50,47,122,89,47,125,50,0,0,22,72,92,147,8,20,195,73,56,16,58,124,55,107,13,55,65,6,132,50,13,
0,18,70,76,20,129,40,85,143,89,35,34,119,57,6,141,84,139,0,24,73,92,244,139,77,64,84,36,243,128,
58,6,151,49,89,47,4,141,91,13,50,0,105,23,73,92,244,139,77,64,84,36,243,128,58,6,131,49,89,47,
4,141,91,13,50,0,15,70,77,1,67,36,245,83,89,48,132,91,13,89,0,24,73,16,85,5,77,64,84,36,
243,128,72,124,47,4,122,89,47,6,141,91,13,50,0,23,73,12,243,148,72,20,20,36,243,128,49,13,50,47,
34,6,35,48,91,13,50,0,6,195,36,149,67,13,0,10,199,16,145,201,80,19,9,76,15,0,0,0,13,68,
32,83,9,96,107,132,55,124,49,89,0,0,9,67,36,115,210,132,81,136,0,7,196,36,100,143,28,20,0,17,
69,32,21,137,56,112,4,107,35,84,124,68,0,10,35,46,10,67,77,86,153,89,137,88,37,0,15,70,48,21,
210,20,224,197,55,126,34,13,50,89,0,10,198,64,83,154,4,224,197,15,66,17,71,72,84,197,73,99,201,72,
34,122,88,114,84,58,130,0,18,70,20,229,18,4,224,197,122,50,47,34,6,120,50,89,0,36,10,198,20,229,
18,4,224,197,65,47,15,70,12,243,77,20,224,197,49,13,65,122,50,89,0,0,12,68,80,147,4,20,47,124,
55,72,13,0,12,68,76,53,66,4,89,49,137,71,13,0,11,68,13,33,80,20,49,34,141,48,0,0,12,69,
40,243,133,76,80,75,139,50,88,0,12,69,21,97,84,80,80,113,84,122,47,0,8,197,16,18,207,80,16,17,
16,69,8,241,207,80,16,71,139,81,13,47,6,121,0,103,15,69,8,241,207,80,16,71,126,81,13,47,6,121,
0,8,197,84,229,201,76,80,66,14,69,76,19,9,56,80,89,141,55,132,50,0,103,13,69,76,19,9,56,80,
89,141,55,140,50,0,13,69,72,80,68,52,80,34,132,72,65,132,0,12,69,61,85,1,28,80,138,47,113,75,
0,13,69,36,229,1,44,80,124,50,108,141,49,0,8,197,28,19,15,72,80,17,16,69,25,84,143,72,80,83,
57,137,34,6,133,34,37,0,12,201,4,208,137,16,86,20,72,245,83,67,0,17,70,77,1,67,36,209,78,89,
48,122,89,113,65,13,50,0,8,67,64,80,82,48,143,0,0,12,68,40,16,207,8,75,141,49,13,71,0,13,
69,52,147,137,56,112,65,140,50,124,68,0,16,70,18,37,5,57,65,64,72,141,47,6,126,50,47,0,14,69,
12,241,206,4,48,49,126,50,57,35,49,0,14,69,4,224,76,60,112,35,50,13,55,126,81,0,0,15,71,12,
128,82,48,245,20,20,91,130,55,13,47,0,10,199,25,37,83,81,32,84,20,66,20,71,21,131,206,21,32,84,
20,122,81,88,6,126,50,13,34,141,47,0,7,196,21,130,76,20,65,17,71,21,66,81,84,85,20,20,122,47,
125,49,13,47,0,103,10,199,21,66,81,84,85,20,20,65,18,71,16,148,208,5,32,84,20,72,124,89,48,13,
34,13,47,0,0,13,69,80,84,133,76,80,47,13,34,141,88,0,14,69,56,17,9,56,80,50,141,72,6,132,
50,0,13,69,52,20,131,36,16,65,130,91,13,0,103,13,69,16,83,137,76,80,72,13,50,132,89,0,11,69,
5,32,200,36,80,130,76,37,0,14,69,84,224,66,48,80,129,50,6,141,71,118,0,13,69,80,243,129,28,80,
47,129,50,124,75,0,14,69,77,81,82,80,80,89,58,143,34,47,141,0,13,69,76,242,82,20,80,89,58,121,
34,141,0,14,69,52,148,129,28,80,65,114,34,121,90,0,103,13,69,52,148,129,28,80,65,124,34,121,90,0,
8,197,52,20,193,48,16,17,14,69,28,20,129,28,80,81,119,34,121,90,0,103,13,69,24,244,129,28,80,83,
126,34,113,75,0,15,69,21,84,143,64,16,57,146,34,6,139,48,13,0,15,69,12,144,193,16,16,89,125,49,
141,72,13,0,103,9,67,8,20,211,71,141,89,0,13,69,5,32,66,48,80,35,34,119,71,118,0,0,9,67,
36,18,78,132,13,50,0,12,201,77,80,143,72,66,78,5,65,64,66,17,70,36,229,5,73,97,78,124,50,47,
114,84,6,132,50,0,22,73,8,20,130,37,69,82,5,65,64,71,130,71,6,124,76,146,34,13,47,0,0,15,
69,80,243,65,80,240,47,13,65,141,47,139,0,103,16,70,60,36,212,4,51,5,126,71,89,47,13,49,118,0,
10,67,20,213,64,132,65,57,137,0,12,3,95,122,104,76,6,140,50,132,88,0,0,0,13,202,69,80,68,72,
147,1,80,84,129,48,67,15,71,13,35,201,77,48,78,80,49,58,121,89,153,0,23,73,12,243,80,21,66,84,
36,243,128,49,126,65,48,13,47,6,124,91,13,50,0,13,68,12,19,9,96,49,141,55,124,49,89,0,0,16,
70,81,34,80,60,194,64,47,34,124,48,13,55,37,0,18,71,36,229,133,72,225,83,76,124,50,84,114,50,6,
122,89,0,15,70,80,84,141,36,226,64,47,131,65,124,50,140,0,0,13,68,28,16,143,56,81,119,71,139,50,
0,103,12,68,28,16,143,56,81,35,71,126,50,0,12,68,64,17,193,56,48,141,81,13,50,0,0,18,8,115,
104,97,108,108,110,39,116,4,91,121,50,47,0,32,10,12,68,8,19,66,36,71,35,65,71,132,0,19,71,4,
229,9,64,21,8,100,35,50,47,6,124,48,13,87,37,0,0,17,70,77,1,67,36,98,67,89,48,13,89,124,
83,124,49,0,20,71,76,147,131,21,33,83,80,89,124,50,89,6,144,34,13,89,47,0,0,20,72,5,35,83,
48,83,135,80,128,4,130,65,88,55,6,122,68,87,0,15,70,4,84,143,28,83,0,143,34,139,75,122,55,0,
0,16,70,9,35,195,12,243,9,71,34,126,49,13,55,37,0,0,13,69,24,243,7,21,32,83,139,55,75,114,
0,12,69,16,85,15,85,32,72,132,108,146,0,15,6,95,114,111,109,97,110,34,139,65,13,50,10,0,0,13,
68,81,83,9,64,47,57,137,55,124,48,0,0,13,68,8,83,15,92,71,124,55,139,0,74,10,8,197,61,85,
12,21,64,65,14,70,12,243,15,56,83,0,49,151,50,118,0,105,13,70,12,243,15,56,83,0,49,131,50,118,
0,13,69,12,128,82,37,64,76,35,34,124,47,0,0,11,68,12,243,143,72,49,126,50,114,0,9,67,4,214,
64,141,65,37,0,0,12,69,8,21,77,21,32,71,138,65,114,0,13,69,100,84,211,37,32,57,122,89,89,131,
0,11,69,65,32,89,21,32,48,34,143,0,12,69,12,244,9,21,32,49,126,48,145,0,12,69,12,17,83,5,
32,89,132,88,114,0,10,67,8,84,212,71,122,89,47,0,0,20,72,48,149,5,72,21,21,72,80,55,124,47,
114,34,13,76,114,0,103,18,72,48,149,5,72,21,21,72,80,55,124,47,34,125,76,114,0,22,72,16,147,73,
57,85,9,88,80,72,125,65,124,50,57,137,47,124,84,0,103,0,15,69,16,241,83,57,64,72,129,88,13,50,
47,0,32,14,3,95,116,105,47,113,71,6,122,47,13,50,0,0,12,68,16,85,137,56,72,122,84,124,50,0,
14,70,8,84,139,20,193,89,71,131,49,55,37,0,15,70,48,85,8,5,33,217,55,122,87,114,75,37,0,9,
3,95,116,104,47,6,140,0,0,14,70,8,84,151,36,50,192,71,122,34,124,49,0,15,70,88,147,133,100,20,
132,84,124,50,57,114,72,0,14,70,76,129,80,32,84,132,91,122,48,114,72,0,10,199,76,83,73,9,33,86,
20,65,10,199,64,19,12,4,66,85,52,17,15,204,56,245,23,37,66,19,80,19,132,36,225,192,67,15,70,32,
84,133,24,244,132,107,131,83,114,72,0,103,20,71,4,197,77,36,226,85,52,35,55,57,117,65,6,124,50,144,
65,0,6,195,4,68,204,13,0,6,18,66,108,0,114,0,7,6,18,67,105,0,121,0,7,6,18,68,97,0,
105,0,111,0,117,0,7,6,18,70,99,0,103,0,107,0,7,6,18,71,115,0,122,0,7,6,18,72,98,69,
0,100,69,0,108,69,0,110,69,0,98,0,100,0,103,0,109,0,110,0,114,0,7,6,18,73,116,0,100,0,
115,0,122,0,110,0,120,0,7,6,18,75,103,114,97,112,104,0,115,99,111,112,0,108,111,103,0,109,101,116,
0,7,6,20,0,251,0,0,102,0,102,0,1,251,0,0,102,0,105,0,2,251,0,0,102,0,108,0,0,0,
0,0,6,97,98,0,4,2,111,108,105,116,3,4,35,71,0,8,2,111,114,105,0,115,101,8,2,110,116,17,
67,3,4,35,71,89,13,0,101,114,8,2,21,3,4,35,71,114,0,2,117,108,97,114,3,6,35,71,0,4,
8,110,101,2,108,3,6,141,71,0,8,110,117,2,108,101,0,8,115,105,100,2,108,101,0,108,105,110,103,3,
6,141,71,55,124,68,0,108,101,1,116,99,21,2,32,3,8,13,71,118,0,97,100,1,21,2,32,3,8,119,
71,35,72,0,1,17,67,2,105,108,105,116,12,3,13,71,0,105,108,105,116,121,1,10,2,14,128,139,135,3,
13,71,6,124,55,113,47,2,37,0,105,108,105,116,105,101,115,1,10,2,14,128,139,137,3,13,71,6,124,55,
113,47,2,37,88,0,4,108,121,1,10,2,32,14,128,171,132,3,13,71,55,2,124,0,108,121,1,99,10,2,
32,14,128,168,132,0,108,121,1,110,105,109,2,32,0,4,108,101,1,10,2,32,14,128,139,132,3,13,71,118,
0,108,101,1,99,10,2,32,0,108,101,1,110,105,109,2,32,0,108,101,1,116,101,2,32,14,128,128,132,0,
4,1,98,2,121,108,3,35,71,0,2,97,99,17,65,0,2,97,116,116,0,2,106,101,99,116,0,2,108,97,
116,105,118,0,2,110,101,103,0,2,114,111,103,0,2,114,117,99,0,2,115,99,101,0,2,115,101,105,0,2,
115,111,108,117,0,2,115,116,105,0,8,2,100,0,8,2,105,0,8,2,114,97,99,0,8,2,115,101,110,0,
98,8,0,98,111,8,3,35,71,13,0,101,114,1,17,67,2,21,3,35,71,114,0,4,8,2,21,3,119,71,
0,8,2,100,117,99,0,8,2,105,100,101,0,8,2,114,97,0,98,8,2,114,101,118,0,111,118,101,8,2,
21,14,128,132,133,3,119,71,4,129,84,0,101,114,8,2,114,97,110,3,119,71,122,0,4,1,17,67,29,2,
108,101,3,141,71,0,1,98,2,121,0,1,108,2,111,117,114,0,1,116,115,2,105,108,0,8,2,114,97,109,
0,8,108,2,105,0,108,121,3,141,71,55,124,0,101,114,8,115,2,21,3,141,71,114,0,4,101,108,8,3,
141,71,118,0,108,101,0,108,101,1,10,2,32,28,17,0,7,6,97,99,0,2,99,101,110,116,117,3,2,35,
49,0,2,113,117,105,101,3,4,35,0,4,2,97,32,3,6,35,49,0,2,116,111,114,121,0,2,116,117,114,
101,0,2,117,108,97,114,0,99,105,2,32,3,6,121,76,37,0,2,114,117,109,32,3,6,141,49,0,104,105,
97,3,6,141,91,13,0,101,97,110,2,32,3,6,141,91,13,50,0,105,111,117,115,3,6,141,91,13,89,0,
1,114,99,2,121,32,3,8,13,89,0,1,10,2,108,101,32,3,13,49,0,114,101,1,115,115,97,109,3,13,
49,114,0,4,1,10,2,121,32,3,13,89,0,1,102,2,105,108,105,116,0,1,108,112,2,101,98,0,8,108,
112,2,101,110,116,0,104,105,1,109,2,110,17,65,13,3,13,91,132,0,4,2,99,101,110,116,3,35,49,0,
2,99,105,100,0,2,111,110,0,2,114,111,0,2,117,109,0,2,117,112,0,8,2,111,0,8,2,114,105,0,
8,2,116,0,99,2,111,108,0,104,2,114,111,109,0,107,8,0,97,2,100,101,109,3,35,49,13,0,114,111,
1,109,2,21,3,35,49,34,13,0,110,101,3,35,49,50,124,0,99,117,2,114,97,3,35,49,57,117,0,109,
101,3,35,49,65,124,0,116,117,2,17,65,3,35,49,76,137,0,104,105,110,97,1,109,2,116,3,35,49,113,
50,141,0,4,2,101,114,98,3,35,89,0,2,105,100,32,0,4,101,8,2,116,3,35,89,124,0,101,8,109,
2,100,0,4,1,108,112,2,97,116,3,119,49,0,8,2,21,0,99,8,2,21,0,104,1,114,116,2,101,0,
107,8,2,110,0,97,2,100,101,109,121,3,119,49,35,0,99,117,115,2,17,65,3,119,49,57,137,88,0,113,
117,8,3,119,49,58,0,99,8,2,101,3,119,49,89,0,4,99,111,117,2,116,3,119,49,137,0,111,117,2,
115,116,0,104,8,3,119,76,0,4,8,2,101,3,119,89,0,8,2,101,114,98,105,0,8,2,105,0,4,101,
8,2,116,105,3,119,89,132,0,101,8,114,2,109,0,101,117,1,109,114,97,104,112,3,119,89,137,0,104,8,
98,3,121,49,0,4,104,101,114,1,98,2,32,3,121,49,114,0,104,101,114,1,109,2,32,0,104,1,98,2,
32,3,121,101,0,4,1,102,114,117,2,101,32,3,124,89,0,1,108,97,2,101,32,0,1,108,111,115,2,101,
32,0,1,109,105,2,101,32,0,1,110,21,2,101,32,0,1,114,114,2,101,32,0,101,2,32,28,18,3,125,
89,0,104,1,121,2,116,3,126,0,4,1,118,2,97,3,141,49,0,2,111,114,110,0,5,3,8,108,112,2,
97,116,0,8,98,2,111,0,104,101,1,100,2,32,0,104,101,1,104,2,32,0,104,101,1,107,2,32,0,104,
101,1,114,2,32,0,104,101,1,116,114,2,32,0,104,101,1,121,2,32,0,104,101,8,2,12,0,4,104,101,
115,1,100,2,32,3,141,49,89,0,104,101,115,1,104,2,32,0,104,101,115,1,107,2,32,0,104,101,115,1,
114,2,32,0,104,101,115,1,116,114,2,32,0,114,101,8,3,141,49,114,0,4,1,112,115,2,101,13,3,141,
89,0,8,114,2,105,115,0,101,2,32,0,101,8,114,0,7,6,97,100,0,111,8,115,2,109,97,3,4,141,
72,139,0,1,115,117,114,99,3,6,141,72,0,1,108,97,109,2,121,3,13,72,0,105,111,8,114,2,21,14,
128,132,133,3,34,4,141,72,124,2,139,0,2,106,117,116,97,110,3,35,0,4,1,108,103,2,105,3,35,72,
0,1,114,2,105,99,0,1,120,101,104,2,101,0,2,97,103,0,2,97,109,0,2,101,110,0,2,101,113,0,
2,106,117,110,99,116,32,0,2,109,97,110,32,0,2,109,105,110,32,0,2,109,105,114,97,0,2,111,108,0,
2,111,110,0,2,117,108,97,0,2,118,101,110,116,0,2,118,101,114,0,2,118,101,114,116,32,0,8,2,105,
0,8,2,108,0,8,2,111,114,97,116,0,8,2,114,105,21,0,8,2,117,109,0,100,2,101,114,0,100,2,
105,116,105,118,0,100,8,0,100,8,2,108,0,101,1,108,2,115,104,3,35,72,6,122,0,111,2,108,101,115,
3,35,72,13,0,118,111,8,3,35,72,84,13,0,101,113,117,97,3,35,72,124,49,58,13,0,117,5,3,2,
108,97,3,35,75,13,0,106,101,99,3,35,75,122,49,0,4,2,118,101,110,116,117,3,119,72,0,2,118,101,
114,116,0,8,2,21,0,8,114,116,2,105,116,0,100,8,2,101,110,100,0,100,8,2,105,99,116,0,100,8,
2,105,116,105,111,0,100,8,2,114,0,100,8,2,117,0,97,1,99,2,118,101,114,3,119,72,35,0,106,8,
3,119,75,0,1,117,113,3,126,72,0,4,1,98,2,111,115,32,3,141,72,0,1,99,2,101,110,99,0,1,
108,2,101,110,0,1,108,2,121,0,1,110,114,111,116,0,1,114,99,2,108,0,1,115,2,105,115,0,2,105,
17,65,0,2,108,101,32,0,8,108,98,2,101,13,0,8,114,2,18,68,0,105,1,114,2,111,18,75,12,3,
141,72,124,0,7,6,97,102,0,1,21,2,116,101,114,3,6,120,83,0,4,2,114,105,3,35,83,0,8,2,
103,0,102,2,97,98,0,102,2,101,114,0,102,2,108,117,0,114,111,8,3,35,83,34,139,0,4,2,101,97,
3,119,83,0,8,2,21,0,102,8,2,21,0,111,114,101,3,119,83,136,0,102,105,97,8,3,119,83,147,0,
4,2,116,12,3,120,83,0,102,1,116,115,0,102,1,119,3,126,83,0,7,6,97,103,0,8,116,110,97,3,
6,35,81,0,117,97,2,32,3,6,35,81,57,137,13,0,105,111,2,32,3,6,121,75,124,139,0,2,97,32,
3,6,121,81,0,117,97,5,3,2,32,3,6,121,81,58,13,0,105,2,32,3,6,121,81,124,0,4,1,103,
110,2,101,32,3,6,141,75,0,1,114,110,101,2,101,32,0,101,1,103,2,109,101,110,116,0,1,109,2,101,
110,116,97,3,13,75,0,1,10,2,111,110,32,3,13,81,0,4,8,108,102,2,101,108,3,35,75,0,8,114,
116,0,4,103,8,2,114,97,118,3,35,81,0,103,8,2,114,101,103,0,4,101,110,8,100,3,35,81,13,50,
0,111,110,1,114,100,0,111,110,1,119,2,12,0,4,101,1,21,2,32,3,113,75,0,101,1,21,2,109,101,
110,116,0,101,1,112,112,2,32,0,101,114,1,21,2,32,14,128,128,129,3,114,0,101,114,115,1,21,2,32,
14,128,128,130,3,114,88,0,4,2,101,110,100,3,119,75,0,8,109,2,101,108,108,0,4,2,114,101,101,3,
119,81,0,8,2,108,21,0,8,2,111,32,0,8,2,114,111,110,0,103,2,114,101,115,0,103,2,114,105,101,
118,0,103,8,2,21,0,104,2,32,3,121,81,0,101,110,1,104,10,2,32,3,121,81,13,50,0,4,1,116,
110,111,109,2,101,32,3,121,90,0,101,1,108,102,2,32,0,4,1,110,101,101,116,2,101,3,141,75,0,1,
114,101,100,2,101,32,0,1,114,116,117,111,2,101,32,0,1,116,115,2,101,0,8,2,101,0,8,2,105,115,
0,101,1,21,2,32,28,17,0,101,1,99,2,32,0,101,1,99,98,0,101,1,99,100,0,101,1,112,17,67,
2,32,0,101,8,2,105,0,101,8,2,108,0,105,1,116,2,111,0,105,97,8,108,112,3,141,75,13,0,4,
1,108,102,2,114,97,110,3,141,81,0,1,114,102,2,114,0,1,118,2,114,97,0,2,111,32,0,117,101,0,
7,6,97,105,0,4,1,21,2,17,67,97,32,3,6,141,0,1,116,110,101,2,108,0,1,116,114,117,99,2,
108,0,103,2,110,0,110,1,100,2,32,3,6,141,50,0,110,101,100,1,100,2,32,3,6,141,50,72,0,115,
101,2,32,3,6,141,88,0,4,99,2,32,3,6,141,124,49,0,99,2,97,108,0,4,114,101,3,6,143,0,
114,101,1,21,2,32,0,4,1,108,108,105,118,3,13,0,1,116,102,0,1,116,105,114,98,0,1,116,114,117,
99,0,8,116,114,101,99,0,4,115,8,2,108,105,3,35,91,0,115,8,99,2,108,0,1,115,2,100,3,122,
0,4,1,10,2,110,32,28,18,3,124,0,1,103,114,97,98,0,1,108,112,97,0,1,108,114,101,98,0,1,
116,110,117,111,0,1,116,112,0,1,114,116,114,111,112,2,116,3,125,0,4,2,32,3,140,0,2,105,0,8,
107,0,1,110,2,118,3,140,6,132,0,4,3,141,0,1,119,2,115,17,67,32,0,8,0,115,1,108,21,2,
32,0,101,3,141,13,0,2,115,17,67,32,3,141,124,0,4,114,3,143,0,114,8,0,7,6,97,108,0,1,
109,2,110,111,3,2,35,55,0,108,121,1,21,2,32,14,128,128,130,3,2,37,0,2,109,105,103,3,2,126,
55,0,8,2,114,3,2,133,55,0,2,105,116,121,3,6,35,55,0,100,101,2,104,121,3,6,35,55,72,124,
0,103,105,97,1,21,2,32,3,6,35,55,75,13,0,4,1,122,110,111,103,3,6,121,55,0,2,105,32,0,
97,110,100,1,21,2,32,3,8,13,55,119,50,72,0,4,1,10,2,105,17,66,97,116,105,3,13,55,0,1,
10,2,105,17,66,101,0,1,10,2,105,115,17,67,105,99,0,1,10,2,111,117,115,32,0,1,115,2,117,116,
0,1,117,113,101,0,1,118,17,65,2,101,110,0,8,112,111,2,101,115,0,97,121,1,109,3,13,55,6,141,
0,105,1,10,2,115,17,67,32,3,13,55,124,0,111,1,10,2,32,3,13,55,139,0,101,105,1,107,2,100,
3,13,55,140,0,4,5,3,1,99,2,102,3,35,0,5,3,1,104,2,102,0,5,3,1,104,2,118,0,4,
1,29,2,101,100,3,35,55,0,1,112,2,101,116,0,1,115,2,117,116,97,0,1,116,101,114,2,105,97,0,
1,118,2,105,97,0,2,116,111,0,2,117,109,32,0,8,2,97,115,116,0,8,2,98,0,8,2,98,97,110,
105,0,8,2,99,0,8,2,103,0,8,2,105,0,8,2,107,0,8,2,112,0,8,2,115,0,8,2,118,0,
8,2,121,0,8,99,2,101,0,108,1,102,2,97,0,108,1,102,2,105,98,0,108,1,116,2,17,65,0,108,
2,101,108,0,108,2,101,114,0,108,2,111,116,114,0,108,8,2,97,0,108,8,2,101,103,0,108,8,2,105,
0,108,8,2,111,0,108,8,17,67,2,111,119,0,108,111,8,2,99,97,3,35,55,13,0,101,110,8,118,2,
116,3,35,55,13,50,0,97,98,97,8,3,35,55,13,71,6,35,0,122,3,35,55,47,89,0,116,105,8,3,
35,55,47,124,0,112,2,104,111,3,35,55,48,0,99,111,2,104,3,35,55,49,13,0,107,97,108,105,3,35,
55,49,13,55,140,0,98,101,114,8,2,116,17,65,3,35,55,71,6,131,0,103,111,8,2,114,3,35,55,81,
13,0,4,102,97,8,3,35,55,83,13,0,112,104,97,0,101,112,104,3,35,55,122,83,0,4,108,101,121,3,
35,55,124,0,108,121,1,116,0,101,120,97,110,8,3,35,55,124,81,88,6,120,50,0,108,121,8,3,35,55,
140,0,4,108,121,1,99,97,2,32,3,55,2,37,0,108,121,1,99,105,21,21,2,32,14,128,128,132,0,4,
1,10,2,32,3,118,0,1,10,2,99,121,32,0,1,10,2,100,32,0,1,10,2,100,114,121,32,0,1,10,
2,116,121,32,0,1,99,105,21,2,32,14,128,128,130,0,114,121,1,10,2,32,3,118,34,2,124,0,4,1,
104,2,117,99,105,110,3,119,55,0,2,111,110,103,0,5,3,8,116,115,2,97,17,67,17,67,105,0,5,8,
1,10,2,32,0,8,2,21,0,8,2,105,103,0,8,99,2,97,109,105,116,0,108,1,104,2,117,99,0,108,
2,101,103,114,0,108,8,2,21,0,108,8,2,105,97,110,0,108,8,2,105,116,101,114,0,108,8,2,111,116,
0,108,8,2,111,119,0,108,101,2,103,101,3,119,55,122,0,101,110,99,8,118,2,105,3,119,55,122,50,91,
0,105,8,2,17,66,101,3,119,55,140,0,4,1,98,2,109,3,121,0,1,99,2,102,0,1,99,2,109,0,
1,104,2,102,0,1,104,2,118,0,1,112,2,109,0,1,115,112,2,109,0,1,117,113,2,109,0,8,2,109,
115,0,4,1,116,115,2,105,110,3,121,55,0,1,116,117,98,2,32,0,4,1,102,2,107,3,126,55,0,1,
102,2,115,0,1,115,2,102,0,1,115,2,116,0,1,117,113,2,21,0,1,119,2,17,67,0,2,116,17,65,
114,0,2,116,32,0,8,2,109,0,8,17,67,2,116,17,65,0,8,99,2,100,0,8,104,2,116,0,108,1,
119,2,17,65,12,0,108,1,119,2,97,0,115,111,3,126,55,89,139,0,4,1,104,99,2,107,3,133,0,1,
116,2,107,0,1,119,2,107,0,4,1,98,2,100,12,3,133,55,0,1,98,2,107,0,1,116,115,2,119,0,
1,116,115,110,105,2,32,0,8,2,98,97,110,0,8,2,100,0,8,2,116,0,8,98,2,115,97,0,108,1,
98,2,25,0,108,1,98,10,2,101,114,32,0,108,1,99,2,25,0,108,1,99,2,105,110,0,108,1,102,0,
108,1,104,2,17,67,0,108,1,109,115,0,108,1,114,104,116,0,108,1,116,0,108,1,116,2,101,0,108,1,
116,115,0,108,1,119,0,108,2,32,0,108,8,2,17,67,21,14,128,132,131,0,108,101,1,119,0,108,101,114,
2,32,3,133,55,114,0,108,101,114,115,2,32,3,133,55,114,88,0,2,116,101,114,110,97,116,111,3,134,55,
0,119,8,3,134,55,58,0,4,1,29,2,105,110,3,141,55,0,2,105,97,0,2,105,101,110,0,8,99,115,
2,97,0,8,104,2,111,0,101,2,32,0,101,2,104,0,7,6,97,109,0,8,2,32,3,2,35,65,0,4,
1,32,15,2,32,3,4,141,6,122,65,0,1,32,32,15,2,32,0,112,116,111,110,3,6,35,65,48,47,13,
50,0,4,2,105,32,3,6,121,65,0,8,108,115,105,0,101,1,115,17,65,2,32,3,6,121,65,122,0,1,
10,2,111,117,115,32,3,8,119,65,0,105,110,101,1,10,2,32,3,8,119,65,132,50,0,4,1,10,2,101,
110,116,3,13,65,0,1,10,2,101,110,116,0,1,10,2,111,32,0,1,100,10,2,32,0,1,100,110,117,2,
101,110,0,1,114,97,99,2,101,108,0,1,115,10,2,32,0,5,35,1,104,10,2,32,24,0,101,1,10,2,
110,116,97,3,13,65,6,122,0,111,110,1,10,2,32,3,13,65,13,50,0,4,1,99,2,101,108,3,35,65,
0,1,99,2,101,114,111,0,1,100,114,101,21,2,32,0,1,108,2,112,108,0,97,116,101,117,114,3,35,65,
13,47,114,0,97,116,101,117,114,5,3,3,35,65,13,76,114,0,97,122,2,111,3,35,65,13,88,0,98,105,
118,3,35,65,71,6,124,84,0,98,105,2,100,3,35,65,71,124,0,112,104,105,98,3,35,65,83,6,124,71,
0,105,108,1,102,3,35,65,124,55,0,4,2,117,115,101,3,119,65,0,8,2,97,108,0,8,2,101,110,0,
8,2,105,100,0,8,2,105,110,111,0,8,2,105,115,115,0,8,2,111,114,17,67,0,8,108,2,101,110,116,
0,8,115,2,97,114,105,0,109,2,101,110,100,0,101,8,2,110,116,3,119,65,122,0,101,114,2,105,99,3,
119,65,122,34,0,4,101,2,110,97,98,3,119,65,132,0,101,8,2,108,0,105,2,103,0,111,101,98,3,119,
65,132,71,0,97,122,3,119,65,141,88,0,4,1,17,67,2,100,3,120,65,0,1,17,67,2,112,108,0,1,
110,21,2,32,3,121,65,0,4,1,102,2,111,117,115,3,141,65,0,1,104,99,2,98,0,8,100,2,105,0,
101,1,108,102,0,101,8,110,0,101,8,114,102,0,7,6,97,110,0,8,114,116,2,115,3,2,35,50,0,115,
102,101,114,1,114,116,3,2,35,50,89,83,131,0,116,105,8,2,21,14,128,132,132,3,4,35,50,47,124,0,
100,117,1,21,2,32,3,4,35,50,72,6,137,0,4,1,21,2,17,67,97,32,3,6,35,50,0,1,103,97,
112,111,114,112,2,100,0,1,110,105,102,2,99,0,2,103,117,108,0,2,116,104,114,111,112,121,0,2,122,97,
0,100,111,2,32,3,6,35,50,72,139,0,97,1,21,2,32,3,6,121,50,13,0,116,101,1,10,2,32,3,
6,121,50,47,141,0,105,1,10,2,32,3,6,121,50,124,0,2,105,97,3,6,141,50,0,105,97,2,99,32,
3,6,141,50,124,35,0,101,97,110,2,32,3,6,141,50,144,50,0,101,111,117,115,1,21,3,6,141,50,144,
89,0,1,99,115,17,65,10,2,32,3,8,13,50,0,97,108,1,10,2,32,3,8,13,50,118,0,105,1,116,
115,21,2,32,14,128,128,129,3,8,37,0,4,1,10,2,32,3,13,50,0,1,10,2,32,28,18,12,0,1,
10,2,99,101,32,0,1,10,2,99,121,0,1,10,2,101,115,101,0,1,10,2,105,101,32,0,1,10,2,105,
101,115,32,0,1,10,2,116,32,0,1,10,2,116,121,32,0,1,10,2,121,32,0,1,98,115,117,2,100,0,
1,104,112,2,97,103,101,0,1,108,10,2,100,0,1,108,17,67,10,2,32,0,1,108,101,109,2,99,104,111,
108,0,1,109,10,2,32,0,1,109,114,101,112,0,1,109,117,104,2,32,0,1,114,21,21,2,32,0,1,118,
108,2,32,0,110,1,10,2,105,101,32,0,105,112,117,1,109,3,13,50,124,48,57,117,0,111,101,117,1,109,
2,118,3,13,50,137,0,4,1,10,2,32,28,17,12,3,35,50,0,1,10,2,99,101,32,28,17,0,1,10,
2,116,32,28,17,0,1,99,2,99,0,1,99,17,67,2,32,0,1,102,2,99,0,1,108,2,32,0,1,108,
10,2,100,105,0,1,108,112,2,32,12,0,1,108,112,2,116,32,0,1,108,121,2,100,0,1,109,2,32,0,
1,110,2,99,0,1,112,2,32,0,1,112,2,99,0,1,112,2,101,108,0,1,112,115,2,105,97,0,1,114,
116,2,32,0,1,114,116,2,115,105,0,1,114,116,2,115,111,109,0,1,116,115,21,21,2,32,0,1,118,2,
32,0,1,118,100,97,2,99,0,8,108,2,105,97,0,8,119,2,103,0,8,119,2,107,0,110,97,8,3,35,
50,13,0,97,101,115,116,104,8,2,101,115,105,97,3,35,50,13,89,87,0,97,101,115,116,104,101,8,2,116,
105,99,3,35,50,13,89,87,6,122,0,116,8,2,105,113,12,3,35,50,47,0,116,101,2,110,110,3,35,50,
47,6,122,0,116,105,8,2,99,105,3,35,50,47,6,124,0,4,103,1,108,102,2,101,3,35,50,75,0,103,
2,101,108,0,103,105,110,103,1,108,102,3,35,50,75,124,68,0,115,105,115,1,114,116,3,35,50,88,6,124,
89,0,4,101,8,2,115,3,35,50,124,0,105,8,0,101,99,100,111,8,3,35,50,124,49,72,139,0,105,8,
2,111,110,3,35,50,140,0,103,1,104,2,101,114,3,35,68,0,103,2,101,114,3,35,68,81,0,103,101,108,
1,109,3,35,68,81,118,0,4,1,105,21,2,32,14,128,128,129,3,50,0,1,117,21,2,32,14,128,128,129,
0,103,101,100,1,114,2,14,128,128,129,3,72,0,4,2,97,108,111,103,3,119,50,0,2,97,116,104,0,5,
8,1,10,2,32,0,5,8,1,10,2,99,101,32,0,5,8,1,10,2,116,32,0,5,8,1,109,10,2,32,
0,8,2,97,101,109,0,8,2,101,109,0,8,2,111,105,0,8,99,2,97,100,105,0,8,102,2,97,116,0,
110,2,101,97,108,0,110,2,105,104,0,110,2,111,117,110,0,110,2,117,105,0,110,2,117,108,0,110,2,117,
110,0,110,8,2,111,121,0,105,97,1,122,3,119,50,6,144,0,97,101,115,116,104,101,5,3,8,3,119,50,
122,89,87,13,0,111,110,121,8,2,109,3,119,50,126,50,13,0,111,109,8,3,119,50,126,65,0,101,8,2,
109,105,3,119,50,132,0,97,101,115,116,104,101,8,3,119,50,132,89,87,13,0,105,97,2,99,3,119,50,147,
0,4,1,17,67,2,99,3,120,50,0,1,17,67,2,116,0,1,104,2,99,101,32,0,1,109,21,2,100,0,
8,108,115,2,100,0,115,119,2,101,114,3,120,50,89,0,5,3,1,10,2,116,32,28,17,3,121,50,0,121,
8,3,122,50,113,0,4,1,119,2,116,32,3,126,50,0,8,117,113,0,8,119,2,17,67,0,8,2,99,105,
101,3,141,50,0,4,103,1,100,2,101,114,3,141,50,75,0,103,1,104,99,2,101,0,103,1,114,2,101,0,
103,2,101,108,32,0,103,101,1,104,99,2,21,0,103,101,108,8,2,25,3,141,50,75,118,0,4,103,105,110,
103,1,104,99,3,141,50,75,124,68,0,103,105,110,103,1,114,0,7,6,97,112,0,104,1,114,103,10,2,121,
3,8,13,83,0,104,101,114,1,114,103,10,3,8,13,83,114,0,4,1,10,2,121,32,3,13,48,0,1,99,
2,97,99,0,101,1,114,116,2,122,3,13,48,132,0,104,8,114,101,115,3,13,83,0,4,2,97,116,104,3,
35,48,0,2,101,108,32,0,2,105,99,0,2,111,103,0,2,111,108,105,0,8,2,111,112,108,0,8,2,115,
0,8,2,116,0,112,2,101,116,105,0,112,2,108,101,0,112,2,108,105,99,0,112,2,114,101,104,0,112,8,
2,17,67,0,4,101,114,8,2,116,3,35,48,13,0,112,97,8,2,114,0,114,101,115,3,35,48,34,141,0,
101,1,114,116,2,122,111,3,35,48,124,0,104,8,2,111,3,35,83,0,104,114,111,3,35,83,34,13,0,4,
8,2,21,3,119,48,0,8,99,2,105,116,117,108,0,112,2,101,97,114,0,112,8,2,17,65,0,112,8,2,
18,66,0,112,114,101,99,8,2,18,67,3,119,48,34,132,91,0,112,97,8,2,114,101,110,3,119,48,35,0,
112,108,105,99,97,98,3,119,48,55,124,49,13,71,0,101,114,2,105,101,3,119,48,144,34,0,104,8,2,21,
3,119,83,0,97,114,97,122,122,1,112,3,121,48,114,34,6,121,47,89,0,4,1,99,2,111,110,3,141,48,
0,1,109,2,108,101,0,1,112,2,101,114,0,1,116,115,2,108,0,2,105,97,0,2,105,115,0,2,114,111,
0,8,2,101,0,8,2,114,105,0,8,112,2,105,115,0,8,118,2,111,0,104,8,2,105,100,3,141,83,0,
7,6,97,114,0,4,8,2,116,105,99,117,3,2,130,0,8,2,116,105,108,0,98,111,1,99,2,104,3,4,
130,71,139,0,99,104,8,2,21,14,128,132,132,3,4,130,76,0,5,3,1,21,2,105,111,32,3,6,35,34,
0,105,108,121,1,21,2,32,3,6,122,34,13,55,2,124,0,1,116,105,117,103,3,6,130,0,4,2,97,32,
3,6,130,34,0,2,105,32,0,101,1,122,2,32,3,6,130,34,141,0,4,2,105,97,17,66,32,3,6,143,
0,2,105,97,32,0,2,105,117,12,3,6,143,34,0,105,108,121,5,3,1,21,2,32,3,6,143,34,13,55,
2,124,0,101,97,3,6,143,34,144,0,1,110,117,108,2,32,3,8,114,0,4,1,10,2,105,18,71,97,116,
105,111,110,3,13,34,0,1,10,2,105,110,32,0,1,21,2,111,108,0,1,29,2,28,19,12,12,12,12,12,
0,1,99,2,101,101,114,0,1,103,111,108,2,105,0,1,104,2,97,115,115,0,1,109,2,105,0,1,109,2,
105,110,0,2,101,122,32,0,8,116,97,107,2,21,0,121,1,10,2,32,3,13,34,2,37,0,97,110,1,109,
10,3,13,34,35,50,0,101,1,112,2,110,116,104,101,3,13,34,122,0,4,105,115,101,1,10,2,32,3,13,
34,140,88,0,105,122,101,1,10,2,32,0,97,8,112,2,100,101,3,13,34,141,0,105,110,103,1,103,3,13,
44,113,68,0,2,114,3,35,0,4,1,21,2,105,116,121,3,35,34,0,1,99,2,105,0,1,104,99,2,105,
116,0,1,104,112,2,105,0,1,107,2,121,0,1,108,99,2,105,0,1,109,2,105,110,101,114,0,1,109,2,
105,111,0,1,109,2,105,116,0,1,112,2,105,0,1,112,112,2,101,110,17,67,0,1,112,115,110,2,101,110,
17,67,0,2,97,0,2,101,110,0,2,101,116,0,2,105,99,0,2,111,0,8,2,17,65,0,8,98,2,18,
67,116,0,8,108,2,121,110,0,8,109,2,105,0,8,109,2,105,110,97,17,67,0,114,8,2,97,110,116,0,
114,8,2,111,0,4,97,8,112,3,35,34,13,0,114,111,8,2,103,0,4,1,10,2,32,28,18,3,114,0,
1,10,2,100,32,28,18,0,1,10,2,100,105,115,0,1,10,2,100,105,122,0,1,10,2,100,121,32,0,1,
17,67,11,2,100,32,0,1,100,10,2,32,0,1,100,10,2,100,32,0,1,100,110,101,108,97,99,0,1,103,
10,2,32,0,1,104,10,2,100,32,0,1,104,99,10,2,100,0,1,107,10,2,100,32,0,1,108,10,2,32,
0,1,108,10,2,105,115,116,0,1,109,10,2,32,0,1,110,114,101,98,2,100,0,1,112,2,116,105,99,117,
0,1,112,10,2,100,32,0,1,116,10,2,32,0,1,116,115,10,2,100,32,0,1,119,2,100,0,1,119,10,
2,100,32,0,1,122,10,2,100,32,0,2,100,114,121,0,101,2,17,67,11,17,65,32,3,114,6,122,0,1,
112,101,115,2,97,116,3,114,34,0,1,103,114,97,109,2,17,65,116,17,65,32,3,114,34,6,0,97,8,112,
101,115,2,98,3,114,34,13,0,121,101,1,10,2,32,3,114,34,37,0,105,110,103,1,17,67,11,2,32,3,
114,34,113,68,0,4,99,104,1,110,97,3,114,49,0,99,104,1,110,111,109,0,101,100,1,17,67,11,2,32,
3,114,72,0,4,5,3,8,2,105,115,116,111,99,114,97,116,3,119,34,0,8,2,111,115,0,8,2,111,117,
0,8,104,2,97,110,103,0,114,8,2,21,0,114,8,110,2,97,116,0,97,99,104,8,3,119,34,35,49,0,
111,109,2,97,116,3,119,34,139,65,0,121,5,3,1,110,111,105,2,32,3,122,34,2,37,0,4,1,117,113,
2,114,3,126,0,1,119,2,114,0,1,119,2,114,0,4,1,117,113,2,97,3,126,34,0,119,1,119,2,105,
0,4,3,130,0,1,104,2,100,121,32,0,1,108,108,2,100,32,0,1,116,111,101,2,100,32,0,1,116,115,
2,32,0,2,32,0,8,116,2,32,0,39,2,110,116,0,114,2,32,0,114,101,2,32,0,4,99,104,1,21,
2,105,3,130,49,0,99,104,1,21,2,121,0,99,104,8,2,17,65,17,65,0,99,104,8,2,101,116,0,99,
104,97,105,8,3,130,49,6,141,124,0,99,104,105,8,2,21,3,130,49,124,0,99,104,105,118,8,2,12,3,
130,49,140,84,0,99,104,97,8,2,105,18,71,101,3,130,49,141,0,108,105,97,8,112,3,130,55,13,0,114,
101,100,2,32,3,130,72,0,99,104,8,2,101,114,3,130,76,0,114,105,110,103,2,32,3,130,113,68,0,4,
1,104,119,3,135,0,1,117,113,2,116,0,1,119,0,1,119,97,2,100,0,1,119,101,114,2,100,0,1,119,
104,99,2,100,0,1,119,115,2,100,0,8,119,2,100,0,1,119,111,116,2,100,3,136,0,4,1,109,116,104,
3,143,0,1,112,2,105,110,0,1,119,2,105,0,1,119,2,121,0,2,105,111,117,115,0,8,109,2,121,0,
101,0,101,1,99,2,17,67,21,0,101,1,119,0,4,1,117,2,105,115,104,3,143,34,0,1,118,2,105,17,
65,0,121,1,17,67,29,2,32,3,143,34,2,37,0,101,110,1,112,2,116,3,143,34,13,50,0,101,115,116,
2,32,3,143,34,13,89,47,0,4,121,5,3,1,17,65,21,21,2,32,3,143,34,37,0,121,5,3,1,17,
67,17,65,21,21,2,32,0,121,5,3,1,114,2,32,0,105,110,103,3,143,44,113,68,0,7,6,97,115,0,
2,101,120,117,3,2,141,89,0,2,105,118,101,3,6,141,89,0,4,115,1,99,10,2,32,3,13,89,0,115,
1,108,116,10,2,32,0,115,1,112,109,111,2,32,0,115,1,112,115,10,2,32,0,115,1,114,114,0,115,1,
118,10,2,32,0,115,1,118,10,2,32,0,4,101,121,1,10,2,32,3,13,89,2,37,0,121,1,10,2,32,
0,115,2,117,3,13,91,0,115,117,114,3,13,91,57,146,0,4,1,98,2,105,108,3,35,88,0,8,2,100,
0,8,2,110,0,116,104,5,3,8,2,109,0,4,1,98,2,97,108,3,35,89,0,1,109,2,111,110,105,0,
1,116,110,2,116,0,2,112,104,97,0,2,112,105,0,2,116,114,97,108,0,2,116,114,111,0,2,121,109,112,
0,8,2,101,0,8,2,105,110,0,8,2,112,101,0,8,2,116,114,105,0,115,1,108,99,2,105,17,67,0,
115,1,112,2,111,0,115,2,97,103,0,115,2,111,110,0,115,8,2,101,116,0,115,8,2,104,0,116,104,8,
2,109,0,112,105,8,2,114,97,3,35,89,48,13,0,99,105,105,2,32,3,35,89,49,124,0,104,8,3,35,
91,0,115,105,111,110,1,112,3,35,91,13,50,0,99,105,1,102,2,115,3,35,91,124,0,2,115,105,115,116,
3,119,0,4,1,10,2,116,121,32,3,119,89,0,2,116,101,114,110,0,8,2,21,0,8,2,112,101,114,0,
8,2,112,105,114,101,0,8,2,116,114,105,110,0,8,2,116,114,111,108,111,103,0,8,2,116,114,111,110,111,
0,115,2,117,109,112,0,115,8,2,21,0,4,104,8,2,97,3,119,91,0,104,8,2,111,0,4,1,17,67,
2,112,3,120,89,0,1,17,67,2,112,101,0,1,17,67,2,116,0,2,107,0,2,116,101,114,0,8,2,107,
0,115,1,108,17,67,0,115,1,112,0,115,1,114,17,67,0,1,104,99,114,117,112,2,101,3,124,89,0,1,
119,2,112,3,126,89,0,4,2,97,108,3,141,88,0,8,17,67,2,101,114,32,0,101,1,104,112,2,32,0,
101,1,114,2,32,0,4,1,98,2,105,3,141,89,0,1,104,2,116,101,0,1,106,2,111,110,0,1,109,2,
111,110,0,1,112,2,116,101,32,0,1,116,2,116,0,1,116,2,116,101,13,0,8,2,111,0,8,2,121,109,
0,116,1,119,2,101,13,3,141,89,47,0,105,97,5,3,8,3,141,90,13,0,99,1,102,2,105,97,3,141,
91,0,105,97,8,3,141,91,13,0,7,6,97,116,0,111,8,2,110,97,3,2,141,47,139,0,4,1,21,2,
114,97,32,3,6,121,47,0,2,117,109,0,105,1,21,2,32,3,6,121,47,37,0,4,1,21,2,111,114,32,
3,6,141,47,0,1,100,2,117,109,32,0,1,108,117,2,111,114,121,0,1,109,2,117,109,32,0,2,105,109,
32,0,114,105,99,101,115,3,6,141,47,34,113,89,132,88,0,114,105,120,3,6,141,47,34,124,49,89,0,105,
2,97,29,3,6,141,91,0,114,121,1,21,2,32,3,8,13,47,34,124,0,104,1,21,2,105,115,3,8,13,
87,0,104,121,1,10,2,32,3,8,13,87,113,0,101,1,116,99,2,32,3,8,141,47,0,4,1,10,2,101,
101,114,32,3,13,47,0,1,10,2,105,118,101,0,1,109,2,101,114,105,0,1,109,105,108,99,2,101,0,1,
110,101,115,0,1,112,2,101,114,110,0,8,115,114,101,118,0,101,1,10,2,32,28,18,0,101,1,108,97,112,
2,32,0,101,1,108,117,99,97,109,2,32,0,101,1,108,117,115,110,111,99,2,32,0,101,1,109,105,116,2,
32,0,101,1,110,105,100,2,32,0,101,1,110,111,105,2,32,0,101,1,114,101,100,2,32,0,101,1,114,101,
112,109,2,32,0,101,8,114,97,112,101,115,32,116,105,2,32,0,111,114,121,1,10,3,13,47,114,34,37,0,
105,115,109,1,10,3,13,47,124,88,13,65,0,101,114,1,109,2,110,3,13,47,131,0,111,114,121,5,3,1,
10,2,32,3,13,47,152,34,37,0,117,114,101,1,108,2,32,3,13,76,114,0,4,117,114,1,99,3,13,76,
146,0,117,114,1,109,0,104,1,10,2,17,65,110,32,3,13,87,0,4,1,99,2,101,17,67,3,35,47,0,
1,103,2,101,97,117,0,1,108,112,2,101,97,0,1,109,2,101,114,21,0,1,114,116,115,2,101,103,0,8,
2,111,109,105,122,0,8,107,2,101,114,0,116,2,105,99,0,116,2,105,116,0,101,8,115,2,108,108,3,35,
47,13,0,117,115,5,3,1,116,115,3,35,47,13,89,0,101,103,111,1,99,2,114,105,99,3,35,47,124,81,
6,126,0,101,103,111,1,99,3,35,47,124,81,13,0,105,8,99,2,111,110,3,35,47,140,0,104,2,108,111,
110,3,35,87,0,4,1,114,102,2,101,114,110,3,119,47,0,2,111,109,105,0,8,2,108,97,110,0,8,2,
114,111,99,0,116,8,2,21,0,114,111,108,1,112,3,119,47,34,139,55,0,111,8,2,110,3,119,47,139,0,
4,104,1,98,3,120,87,0,104,1,112,2,25,0,104,1,102,2,101,114,3,121,86,0,1,119,2,116,3,126,
47,0,4,1,10,2,105,118,101,32,28,17,3,141,47,0,1,21,21,2,111,114,32,0,1,99,2,101,114,32,
0,1,102,2,97,108,0,1,108,98,2,17,65,0,2,111,114,32,0,5,3,1,112,2,114,105,17,65,0,8,
2,121,0,8,110,2,105,118,101,0,101,1,110,111,105,110,2,32,0,4,97,1,100,3,141,47,13,0,97,8,
115,2,110,0,117,115,1,116,115,3,141,47,13,89,0,114,111,110,1,29,2,32,3,141,47,34,13,50,0,101,
115,1,114,97,112,2,32,3,141,47,89,0,111,114,8,103,3,141,47,114,0,4,105,110,103,1,21,2,12,12,
32,3,141,47,124,68,0,105,110,103,1,109,105,116,2,32,0,101,100,1,21,2,12,12,32,3,141,47,124,72,
0,4,101,100,1,109,105,116,2,32,3,141,47,125,72,0,101,100,1,114,101,100,2,32,0,104,1,98,2,101,
3,141,86,0,104,101,100,2,32,3,141,86,72,0,104,101,105,3,141,87,113,124,0,4,2,105,97,3,141,91,
0,2,105,111,32,0,7,6,97,117,0,116,111,8,2,110,3,2,133,47,126,0,103,109,101,110,116,3,2,133,
81,65,122,50,47,0,116,104,101,110,3,2,133,87,122,50,0,99,104,8,3,2,133,101,0,116,111,8,2,21,
14,128,132,132,3,4,133,47,139,0,4,1,21,2,114,105,3,6,133,0,1,115,2,114,117,115,32,0,100,2,
32,3,6,133,72,0,8,2,114,111,114,3,119,0,8,2,110,116,3,120,0,4,103,104,1,108,3,120,83,0,
103,104,1,114,100,0,4,1,99,2,108,105,3,126,0,5,35,1,115,2,115,0,5,35,2,115,116,114,0,108,
2,116,3,126,55,0,4,3,133,0,1,110,2,116,32,0,1,116,2,116,32,0,103,104,0,103,104,1,108,115,
0,108,2,107,0,116,111,2,109,97,3,133,47,13,0,4,100,8,2,105,111,108,111,3,133,72,0,100,8,2,
105,111,109,0,100,105,111,3,133,72,113,139,0,114,2,32,3,135,0,4,1,103,2,115,3,138,0,2,32,0,
2,109,32,0,2,115,99,104,0,2,116,32,0,115,1,17,67,2,32,3,138,89,0,101,114,3,138,114,0,2,
118,3,139,0,7,6,97,118,0,1,108,97,2,101,114,3,6,121,84,0,4,1,99,115,2,101,110,3,35,84,
0,1,106,2,101,108,0,1,108,2,105,0,1,114,2,101,108,0,8,17,66,2,101,110,0,8,114,116,0,97,
114,2,105,99,3,35,84,13,34,0,4,2,97,105,108,3,119,84,0,2,101,110,103,0,2,111,17,65,0,8,
2,101,114,17,67,0,111,119,3,119,84,138,0,4,1,106,2,97,3,121,84,0,1,108,115,2,105,0,4,1,
100,2,105,100,3,141,84,0,1,102,2,111,0,1,108,102,2,111,0,1,115,2,105,111,0,1,115,2,111,0,
8,2,111,110,0,105,8,2,17,65,3,141,84,124,0,7,6,98,101,0,114,108,105,110,8,3,2,71,131,55,
124,50,0,103,8,2,17,65,110,25,3,71,2,124,81,0,8,2,97,116,105,17,67,3,71,2,132,0,116,97,
8,3,71,4,132,47,13,0,116,97,5,3,8,3,71,4,141,47,13,0,8,2,28,19,12,3,71,13,0,110,
101,118,111,3,71,13,50,122,84,13,0,4,2,103,17,65,3,71,113,0,2,103,114,0,2,108,97,116,0,2,
108,105,101,0,2,109,117,0,2,113,117,0,2,115,101,101,0,2,115,105,101,0,2,116,114,97,121,0,8,2,
17,67,17,65,0,8,2,99,108,0,8,2,100,114,97,0,8,2,102,0,8,2,107,110,0,8,2,108,108,105,
103,0,8,2,115,17,67,0,8,2,115,116,111,0,8,2,116,17,67,0,8,2,119,0,104,97,2,118,3,71,
113,107,141,0,114,8,2,115,3,71,114,0,4,8,2,17,67,11,3,71,122,0,8,2,99,107,0,8,2,99,
113,0,8,2,100,17,67,0,8,2,103,103,0,8,2,108,17,67,0,8,2,110,97,0,8,2,115,116,105,97,
0,8,2,116,17,66,0,8,2,116,104,0,8,2,118,17,65,0,8,2,122,17,65,0,110,101,8,3,71,122,
50,124,0,108,97,114,117,115,8,3,71,122,55,13,34,6,137,89,0,108,108,121,3,71,122,55,113,0,4,100,
1,69,2,32,3,71,122,72,0,100,1,100,2,32,0,100,1,104,2,32,0,100,1,114,101,2,32,0,100,1,
116,2,32,0,115,116,115,101,8,2,108,108,3,71,122,89,47,89,6,122,0,4,1,121,97,109,2,32,3,71,
132,0,8,2,98,0,97,2,110,0,8,2,111,3,71,141,0,7,6,98,105,0,8,2,17,67,21,21,3,2,
71,140,0,4,2,115,101,99,3,71,2,140,0,8,2,97,110,110,117,0,8,2,101,110,0,111,8,2,21,14,
128,132,131,3,71,4,140,139,0,2,110,111,99,3,71,113,0,4,2,98,108,105,3,71,124,0,2,98,117,0,
2,99,107,0,2,108,105,111,0,2,108,108,105,111,0,2,110,109,0,2,111,17,67,32,0,2,111,117,115,0,
2,115,99,0,2,115,109,0,2,122,12,0,8,2,17,67,11,0,8,2,103,12,0,8,2,108,17,67,0,8,
2,110,103,0,8,2,115,104,0,8,2,116,17,67,0,103,104,1,110,101,0,4,114,105,8,3,71,124,34,124,
0,114,121,8,0,8,2,116,117,109,101,110,3,71,125,0,114,2,17,67,3,71,131,0,4,2,115,113,3,71,
132,0,2,115,116,114,0,4,1,21,2,111,115,17,65,3,71,140,0,1,111,2,116,17,65,0,2,99,121,99,
0,2,107,101,114,0,2,110,97,114,121,0,2,110,100,0,2,111,108,0,2,111,116,105,99,0,8,2,32,0,
8,2,111,18,75,12,0,103,104,2,116,0,4,111,2,110,105,3,71,140,6,126,0,111,2,112,115,0,114,5,
5,2,17,67,3,71,150,0,7,6,99,104,0,101,109,101,110,116,2,32,3,8,91,65,154,0,4,1,21,2,
105,97,3,49,0,1,97,2,105,108,0,1,97,114,98,0,1,97,114,116,0,1,97,122,0,1,101,109,2,97,
0,1,101,116,2,25,0,1,105,109,2,97,0,1,110,111,114,98,0,1,111,2,32,0,1,114,97,2,105,118,
101,0,1,114,97,17,67,21,21,2,32,0,1,114,111,2,105,0,2,97,101,0,2,97,115,109,0,2,101,109,
0,2,105,99,32,0,2,105,111,0,2,105,115,17,67,0,2,111,108,0,2,111,110,100,0,2,111,114,17,65,
0,2,111,114,100,0,2,114,0,8,2,18,66,17,71,0,8,97,116,0,8,101,2,111,0,8,101,116,0,8,
114,97,2,17,65,0,8,114,97,2,97,0,8,114,111,2,101,115,0,101,109,111,8,2,21,3,49,4,132,65,
139,0,4,97,2,114,105,115,3,49,13,0,97,8,2,114,121,98,0,114,121,2,115,97,3,49,34,124,0,108,
111,114,111,3,49,55,4,136,34,139,0,108,111,2,114,3,49,55,136,0,111,105,114,3,49,58,148,0,105,8,
2,114,111,112,17,65,3,49,113,0,111,114,1,110,97,3,49,114,0,105,8,114,97,2,21,3,49,124,0,105,
2,114,17,65,3,49,140,0,97,8,2,111,3,49,141,0,97,111,115,3,49,141,126,89,0,4,3,76,0,1,
97,116,0,1,111,111,2,32,0,1,114,97,2,101,114,0,2,111,114,101,32,0,8,2,17,71,0,8,2,111,
108,97,0,97,114,105,111,2,116,3,76,35,34,144,0,4,1,97,17,67,2,101,3,91,0,1,97,116,115,0,
1,101,114,99,0,1,105,102,0,1,105,108,99,0,1,105,110,0,1,111,99,105,0,1,111,108,99,0,2,97,
115,115,0,2,97,116,101,97,0,2,101,102,0,2,101,118,0,2,105,111,32,0,2,117,114,101,0,2,117,116,
101,0,2,195,169,12,0,8,2,97,110,100,17,65,0,8,2,97,114,116,114,101,0,8,111,2,101,0,105,111,
110,3,91,13,50,0,97,112,101,114,111,110,3,91,35,48,114,139,50,0,105,99,97,2,103,3,91,113,49,121,
0,105,99,97,2,110,3,91,113,49,141,0,4,97,117,2,102,3,91,139,0,97,117,2,118,0,101,122,3,91,
141,0,7,6,99,111,0,109,112,8,2,116,114,3,49,2,126,65,0,4,8,2,109,21,3,49,2,127,0,8,
2,110,102,105,100,101,0,8,2,110,115,117,108,116,0,4,110,8,2,21,3,49,2,127,50,0,110,8,2,118,
105,0,110,116,114,97,99,2,116,3,49,2,127,50,47,34,35,49,0,110,116,114,97,114,3,49,2,127,50,47,
34,143,0,4,2,104,97,98,3,49,2,139,0,8,2,97,103,0,97,2,108,101,115,3,49,2,139,13,0,4,
2,109,112,117,116,97,3,49,4,126,0,8,2,110,116,114,111,118,0,114,114,101,115,112,111,3,49,4,126,34,
124,89,48,6,126,0,110,116,114,97,8,2,17,67,21,14,128,132,134,3,49,4,126,50,47,34,13,0,110,100,
101,8,2,115,99,3,49,4,126,50,72,113,0,4,8,2,99,111,110,3,49,4,139,0,8,2,100,101,112,101,
110,14,128,132,130,0,8,2,101,17,67,14,128,132,130,0,8,2,99,104,97,105,114,3,49,4,139,6,0,117,
110,116,101,114,8,2,21,14,128,132,135,3,49,6,138,50,47,114,0,112,111,108,121,8,3,49,6,139,48,4,
126,55,124,0,4,2,108,108,97,98,3,49,13,0,2,108,108,97,112,0,2,108,108,97,116,0,2,108,108,101,
99,0,2,108,108,105,100,0,2,108,108,105,115,0,2,108,108,117,0,2,108,111,115,115,0,2,109,109,101,110,
115,0,2,110,115,101,99,117,0,2,110,116,114,111,108,12,0,2,114,114,101,99,116,0,2,114,114,111,0,2,
114,114,117,112,0,8,2,109,112,108,0,8,2,110,100,111,108,0,8,2,110,100,111,110,0,8,2,110,118,101,
110,17,65,0,110,115,105,100,101,114,3,49,13,50,89,124,72,114,0,110,110,105,118,3,49,13,50,140,84,0,
108,108,101,2,103,105,3,49,13,55,132,0,108,108,111,2,113,117,105,17,65,3,49,13,55,139,0,4,109,109,
117,110,2,97,3,49,13,65,57,137,50,0,109,109,117,110,2,105,0,109,101,2,100,105,3,49,13,65,132,0,
4,2,109,98,97,3,49,126,0,2,109,98,105,110,97,0,2,109,101,100,121,0,2,109,109,97,32,0,2,109,
109,97,110,100,97,0,2,109,109,101,110,0,2,109,109,101,114,99,101,0,2,109,109,111,100,111,114,0,2,109,
109,117,116,97,0,2,109,112,101,110,115,0,2,109,112,101,114,0,2,109,112,105,108,97,0,2,109,112,108,101,
109,0,2,109,112,108,101,120,32,0,2,109,112,108,105,99,97,0,2,109,112,108,105,109,0,2,109,112,111,115,
116,0,2,109,112,111,117,0,2,109,112,114,101,104,101,110,0,2,109,112,114,111,109,0,2,110,115,101,99,0,
2,110,115,111,110,0,2,110,115,116,97,110,0,2,110,116,105,110,101,0,8,2,103,0,8,2,109,99,0,8,
2,109,105,0,8,2,109,114,0,8,2,110,99,101,112,116,32,0,8,2,110,99,105,111,117,115,0,8,2,110,
99,114,101,116,0,8,2,110,100,105,109,0,8,2,110,100,111,0,8,2,110,100,117,105,116,0,8,2,110,102,
101,114,101,110,0,8,2,110,102,105,100,0,8,2,110,102,105,115,0,8,2,110,102,108,117,0,8,2,110,103,
114,101,0,8,2,110,105,0,8,2,110,106,117,103,0,8,2,110,113,117,101,0,8,2,110,115,99,0,8,2,
110,115,111,108,101,0,8,2,110,115,116,97,98,108,0,8,2,110,115,116,105,112,0,8,2,110,115,116,105,116,
117,116,0,8,2,110,115,117,108,0,8,2,110,116,97,99,116,0,8,2,110,116,111,117,114,0,8,2,110,118,
111,121,0,8,2,110,119,0,8,2,114,114,0,8,2,115,109,0,112,121,8,3,49,126,48,124,0,110,110,111,
105,8,2,115,3,49,126,50,13,0,110,103,114,101,115,115,5,3,8,3,49,126,50,81,34,13,89,0,110,103,
114,117,3,49,126,50,81,34,137,0,110,102,105,8,2,100,101,110,3,49,126,50,83,124,0,110,118,97,2,108,
3,49,126,50,84,13,0,110,99,101,8,2,110,116,114,97,3,49,126,50,89,13,0,110,115,101,114,2,118,97,
116,105,111,3,49,126,50,89,114,0,110,115,101,8,2,113,3,49,126,50,89,124,0,109,109,111,110,3,49,126,
65,13,50,0,109,112,97,114,97,98,3,49,126,65,48,13,34,13,71,0,109,112,101,2,116,17,65,110,3,49,
126,65,48,124,0,109,112,111,5,3,2,115,116,3,49,126,65,48,139,0,109,109,117,110,2,105,115,3,49,126,
65,57,137,50,0,103,110,111,8,3,49,126,81,50,13,0,4,2,109,112,111,115,105,116,3,49,127,0,5,35,
8,2,114,18,68,0,8,2,110,116,101,109,112,108,0,8,2,110,116,114,17,65,0,8,2,110,116,114,105,98,
0,114,111,2,108,108,3,49,127,34,126,0,110,8,2,107,3,49,127,50,0,110,116,114,97,115,116,8,3,49,
127,50,47,34,120,89,47,0,109,109,117,110,3,49,127,65,57,137,50,0,4,2,109,101,32,3,49,129,0,2,
109,112,97,110,121,0,2,109,112,97,115,115,32,0,8,2,109,102,0,8,2,110,106,117,114,0,109,101,2,98,
3,49,129,65,0,109,102,111,114,116,97,98,3,49,129,65,83,47,13,71,0,109,102,111,114,2,116,3,49,129,
65,83,114,0,109,105,110,103,3,49,129,65,113,68,0,4,8,2,102,111,117,110,3,49,139,0,8,2,103,101,
110,0,8,2,108,111,99,0,8,2,109,97,0,8,2,112,101,114,112,14,128,132,130,0,8,2,112,114,111,99,
14,128,132,130,0,97,2,108,105,116,3,49,139,13,0,115,116,97,114,8,3,49,139,89,47,130,0,101,8,2,
108,3,89,132,0,7,6,100,101,0,8,2,104,121,100,3,4,72,132,0,4,2,97,114,99,3,72,2,132,0,
2,102,108,97,116,0,2,112,101,114,0,2,112,111,108,0,2,112,111,112,0,2,114,101,103,0,2,116,111,120,
0,2,116,114,97,105,0,2,118,97,108,0,8,2,97,99,116,0,8,2,97,110,105,109,0,8,2,97,117,116,
104,0,8,2,101,109,112,0,8,2,109,105,108,105,116,0,8,2,111,0,8,2,116,104,0,99,97,102,102,101,
105,8,3,72,2,132,49,35,83,124,0,110,105,2,116,114,105,3,72,2,132,50,140,0,4,115,2,101,103,3,
72,2,132,89,0,115,2,101,110,0,115,2,117,108,0,115,116,97,2,98,3,72,2,132,89,47,141,0,4,8,
2,99,111,109,3,72,4,132,0,8,2,99,111,110,0,8,2,102,114,97,103,14,128,132,130,0,8,2,114,101,
115,116,0,115,101,2,108,3,72,4,132,89,113,0,4,1,108,2,32,3,72,13,0,2,118,105,108,108,0,4,
2,99,111,114,117,3,72,113,0,2,100,117,0,2,109,97,0,2,109,101,110,0,2,109,105,115,101,0,2,109,
111,99,114,97,99,0,2,109,111,99,114,97,116,105,18,71,0,2,109,111,114,0,2,109,111,116,0,2,109,117,
114,0,2,114,105,17,67,0,2,114,111,103,97,116,111,0,8,2,98,97,0,8,2,102,21,0,8,2,103,21,
0,8,2,106,0,8,2,108,21,0,8,2,110,111,0,8,2,110,117,0,8,2,112,21,0,8,2,114,97,105,
0,8,2,116,21,0,8,2,118,17,65,0,116,101,115,116,3,72,113,47,122,89,47,0,116,101,114,3,72,113,
47,131,0,116,101,114,2,105,3,72,113,47,144,34,0,110,105,8,2,97,3,72,113,50,140,0,109,101,97,3,
72,113,65,6,132,0,109,111,2,98,105,3,72,113,65,139,0,4,115,8,2,101,114,3,72,113,88,0,115,8,
2,105,0,115,115,8,2,101,114,0,4,115,2,105,115,3,72,113,89,0,115,8,2,21,0,4,2,99,105,98,
3,72,122,0,2,99,105,108,0,2,99,105,109,0,2,99,111,114,0,2,99,114,101,109,0,2,102,101,114,101,
110,0,2,102,105,110,105,116,0,2,102,116,0,2,108,97,119,0,2,108,101,103,0,2,108,105,99,97,0,2,
108,118,12,0,2,109,97,103,111,103,0,2,112,114,101,99,97,0,2,112,116,0,2,112,117,116,0,2,114,17,
65,17,67,97,116,105,111,0,2,114,101,108,0,2,116,111,110,0,2,116,114,105,0,2,118,105,108,0,2,118,
111,110,0,8,2,99,107,0,8,2,108,17,67,0,8,2,114,17,65,29,0,8,2,116,17,66,0,112,111,2,
115,105,116,105,3,72,122,48,13,0,99,97,2,100,101,110,3,72,122,49,13,0,108,117,2,103,3,72,122,55,
57,137,0,118,97,115,8,3,72,122,84,13,89,0,115,2,105,103,110,97,3,72,122,88,0,4,115,2,101,99,
3,72,122,89,0,115,2,105,99,0,115,2,111,108,0,115,2,112,111,116,0,115,8,2,104,0,115,8,2,107,
0,115,8,2,112,101,114,97,116,0,115,116,105,3,72,122,89,47,124,0,4,8,2,98,105,108,3,72,125,0,
8,2,99,21,0,4,2,99,101,110,99,3,72,132,0,2,99,114,101,97,115,0,2,116,97,105,108,0,2,116,
111,117,0,2,118,105,97,0,2,118,105,111,0,109,8,2,111,110,105,3,72,132,65,0,98,117,2,103,3,72,
132,71,4,129,0,8,2,105,115,116,3,72,141,0,7,6,100,105,0,4,2,115,98,101,21,3,4,72,124,0,
2,115,99,111,110,0,2,115,111,98,0,2,115,112,111,115,115,0,2,115,112,114,111,112,0,8,2,115,114,101,
0,4,8,2,115,101,14,128,132,131,3,4,72,124,89,0,115,8,2,97,21,14,128,132,131,0,115,8,2,105,
110,14,128,132,131,0,4,2,103,114,101,115,3,72,2,140,0,2,109,101,110,115,0,2,111,120,0,2,118,101,
114,17,67,0,2,118,101,115,116,0,2,118,117,108,0,8,2,104,21,0,103,101,2,115,116,3,72,2,140,75,
122,0,4,2,99,116,97,116,3,72,113,0,2,102,102,114,97,99,0,2,102,102,117,115,0,2,109,105,110,0,
2,115,97,115,116,0,2,115,99,111,118,0,2,115,105,110,116,0,2,118,105,100,0,2,118,105,110,0,2,118,
105,115,0,2,118,111,114,99,0,5,3,2,109,101,110,115,0,8,2,115,21,0,8,2,115,104,101,118,12,0,
115,8,2,104,17,65,14,128,132,131,3,72,113,89,0,4,2,115,99,32,3,72,124,0,2,115,99,111,32,0,
2,115,99,111,114,100,32,0,2,115,99,111,116,0,2,115,99,111,117,110,116,0,2,115,104,17,67,0,2,115,
104,32,0,2,115,107,0,2,115,111,108,0,2,115,112,111,115,105,116,0,2,115,115,105,100,0,2,115,115,105,
112,0,2,115,115,111,108,117,0,2,115,115,111,110,0,2,115,116,97,110,0,2,115,116,105,108,108,97,116,101,
0,2,115,116,114,105,0,108,105,2,103,3,72,124,55,124,0,118,105,2,100,101,110,3,72,124,84,124,0,115,
99,105,112,108,105,3,72,124,89,124,48,55,124,0,4,2,99,104,114,111,3,72,140,0,2,115,115,101,99,116,
0,2,115,117,108,0,8,2,111,110,18,67,0,97,8,2,110,3,72,140,6,35,0,97,103,111,8,3,72,140,
6,35,81,13,0,97,8,3,72,140,13,0,99,104,111,2,116,3,72,140,49,6,126,0,108,117,2,116,3,72,
140,55,6,137,0,97,8,2,108,3,72,147,0,97,109,111,110,100,8,3,72,147,65,13,50,72,0,7,6,101,
97,0,4,1,104,2,100,109,17,65,21,3,2,122,0,1,104,2,100,113,0,1,114,2,32,3,6,144,0,110,
1,112,2,32,3,6,144,50,0,1,21,2,116,105,118,101,3,8,144,0,4,1,10,2,98,105,108,105,3,13,
0,1,10,2,98,108,0,98,108,121,1,10,3,13,71,55,2,124,0,117,2,116,3,57,137,0,4,1,17,67,
2,108,116,3,122,0,1,17,67,2,118,101,110,0,1,100,2,102,0,1,100,2,116,104,0,1,100,110,101,2,
118,0,1,102,2,116,104,0,1,104,2,116,104,101,114,0,1,106,2,108,111,117,0,1,108,2,100,101,110,0,
1,114,2,100,105,101,100,0,1,114,2,100,105,108,121,0,1,114,2,100,121,0,1,114,98,2,100,0,1,114,
98,2,115,0,1,114,98,2,116,104,0,1,114,104,116,2,100,0,1,114,104,116,2,116,0,1,114,112,115,2,
100,0,1,114,116,2,99,104,101,114,0,1,114,116,2,100,0,1,116,115,2,100,0,1,119,115,2,116,0,1,
122,2,108,111,0,8,104,2,118,105,0,8,108,2,109,105,0,8,114,100,2,100,0,112,111,1,119,3,122,48,
13,0,109,2,116,32,3,122,65,48,0,4,100,1,100,3,122,72,0,100,1,104,0,100,101,100,8,108,3,122,
72,113,72,0,118,121,1,104,3,122,84,37,0,4,116,104,1,108,3,122,86,0,116,104,1,119,0,4,115,2,
97,110,3,122,88,0,115,2,101,110,0,115,117,114,3,122,90,114,0,4,114,1,104,2,107,3,130,0,114,1,
104,2,116,0,114,1,104,2,116,104,0,4,114,1,104,2,100,3,131,0,114,1,104,2,115,0,114,1,108,2,
110,0,114,1,112,2,108,0,114,1,115,2,99,104,0,114,1,121,2,110,0,114,2,116,104,0,114,8,2,108,
0,114,8,2,110,0,4,3,132,0,1,17,67,29,2,110,32,0,1,102,2,108,116,0,1,104,2,118,0,1,
109,2,108,116,0,1,115,17,67,2,32,0,2,110,100,101,114,3,132,6,35,0,1,114,99,2,116,3,132,6,
141,0,1,104,116,2,116,114,105,3,132,35,0,100,109,101,1,114,3,132,72,65,132,0,103,101,114,3,132,81,
114,0,116,104,1,114,98,2,101,3,132,86,0,115,1,102,2,97,110,3,132,88,0,115,111,2,110,3,132,88,
13,0,115,101,2,21,3,132,89,0,4,117,3,139,0,117,120,0,4,1,114,98,2,107,3,141,0,1,114,103,
2,116,0,1,116,115,2,107,0,4,114,1,98,3,143,0,114,1,116,2,17,65,0,114,1,119,0,114,1,119,
115,0,4,1,21,2,32,3,144,0,1,104,116,2,116,0,8,98,2,116,114,105,0,110,2,32,3,144,50,0,
108,1,10,2,32,3,144,55,0,4,114,3,145,0,114,1,98,2,100,0,114,1,119,2,121,0,7,6,101,100,
0,4,1,21,2,105,101,110,3,6,132,72,0,1,99,2,101,32,0,1,104,2,114,97,0,1,104,2,114,97,
108,0,1,104,2,114,111,110,0,1,115,114,2,101,0,117,114,1,21,3,6,132,75,114,0,4,1,10,2,121,
3,13,72,0,1,21,2,116,104,32,0,4,1,99,21,2,32,14,128,155,130,3,47,0,1,102,21,2,32,14,
128,155,130,0,1,104,99,10,2,32,14,128,139,130,0,1,104,115,10,2,32,14,128,139,130,0,1,107,21,2,
32,14,128,155,130,0,1,112,21,2,32,14,128,155,130,0,1,115,115,21,2,32,14,128,152,130,0,1,120,21,
2,32,14,128,138,130,0,4,1,17,67,21,2,32,14,128,155,130,3,72,0,1,21,21,2,32,14,128,155,130,
0,1,103,21,2,32,14,128,138,129,0,1,105,17,65,2,32,14,128,153,130,0,1,108,99,2,32,14,128,136,
129,0,1,108,101,2,32,14,128,152,130,0,1,110,101,10,2,32,14,128,136,130,0,1,114,101,21,21,2,32,
14,128,136,130,0,1,114,117,101,2,32,14,128,136,130,0,1,116,117,98,101,100,2,32,14,128,128,130,0,1,
121,2,32,14,128,136,130,0,2,32,28,21,12,12,14,128,128,130,0,4,1,104,115,17,67,21,2,32,3,122,
72,0,1,119,121,2,32,0,5,8,1,100,21,2,32,14,128,155,130,0,5,8,1,116,21,2,32,14,128,155,
130,0,97,108,1,112,3,122,72,118,0,105,98,1,114,99,3,122,72,124,71,0,4,1,114,100,21,2,32,3,
124,72,0,1,114,102,21,2,32,14,128,136,130,0,108,121,2,32,3,124,72,55,2,124,0,4,1,100,21,2,
32,14,128,155,130,3,125,72,0,1,116,21,2,32,14,128,155,130,0,4,1,109,2,105,97,3,132,72,0,1,
109,2,105,111,0,1,109,2,105,117,0,1,112,2,101,32,0,1,116,2,105,0,1,119,115,0,8,109,2,105,
97,116,0,8,112,2,105,97,116,0,105,97,116,101,1,109,21,3,132,72,113,13,47,0,105,97,8,109,3,132,
72,132,13,0,7,6,101,105,0,110,103,2,32,14,128,128,131,3,113,68,0,4,1,108,2,115,3,122,0,99,
101,1,108,2,115,116,0,4,1,102,2,116,32,3,124,0,1,102,2,116,101,0,2,110,97,116,101,0,4,1,
21,2,110,32,3,132,0,1,21,2,110,101,0,1,99,0,2,116,104,0,2,118,0,2,122,0,8,110,0,103,
104,1,108,0,103,104,1,107,3,132,87,0,110,103,1,98,3,132,113,68,0,1,104,116,2,115,17,67,3,132,
124,0,4,1,104,2,116,32,3,140,0,1,108,17,67,2,110,32,0,2,109,0,5,35,2,116,104,101,114,0,
8,0,8,119,0,103,104,1,104,2,116,0,114,8,3,140,34,0,103,2,101,114,32,3,140,81,0,4,115,2,
101,3,140,88,0,115,8,115,2,109,0,115,116,101,114,3,140,89,47,114,0,99,104,3,140,101,0,101,114,2,
32,3,140,114,0,4,3,141,0,103,2,110,0,103,104,0,103,104,1,108,115,0,103,104,8,119,0,103,104,116,
104,3,141,47,87,0,114,3,143,0,114,1,119,3,145,0,7,6,101,108,0,101,99,116,8,2,114,111,108,3,
2,122,55,122,49,47,0,4,8,2,17,65,3,2,124,55,0,108,8,2,105,112,0,101,99,116,114,111,8,3,
2,124,55,4,122,49,47,34,139,0,105,116,8,3,2,124,55,132,47,0,4,1,99,120,2,32,3,6,122,55,
0,1,108,108,97,2,111,0,1,110,110,111,115,2,32,0,1,112,2,32,0,2,105,103,105,0,108,1,110,2,
32,0,4,97,2,32,3,6,122,55,13,0,108,97,2,32,0,111,112,1,118,3,6,122,55,13,48,0,108,105,
1,21,2,32,3,6,122,55,124,0,4,1,10,2,111,117,115,32,3,13,55,0,1,100,2,105,118,0,1,118,
2,111,99,0,108,1,10,2,111,117,115,0,4,105,110,103,1,10,3,13,55,113,68,0,108,105,110,103,1,10,
0,4,101,114,1,17,67,10,2,32,3,13,55,114,0,108,101,114,1,17,67,10,2,32,0,1,115,2,101,99,
116,3,113,55,0,101,99,116,8,2,114,111,99,117,3,113,55,122,49,47,0,4,1,10,2,32,3,118,0,1,
10,2,114,121,32,0,1,10,2,115,32,0,1,10,2,116,121,32,0,1,112,112,111,100,0,1,116,2,112,0,
108,1,10,2,32,28,18,0,108,1,110,110,2,32,0,108,1,114,10,2,32,0,4,1,98,105,99,2,32,3,
122,55,0,1,108,108,97,0,5,8,1,10,2,32,0,5,8,1,10,2,115,32,0,8,2,101,114,0,8,2,
105,111,116,0,111,2,113,3,122,55,13,0,115,101,8,3,122,55,89,0,108,101,114,1,116,2,32,12,3,122,
55,114,0,101,99,116,8,2,114,111,110,3,122,55,122,49,47,0,4,101,8,2,103,3,122,55,124,0,101,8,
2,112,0,101,8,2,118,97,0,108,121,1,106,0,101,109,8,3,122,55,124,65,0,101,1,107,115,2,116,3,
122,55,125,0,1,102,2,105,120,3,132,55,0,7,6,101,109,0,8,3,2,122,65,0,1,21,2,98,101,114,
3,6,122,65,0,1,104,112,115,2,101,3,6,132,65,0,4,1,10,2,32,3,13,65,0,1,10,2,97,32,
0,1,10,2,121,32,0,1,104,112,115,0,1,116,115,121,0,97,8,115,2,110,116,105,3,13,65,35,0,4,
2,105,115,115,105,3,113,65,0,2,117,108,115,0,8,2,97,0,8,2,101,0,8,2,105,116,0,8,2,111,
0,109,2,97,110,0,4,1,116,115,121,2,105,3,122,65,0,2,97,110,97,0,2,98,108,101,109,0,2,98,
114,121,0,2,101,114,97,108,0,2,101,114,121,0,2,105,0,2,112,97,116,104,0,2,112,101,114,0,2,112,
104,97,115,0,2,112,114,101,115,0,2,112,116,105,0,2,112,116,121,0,2,117,108,0,109,2,101,0,111,114,
114,104,1,104,3,122,65,13,34,0,98,97,2,115,3,122,65,71,13,0,4,1,102,2,97,108,101,3,132,65,
0,1,104,2,111,0,2,97,105,108,0,8,2,97,99,0,7,6,101,110,0,4,2,100,101,97,3,2,122,50,
0,2,105,103,109,97,32,0,2,109,101,115,0,8,2,21,0,8,2,100,97,0,8,2,100,117,0,8,2,116,
105,0,110,8,0,114,111,108,3,2,122,50,34,139,55,0,114,97,103,101,3,2,122,50,34,141,75,0,116,105,
99,101,1,10,3,2,122,50,47,140,89,0,108,105,2,118,3,2,122,50,55,140,0,100,111,114,8,3,2,122,
50,72,136,0,99,104,97,8,2,110,3,2,122,50,76,120,0,118,105,114,111,3,2,122,50,84,140,34,13,0,
116,104,114,97,2,108,3,2,122,50,87,34,133,0,99,121,2,99,108,105,3,2,122,50,89,124,0,115,104,114,
105,110,101,3,2,122,50,91,34,140,50,0,2,116,101,114,116,3,4,122,50,0,2,116,114,101,112,3,4,126,
50,0,4,1,21,2,100,111,32,3,6,122,50,0,1,21,2,116,18,68,32,0,1,21,2,116,97,108,0,1,
21,2,116,111,117,115,0,1,21,2,116,117,0,1,108,108,105,109,2,105,97,0,1,115,101,114,112,101,2,116,
0,1,115,115,2,116,0,1,116,115,111,2,115,0,2,100,17,65,32,0,2,116,97,116,105,118,101,0,2,116,
105,97,32,12,0,2,116,105,97,108,0,110,2,105,97,0,116,97,114,121,1,109,2,32,3,6,122,50,47,13,
34,2,37,0,107,111,1,10,2,32,3,6,122,50,49,139,0,100,114,111,110,2,32,3,6,122,50,72,34,13,
50,0,115,107,2,32,3,6,122,50,89,49,0,103,2,32,3,6,122,68,0,4,2,97,32,3,6,132,50,0,
2,97,114,121,0,2,105,97,0,111,117,115,1,21,2,32,3,8,13,50,13,89,0,101,115,1,104,116,21,21,
2,32,3,8,13,50,132,88,0,4,1,10,2,17,65,110,99,101,3,13,50,0,1,10,2,32,0,1,10,2,
99,101,32,0,1,10,2,101,100,32,0,1,10,2,101,114,32,0,1,10,2,109,101,110,116,0,1,10,2,116,
32,0,1,10,2,116,104,32,0,1,99,114,101,109,0,1,103,101,2,100,0,1,108,97,99,2,100,101,114,0,
1,112,114,97,99,0,1,118,18,66,2,116,32,0,1,118,21,21,2,116,32,0,99,121,1,10,2,32,3,13,
50,89,2,37,0,101,114,1,103,2,105,3,13,50,122,34,0,105,110,101,1,10,3,13,50,132,50,0,4,8,
2,111,3,113,50,0,8,2,111,117,103,104,0,8,2,117,0,97,8,2,109,3,113,50,35,0,4,1,10,2,
99,104,3,122,50,0,1,17,67,17,67,11,2,32,0,1,99,114,101,112,2,116,0,1,99,115,97,2,116,0,
1,102,2,99,101,32,0,1,107,2,100,32,0,1,115,2,100,32,0,1,115,110,2,116,0,1,116,2,100,32,
0,1,116,110,2,116,0,1,116,120,2,116,0,1,118,2,116,32,0,2,100,101,114,0,2,100,111,117,115,0,
2,105,103,0,2,115,105,97,0,2,115,105,103,0,2,116,101,114,0,2,116,105,0,2,116,105,116,121,0,2,
116,114,97,110,0,2,116,114,105,0,2,116,114,111,0,2,116,115,105,0,2,118,105,17,65,0,2,118,111,121,
0,2,118,121,0,2,122,121,0,5,8,1,10,2,99,101,32,0,5,8,1,10,2,116,32,0,8,2,100,0,
8,2,101,0,8,2,109,0,8,2,116,114,121,0,8,99,115,101,100,2,116,0,8,115,101,114,2,116,0,101,
109,1,116,3,122,50,13,65,0,116,105,8,99,3,122,50,47,124,0,99,108,97,118,3,122,50,49,55,141,84,
0,117,1,109,3,122,50,57,137,0,100,111,119,3,122,50,72,6,138,0,100,111,8,3,122,50,72,139,0,103,
105,110,3,122,50,75,124,50,0,103,105,110,103,3,122,50,75,124,68,0,101,114,8,3,122,50,114,0,103,2,
116,104,3,122,68,0,4,1,10,2,103,101,114,3,124,50,0,1,107,99,105,104,99,0,103,2,108,17,65,3,
124,68,81,0,4,2,99,111,114,101,3,126,50,0,2,116,114,101,99,0,4,1,99,115,2,101,3,132,50,0,
1,103,2,105,17,65,0,2,97,108,32,0,8,115,2,105,0,101,2,32,0,4,105,1,108,2,101,3,132,50,
124,0,105,1,118,2,101,0,101,97,8,103,3,132,50,124,6,35,0,7,6,101,111,0,1,104,116,2,21,3,
2,132,13,0,8,103,3,4,132,2,139,0,1,21,21,2,32,3,6,141,139,0,117,115,1,10,2,32,3,8,
144,89,0,4,110,1,103,3,13,50,0,110,1,104,99,0,1,103,3,113,126,0,4,101,115,2,32,3,113,139,
88,0,115,2,32,0,4,1,103,2,102,102,3,122,0,1,106,2,112,0,4,1,104,116,2,99,114,97,99,121,
3,124,6,126,0,1,104,116,2,108,111,103,105,115,0,1,104,116,2,108,111,103,121,0,4,8,103,2,103,114,
3,124,126,0,8,103,2,108,111,103,0,4,1,102,3,132,0,1,112,2,112,108,0,115,105,115,1,21,3,132,
6,139,89,124,89,0,8,3,132,126,0,1,29,2,32,12,3,132,139,0,114,8,103,3,135,0,2,100,32,3,
138,0,118,101,114,3,139,84,13,0,114,8,3,141,114,0,4,1,104,116,2,114,3,144,0,8,108,0,8,112,
2,110,0,97,2,32,0,7,6,101,114,0,109,101,8,102,2,110,116,3,2,131,65,122,0,121,5,3,1,17,
67,17,65,21,21,2,32,3,4,143,34,37,0,4,1,21,2,105,116,121,3,6,122,34,0,2,105,99,32,0,
2,105,99,97,108,0,4,1,21,2,17,67,97,108,32,3,6,131,0,1,21,2,17,67,105,99,32,0,1,109,
2,103,101,0,1,118,2,103,101,0,1,118,2,115,97,108,0,2,98,105,97,108,0,2,103,105,99,32,0,2,
110,97,108,32,0,2,115,105,111,110,0,114,101,114,2,32,3,6,131,34,114,0,114,101,100,2,32,3,6,131,
72,0,103,105,110,103,3,6,131,75,113,68,0,115,105,1,21,2,97,108,3,6,131,91,0,1,21,2,111,32,
3,6,143,34,0,105,2,17,65,3,6,144,34,2,124,0,101,97,108,3,6,144,34,113,118,0,4,1,104,100,
97,2,101,3,6,145,0,1,104,111,99,2,101,0,101,1,99,2,32,0,4,1,10,2,111,17,67,101,32,3,
8,13,34,0,1,10,2,111,117,115,0,4,105,115,101,1,10,2,32,3,8,13,34,140,88,0,105,122,101,1,
10,2,32,0,121,2,32,3,13,34,2,37,0,97,108,1,21,2,105,116,121,3,13,34,6,35,55,0,105,97,
2,32,28,17,3,13,34,6,144,0,121,5,3,2,32,12,12,28,18,3,13,34,124,0,4,105,115,1,10,2,
97,3,13,34,140,88,0,105,122,1,10,2,97,0,116,111,1,104,2,32,3,13,47,137,0,97,1,109,97,99,
3,14,34,13,0,4,1,21,2,101,110,99,101,32,3,34,0,2,101,110,116,32,0,97,109,1,10,2,101,110,
116,3,34,13,65,0,105,101,115,2,32,14,128,130,130,3,88,0,4,1,99,2,97,109,3,113,34,0,8,2,
17,65,0,8,104,2,101,100,0,101,1,104,2,100,105,3,113,34,122,0,101,116,105,99,97,108,8,104,3,113,
34,122,47,124,49,118,0,101,1,105,2,32,3,113,143,0,4,1,10,3,114,0,1,10,2,32,0,1,10,2,
110,32,0,1,10,2,115,32,0,1,10,2,116,32,0,1,17,67,11,2,32,14,128,128,131,0,1,21,21,21,
2,32,14,128,145,130,0,1,98,109,2,32,0,1,99,110,2,32,14,128,128,129,0,1,99,115,97,2,116,0,
1,108,108,2,32,14,128,128,130,0,1,108,108,97,2,32,0,1,109,109,2,32,0,1,110,105,108,2,32,14,
128,128,129,0,1,110,114,2,32,14,128,128,130,0,1,112,2,99,101,110,0,1,112,2,104,97,112,0,1,114,
101,2,32,14,128,128,130,0,1,115,115,2,32,14,128,128,130,0,101,1,10,2,32,0,101,1,10,2,32,0,
4,1,10,2,17,65,3,114,34,0,1,10,2,105,110,103,0,2,105,101,0,2,105,101,32,0,101,8,99,2,
98,114,3,114,34,132,0,121,2,17,65,3,114,57,0,4,115,1,17,67,11,2,32,14,128,128,132,3,114,88,
0,115,1,108,108,2,32,14,128,128,131,0,115,1,110,105,108,2,32,14,128,128,130,0,115,1,114,101,2,32,
14,128,128,131,0,115,1,115,115,2,32,14,128,128,131,0,5,8,1,10,2,32,3,119,0,115,5,8,1,17,
67,11,2,32,14,128,128,132,3,119,88,0,2,114,17,65,3,122,0,4,1,103,2,105,97,116,3,122,34,0,
2,105,17,67,0,8,2,117,100,0,8,103,2,111,110,0,8,115,2,101,110,0,114,1,17,67,29,0,114,8,
2,17,65,0,114,121,5,3,1,98,2,32,3,122,34,2,124,0,4,101,8,104,2,115,3,122,34,13,0,101,
8,104,2,116,0,4,101,1,99,2,109,111,110,3,122,34,113,0,101,1,104,2,102,0,121,8,118,0,101,111,
1,116,115,3,122,34,113,139,0,97,108,1,103,2,100,3,122,34,118,0,1,29,2,17,65,3,123,34,0,4,
5,35,1,104,2,116,102,3,130,0,5,35,8,100,2,98,0,4,3,131,0,1,17,67,29,0,1,21,2,115,
121,0,1,99,2,110,32,0,1,99,2,116,0,1,99,110,111,99,2,116,32,0,1,104,2,116,122,0,1,109,
2,99,0,1,115,2,118,97,110,0,1,118,2,116,0,1,118,21,2,116,32,0,2,17,66,32,0,2,32,0,
2,115,101,0,2,115,105,98,0,2,115,105,102,0,2,115,105,118,0,2,116,105,111,110,0,2,118,101,0,8,
0,8,117,113,0,101,2,32,0,2,17,65,3,131,34,0,109,101,97,1,112,2,98,3,131,65,144,0,4,101,
1,112,109,2,32,3,143,0,114,2,32,24,0,4,1,104,2,101,110,3,144,34,0,8,17,67,2,111,32,0,
8,120,2,111,0,8,122,2,111,12,0,97,1,29,2,32,3,144,34,13,0,105,1,112,120,101,2,101,110,3,
144,34,113,0,105,111,8,112,2,100,105,99,3,144,34,113,6,126,0,105,111,8,112,2,100,3,144,34,113,13,
0,121,1,117,113,3,144,34,124,0,4,101,1,17,67,29,2,32,3,145,0,101,1,100,2,32,0,101,1,104,
112,115,2,32,0,101,1,109,2,32,0,101,1,118,101,2,32,0,101,8,104,0,7,6,101,115,0,4,2,99,
97,112,101,3,2,122,89,0,2,99,97,112,105,0,8,2,112,21,0,4,2,116,114,97,108,32,3,6,122,89,
0,99,1,21,2,101,110,99,101,32,0,99,1,21,2,101,110,116,32,0,113,117,101,3,6,122,89,49,0,4,
1,21,2,105,99,3,6,132,88,0,2,105,97,110,32,0,101,1,110,21,2,32,0,2,105,118,101,3,6,132,
89,0,105,115,2,32,3,6,132,89,124,89,0,105,97,5,3,2,32,3,6,132,90,13,0,4,1,10,2,116,
32,3,13,89,0,1,10,2,116,121,0,1,10,2,121,32,0,1,104,116,2,105,18,71,101,32,0,115,1,114,
101,2,32,0,115,1,114,116,10,2,32,0,115,2,32,28,18,0,115,97,1,99,101,110,2,114,121,3,13,89,
13,0,105,115,1,104,116,2,32,3,13,89,124,89,0,101,115,1,104,116,2,32,3,13,89,132,88,0,4,1,
10,2,32,14,128,130,129,3,88,0,1,17,67,10,2,32,14,128,130,129,0,1,104,112,10,2,32,14,128,128,
129,0,1,104,116,10,2,32,14,128,128,129,0,1,105,114,101,110,2,32,14,128,130,130,0,1,114,10,2,32,
14,128,128,129,0,4,1,102,10,2,32,14,128,128,129,3,89,0,1,107,10,2,32,14,128,128,129,0,1,112,
10,2,32,14,128,128,129,0,1,116,10,2,32,14,128,128,129,0,1,117,113,10,2,32,14,128,128,129,0,4,
2,99,97,114,112,3,113,89,0,2,112,101,99,105,0,2,116,97,116,101,0,8,2,116,97,98,0,1,114,112,
2,101,110,116,3,122,88,0,4,1,114,17,67,2,116,3,122,89,0,1,118,2,116,12,0,8,2,112,108,0,
115,1,116,115,105,100,2,32,0,116,105,2,109,3,122,89,47,125,0,1,118,114,97,104,2,116,3,124,89,0,
111,112,104,97,3,124,89,6,126,83,13,0,4,1,99,10,2,32,14,128,128,129,3,125,88,0,1,103,10,2,
32,14,128,128,129,0,1,104,99,10,2,32,14,128,128,129,0,1,104,115,2,32,14,128,128,130,0,1,115,10,
2,32,14,128,128,129,0,1,115,115,10,2,32,14,128,128,130,0,1,115,117,2,32,14,128,129,130,0,1,115,
117,99,2,32,14,128,128,130,0,1,115,117,108,2,32,14,128,128,130,0,1,115,117,114,10,10,2,32,14,128,
128,130,0,1,115,117,116,10,10,2,32,14,128,128,130,0,1,115,117,120,2,32,14,128,128,130,0,1,120,10,
2,32,14,128,128,130,0,1,122,10,2,32,14,128,128,130,0,4,1,115,101,10,2,32,3,132,88,0,2,105,
17,65,0,8,120,97,0,101,2,32,0,8,2,112,101,97,107,3,132,89,0,7,6,101,116,0,4,1,116,2,
32,3,6,122,47,0,2,105,116,111,114,0,116,101,2,32,0,116,97,2,32,3,6,122,47,13,0,105,110,103,
1,108,2,32,3,6,132,47,124,68,0,4,101,100,1,108,2,32,3,6,132,47,125,72,0,101,100,1,114,99,
2,32,0,114,121,1,109,2,32,3,8,13,47,34,2,124,0,4,1,108,10,2,32,3,13,47,0,1,114,17,
65,10,2,32,0,116,1,108,97,112,2,101,0,104,1,17,67,21,2,32,14,128,129,131,3,13,87,0,4,1,
10,2,32,3,113,47,0,1,10,2,114,121,32,0,1,10,2,121,32,0,8,2,101,114,110,0,8,2,114,0,
116,1,10,2,32,0,4,1,10,2,32,28,17,3,122,47,0,1,98,97,104,112,2,32,0,1,106,2,32,0,
1,110,17,65,21,21,2,32,0,1,114,103,2,12,0,1,115,2,32,0,4,104,2,105,99,3,122,87,0,104,
2,121,108,101,110,0,104,8,2,97,21,0,104,8,2,101,108,0,4,1,21,2,97,116,101,3,124,47,0,1,
21,2,97,116,105,111,110,0,1,107,114,0,1,108,108,2,32,0,105,110,103,1,10,2,32,3,125,47,2,124,
68,0,101,100,1,10,2,32,14,128,128,130,3,125,72,0,4,1,102,2,97,3,132,47,0,8,2,111,110,0,
8,109,2,101,0,8,112,2,101,0,101,2,32,0,4,101,114,1,109,2,32,3,132,47,114,0,114,101,1,109,
0,4,104,2,121,108,3,132,87,0,104,5,35,2,97,110,101,0,104,8,2,17,65,0,1,114,101,98,2,32,
3,141,0,7,6,101,117,0,114,2,32,3,6,131,0,115,101,1,21,2,32,3,6,131,88,0,2,109,32,3,
6,132,13,0,115,101,5,3,1,21,2,32,3,6,137,88,0,1,115,2,109,32,3,6,144,0,114,5,3,2,
32,3,6,146,0,114,5,5,2,32,3,6,151,0,115,1,10,2,32,3,8,113,13,89,0,3,57,137,0,114,
111,8,3,57,146,34,139,0,114,111,8,2,112,101,3,57,146,44,13,0,114,1,108,3,131,0,4,1,108,3,
137,0,5,3,1,110,0,4,1,100,2,116,115,3,142,0,1,114,2,100,0,5,3,1,110,2,114,21,3,146,
0,114,5,5,3,151,0,7,6,101,118,0,4,101,114,2,99,3,4,122,84,114,0,101,114,2,108,0,101,114,
2,109,0,4,8,3,113,84,0,8,2,105,99,116,0,8,2,105,115,0,97,110,103,8,3,113,84,35,50,75,
0,101,8,2,110,116,3,113,84,122,0,101,114,8,2,115,3,113,84,131,0,4,1,108,2,101,108,3,122,84,
0,5,3,8,2,111,108,117,0,8,2,25,0,8,2,105,0,97,8,2,110,101,3,122,84,13,0,101,114,121,
3,122,84,34,113,0,4,101,114,1,108,99,3,122,84,114,0,101,114,2,32,0,101,114,8,0,8,114,116,2,
21,21,3,125,84,0,4,1,108,108,97,3,132,84,0,1,114,98,98,97,0,1,116,115,2,101,0,101,1,108,
99,2,108,0,101,8,0,101,110,8,3,132,84,13,50,0,97,110,8,2,103,101,108,105,99,3,132,84,35,50,
0,4,101,114,1,102,2,12,3,132,84,114,0,101,114,5,35,8,108,0,105,108,8,2,25,3,132,84,118,0,
7,6,101,120,0,4,8,2,21,3,2,122,49,89,0,8,2,104,97,108,0,99,2,105,0,99,8,2,101,0,
104,8,2,105,98,105,116,105,0,116,114,97,2,111,114,3,2,122,49,89,47,34,0,116,114,97,118,97,2,103,
3,2,122,49,89,47,34,35,84,13,0,112,101,114,105,109,3,2,122,49,89,48,122,34,124,65,0,4,8,2,
17,65,3,2,122,81,88,0,104,8,0,104,117,5,3,8,3,2,122,81,88,137,0,1,21,2,105,97,3,6,
122,49,89,0,111,8,2,115,14,128,132,131,3,6,122,49,89,139,0,4,1,17,67,2,101,3,122,49,89,0,
2,101,114,99,0,2,112,101,114,116,0,8,2,99,114,101,109,0,99,101,2,108,108,101,110,3,122,49,89,13,
0,116,101,114,2,17,67,3,122,49,89,47,6,131,0,116,114,97,2,112,111,108,3,122,49,89,47,34,6,35,
0,4,116,114,97,3,122,49,89,47,34,13,0,116,114,111,8,0,116,114,97,2,99,116,3,122,49,89,47,34,
35,0,116,114,97,2,110,21,3,122,49,89,47,34,141,0,112,101,100,2,105,116,3,122,49,89,48,13,72,0,
99,97,118,3,122,49,89,49,13,84,0,111,114,2,99,3,122,49,89,114,0,101,2,99,117,116,105,111,3,122,
49,89,124,0,8,2,105,116,3,122,81,88,0,1,115,115,2,32,3,124,49,89,0,7,6,101,121,0,1,10,
2,32,3,2,124,0,111,114,2,32,3,6,141,114,0,101,100,2,32,14,128,128,130,3,72,0,1,21,2,17,
67,21,3,124,0,8,107,2,12,3,132,0,4,3,140,0,101,1,21,2,32,14,128,128,131,0,101,8,0,4,
1,17,67,29,3,141,0,1,118,17,67,2,32,0,2,97,110,0,8,98,97,0,101,0,101,114,1,109,21,2,
32,3,148,0,7,6,105,97,0,4,1,102,2,110,116,3,6,147,0,1,102,101,2,110,99,101,0,1,108,2,
110,99,101,0,1,108,112,2,110,116,0,104,2,32,0,116,104,3,6,147,87,0,1,10,2,32,24,3,8,37,
13,0,114,121,1,10,3,8,57,13,34,2,124,0,116,101,1,21,2,32,3,8,113,141,47,0,99,1,10,2,
32,3,8,124,35,49,0,101,1,21,2,32,3,8,124,132,0,4,1,10,2,32,3,8,144,0,1,21,2,116,
105,118,101,0,1,21,21,2,32,0,114,121,1,108,10,3,8,144,34,2,124,0,2,110,103,32,3,57,35,0,
4,1,114,2,98,3,113,13,0,1,116,2,98,0,103,101,1,10,2,32,3,113,75,0,103,101,1,108,10,2,
32,3,113,113,75,0,114,100,2,32,3,113,114,72,0,114,99,104,3,113,130,49,0,105,3,113,140,0,4,1,
21,2,110,100,3,124,6,35,0,1,21,2,110,105,99,0,1,21,2,110,105,116,0,114,97,2,32,3,124,6,
121,34,13,0,8,102,2,110,99,3,124,6,126,0,110,99,101,8,102,3,124,6,126,50,89,141,0,4,1,108,
97,2,110,116,3,124,13,0,1,108,108,105,2,110,116,0,4,116,101,1,103,2,32,3,124,13,47,0,116,101,
1,114,112,111,2,32,0,110,1,21,2,99,121,3,124,13,50,0,1,112,2,110,111,3,124,35,0,114,2,105,
116,121,3,124,35,34,0,105,115,1,108,3,124,141,88,0,1,21,2,110,97,32,3,132,6,35,0,1,108,10,
2,110,99,101,3,132,13,0,4,1,17,67,29,3,140,13,0,1,102,2,98,0,114,5,8,1,17,67,3,140,
119,0,4,1,10,2,110,3,144,0,2,109,0,8,112,2,110,17,65,0,110,8,3,144,50,0,4,114,1,108,
21,2,32,3,145,0,114,2,105,17,67,0,4,114,3,148,0,114,1,17,67,0,7,6,105,101,0,1,10,2,
32,3,2,37,0,117,1,108,2,116,101,3,2,122,83,0,110,101,1,100,2,32,3,6,140,132,50,0,114,2,
32,28,17,3,6,145,0,116,121,1,21,3,6,147,47,2,124,0,108,1,114,10,2,32,3,8,132,118,0,1,
10,2,110,32,3,8,144,0,115,116,1,10,2,32,14,128,130,131,3,13,89,47,0,121,2,32,3,37,0,2,
17,67,97,32,3,37,6,122,0,114,101,2,32,3,37,6,143,0,108,1,110,10,2,32,3,57,118,0,4,117,
1,108,17,65,3,57,137,0,119,0,119,2,32,0,100,2,32,14,128,130,130,3,72,0,100,115,2,32,14,128,
130,131,3,72,88,0,4,115,2,32,14,128,130,130,3,88,0,115,2,32,28,21,14,128,128,129,0,4,2,108,
108,17,65,3,113,6,122,0,2,110,17,67,105,17,65,0,2,116,116,0,114,1,10,2,121,3,113,13,34,0,
115,99,3,113,122,89,0,1,100,101,109,2,118,97,108,3,113,132,0,114,114,101,2,32,3,113,143,0,114,1,
10,2,32,24,14,128,130,130,3,114,0,1,114,102,2,110,100,3,122,0,4,3,124,0,1,112,112,2,32,0,
1,115,2,118,101,0,2,110,116,97,108,3,124,6,122,0,110,110,3,124,6,122,50,0,2,103,111,3,124,6,
141,0,114,2,97,3,124,6,143,34,0,100,108,121,3,124,72,55,2,124,0,4,1,29,3,132,0,1,102,2,
110,100,0,1,103,2,110,0,1,114,112,2,115,116,0,2,99,101,0,2,102,0,2,107,0,2,108,0,2,118,
0,2,118,101,0,2,122,0,8,114,0,8,122,0,104,2,17,67,0,115,115,97,3,132,6,122,89,13,0,115,
116,97,3,132,6,122,89,47,13,0,106,3,132,6,141,0,8,118,2,116,3,132,13,6,0,103,2,101,13,3,
132,75,0,4,115,1,99,101,112,115,2,32,3,132,88,0,115,1,114,101,115,2,32,0,105,2,32,3,132,140,
0,117,1,108,3,137,0,117,116,101,5,3,1,108,3,137,47,6,122,0,4,1,112,2,32,3,140,0,2,32,
0,2,99,0,8,116,2,17,66,0,8,116,103,111,104,0,5,8,8,99,115,2,110,3,140,119,0,4,1,10,
2,116,32,3,144,0,1,21,2,116,104,0,2,110,0,4,114,3,145,0,114,2,99,0,4,1,99,115,2,110,
99,3,147,0,1,108,99,2,110,116,0,2,110,116,105,17,67,0,2,116,0,8,99,115,2,110,0,4,8,104,
2,114,3,148,0,114,1,108,112,2,32,0,114,8,114,17,67,0,7,6,105,103,0,110,1,115,2,111,3,2,
124,50,57,0,4,2,110,111,3,2,124,81,0,8,2,110,105,0,8,109,2,114,97,116,3,2,140,81,0,110,
101,2,32,3,6,132,50,0,4,117,2,32,3,6,132,81,0,117,2,101,0,97,110,1,110,2,32,3,8,124,
81,13,50,0,110,111,110,2,32,3,37,50,57,126,50,0,101,111,3,124,75,13,0,105,98,1,10,3,124,75,
13,71,0,4,1,100,2,110,17,65,3,124,81,0,2,110,97,0,2,110,111,109,0,110,111,2,114,97,110,3,
124,81,50,114,0,1,109,97,2,97,32,3,132,81,0,4,1,21,2,110,32,3,140,0,1,21,2,110,101,0,
104,1,104,0,104,1,110,0,104,1,115,0,104,2,116,0,4,110,2,17,67,3,140,50,0,110,2,32,0,109,
2,32,3,140,65,0,4,1,116,2,101,12,3,140,81,0,8,109,2,114,97,0,8,116,2,114,0,7,6,105,
108,0,8,2,108,21,3,2,124,55,0,8,100,2,97,116,3,2,140,55,0,4,97,1,21,2,32,3,6,124,
55,13,0,108,97,1,21,2,32,0,111,113,117,105,3,6,124,55,13,49,58,124,0,4,2,105,115,101,3,13,
55,0,2,105,122,101,0,101,1,10,2,103,101,3,13,55,124,0,121,1,10,2,32,14,128,130,130,3,55,2,
124,0,4,1,99,17,67,21,2,32,3,118,0,1,112,21,2,32,0,1,114,21,2,32,0,1,115,21,2,32,
0,1,116,110,2,32,0,1,118,21,2,32,0,101,5,3,1,10,2,32,28,18,0,4,1,104,99,2,100,114,
3,124,55,0,1,119,2,100,101,114,17,67,0,2,101,17,65,0,8,2,108,110,0,8,2,108,117,115,116,0,
101,1,114,99,97,115,3,124,55,124,0,108,97,114,100,1,10,2,32,3,132,121,0,4,1,17,67,2,101,114,
3,140,55,0,1,104,99,2,100,0,1,108,2,97,104,32,0,1,115,2,101,110,0,8,17,67,2,97,103,101,
0,8,17,67,2,111,0,8,109,2,100,0,8,119,2,100,0,7,6,105,109,0,4,8,2,21,3,2,124,65,
0,8,2,112,101,114,17,67,21,14,128,132,130,0,8,2,112,114,101,21,14,128,132,130,0,109,8,2,21,0,
4,2,112,101,99,117,3,4,124,65,0,2,112,111,114,116,117,0,2,112,114,101,115,97,0,109,2,97,116,0,
109,2,101,109,0,105,108,101,1,115,3,6,124,65,113,55,124,0,1,104,115,2,97,32,3,6,132,65,0,111,
117,115,1,21,2,32,3,8,124,65,13,89,0,105,110,101,1,10,2,32,3,8,124,65,132,50,0,109,117,8,
2,110,111,3,113,65,57,137,0,4,1,21,2,101,116,114,3,124,65,0,2,101,110,116,12,0,2,105,116,0,
2,112,97,99,0,2,112,101,116,117,115,0,2,112,108,97,110,116,32,0,2,112,108,101,0,2,112,108,105,99,
97,0,2,112,114,111,118,105,115,0,2,112,117,108,115,101,32,0,2,117,109,0,109,2,105,103,0,109,2,105,
110,0,109,2,117,110,105,18,71,0,101,2,110,116,111,3,124,65,6,122,0,109,111,2,98,105,3,124,65,6,
139,0,112,111,2,116,101,110,3,124,65,48,13,0,112,114,101,103,5,35,2,110,97,116,3,124,65,48,34,4,
122,81,0,112,114,101,103,3,124,65,48,34,6,122,81,0,97,103,2,101,13,3,124,65,113,75,0,4,101,2,
116,101,114,32,3,124,65,132,0,101,2,116,114,101,0,1,10,2,32,3,125,65,0,4,1,108,99,3,140,65,
0,5,3,1,115,2,117,108,116,0,8,114,112,2,97,0,98,1,108,99,0,7,6,105,110,0,8,2,110,101,
114,118,12,14,128,132,130,3,2,124,0,4,8,2,21,14,128,132,130,3,2,124,50,0,8,2,99,111,114,112,
0,8,2,99,114,101,100,0,8,2,115,116,105,108,0,8,2,116,101,103,114,105,0,110,8,2,117,109,0,4,
116,8,2,101,114,105,111,12,3,2,124,50,47,0,116,8,2,101,114,109,105,110,12,0,116,101,114,8,2,114,
111,103,3,2,124,50,47,122,0,4,116,101,114,8,2,110,25,3,2,124,50,47,131,0,116,101,114,8,2,110,
97,108,0,116,101,114,8,2,112,111,108,21,0,116,101,114,8,2,112,114,0,116,101,114,112,114,101,2,116,3,
2,124,50,47,131,48,34,124,0,100,8,2,101,102,105,110,3,2,124,50,72,0,102,114,97,8,2,99,3,2,
124,50,83,34,35,0,102,97,8,2,108,3,2,124,50,83,35,0,4,103,1,21,2,32,12,14,128,153,131,3,
2,124,68,0,103,1,108,101,2,32,12,14,128,152,131,0,103,1,109,111,21,21,2,32,14,128,152,131,0,103,
1,110,101,2,32,14,128,136,131,0,103,1,114,17,66,10,2,32,0,103,1,114,101,2,32,14,128,136,131,0,
103,1,114,117,101,2,32,14,128,136,131,0,103,1,117,103,111,108,2,32,14,128,136,132,0,103,1,120,10,2,
32,12,14,128,136,131,0,4,103,108,121,1,21,2,32,14,128,153,133,3,2,124,68,55,2,124,0,103,108,121,
1,110,101,2,32,14,128,168,133,0,103,108,121,1,114,101,2,32,14,128,168,133,0,4,103,109,101,110,116,1,
21,2,32,14,128,153,135,3,2,124,68,65,13,50,47,0,103,109,101,110,116,1,114,101,2,32,14,128,136,135,
0,4,103,115,1,110,101,2,32,14,128,136,132,3,2,124,68,88,0,103,115,1,114,101,2,32,14,128,136,132,
0,4,8,2,100,101,14,128,132,130,3,4,124,50,0,8,2,100,105,115,14,128,132,130,0,8,2,100,105,118,
14,128,132,130,0,8,2,101,120,14,128,132,130,0,8,2,115,101,99,14,128,132,130,0,8,2,115,105,103,110,
105,102,14,128,132,130,0,8,2,115,105,110,99,14,128,132,130,0,116,101,114,8,2,17,65,14,128,132,133,3,
4,124,50,47,13,34,0,116,114,111,8,2,21,3,4,124,50,47,34,13,0,116,101,114,8,2,21,14,128,132,
133,3,4,124,50,47,114,0,102,114,97,8,2,14,128,132,133,3,4,124,50,83,34,13,0,102,111,8,2,116,
3,4,124,50,83,139,0,1,21,2,99,105,97,108,3,6,124,50,0,100,97,1,21,2,32,3,6,124,50,72,
13,0,2,103,97,32,3,6,124,68,0,4,1,98,2,97,32,3,6,132,50,0,1,104,112,2,97,32,0,1,
107,2,97,32,0,1,108,2,97,32,0,1,114,2,97,32,0,1,116,2,97,32,0,105,1,21,2,32,3,6,
132,50,124,0,111,2,32,3,6,132,50,139,0,4,1,112,115,2,97,108,32,3,6,140,50,0,2,97,108,32,
28,17,0,105,110,1,10,2,32,3,8,13,50,124,50,0,1,109,10,2,97,108,32,3,8,124,50,0,111,117,
115,1,21,2,32,3,8,124,50,13,89,0,1,21,2,97,116,101,3,8,125,50,0,4,1,115,97,98,2,32,
3,13,50,0,5,7,1,10,2,32,0,101,115,115,1,103,2,32,14,128,130,132,3,50,13,89,0,103,115,1,
21,2,32,14,136,128,129,3,88,0,4,1,109,97,120,2,101,3,113,50,0,8,2,105,109,0,101,1,109,114,
101,2,32,0,4,116,114,97,8,2,99,116,3,113,50,47,34,35,0,116,114,97,8,2,110,115,0,97,8,102,
2,103,108,3,113,50,141,0,4,1,10,2,101,110,17,67,3,124,50,0,1,99,2,101,0,1,99,110,105,2,
101,0,1,103,2,101,0,1,107,2,100,101,114,17,67,0,1,107,2,100,108,0,1,107,2,100,114,0,1,114,
116,2,105,0,2,100,101,120,0,2,100,105,97,0,2,101,97,0,2,101,101,0,2,101,115,99,0,2,102,105,
110,105,116,101,0,2,115,101,99,116,0,8,2,98,0,8,2,99,97,110,0,8,2,99,101,110,115,0,8,2,
99,104,0,8,2,99,111,109,17,65,0,8,2,99,114,101,0,8,2,99,117,98,0,8,2,99,117,108,0,8,
2,100,105,99,0,8,2,100,105,103,111,0,8,2,100,111,108,0,8,2,102,105,100,0,8,2,102,105,108,0,
8,2,102,108,111,0,8,2,102,108,117,0,8,2,102,111,32,0,8,2,106,117,114,0,8,2,108,0,8,2,
109,0,8,2,111,114,103,0,8,2,112,0,8,2,113,117,101,0,8,2,113,117,105,115,0,8,2,114,0,8,
2,115,101,116,0,8,2,115,104,0,8,2,115,105,103,104,0,8,2,115,111,102,0,8,2,115,111,108,97,0,
8,2,115,111,108,101,0,8,2,115,111,109,117,0,8,2,115,112,105,114,0,8,2,115,116,97,103,0,8,2,
115,116,97,110,0,8,2,115,116,105,0,8,2,115,116,114,117,109,0,8,2,115,117,108,0,8,2,116,101,103,
0,8,2,116,105,109,97,0,8,2,116,111,110,97,0,8,2,117,110,0,8,2,118,111,105,0,8,2,119,97,
0,101,1,108,97,110,2,32,0,101,1,108,117,2,32,0,101,2,32,28,18,0,110,8,2,25,0,110,8,2,
101,114,0,101,120,8,2,111,114,3,124,50,6,122,49,89,0,4,105,1,102,21,2,116,101,3,124,50,13,0,
110,111,8,2,99,101,0,110,111,8,2,118,0,101,114,97,1,109,2,108,3,124,50,13,34,13,0,116,101,2,
108,108,101,99,3,124,50,47,13,0,116,101,114,102,101,114,3,124,50,47,13,83,6,145,0,116,101,114,8,2,
101,115,116,3,124,50,47,34,0,116,114,105,103,117,3,124,50,47,34,6,132,81,0,4,116,114,97,8,3,124,
50,47,34,13,0,116,114,111,8,2,118,0,116,114,105,99,97,3,124,50,47,34,124,49,13,0,116,101,114,2,
118,105,101,119,3,124,50,47,114,0,99,114,101,109,3,124,50,49,34,124,65,0,101,119,8,115,3,124,50,57,
137,0,100,101,108,105,8,2,98,3,124,50,72,6,122,55,13,0,100,105,8,2,103,101,110,3,124,50,72,6,
124,0,100,105,103,101,8,2,115,3,124,50,72,124,75,6,122,0,103,1,114,102,110,3,124,50,75,0,4,102,
97,8,2,109,3,124,50,83,13,0,102,97,8,2,110,116,25,0,102,111,114,2,109,97,116,105,111,3,124,50,
83,114,0,99,105,2,100,101,3,124,50,89,124,0,115,117,98,8,3,124,50,89,129,71,0,4,105,1,109,100,
97,3,124,50,124,0,105,8,109,0,117,116,101,8,109,2,109,3,124,50,124,47,0,105,97,116,117,114,1,109,
3,124,50,124,76,114,0,105,115,109,2,32,3,124,50,124,88,13,65,0,101,1,118,2,103,3,124,50,125,0,
4,2,103,111,116,3,124,68,0,8,2,103,114,111,0,8,2,107,0,1,21,2,97,116,105,111,110,3,125,50,
0,4,101,1,99,21,2,32,3,132,50,0,101,1,100,10,2,32,0,101,1,104,99,17,65,2,32,0,101,1,
104,112,2,32,0,101,1,108,105,2,32,0,101,1,108,111,2,32,0,101,1,114,21,2,32,0,101,1,116,21,
2,32,0,101,1,122,2,32,0,4,1,98,2,100,3,140,50,0,1,102,2,97,0,1,102,2,100,0,1,103,
21,2,97,32,0,1,104,2,100,17,66,0,1,104,2,100,32,0,1,104,99,2,97,0,1,104,101,98,2,100,
0,1,104,115,2,105,0,1,107,2,100,0,1,108,98,2,100,0,1,109,2,100,0,1,114,103,2,100,0,1,
119,2,100,101,114,32,0,1,119,2,100,105,110,103,0,1,119,101,114,2,100,0,1,119,110,117,2,100,0,8,
114,2,100,0,101,1,112,2,32,0,101,1,114,99,2,32,0,101,1,116,110,101,21,21,2,32,0,117,8,109,
2,116,101,3,140,50,6,57,137,0,7,6,105,111,0,110,101,1,21,2,32,3,6,147,50,37,0,117,115,1,
103,3,8,13,89,0,117,115,1,21,3,8,113,13,89,0,1,10,2,32,3,8,113,139,0,110,5,8,1,10,
2,32,3,8,124,129,50,0,5,7,1,10,2,32,3,8,132,139,0,4,110,1,10,2,32,3,8,144,50,0,
110,1,108,108,2,32,0,110,1,110,0,4,1,103,2,110,12,3,13,0,1,104,115,2,110,0,117,2,114,17,
65,3,57,13,0,4,114,1,10,2,32,3,57,114,0,114,1,10,2,97,108,32,0,117,114,2,25,0,2,108,
105,32,3,113,6,139,0,1,109,2,110,3,113,126,0,1,100,114,97,99,3,113,139,0,114,105,116,121,3,124,
6,126,34,113,47,2,124,0,2,116,29,3,124,13,0,114,1,114,2,32,3,124,114,0,2,32,3,132,139,0,
117,120,3,137,0,110,101,2,32,3,140,6,139,50,37,0,4,1,98,2,108,111,103,121,3,140,126,0,1,118,
0,8,2,110,0,110,1,108,108,3,144,50,0,114,1,10,2,12,3,145,0,4,1,118,2,108,3,147,0,1,
122,2,110,0,8,114,2,116,0,110,8,108,3,147,50,0,7,6,105,114,0,2,101,99,116,3,2,140,34,0,
4,1,21,2,111,32,3,6,144,34,0,2,97,32,0,2,105,32,0,2,97,98,108,101,3,6,148,0,1,21,
2,97,116,105,111,110,3,13,34,0,1,112,115,97,2,105,3,34,0,4,8,2,114,97,116,3,113,0,8,2,
114,101,21,14,128,132,130,0,8,2,97,3,113,34,0,5,3,2,101,99,116,3,114,34,0,4,2,114,111,3,
124,0,2,114,117,0,8,2,114,17,65,0,4,1,109,2,97,99,3,124,34,0,1,112,115,2,18,68,0,2,
105,0,2,111,0,4,97,1,112,115,110,111,99,2,116,3,124,34,13,0,117,1,118,2,108,0,4,3,131,0,
1,116,115,2,32,0,4,1,103,2,111,3,140,34,0,1,118,2,117,115,0,2,101,116,121,0,8,2,105,115,
104,0,8,2,111,110,18,67,12,0,8,17,67,2,111,32,0,4,101,1,99,2,110,3,140,34,13,0,111,1,
118,2,110,0,101,5,8,3,140,119,0,1,17,67,21,2,32,3,145,0,4,1,115,2,101,110,3,148,0,1,
115,101,100,0,2,101,101,0,97,8,112,2,99,0,101,0,101,1,112,0,111,1,25,2,110,0,101,114,2,32,
3,148,34,114,0,97,108,1,112,115,3,148,34,118,0,121,2,32,3,148,34,124,0,4,5,5,3,150,0,5,
5,1,116,115,2,32,0,7,6,105,115,0,4,1,21,2,99,111,32,3,6,124,89,0,1,21,2,116,105,99,
32,0,99,1,21,2,101,110,17,67,0,115,2,97,32,0,115,105,109,111,2,32,3,6,124,89,124,65,139,0,
116,101,1,21,2,32,3,6,132,89,47,0,104,2,17,65,32,3,6,132,91,0,1,114,2,121,32,3,8,13,
89,0,1,115,17,67,21,2,32,3,8,124,89,0,116,97,110,1,21,2,32,24,3,8,124,89,47,35,50,0,
116,97,110,1,21,2,32,3,8,124,89,47,121,50,0,97,5,3,2,116,105,111,110,3,13,88,141,0,1,109,
97,2,32,14,128,128,129,3,88,0,8,100,2,101,3,113,89,0,104,1,10,2,32,3,113,91,0,1,118,2,
105,116,3,124,88,0,4,109,1,17,66,105,21,2,32,14,128,144,131,3,124,88,13,65,0,109,1,21,2,32,
14,128,145,131,0,109,1,110,97,2,32,14,128,144,131,0,109,1,116,101,2,32,14,128,128,131,0,109,1,116,
111,2,32,14,128,128,131,0,4,1,98,2,32,3,124,89,0,1,99,2,32,0,1,109,17,65,114,112,0,1,
109,21,21,2,32,0,1,114,2,32,0,1,118,2,32,0,4,1,118,2,99,111,117,110,3,140,0,2,108,101,
32,0,8,2,108,101,0,108,97,110,100,8,3,140,55,13,50,72,0,4,1,10,2,97,98,108,3,140,88,0,
1,118,100,97,0,2,101,114,12,32,0,2,111,32,0,2,111,114,32,0,101,1,108,97,105,2,32,14,128,128,
131,0,101,2,32,0,101,2,100,32,0,101,114,2,32,3,140,88,114,0,97,2,116,105,111,110,3,140,88,141,
0,4,1,114,104,99,2,116,32,3,140,89,0,2,105,118,101,0,7,6,105,116,0,8,2,105,110,101,114,3,
2,140,47,0,114,111,8,110,2,21,3,4,140,47,34,139,0,105,117,115,2,32,3,6,124,91,13,89,0,4,
1,114,101,117,103,114,3,6,132,47,0,1,116,17,65,17,67,2,32,0,2,97,32,24,0,2,105,32,0,2,
111,32,0,105,115,2,32,3,6,140,47,124,89,0,1,10,2,105,118,101,32,3,8,113,47,0,4,121,1,10,
2,32,3,8,113,47,2,37,0,121,1,100,10,2,32,14,128,128,131,0,121,1,100,117,29,2,32,0,1,21,
21,2,97,110,32,3,8,124,47,0,111,117,115,1,10,3,8,125,47,13,89,0,97,114,121,5,3,1,10,2,
32,3,13,47,122,34,2,124,0,101,115,2,32,28,18,14,128,128,129,3,89,0,4,1,10,2,101,32,3,124,
47,0,1,98,114,111,0,1,100,101,114,99,0,1,108,2,101,114,0,1,110,97,114,103,2,101,0,1,110,105,
102,110,2,101,0,1,114,99,2,101,32,0,1,114,117,2,101,0,1,115,105,117,113,2,101,0,1,115,111,112,
2,101,0,2,101,114,97,116,0,8,100,101,0,121,8,17,67,2,32,3,124,47,37,0,101,115,1,115,111,112,
2,32,3,124,47,89,0,104,1,108,2,101,114,3,124,86,0,97,1,10,2,116,105,118,101,32,3,125,47,141,
0,114,101,1,108,3,132,47,114,0,4,1,10,2,101,32,24,3,140,47,0,1,99,2,101,32,0,1,99,2,
101,114,32,0,1,109,97,2,101,0,1,110,2,114,17,65,0,1,110,117,2,101,0,1,116,2,108,0,1,118,
2,97,108,0,1,118,2,101,114,32,0,2,101,101,32,0,2,117,109,0,8,109,2,111,0,8,112,115,2,101,
0,8,115,2,101,0,8,116,2,97,110,0,101,1,114,119,0,101,1,120,2,32,0,101,8,2,109,3,140,47,
13,0,114,111,1,110,2,103,101,3,140,47,34,13,0,114,111,1,110,3,140,47,34,139,0,101,115,1,10,2,
32,3,140,47,89,0,4,104,8,116,3,140,86,0,104,101,1,108,0,104,101,2,32,0,7,6,105,118,0,2,
111,114,111,117,115,3,6,124,84,0,4,1,114,116,110,111,99,3,6,140,84,0,1,116,99,2,97,108,0,1,
118,21,2,97,108,0,97,1,108,21,2,32,3,6,140,84,13,0,4,1,17,67,17,67,29,2,101,110,3,124,
84,0,1,17,67,29,2,101,108,0,1,21,2,101,0,1,104,115,2,101,114,0,1,108,2,101,114,0,1,114,
2,101,108,0,1,114,2,101,110,0,1,114,2,101,114,0,1,114,2,101,116,0,8,103,2,101,0,8,114,2,
101,114,32,0,101,2,110,101,115,115,0,8,116,2,111,3,132,84,0,4,1,100,121,2,101,3,140,84,0,1,
104,2,101,32,0,1,108,2,101,110,0,1,110,2,101,32,0,1,114,100,2,101,32,0,1,114,100,2,101,114,
0,1,114,101,100,2,101,0,1,114,112,101,100,2,101,0,1,118,2,101,0,1,119,2,101,32,0,2,101,13,
0,2,111,114,32,0,8,2,97,110,0,8,108,2,101,17,66,0,8,108,97,2,101,0,8,114,114,97,2,101,
0,101,8,108,2,17,66,0,97,108,1,114,3,140,84,118,0,7,6,108,101,0,1,116,116,2,21,3,14,55,
0,4,1,10,2,32,3,55,0,1,114,10,2,32,0,1,17,67,11,2,17,66,105,97,3,55,6,132,0,4,
1,17,67,10,2,115,115,3,55,13,0,1,98,17,65,2,17,66,32,0,115,115,1,21,2,32,14,128,130,132,
3,55,13,89,0,115,115,110,101,115,115,1,21,2,32,14,128,130,136,3,55,13,89,50,13,89,0,115,115,108,
121,1,21,2,32,14,128,130,134,3,55,13,89,55,2,124,0,4,1,116,21,2,114,121,32,3,55,114,0,114,
1,98,17,65,2,32,0,114,1,98,21,2,17,67,21,0,103,103,101,100,3,55,122,81,124,72,0,115,115,5,
8,1,21,2,32,14,128,130,132,3,55,122,89,0,115,115,110,101,115,115,5,8,1,21,2,32,14,128,130,136,
3,55,122,89,50,122,89,0,115,115,108,121,5,8,1,21,2,32,14,128,130,134,3,55,122,89,55,2,124,0,
109,1,112,10,2,101,110,116,3,55,124,65,0,4,1,17,67,2,116,111,110,32,3,118,0,1,17,67,10,2,
32,0,1,17,67,11,2,17,66,21,0,1,98,21,2,17,67,21,0,1,100,21,2,17,67,21,0,1,103,21,
2,17,67,21,0,1,116,21,2,17,67,21,0,109,1,10,2,101,110,116,3,118,65,0,100,1,98,17,65,2,
32,3,118,72,0,5,8,1,17,67,10,2,32,3,122,55,0,7,6,109,105,0,4,115,8,2,116,105,109,3,
65,2,124,89,0,115,8,2,116,105,116,0,100,100,108,101,8,2,101,3,65,4,124,72,118,0,115,8,2,105,
110,3,65,4,124,89,0,99,114,111,8,2,21,21,21,14,128,132,133,3,65,4,140,49,34,139,0,99,114,111,
8,2,21,14,128,132,133,3,65,6,140,49,34,139,0,2,115,116,97,3,65,113,0,108,108,101,110,3,65,113,
55,122,50,0,4,100,8,2,101,3,65,113,72,0,100,8,2,112,114,0,4,115,8,2,21,14,128,132,131,3,
65,113,89,0,115,8,2,115,17,67,14,128,132,131,0,115,99,8,2,101,0,4,8,2,110,101,114,97,3,65,
124,0,8,2,115,115,105,0,108,108,8,2,105,111,110,3,65,124,55,0,108,108,105,8,3,65,124,55,124,0,
115,101,114,97,98,3,65,124,88,14,34,13,71,0,4,115,2,99,104,105,101,3,65,124,89,0,115,2,100,101,
109,0,115,2,102,105,0,115,2,104,97,112,0,115,2,116,114,97,108,0,115,2,116,114,101,115,0,115,2,116,
121,0,115,8,2,116,105,0,115,115,8,0,115,99,105,8,2,98,3,65,124,89,13,0,115,116,108,101,3,65,
124,89,118,0,115,104,2,109,97,3,65,124,91,0,8,2,110,17,65,114,3,65,140,0,99,114,2,111,3,65,
140,49,34,0,4,99,114,111,2,103,114,97,112,3,65,140,49,34,13,0,99,114,111,2,115,99,111,0,99,114,
111,8,2,112,104,0,99,114,111,8,2,98,3,65,140,49,34,139,0,115,2,101,114,3,65,140,88,0,7,6,
110,103,0,4,1,17,65,109,2,121,3,50,75,0,1,105,98,2,101,114,0,1,105,103,2,101,114,0,1,117,
2,121,0,2,101,0,2,105,101,32,0,2,105,116,105,0,8,111,108,2,105,116,0,105,2,98,3,50,75,13,
0,4,101,100,3,50,75,72,0,101,100,1,111,112,115,0,4,105,110,103,1,105,104,3,50,75,113,68,0,105,
110,103,1,105,114,99,0,105,110,103,1,117,2,32,0,101,1,111,99,2,115,116,3,50,75,122,0,4,3,68,
0,1,105,114,2,101,114,0,1,105,115,2,101,114,0,2,121,0,117,101,0,4,101,100,1,97,3,68,72,0,
101,100,1,105,108,0,101,100,1,111,0,4,1,97,98,2,101,114,3,68,81,0,1,97,108,99,2,101,114,0,
1,105,2,101,114,0,1,111,2,101,114,0,1,117,111,121,2,101,114,0,2,17,65,0,2,101,115,116,0,2,
108,0,2,114,0,8,97,2,101,114,0,8,105,114,2,101,0,105,110,103,2,32,3,68,113,68,0,7,6,111,
108,0,4,105,1,112,2,116,101,99,3,4,126,55,124,0,121,1,112,32,24,0,111,2,103,105,3,6,126,55,
13,0,4,1,21,21,2,97,114,3,6,139,55,0,1,21,21,2,117,115,0,105,115,1,112,10,3,8,13,55,
124,89,0,4,1,10,2,101,110,17,67,3,13,55,0,1,10,2,111,117,115,32,0,1,109,2,101,99,0,1,
112,2,105,116,101,0,1,115,2,105,99,0,1,115,2,105,100,105,0,1,115,2,105,108,0,8,2,121,109,0,
108,1,112,2,117,0,108,1,114,97,99,0,111,2,103,105,99,3,13,55,6,126,0,101,1,109,2,115,116,3,
13,55,122,0,105,99,101,1,112,3,13,55,132,89,0,102,1,119,3,117,55,83,0,118,1,119,3,117,55,84,
0,4,1,114,116,101,112,2,32,3,118,0,1,116,115,10,2,32,0,8,100,105,0,4,1,10,2,105,32,3,
126,55,0,1,21,2,111,32,0,1,104,2,97,114,0,1,109,2,101,99,117,108,101,0,1,115,2,101,109,0,
1,116,2,101,114,0,1,118,2,17,67,0,8,100,105,2,97,0,108,1,114,98,0,108,1,114,116,2,17,65,
0,108,1,116,97,0,1,99,2,111,117,114,3,129,55,0,111,114,1,99,3,129,55,114,0,4,1,102,2,107,
3,139,0,1,121,2,107,0,4,1,114,116,110,111,99,3,139,55,0,1,116,120,101,0,2,97,110,100,32,0,
2,97,114,0,8,2,97,29,0,8,98,2,115,116,0,8,99,2,98,0,108,1,110,0,108,1,114,0,108,1,
116,0,108,1,119,0,4,116,3,139,55,47,0,116,1,118,0,100,3,139,55,72,0,109,2,32,3,139,65,0,
7,6,111,109,0,98,111,8,114,116,2,110,3,2,126,65,71,139,0,8,2,105,17,67,3,2,139,65,0,101,
1,21,2,116,114,121,3,6,126,65,13,0,4,101,1,21,2,116,114,101,3,6,126,65,124,0,101,2,116,101,
114,0,105,110,2,111,3,6,126,65,124,50,0,101,1,115,2,116,104,3,6,129,65,0,101,1,110,105,21,21,
2,32,3,6,139,65,141,0,4,1,10,2,105,115,101,32,3,8,13,65,0,1,10,2,105,122,101,32,0,1,
21,2,105,115,116,32,0,121,1,10,2,32,3,8,13,65,2,124,0,4,1,10,2,32,3,13,65,0,1,10,
2,111,117,115,32,0,1,100,2,101,115,116,0,1,100,2,105,110,105,0,8,100,2,97,0,101,114,1,10,2,
32,3,13,65,114,0,97,1,116,2,116,111,3,13,65,121,0,97,1,119,2,110,3,117,65,13,0,101,1,119,
2,110,3,124,65,124,0,4,1,99,2,32,3,126,65,0,1,108,103,2,101,114,0,1,114,2,32,0,8,112,
2,101,0,110,105,8,2,21,3,126,65,50,6,124,0,4,1,99,2,101,3,129,65,0,1,99,2,112,97,110,
0,1,115,2,101,32,0,101,8,115,0,109,1,99,2,101,0,97,99,104,1,116,115,3,129,65,13,49,0,101,
114,1,99,2,32,3,129,65,114,0,4,98,1,116,2,25,3,137,65,0,98,1,119,2,32,0,98,101,1,99,
2,32,0,4,1,110,2,97,100,3,139,65,0,1,114,2,97,110,0,1,114,104,99,0,98,1,99,2,32,0,
101,1,114,104,99,0,97,110,1,114,2,116,105,3,139,65,6,35,50,0,7,6,111,110,0,1,100,2,97,116,
3,2,139,50,0,4,1,21,2,105,99,97,3,6,126,50,0,1,115,114,101,112,2,105,0,121,109,111,117,115,
3,6,126,50,124,65,13,89,0,4,1,112,116,115,111,112,3,6,139,50,0,2,105,32,0,105,115,109,1,10,
2,32,3,8,13,50,124,88,13,65,0,105,115,116,1,10,2,32,3,8,13,50,124,89,47,0,4,1,10,2,
97,103,101,32,3,13,50,0,1,10,2,101,114,32,0,1,17,67,11,10,2,32,0,1,21,2,32,28,18,0,
1,21,21,2,32,0,1,98,10,2,32,0,1,99,10,2,32,0,1,99,101,2,100,0,1,100,17,67,2,32,
0,1,103,114,2,32,0,1,104,112,2,101,116,105,0,1,107,10,2,32,0,1,108,101,2,32,0,1,108,110,
2,32,0,1,109,2,100,32,0,1,109,10,2,32,0,1,114,97,2,32,0,1,114,100,2,32,0,1,115,10,
2,32,0,1,115,10,2,97,110,0,1,115,114,101,112,0,1,116,10,2,32,0,1,116,111,104,112,0,1,120,
10,2,32,0,121,1,10,2,32,3,13,50,2,124,0,111,117,115,1,10,3,13,50,13,89,0,101,8,3,58,
128,50,0,99,101,8,2,32,3,58,128,50,89,0,101,100,1,17,67,10,2,32,14,128,136,130,3,72,0,105,
110,103,1,17,67,10,2,32,14,128,136,131,3,113,68,0,4,1,103,2,101,3,126,50,0,1,110,2,101,0,
1,112,2,32,12,0,1,114,99,2,32,0,1,114,111,2,32,0,1,114,116,10,2,32,0,1,119,2,107,0,
1,119,2,116,0,2,97,108,100,0,5,3,1,103,97,2,32,0,5,8,1,21,2,32,12,12,0,8,112,115,
0,101,1,109,2,116,105,3,126,50,113,0,101,5,3,1,109,2,116,97,3,126,50,124,0,4,1,109,2,101,
121,3,129,50,0,1,109,2,107,0,1,109,2,116,104,0,1,114,102,2,116,0,1,119,0,8,2,105,111,0,
8,104,2,101,121,0,8,108,2,100,111,110,0,8,112,115,2,103,0,101,1,100,110,117,2,32,0,101,1,109,
2,116,97,3,129,50,124,0,103,5,35,1,109,2,101,114,3,129,68,81,0,4,2,97,110,32,3,139,50,0,
8,112,2,121,0,101,8,2,114,3,139,50,13,0,117,115,3,139,50,13,89,0,7,6,111,111,0,1,10,2,
110,3,6,137,0,4,1,17,67,2,107,3,117,0,1,102,2,116,0,1,103,2,100,0,1,104,2,100,0,1,
104,2,100,0,1,104,2,107,0,1,115,2,116,0,1,116,115,2,100,0,1,119,2,100,0,1,119,2,108,0,
4,1,108,98,2,100,3,129,0,1,108,102,2,100,0,4,114,3,136,0,114,2,32,0,4,3,137,0,1,107,
2,107,0,1,109,2,110,32,0,1,112,2,107,0,1,112,115,2,110,32,0,1,115,2,116,104,0,8,2,114,
0,116,2,105,99,32,3,137,6,126,47,0,115,101,1,104,99,3,137,88,0,4,115,2,101,3,137,89,0,115,
101,1,103,0,8,99,2,112,3,139,6,126,0,114,1,99,2,100,3,139,6,135,0,115,1,104,99,2,101,110,
3,139,88,0,4,114,1,112,3,146,0,114,8,109,0,7,6,111,114,0,8,102,2,115,21,3,2,135,0,4,
101,1,102,2,99,108,111,3,2,136,0,101,1,102,2,103,111,0,101,1,102,2,115,101,0,101,1,102,2,116,
111,0,121,5,3,1,116,17,65,21,21,2,32,3,4,152,34,37,0,4,1,21,2,105,99,32,3,6,126,34,
0,1,21,2,105,99,97,108,0,1,21,2,99,97,32,3,6,135,0,4,2,105,32,3,6,135,34,0,2,105,
120,0,2,117,109,32,3,6,136,34,0,116,101,1,102,2,32,3,6,136,47,141,0,105,108,121,1,21,2,32,
3,8,114,34,13,55,37,0,4,1,10,2,97,108,32,3,13,34,0,2,105,103,105,110,97,0,97,109,97,2,
32,3,13,34,6,35,65,13,0,101,115,99,3,13,34,6,122,89,0,121,1,10,2,32,3,13,34,37,0,111,
1,98,2,32,3,13,34,139,0,103,8,102,2,17,65,118,3,13,81,0,1,10,2,97,116,105,118,101,3,14,
34,0,101,100,1,10,2,32,28,17,14,128,128,129,3,72,0,4,1,10,2,32,3,114,0,1,10,2,101,110,
101,32,0,1,98,98,2,110,0,1,100,110,101,2,32,0,1,102,2,101,118,101,114,0,1,102,2,103,17,65,
116,0,1,102,10,2,100,32,0,1,102,102,101,2,116,0,1,114,114,101,116,0,1,116,110,101,118,2,32,0,
8,109,101,109,2,97,0,101,1,116,21,2,32,0,4,1,10,2,97,110,116,32,3,114,34,0,1,10,2,97,
116,101,0,1,10,2,97,116,105,111,110,0,1,10,2,111,117,115,0,2,97,114,18,67,0,2,105,122,17,65,
0,101,100,1,10,2,32,3,114,72,0,105,116,8,118,97,102,3,114,125,47,0,99,101,1,119,2,115,116,3,
117,0,2,114,3,126,0,4,1,21,2,105,116,105,3,126,34,0,1,21,2,105,116,121,0,1,108,102,2,105,
0,1,109,2,97,108,0,2,101,17,66,32,0,2,101,110,17,67,0,2,105,103,0,5,35,8,104,2,111,0,
8,2,105,17,67,0,114,8,109,0,4,97,2,99,108,3,126,34,13,0,97,8,2,116,111,0,101,105,103,110,
1,102,3,126,34,13,50,0,4,101,1,102,2,115,116,3,126,34,124,0,105,1,104,2,122,111,110,116,0,1,
119,2,114,3,129,0,111,117,103,104,3,129,34,13,0,111,117,103,104,5,3,3,129,34,139,0,4,1,119,2,
25,3,131,0,1,119,2,109,0,1,119,2,115,101,0,1,119,2,116,104,0,5,3,2,114,3,133,0,4,1,
99,2,107,3,135,0,1,102,2,107,0,1,104,99,2,100,0,1,108,2,100,0,1,121,2,107,0,2,99,104,
32,0,2,101,115,105,115,0,2,109,32,0,2,110,32,0,2,115,101,32,0,2,116,0,8,0,8,99,2,21,
0,8,102,2,21,0,8,109,0,101,8,102,2,17,65,0,101,8,102,2,17,67,0,116,1,109,101,2,32,0,
101,8,102,2,107,110,3,135,4,0,103,97,110,111,8,2,21,14,128,132,134,3,135,81,4,35,50,139,0,4,
3,136,0,1,99,2,101,32,0,1,100,2,32,0,1,108,112,0,1,112,2,116,0,1,116,110,2,32,0,1,
116,115,2,109,0,1,119,2,101,0,1,119,2,110,0,1,119,2,116,32,0,1,119,115,2,100,0,2,32,28,
17,12,12,0,5,8,1,10,2,32,0,5,8,1,21,21,2,32,14,128,144,130,0,101,0,101,1,116,115,2,
32,0,101,8,109,0,114,2,32,0,4,1,108,104,99,2,105,99,3,136,34,0,1,108,104,99,2,111,117,115,
0,2,17,65,0,2,101,17,65,0,2,101,116,0,2,101,120,0,105,108,121,5,3,1,21,2,32,3,136,34,
13,55,37,0,121,8,116,115,3,136,34,124,0,4,5,5,1,119,2,25,3,151,0,5,5,1,119,2,109,0,
5,5,1,119,2,115,101,0,5,5,1,119,2,116,104,0,7,6,111,115,0,2,105,116,121,3,6,126,89,0,
111,1,21,2,112,104,3,6,126,89,13,0,2,97,108,32,3,6,139,88,0,2,105,118,101,3,6,139,89,0,
105,115,2,32,3,6,139,89,124,89,0,117,114,101,3,6,139,90,114,0,1,17,67,10,2,97,117,114,32,3,
8,13,89,0,105,115,1,104,112,114,2,32,3,8,13,89,124,89,0,4,1,112,2,105,116,105,111,3,13,88,
0,115,1,112,2,101,115,115,0,4,1,21,2,121,32,3,13,89,0,101,1,112,114,117,112,0,111,1,21,2,
112,104,105,99,3,13,89,6,126,0,101,116,1,108,99,3,126,88,125,47,0,1,112,2,116,117,3,126,89,0,
99,105,108,108,111,8,3,126,89,6,124,55,126,0,4,116,1,112,2,101,114,105,3,126,89,47,0,116,1,112,
97,0,116,1,112,101,114,0,116,1,112,101,114,112,0,116,1,112,109,105,0,116,1,112,109,111,99,0,116,1,
112,120,101,0,116,1,112,121,104,0,4,5,3,1,99,2,116,3,134,89,0,5,3,1,114,102,2,116,0,115,
5,3,1,98,0,115,5,3,1,108,0,115,5,3,1,109,0,115,5,3,1,114,0,8,108,2,101,3,137,88,
0,4,1,29,2,121,3,139,88,0,8,114,2,101,13,0,101,2,32,0,4,1,99,2,101,99,3,139,89,0,
1,99,2,105,110,101,32,0,101,1,99,2,32,0,115,1,114,103,0,4,116,1,104,2,32,3,139,89,47,0,
116,1,104,103,0,116,1,109,0,116,1,112,0,7,6,111,116,0,101,1,104,2,108,3,2,139,47,122,0,114,
111,2,112,121,3,6,126,47,34,13,0,4,1,10,2,32,28,18,3,13,47,0,1,10,2,114,121,0,1,103,
10,2,32,0,1,112,2,101,110,116,105,0,1,114,114,10,2,32,0,1,118,105,112,0,121,108,101,1,99,3,
126,47,124,55,6,132,0,4,104,1,98,2,101,114,3,126,86,0,104,8,114,2,101,114,0,104,2,101,114,12,
3,129,86,0,104,5,3,1,108,99,3,134,87,0,4,1,99,2,97,110,3,139,47,0,1,109,2,105,118,0,
1,110,2,97,0,1,110,2,111,114,0,1,114,2,97,0,1,114,2,111,0,1,116,2,97,0,2,97,116,0,
105,99,101,1,110,3,139,47,113,89,0,111,114,1,109,3,139,47,114,0,111,1,114,112,2,110,3,139,47,126,
0,111,1,114,112,2,17,67,3,139,47,139,0,4,104,1,108,2,105,3,139,86,0,104,1,108,2,105,97,110,
0,104,1,114,116,101,98,0,104,101,1,108,99,0,104,1,98,3,139,87,0,104,101,2,114,97,112,12,3,139,
87,122,0,7,6,111,117,0,116,8,2,21,14,128,132,131,3,2,138,47,0,1,21,2,109,32,3,6,137,0,
4,115,1,17,66,10,2,32,3,8,13,89,0,115,1,114,100,10,2,32,0,4,103,104,1,114,98,2,32,3,
13,0,103,104,1,114,111,0,4,115,1,10,2,32,3,13,89,0,115,1,108,10,2,32,0,115,1,109,10,2,
32,0,115,1,110,10,2,32,0,115,121,1,10,2,32,3,13,89,2,37,0,1,104,2,109,3,57,137,0,97,
3,58,121,0,4,114,1,10,2,32,3,114,0,114,1,112,17,65,0,114,101,100,1,10,3,114,72,0,108,2,
100,3,117,0,99,101,1,108,103,2,115,3,126,0,4,103,104,1,99,3,126,83,0,103,104,1,114,116,0,4,
1,99,2,110,116,114,3,129,0,1,99,2,112,108,0,1,99,2,114,97,103,0,1,99,2,115,105,0,1,100,
2,98,0,1,100,2,103,0,1,110,2,114,105,0,1,114,116,2,98,108,0,1,115,2,116,104,101,114,0,1,
116,2,99,104,0,1,121,2,110,103,0,4,103,104,1,108,3,129,83,0,103,104,1,110,0,103,104,1,114,0,
103,104,1,116,0,4,114,3,131,0,114,1,99,2,116,101,0,114,2,110,0,114,5,3,1,99,2,97,103,0,
114,5,3,1,110,2,105,0,4,103,104,1,98,2,116,3,133,0,103,104,1,104,2,116,0,103,104,1,110,2,
116,0,103,104,1,114,98,2,116,0,103,104,1,114,119,0,103,104,2,116,0,103,104,8,0,4,103,104,5,3,
1,99,3,134,83,0,103,104,5,3,1,114,116,0,4,114,1,98,2,110,3,136,0,114,1,99,2,115,0,114,
1,99,2,116,0,114,1,99,2,116,101,115,97,0,114,1,109,2,110,0,114,1,112,0,114,1,112,110,2,32,
0,114,8,102,0,114,8,121,0,114,99,101,1,115,3,136,89,0,4,1,98,2,100,3,137,0,1,98,2,108,
108,0,1,99,2,116,104,0,1,104,103,2,108,0,1,107,0,1,109,2,115,115,101,0,1,110,2,103,97,0,
1,114,2,98,108,0,1,114,2,116,105,110,0,1,116,2,99,97,110,0,1,119,2,110,100,17,65,0,1,119,
2,110,100,17,67,0,1,121,2,116,0,2,32,0,2,102,0,2,105,0,2,108,17,65,0,2,112,0,2,118,
0,2,122,0,5,35,1,114,2,116,101,0,103,104,1,114,104,116,0,120,2,32,0,103,101,1,114,3,137,90,
0,99,104,1,100,3,137,91,0,4,3,138,0,1,102,2,108,101,0,1,114,17,67,2,116,0,1,121,2,116,
32,0,2,116,0,98,1,100,2,116,0,103,104,1,98,0,103,104,1,100,2,116,0,103,104,1,108,112,0,103,
104,1,108,115,0,103,104,1,114,100,0,4,1,98,2,108,100,3,139,0,1,104,115,2,108,100,101,114,0,1,
109,2,108,17,67,0,1,115,2,108,0,2,108,116,0,103,104,0,103,104,1,100,0,103,104,1,104,0,103,104,
1,108,114,0,4,114,1,98,2,115,101,3,146,0,114,1,116,0,114,1,116,2,32,0,114,1,116,2,110,0,
114,5,7,8,121,0,114,8,103,2,100,0,4,114,1,99,115,3,149,0,114,1,104,0,114,1,108,102,0,114,
1,115,0,114,1,116,115,0,114,1,118,101,2,101,100,0,114,1,118,101,100,0,114,8,0,114,8,100,0,4,
114,5,5,3,151,0,114,5,5,1,99,2,116,101,0,114,5,5,2,110,0,7,6,111,118,0,101,114,8,2,
21,14,128,132,132,3,4,139,84,114,0,2,18,67,99,104,32,3,6,139,84,0,105,116,99,104,1,21,2,32,
3,8,13,84,124,76,0,4,1,99,2,101,110,17,67,3,126,84,0,1,104,2,101,108,0,1,104,2,101,114,
0,1,110,2,101,108,0,1,114,103,2,101,108,0,1,114,116,2,101,114,0,8,2,117,108,0,101,114,101,105,
103,110,1,115,3,126,84,13,34,124,50,0,101,114,1,112,2,21,3,126,84,114,0,1,114,112,2,101,114,3,
127,84,0,4,1,99,2,101,110,3,129,84,0,1,99,2,101,116,0,1,104,115,2,12,0,1,108,0,1,108,
2,101,0,5,3,1,104,2,101,114,0,8,2,101,110,0,101,1,100,0,101,8,108,2,21,0,4,101,114,1,
99,3,129,84,114,0,101,114,1,99,2,32,0,101,114,110,1,103,3,129,84,114,50,0,4,1,21,2,97,108,
3,137,84,0,1,109,2,17,65,12,12,12,0,1,114,112,2,101,13,0,101,114,1,114,112,2,32,3,137,84,
114,0,4,1,108,99,2,101,3,139,84,0,1,108,108,117,112,0,1,108,112,0,2,101,114,0,8,2,17,65,
0,8,98,2,105,0,8,108,115,2,101,110,17,65,0,4,101,114,1,10,2,32,3,139,84,114,0,101,114,2,
99,111,97,0,101,114,2,100,111,115,0,101,114,2,100,114,97,0,101,114,2,100,114,105,0,101,114,2,115,105,
103,0,101,114,2,116,111,110,0,101,114,2,118,105,101,0,7,6,111,119,0,2,105,116,122,32,3,8,139,84,
0,2,97,121,32,3,13,58,0,108,101,1,110,107,2,100,3,126,55,124,0,4,1,97,3,138,0,1,98,2,
101,108,0,1,98,2,101,114,0,1,98,2,115,17,65,0,1,98,2,115,112,0,1,99,0,1,100,2,110,0,
1,100,110,101,0,1,101,109,0,1,102,0,1,103,0,1,104,0,1,104,99,0,1,104,115,2,101,114,0,1,
104,119,0,1,104,121,0,1,106,0,1,107,0,1,108,99,0,1,108,103,2,101,114,0,1,108,108,97,115,105,
0,1,108,112,0,1,110,2,97,100,0,1,110,101,2,110,0,1,112,0,1,114,2,100,0,1,114,98,0,1,
114,99,2,110,0,1,114,100,0,1,114,102,0,1,114,103,2,108,0,1,114,112,0,1,114,116,2,101,0,1,
116,2,101,108,0,1,116,2,101,114,0,1,116,2,110,0,1,118,0,1,119,0,1,121,0,8,2,108,0,8,
100,0,8,108,108,97,0,8,110,2,32,0,8,110,2,116,0,101,114,1,108,102,3,138,114,0,4,3,139,0,
1,99,115,111,109,0,1,104,115,0,7,6,112,101,0,8,2,110,114,3,48,2,122,0,114,8,2,105,17,67,
21,21,3,48,4,122,34,0,2,110,105,110,115,117,3,48,13,0,4,8,2,114,111,103,3,48,114,0,114,2,
99,101,105,0,114,2,99,101,112,0,114,2,99,117,108,105,0,114,2,99,117,115,0,114,2,102,101,99,0,114,
2,102,111,114,109,0,114,2,102,117,110,0,114,2,102,117,115,0,114,2,109,105,115,115,0,114,2,109,105,116,
0,114,2,112,101,116,0,114,2,112,108,101,0,114,2,115,105,115,0,114,2,115,112,0,114,2,115,117,0,114,
2,115,117,0,114,2,116,97,105,0,114,2,116,117,0,114,2,118,21,0,114,8,2,105,112,104,3,48,114,34,
0,114,117,115,8,3,48,114,34,137,88,0,4,114,8,2,105,115,99,3,48,122,34,0,114,8,2,105,115,104,
0,114,101,103,114,105,110,8,3,48,122,34,13,81,34,124,50,0,114,105,8,2,17,66,101,3,48,122,34,113,
0,114,105,110,105,8,3,48,122,34,124,50,6,132,0,8,2,99,117,108,105,3,48,124,2,0,4,114,2,112,
101,116,114,3,48,131,0,114,2,118,105,0,114,109,101,2,97,3,48,131,65,124,0,114,115,101,118,101,114,3,
48,131,89,124,84,6,145,0,97,99,101,3,48,132,89,0,7,6,112,114,0,8,2,17,65,17,67,17,71,32,
12,3,48,34,0,4,101,8,2,17,67,21,3,48,34,2,124,0,101,8,2,99,111,99,0,101,8,2,100,105,
99,0,101,8,2,115,99,114,0,101,115,8,2,101,110,116,3,48,34,2,124,88,0,111,2,118,111,99,3,48,
34,2,127,0,4,101,8,2,97,100,14,128,132,131,3,48,34,2,132,0,101,8,2,97,112,112,14,128,132,131,
0,101,8,2,97,115,115,14,128,132,131,0,101,8,2,100,105,14,128,132,131,0,101,8,2,101,109,0,101,8,
2,109,111,108,0,101,8,2,117,0,4,111,8,2,99,111,3,48,34,2,139,0,111,8,2,99,114,117,115,0,
111,8,2,115,117,109,101,114,0,4,101,8,2,99,111,14,128,132,131,3,48,34,4,132,0,101,8,2,105,110,
21,14,128,132,131,0,101,8,2,114,101,14,128,132,131,0,101,8,2,115,117,112,112,14,128,132,131,0,101,100,
105,8,2,108,101,99,3,48,34,4,132,72,113,0,111,2,112,97,110,3,48,34,6,139,0,111,112,121,108,5,
3,3,48,34,6,139,48,118,0,111,112,121,108,3,48,34,6,139,48,140,55,0,4,111,2,99,101,100,3,48,
34,13,0,111,2,99,101,101,0,111,2,99,101,115,115,105,0,111,2,99,108,97,105,0,111,2,99,117,114,0,
111,2,100,117,99,0,111,2,102,97,110,0,111,2,102,101,115,0,111,2,102,105,99,0,111,2,102,111,117,0,
111,2,102,117,0,111,2,103,114,101,115,0,111,2,104,105,98,0,111,2,106,101,99,0,111,2,108,105,102,0,
111,2,108,111,110,0,111,2,109,111,116,0,111,2,110,111,117,110,99,0,111,2,110,117,110,0,111,2,112,101,
108,0,111,2,112,101,110,115,0,111,2,112,105,116,0,111,2,112,114,105,101,0,111,2,112,117,108,0,111,2,
115,112,101,99,116,17,65,0,111,2,116,101,99,0,111,2,116,101,115,116,0,111,2,116,114,97,99,0,111,2,
116,114,117,0,111,2,116,117,0,111,2,118,105,100,0,111,2,118,105,115,0,111,2,118,111,107,0,111,8,2,
112,17,65,0,111,8,2,115,97,0,111,8,2,115,99,0,4,101,2,99,105,111,3,48,34,122,0,101,2,106,
117,100,105,0,101,8,2,17,67,11,0,101,8,2,102,101,114,101,110,0,101,8,2,103,110,0,101,8,2,109,
105,0,101,8,2,110,25,0,101,8,2,112,32,0,101,8,2,112,111,115,105,0,101,8,2,115,99,111,0,101,
8,2,115,116,0,4,101,100,97,2,116,111,3,48,34,122,72,13,0,101,100,105,5,3,8,2,108,101,99,0,
101,118,8,2,97,108,3,48,34,122,84,0,4,101,115,2,101,110,99,3,48,34,122,88,0,101,115,8,2,101,
110,116,97,0,101,115,105,2,100,101,110,3,48,34,122,88,124,0,105,110,99,2,101,13,3,48,34,124,50,89,
0,4,111,2,112,101,114,3,48,34,126,0,111,2,112,104,0,111,2,112,111,115,105,116,0,111,2,115,101,99,
0,111,2,118,105,100,101,110,0,111,5,3,2,99,101,115,115,0,111,8,2,112,97,103,0,111,116,101,2,115,
116,97,110,3,48,34,126,47,113,0,111,98,97,98,3,48,34,126,71,13,71,0,111,115,101,8,2,108,3,48,
34,126,89,0,111,2,100,117,99,116,3,48,34,127,0,4,101,2,102,105,120,3,48,34,132,0,101,2,104,105,
115,116,0,101,8,2,32,0,101,8,2,97,109,0,101,8,2,99,105,110,99,0,101,8,2,102,101,99,0,101,
8,2,109,105,117,0,101,8,2,113,117,0,101,8,2,115,99,0,101,8,2,118,105,101,119,0,101,8,2,118,
105,111,0,101,97,8,2,99,104,0,101,100,101,2,99,101,115,3,48,34,132,72,124,0,4,111,2,102,105,108,
3,48,34,139,0,111,2,103,114,97,0,111,2,108,111,103,0,111,109,101,2,116,104,3,48,34,139,65,132,0,
111,103,101,8,3,48,34,139,75,6,122,0,105,8,2,111,3,48,34,140,0,105,111,2,114,105,116,3,48,34,
140,6,126,0,105,118,97,116,8,3,48,34,140,84,13,47,0,7,6,114,101,0,4,2,103,101,110,101,114,3,
2,34,132,0,8,2,97,114,109,0,4,8,2,97,108,105,103,3,4,34,132,0,8,2,97,108,108,0,8,2,
97,117,21,14,128,132,130,0,8,2,99,111,110,14,128,132,130,0,8,2,99,114,101,97,116,0,8,2,100,101,
17,67,14,128,132,130,0,8,2,100,105,114,0,8,2,100,105,115,0,97,8,2,108,108,111,14,128,132,130,0,
100,101,1,110,117,2,17,67,3,4,34,132,72,113,0,1,118,117,3,13,0,100,1,116,17,67,10,2,32,3,
13,72,0,4,8,2,100,114,3,34,2,132,0,8,2,101,100,117,14,128,132,130,0,8,2,101,109,14,128,132,
130,0,8,2,101,110,14,128,132,130,0,8,2,101,113,14,128,132,130,0,8,2,101,115,14,128,132,130,0,8,
2,101,118,97,108,14,128,132,130,0,8,2,101,120,14,128,132,130,0,8,2,105,115,115,0,116,114,111,2,14,
128,132,133,3,34,4,122,47,34,139,0,4,8,2,97,17,67,11,14,128,132,130,3,34,4,132,0,8,2,97,
100,106,14,128,132,130,0,8,2,99,111,109,14,128,132,130,0,8,2,105,21,14,128,132,130,0,8,2,114,101,
108,14,128,132,130,0,8,2,115,99,97,110,14,128,132,130,0,8,2,115,111,108,100,14,128,132,130,0,8,2,
116,105,116,14,128,132,130,0,8,2,116,114,97,110,14,128,132,130,0,8,2,117,110,14,128,132,130,0,4,1,
17,65,2,32,3,34,13,0,1,114,2,32,0,2,109,101,110,116,0,114,2,32,0,100,1,17,66,10,2,32,
3,34,13,72,0,4,1,110,117,2,17,67,21,3,34,113,0,2,97,99,116,0,2,100,101,109,12,0,8,2,
17,67,21,0,8,2,116,105,114,0,8,99,2,100,101,110,116,0,8,99,2,100,101,110,122,0,8,99,2,109,
97,116,0,97,2,108,105,116,3,34,113,35,0,112,101,2,116,105,116,105,118,3,34,113,48,122,0,108,101,2,
110,116,3,34,113,55,122,0,4,108,105,1,110,117,2,97,3,34,113,55,140,0,108,105,2,97,0,4,115,2,
105,103,110,3,34,113,88,0,115,2,117,108,116,0,97,2,108,116,101,3,34,113,126,0,97,2,103,101,110,3,
34,113,141,0,4,2,17,67,101,108,32,3,34,122,0,2,99,107,0,2,99,116,0,2,102,117,103,0,2,103,
105,115,116,0,2,110,111,118,97,0,2,112,108,105,0,2,112,114,105,109,0,2,112,116,0,2,113,117,105,115,
0,2,115,105,100,117,101,0,2,115,111,108,117,0,2,115,111,110,0,2,115,116,108,0,2,115,116,114,111,0,
2,116,105,0,2,116,114,105,98,0,2,118,101,114,101,110,0,2,118,111,108,117,0,8,2,17,67,17,67,32,
0,8,2,17,67,32,0,8,2,99,114,101,97,116,105,0,8,2,100,17,67,0,8,2,100,17,67,0,8,2,
100,111,108,101,110,0,8,2,109,111,110,115,0,8,2,110,17,67,0,8,2,115,99,117,0,8,2,118,101,108,
0,97,2,108,109,0,112,101,2,116,105,116,3,34,122,48,13,0,112,114,101,115,101,110,116,3,34,122,48,34,
113,88,6,122,50,47,0,112,101,114,8,2,116,3,34,122,48,114,0,99,111,2,103,3,34,122,49,13,0,99,
111,110,2,99,3,34,122,49,13,50,0,99,114,101,8,2,97,110,3,34,122,49,34,132,0,108,101,8,2,103,
3,34,122,55,113,0,108,101,2,118,3,34,122,55,125,0,109,105,110,105,8,3,34,122,65,125,50,6,124,0,
100,1,98,17,67,2,32,12,3,34,122,72,0,103,105,109,3,34,122,75,124,65,0,103,117,2,108,3,34,122,
81,57,137,0,102,101,114,101,110,100,3,34,122,83,13,34,6,122,50,72,0,118,101,2,110,17,65,3,34,122,
84,13,0,115,105,2,100,101,110,3,34,122,88,113,0,109,101,110,116,3,34,124,65,13,50,47,0,104,101,110,
3,34,124,107,6,122,50,0,4,2,103,101,110,3,34,132,0,2,103,105,111,110,0,8,2,97,110,0,8,2,
99,101,110,116,0,97,2,109,0,97,5,3,2,108,3,34,132,14,0,115,101,2,108,3,34,132,89,122,0,116,
2,97,105,108,3,34,132,108,0,4,105,8,2,99,3,34,140,0,105,8,2,108,0,105,8,2,110,104,0,105,
115,8,3,34,140,88,0,105,99,104,3,34,140,101,0,97,2,108,3,34,144,0,1,10,2,32,3,114,0,7,
6,115,117,0,1,101,114,2,109,17,65,3,88,57,137,0,5,3,1,101,114,2,109,17,65,3,88,137,0,4,
2,98,100,117,101,3,89,2,129,0,2,98,115,101,114,0,2,98,115,105,115,0,2,98,116,114,97,0,8,2,
98,111,112,0,112,101,114,2,118,105,115,105,3,89,2,137,48,114,0,112,101,114,2,105,111,3,89,2,137,48,
144,34,0,8,2,98,100,105,3,89,4,129,0,112,101,114,8,2,21,21,21,14,128,132,133,3,89,4,137,48,
114,0,112,101,114,8,2,21,14,128,132,133,3,89,6,137,48,114,0,4,2,98,109,105,3,89,13,0,2,98,
115,99,114,105,98,0,2,98,117,114,98,97,0,2,98,118,0,2,99,99,17,65,0,2,102,102,105,99,0,2,
112,112,108,0,2,112,112,111,114,0,2,112,112,114,101,115,0,8,2,98,109,101,114,0,98,115,116,97,2,110,
116,3,89,13,71,89,47,35,0,4,115,8,2,112,3,89,13,89,0,115,8,2,116,97,105,0,115,99,8,2,
101,0,1,110,2,97,108,3,89,57,137,0,4,114,1,110,117,2,112,3,89,114,0,114,2,109,0,114,2,112,
97,0,114,2,112,114,0,114,2,114,0,114,2,118,0,4,2,99,99,117,108,3,89,129,0,2,112,112,108,101,
0,2,112,112,108,105,99,0,8,2,98,0,114,2,114,101,121,0,4,114,3,89,131,0,114,2,103,12,0,114,
8,0,112,101,114,2,108,97,3,89,137,48,6,131,0,112,101,114,3,89,137,48,114,0,115,8,2,17,65,3,
89,137,88,0,4,114,5,5,3,89,151,0,114,5,5,8,0,4,114,1,97,101,3,90,114,0,114,1,111,0,
114,101,1,10,2,32,0,4,2,97,108,3,90,137,0,8,97,99,0,103,97,114,3,91,117,81,114,0,5,3,
1,110,2,97,108,3,91,137,0,4,114,1,110,101,3,91,146,0,114,1,110,105,2,17,65,0,114,2,97,110,
99,0,114,101,8,0,7,6,116,104,0,1,10,2,18,68,32,3,8,87,0,1,32,48,15,2,32,3,13,87,
0,8,2,111,109,21,3,47,0,4,1,104,103,2,17,65,3,47,107,0,2,97,110,100,0,2,101,97,100,0,
2,101,97,114,116,0,2,105,108,108,0,2,111,108,100,0,2,111,108,101,0,2,111,111,100,0,2,111,117,115,
101,0,101,113,117,101,3,47,122,49,0,97,109,101,115,8,3,47,122,65,88,0,97,105,3,47,140,0,4,1,
97,101,2,101,114,3,86,0,1,111,111,109,115,0,1,114,2,105,101,114,0,1,114,2,121,0,1,114,111,2,
105,0,2,101,110,32,0,2,101,114,17,67,0,2,101,114,110,32,0,2,101,115,116,0,2,105,116,104,0,101,
2,32,0,101,109,8,3,86,2,122,65,0,101,114,101,8,2,21,3,86,2,143,0,101,108,101,115,115,3,86,
13,55,6,122,89,0,101,100,1,117,111,2,32,3,86,72,0,105,110,103,1,101,101,3,86,113,68,0,4,101,
114,2,32,3,86,114,0,101,114,2,101,114,0,101,114,101,2,32,0,101,114,101,8,3,86,143,0,4,3,87,
0,1,32,48,48,2,32,0,1,32,48,49,2,32,0,1,97,99,2,101,114,105,0,1,103,2,101,110,32,0,
1,104,112,0,1,110,2,101,114,12,0,1,114,97,101,2,121,0,1,114,111,119,2,32,0,2,101,114,109,0,
8,2,17,71,0,8,2,114,17,71,0,8,2,119,17,71,0,8,101,2,101,114,0,105,111,8,3,87,4,140,
139,0,101,114,97,112,3,87,122,34,13,48,0,101,8,2,109,17,65,3,87,132,0,111,117,115,97,110,100,3,
87,138,88,13,50,72,0,7,6,116,105,0,118,101,1,17,67,17,65,2,32,3,8,47,124,84,0,97,110,1,
10,2,32,3,8,91,13,50,0,97,110,8,3,47,57,35,50,0,97,108,1,115,3,47,57,118,0,4,1,105,
112,111,114,112,2,97,3,47,124,0,1,115,2,97,108,105,0,2,97,99,0,97,1,115,10,2,32,3,76,13,
0,4,97,110,1,115,10,2,32,3,76,13,50,0,111,110,1,115,10,0,111,110,5,8,1,115,10,3,76,129,
50,0,111,110,1,10,3,91,8,13,50,0,111,117,115,1,10,3,91,8,13,89,0,111,110,2,97,108,32,3,
91,8,14,50,0,111,110,5,8,1,10,3,91,8,129,50,0,4,97,1,10,2,32,3,91,13,0,97,1,105,
2,108,105,18,71,0,4,101,110,1,10,3,91,13,50,0,111,110,2,97,108,105,116,121,0,101,110,99,101,1,
10,3,91,13,50,89,0,111,110,2,97,108,3,91,14,50,0,97,108,1,10,3,91,118,0,1,10,2,97,108,
105,3,91,124,0,2,109,101,32,3,108,140,0,7,6,116,117,0,1,21,2,108,97,116,3,8,76,117,0,4,
1,99,2,97,108,32,3,8,76,137,0,2,111,117,115,0,114,1,21,2,97,108,32,3,76,8,13,34,0,4,
5,3,2,108,97,3,76,13,0,5,3,8,97,116,115,2,116,111,0,4,114,1,10,2,121,3,76,13,34,0,
114,1,21,2,17,65,0,110,101,5,3,1,114,111,102,3,76,13,50,0,4,114,1,10,2,32,3,76,114,0,
114,101,1,10,2,32,0,4,1,21,2,97,108,3,76,137,0,1,21,2,97,116,0,5,3,2,17,65,110,99,
121,0,5,3,2,17,65,110,116,0,8,97,116,115,0,101,1,114,2,32,0,110,101,1,114,111,102,3,76,137,
50,0,7,6,117,101,0,3,57,137,0,2,110,100,3,57,137,6,122,0,4,2,110,3,57,137,13,0,2,116,
0,8,17,67,2,108,0,101,3,57,137,132,0,110,101,2,32,3,57,137,132,50,0,114,2,116,3,58,143,0,
4,1,108,3,137,0,1,114,0,5,3,1,18,73,0,8,115,0,1,108,2,110,116,105,3,137,6,122,0,4,
1,108,2,110,3,137,13,0,5,3,8,18,73,2,108,0,8,17,67,17,67,2,108,0,7,6,117,105,0,1,
21,2,116,121,3,6,57,137,124,0,1,99,114,2,116,111,117,115,3,7,57,137,124,0,1,110,2,115,3,57,
137,0,1,115,101,106,2,116,3,57,137,113,0,114,2,32,3,57,146,0,114,1,99,2,97,3,58,113,34,0,
115,105,110,101,1,99,3,58,113,88,132,50,0,115,1,99,3,58,124,88,0,1,103,2,116,97,3,113,0,4,
1,98,2,108,3,124,0,1,99,114,2,116,0,1,103,2,108,17,67,0,8,103,2,110,0,4,1,106,2,99,
3,137,0,1,108,115,0,1,114,2,116,0,1,115,2,116,0,115,1,114,2,101,3,137,88,0,1,114,103,2,
116,3,137,113,0,4,1,108,102,2,100,3,137,124,0,1,114,100,2,100,0,4,1,103,2,100,17,65,13,3,
140,0,1,103,2,115,101,0,1,103,101,98,2,108,0,8,103,2,108,101,0,100,101,1,103,2,108,3,140,72,
0,7,6,117,110,0,4,2,97,110,105,3,2,57,137,50,0,8,2,105,113,0,4,2,114,101,103,105,3,2,
129,50,0,8,2,17,65,14,128,132,130,0,8,2,21,14,128,132,130,0,8,2,103,117,97,14,128,132,130,0,
8,2,105,103,110,14,128,132,130,0,110,8,3,2,129,50,50,0,4,8,114,98,2,104,105,108,3,2,137,50,
0,110,8,114,98,2,104,105,108,0,105,8,2,108,3,4,57,137,50,124,0,4,8,2,100,101,14,128,132,130,
3,4,129,50,0,8,2,101,110,14,128,132,130,0,8,2,101,120,14,128,132,130,0,8,2,105,100,101,0,8,
2,105,109,14,128,132,130,0,8,2,105,110,14,128,132,130,0,8,2,114,101,17,67,21,14,128,132,130,0,100,
101,114,8,2,21,14,128,132,133,3,4,129,50,72,114,0,97,8,2,98,3,4,129,50,119,0,1,21,2,97,
108,3,6,57,137,50,0,2,17,65,32,3,6,137,50,0,4,1,17,67,2,101,114,3,57,137,50,0,1,116,
2,101,13,0,2,105,0,8,2,17,65,32,0,8,2,105,111,0,8,2,105,120,0,101,2,32,0,105,116,2,
101,3,57,137,50,6,140,47,0,105,8,3,57,137,50,124,0,4,1,112,2,105,115,104,3,129,50,0,2,17,
65,0,8,2,100,117,108,97,0,8,2,103,117,0,4,1,106,2,17,65,3,137,50,0,1,114,2,105,0,5,
3,1,116,2,101,13,12,0,101,1,108,2,32,0,101,1,114,2,32,0,101,5,3,1,100,2,32,0,101,5,
3,1,116,2,32,0,101,8,114,0,7,6,117,112,0,4,8,2,98,3,2,129,48,0,8,2,99,0,8,2,
100,0,8,2,101,0,8,2,103,0,8,2,104,0,8,2,115,101,0,8,2,115,116,0,1,115,2,114,101,3,
2,137,48,0,1,108,111,118,3,6,129,48,0,1,99,99,111,3,57,117,48,0,121,1,99,99,111,3,57,117,
48,140,0,104,111,2,108,115,116,3,129,48,6,139,0,111,110,3,129,48,126,50,0,4,1,17,67,2,108,101,
3,137,48,0,1,17,67,2,108,105,0,2,108,32,0,7,6,117,114,0,1,17,67,2,97,32,3,6,57,146,
0,1,106,2,121,3,13,34,0,1,116,2,17,65,3,57,13,34,0,101,1,115,10,2,32,3,57,13,114,0,
4,101,1,110,101,2,32,3,57,114,0,101,5,3,1,103,2,32,0,4,1,17,67,2,17,65,3,57,117,34,
0,1,21,2,97,116,105,111,110,0,1,21,2,121,0,97,1,21,2,116,3,57,117,34,141,0,4,2,101,100,
32,3,57,146,0,8,2,17,65,0,8,102,2,17,65,0,8,102,2,121,0,101,1,116,97,99,105,2,32,0,
101,2,32,0,1,98,2,101,3,57,146,34,0,4,1,103,10,2,32,3,114,0,1,104,10,2,32,0,1,109,
10,2,32,0,1,116,97,115,2,100,0,101,1,103,2,32,0,101,1,106,110,2,32,0,101,1,122,105,0,101,
100,1,103,2,32,3,114,72,0,4,1,98,2,105,3,122,34,0,1,98,2,121,0,114,5,35,1,98,2,111,
3,129,34,0,4,1,112,115,2,32,3,131,0,2,17,66,0,2,32,0,114,1,102,2,121,0,114,2,32,0,
114,5,3,0,103,1,98,2,101,114,3,131,81,0,4,101,1,108,105,2,32,3,145,0,101,1,114,2,32,0,
4,1,106,2,105,3,146,0,1,108,2,17,65,12,0,1,112,10,2,32,0,8,106,2,121,0,1,114,2,17,
65,12,3,146,34,0,4,5,5,1,112,115,2,32,3,151,0,5,5,2,17,66,0,5,5,2,32,0,114,5,
5,1,102,2,121,0,114,5,5,2,32,0,103,5,5,1,98,2,101,114,3,151,81,0,7,6,39,0,114,101,
2,32,14,128,128,131,3,13,0,118,101,2,32,14,128,128,131,3,13,84,0,100,2,32,14,128,128,130,3,72,
0,4,115,1,32,54,49,2,32,3,88,0,115,2,32,14,136,128,130,0,4,115,1,102,2,32,14,136,128,130,
3,89,0,115,1,104,99,111,2,32,14,136,128,130,0,115,1,107,2,32,14,136,128,130,0,115,1,112,2,32,
14,136,128,130,0,115,1,116,2,32,14,136,128,130,0,4,115,1,32,54,2,32,3,113,88,0,115,1,101,99,
2,32,14,136,128,130,0,115,1,101,115,2,32,14,136,128,130,0,115,1,104,99,2,32,14,136,128,130,0,115,
1,104,115,2,32,14,136,128,130,0,115,1,115,2,32,14,136,128,130,0,115,1,120,2,32,14,136,128,130,0,
115,1,122,2,32,14,136,128,130,0,108,108,2,32,14,128,128,131,3,118,0,7,6,69,0,3,0,4,1,21,
2,109,98,101,114,3,6,122,0,2,110,116,105,0,2,110,116,111,117,115,0,2,110,116,117,0,116,116,101,2,
32,3,6,122,47,0,116,116,97,2,32,3,6,122,47,13,0,99,116,111,109,121,2,32,14,128,128,134,3,6,
122,49,47,13,65,124,0,110,2,100,17,65,32,3,6,122,50,0,110,115,107,2,32,3,6,122,50,89,49,0,
108,108,97,2,32,3,6,122,55,13,0,115,113,117,101,3,6,122,89,49,0,4,2,17,67,105,97,3,6,132,
0,2,115,105,97,0,109,2,105,99,32,3,6,132,65,0,115,101,2,32,3,6,132,88,0,97,2,110,32,3,
6,144,0,114,105,2,17,65,3,6,144,34,113,0,101,114,2,32,3,6,145,0,97,2,32,3,8,144,0,111,
117,115,2,32,3,8,144,89,0,110,101,114,2,32,3,10,50,13,0,110,105,110,103,2,32,3,10,50,113,68,
0,4,2,17,66,17,67,32,3,13,0,2,17,66,17,67,101,32,0,2,17,66,32,0,2,110,116,0,4,114,
2,105,101,32,3,13,34,0,114,2,111,117,115,32,0,114,121,2,32,3,13,34,2,124,0,4,110,2,32,3,
13,50,0,110,2,97,116,17,65,0,110,2,103,0,109,2,32,3,13,65,0,115,1,114,17,67,2,32,14,128,
129,130,3,13,88,0,116,114,121,2,32,14,128,128,130,3,34,124,0,4,100,1,99,10,2,32,14,128,139,130,
3,47,0,100,1,104,99,10,2,32,14,128,139,130,0,100,1,107,10,2,32,14,128,139,130,0,100,1,112,10,
2,32,14,128,139,130,0,100,1,120,10,2,32,14,128,136,130,0,4,100,1,21,21,2,32,14,128,139,130,3,
72,0,100,1,109,111,21,21,10,2,32,14,128,136,130,0,100,1,114,117,2,32,14,128,138,129,0,100,1,121,
2,32,0,110,101,100,2,32,14,128,128,130,0,115,1,10,2,32,14,128,129,130,3,88,0,100,1,17,67,10,
2,32,14,128,139,130,3,109,0,4,115,1,102,2,32,14,128,129,130,3,110,0,115,1,107,2,32,14,128,129,
130,0,115,1,112,2,32,14,128,129,130,0,115,1,116,2,32,14,128,129,130,0,2,111,32,3,113,0,117,115,
2,32,3,113,13,89,0,4,114,1,100,97,2,32,14,128,128,129,3,114,0,114,2,17,67,0,114,2,32,0,
114,115,1,100,97,2,32,14,128,128,130,3,114,88,0,4,108,2,32,3,118,0,108,101,2,32,0,108,108,2,
12,0,4,1,108,2,112,115,3,122,0,1,108,2,112,116,0,2,110,100,111,117,115,0,2,110,105,110,103,0,
2,115,115,0,2,116,105,99,32,0,2,116,114,105,99,0,2,120,32,0,2,122,32,0,114,2,105,99,32,3,
122,34,0,110,5,8,2,32,3,122,50,0,110,105,110,103,5,8,2,32,3,122,50,113,68,0,108,5,8,2,
32,3,122,55,0,115,115,2,32,3,122,89,0,1,107,97,110,2,100,3,124,0,100,108,121,2,32,14,128,129,
132,3,124,72,55,2,124,0,4,100,1,100,10,2,32,14,128,139,130,3,125,72,0,100,1,116,10,2,32,14,
128,139,130,0,4,39,115,1,99,2,32,14,128,129,131,3,125,88,0,39,115,1,115,2,32,14,128,129,130,0,
115,1,99,2,32,14,128,129,130,0,115,1,103,2,32,14,128,129,130,0,115,1,104,99,2,32,14,128,129,130,
0,115,1,104,112,2,32,14,128,129,130,0,115,1,104,115,2,32,14,128,129,130,0,115,1,115,2,32,14,128,
129,130,0,115,1,120,2,32,14,128,128,130,0,4,2,100,105,97,32,3,132,0,2,100,105,99,32,0,2,116,
101,32,0,69,2,32,0,101,2,32,0,101,2,100,0,105,2,110,32,0,117,109,2,32,3,132,13,65,0,110,
101,2,32,3,132,50,0,109,101,2,32,3,132,65,0,119,2,32,3,137,0,105,2,32,3,140,0,121,1,98,
111,2,32,3,141,0,7,6,97,0,8,2,113,117,3,2,35,0,101,114,8,99,3,2,143,0,8,2,32,15,
3,4,141,0,4,1,21,2,107,105,32,3,6,35,0,1,104,2,122,97,114,0,2,122,122,32,0,4,1,21,
2,122,105,32,3,6,121,0,2,17,66,111,32,0,2,17,66,117,32,0,2,17,67,97,32,0,107,117,2,32,
3,6,121,49,137,0,119,105,1,21,2,32,3,6,121,58,124,0,122,101,1,107,21,2,32,3,6,121,88,124,
0,4,97,114,3,6,130,0,101,114,1,114,0,101,2,118,97,108,3,6,132,0,4,1,21,2,17,66,105,97,
3,6,141,0,1,21,2,17,66,105,117,0,1,21,2,116,105,111,117,115,0,2,17,67,97,98,108,101,0,2,
17,67,97,98,108,121,0,2,17,67,105,98,108,101,0,2,116,105,111,110,0,2,122,105,100,101,0,8,2,45,
0,101,97,3,6,144,0,4,1,98,10,2,32,3,8,13,0,1,116,108,2,32,0,111,2,32,3,8,138,0,
4,1,10,2,32,3,13,0,1,10,2,116,117,114,101,32,0,1,103,2,122,101,17,67,11,0,1,109,2,104,
111,103,0,1,119,111,2,100,0,2,119,97,121,32,0,101,8,110,97,2,115,0,104,1,10,2,32,0,113,117,
97,2,116,3,13,49,58,35,0,4,3,35,0,1,17,67,2,120,12,0,1,109,2,106,101,115,0,1,110,2,
116,117,114,97,0,1,114,98,2,122,105,108,0,1,114,114,105,2,116,105,111,0,1,119,115,2,103,0,1,119,
115,2,109,32,0,1,119,115,2,110,107,0,2,17,66,101,17,67,111,32,0,2,17,66,101,114,17,65,0,2,
17,66,101,114,17,67,0,2,17,66,101,116,0,2,17,66,101,117,0,2,17,67,101,101,12,0,2,119,17,65,
0,8,2,118,101,0,8,2,120,12,0,8,110,2,116,105,111,110,97,108,0,8,114,2,116,105,111,110,0,4,
97,1,97,97,3,35,12,0,97,2,97,0,107,1,21,2,105,97,3,35,49,0,113,117,2,97,3,35,49,58,
0,113,117,105,3,35,49,58,124,0,101,100,1,21,2,32,14,128,128,130,3,72,0,4,1,29,2,28,19,12,
12,12,12,12,12,3,119,0,1,45,2,45,0,1,107,2,122,111,111,0,8,2,32,0,8,2,45,104,97,108,
102,0,8,2,107,105,0,8,2,119,104,21,0,8,109,2,106,111,114,21,0,113,117,2,97,114,105,17,65,3,
119,49,58,0,4,119,8,2,97,12,3,119,58,0,119,8,2,111,107,0,1,108,2,116,104,3,120,0,4,1,
17,67,29,2,32,3,121,0,1,119,115,2,122,0,97,0,104,2,25,0,2,17,66,105,110,103,3,122,0,101,
109,111,114,114,104,1,104,3,122,65,114,34,0,1,110,103,105,115,2,116,117,114,101,3,124,0,4,1,117,113,
115,2,115,104,3,126,0,1,119,2,98,0,1,119,2,100,0,1,119,2,115,0,1,119,2,116,99,0,1,119,
115,2,17,66,0,104,114,2,32,24,3,130,0,4,101,3,132,0,101,1,104,2,109,0,111,105,115,2,32,3,
132,91,0,111,105,115,101,2,32,3,132,91,13,0,101,111,110,2,32,3,132,126,50,0,4,1,119,2,116,101,
114,3,133,0,119,0,119,8,2,102,0,119,8,2,107,0,119,101,2,17,66,0,119,101,2,32,0,119,101,8,
0,119,97,108,3,133,55,0,4,111,1,109,3,138,0,111,1,109,2,114,105,0,111,1,112,0,111,1,116,0,
4,101,1,109,2,115,116,3,140,0,121,8,0,4,1,17,67,29,2,17,66,121,32,3,141,0,1,32,15,2,
32,0,1,104,2,122,17,65,0,1,108,25,2,122,17,71,0,1,108,98,2,122,111,110,0,1,108,103,2,99,
105,0,1,109,2,106,111,114,32,0,1,110,2,17,67,97,108,0,1,110,2,116,117,114,0,1,112,2,116,105,
101,110,0,1,114,2,99,105,17,65,0,1,114,2,122,105,0,1,114,101,2,115,117,114,0,1,119,2,17,66,
101,13,0,1,119,115,2,116,104,0,2,17,66,101,13,0,2,17,66,101,114,111,17,65,13,0,2,17,66,101,
117,112,13,0,2,17,67,97,98,105,108,105,116,121,0,2,115,105,111,110,0,2,116,104,101,32,12,0,2,122,
121,0,8,2,32,45,0,8,2,118,105,97,116,0,8,2,118,111,110,0,101,2,108,0,121,0,121,1,119,0,
111,114,3,141,6,136,0,111,1,103,2,108,3,141,13,0,113,117,101,2,111,3,141,49,58,124,0,101,103,2,
101,114,3,141,81,0,39,115,8,2,32,3,141,88,0,122,111,114,1,114,3,141,88,114,0,121,108,101,8,3,
141,118,0,111,3,141,126,0,119,121,2,101,114,32,3,142,0,4,101,114,3,143,0,101,114,8,2,111,0,121,
114,8,0,4,101,114,111,2,112,108,97,110,3,143,34,13,0,101,114,111,2,115,111,108,0,101,114,111,8,3,
143,34,139,0,119,114,2,32,3,149,0,7,6,98,0,4,1,109,2,32,3,0,2,98,3,0,4,116,1,101,
100,3,47,0,116,1,117,115,2,108,0,4,3,71,0,8,2,18,66,17,71,0,104,8,2,21,0,97,8,2,
109,98,21,3,71,2,35,0,121,8,2,122,97,110,3,71,2,124,0,4,97,108,108,105,8,2,21,3,71,4,
35,55,113,0,97,108,108,121,8,2,21,0,97,116,116,108,101,8,2,21,14,128,132,134,3,71,6,35,47,118,
0,111,111,107,8,2,21,21,14,128,132,132,3,71,6,117,49,0,117,114,121,1,21,2,32,14,128,130,132,3,
71,34,2,124,0,114,122,8,2,101,3,71,34,88,0,108,117,101,8,2,21,14,128,132,132,3,71,55,6,137,
0,106,8,2,17,65,3,71,57,0,117,103,8,2,108,101,3,71,57,137,81,0,111,8,2,115,111,109,3,71,
117,0,111,111,107,1,21,2,32,14,128,128,132,3,71,117,49,0,97,108,108,105,2,115,116,3,71,119,55,6,
124,0,117,114,121,5,3,1,21,2,32,14,128,130,132,3,71,122,34,2,124,0,121,116,101,8,3,71,140,47,
0,121,100,101,115,105,103,110,2,32,14,128,128,136,3,71,140,72,113,88,6,140,50,0,97,121,111,117,8,3,
71,140,137,0,7,6,99,0,4,1,115,2,101,3,0,2,113,3,0,122,8,2,97,114,3,47,89,0,4,3,
49,0,1,97,109,2,105,110,0,2,101,108,116,0,2,105,115,104,0,8,2,18,66,17,71,0,99,0,99,1,
111,99,2,105,32,0,99,1,111,115,2,101,114,0,99,104,0,107,0,114,121,112,116,8,2,97,21,14,128,132,
133,3,49,34,124,48,47,0,104,97,114,97,2,99,116,3,49,35,34,113,0,117,8,2,111,3,49,58,0,117,
97,1,101,3,49,58,35,0,4,99,1,97,118,2,105,110,3,49,89,0,99,2,101,0,99,2,105,0,119,109,
8,3,49,117,65,0,97,99,111,2,112,104,3,49,119,49,6,126,0,105,97,8,2,114,97,3,49,144,0,4,
1,110,2,101,115,99,3,76,0,99,2,105,110,17,65,32,0,122,8,2,101,0,2,101,108,108,18,68,32,3,
76,6,0,122,101,99,104,3,76,122,49,0,4,2,69,3,89,0,2,97,101,115,0,2,101,0,2,105,0,2,
121,0,2,195,169,0,121,98,101,114,8,2,21,14,128,132,133,3,89,6,140,71,114,0,101,8,2,108,101,115,
116,3,89,13,0,101,109,101,110,116,8,3,89,113,65,122,50,47,0,105,115,109,2,32,3,89,124,88,13,65,
0,105,112,104,2,101,114,3,89,140,83,0,4,1,101,2,105,97,3,91,0,1,105,2,105,97,0,1,117,2,
105,97,0,105,97,2,114,121,3,91,8,13,0,4,101,111,117,115,3,91,8,13,89,0,105,111,117,115,0,105,
97,1,10,2,29,3,91,13,0,4,105,101,110,3,91,13,50,0,105,111,110,0,105,117,115,2,32,3,91,13,
89,0,105,97,108,1,10,3,91,118,0,105,97,5,8,1,10,2,29,3,91,119,0,105,101,110,5,8,3,91,
122,50,0,105,97,2,108,105,116,121,3,91,124,35,0,105,97,1,10,2,98,3,91,144,0,105,97,110,1,10,
3,91,144,50,0,7,6,100,0,2,100,3,0,1,109,2,32,3,4,72,132,0,117,109,1,21,2,32,3,8,
72,13,65,0,116,2,32,3,47,0,110,101,1,101,119,2,115,100,3,50,0,4,3,72,0,1,101,21,21,2,
32,14,128,128,129,0,8,2,104,21,21,0,8,2,110,105,101,0,8,2,114,17,71,0,8,2,119,17,71,0,
39,8,2,17,65,14,128,132,130,0,100,104,0,104,2,25,0,98,2,32,3,72,4,132,71,132,0,109,105,8,
2,116,114,3,72,13,65,132,0,117,5,35,2,112,108,3,72,57,137,0,4,117,114,2,17,65,3,72,57,146,
0,117,114,2,32,0,4,117,5,3,8,2,111,3,72,137,0,117,8,2,112,0,121,101,8,3,72,140,0,117,
114,5,3,2,17,65,3,72,146,0,105,114,8,2,32,3,72,148,0,4,103,2,17,66,3,75,0,103,2,32,
0,103,2,101,0,103,2,105,0,103,2,121,0,103,101,2,21,0,106,0,106,8,2,17,71,0,103,101,116,3,
75,113,47,0,4,117,114,5,3,8,98,111,3,75,114,0,117,114,101,1,101,99,0,117,114,101,5,3,1,10,
2,32,0,4,117,1,21,2,97,108,32,3,75,137,0,117,1,21,2,97,108,105,115,0,117,2,99,97,116,0,
117,5,3,1,10,2,17,67,17,65,0,117,5,3,2,97,116,0,7,6,101,0,4,1,10,2,32,3,0,4,
1,21,21,2,109,101,110,116,32,3,0,4,2,102,117,108,3,0,2,119,111,114,107,3,0,4,1,17,66,99,
97,2,32,3,2,124,0,2,102,102,101,99,0,2,102,102,105,99,0,8,2,98,117,108,108,105,0,8,2,99,
108,0,8,2,102,102,97,99,0,8,2,102,102,117,0,8,2,106,17,65,0,8,2,112,104,101,109,0,8,2,
113,117,97,116,0,113,117,105,8,2,112,3,2,124,49,58,124,0,113,117,105,118,2,21,3,2,124,49,58,124,
84,0,113,117,105,8,2,21,3,4,132,49,58,125,0,2,17,67,105,99,97,108,3,6,122,0,4,1,21,2,
17,67,105,97,32,3,6,132,0,1,21,2,103,105,99,0,1,104,2,115,105,111,110,32,0,2,17,66,111,32,
0,2,17,66,111,101,32,0,101,1,116,2,110,32,0,101,2,109,0,101,114,3,6,145,0,1,10,2,109,117,
109,32,3,8,13,0,122,1,21,2,32,3,8,122,88,0,4,1,10,2,110,3,13,0,1,29,2,28,19,12,
12,12,0,1,108,2,103,105,116,0,1,108,101,99,2,98,114,97,0,98,108,101,1,21,21,2,32,3,13,71,
118,0,103,1,10,2,121,3,13,75,0,39,115,1,114,17,67,10,2,32,3,13,88,0,99,121,1,10,2,32,
3,13,89,2,37,0,4,119,3,57,137,0,119,2,32,0,119,97,121,2,32,14,128,128,131,3,58,141,0,4,
39,115,1,17,67,10,2,32,14,128,130,130,3,88,0,39,115,1,104,116,10,2,32,14,128,130,130,0,39,115,
1,114,10,2,32,14,128,130,130,0,4,39,115,1,102,10,2,32,14,128,130,130,3,89,0,39,115,1,107,10,
2,32,14,128,130,130,0,39,115,1,112,10,2,32,14,128,130,130,0,39,115,1,116,10,2,32,14,128,130,130,
0,4,1,110,2,103,111,116,3,113,0,2,111,0,4,112,2,111,120,3,113,48,0,112,8,2,105,115,17,67,
0,99,99,108,101,115,8,2,105,3,113,49,55,132,88,0,102,121,1,21,21,2,32,3,113,83,140,0,102,105,
101,114,2,32,3,113,83,148,0,4,3,122,0,1,104,17,65,2,110,0,1,112,115,2,99,105,97,0,1,114,
10,2,110,0,1,114,99,2,112,101,12,0,1,114,99,115,105,100,2,116,105,111,110,0,2,17,67,105,99,32,
0,2,102,102,105,99,97,0,112,105,8,3,122,48,124,0,112,105,100,101,114,8,3,122,48,124,72,6,131,0,
99,104,1,116,2,32,3,122,49,0,4,113,117,8,2,105,110,21,3,122,49,58,0,113,117,8,2,105,116,21,
0,103,105,1,108,2,98,3,122,75,13,0,103,111,8,2,116,3,122,81,13,0,4,1,108,108,2,110,103,101,
3,124,0,1,109,2,99,104,97,110,105,99,0,1,116,110,105,2,103,101,0,1,116,110,105,2,103,114,97,0,
1,116,114,101,118,2,98,0,8,108,101,2,109,101,110,0,101,1,102,102,111,99,0,99,111,110,111,2,109,3,
124,49,6,126,50,13,0,4,39,115,1,99,10,2,32,14,128,130,130,3,124,88,0,39,115,1,103,10,2,32,
14,128,130,130,0,39,115,1,104,99,10,2,32,14,128,130,130,0,39,115,1,104,112,10,2,32,14,128,130,130,
0,39,115,1,104,115,10,2,32,14,128,130,130,0,39,115,1,115,10,2,32,14,128,130,130,0,39,115,1,120,
10,2,32,14,128,130,130,0,4,1,17,67,29,2,17,66,101,32,3,132,0,1,17,67,29,2,32,24,0,1,
21,2,116,105,111,0,1,29,2,28,22,12,12,12,0,1,29,2,103,97,110,32,0,1,100,2,102,97,117,108,
116,0,1,108,2,103,97,108,0,1,110,2,103,114,111,0,1,112,115,2,99,105,101,115,0,1,114,2,103,97,
108,0,1,114,102,2,113,0,2,17,67,105,117,17,66,0,2,98,114,105,97,0,2,109,101,32,0,2,109,101,
111,117,0,2,113,117,97,108,0,8,2,113,117,97,0,8,17,67,2,109,117,114,0,8,115,2,113,117,101,0,
101,0,99,111,110,111,2,109,105,99,3,132,49,13,50,6,126,0,99,111,8,2,115,3,132,49,139,0,103,105,
111,110,1,108,3,132,75,13,50,0,103,121,2,112,116,3,132,75,124,0,103,111,8,3,132,81,139,0,4,101,
115,101,1,104,99,3,132,88,0,101,122,101,2,21,0,99,1,114,112,101,100,2,18,67,3,132,91,0,4,119,
1,106,2,12,3,137,0,119,1,108,2,12,0,119,1,114,2,12,0,119,5,3,1,100,0,119,5,3,1,110,
0,119,5,3,1,116,0,119,8,115,0,119,101,1,106,2,108,3,137,13,0,119,8,115,2,32,3,139,0,4,
104,2,25,3,141,0,106,1,118,2,32,0,39,101,114,3,143,0,7,6,102,0,2,102,3,0,4,3,83,0,
8,2,18,66,17,71,0,116,2,101,110,0,111,114,2,115,101,101,3,83,2,135,0,111,114,2,119,97,114,100,
3,83,6,136,0,4,97,2,109,105,108,105,97,114,3,83,13,0,111,114,2,98,97,100,0,111,114,2,98,105,
100,0,105,8,2,116,122,21,3,83,113,0,117,108,1,10,2,32,14,128,130,131,3,83,118,0,101,100,1,114,
101,2,32,3,83,122,72,0,106,8,2,111,114,100,3,83,124,6,0,97,2,99,105,17,65,3,83,141,0,97,
99,101,8,3,83,141,89,0,7,6,103,0,8,2,110,17,71,3,0,2,121,110,111,117,115,32,3,8,75,0,
4,2,114,97,32,3,8,81,0,2,114,111,32,0,111,1,10,2,110,97,108,32,3,8,81,13,0,104,116,3,
47,0,110,2,32,3,50,0,110,8,105,111,112,3,50,57,0,109,2,32,3,65,0,4,1,101,118,2,101,116,
3,75,0,1,111,2,101,116,0,1,114,101,2,101,116,0,2,69,0,2,101,0,2,101,116,116,101,32,0,2,
105,0,2,105,98,98,101,0,2,121,0,8,2,105,97,110,116,0,8,2,105,108,108,101,0,103,1,97,120,101,
2,101,114,0,101,2,110,105,99,32,3,75,6,122,0,101,110,101,115,105,115,3,75,6,122,50,113,89,124,89,
0,101,111,117,115,3,75,8,13,89,0,4,105,97,1,10,2,17,67,32,3,75,13,0,105,97,1,10,2,32,
0,105,117,1,10,2,109,0,4,105,110,103,1,108,3,75,113,68,0,105,110,103,1,114,0,105,97,8,2,21,
21,3,75,119,0,97,111,108,8,3,75,141,55,0,4,3,81,0,1,17,65,11,2,101,114,0,1,110,117,104,
0,1,111,2,121,32,0,1,111,98,2,69,121,0,1,111,103,2,105,99,32,0,1,111,111,2,101,121,0,2,
101,97,114,0,2,101,101,107,0,2,101,108,100,0,2,101,116,0,2,105,98,98,0,2,105,102,116,0,2,105,
103,103,0,2,105,108,17,67,0,2,105,108,116,0,2,105,114,25,0,2,105,118,101,0,8,2,18,66,17,71,
0,8,2,101,99,0,8,2,101,107,0,8,2,101,114,116,0,8,2,105,100,0,8,2,105,108,25,0,8,2,
105,109,0,8,2,105,116,0,8,2,105,122,0,8,2,119,17,71,0,8,2,121,110,0,103,0,104,1,17,67,
2,17,65,0,104,2,17,67,0,104,2,32,0,104,2,97,110,0,104,8,2,17,71,0,117,2,101,0,117,8,
2,105,0,117,101,2,32,0,105,2,32,3,81,2,124,0,101,2,100,100,3,81,6,122,0,110,117,8,3,81,
13,50,137,0,117,97,121,1,21,2,32,3,81,58,140,0,101,108,1,117,108,2,25,3,81,118,0,101,1,114,
111,102,2,116,3,81,122,0,105,103,97,8,3,81,124,81,13,0,4,101,105,2,115,116,32,3,81,140,0,105,
1,97,2,32,0,117,105,8,2,100,17,65,0,117,105,100,101,2,21,3,81,140,72,0,7,6,104,0,4,1,
17,67,2,97,109,32,3,0,4,2,32,3,0,4,2,104,3,0,4,8,2,111,110,111,114,3,0,4,8,2,
111,110,111,117,3,0,8,17,66,3,0,101,39,8,3,2,107,132,0,108,1,25,3,105,0,4,3,107,0,8,
2,114,111,21,0,111,109,111,8,2,115,3,107,4,139,65,139,0,4,121,112,111,2,100,101,3,107,4,140,48,
13,0,121,112,111,2,116,104,101,116,0,121,112,111,8,2,21,14,128,132,132,3,107,4,140,48,139,0,97,109,
109,101,100,1,21,3,107,6,35,65,124,72,0,97,110,1,101,2,32,3,107,13,50,0,97,110,1,17,65,2,
32,3,107,35,50,0,111,111,100,1,10,2,32,14,128,128,132,3,107,117,72,0,111,111,100,115,1,10,2,32,
14,128,128,133,3,107,117,72,88,0,101,114,111,8,2,110,3,107,122,34,13,0,101,116,101,114,111,8,3,107,
122,47,34,139,0,101,97,100,1,10,2,32,14,128,128,132,3,107,122,72,0,121,112,111,8,2,99,114,3,107,
124,48,126,0,111,114,114,105,8,3,107,126,34,124,0,111,114,115,101,8,3,107,135,89,0,111,117,115,101,115,
2,32,14,128,128,134,3,107,138,88,113,88,0,4,111,117,115,101,2,32,14,128,128,133,3,107,138,89,0,111,
117,115,101,8,2,21,0,111,108,100,1,10,2,32,14,128,128,132,3,107,139,55,72,0,111,108,109,101,3,107,
139,65,0,111,109,101,8,2,111,3,107,139,65,132,0,111,109,111,101,111,8,3,107,139,65,132,139,0,4,121,
112,111,2,116,101,110,117,3,107,140,48,6,126,0,121,112,111,2,116,104,101,115,0,97,2,115,116,3,107,141,
0,101,114,111,3,107,144,34,139,0,111,117,101,116,116,1,108,105,115,3,117,58,6,122,47,0,111,110,101,2,
115,116,3,126,50,124,0,101,105,114,3,143,0,111,117,114,3,149,0,7,6,105,0,39,8,3,2,140,0,122,
105,110,103,1,108,10,2,32,14,128,128,133,3,4,140,88,124,68,0,4,1,21,2,98,117,116,105,118,101,3,
6,124,0,1,21,2,98,117,116,111,114,0,1,21,2,99,105,112,0,2,17,67,17,67,105,32,0,2,99,105,
97,108,0,2,103,101,110,111,117,115,0,2,116,105,111,110,0,102,2,105,99,17,65,110,17,67,3,6,124,83,
0,99,105,97,110,3,6,124,91,13,50,0,4,1,21,2,100,111,32,3,6,132,0,2,98,97,32,0,2,113,
117,101,32,0,2,119,111,0,99,104,101,2,32,24,3,6,132,91,0,4,1,99,2,100,97,108,3,6,140,0,
2,122,111,110,32,0,97,108,1,10,2,32,3,8,113,13,55,0,117,115,1,10,3,8,113,13,89,0,99,111,
1,10,2,32,3,8,113,49,139,0,102,121,1,10,2,32,3,8,113,83,140,0,4,1,10,2,99,32,3,8,
124,0,1,10,2,99,97,32,0,1,10,2,99,97,108,0,1,10,2,99,105,17,67,101,32,0,1,10,2,99,
105,115,109,32,0,1,10,2,99,105,115,116,32,0,1,100,2,32,0,1,104,21,21,2,32,0,1,107,115,10,
2,32,0,2,99,117,115,32,0,4,1,21,2,17,67,97,116,101,32,3,8,125,0,1,21,2,17,67,97,116,
111,114,32,0,1,104,2,32,3,8,140,0,117,1,10,2,109,3,8,144,0,98,108,121,1,21,2,32,14,128,
169,132,3,13,71,55,2,124,0,98,108,101,1,21,2,32,14,128,137,132,3,13,71,118,0,98,108,101,115,1,
21,2,32,14,128,137,133,3,13,71,118,88,0,4,1,98,98,2,32,3,37,0,1,104,115,2,32,0,2,32,
0,100,104,2,32,0,4,1,21,2,99,101,32,3,113,0,1,21,2,99,101,100,32,0,1,102,2,100,101,108,
0,2,111,0,4,99,101,1,102,102,111,3,113,89,0,99,101,1,118,114,101,115,0,4,3,124,0,1,10,2,
17,67,101,110,99,0,1,10,2,17,67,101,110,116,0,1,10,2,122,101,110,0,1,17,67,2,120,12,12,0,
1,21,2,17,67,101,114,0,1,21,2,99,101,110,99,101,0,1,21,2,108,101,115,115,0,1,21,2,110,101,
115,115,0,1,99,99,97,2,100,0,1,108,2,98,101,114,0,1,108,108,101,116,110,0,1,112,117,2,100,101,
0,1,114,98,2,100,103,0,1,114,105,2,100,0,1,115,115,111,103,2,112,0,2,17,66,101,101,0,2,17,
66,101,108,32,0,2,17,66,101,116,32,0,2,97,110,105,32,0,2,98,105,108,105,116,0,2,100,101,111,0,
8,2,100,105,0,8,103,111,108,0,8,108,2,17,67,121,32,0,8,112,2,116,121,32,0,112,101,100,101,3,
124,48,132,72,0,99,104,8,3,124,49,0,98,101,1,116,2,116,3,124,71,6,122,0,102,101,1,110,97,109,
2,115,3,124,83,122,0,102,105,101,114,2,32,3,124,83,148,0,4,99,104,1,108,2,32,3,124,101,0,99,
104,1,108,2,101,114,32,0,105,2,32,3,124,140,0,99,101,2,108,108,105,32,3,125,76,6,122,0,4,1,
17,67,29,2,17,67,97,32,3,132,0,1,17,67,29,2,17,67,111,32,0,1,102,2,106,0,2,98,111,32,
0,2,113,117,32,0,5,7,2,111,0,8,108,2,98,114,101,0,122,122,8,112,3,132,47,89,0,4,1,10,
2,122,97,98,108,3,140,0,1,17,67,29,2,17,67,101,114,32,0,1,17,67,29,2,17,67,121,32,0,1,
17,67,29,2,32,0,1,21,2,17,67,105,110,103,0,1,29,2,28,22,12,12,12,0,1,98,2,32,0,1,
98,2,98,108,101,32,0,1,99,2,32,0,1,102,2,98,114,101,0,1,104,2,106,0,1,108,2,98,101,108,
0,1,114,2,102,108,0,1,114,98,2,100,108,0,1,114,99,115,2,98,101,114,0,1,114,102,2,100,97,121,
0,1,114,112,2,99,101,0,1,115,2,122,17,65,0,1,116,110,101,2,99,101,0,1,116,115,2,102,108,0,
1,118,2,98,114,0,1,118,100,97,2,99,101,0,1,118,101,100,2,99,101,0,2,17,66,101,13,0,2,98,
101,114,32,0,2,100,101,111,108,0,2,100,101,114,12,32,0,2,100,101,114,32,12,0,8,2,17,66,111,0,
8,2,17,67,121,32,0,8,2,97,0,8,2,98,0,8,2,99,0,8,2,100,0,8,2,100,108,101,0,8,
2,104,0,8,2,111,0,8,108,2,98,114,0,8,114,116,115,2,97,116,0,8,115,2,100,101,114,0,8,115,
2,100,108,0,8,115,2,112,104,0,104,105,1,110,3,140,13,0,99,104,97,101,108,1,109,3,140,49,118,0,
98,97,98,1,21,3,140,71,13,71,0,100,101,97,8,3,140,72,6,144,0,4,122,2,101,114,32,3,140,88,
0,122,101,1,108,10,2,32,14,128,128,131,0,122,101,2,32,0,122,101,2,100,32,0,122,101,100,1,108,10,
2,32,14,128,128,132,3,140,88,72,0,122,101,115,1,108,10,2,32,14,128,128,132,3,140,88,125,88,0,122,
97,2,116,105,111,110,3,140,88,141,0,106,2,17,67,3,141,0,7,6,106,0,2,106,3,0,4,1,110,2,
97,32,3,57,0,2,195,188,0,4,111,107,117,108,108,2,32,14,128,128,134,3,57,131,49,137,47,107,0,195,
182,107,117,108,108,2,32,14,128,128,134,0,97,103,101,114,3,57,141,81,114,0,117,97,110,3,58,6,121,50,
0,3,75,0,105,104,97,8,2,100,3,75,113,107,121,0,97,8,2,109,97,105,3,75,119,0,101,114,101,8,
2,17,67,3,75,122,34,13,0,101,115,8,2,117,105,3,75,122,88,0,117,100,101,111,8,3,75,137,6,72,
141,139,0,111,97,8,2,110,21,3,75,139,6,35,0,117,97,110,8,3,107,58,121,50,0,7,6,107,0,2,
107,3,0,4,3,49,0,8,2,18,66,17,71,0,8,2,104,17,71,0,8,2,119,17,71,0,104,2,17,65,
32,0,104,8,2,114,21,21,0,105,110,101,115,105,115,3,49,13,50,6,132,89,125,89,0,106,8,2,101,21,
3,49,57,0,117,97,110,3,49,58,35,50,0,105,8,2,108,17,67,21,3,49,113,0,104,97,8,3,49,121,
0,105,8,2,108,108,21,3,49,124,0,105,108,111,8,2,21,3,49,124,55,13,0,104,97,114,3,49,130,0,
117,2,99,104,3,49,137,0,117,119,97,105,116,3,49,137,58,6,141,47,0,121,111,3,49,140,139,0,4,110,
2,105,102,3,50,0,110,2,105,116,0,110,2,105,118,0,110,2,111,98,0,110,2,111,119,0,110,8,2,17,
71,0,7,6,108,0,4,1,108,3,0,1,108,17,65,2,32,3,0,111,1,21,2,103,111,117,115,3,8,55,
13,0,105,110,103,1,116,10,2,32,3,10,55,124,68,0,105,110,103,1,103,110,2,32,3,14,55,124,68,0,
121,1,108,21,2,32,14,128,128,130,3,37,0,4,3,55,0,1,17,65,2,108,121,32,0,1,114,2,32,0,
1,119,2,32,0,2,17,67,0,2,32,0,2,69,0,8,2,104,17,71,0,108,1,17,65,0,108,1,17,65,
2,17,65,0,108,1,39,17,65,0,108,1,121,0,108,2,17,67,0,108,8,2,17,71,0,108,101,2,32,0,
4,121,1,21,2,32,14,128,130,130,3,55,2,37,0,121,1,102,101,105,2,32,14,128,128,130,0,121,1,102,
102,2,32,14,128,128,130,0,121,1,102,111,2,32,14,128,128,130,0,121,1,108,117,102,10,2,32,14,136,128,
130,0,121,1,111,2,32,0,121,1,112,10,2,32,14,128,128,130,0,69,115,115,1,21,2,32,14,128,130,132,
3,55,13,89,0,69,115,115,108,121,1,21,2,32,14,128,130,134,3,55,13,89,55,2,37,0,106,117,8,3,
55,57,137,0,105,98,8,2,114,101,116,116,3,55,113,71,0,121,8,2,100,3,55,124,0,105,110,117,120,3,
55,124,50,129,49,89,0,105,109,1,10,2,101,110,116,3,55,124,65,0,105,110,103,1,17,66,10,2,32,3,
55,124,68,0,105,110,103,115,1,17,66,10,2,32,3,55,124,68,88,0,105,115,116,101,110,3,55,124,89,13,
50,0,105,98,114,101,8,2,14,128,132,133,3,55,132,71,34,13,0,111,5,3,8,2,103,25,3,55,134,0,
117,2,110,97,3,55,137,0,4,121,1,102,2,32,3,55,140,0,121,1,112,2,32,0,121,1,112,105,116,108,
117,109,0,105,107,101,1,10,2,32,14,128,128,132,3,55,140,49,0,4,108,101,100,1,21,21,2,32,14,128,
136,131,3,72,0,108,101,100,1,111,21,21,2,32,14,128,136,131,0,108,97,110,8,3,105,2,35,50,0,1,
17,66,2,32,3,118,0,105,110,103,1,108,10,2,32,14,128,152,132,3,124,68,0,7,6,109,0,4,1,17,
66,2,32,3,13,65,0,1,104,2,32,0,110,8,2,101,3,50,0,4,3,65,0,1,108,2,32,0,98,1,
111,2,101,0,98,2,32,0,98,8,111,98,2,25,0,98,8,117,100,0,109,0,110,2,32,0,101,116,97,8,
2,108,108,117,3,65,2,122,47,35,0,101,1,17,66,10,2,32,3,65,2,124,0,4,97,108,8,2,102,14,
128,132,131,3,65,4,35,55,0,97,108,8,2,110,14,128,132,131,0,97,108,8,2,112,14,128,132,131,0,97,
108,8,2,116,114,14,128,132,131,0,101,116,97,8,2,21,3,65,4,122,47,13,0,117,108,116,105,8,2,21,
21,14,128,132,133,3,65,4,129,55,47,124,0,101,1,114,111,116,2,110,116,12,3,65,6,122,0,69,110,116,
97,114,121,2,32,3,65,6,122,50,47,13,34,2,124,0,101,110,116,101,100,1,17,67,3,65,6,122,50,47,
124,72,0,4,99,8,2,18,70,21,3,65,13,0,99,8,2,32,18,70,0,111,2,110,111,116,111,0,101,116,
97,98,111,3,65,13,47,6,35,71,126,0,101,116,97,108,108,8,2,105,99,3,65,13,47,35,55,0,4,97,
99,8,2,97,100,14,128,132,131,3,65,13,49,0,97,99,8,2,98,14,128,132,131,0,97,99,8,2,100,14,
128,132,131,0,97,99,8,2,108,14,128,132,131,0,97,99,8,2,109,14,128,132,131,0,99,8,2,17,65,0,
99,8,2,17,67,21,0,99,8,2,32,17,65,0,99,8,2,32,17,67,0,4,101,110,1,21,2,32,28,18,
3,65,13,50,0,111,110,2,111,112,111,108,18,67,0,111,110,111,2,103,97,3,65,13,50,6,126,0,4,69,
110,116,2,32,3,65,13,50,47,0,101,110,116,1,10,2,32,14,128,128,132,0,4,101,110,116,39,115,1,10,
2,32,14,128,128,134,3,65,13,50,47,89,0,101,110,116,115,1,10,2,32,14,128,128,133,0,4,97,108,8,
2,101,118,3,65,13,55,0,97,108,8,2,105,103,0,111,98,105,108,101,1,10,3,65,13,71,132,55,0,111,
117,116,104,1,10,2,32,3,65,13,87,0,97,8,2,109,3,65,35,0,99,8,2,105,110,3,65,35,49,0,
97,99,104,105,97,8,3,65,35,49,144,0,98,108,121,3,65,71,55,2,124,0,101,116,97,108,8,2,17,67,
3,65,122,47,118,0,101,110,1,21,2,32,3,65,122,50,0,101,110,116,5,8,1,10,2,32,14,128,128,132,
3,65,122,50,47,0,101,110,116,115,5,8,1,10,2,32,14,128,128,133,3,65,122,50,47,89,0,101,103,97,
8,3,65,122,81,13,0,111,110,111,8,3,65,126,50,139,0,111,110,2,111,120,3,65,129,50,0,117,108,116,
105,8,3,65,129,55,47,124,0,111,117,116,104,1,10,2,32,28,17,3,65,138,87,0,111,99,104,97,8,3,
65,139,49,13,0,111,115,116,1,21,2,32,14,128,128,132,3,65,139,89,47,0,97,121,111,114,5,35,3,65,
143,0,7,6,110,0,4,1,110,3,0,4,1,110,2,32,3,0,4,100,1,32,50,2,32,3,0,101,1,110,
10,2,32,3,0,2,17,67,111,32,3,8,50,0,121,97,1,10,2,32,3,8,50,57,13,0,4,1,17,66,
2,32,3,13,50,0,1,69,2,32,0,39,116,3,14,50,47,0,8,2,103,17,71,12,3,14,68,0,4,3,
50,0,1,21,2,99,104,0,1,97,105,10,2,32,14,128,128,129,0,1,103,2,32,0,1,103,2,105,110,103,
12,0,1,108,2,32,0,2,107,110,0,101,1,17,66,10,2,32,3,50,2,124,0,97,110,111,8,2,14,128,
132,132,3,50,4,35,50,139,0,111,110,8,2,21,14,128,132,131,3,50,4,126,50,0,101,119,115,8,2,14,
128,132,132,3,50,6,57,137,88,0,101,119,115,5,3,8,2,14,128,132,132,3,50,6,137,88,0,101,115,115,
1,10,2,32,14,136,130,132,3,50,13,89,0,101,99,101,115,115,105,116,3,50,13,89,122,89,124,47,0,97,
118,105,103,8,3,50,35,84,124,81,0,39,116,1,17,65,3,50,47,0,107,5,7,3,50,49,0,115,1,97,
105,10,2,32,14,128,128,130,3,50,88,0,101,115,115,5,8,1,10,2,32,14,136,130,132,3,50,122,89,0,
111,110,99,104,97,108,97,5,3,2,110,3,50,126,50,91,13,55,6,121,0,111,110,99,104,97,108,97,2,110,
3,50,126,50,91,13,55,13,0,117,114,115,101,8,2,17,66,3,50,131,89,0,101,111,8,3,50,132,139,0,
97,117,115,101,3,50,133,89,124,0,111,97,117,116,111,8,2,14,128,132,134,3,50,139,133,47,139,0,105,110,
116,104,3,50,140,50,87,0,97,109,101,1,10,2,32,14,128,128,132,3,50,141,65,0,4,1,21,2,99,17,
67,3,68,0,2,99,32,0,2,120,0,107,3,68,49,0,7,6,111,0,4,2,98,106,101,3,2,126,0,8,
2,98,115,0,8,2,98,116,0,112,112,111,114,2,116,117,3,2,126,48,114,0,98,115,8,2,101,114,3,2,
126,71,88,0,4,1,29,2,28,19,12,12,12,3,2,127,0,2,98,108,105,103,97,116,111,0,5,3,8,2,
98,115,0,5,3,8,2,98,116,0,8,2,98,108,0,4,1,99,2,105,110,99,105,3,2,139,0,1,100,2,
100,101,99,0,1,108,2,99,97,116,0,8,2,98,101,115,0,39,8,2,14,128,132,130,0,120,121,8,2,21,
21,3,4,126,49,89,113,0,1,108,2,99,111,109,3,4,139,0,101,2,118,101,3,4,139,6,122,0,4,2,
17,67,105,99,32,3,6,126,0,2,17,67,105,99,97,108,0,2,103,101,110,111,117,115,0,2,103,101,110,121,
0,4,112,111,108,1,21,2,18,67,3,6,126,48,13,55,0,112,111,108,1,21,2,105,18,71,0,99,114,97,
116,101,115,2,32,3,6,126,49,34,119,47,132,88,0,120,2,105,100,101,3,6,126,49,89,0,109,101,116,101,
114,1,21,3,6,126,65,124,47,114,0,103,114,97,112,104,101,114,1,21,3,6,126,81,34,13,83,114,0,112,
104,97,1,99,114,2,103,3,6,126,83,13,0,4,1,116,115,117,99,2,100,105,3,6,139,0,2,17,66,97,
32,0,2,17,66,101,111,110,0,2,17,66,105,17,65,0,2,17,67,105,32,0,2,17,67,111,32,0,2,17,
67,111,105,115,116,0,2,98,105,99,32,0,2,99,114,101,32,0,97,2,32,3,6,139,13,0,4,105,2,110,
97,32,3,6,142,0,121,2,17,65,32,0,101,97,2,32,3,6,144,0,4,1,10,2,112,104,101,114,3,8,
13,0,2,99,121,116,101,32,0,103,1,108,21,2,121,3,8,13,75,0,103,105,115,109,1,108,3,8,13,75,
124,88,13,65,0,112,104,101,1,10,2,32,3,8,13,83,2,124,0,1,17,67,21,21,2,32,3,8,139,0,
4,1,10,2,100,121,32,3,13,0,1,10,2,103,101,110,32,0,1,10,2,112,32,0,1,10,2,112,104,121,
0,1,102,102,2,99,17,65,0,1,104,115,105,98,2,112,0,1,104,116,101,109,2,100,32,0,1,105,114,101,
112,2,100,32,0,1,109,2,120,0,1,109,109,2,100,111,114,0,1,115,2,112,104,105,115,116,105,99,0,1,
116,2,98,97,99,99,0,1,116,115,117,99,2,100,0,2,102,102,105,99,105,0,2,112,105,110,105,0,8,2,
99,99,97,115,105,0,8,2,99,99,108,117,0,102,2,102,101,110,0,4,112,1,10,2,121,32,3,13,48,0,
112,112,2,114,101,115,0,112,111,108,105,116,97,110,3,13,48,6,126,55,124,47,13,50,0,112,101,100,1,10,
2,32,3,13,48,72,0,112,105,110,103,1,10,2,32,3,13,48,124,68,0,99,107,1,17,67,11,10,2,32,
3,13,49,0,4,99,99,117,114,3,13,49,131,0,99,99,117,114,114,0,4,99,99,117,114,5,5,3,13,49,
151,0,99,99,117,114,114,5,5,0,103,2,101,116,105,99,3,13,75,0,4,105,115,101,1,112,114,111,3,13,
89,0,105,115,101,1,116,114,0,105,120,2,32,3,58,35,0,105,115,1,21,2,32,3,58,121,0,4,105,114,
3,58,130,0,105,114,101,0,101,1,10,2,115,32,14,128,128,130,3,88,0,101,115,111,112,104,97,3,113,89,
126,83,13,0,4,3,126,0,1,29,2,99,116,0,1,98,2,100,121,32,0,1,104,2,112,32,0,1,108,102,
2,112,32,0,1,109,2,100,101,108,0,1,109,2,100,101,114,0,1,109,2,100,101,115,116,0,1,112,2,112,
32,0,1,114,2,103,101,114,0,1,114,2,112,32,0,1,114,112,2,112,101,0,1,116,2,112,32,0,2,17,
66,101,17,67,111,32,0,2,17,67,101,109,105,99,0,2,17,67,101,116,32,0,2,98,108,105,103,97,0,2,
98,108,111,0,2,98,115,116,105,110,0,2,102,102,105,99,0,2,120,12,12,0,8,0,8,2,17,67,121,12,
0,8,2,112,101,114,0,8,98,2,100,121,0,8,114,2,98,101,114,0,104,1,106,2,110,0,112,116,111,8,
3,126,48,47,139,0,99,116,111,8,2,21,3,126,49,47,13,0,4,120,121,3,126,49,89,124,0,120,121,8,
2,103,0,98,115,111,2,108,3,126,71,89,13,0,4,103,101,1,108,21,2,32,3,126,81,0,103,117,101,1,
21,21,0,1,29,3,127,0,4,1,100,2,122,101,110,3,129,0,1,116,2,110,103,117,0,4,101,1,102,2,
116,17,65,3,132,0,101,8,2,100,0,101,8,2,115,0,97,1,114,98,2,100,3,133,0,4,5,3,1,10,
2,102,102,3,134,0,5,3,1,99,2,102,102,0,5,3,1,103,2,110,103,0,5,3,1,114,2,110,103,0,
5,3,1,115,2,110,103,0,5,3,2,102,116,0,5,3,8,2,102,102,0,4,39,101,114,3,136,0,97,114,
0,97,114,2,32,0,4,1,100,2,105,110,103,3,137,0,101,1,104,115,2,12,0,101,114,1,100,2,32,3,
137,114,0,4,1,17,67,29,2,17,66,97,108,3,139,0,1,17,67,29,2,17,66,117,115,32,0,1,21,2,
105,115,116,0,1,29,2,17,66,121,32,0,1,29,2,98,97,0,1,29,2,112,104,101,114,0,1,100,2,99,
105,108,0,1,102,2,99,17,65,0,1,103,105,2,32,0,1,107,2,100,17,65,0,1,110,2,98,105,108,0,
1,110,2,98,108,0,1,114,99,2,97,116,0,1,114,99,2,99,117,0,1,114,112,112,97,2,112,0,1,114,
116,2,106,97,110,0,2,17,66,101,13,0,2,17,66,101,110,17,67,0,2,17,66,105,110,103,0,2,17,67,
97,103,104,32,0,2,32,0,2,98,101,100,0,2,98,121,32,0,2,103,97,110,32,0,2,104,17,65,0,2,
105,110,103,0,2,105,115,109,0,2,107,117,0,2,107,121,32,0,2,113,117,101,32,0,2,115,104,17,65,32,
0,2,116,105,111,110,0,8,2,17,66,97,108,0,8,2,100,17,65,0,8,2,122,111,0,8,17,67,2,116,
105,0,8,104,2,99,117,0,8,108,2,99,17,65,0,8,109,2,98,105,108,0,8,114,2,98,111,0,8,118,
2,99,17,65,0,97,0,101,0,104,0,4,112,101,1,110,117,2,110,3,139,48,13,0,112,101,8,2,110,0,
112,101,100,1,99,2,32,3,139,48,72,0,112,105,110,103,1,99,2,32,3,139,48,124,68,0,99,104,1,114,
116,3,139,49,0,100,111,2,114,17,65,3,139,72,13,0,4,100,111,114,3,139,72,114,0,100,111,117,114,0,
103,101,110,105,2,99,3,139,75,6,122,50,124,0,4,103,8,2,114,101,3,139,81,0,103,117,101,1,114,0,
103,117,101,1,118,0,99,101,97,110,3,139,91,13,50,0,99,101,97,110,2,105,99,3,139,91,124,35,50,0,
105,2,99,3,139,113,0,101,114,3,139,114,0,101,1,112,2,116,105,3,139,122,0,4,101,1,112,2,109,3,
139,124,0,101,1,112,2,116,0,105,2,122,17,65,3,139,140,0,4,105,3,142,0,105,2,99,101,0,105,2,
99,101,13,0,105,2,99,107,0,105,115,1,117,2,32,0,121,0,105,97,3,142,13,0,7,6,112,0,4,1,
115,97,114,2,98,3,0,4,2,112,3,0,2,112,104,3,0,104,111,110,121,1,10,2,32,3,8,83,13,50,
124,0,104,101,108,101,115,2,32,3,8,83,13,55,132,88,0,4,116,1,105,101,3,47,0,116,8,2,17,71,
0,4,3,48,0,2,104,28,20,0,2,104,97,122,97,0,2,104,111,108,101,0,8,2,18,66,17,71,0,104,
2,101,114,100,0,111,114,2,116,114,97,121,3,48,2,136,0,111,108,121,2,21,21,3,48,4,126,55,124,0,
121,114,111,8,2,21,21,14,128,132,132,3,48,4,140,34,139,0,97,108,101,111,8,2,21,14,128,132,133,3,
48,4,141,55,132,139,0,4,97,1,109,121,115,3,48,13,0,104,97,2,109,32,0,111,116,97,2,116,3,48,
13,47,141,0,121,111,110,3,48,57,126,50,0,117,8,2,116,114,3,48,57,137,0,117,114,8,2,115,117,3,
48,114,0,117,116,2,32,3,48,117,47,0,111,108,121,2,21,3,48,126,55,124,0,117,116,1,115,2,32,3,
48,129,47,0,105,99,111,8,3,48,132,49,139,0,107,103,3,48,132,49,141,75,6,132,0,105,101,99,101,2,
32,14,128,128,133,3,48,132,89,0,121,114,111,109,2,101,3,48,140,34,6,126,65,0,110,8,2,101,117,3,
50,0,110,101,117,3,50,57,137,0,4,102,8,2,17,71,3,83,0,104,0,104,8,2,17,71,0,104,8,2,
18,66,17,71,0,104,101,110,121,108,3,83,4,132,50,140,55,0,104,111,116,111,8,2,21,21,14,128,132,133,
3,83,4,139,47,139,0,104,121,99,111,8,3,83,4,140,49,139,0,104,116,104,8,2,17,65,3,83,87,0,
104,101,110,111,109,101,2,110,3,83,113,50,126,65,124,0,104,105,108,97,8,3,83,113,55,35,0,4,104,111,
116,2,111,103,114,97,112,104,12,3,83,139,47,0,104,111,116,8,2,111,18,75,12,12,0,104,111,116,111,99,
111,112,3,83,139,47,13,49,126,48,0,104,111,116,111,110,3,83,139,47,126,50,0,104,111,116,111,3,83,139,
47,139,0,115,8,2,17,71,3,89,0,115,121,99,104,111,2,108,111,3,89,2,140,49,126,0,115,101,117,100,
111,3,89,137,72,139,0,115,121,99,104,3,89,140,49,0,115,121,99,104,111,3,89,140,49,139,0,7,6,113,
0,2,113,3,0,4,3,49,0,117,1,21,2,195,169,32,0,117,1,99,97,106,0,117,2,32,0,117,2,101,
114,32,0,117,101,1,21,2,32,0,117,101,1,101,104,99,0,117,101,116,116,3,49,6,122,47,0,117,105,1,
115,101,109,2,116,3,49,6,132,0,117,101,117,3,49,57,137,0,117,3,49,58,0,117,2,17,67,3,49,58,
13,0,117,101,8,2,32,3,49,58,122,0,117,101,115,116,3,49,58,122,89,47,0,117,101,115,116,105,111,2,
110,3,49,58,122,89,76,13,0,117,121,3,49,58,124,0,4,117,97,1,115,2,17,66,3,49,58,126,0,117,
97,8,2,102,0,117,97,115,2,17,65,3,49,58,141,88,0,117,97,115,105,3,49,58,141,88,140,0,117,101,
116,1,97,114,3,49,113,47,0,117,111,114,1,105,108,3,49,114,0,117,97,121,3,49,132,0,117,101,116,2,
32,3,49,141,0,117,101,115,8,2,17,65,3,49,141,89,0,7,6,114,0,4,1,114,2,32,3,0,100,1,
32,51,2,32,3,0,109,8,2,17,65,3,4,130,122,65,0,1,21,2,17,66,3,13,0,4,3,34,0,104,
1,17,67,0,104,8,2,17,71,0,114,0,119,8,2,97,3,34,2,117,0,4,114,104,101,97,3,34,6,144,
0,114,104,111,101,97,0,4,121,1,110,97,10,2,32,14,128,128,130,3,34,37,0,121,1,116,110,97,10,2,
32,14,128,128,130,0,105,101,115,1,116,110,97,10,2,32,14,128,128,132,3,34,37,88,0,69,114,2,32,3,
34,114,0,104,121,116,104,3,34,124,86,0,4,117,110,8,2,97,3,34,129,50,0,117,110,8,2,111,0,4,
104,101,117,3,34,137,0,117,8,2,98,18,66,0,117,108,101,8,2,21,3,34,137,55,0,4,104,111,8,2,
100,3,34,139,0,104,111,8,2,116,0,104,111,100,111,8,2,21,3,34,139,72,13,0,4,104,105,2,110,13,
3,34,140,0,104,105,2,122,0,4,1,17,67,2,32,24,3,114,0,1,101,2,32,0,7,6,115,0,4,1,
10,2,99,105,111,110,3,0,4,2,99,105,111,117,115,3,0,4,2,115,3,0,116,1,32,49,2,32,3,0,
104,101,39,8,3,2,91,132,0,101,108,102,2,32,3,6,89,122,55,83,0,101,108,118,101,115,2,32,3,6,
89,122,55,84,88,0,105,97,2,32,3,8,88,144,0,1,10,2,117,32,3,8,89,0,99,111,112,121,1,21,
2,32,3,8,89,49,13,48,2,124,0,99,105,115,2,32,3,8,89,49,124,89,0,99,105,2,32,3,8,89,
49,140,0,105,97,1,17,67,2,32,3,8,89,144,0,105,97,5,3,2,32,3,8,90,13,0,104,1,17,65,
2,17,65,32,3,8,91,0,115,105,111,110,3,8,91,13,50,0,115,105,111,110,5,8,2,32,3,8,91,129,
50,0,105,97,110,1,21,2,32,14,128,128,129,3,50,0,4,1,10,2,105,99,32,3,88,0,1,17,65,2,
105,116,105,118,0,1,18,72,2,109,17,65,110,32,0,1,21,2,32,14,128,128,129,0,1,32,15,2,32,0,
1,32,54,49,2,32,0,1,39,32,15,2,32,0,1,97,2,101,108,32,0,1,97,2,109,0,1,97,101,2,
105,101,0,1,97,101,2,105,108,0,1,97,101,2,121,0,1,97,101,108,112,2,101,0,1,97,101,112,2,101,
0,1,97,101,116,2,101,0,1,97,104,112,2,101,0,1,97,108,2,101,0,1,97,109,2,101,0,1,97,112,
2,101,0,1,97,114,2,101,0,1,101,2,100,0,1,103,110,2,32,14,128,128,129,0,1,105,17,65,2,121,
0,1,105,97,2,101,0,1,105,111,112,2,111,110,0,1,105,114,112,2,111,0,1,109,2,105,0,1,109,2,
121,0,1,110,2,32,14,128,128,129,0,1,110,2,121,32,0,1,111,2,109,0,1,111,17,67,2,69,110,0,
1,111,17,67,2,69,114,0,1,117,109,2,105,99,0,2,32,0,2,109,25,0,8,97,101,2,101,0,8,97,
104,2,32,0,8,101,114,2,111,0,8,105,111,17,67,2,101,0,101,1,105,117,2,32,0,101,1,111,2,32,
0,101,1,111,100,2,32,0,101,1,111,111,104,99,0,101,1,111,116,2,32,0,101,1,117,97,2,32,0,101,
1,117,102,2,32,0,101,1,119,0,4,105,110,1,105,97,2,32,3,88,13,50,0,105,110,1,117,2,32,0,
105,98,1,17,65,3,88,13,71,0,105,1,117,2,97,3,88,124,0,4,3,89,0,1,21,2,32,28,17,14,
128,128,129,0,1,21,2,104,101,97,100,32,0,1,21,2,104,105,108,108,32,0,1,21,2,104,111,117,115,0,
1,97,2,101,0,1,99,2,32,0,1,99,10,2,32,14,128,128,129,0,1,101,112,10,2,32,14,128,128,129,
0,1,101,116,2,32,14,128,128,129,0,1,102,2,32,0,1,102,10,2,32,14,128,128,129,0,1,104,116,2,
32,0,1,104,116,10,2,32,14,128,128,129,0,1,107,2,32,0,1,107,10,2,32,14,128,128,129,0,1,112,
2,32,0,1,112,10,2,32,14,128,128,129,0,1,116,2,32,14,128,128,129,0,1,116,10,2,32,14,128,128,
129,0,2,115,104,0,5,3,1,101,114,2,111,117,114,0,8,2,99,17,71,0,8,2,99,18,66,17,71,0,
8,2,107,17,71,0,8,2,107,18,66,17,71,0,8,2,108,17,71,0,8,2,109,17,71,0,8,2,110,17,
71,0,8,2,112,17,71,0,8,2,112,18,66,17,71,0,8,2,112,104,17,71,0,8,2,113,117,0,8,2,
114,105,0,8,2,116,17,71,0,8,2,116,114,17,71,0,8,2,117,0,8,2,118,97,0,8,2,118,101,0,
8,2,119,17,71,0,8,17,65,17,66,2,32,24,0,8,105,109,2,104,0,99,1,117,109,2,108,0,99,2,
18,67,0,101,1,111,111,2,32,0,115,1,111,114,99,2,104,0,115,2,32,0,115,2,105,99,0,115,101,2,
32,0,101,109,105,8,2,21,21,14,128,132,132,3,89,4,122,65,113,0,99,105,2,98,3,89,13,0,116,8,
2,32,3,89,13,50,47,0,111,109,97,8,2,108,105,3,89,13,65,121,0,105,98,1,10,3,89,13,71,0,
111,99,105,101,8,2,116,3,89,13,89,147,0,116,101,105,110,3,89,47,140,50,0,112,101,97,107,1,10,2,
32,14,128,128,133,3,89,48,132,49,0,4,99,2,101,112,116,3,89,49,0,99,104,2,111,0,99,104,5,3,
2,101,100,0,99,104,8,2,105,115,109,0,99,97,114,8,2,97,3,89,49,35,34,0,99,104,105,122,8,3,
89,49,124,47,89,0,99,104,101,2,109,3,89,49,132,0,99,97,114,99,3,89,49,143,89,0,4,101,8,2,
99,108,117,3,89,113,0,101,8,2,100,117,99,0,101,99,117,114,3,89,113,49,57,146,0,101,109,105,110,8,
3,89,122,65,124,50,0,121,2,110,101,114,103,3,89,124,0,105,110,103,1,108,2,32,3,89,124,68,0,111,
109,101,1,21,2,32,14,128,128,132,3,89,129,65,0,111,109,101,1,111,21,21,2,32,14,128,128,132,3,89,
139,65,0,105,122,101,8,2,17,67,21,3,89,140,88,0,4,105,111,110,1,17,65,3,90,13,50,0,105,111,
110,5,3,1,114,101,0,105,111,110,5,8,1,17,65,3,90,129,50,0,4,99,104,2,17,67,3,91,0,99,
104,2,32,0,99,104,2,101,114,32,0,99,104,8,0,99,104,8,2,105,108,0,99,104,8,101,0,104,0,104,
8,2,17,71,0,104,8,2,18,66,17,71,0,115,117,114,101,1,97,3,91,6,146,0,115,105,97,2,32,3,
91,13,0,105,111,110,1,17,67,3,91,13,50,0,122,8,2,21,21,3,91,88,0,4,104,105,114,101,1,10,
2,32,14,128,128,133,3,91,114,0,115,117,114,0,4,104,105,112,1,10,2,32,14,128,128,132,3,91,124,48,
0,104,105,112,101,1,10,2,32,0,104,105,112,115,1,10,2,32,14,128,128,133,3,91,124,48,89,0,105,111,
110,5,8,1,17,67,3,91,129,50,0,195,173,111,8,3,91,132,0,115,117,101,3,91,137,0,115,117,114,1,
97,3,91,146,0,1,32,54,2,32,3,113,88,0,8,2,32,3,122,89,0,4,1,101,99,21,2,32,14,128,
128,129,3,125,88,0,1,101,115,10,2,32,14,128,128,129,0,1,101,115,115,10,2,32,14,128,128,130,0,7,
6,116,0,4,1,115,2,108,3,0,1,116,3,0,116,2,105,32,3,8,47,0,4,101,110,5,3,1,10,2,
32,3,19,42,0,116,97,110,5,3,1,10,2,32,0,116,101,110,5,3,1,10,2,32,0,116,111,110,5,3,
1,10,0,116,105,110,1,101,29,2,32,3,19,50,0,4,3,47,0,2,104,28,20,0,8,2,114,17,71,0,
8,2,115,17,71,0,8,2,119,17,71,0,8,105,112,2,105,97,0,116,2,105,97,32,0,115,107,8,3,47,
6,13,89,49,0,4,111,2,109,111,114,114,3,47,13,0,116,117,2,114,0,114,97,110,115,8,2,110,14,128,
132,133,3,47,34,35,50,89,0,4,114,105,8,2,98,117,3,47,34,124,0,114,105,8,2,103,0,114,105,8,
2,103,111,110,17,65,0,114,105,8,2,110,105,0,114,105,8,2,118,105,0,114,105,8,2,120,17,65,0,4,
114,105,8,2,17,65,3,47,34,140,0,114,105,8,2,17,67,17,65,0,114,105,8,2,17,67,121,0,114,105,
101,8,0,114,105,98,101,3,47,34,140,71,0,4,122,3,47,89,0,122,8,2,97,114,0,4,115,101,2,32,
3,47,89,37,0,122,101,2,32,0,115,117,8,3,47,89,137,0,101,114,97,8,3,47,122,34,13,0,101,107,
1,21,2,32,14,128,128,131,3,47,122,49,0,101,108,101,8,3,47,122,55,113,0,111,8,2,110,110,3,47,
129,0,118,2,32,3,47,132,84,132,0,119,111,8,3,47,137,0,111,119,110,1,21,2,32,14,128,128,132,3,
47,138,50,0,4,99,104,3,76,0,115,99,104,0,103,97,1,114,2,103,3,81,124,0,1,21,2,105,97,3,
91,0,4,1,101,105,2,97,114,121,32,3,108,0,2,17,65,28,20,0,2,97,112,32,0,2,111,111,116,104,
0,101,2,114,114,101,115,116,3,108,13,0,121,112,101,3,108,140,48,0,7,6,117,0,8,2,107,114,97,105,
110,3,2,57,137,0,108,1,102,2,102,105,108,3,2,117,55,0,108,116,114,97,8,2,21,3,4,117,55,47,
34,35,0,4,1,21,2,100,97,32,3,6,57,137,0,1,102,2,103,97,108,0,2,17,67,105,17,65,0,2,
115,105,111,110,0,2,116,105,111,110,0,101,110,116,101,3,6,58,122,50,47,141,0,4,1,108,2,115,105,111,
110,3,6,137,0,1,114,2,17,67,105,17,65,0,1,114,2,115,105,111,110,0,1,115,2,17,67,17,65,32,
0,1,122,2,108,32,0,2,103,97,32,0,2,107,105,32,0,2,109,97,32,0,2,109,111,32,0,2,122,122,
105,32,0,5,3,1,18,73,21,2,100,97,32,0,5,3,1,104,116,2,17,67,105,17,65,0,121,2,17,65,
32,3,6,137,57,0,109,1,108,108,10,2,32,3,8,13,65,0,4,1,10,2,108,111,117,115,32,3,8,57,
117,0,1,21,2,108,97,32,0,1,21,2,108,97,114,0,1,21,2,108,97,116,101,0,1,21,2,108,117,109,
0,1,21,2,108,117,115,32,0,108,105,1,21,2,32,3,8,57,117,55,140,0,2,97,32,3,8,57,137,0,
111,117,115,1,21,3,8,57,137,13,89,0,1,104,2,32,3,8,137,0,111,117,115,1,18,66,21,3,8,137,
13,89,0,108,108,121,1,102,10,2,32,3,13,55,2,124,0,4,109,1,10,2,32,3,13,65,0,109,1,99,
114,105,99,0,109,1,114,2,101,110,116,0,103,103,101,1,115,2,115,116,3,13,75,122,0,4,115,1,10,2,
32,3,13,89,0,115,1,99,111,102,0,97,1,103,2,114,17,65,3,35,0,2,108,17,65,3,57,117,0,4,
1,25,2,116,114,105,3,57,137,0,1,100,2,108,121,0,1,104,2,109,97,110,0,1,108,97,118,0,1,108,
108,2,108,0,1,108,111,118,2,109,101,0,1,110,2,97,108,32,0,1,110,2,97,116,0,1,110,97,109,0,
1,110,105,116,110,111,99,0,1,115,2,108,101,32,0,2,17,67,17,65,0,2,17,67,101,17,67,111,32,0,
2,32,0,2,97,0,2,97,108,32,0,2,101,115,113,0,2,105,0,2,108,101,32,0,2,109,101,0,2,111,
0,2,116,121,0,8,2,116,105,108,0,8,108,111,115,2,17,67,0,103,1,112,109,2,110,0,103,104,1,104,
0,117,1,99,97,118,0,117,2,109,3,57,137,13,0,97,114,121,2,32,3,57,137,13,34,37,0,99,108,101,
1,110,3,57,137,49,55,124,0,99,108,101,97,114,1,110,3,57,137,49,55,145,0,109,2,101,110,116,3,57,
137,65,0,115,8,2,17,65,3,57,137,88,0,115,117,114,112,3,57,137,88,6,131,48,0,115,117,114,112,5,
5,3,57,137,88,6,151,48,0,115,117,2,97,108,3,57,137,90,137,0,97,114,121,5,3,2,32,3,57,137,
143,34,37,0,4,1,103,2,97,108,32,3,58,0,1,103,2,105,0,97,8,103,3,58,121,0,97,1,103,21,
2,103,101,3,58,124,0,4,97,1,115,2,100,101,3,58,141,0,97,1,115,2,115,0,97,103,1,115,3,58,
141,75,0,4,1,98,2,100,100,104,3,117,0,1,98,2,115,104,0,1,98,2,116,99,104,0,1,99,2,115,
104,0,1,112,2,115,104,0,1,112,2,115,115,0,8,102,2,108,17,67,0,4,108,1,98,2,114,3,117,55,
0,108,1,98,2,119,0,108,108,1,98,0,108,108,1,102,0,108,108,1,112,0,108,108,121,1,98,3,117,55,
124,0,4,108,1,99,105,10,2,116,32,3,118,0,108,1,102,10,2,32,0,1,116,116,101,108,2,99,101,3,
124,0,4,115,1,98,2,105,17,65,3,124,88,0,115,1,98,2,121,0,115,105,110,101,115,115,1,98,3,124,
88,50,13,89,0,4,3,129,0,1,102,2,108,99,114,0,1,108,2,99,107,0,2,103,117,17,67,0,2,108,
117,108,0,2,115,104,0,2,120,17,65,12,12,12,0,8,104,115,2,116,17,67,0,8,104,115,2,116,111,0,
99,117,108,3,129,49,57,117,55,0,108,5,8,1,102,10,2,32,3,129,55,0,108,108,121,5,8,1,102,10,
2,32,3,129,55,2,124,0,103,1,108,112,2,17,65,3,129,81,0,115,8,2,32,3,129,88,0,97,114,1,
103,2,100,3,130,0,4,1,18,66,2,32,3,137,0,1,102,2,106,105,0,1,104,99,2,17,67,17,65,0,
1,104,114,2,17,67,17,65,0,1,106,2,17,67,17,65,0,1,106,2,108,105,0,1,106,10,2,17,67,17,
65,0,1,108,2,17,67,17,65,0,1,108,2,97,0,1,108,2,98,114,105,0,1,110,2,99,108,0,1,114,
2,17,67,17,65,0,1,114,2,97,17,67,12,0,1,114,2,105,0,1,114,2,116,104,0,1,115,2,17,67,
17,65,0,1,115,2,105,0,1,119,2,17,67,17,65,0,1,119,2,99,104,17,65,0,2,17,67,117,32,0,
2,32,24,0,2,108,121,0,5,3,1,18,73,2,97,0,5,3,1,18,73,2,105,0,5,3,1,98,2,100,
100,104,0,5,3,1,100,2,17,67,17,65,0,5,3,1,100,2,116,121,0,5,3,1,110,2,17,67,17,65,
0,5,3,1,116,2,17,67,17,65,12,0,8,2,108,17,65,0,8,108,2,97,0,8,108,2,99,0,8,108,
2,116,104,101,114,0,104,2,17,67,0,97,114,121,1,114,2,32,3,137,34,37,0,99,108,101,5,3,1,110,
3,137,49,55,124,0,99,108,101,97,114,5,3,1,110,3,137,49,55,145,0,98,117,110,116,117,3,137,71,6,
137,50,108,137,0,99,99,2,105,3,137,76,0,103,2,101,114,32,3,137,81,0,97,114,121,5,3,1,114,2,
32,3,137,143,34,37,0,121,3,140,0,111,121,3,142,0,111,114,1,108,102,3,146,0,7,6,118,0,2,118,
3,0,4,3,84,0,8,2,108,97,0,105,98,114,97,8,2,116,3,84,2,140,71,34,141,0,105,98,114,97,
5,3,8,2,116,3,84,6,140,71,34,141,0,105,100,101,2,111,103,114,3,84,124,72,113,0,105,100,101,111,
3,84,124,72,113,2,139,0,105,118,105,2,21,3,84,124,84,124,0,105,118,2,32,3,84,140,84,0,97,1,
21,2,108,101,110,3,84,141,0,101,104,101,109,8,3,84,144,65,0,105,108,108,101,1,115,10,2,32,14,128,
128,134,3,88,84,124,55,0,7,6,119,0,4,1,109,2,105,99,104,32,3,0,4,1,115,17,65,2,105,99,
107,3,0,2,119,3,0,101,1,17,67,2,32,3,8,58,124,0,4,114,3,34,0,114,8,2,17,71,0,4,
3,58,0,104,0,104,8,2,17,71,0,4,105,116,104,2,17,65,3,58,2,124,86,0,105,116,104,2,17,67,
0,101,115,116,1,17,67,3,58,6,122,89,47,0,105,116,104,1,101,2,32,3,58,6,124,86,0,101,114,101,
8,2,14,128,132,132,3,58,6,143,23,0,1,17,67,2,32,3,58,13,0,111,111,100,1,10,2,32,14,128,
128,132,3,58,117,72,0,105,107,105,3,58,124,49,37,0,4,105,110,103,1,17,66,2,32,3,58,124,68,0,
105,110,103,1,17,66,2,115,32,0,104,105,99,104,3,58,124,76,0,105,116,104,2,101,3,58,124,86,0,104,
97,116,3,58,128,47,0,4,111,114,1,115,115,2,100,3,58,131,0,111,114,2,116,104,32,0,111,114,107,1,
10,2,32,14,128,128,132,3,58,131,49,0,101,2,119,3,58,132,0,105,115,101,1,21,2,32,14,128,128,132,
3,58,140,88,0,97,121,1,69,2,32,14,128,128,131,3,58,141,0,97,121,115,1,69,2,32,14,128,128,132,
3,58,141,88,0,104,101,114,101,3,58,143,0,4,111,114,5,5,1,115,115,2,100,3,58,151,0,111,114,5,
5,2,116,104,32,0,104,2,111,108,3,107,0,4,104,111,2,32,3,107,137,0,104,111,2,100,0,104,111,2,
109,0,104,111,2,115,0,104,111,39,0,1,17,67,2,29,3,117,0,111,114,1,115,2,100,3,136,0,7,6,
120,0,1,117,101,2,32,3,0,4,97,115,2,32,3,8,49,89,13,89,0,117,115,2,32,0,105,115,2,32,
3,8,49,89,124,89,0,105,111,117,115,3,8,49,91,13,89,0,117,2,97,3,8,49,91,137,0,4,3,49,
89,0,120,0,117,114,101,2,32,3,49,91,2,146,0,105,111,2,110,3,49,91,13,0,1,117,108,2,117,114,
3,81,90,0,117,5,3,1,117,108,2,114,3,81,90,146,0,8,2,17,71,3,88,0,121,8,3,88,140,0,
4,1,99,2,32,3,122,49,89,0,1,116,2,32,0,7,6,121,0,1,10,2,32,24,3,2,37,0,111,117,
39,3,2,57,137,0,4,1,10,2,32,3,2,124,0,1,17,67,0,1,102,17,65,11,2,32,0,1,102,17,
67,2,32,0,1,104,2,112,111,99,114,0,4,2,17,67,105,99,32,3,6,124,0,2,17,67,105,99,97,108,
0,2,17,67,105,102,121,0,2,110,97,32,3,6,132,0,4,1,21,2,114,97,32,3,6,140,0,2,112,97,
108,0,115,105,115,1,10,2,32,3,8,13,89,124,89,0,1,107,115,10,2,32,3,8,37,0,4,1,17,67,
10,2,97,110,32,3,8,124,0,1,17,67,10,2,101,110,32,0,1,17,67,10,2,108,101,110,101,32,0,4,
1,45,2,45,3,13,0,114,2,32,0,4,1,17,66,11,2,32,24,14,128,144,129,3,37,0,1,107,17,67,
10,2,32,14,128,128,129,0,4,3,57,0,2,97,114,0,2,101,97,114,0,2,105,17,67,32,0,97,110,103,
3,57,6,35,68,0,39,8,2,17,67,14,128,132,130,3,57,13,0,101,115,8,3,57,122,89,0,101,97,104,
3,57,122,107,0,4,101,119,3,57,137,0,117,2,21,0,101,111,2,17,67,3,57,139,0,8,2,32,3,58,
140,0,1,17,67,2,97,98,108,3,113,0,114,105,110,103,1,115,3,113,34,124,50,75,0,4,1,17,66,11,
2,32,14,128,144,129,3,124,0,1,17,66,111,29,2,21,12,0,1,17,67,2,105,0,1,17,67,17,67,2,
110,32,0,1,17,67,21,2,103,101,110,0,1,17,67,21,2,109,17,65,110,32,0,1,99,2,108,105,110,0,
1,99,2,110,105,0,1,99,2,114,0,1,99,105,98,2,99,108,0,1,102,102,2,32,0,1,108,2,114,105,
0,1,108,102,2,110,0,1,108,103,2,99,101,114,0,1,108,103,2,112,104,0,1,112,2,114,97,0,1,112,
2,114,105,0,1,116,2,112,105,99,0,1,116,2,114,97,110,110,0,1,119,2,110,0,2,17,67,0,2,17,
67,17,67,0,2,17,67,32,0,2,115,116,0,5,35,1,100,2,110,97,115,0,8,2,17,67,21,0,8,115,
0,101,105,103,104,116,1,116,2,32,3,124,6,141,47,0,116,119,111,1,116,2,32,3,124,47,6,137,0,112,
111,99,114,105,1,104,2,116,3,124,48,13,49,34,124,0,120,1,17,67,2,32,3,124,49,89,0,110,99,104,
1,115,3,124,50,49,0,111,110,101,1,116,2,32,3,124,58,6,128,50,0,102,111,117,114,1,116,2,32,3,
124,83,6,136,0,102,105,118,101,1,116,2,32,3,124,83,6,140,84,0,115,1,104,112,2,105,3,124,88,0,
115,101,118,101,110,1,116,2,32,3,124,89,6,122,84,13,50,0,115,101,1,100,2,110,3,124,89,13,0,4,
8,2,110,21,3,129,0,8,2,115,21,0,4,1,17,67,21,2,17,66,101,13,3,140,0,1,17,67,29,0,
1,98,101,114,101,2,32,0,1,98,114,97,101,2,32,0,1,99,2,99,108,0,1,99,2,99,108,105,99,32,
0,1,102,2,32,0,1,102,115,2,32,0,1,104,2,17,67,114,0,1,104,116,2,108,32,0,1,107,2,108,
32,0,1,108,101,98,2,32,0,1,108,102,0,1,110,2,108,32,0,1,110,101,100,2,32,0,1,112,2,116,
104,0,1,116,2,108,32,0,1,116,2,112,32,0,1,116,2,112,105,115,116,0,1,116,115,2,114,101,0,2,
17,66,101,13,0,2,32,0,2,101,114,32,0,2,108,117,109,0,2,116,104,101,32,0,8,17,67,0,8,17,
67,2,17,67,101,0,8,17,67,2,112,104,0,8,17,67,115,0,8,98,2,12,0,101,2,32,0,116,101,2,
32,3,140,47,0,110,97,109,1,100,3,140,50,35,65,0,4,101,115,1,17,67,2,32,3,140,88,0,115,101,
2,32,12,0,4,115,101,100,2,32,3,140,88,72,0,122,101,100,2,32,0,115,105,110,103,2,32,3,140,88,
113,68,0,104,114,3,144,0,114,101,2,32,3,148,0,7,6,122,0,2,122,3,0,117,2,32,3,8,88,137,
0,1,110,2,32,24,3,47,89,0,4,3,88,0,8,2,108,111,116,0,8,2,119,17,71,0,115,8,2,17,
71,0,97,108,101,115,1,21,2,32,3,88,6,121,55,13,89,0,117,101,3,88,58,6,141,0,101,115,2,32,
3,88,113,88,0,111,2,111,108,111,3,88,137,0,101,105,3,88,140,0,4,104,3,90,0,104,8,2,17,71,
0,117,114,101,3,90,114,0,7,6,206,0,4,172,3,6,35,55,83,13,10,0,177,0,4,173,3,6,122,48,
89,124,55,126,50,10,0,181,0,4,174,3,6,132,47,13,10,0,183,0,191,3,6,139,65,124,49,34,126,50,
10,0,186,3,49,6,35,48,13,10,0,190,3,49,89,6,140,10,0,189,3,50,6,57,137,10,0,187,3,55,
6,35,65,72,13,10,0,188,3,65,6,57,137,10,0,178,3,71,6,132,47,13,10,0,178,5,3,3,71,6,
141,47,13,10,0,180,3,72,6,122,55,47,13,10,0,179,3,81,6,35,65,13,10,0,184,3,87,6,132,47,
13,10,0,182,3,88,6,132,47,13,10,0,4,175,3,140,6,139,47,13,10,0,185,0,7,6,207,0,4,133,
3,6,117,48,89,124,55,126,50,10,0,141,0,140,3,6,139,65,124,49,34,126,50,10,0,4,137,3,6,139,
65,124,81,13,10,0,142,0,129,3,34,6,139,10,0,132,3,47,6,138,10,0,128,3,48,6,140,10,0,136,
3,48,89,6,140,10,0,135,3,76,6,140,10,0,134,3,83,6,140,10,0,4,130,3,89,6,124,81,65,13,
10,0,131,0,137,5,3,3,139,65,6,141,81,13,10,0,7,6,0,4,33,2,33,3,0,4,39,3,0,4,
46,1,46,3,0,58,1,32,15,2,32,15,15,32,3,0,195,169,8,3,2,124,0,195,161,2,29,3,6,121,
0,195,179,2,110,3,6,126,0,4,195,169,2,17,67,17,65,32,3,6,141,0,195,169,2,29,0,46,2,46,
3,9,0,33,3,9,122,49,89,49,55,13,65,141,91,13,50,9,0,45,8,2,32,15,3,10,0,202,187,8,
2,17,65,3,19,0,195,177,3,21,101,115,0,195,160,3,35,0,58,3,49,139,55,13,50,0,33,61,3,50,
126,47,132,49,58,118,88,0,60,61,3,55,122,89,135,132,49,58,118,0,45,8,32,2,32,15,3,65,140,50,
13,89,0,45,1,32,15,2,32,15,3,72,35,91,0,46,3,72,126,47,0,36,3,72,126,55,114,0,196,141,
3,76,0,62,61,3,81,34,141,47,13,135,132,49,58,118,0,195,176,3,86,0,195,190,3,87,0,4,195,159,
3,89,0,195,167,0,197,190,3,90,0,4,197,159,3,91,0,197,161,0,4,195,164,3,122,0,195,171,0,195,
170,3,122,12,0,4,195,182,3,131,0,195,182,114,0,4,195,169,101,3,132,0,195,175,0,4,195,187,3,137,
0,195,188,0,195,169,3,141,0,7,0];
var en_us=[47,47,32,109,111,118,105,110,103,32,116,111,119,97,114,100,115,32,85,83,32,69,110,103,108,105,115,104,13,10,
110,97,109,101,32,101,110,103,108,105,115,104,45,117,115,13,10,108,97,110,103,117,97,103,101,32,101,110,45,117,
115,32,50,13,10,108,97,110,103,117,97,103,101,32,101,110,45,114,13,10,108,97,110,103,117,97,103,101,32,101,
110,32,51,13,10,103,101,110,100,101,114,32,109,97,108,101,13,10,13,10,112,104,111,110,101,109,101,115,32,101,
110,45,117,115,13,10,100,105,99,116,114,117,108,101,115,32,51,32,54,13,10,111,112,116,105,111,110,32,114,101,
100,117,99,101,95,116,32,49,13,10,13,10,115,116,114,101,115,115,76,101,110,103,116,104,32,49,52,48,32,49,
50,48,32,49,57,48,32,49,55,48,32,48,32,48,32,50,53,53,32,51,48,48,13,10,115,116,114,101,115,115,
65,109,112,32,32,49,55,32,49,54,32,32,49,57,32,49,57,32,32,49,57,32,49,57,32,32,50,49,32,49,
57,13,10,13,10,114,101,112,108,97,99,101,32,48,51,32,73,32,32,105,13,10,114,101];
// Note: For maximum-speed code, see "Optimizing Code" on the Emscripten wiki, https://github.com/kripken/emscripten/wiki/Optimizing-Code
// Note: Some Emscripten settings may limit the speed of the generated code.
// The Module object: Our interface to the outside world. We import
// and export values on it, and do the work to get that through
// closure compiler if necessary. There are various ways Module can be used:
// 1. Not defined. We create it here
// 2. A function parameter, function(Module) { ..generated code.. }
// 3. pre-run appended it, var Module = {}; ..generated code..
// 4. External script tag defines var Module.
// We need to do an eval in order to handle the closure compiler
// case, where this code here is minified but Module was defined
// elsewhere (e.g. case 4 above). We also need to check if Module
// already exists (e.g. case 3 above).
// Note that if you want to run closure, and also to use Module
// after the generated code, you will need to define   var Module = {};
// before the code. Then that object will be used in the code, and you
// can continue to use Module afterwards as well.
var Module;
if (!Module) Module = eval('(function() { try { return Module || {} } catch(e) { return {} } })()');
// Sometimes an existing Module object exists with properties
// meant to overwrite the default module functionality. Here
// we collect those properties and reapply _after_ we configure
// the current environment's defaults to avoid having to be so
// defensive during initialization.
var moduleOverrides = {};
for (var key in Module) {
  if (Module.hasOwnProperty(key)) {
    moduleOverrides[key] = Module[key];
  }
}
// The environment setup code below is customized to use Module.
// *** Environment setup code ***
var ENVIRONMENT_IS_NODE = typeof process === 'object' && typeof require === 'function';
var ENVIRONMENT_IS_WEB = typeof window === 'object';
var ENVIRONMENT_IS_WORKER = typeof importScripts === 'function';
var ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;
if (ENVIRONMENT_IS_NODE) {
  // Expose functionality in the same simple way that the shells work
  // Note that we pollute the global namespace here, otherwise we break in node
  Module['print'] = function print(x) {
    process['stdout'].write(x + '\n');
  };
  Module['printErr'] = function printErr(x) {
    process['stderr'].write(x + '\n');
  };
  var nodeFS = require('fs');
  var nodePath = require('path');
  Module['read'] = function read(filename, binary) {
    filename = nodePath['normalize'](filename);
    var ret = nodeFS['readFileSync'](filename);
    // The path is absolute if the normalized version is the same as the resolved.
    if (!ret && filename != nodePath['resolve'](filename)) {
      filename = path.join(__dirname, '..', 'src', filename);
      ret = nodeFS['readFileSync'](filename);
    }
    if (ret && !binary) ret = ret.toString();
    return ret;
  };
  Module['readBinary'] = function readBinary(filename) { return Module['read'](filename, true) };
  Module['load'] = function load(f) {
    globalEval(read(f));
  };
  Module['arguments'] = process['argv'].slice(2);
  module['exports'] = Module;
}
else if (ENVIRONMENT_IS_SHELL) {
  Module['print'] = print;
  if (typeof printErr != 'undefined') Module['printErr'] = printErr; // not present in v8 or older sm
  if (typeof read != 'undefined') {
    Module['read'] = read;
  } else {
    Module['read'] = function read() { throw 'no read() available (jsc?)' };
  }
  Module['readBinary'] = function readBinary(f) {
    return read(f, 'binary');
  };
  if (typeof scriptArgs != 'undefined') {
    Module['arguments'] = scriptArgs;
  } else if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }
  this['Module'] = Module;
  eval("if (typeof gc === 'function' && gc.toString().indexOf('[native code]') > 0) var gc = undefined"); // wipe out the SpiderMonkey shell 'gc' function, which can confuse closure (uses it as a minified name, and it is then initted to a non-falsey value unexpectedly)
}
else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {
  Module['read'] = function read(url) {
    var xhr = new XMLHttpRequest();
    xhr.open('GET', url, false);
    xhr.send(null);
    return xhr.responseText;
  };
  if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }
  if (typeof console !== 'undefined') {
    Module['print'] = function print(x) {
      console.log(x);
    };
    Module['printErr'] = function printErr(x) {
      console.log(x);
    };
  } else {
    // Probably a worker, and without console.log. We can do very little here...
    var TRY_USE_DUMP = false;
    Module['print'] = (TRY_USE_DUMP && (typeof(dump) !== "undefined") ? (function(x) {
      dump(x);
    }) : (function(x) {
      // self.postMessage(x); // enable this if you want stdout to be sent as messages
    }));
  }
  if (ENVIRONMENT_IS_WEB) {
    this['Module'] = Module;
  } else {
    Module['load'] = importScripts;
  }
}
else {
  // Unreachable because SHELL is dependant on the others
  throw 'Unknown runtime environment. Where are we?';
}
function globalEval(x) {
  eval.call(null, x);
}
if (!Module['load'] == 'undefined' && Module['read']) {
  Module['load'] = function load(f) {
    globalEval(Module['read'](f));
  };
}
if (!Module['print']) {
  Module['print'] = function(){};
}
if (!Module['printErr']) {
  Module['printErr'] = Module['print'];
}
if (!Module['arguments']) {
  Module['arguments'] = [];
}
// *** Environment setup code ***
// Closure helpers
Module.print = Module['print'];
Module.printErr = Module['printErr'];
// Callbacks
Module['preRun'] = [];
Module['postRun'] = [];
// Merge back in the overrides
for (var key in moduleOverrides) {
  if (moduleOverrides.hasOwnProperty(key)) {
    Module[key] = moduleOverrides[key];
  }
}
// === Auto-generated preamble library stuff ===
//========================================
// Runtime code shared with compiler
//========================================
var Runtime = {
  stackSave: function () {
    return STACKTOP;
  },
  stackRestore: function (stackTop) {
    STACKTOP = stackTop;
  },
  forceAlign: function (target, quantum) {
    quantum = quantum || 4;
    if (quantum == 1) return target;
    if (isNumber(target) && isNumber(quantum)) {
      return Math.ceil(target/quantum)*quantum;
    } else if (isNumber(quantum) && isPowerOfTwo(quantum)) {
      return '(((' +target + ')+' + (quantum-1) + ')&' + -quantum + ')';
    }
    return 'Math.ceil((' + target + ')/' + quantum + ')*' + quantum;
  },
  isNumberType: function (type) {
    return type in Runtime.INT_TYPES || type in Runtime.FLOAT_TYPES;
  },
  isPointerType: function isPointerType(type) {
  return type[type.length-1] == '*';
},
  isStructType: function isStructType(type) {
  if (isPointerType(type)) return false;
  if (isArrayType(type)) return true;
  if (/<?{ ?[^}]* ?}>?/.test(type)) return true; // { i32, i8 } etc. - anonymous struct types
  // See comment in isStructPointerType()
  return type[0] == '%';
},
  INT_TYPES: {"i1":0,"i8":0,"i16":0,"i32":0,"i64":0},
  FLOAT_TYPES: {"float":0,"double":0},
  or64: function (x, y) {
    var l = (x | 0) | (y | 0);
    var h = (Math.round(x / 4294967296) | Math.round(y / 4294967296)) * 4294967296;
    return l + h;
  },
  and64: function (x, y) {
    var l = (x | 0) & (y | 0);
    var h = (Math.round(x / 4294967296) & Math.round(y / 4294967296)) * 4294967296;
    return l + h;
  },
  xor64: function (x, y) {
    var l = (x | 0) ^ (y | 0);
    var h = (Math.round(x / 4294967296) ^ Math.round(y / 4294967296)) * 4294967296;
    return l + h;
  },
  getNativeTypeSize: function (type) {
    switch (type) {
      case 'i1': case 'i8': return 1;
      case 'i16': return 2;
      case 'i32': return 4;
      case 'i64': return 8;
      case 'float': return 4;
      case 'double': return 8;
      default: {
        if (type[type.length-1] === '*') {
          return Runtime.QUANTUM_SIZE; // A pointer
        } else if (type[0] === 'i') {
          var bits = parseInt(type.substr(1));
          assert(bits % 8 === 0);
          return bits/8;
        } else {
          return 0;
        }
      }
    }
  },
  getNativeFieldSize: function (type) {
    return Math.max(Runtime.getNativeTypeSize(type), Runtime.QUANTUM_SIZE);
  },
  dedup: function dedup(items, ident) {
  var seen = {};
  if (ident) {
    return items.filter(function(item) {
      if (seen[item[ident]]) return false;
      seen[item[ident]] = true;
      return true;
    });
  } else {
    return items.filter(function(item) {
      if (seen[item]) return false;
      seen[item] = true;
      return true;
    });
  }
},
  set: function set() {
  var args = typeof arguments[0] === 'object' ? arguments[0] : arguments;
  var ret = {};
  for (var i = 0; i < args.length; i++) {
    ret[args[i]] = 0;
  }
  return ret;
},
  STACK_ALIGN: 8,
  getAlignSize: function (type, size, vararg) {
    // we align i64s and doubles on 64-bit boundaries, unlike x86
    if (vararg) return 8;
    if (!vararg && (type == 'i64' || type == 'double')) return 8;
    if (!type) return Math.min(size, 8); // align structures internally to 64 bits
    return Math.min(size || (type ? Runtime.getNativeFieldSize(type) : 0), Runtime.QUANTUM_SIZE);
  },
  calculateStructAlignment: function calculateStructAlignment(type) {
    type.flatSize = 0;
    type.alignSize = 0;
    var diffs = [];
    var prev = -1;
    var index = 0;
    type.flatIndexes = type.fields.map(function(field) {
      index++;
      var size, alignSize;
      if (Runtime.isNumberType(field) || Runtime.isPointerType(field)) {
        size = Runtime.getNativeTypeSize(field); // pack char; char; in structs, also char[X]s.
        alignSize = Runtime.getAlignSize(field, size);
      } else if (Runtime.isStructType(field)) {
        if (field[1] === '0') {
          // this is [0 x something]. When inside another structure like here, it must be at the end,
          // and it adds no size
          // XXX this happens in java-nbody for example... assert(index === type.fields.length, 'zero-length in the middle!');
          size = 0;
          if (Types.types[field]) {
            alignSize = Runtime.getAlignSize(null, Types.types[field].alignSize);
          } else {
            alignSize = type.alignSize || QUANTUM_SIZE;
          }
        } else {
          size = Types.types[field].flatSize;
          alignSize = Runtime.getAlignSize(null, Types.types[field].alignSize);
        }
      } else if (field[0] == 'b') {
        // bN, large number field, like a [N x i8]
        size = field.substr(1)|0;
        alignSize = 1;
      } else if (field[0] === '<') {
        // vector type
        size = alignSize = Types.types[field].flatSize; // fully aligned
      } else if (field[0] === 'i') {
        // illegal integer field, that could not be legalized because it is an internal structure field
        // it is ok to have such fields, if we just use them as markers of field size and nothing more complex
        size = alignSize = parseInt(field.substr(1))/8;
        assert(size % 1 === 0, 'cannot handle non-byte-size field ' + field);
      } else {
        assert(false, 'invalid type for calculateStructAlignment');
      }
      if (type.packed) alignSize = 1;
      type.alignSize = Math.max(type.alignSize, alignSize);
      var curr = Runtime.alignMemory(type.flatSize, alignSize); // if necessary, place this on aligned memory
      type.flatSize = curr + size;
      if (prev >= 0) {
        diffs.push(curr-prev);
      }
      prev = curr;
      return curr;
    });
    if (type.name_ && type.name_[0] === '[') {
      // arrays have 2 elements, so we get the proper difference. then we scale here. that way we avoid
      // allocating a potentially huge array for [999999 x i8] etc.
      type.flatSize = parseInt(type.name_.substr(1))*type.flatSize/2;
    }
    type.flatSize = Runtime.alignMemory(type.flatSize, type.alignSize);
    if (diffs.length == 0) {
      type.flatFactor = type.flatSize;
    } else if (Runtime.dedup(diffs).length == 1) {
      type.flatFactor = diffs[0];
    }
    type.needsFlattening = (type.flatFactor != 1);
    return type.flatIndexes;
  },
  generateStructInfo: function (struct, typeName, offset) {
    var type, alignment;
    if (typeName) {
      offset = offset || 0;
      type = (typeof Types === 'undefined' ? Runtime.typeInfo : Types.types)[typeName];
      if (!type) return null;
      if (type.fields.length != struct.length) {
        printErr('Number of named fields must match the type for ' + typeName + ': possibly duplicate struct names. Cannot return structInfo');
        return null;
      }
      alignment = type.flatIndexes;
    } else {
      var type = { fields: struct.map(function(item) { return item[0] }) };
      alignment = Runtime.calculateStructAlignment(type);
    }
    var ret = {
      __size__: type.flatSize
    };
    if (typeName) {
      struct.forEach(function(item, i) {
        if (typeof item === 'string') {
          ret[item] = alignment[i] + offset;
        } else {
          // embedded struct
          var key;
          for (var k in item) key = k;
          ret[key] = Runtime.generateStructInfo(item[key], type.fields[i], alignment[i]);
        }
      });
    } else {
      struct.forEach(function(item, i) {
        ret[item[1]] = alignment[i];
      });
    }
    return ret;
  },
  dynCall: function (sig, ptr, args) {
    if (args && args.length) {
      if (!args.splice) args = Array.prototype.slice.call(args);
      args.splice(0, 0, ptr);
      return Module['dynCall_' + sig].apply(null, args);
    } else {
      return Module['dynCall_' + sig].call(null, ptr);
    }
  },
  functionPointers: [],
  addFunction: function (func) {
    for (var i = 0; i < Runtime.functionPointers.length; i++) {
      if (!Runtime.functionPointers[i]) {
        Runtime.functionPointers[i] = func;
        return 2*(1 + i);
      }
    }
    throw 'Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.';
  },
  removeFunction: function (index) {
    Runtime.functionPointers[(index-2)/2] = null;
  },
  getAsmConst: function (code, numArgs) {
    // code is a constant string on the heap, so we can cache these
    if (!Runtime.asmConstCache) Runtime.asmConstCache = {};
    var func = Runtime.asmConstCache[code];
    if (func) return func;
    var args = [];
    for (var i = 0; i < numArgs; i++) {
      args.push(String.fromCharCode(36) + i); // $0, $1 etc
    }
    return Runtime.asmConstCache[code] = eval('(function(' + args.join(',') + '){ ' + Pointer_stringify(code) + ' })'); // new Function does not allow upvars in node
  },
  warnOnce: function (text) {
    if (!Runtime.warnOnce.shown) Runtime.warnOnce.shown = {};
    if (!Runtime.warnOnce.shown[text]) {
      Runtime.warnOnce.shown[text] = 1;
      Module.printErr(text);
    }
  },
  funcWrappers: {},
  getFuncWrapper: function (func, sig) {
    assert(sig);
    if (!Runtime.funcWrappers[func]) {
      Runtime.funcWrappers[func] = function dynCall_wrapper() {
        return Runtime.dynCall(sig, func, arguments);
      };
    }
    return Runtime.funcWrappers[func];
  },
  UTF8Processor: function () {
    var buffer = [];
    var needed = 0;
    this.processCChar = function (code) {
      code = code & 0xFF;
      if (buffer.length == 0) {
        if ((code & 0x80) == 0x00) {        // 0xxxxxxx
          return String.fromCharCode(code);
        }
        buffer.push(code);
        if ((code & 0xE0) == 0xC0) {        // 110xxxxx
          needed = 1;
        } else if ((code & 0xF0) == 0xE0) { // 1110xxxx
          needed = 2;
        } else {                            // 11110xxx
          needed = 3;
        }
        return '';
      }
      if (needed) {
        buffer.push(code);
        needed--;
        if (needed > 0) return '';
      }
      var c1 = buffer[0];
      var c2 = buffer[1];
      var c3 = buffer[2];
      var c4 = buffer[3];
      var ret;
      if (buffer.length == 2) {
        ret = String.fromCharCode(((c1 & 0x1F) << 6)  | (c2 & 0x3F));
      } else if (buffer.length == 3) {
        ret = String.fromCharCode(((c1 & 0x0F) << 12) | ((c2 & 0x3F) << 6)  | (c3 & 0x3F));
      } else {
        // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae
        var codePoint = ((c1 & 0x07) << 18) | ((c2 & 0x3F) << 12) |
                        ((c3 & 0x3F) << 6)  | (c4 & 0x3F);
        ret = String.fromCharCode(
          Math.floor((codePoint - 0x10000) / 0x400) + 0xD800,
          (codePoint - 0x10000) % 0x400 + 0xDC00);
      }
      buffer.length = 0;
      return ret;
    }
    this.processJSString = function processJSString(string) {
      string = unescape(encodeURIComponent(string));
      var ret = [];
      for (var i = 0; i < string.length; i++) {
        ret.push(string.charCodeAt(i));
      }
      return ret;
    }
  },
  stackAlloc: function (size) { var ret = STACKTOP;STACKTOP = (STACKTOP + size)|0;STACKTOP = (((STACKTOP)+7)&-8); return ret; },
  staticAlloc: function (size) { var ret = STATICTOP;STATICTOP = (STATICTOP + size)|0;STATICTOP = (((STATICTOP)+7)&-8); return ret; },
  dynamicAlloc: function (size) { var ret = DYNAMICTOP;DYNAMICTOP = (DYNAMICTOP + size)|0;DYNAMICTOP = (((DYNAMICTOP)+7)&-8); if (DYNAMICTOP >= TOTAL_MEMORY) enlargeMemory();; return ret; },
  alignMemory: function (size,quantum) { var ret = size = Math.ceil((size)/(quantum ? quantum : 8))*(quantum ? quantum : 8); return ret; },
  makeBigInt: function (low,high,unsigned) { var ret = (unsigned ? ((+((low>>>0)))+((+((high>>>0)))*(+4294967296))) : ((+((low>>>0)))+((+((high|0)))*(+4294967296)))); return ret; },
  GLOBAL_BASE: 8,
  QUANTUM_SIZE: 4,
  __dummy__: 0
}
//========================================
// Runtime essentials
//========================================
var __THREW__ = 0; // Used in checking for thrown exceptions.
var ABORT = false; // whether we are quitting the application. no code should run after this. set in exit() and abort()
var EXITSTATUS = 0;
var undef = 0;
// tempInt is used for 32-bit signed values or smaller. tempBigInt is used
// for 32-bit unsigned values or more than 32 bits. TODO: audit all uses of tempInt
var tempValue, tempInt, tempBigInt, tempInt2, tempBigInt2, tempPair, tempBigIntI, tempBigIntR, tempBigIntS, tempBigIntP, tempBigIntD, tempDouble, tempFloat;
var tempI64, tempI64b;
var tempRet0, tempRet1, tempRet2, tempRet3, tempRet4, tempRet5, tempRet6, tempRet7, tempRet8, tempRet9;
function assert(condition, text) {
  if (!condition) {
    abort('Assertion failed: ' + text);
  }
}
var globalScope = this;
// C calling interface. A convenient way to call C functions (in C files, or
// defined with extern "C").
//
// Note: LLVM optimizations can inline and remove functions, after which you will not be
//       able to call them. Closure can also do so. To avoid that, add your function to
//       the exports using something like
//
//         -s EXPORTED_FUNCTIONS='["_main", "_myfunc"]'
//
// @param ident      The name of the C function (note that C++ functions will be name-mangled - use extern "C")
// @param returnType The return type of the function, one of the JS types 'number', 'string' or 'array' (use 'number' for any C pointer, and
//                   'array' for JavaScript arrays and typed arrays; note that arrays are 8-bit).
// @param argTypes   An array of the types of arguments for the function (if there are no arguments, this can be ommitted). Types are as in returnType,
//                   except that 'array' is not possible (there is no way for us to know the length of the array)
// @param args       An array of the arguments to the function, as native JS values (as in returnType)
//                   Note that string arguments will be stored on the stack (the JS string will become a C string on the stack).
// @return           The return value, as a native JS value (as in returnType)
function ccall(ident, returnType, argTypes, args) {
  return ccallFunc(getCFunc(ident), returnType, argTypes, args);
}
Module["ccall"] = ccall;
// Returns the C function with a specified identifier (for C++, you need to do manual name mangling)
function getCFunc(ident) {
  try {
    var func = Module['_' + ident]; // closure exported function
    if (!func) func = eval('_' + ident); // explicit lookup
  } catch(e) {
  }
  assert(func, 'Cannot call unknown function ' + ident + ' (perhaps LLVM optimizations or closure removed it?)');
  return func;
}
// Internal function that does a C call using a function, not an identifier
function ccallFunc(func, returnType, argTypes, args) {
  var stack = 0;
  function toC(value, type) {
    if (type == 'string') {
      if (value === null || value === undefined || value === 0) return 0; // null string
      value = intArrayFromString(value);
      type = 'array';
    }
    if (type == 'array') {
      if (!stack) stack = Runtime.stackSave();
      var ret = Runtime.stackAlloc(value.length);
      writeArrayToMemory(value, ret);
      return ret;
    }
    return value;
  }
  function fromC(value, type) {
    if (type == 'string') {
      return Pointer_stringify(value);
    }
    assert(type != 'array');
    return value;
  }
  var i = 0;
  var cArgs = args ? args.map(function(arg) {
    return toC(arg, argTypes[i++]);
  }) : [];
  var ret = fromC(func.apply(null, cArgs), returnType);
  if (stack) Runtime.stackRestore(stack);
  return ret;
}
// Returns a native JS wrapper for a C function. This is similar to ccall, but
// returns a function you can call repeatedly in a normal way. For example:
//
//   var my_function = cwrap('my_c_function', 'number', ['number', 'number']);
//   alert(my_function(5, 22));
//   alert(my_function(99, 12));
//
function cwrap(ident, returnType, argTypes) {
  var func = getCFunc(ident);
  return function() {
    return ccallFunc(func, returnType, argTypes, Array.prototype.slice.call(arguments));
  }
}
Module["cwrap"] = cwrap;
// Sets a value in memory in a dynamic way at run-time. Uses the
// type data. This is the same as makeSetValue, except that
// makeSetValue is done at compile-time and generates the needed
// code then, whereas this function picks the right code at
// run-time.
// Note that setValue and getValue only do *aligned* writes and reads!
// Note that ccall uses JS types as for defining types, while setValue and
// getValue need LLVM types ('i8', 'i32') - this is a lower-level operation
function setValue(ptr, value, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': HEAP8[(ptr)]=value; break;
      case 'i8': HEAP8[(ptr)]=value; break;
      case 'i16': HEAP16[((ptr)>>1)]=value; break;
      case 'i32': HEAP32[((ptr)>>2)]=value; break;
      case 'i64': (tempI64 = [value>>>0,(tempDouble=value,(+(Math_abs(tempDouble))) >= (+1) ? (tempDouble > (+0) ? ((Math_min((+(Math_floor((tempDouble)/(+4294967296)))), (+4294967295)))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/(+4294967296))))))>>>0) : 0)],HEAP32[((ptr)>>2)]=tempI64[0],HEAP32[(((ptr)+(4))>>2)]=tempI64[1]); break;
      case 'float': HEAPF32[((ptr)>>2)]=value; break;
      case 'double': HEAPF64[((ptr)>>3)]=value; break;
      default: abort('invalid type for setValue: ' + type);
    }
}
Module['setValue'] = setValue;
// Parallel to setValue.
function getValue(ptr, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': return HEAP8[(ptr)];
      case 'i8': return HEAP8[(ptr)];
      case 'i16': return HEAP16[((ptr)>>1)];
      case 'i32': return HEAP32[((ptr)>>2)];
      case 'i64': return HEAP32[((ptr)>>2)];
      case 'float': return HEAPF32[((ptr)>>2)];
      case 'double': return HEAPF64[((ptr)>>3)];
      default: abort('invalid type for setValue: ' + type);
    }
  return null;
}
Module['getValue'] = getValue;
var ALLOC_NORMAL = 0; // Tries to use _malloc()
var ALLOC_STACK = 1; // Lives for the duration of the current function call
var ALLOC_STATIC = 2; // Cannot be freed
var ALLOC_DYNAMIC = 3; // Cannot be freed except through sbrk
var ALLOC_NONE = 4; // Do not allocate
Module['ALLOC_NORMAL'] = ALLOC_NORMAL;
Module['ALLOC_STACK'] = ALLOC_STACK;
Module['ALLOC_STATIC'] = ALLOC_STATIC;
Module['ALLOC_DYNAMIC'] = ALLOC_DYNAMIC;
Module['ALLOC_NONE'] = ALLOC_NONE;
// allocate(): This is for internal use. You can use it yourself as well, but the interface
//             is a little tricky (see docs right below). The reason is that it is optimized
//             for multiple syntaxes to save space in generated code. So you should
//             normally not use allocate(), and instead allocate memory using _malloc(),
//             initialize it with setValue(), and so forth.
// @slab: An array of data, or a number. If a number, then the size of the block to allocate,
//        in *bytes* (note that this is sometimes confusing: the next parameter does not
//        affect this!)
// @types: Either an array of types, one for each byte (or 0 if no type at that position),
//         or a single type which is used for the entire block. This only matters if there
//         is initial data - if @slab is a number, then this does not matter at all and is
//         ignored.
// @allocator: How to allocate memory, see ALLOC_*
function allocate(slab, types, allocator, ptr) {
  var zeroinit, size;
  if (typeof slab === 'number') {
    zeroinit = true;
    size = slab;
  } else {
    zeroinit = false;
    size = slab.length;
  }
  var singleType = typeof types === 'string' ? types : null;
  var ret;
  if (allocator == ALLOC_NONE) {
    ret = ptr;
  } else {
    ret = [_malloc, Runtime.stackAlloc, Runtime.staticAlloc, Runtime.dynamicAlloc][allocator === undefined ? ALLOC_STATIC : allocator](Math.max(size, singleType ? 1 : types.length));
  }
  if (zeroinit) {
    var ptr = ret, stop;
    assert((ret & 3) == 0);
    stop = ret + (size & ~3);
    for (; ptr < stop; ptr += 4) {
      HEAP32[((ptr)>>2)]=0;
    }
    stop = ret + size;
    while (ptr < stop) {
      HEAP8[((ptr++)|0)]=0;
    }
    return ret;
  }
  if (singleType === 'i8') {
    if (slab.subarray || slab.slice) {
      HEAPU8.set(slab, ret);
    } else {
      HEAPU8.set(new Uint8Array(slab), ret);
    }
    return ret;
  }
  var i = 0, type, typeSize, previousType;
  while (i < size) {
    var curr = slab[i];
    if (typeof curr === 'function') {
      curr = Runtime.getFunctionIndex(curr);
    }
    type = singleType || types[i];
    if (type === 0) {
      i++;
      continue;
    }
    if (type == 'i64') type = 'i32'; // special case: we have one i32 here, and one i32 later
    setValue(ret+i, curr, type);
    // no need to look up size unless type changes, so cache it
    if (previousType !== type) {
      typeSize = Runtime.getNativeTypeSize(type);
      previousType = type;
    }
    i += typeSize;
  }
  return ret;
}
Module['allocate'] = allocate;
function Pointer_stringify(ptr, /* optional */ length) {
  // TODO: use TextDecoder
  // Find the length, and check for UTF while doing so
  var hasUtf = false;
  var t;
  var i = 0;
  while (1) {
    t = HEAPU8[(((ptr)+(i))|0)];
    if (t >= 128) hasUtf = true;
    else if (t == 0 && !length) break;
    i++;
    if (length && i == length) break;
  }
  if (!length) length = i;
  var ret = '';
  if (!hasUtf) {
    var MAX_CHUNK = 1024; // split up into chunks, because .apply on a huge string can overflow the stack
    var curr;
    while (length > 0) {
      curr = String.fromCharCode.apply(String, HEAPU8.subarray(ptr, ptr + Math.min(length, MAX_CHUNK)));
      ret = ret ? ret + curr : curr;
      ptr += MAX_CHUNK;
      length -= MAX_CHUNK;
    }
    return ret;
  }
  var utf8 = new Runtime.UTF8Processor();
  for (i = 0; i < length; i++) {
    t = HEAPU8[(((ptr)+(i))|0)];
    ret += utf8.processCChar(t);
  }
  return ret;
}
Module['Pointer_stringify'] = Pointer_stringify;
// Given a pointer 'ptr' to a null-terminated UTF16LE-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.
function UTF16ToString(ptr) {
  var i = 0;
  var str = '';
  while (1) {
    var codeUnit = HEAP16[(((ptr)+(i*2))>>1)];
    if (codeUnit == 0)
      return str;
    ++i;
    // fromCharCode constructs a character from a UTF-16 code unit, so we can pass the UTF16 string right through.
    str += String.fromCharCode(codeUnit);
  }
}
Module['UTF16ToString'] = UTF16ToString;
// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF16LE form. The copy will require at most (str.length*2+1)*2 bytes of space in the HEAP.
function stringToUTF16(str, outPtr) {
  for(var i = 0; i < str.length; ++i) {
    // charCodeAt returns a UTF-16 encoded code unit, so it can be directly written to the HEAP.
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    HEAP16[(((outPtr)+(i*2))>>1)]=codeUnit;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP16[(((outPtr)+(str.length*2))>>1)]=0;
}
Module['stringToUTF16'] = stringToUTF16;
// Given a pointer 'ptr' to a null-terminated UTF32LE-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.
function UTF32ToString(ptr) {
  var i = 0;
  var str = '';
  while (1) {
    var utf32 = HEAP32[(((ptr)+(i*4))>>2)];
    if (utf32 == 0)
      return str;
    ++i;
    // Gotcha: fromCharCode constructs a character from a UTF-16 encoded code (pair), not from a Unicode code point! So encode the code point to UTF-16 for constructing.
    if (utf32 >= 0x10000) {
      var ch = utf32 - 0x10000;
      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
    } else {
      str += String.fromCharCode(utf32);
    }
  }
}
Module['UTF32ToString'] = UTF32ToString;
// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF32LE form. The copy will require at most (str.length+1)*4 bytes of space in the HEAP,
// but can use less, since str.length does not return the number of characters in the string, but the number of UTF-16 code units in the string.
function stringToUTF32(str, outPtr) {
  var iChar = 0;
  for(var iCodeUnit = 0; iCodeUnit < str.length; ++iCodeUnit) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    var codeUnit = str.charCodeAt(iCodeUnit); // possibly a lead surrogate
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) {
      var trailSurrogate = str.charCodeAt(++iCodeUnit);
      codeUnit = 0x10000 + ((codeUnit & 0x3FF) << 10) | (trailSurrogate & 0x3FF);
    }
    HEAP32[(((outPtr)+(iChar*4))>>2)]=codeUnit;
    ++iChar;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP32[(((outPtr)+(iChar*4))>>2)]=0;
}
Module['stringToUTF32'] = stringToUTF32;
function demangle(func) {
  try {
    // Special-case the entry point, since its name differs from other name mangling.
    if (func == 'Object._main' || func == '_main') {
      return 'main()';
    }
    if (typeof func === 'number') func = Pointer_stringify(func);
    if (func[0] !== '_') return func;
    if (func[1] !== '_') return func; // C function
    if (func[2] !== 'Z') return func;
    switch (func[3]) {
      case 'n': return 'operator new()';
      case 'd': return 'operator delete()';
    }
    var i = 3;
    // params, etc.
    var basicTypes = {
      'v': 'void',
      'b': 'bool',
      'c': 'char',
      's': 'short',
      'i': 'int',
      'l': 'long',
      'f': 'float',
      'd': 'double',
      'w': 'wchar_t',
      'a': 'signed char',
      'h': 'unsigned char',
      't': 'unsigned short',
      'j': 'unsigned int',
      'm': 'unsigned long',
      'x': 'long long',
      'y': 'unsigned long long',
      'z': '...'
    };
    function dump(x) {
      //return;
      if (x) Module.print(x);
      Module.print(func);
      var pre = '';
      for (var a = 0; a < i; a++) pre += ' ';
      Module.print (pre + '^');
    }
    var subs = [];
    function parseNested() {
      i++;
      if (func[i] === 'K') i++; // ignore const
      var parts = [];
      while (func[i] !== 'E') {
        if (func[i] === 'S') { // substitution
          i++;
          var next = func.indexOf('_', i);
          var num = func.substring(i, next) || 0;
          parts.push(subs[num] || '?');
          i = next+1;
          continue;
        }
        if (func[i] === 'C') { // constructor
          parts.push(parts[parts.length-1]);
          i += 2;
          continue;
        }
        var size = parseInt(func.substr(i));
        var pre = size.toString().length;
        if (!size || !pre) { i--; break; } // counter i++ below us
        var curr = func.substr(i + pre, size);
        parts.push(curr);
        subs.push(curr);
        i += pre + size;
      }
      i++; // skip E
      return parts;
    }
    var first = true;
    function parse(rawList, limit, allowVoid) { // main parser
      limit = limit || Infinity;
      var ret = '', list = [];
      function flushList() {
        return '(' + list.join(', ') + ')';
      }
      var name;
      if (func[i] === 'N') {
        // namespaced N-E
        name = parseNested().join('::');
        limit--;
        if (limit === 0) return rawList ? [name] : name;
      } else {
        // not namespaced
        if (func[i] === 'K' || (first && func[i] === 'L')) i++; // ignore const and first 'L'
        var size = parseInt(func.substr(i));
        if (size) {
          var pre = size.toString().length;
          name = func.substr(i + pre, size);
          i += pre + size;
        }
      }
      first = false;
      if (func[i] === 'I') {
        i++;
        var iList = parse(true);
        var iRet = parse(true, 1, true);
        ret += iRet[0] + ' ' + name + '<' + iList.join(', ') + '>';
      } else {
        ret = name;
      }
      paramLoop: while (i < func.length && limit-- > 0) {
        //dump('paramLoop');
        var c = func[i++];
        if (c in basicTypes) {
          list.push(basicTypes[c]);
        } else {
          switch (c) {
            case 'P': list.push(parse(true, 1, true)[0] + '*'); break; // pointer
            case 'R': list.push(parse(true, 1, true)[0] + '&'); break; // reference
            case 'L': { // literal
              i++; // skip basic type
              var end = func.indexOf('E', i);
              var size = end - i;
              list.push(func.substr(i, size));
              i += size + 2; // size + 'EE'
              break;
            }
            case 'A': { // array
              var size = parseInt(func.substr(i));
              i += size.toString().length;
              if (func[i] !== '_') throw '?';
              i++; // skip _
              list.push(parse(true, 1, true)[0] + ' [' + size + ']');
              break;
            }
            case 'E': break paramLoop;
            default: ret += '?' + c; break paramLoop;
          }
        }
      }
      if (!allowVoid && list.length === 1 && list[0] === 'void') list = []; // avoid (void)
      return rawList ? list : ret + flushList();
    }
    return parse();
  } catch(e) {
    return func;
  }
}
function demangleAll(text) {
  return text.replace(/__Z[\w\d_]+/g, function(x) { var y = demangle(x); return x === y ? x : (x + ' [' + y + ']') });
}
function stackTrace() {
  var stack = new Error().stack;
  return stack ? demangleAll(stack) : '(no stack trace available)'; // Stack trace is not available at least on IE10 and Safari 6.
}
// Memory management
var PAGE_SIZE = 4096;
function alignMemoryPage(x) {
  return (x+4095)&-4096;
}
var HEAP;
var HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;
var STATIC_BASE = 0, STATICTOP = 0, staticSealed = false; // static area
var STACK_BASE = 0, STACKTOP = 0, STACK_MAX = 0; // stack area
var DYNAMIC_BASE = 0, DYNAMICTOP = 0; // dynamic area handled by sbrk
function enlargeMemory() {
  abort('Cannot enlarge memory arrays in asm.js. Either (1) compile with -s TOTAL_MEMORY=X with X higher than the current value ' + TOTAL_MEMORY + ', or (2) set Module.TOTAL_MEMORY before the program runs.');
}
var TOTAL_STACK = Module['TOTAL_STACK'] || 5242880;
var TOTAL_MEMORY = Module['TOTAL_MEMORY'] || 16777216;
var FAST_MEMORY = Module['FAST_MEMORY'] || 2097152;
var totalMemory = 4096;
while (totalMemory < TOTAL_MEMORY || totalMemory < 2*TOTAL_STACK) {
  if (totalMemory < 16*1024*1024) {
    totalMemory *= 2;
  } else {
    totalMemory += 16*1024*1024
  }
}
if (totalMemory !== TOTAL_MEMORY) {
  Module.printErr('increasing TOTAL_MEMORY to ' + totalMemory + ' to be more reasonable');
  TOTAL_MEMORY = totalMemory;
}
// Initialize the runtime's memory
// check for full engine support (use string 'subarray' to avoid closure compiler confusion)
assert(typeof Int32Array !== 'undefined' && typeof Float64Array !== 'undefined' && !!(new Int32Array(1)['subarray']) && !!(new Int32Array(1)['set']),
       'Cannot fallback to non-typed array case: Code is too specialized');
var buffer = new ArrayBuffer(TOTAL_MEMORY);
HEAP8 = new Int8Array(buffer);
HEAP16 = new Int16Array(buffer);
HEAP32 = new Int32Array(buffer);
HEAPU8 = new Uint8Array(buffer);
HEAPU16 = new Uint16Array(buffer);
HEAPU32 = new Uint32Array(buffer);
HEAPF32 = new Float32Array(buffer);
HEAPF64 = new Float64Array(buffer);
// Endianness check (note: assumes compiler arch was little-endian)
HEAP32[0] = 255;
assert(HEAPU8[0] === 255 && HEAPU8[3] === 0, 'Typed arrays 2 must be run on a little-endian system');
Module['HEAP'] = HEAP;
Module['HEAP8'] = HEAP8;
Module['HEAP16'] = HEAP16;
Module['HEAP32'] = HEAP32;
Module['HEAPU8'] = HEAPU8;
Module['HEAPU16'] = HEAPU16;
Module['HEAPU32'] = HEAPU32;
Module['HEAPF32'] = HEAPF32;
Module['HEAPF64'] = HEAPF64;
function callRuntimeCallbacks(callbacks) {
  while(callbacks.length > 0) {
    var callback = callbacks.shift();
    if (typeof callback == 'function') {
      callback();
      continue;
    }
    var func = callback.func;
    if (typeof func === 'number') {
      if (callback.arg === undefined) {
        Runtime.dynCall('v', func);
      } else {
        Runtime.dynCall('vi', func, [callback.arg]);
      }
    } else {
      func(callback.arg === undefined ? null : callback.arg);
    }
  }
}
var __ATPRERUN__  = []; // functions called before the runtime is initialized
var __ATINIT__    = []; // functions called during startup
var __ATMAIN__    = []; // functions called when main() is to be run
var __ATEXIT__    = []; // functions called during shutdown
var __ATPOSTRUN__ = []; // functions called after the runtime has exited
var runtimeInitialized = false;
function preRun() {
  // compatibility - merge in anything from Module['preRun'] at this time
  if (Module['preRun']) {
    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];
    while (Module['preRun'].length) {
      addOnPreRun(Module['preRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPRERUN__);
}
function ensureInitRuntime() {
  if (runtimeInitialized) return;
  runtimeInitialized = true;
  callRuntimeCallbacks(__ATINIT__);
}
function preMain() {
  callRuntimeCallbacks(__ATMAIN__);
}
function exitRuntime() {
  callRuntimeCallbacks(__ATEXIT__);
}
function postRun() {
  // compatibility - merge in anything from Module['postRun'] at this time
  if (Module['postRun']) {
    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];
    while (Module['postRun'].length) {
      addOnPostRun(Module['postRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPOSTRUN__);
}
function addOnPreRun(cb) {
  __ATPRERUN__.unshift(cb);
}
Module['addOnPreRun'] = Module.addOnPreRun = addOnPreRun;
function addOnInit(cb) {
  __ATINIT__.unshift(cb);
}
Module['addOnInit'] = Module.addOnInit = addOnInit;
function addOnPreMain(cb) {
  __ATMAIN__.unshift(cb);
}
Module['addOnPreMain'] = Module.addOnPreMain = addOnPreMain;
function addOnExit(cb) {
  __ATEXIT__.unshift(cb);
}
Module['addOnExit'] = Module.addOnExit = addOnExit;
function addOnPostRun(cb) {
  __ATPOSTRUN__.unshift(cb);
}
Module['addOnPostRun'] = Module.addOnPostRun = addOnPostRun;
// Tools
// This processes a JS string into a C-line array of numbers, 0-terminated.
// For LLVM-originating strings, see parser.js:parseLLVMString function
function intArrayFromString(stringy, dontAddNull, length /* optional */) {
  var ret = (new Runtime.UTF8Processor()).processJSString(stringy);
  if (length) {
    ret.length = length;
  }
  if (!dontAddNull) {
    ret.push(0);
  }
  return ret;
}
Module['intArrayFromString'] = intArrayFromString;
function intArrayToString(array) {
  var ret = [];
  for (var i = 0; i < array.length; i++) {
    var chr = array[i];
    if (chr > 0xFF) {
      chr &= 0xFF;
    }
    ret.push(String.fromCharCode(chr));
  }
  return ret.join('');
}
Module['intArrayToString'] = intArrayToString;
// Write a Javascript array to somewhere in the heap
function writeStringToMemory(string, buffer, dontAddNull) {
  var array = intArrayFromString(string, dontAddNull);
  var i = 0;
  while (i < array.length) {
    var chr = array[i];
    HEAP8[(((buffer)+(i))|0)]=chr;
    i = i + 1;
  }
}
Module['writeStringToMemory'] = writeStringToMemory;
function writeArrayToMemory(array, buffer) {
  for (var i = 0; i < array.length; i++) {
    HEAP8[(((buffer)+(i))|0)]=array[i];
  }
}
Module['writeArrayToMemory'] = writeArrayToMemory;
function writeAsciiToMemory(str, buffer, dontAddNull) {
  for (var i = 0; i < str.length; i++) {
    HEAP8[(((buffer)+(i))|0)]=str.charCodeAt(i);
  }
  if (!dontAddNull) HEAP8[(((buffer)+(str.length))|0)]=0;
}
Module['writeAsciiToMemory'] = writeAsciiToMemory;
function unSign(value, bits, ignore, sig) {
  if (value >= 0) {
    return value;
  }
  return bits <= 32 ? 2*Math.abs(1 << (bits-1)) + value // Need some trickery, since if bits == 32, we are right at the limit of the bits JS uses in bitshifts
                    : Math.pow(2, bits)         + value;
}
function reSign(value, bits, ignore, sig) {
  if (value <= 0) {
    return value;
  }
  var half = bits <= 32 ? Math.abs(1 << (bits-1)) // abs is needed if bits == 32
                        : Math.pow(2, bits-1);
  if (value >= half && (bits <= 32 || value > half)) { // for huge values, we can hit the precision limit and always get true here. so don't do that
                                                       // but, in general there is no perfect solution here. With 64-bit ints, we get rounding and errors
                                                       // TODO: In i64 mode 1, resign the two parts separately and safely
    value = -2*half + value; // Cannot bitshift half, as it may be at the limit of the bits JS uses in bitshifts
  }
  return value;
}
// check for imul support, and also for correctness ( https://bugs.webkit.org/show_bug.cgi?id=126345 )
if (!Math['imul'] || Math['imul'](0xffffffff, 5) !== -5) Math['imul'] = function imul(a, b) {
  var ah  = a >>> 16;
  var al = a & 0xffff;
  var bh  = b >>> 16;
  var bl = b & 0xffff;
  return (al*bl + ((ah*bl + al*bh) << 16))|0;
};
Math.imul = Math['imul'];
var Math_abs = Math.abs;
var Math_cos = Math.cos;
var Math_sin = Math.sin;
var Math_tan = Math.tan;
var Math_acos = Math.acos;
var Math_asin = Math.asin;
var Math_atan = Math.atan;
var Math_atan2 = Math.atan2;
var Math_exp = Math.exp;
var Math_log = Math.log;
var Math_sqrt = Math.sqrt;
var Math_ceil = Math.ceil;
var Math_floor = Math.floor;
var Math_pow = Math.pow;
var Math_imul = Math.imul;
var Math_fround = Math.fround;
var Math_min = Math.min;
// A counter of dependencies for calling run(). If we need to
// do asynchronous work before running, increment this and
// decrement it. Incrementing must happen in a place like
// PRE_RUN_ADDITIONS (used by emcc to add file preloading).
// Note that you can add dependencies in preRun, even though
// it happens right before run - run will be postponed until
// the dependencies are met.
var runDependencies = 0;
var runDependencyWatcher = null;
var dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled
function addRunDependency(id) {
  runDependencies++;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
}
Module['addRunDependency'] = addRunDependency;
function removeRunDependency(id) {
  runDependencies--;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (runDependencies == 0) {
    if (runDependencyWatcher !== null) {
      clearInterval(runDependencyWatcher);
      runDependencyWatcher = null;
    }
    if (dependenciesFulfilled) {
      var callback = dependenciesFulfilled;
      dependenciesFulfilled = null;
      callback(); // can add another dependenciesFulfilled
    }
  }
}
Module['removeRunDependency'] = removeRunDependency;
Module["preloadedImages"] = {}; // maps url to image data
Module["preloadedAudios"] = {}; // maps url to audio data
var memoryInitializer = null;
// === Body ===
STATIC_BASE = 8;
STATICTOP = STATIC_BASE + 128320;
/* global initializers */ __ATINIT__.push({ func: function() { runPostSets() } });
var _stdout;
var _stdout=_stdout=allocate([0,0,0,0,0,0,0,0], "i8", ALLOC_STATIC);
var _stdin;
var _stdin=_stdin=allocate([0,0,0,0,0,0,0,0], "i8", ALLOC_STATIC);
var _stderr;
var _stderr=_stderr=allocate([0,0,0,0,0,0,0,0], "i8", ALLOC_STATIC);
var ___progname;
var _warnx;
/* memory initializer */ allocate([181,0,156,3,223,0,223,0,255,0,120,1,49,1,73,0,127,1,83,0,128,1,67,2,149,1,246,1,154,1,61,2,158,1,32,2,191,1,247,1,198,1,196,1,201,1,199,1,204,1,202,1,221,1,142,1,243,1,241,1,0,0,0,0,48,1,105,0,120,1,255,0,246,1,149,1,247,1,191,1,32,2,158,1,58,2,101,44,61,2,154,1,62,2,102,44,67,2,128,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,254,0,0,0,0,0,0,0,0,0,0,255,0,0,0,0,254,0,0,0,0,0,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,0,32,32,32,32,32,32,32,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,255,255,255,255,255,255,255,255,1,255,1,255,1,255,1,255,1,255,1,255,1,255,1,255,1,255,1,255,1,255,1,255,1,255,1,255,1,255,1,255,1,255,1,255,1,255,1,255,1,255,1,255,1,255,1,255,253,255,1,255,1,255,1,255,254,1,255,1,255,1,255,1,255,1,255,1,255,1,255,1,255,254,1,255,1,255,1,255,1,255,1,255,1,255,1,255,1,255,1,255,1,255,1,255,1,255,1,255,1,255,1,255,1,255,1,255,1,255,1,255,1,255,1,255,1,255,1,255,253,1,255,1,255,1,255,255,255,210,1,255,1,255,206,1,255,205,205,1,255,254,79,202,203,1,255,205,207,255,211,209,1,255,255,254,211,213,255,214,1,255,1,255,1,255,218,1,255,218,254,254,1,255,218,1,255,217,217,1,255,1,255,219,1,255,254,254,1,255,254,255,254,254,254,254,2,255,255,2,255,255,2,255,255,1,255,1,255,1,255,1,255,1,255,1,255,1,255,1,255,255,1,255,1,255,1,255,1,255,1,255,1,255,1,255,1,255,1,255,254,2,255,255,1,255,253,253,1,255,1,255,1,255,1,255,1,255,1,255,1,255,1,255,1,255,1,255,1,255,1,255,1,255,1,255,1,255,1,255,1,255,1,255,1,255,1,255,253,254,1,255,1,255,1,255,1,255,1,255,1,255,1,255,1,255,1,255,254,254,254,254,254,254,253,1,255,253,253,254,254,1,255,253,69,71,1,255,1,255,1,255,1,255,1,255,240,154,1,0,0,0,0,0,208,41,0,0,0,0,0,0,1,72,1,0,0,0,0,0,128,107,0,0,200,111,0,0,112,107,0,0,0,0,0,0,88,2,0,0,170,0,0,0,176,4,0,0,135,0,0,0,208,7,0,0,110,0,0,0,184,11,0,0,110,0,0,0,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,240,63,0,0,231,255,206,255,181,255,156,255,131,255,106,255,81,255,55,255,30,255,5,255,236,254,211,254,186,254,161,254,136,254,111,254,85,254,60,254,35,254,10,254,241,253,216,253,191,253,166,253,141,253,116,253,91,253,66,253,41,253,16,253,247,252,222,252,197,252,172,252,147,252,122,252,97,252,72,252,47,252,22,252,253,251,228,251,203,251,178,251,153,251,128,251,103,251,79,251,54,251,29,251,4,251,235,250,210,250,186,250,161,250,136,250,111,250,87,250,62,250,37,250,13,250,244,249,219,249,195,249,170,249,145,249,121,249,96,249,71,249,47,249,22,249,254,248,229,248,205,248,180,248,156,248,131,248,107,248,83,248,58,248,34,248,10,248,241,247,217,247,193,247,168,247,144,247,120,247,96,247,71,247,47,247,23,247,255,246,231,246,207,246,183,246,159,246,135,246,111,246,87,246,63,246,39,246,15,246,247,245,223,245,199,245,176,245,152,245,128,245,104,245,81,245,57,245,33,245,10,245,242,244,219,244,195,244,172,244,148,244,125,244,101,244,78,244,54,244,31,244,8,244,240,243,217,243,194,243,171,243,148,243,124,243,101,243,78,243,55,243,32,243,9,243,242,242,219,242,196,242,174,242,151,242,128,242,105,242,82,242,60,242,37,242,14,242,248,241,225,241,203,241,180,241,158,241,135,241,113,241,91,241,68,241,46,241,24,241,1,241,235,240,213,240,191,240,169,240,147,240,125,240,103,240,81,240,59,240,37,240,16,240,250,239,228,239,206,239,185,239,163,239,141,239,120,239,98,239,77,239,56,239,34,239,13,239,248,238,226,238,205,238,184,238,163,238,142,238,121,238,100,238,79,238,58,238,37,238,16,238,251,237,231,237,210,237,189,237,169,237,148,237,128,237,107,237,87,237,66,237,46,237,26,237,5,237,241,236,221,236,201,236,181,236,161,236,141,236,121,236,101,236,81,236,61,236,42,236,22,236,2,236,239,235,219,235,200,235,180,235,161,235,141,235,122,235,103,235,84,235,65,235,45,235,26,235,7,235,244,234,226,234,207,234,188,234,169,234,150,234,132,234,113,234,95,234,76,234,58,234,39,234,21,234,3,234,240,233,222,233,204,233,186,233,168,233,150,233,132,233,114,233,97,233,79,233,61,233,44,233,26,233,8,233,247,232,230,232,212,232,195,232,178,232,160,232,143,232,126,232,109,232,92,232,75,232,59,232,42,232,25,232,8,232,248,231,231,231,215,231,198,231,182,231,165,231,149,231,133,231,117,231,101,231,85,231,69,231,53,231,37,231,21,231,5,231,246,230,230,230,215,230,199,230,184,230,168,230,153,230,138,230,123,230,107,230,92,230,77,230,62,230,48,230,33,230,18,230,3,230,245,229,230,229,216,229,201,229,187,229,173,229,158,229,144,229,130,229,116,229,102,229,88,229,74,229,60,229,47,229,33,229,19,229,6,229,248,228,235,228,222,228,208,228,195,228,182,228,169,228,156,228,143,228,130,228,117,228,104,228,92,228,79,228,67,228,54,228,42,228,29,228,17,228,5,228,249,227,237,227,225,227,213,227,201,227,189,227,177,227,165,227,154,227,142,227,131,227,119,227,108,227,97,227,86,227,75,227,63,227,52,227,42,227,31,227,20,227,9,227,255,226,244,226,234,226,223,226,213,226,202,226,192,226,182,226,172,226,162,226,152,226,142,226,132,226,123,226,113,226,103,226,94,226,84,226,75,226,66,226,57,226,47,226,38,226,29,226,20,226,12,226,3,226,250,225,241,225,233,225,224,225,216,225,208,225,199,225,191,225,183,225,175,225,167,225,159,225,151,225,143,225,136,225,128,225,120,225,113,225,106,225,98,225,91,225,84,225,77,225,70,225,63,225,56,225,49,225,42,225,36,225,29,225,22,225,16,225,10,225,3,225,253,224,247,224,241,224,235,224,229,224,223,224,217,224,212,224,206,224,201,224,195,224,190,224,184,224,179,224,174,224,169,224,164,224,159,224,154,224,149,224,145,224,140,224,135,224,131,224,126,224,122,224,118,224,114,224,110,224,106,224,102,224,98,224,94,224,90,224,87,224,83,224,79,224,76,224,73,224,69,224,66,224,63,224,60,224,57,224,54,224,51,224,49,224,46,224,43,224,41,224,39,224,36,224,34,224,32,224,30,224,28,224,26,224,24,224,22,224,20,224,18,224,17,224,15,224,14,224,13,224,11,224,10,224,9,224,8,224,7,224,6,224,5,224,5,224,4,224,3,224,3,224,2,224,2,224,2,224,2,224,2,224,1,224,2,224,2,224,2,224,2,224,2,224,3,224,3,224,4,224,5,224,5,224,6,224,7,224,8,224,9,224,10,224,11,224,13,224,14,224,15,224,17,224,18,224,20,224,22,224,24,224,26,224,28,224,30,224,32,224,34,224,36,224,39,224,41,224,43,224,46,224,49,224,51,224,54,224,57,224,60,224,63,224,66,224,69,224,73,224,76,224,79,224,83,224,87,224,90,224,94,224,98,224,102,224,106,224,110,224,114,224,118,224,122,224,126,224,131,224,135,224,140,224,145,224,149,224,154,224,159,224,164,224,169,224,174,224,179,224,184,224,190,224,195,224,201,224,206,224,212,224,217,224,223,224,229,224,235,224,241,224,247,224,253,224,3,225,10,225,16,225,22,225,29,225,36,225,42,225,49,225,56,225,63,225,70,225,77,225,84,225,91,225,98,225,106,225,113,225,120,225,128,225,136,225,143,225,151,225,159,225,167,225,175,225,183,225,191,225,199,225,208,225,216,225,224,225,233,225,241,225,250,225,3,226,12,226,20,226,29,226,38,226,47,226,57,226,66,226,75,226,84,226,94,226,103,226,113,226,123,226,132,226,142,226,152,226,162,226,172,226,182,226,192,226,202,226,213,226,223,226,234,226,244,226,255,226,9,227,20,227,31,227,42,227,52,227,63,227,75,227,86,227,97,227,108,227,119,227,131,227,142,227,154,227,165,227,177,227,189,227,201,227,213,227,225,227,237,227,249,227,5,228,17,228,29,228,42,228,54,228,67,228,79,228,92,228,104,228,117,228,130,228,143,228,156,228,169,228,182,228,195,228,208,228,222,228,235,228,248,228,6,229,19,229,33,229,47,229,60,229,74,229,88,229,102,229,116,229,130,229,144,229,158,229,173,229,187,229,201,229,216,229,230,229,245,229,3,230,18,230,33,230,48,230,62,230,77,230,92,230,107,230,123,230,138,230,153,230,168,230,184,230,199,230,215,230,230,230,246,230,5,231,21,231,37,231,53,231,69,231,85,231,101,231,117,231,133,231,149,231,165,231,182,231,198,231,215,231,231,231,248,231,8,232,25,232,42,232,59,232,75,232,92,232,109,232,126,232,143,232,160,232,178,232,195,232,212,232,230,232,247,232,8,233,26,233,44,233,61,233,79,233,97,233,114,233,132,233,150,233,168,233,186,233,204,233,222,233,240,233,3,234,21,234,39,234,58,234,76,234,95,234,113,234,132,234,150,234,169,234,188,234,207,234,226,234,244,234,7,235,26,235,45,235,65,235,84,235,103,235,122,235,141,235,161,235,180,235,200,235,219,235,239,235,2,236,22,236,42,236,61,236,81,236,101,236,121,236,141,236,161,236,181,236,201,236,221,236,241,236,5,237,26,237,46,237,66,237,87,237,107,237,128,237,148,237,169,237,189,237,210,237,231,237,251,237,16,238,37,238,58,238,79,238,100,238,121,238,142,238,163,238,184,238,205,238,226,238,248,238,13,239,34,239,56,239,77,239,98,239,120,239,141,239,163,239,185,239,206,239,228,239,250,239,16,240,37,240,59,240,81,240,103,240,125,240,147,240,169,240,191,240,213,240,235,240,1,241,24,241,46,241,68,241,91,241,113,241,135,241,158,241,180,241,203,241,225,241,248,241,14,242,37,242,60,242,82,242,105,242,128,242,151,242,174,242,196,242,219,242,242,242,9,243,32,243,55,243,78,243,101,243,124,243,148,243,171,243,194,243,217,243,240,243,8,244,31,244,54,244,78,244,101,244,125,244,148,244,172,244,195,244,219,244,242,244,10,245,33,245,57,245,81,245,104,245,128,245,152,245,176,245,199,245,223,245,247,245,15,246,39,246,63,246,87,246,111,246,135,246,159,246,183,246,207,246,231,246,255,246,23,247,47,247,71,247,96,247,120,247,144,247,168,247,193,247,217,247,241,247,10,248,34,248,58,248,83,248,107,248,131,248,156,248,180,248,205,248,229,248,254,248,22,249,47,249,71,249,96,249,121,249,145,249,170,249,195,249,219,249,244,249,13,250,37,250,62,250,87,250,111,250,136,250,161,250,186,250,210,250,235,250,4,251,29,251,54,251,79,251,103,251,128,251,153,251,178,251,203,251,228,251,253,251,22,252,47,252,72,252,97,252,122,252,147,252,172,252,197,252,222,252,247,252,16,253,41,253,66,253,91,253,116,253,141,253,166,253,191,253,216,253,241,253,10,254,35,254,60,254,85,254,111,254,136,254,161,254,186,254,211,254,236,254,5,255,30,255,55,255,81,255,106,255,131,255,156,255,181,255,206,255,231,255,0,0,25,0,50,0,75,0,100,0,125,0,150,0,175,0,201,0,226,0,251,0,20,1,45,1,70,1,95,1,120,1,145,1,171,1,196,1,221,1,246,1,15,2,40,2,65,2,90,2,115,2,140,2,165,2,190,2,215,2,240,2,9,3,34,3,59,3,84,3,109,3,134,3,159,3,184,3,209,3,234,3,3,4,28,4,53,4,78,4,103,4,128,4,153,4,177,4,202,4,227,4,252,4,21,5,46,5,70,5,95,5,120,5,145,5,169,5,194,5,219,5,243,5,12,6,37,6,61,6,86,6,111,6,135,6,160,6,185,6,209,6,234,6,2,7,27,7,51,7,76,7,100,7,125,7,149,7,173,7,198,7,222,7,246,7,15,8,39,8,63,8,88,8,112,8,136,8,160,8,185,8,209,8,233,8,1,9,25,9,49,9,73,9,97,9,121,9,145,9,169,9,193,9,217,9,241,9,9,10,33,10,57,10,80,10,104,10,128,10,152,10,175,10,199,10,223,10,246,10,14,11,37,11,61,11,84,11,108,11,131,11,155,11,178,11,202,11,225,11,248,11,16,12,39,12,62,12,85,12,108,12,132,12,155,12,178,12,201,12,224,12,247,12,14,13,37,13,60,13,82,13,105,13,128,13,151,13,174,13,196,13,219,13,242,13,8,14,31,14,53,14,76,14,98,14,121,14,143,14,165,14,188,14,210,14,232,14,255,14,21,15,43,15,65,15,87,15,109,15,131,15,153,15,175,15,197,15,219,15,240,15,6,16,28,16,50,16,71,16,93,16,115,16,136,16,158,16,179,16,200,16,222,16,243,16,8,17,30,17,51,17,72,17,93,17,114,17,135,17,156,17,177,17,198,17,219,17,240,17,5,18,25,18,46,18,67,18,87,18,108,18,128,18,149,18,169,18,190,18,210,18,230,18,251,18,15,19,35,19,55,19,75,19,95,19,115,19,135,19,155,19,175,19,195,19,214,19,234,19,254,19,17,20,37,20,56,20,76,20,95,20,115,20,134,20,153,20,172,20,191,20,211,20,230,20,249,20,12,21,30,21,49,21,68,21,87,21,106,21,124,21,143,21,161,21,180,21,198,21,217,21,235,21,253,21,16,22,34,22,52,22,70,22,88,22,106,22,124,22,142,22,159,22,177,22,195,22,212,22,230,22,248,22,9,23,26,23,44,23,61,23,78,23,96,23,113,23,130,23,147,23,164,23,181,23,197,23,214,23,231,23,248,23,8,24,25,24,41,24,58,24,74,24,91,24,107,24,123,24,139,24,155,24,171,24,187,24,203,24,219,24,235,24,251,24,10,25,26,25,41,25,57,25,72,25,88,25,103,25,118,25,133,25,149,25,164,25,179,25,194,25,208,25,223,25,238,25,253,25,11,26,26,26,40,26,55,26,69,26,83,26,98,26,112,26,126,26,140,26,154,26,168,26,182,26,196,26,209,26,223,26,237,26,250,26,8,27,21,27,34,27,48,27,61,27,74,27,87,27,100,27,113,27,126,27,139,27,152,27,164,27,177,27,189,27,202,27,214,27,227,27,239,27,251,27,7,28,19,28,31,28,43,28,55,28,67,28,79,28,91,28,102,28,114,28,125,28,137,28,148,28,159,28,170,28,181,28,193,28,204,28,214,28,225,28,236,28,247,28,1,29,12,29,22,29,33,29,43,29,54,29,64,29,74,29,84,29,94,29,104,29,114,29,124,29,133,29,143,29,153,29,162,29,172,29,181,29,190,29,199,29,209,29,218,29,227,29,236,29,244,29,253,29,6,30,15,30,23,30,32,30,40,30,48,30,57,30,65,30,73,30,81,30,89,30,97,30,105,30,113,30,120,30,128,30,136,30,143,30,150,30,158,30,165,30,172,30,179,30,186,30,193,30,200,30,207,30,214,30,220,30,227,30,234,30,240,30,246,30,253,30,3,31,9,31,15,31,21,31,27,31,33,31,39,31,44,31,50,31,55,31,61,31,66,31,72,31,77,31,82,31,87,31,92,31,97,31,102,31,107,31,111,31,116,31,121,31,125,31,130,31,134,31,138,31,142,31,146,31,150,31,154,31,158,31,162,31,166,31,169,31,173,31,177,31,180,31,183,31,187,31,190,31,193,31,196,31,199,31,202,31,205,31,207,31,210,31,213,31,215,31,217,31,220,31,222,31,224,31,226,31,228,31,230,31,232,31,234,31,236,31,238,31,239,31,241,31,242,31,243,31,245,31,246,31,247,31,248,31,249,31,250,31,251,31,251,31,252,31,253,31,253,31,254,31,254,31,254,31,254,31,254,31,255,31,254,31,254,31,254,31,254,31,254,31,253,31,253,31,252,31,251,31,251,31,250,31,249,31,248,31,247,31,246,31,245,31,243,31,242,31,241,31,239,31,238,31,236,31,234,31,232,31,230,31,228,31,226,31,224,31,222,31,220,31,217,31,215,31,213,31,210,31,207,31,205,31,202,31,199,31,196,31,193,31,190,31,187,31,183,31,180,31,177,31,173,31,169,31,166,31,162,31,158,31,154,31,150,31,146,31,142,31,138,31,134,31,130,31,125,31,121,31,116,31,111,31,107,31,102,31,97,31,92,31,87,31,82,31,77,31,72,31,66,31,61,31,55,31,50,31,44,31,39,31,33,31,27,31,21,31,15,31,9,31,3,31,253,30,246,30,240,30,234,30,227,30,220,30,214,30,207,30,200,30,193,30,186,30,179,30,172,30,165,30,158,30,150,30,143,30,136,30,128,30,120,30,113,30,105,30,97,30,89,30,81,30,73,30,65,30,57,30,48,30,40,30,32,30,23,30,15,30,6,30,253,29,244,29,236,29,227,29,218,29,209,29,199,29,190,29,181,29,172,29,162,29,153,29,143,29,133,29,124,29,114,29,104,29,94,29,84,29,74,29,64,29,54,29,43,29,33,29,22,29,12,29,1,29,247,28,236,28,225,28,214,28,204,28,193,28,181,28,170,28,159,28,148,28,137,28,125,28,114,28,102,28,91,28,79,28,67,28,55,28,43,28,31,28,19,28,7,28,251,27,239,27,227,27,214,27,202,27,189,27,177,27,164,27,152,27,139,27,126,27,113,27,100,27,87,27,74,27,61,27,48,27,34,27,21,27,8,27,250,26,237,26,223,26,209,26,196,26,182,26,168,26,154,26,140,26,126,26,112,26,98,26,83,26,69,26,55,26,40,26,26,26,11,26,253,25,238,25,223,25,208,25,194,25,179,25,164,25,149,25,133,25,118,25,103,25,88,25,72,25,57,25,41,25,26,25,10,25,251,24,235,24,219,24,203,24,187,24,171,24,155,24,139,24,123,24,107,24,91,24,74,24,58,24,41,24,25,24,8,24,248,23,231,23,214,23,197,23,181,23,164,23,147,23,130,23,113,23,96,23,78,23,61,23,44,23,26,23,9,23,248,22,230,22,212,22,195,22,177,22,159,22,142,22,124,22,106,22,88,22,70,22,52,22,34,22,16,22,253,21,235,21,217,21,198,21,180,21,161,21,143,21,124,21,106,21,87,21,68,21,49,21,30,21,12,21,249,20,230,20,211,20,191,20,172,20,153,20,134,20,115,20,95,20,76,20,56,20,37,20,17,20,254,19,234,19,214,19,195,19,175,19,155,19,135,19,115,19,95,19,75,19,55,19,35,19,15,19,251,18,230,18,210,18,190,18,169,18,149,18,128,18,108,18,87,18,67,18,46,18,25,18,5,18,240,17,219,17,198,17,177,17,156,17,135,17,114,17,93,17,72,17,51,17,30,17,8,17,243,16,222,16,200,16,179,16,158,16,136,16,115,16,93,16,71,16,50,16,28,16,6,16,240,15,219,15,197,15,175,15,153,15,131,15,109,15,87,15,65,15,43,15,21,15,255,14,232,14,210,14,188,14,165,14,143,14,121,14,98,14,76,14,53,14,31,14,8,14,242,13,219,13,196,13,174,13,151,13,128,13,105,13,82,13,60,13,37,13,14,13,247,12,224,12,201,12,178,12,155,12,132,12,108,12,85,12,62,12,39,12,16,12,248,11,225,11,202,11,178,11,155,11,131,11,108,11,84,11,61,11,37,11,14,11,246,10,223,10,199,10,175,10,152,10,128,10,104,10,80,10,57,10,33,10,9,10,241,9,217,9,193,9,169,9,145,9,121,9,97,9,73,9,49,9,25,9,1,9,233,8,209,8,185,8,160,8,136,8,112,8,88,8,63,8,39,8,15,8,246,7,222,7,198,7,173,7,149,7,125,7,100,7,76,7,51,7,27,7,2,7,234,6,209,6,185,6,160,6,135,6,111,6,86,6,61,6,37,6,12,6,243,5,219,5,194,5,169,5,145,5,120,5,95,5,70,5,46,5,21,5,252,4,227,4,202,4,177,4,153,4,128,4,103,4,78,4,53,4,28,4,3,4,234,3,209,3,184,3,159,3,134,3,109,3,84,3,59,3,34,3,9,3,240,2,215,2,190,2,165,2,140,2,115,2,90,2,65,2,40,2,15,2,246,1,221,1,196,1,171,1,145,1,120,1,95,1,70,1,45,1,20,1,251,0,226,0,201,0,175,0,150,0,125,0,100,0,75,0,50,0,25,0,111,112,116,105,111,110,32,114,101,113,117,105,114,101,115,32,97,110,32,97,114,103,117,109,101,110,116,32,45,45,32,37,115,0,0,0,0,0,0,0,111,112,116,105,111,110,32,114,101,113,117,105,114,101,115,32,97,110,32,97,114,103,117,109,101,110,116,32,45,45,32,37,99,0,0,0,0,0,0,0,0,1,2,3,0,4,0,1,2,3,0,4,5,6,2,3,0,4,5,7,1,3,0,4,8,9,10,3,0,0,8,8,10,3,0,0,11,11,11,11,0,0,12,12,12,12,0,0,64,98,1,0,0,0,0,0,255,254,254,254,254,254,253,253,252,251,251,250,249,248,247,246,245,244,242,241,239,238,236,234,233,231,229,227,225,223,220,218,216,213,211,209,207,205,203,201,199,197,195,193,191,189,187,185,183,180,178,176,173,171,169,166,164,161,159,156,154,151,148,146,143,140,138,135,132,129,126,123,120,118,115,112,108,105,102,99,96,95,93,91,90,88,86,85,83,82,80,79,77,76,74,73,72,70,69,68,67,66,64,63,62,61,60,59,58,57,56,55,55,54,53,52,52,51,50,50,49,48,48,47,47,46,46,46,45,45,45,44,44,44,44,44,44,44,43,43,43,43,44,43,42,42,41,40,40,39,38,38,37,36,36,35,35,34,33,33,32,32,31,30,30,29,29,28,28,27,26,26,25,25,24,24,23,23,22,22,21,21,20,20,19,19,18,18,18,17,17,16,16,15,15,15,14,14,13,13,13,12,12,11,11,11,10,10,10,9,9,9,8,8,8,7,7,7,7,6,6,6,5,5,5,5,4,4,4,4,4,3,3,3,3,2,2,2,2,2,2,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,86,87,88,89,91,92,93,94,96,97,98,100,101,103,104,105,107,108,110,111,113,115,116,118,119,121,123,124,126,128,130,132,133,135,137,139,141,143,145,147,149,151,153,155,158,160,162,164,167,169,171,174,176,179,181,184,186,189,191,194,197,199,202,205,208,211,214,217,220,223,226,229,232,236,239,242,246,249,252,254,255,0,0,0,23,10,9,24,19,24,24,0,0,0,0,175,0,0,0,100,0,0,0,50,0,0,0,50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,63,0,0,0,0,0,0,0,255,255,255,255,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,255,255,255,255,0,0,0,0,255,255,255,255,0,0,0,0,111,112,116,105,111,110,32,100,111,101,115,110,39,116,32,116,97,107,101,32,97,110,32,97,114,103,117,109,101,110,116,32,45,45,32,37,46,42,115,0,4,0,0,0,0,0,0,0,184,41,0,0,1,0,0,0,120,65,0,0,2,0,0,0,184,59,0,0,3,0,0,0,112,54,0,0,17,0,0,0,192,41,0,0,18,0,0,0,24,39,0,0,19,0,0,0,152,36,0,0,20,0,0,0,136,34,0,0,21,0,0,0,152,32,0,0,22,0,0,0,160,30,0,0,17,0,0,0,96,71,0,0,33,0,0,0,40,69,0,0,34,0,0,0,80,67,0,0,35,0,0,0,48,66,0,0,36,0,0,0,136,65,0,0,37,0,0,0,240,64,0,0,38,0,0,0,40,64,0,0,33,0,0,0,0,0,0,0,255,255,255,255,128,63,0,0,65,0,0,0,32,63,0,0,66,0,0,0,152,62,0,0,67,0,0,0,24,62,0,0,68,0,0,0,144,61,0,0,69,0,0,0,248,60,0,0,70,0,0,0,88,60,0,0,71,0,0,0,192,59,0,0,72,0,0,0,80,59,0,0,73,0,0,0,200,58,0,0,74,0,0,0,96,58,0,0,75,0,0,0,248,57,0,0,76,0,0,0,160,57,0,0,77,0,0,0,72,57,0,0,78,0,0,0,160,56,0,0,79,0,0,0,176,55,0,0,8,0,0,0,56,55,0,0,9,0,0,0,120,54,0,0,10,0,0,0,24,54,0,0,11,0,0,0,192,53,0,0,13,0,0,0,72,53,0,0,14,0,0,0,224,52,0,0,15,0,0,0,96,52,0,0,15,0,0,0,40,43,0,0,16,0,0,0,192,42,0,0,17,0,0,0,136,42,0,0,18,0,0,0,64,42,0,0,19,0,0,0,200,41,0,0,20,0,0,0,144,41,0,0,23,0,0,0,128,41,0,0,24,0,0,0,56,41,0,0,25,0,0,0,176,40,0,0,27,0,0,0,136,40,0,0,28,0,0,0,80,40,0,0,29,0,0,0,32,40,0,0,32,0,0,0,192,39,0,0,33,0,0,0,144,39,0,0,34,0,0,0,96,39,0,0,35,0,0,0,32,39,0,0,36,0,0,0,248,38,0,0,37,0,0,0,192,38,0,0,38,0,0,0,32,38,0,0,40,0,0,0,248,37,0,0,41,0,0,0,168,37,0,0,42,0,0,0,136,37,0,0,43,0,0,0,56,37,0,0,45,0,0,0,8,37,0,0,46,0,0,0,208,36,0,0,47,0,0,0,160,36,0,0,48,0,0,0,112,36,0,0,49,0,0,0,40,36,0,0,50,0,0,0,240,35,0,0,51,0,0,0,200,35,0,0,100,0,0,0,144,35,0,0,200,0,0,0,80,35,0,0,201,0,0,0,0,0,0,0,255,255,255,255,32,0,33,0,34,0,176,2,36,0,37,0,230,0,200,2,40,0,41,0,126,2,43,0,204,2,45,0,46,0,47,0,82,2,49,0,50,0,92,2,52,0,53,0,54,0,55,0,117,2,57,0,208,2,178,2,60,0,61,0,62,0,148,2,89,2,81,2,178,3,231,0,240,0,91,2,70,0,98,2,39,1,106,2,95,2,75,0,107,2,113,2,75,1,84,2,166,3,99,2,128,2,131,2,184,3,138,2,140,2,83,1,199,3,248,0,146,2,42,3,92,0,93,0,94,0,95,0,96,0,97,0,98,0,99,0,100,0,101,0,102,0,97,2,104,0,105,0,106,0,107,0,108,0,109,0,110,0,111,0,112,0,113,0,114,0,115,0,116,0,117,0,118,0,119,0,120,0,121,0,122,0,123,0,124,0,125,0,3,3,127,0,117,110,107,110,111,119,110,32,111,112,116,105,111,110,32,45,45,32,37,115,0,0,0,0,117,110,107,110,111,119,110,32,111,112,116,105,111,110,32,45,45,32,37,99,0,0,0,0,255,255,255,255,0,0,0,0,168,34,0,0,0,0,0,0,144,63,0,0,1,0,0,0,120,58,0,0,2,0,0,0,0,0,0,0,0,0,0,0,248,25,0,0,248,25,0,0,248,24,0,0,248,24,0,0,120,25,0,0,88,120,0,0,208,123,0,0,160,117,0,0,32,117,0,0,32,117,0,0,88,115,0,0,88,115,0,0,216,114,0,0,216,114,0,0,144,94,0,0,144,94,0,0,16,94,0,0,16,94,0,0,240,106,0,0,240,106,0,0,0,2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32,34,36,38,40,42,44,46,48,50,52,54,56,58,60,62,64,66,68,70,72,74,76,78,80,82,84,86,88,90,92,94,96,98,100,102,104,106,108,110,112,114,116,118,120,122,124,126,128,130,132,134,136,138,140,142,144,146,148,150,152,154,156,158,160,162,164,166,168,170,172,174,176,178,180,182,184,186,188,190,192,194,196,198,200,202,204,206,208,210,212,214,216,218,220,222,224,226,228,230,232,234,236,238,240,242,244,246,248,250,253,255,255,244,234,224,214,204,195,186,177,168,159,151,143,135,127,120,113,106,99,92,86,80,74,68,63,57,52,47,43,38,34,30,26,23,19,16,13,11,8,6,4,2,1,0,0,0,0,0,0,0,1,2,3,4,5,7,8,10,12,14,16,19,21,23,26,29,31,34,37,40,44,46,48,50,52,54,57,59,61,64,66,69,71,74,76,79,81,84,87,90,93,95,98,101,104,107,110,113,116,120,123,126,129,133,136,139,143,146,150,153,157,160,164,168,172,175,179,183,187,191,195,199,203,207,211,215,219,224,255,253,250,248,246,244,242,240,238,236,234,232,230,228,226,224,222,220,218,216,214,212,210,208,206,204,202,200,198,196,194,192,190,188,186,184,182,180,178,176,174,172,170,168,166,164,162,160,158,156,154,152,150,148,146,144,142,140,138,136,134,132,130,128,126,124,122,120,118,116,114,112,110,108,106,104,102,100,98,96,94,92,90,88,86,84,82,80,78,76,74,72,70,68,66,64,62,60,58,56,54,52,50,48,46,44,42,40,38,36,34,32,30,28,26,24,22,20,18,16,14,12,10,8,6,4,2,0,0,0,0,0,50,0,0,0,175,0,0,0,100,0,0,0,50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,175,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,95,112,137,0,255,9,47,15,10,0,0,0,100,0,0,0,232,3,0,0,16,39,0,0,160,134,1,0,64,66,15,0,128,150,152,0,0,225,245,5,1,0,0,0,0,0,0,0,208,128,0,0,208,128,0,0,16,128,0,0,80,127,0,0,144,126,0,0,208,125,0,0,208,128,0,0,16,125,0,0,208,128,0,0,80,124,0,0,208,128,0,0,208,128,0,0,208,128,0,0,208,128,0,0,136,121,0,0,208,128,0,0,208,128,0,0,208,128,0,0,160,97,0,0,104,98,0,0,97,109,98,105,103,117,111,117,115,32,111,112,116,105,111,110,32,45,45,32,37,46,42,115,0,0,0,0,0,0,0,0,136,35,0,0,128,3,0,0,128,3,255,3,108,101,0,0,3,0,0,0,224,63,0,0,32,4,0,0,0,4,47,5,0,0,0,0,0,0,0,0,152,58,0,0,48,5,0,0,48,5,143,5,121,104,0,0,4,0,0,0,184,53,0,0,144,5,0,0,144,5,255,5,0,0,0,0,0,0,0,0,48,41,0,0,0,6,0,0,0,6,255,6,0,0,0,0,0,0,0,0,184,38,0,0,128,7,0,0,128,7,191,7,0,0,0,0,0,0,0,0,32,36,0,0,0,9,0,0,0,9,127,9,105,104,0,0,4,0,0,0,16,34,0,0,128,9,0,0,128,9,255,9,110,98,0,0,4,0,0,0,48,32,0,0,0,10,0,0,0,10,127,10,97,112,0,0,4,0,0,0,40,30,0,0,128,10,0,0,128,10,255,10,117,103,0,0,4,0,0,0,224,70,0,0,0,11,0,0,0,11,127,11,0,0,0,0,0,0,0,0,200,68,0,0,128,11,0,0,128,11,255,11,97,116,0,0,4,0,0,0,224,66,0,0,0,12,0,0,0,12,127,12,101,116,0,0,0,0,0,0,232,65,0,0,128,12,0,0,128,12,255,12,110,107,0,0,4,0,0,0,64,65,0,0,0,13,0,0,0,13,127,13,108,109,0,0,4,0,0,0,184,64,0,0,128,13,0,0,128,13,255,13,105,115,0,0,4,0,0,0,248,63,0,0,0,14,0,0,0,14,127,14,0,0,0,0,0,0,0,0,112,63,0,0,128,14,0,0,128,14,255,14,0,0,0,0,0,0,0,0,8,63,0,0,0,15,0,0,0,15,255,15,0,0,0,0,0,0,0,0,112,62,0,0,0,16,0,0,0,16,159,16,0,0,0,0,0,0,0,0,0,62,0,0,160,16,0,0,160,16,255,16,97,107,0,0,4,0,0,0,120,61,0,0,0,17,0,0,0,17,255,17,111,107,0,0,4,0,0,0,192,60,0,0,0,18,0,0,0,18,159,19,0,0,0,0,0,0,0,0,72,60,0,0,0,40,0,0,0,40,255,40,0,0,0,0,16,0,0,0,176,59,0,0,64,48,0,0,64,48,255,48,0,0,0,0,8,0,0,0,72,59,0,0,0,49,0,0,0,49,255,159,0,0,0,0,8,0,0,0,120,61,0,0,0,167,0,0,0,167,255,215,111,107,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,108,95,114,101,103,114,101,115,115,105,118,101,95,118,0,0,95,104,111,107,0,0,0,0,115,0,0,0,0,0,0,0,37,53,100,58,32,71,114,111,117,112,32,110,97,109,101,32,108,111,110,103,101,114,32,116,104,97,110,32,50,32,98,121,116,101,115,32,40,85,84,70,56,41,0,0,0,0,0,0,108,95,112,114,101,102,105,120,0,0,0,0,0,0,0,0,95,114,102,120,0,0,0,0,109,97,114,107,0,0,0,0,48,120,37,120,0,0,0,0,108,95,100,105,101,114,101,115,105,115,0,0,0,0,0,0,109,98,0,0,0,0,0,0,95,98,97,114,0,0,0,0,115,97,121,45,97,115,0,0,95,103,117,0,0,0,0,0,46,103,114,111,117,112,0,0,100,105,99,116,100,105,97,108,101,99,116,0,0,0,0,0,73,110,112,117,116,32,70,108,117,115,104,32,83,105,103,110,97,108,0,0,0,0,0,0,95,116,108,100,0,0,0,0,112,114,111,115,111,100,121,0,101,115,0,0,0,0,0,0,46,114,101,112,108,97,99,101,0,0,0,0,0,0,0,0,97,108,112,104,97,98,101,116,50,0,0,0,0,0,0,0,95,115,116,107,0,0,0,0,119,95,97,108,116,0,0,0,118,111,105,99,101,0,0,0,46,76,0,0,0,0,0,0,100,105,99,116,95,109,105,110,0,0,0,0,0,0,0,0,108,111,103,0,0,0,0,0,95,114,110,103,0,0,0,0,37,115,9,37,100,9,37,115,0,0,0,0,0,0,0,0,115,112,101,97,107,0,0,0,47,47,0,0,0,0,0,0,115,112,101,101,100,0,0,0,95,111,103,111,0,0,0,0,108,39,101,116,64,0,0,0,37,99,37,100,37,99,0,0,119,98,0,0,0,0,0,0,102,97,115,116,95,116,101,115,116,50,0,0,0,0,0,0,95,109,99,110,0,0,0,0,120,45,104,105,103,104,0,0,67,111,109,112,105,108,105,110,103,58,32,39,37,115,39,10,0,0,0,0,0,0,0,0,101,110,0,0,0,0,0,0,107,108,97,116,116,0,0,0,95,103,114,118,0,0,0,0,40,37,115,41,0,0,0,0,104,105,103,104,0,0,0,0,101,120,116,114,97,0,0,0,99,111,110,115,111,110,97,110,116,115,0,0,0,0,0,0,95,100,111,116,0,0,0,0,108,111,119,0,0,0,0,0,108,105,115,116,120,0,0,0,99,111,109,112,105,108,101,0,111,112,116,105,111,110,0,0,95,97,99,50,0,0,0,0,120,45,108,111,119,0,0,0,114,111,111,116,115,0,0,0,110,117,109,98,101,114,115,0,95,100,105,97,0,0,0,0,120,45,102,97,115,116,0,0,85,115,105,110,103,32,112,104,111,110,101,109,101,116,97,98,108,101,58,32,39,37,115,39,10,0,0,0,0,0,0,0,98,114,101,97,116,104,119,0,37,115,37,115,0,0,0,0,95,99,105,114,0,0,0,0,102,97,115,116,0,0,0,0,95,103,117,114,0,0,0,0,37,115,37,99,116,101,109,112,0,0,0,0,0,0,0,0,98,114,101,97,116,104,0,0,71,111,116,32,97,32,114,101,115,101,116,32,115,105,103,110,97,108,0,0,0,0,0,0,95,99,101,100,0,0,0,0,115,108,111,119,0,0,0,0,101,110,45,117,115,0,0,0,119,98,43,0,0,0,0,0,118,111,105,99,105,110,103,0,95,104,97,99,0,0,0,0,119,95,97,108,116,54,0,0,120,45,115,108,111,119,0,0,37,115,37,99,37,115,95,100,105,99,116,0,0,0,0,0,116,111,110,101,0,0,0,0,114,0,0,0,0,0,0,0,95,98,114,118,0,0,0,0,37,100,9,37,115,0,0,0,120,45,108,111,117,100,0,0,37,115,114,117,108,101,115,0,99,108,97,114,105,116,121,0,95,97,99,117,0,0,0,0,95,63,63,0,0,0,0,0,108,111,117,100,0,0,0,0,114,0,0,0,0,0,0,0,114,111,117,103,104,110,101,115,115,0,0,0,0,0,0,0,95,99,114,108,0,0,0,0,115,111,102,116,0,0,0,0,37,115,114,117,108,101,115,46,116,120,116,0,0,0,0,0,102,108,117,116,116,101,114,0,95,114,101,118,0,0,0,0,42,32,0,0,0,0,0,0,120,45,115,111,102,116,0,0,37,115,37,115,95,0,0,0,101,99,104,111,0,0,0,0,95,116,117,114,0,0,0,0,115,105,108,101,110,116,0,0,63,37,100,32,0,0,0,0,99,111,109,112,105,108,101,45,100,101,98,117,103,0,0,0,119,111,114,100,115,0,0,0,95,115,109,99,0,0,0,0,100,111,117,98,108,101,45,113,117,111,116,101,32,0,0,0,37,53,100,58,9,0,0,0,114,101,112,108,97,99,101,0,95,108,105,103,0,0,0,0,117,110,100,101,114,115,99,111,114,101,32,0,0,0,0,0,37,99,0,0,0,0,0,0,99,104,97,114,115,101,116,0,37,115,37,99,118,111,105,99,101,115,37,99,0,0,0,0,95,115,117,112,0,0,0,0,116,97,98,32,0,0,0,0,95,98,110,0,0,0,0,0,37,99,37,100,0,0,0,0,115,116,114,101,115,115,111,112,116,0,0,0,0,0,0,0,114,101,97,100,40,101,114,114,111,114,41,58,32,37,115,0,95,115,117,98,0,0,0,0,115,112,97,99,101,32,0,0,37,115,37,115,37,115,0,0,101,105,112,118,100,102,113,32,116,98,97,32,0,0,0,0,115,116,114,101,115,115,114,117,108,101,0,0,0,0,0,0,39,101,102,0,0,0,0,0,37,115,43,37,115,0,0,0,119,95,97,108,116,53,0,0,32,40,0,0,0,0,0,0,100,105,99,116,114,117,108,101,115,0,0,0,0,0,0,0,117,110,107,110,111,119,110,0,99,111,110,102,105,103,0,0,39,105,58,0,0,0,0,0,100,101,102,97,117,108,116,0,32,37,115,0,0,0,0,0,116,117,110,101,115,0,0,0,100,39,105,58,0,0,0,0,95,63,65,0,0,0,0,0,103,101,110,100,101,114,0,0,37,115,0,0,0,0,0,0,105,110,116,111,110,97,116,105,111,110,0,0,0,0,0,0,115,39,105,58,0,0,0,0,97,103,101,0,0,0,0,0,37,115,0,0,0,0,0,0,115,116,114,101,115,115,65,100,100,0,0,0,0,0,0,0,98,39,105,58,0,0,0,0,61,61,44,44,39,42,32,32,0,0,0,0,0,0,0,0,118,97,114,105,97,110,116,0,36,112,104,111,110,101,109,101,109,111,100,101,0,0,0,0,115,116,114,101,115,115,65,109,112,0,0,0,0,0,0,0,39,101,58,106,0,0,0,0,120,109,108,58,108,97,110,103,0,0,0,0,0,0,0,0,95,101,108,0,0,0,0,0,36,116,101,120,116,109,111,100,101,0,0,0,0,0,0,0,115,116,100,105,110,0,0,0,115,116,114,101,115,115,76,101,110,103,116,104,0,0,0,0,48,77,0,0,0,0,0,0,110,101,117,116,114,97,108,0,36,63,0,0,0,0,0,0,100,105,99,116,105,111,110,97,114,121,0,0,0,0,0,0,48,77,66,0,0,0,0,0,102,101,109,97,108,101,0,0,36,110,97,116,105,118,101,0,116,114,97,110,115,108,97,116,111,114,0,0,0,0,0,0,100,101,102,97,117,108,116,0,48,77,65,0,0,0,0,0,109,97,108,101,0,0,0,0,95,104,105,0,0,0,0,0,36,97,116,115,116,97,114,116,0,0,0,0,0,0,0,0,112,104,111,110,101,109,101,115,0,0,0,0,0,0,0,0,37,115,0,0,0,0,0,0,49,77,0,0,0,0,0,0,120,109,108,58,98,97,115,101,0,0,0,0,0,0,0,0,104,115,120,0,0,0,0,0,36,97,116,101,110,100,0,0,112,105,116,99,104,0,0,0,37,115,37,115,0,0,0,0,116,105,109,101,0,0,0,0,35,10,0,0,0,0,0,0,119,95,97,108,116,52,0,0,36,115,116,101,109,0,0,0,102,111,114,109,97,110,116,0,37,115,37,99,37,115,0,0,95,48,77,49,0,0,0,0,37,115,9,0,0,0,0,0,37,99,37,100,66,0,0,0,36,111,110,108,121,115,0,0,37,100,32,37,100,32,37,100,32,37,100,32,37,100,0,0,95,37,100,77,49,0,0,0,95,99,97,112,0,0,0,0,115,116,114,101,110,103,116,104,0,0,0,0,0,0,0,0,36,111,110,108,121,0,0,0,37,100,32,37,100,32,37,100,32,37,100,32,37,100,32,37,100,32,37,100,32,37,100,0,95,48,77,50,0,0,0,0,37,99,37,100,85,0,0,0,36,115,101,110,116,101,110,99,101,0,0,0,0,0,0,0,95,99,97,112,0,0,0,0,37,100,32,37,115,32,37,115,0,0,0,0,0,0,0,0,80,79,83,73,88,76,89,95,67,79,82,82,69,67,84,0,95,37,115,37,100,0,0,0,101,110,0,0,0,0,0,0,37,99,37,100,73,0,0,0,36,97,99,99,101,110,116,0,98,114,97,99,107,101,116,0,95,37,115,37,100,120,0,0,37,115,47,37,115,0,0,0,36,97,108,108,99,97,112,115,0,0,0,0,0,0,0,0,104,101,108,112,0,0,0,0,114,101,100,117,99,101,95,116,0,0,0,0,0,0,0,0,40,37,115,41,32,37,115,32,32,45,62,32,40,37,115,41,32,0,0,0,0,0,0,0,95,37,115,37,100,101,0,0,115,114,99,0,0,0,0,0,36,99,97,112,105,116,97,108,0,0,0,0,0,0,0,0,101,115,45,108,97,0,0,0,95,37,115,37,100,111,0,0,37,99,37,100,77,0,0,0,36,118,101,114,98,101,120,116,101,110,100,0,0,0,0,0,101,110,45,117,115,0,0,0,97,110,32,98,103,32,98,115,32,99,97,32,99,115,32,99,121,32,100,97,32,100,101,32,101,108,32,101,110,32,101,110,45,117,115,32,101,115,32,101,116,32,102,105,32,102,114,32,102,114,45,98,101,32,103,97,32,104,114,32,104,117,32,105,115,32,105,116,32,108,116,32,108,118,32,109,107,32,110,108,32,110,111,32,112,108,32,112,116,45,112,116,32,114,111,32,114,117,32,115,107,32,115,113,32,115,114,32,115,118,32,0,95,48,111,102,0,0,0,0,110,97,109,101,0,0,0,0,95,100,118,0,0,0,0,0,36,112,97,115,116,0,0,0,37,115,102,37,100,0,0,0,10,35,10,0,0,0,0,0,95,37,100,77,37,100,0,0,97,108,105,97,115,0,0,0,32,32,115,117,102,102,105,120,32,91,37,115,93,10,10,0,36,110,111,117,110,0,0,0,37,115,109,37,100,0,0,0,95,37,100,77,37,100,120,0,37,99,37,100,89,0,0,0,119,95,97,108,116,51,0,0,36,118,101,114,98,0,0,0,33,118,37,99,0,0,0,0,101,115,112,101,97,107,58,32,78,111,32,101,110,118,101,108,111,112,101,10,0,0,0,0,95,37,100,77,37,100,101,0,114,98,0,0,0,0,0,0,100,101,116,97,105,108,0,0,36,112,97,115,116,102,0,0,37,115,47,118,111,105,99,101,115,47,37,115,0,0,0,0,95,37,100,77,37,100,111,0,95,35,37,100,32,0,0,0,102,111,114,109,97,116,0,0,36,110,111,117,110,102,0,0,109,98,114,111,108,97,0,0,37,115,37,115,37,99,37,115,0,0,0,0,0,0,0,0,105,110,116,101,114,112,114,101,116,45,97,115,0,0,0,0,36,118,101,114,98,115,102,0,105,32,0,0,0,0,0,0,118,97,114,105,97,110,116,115,0,0,0,0,0,0,0,0,95,37,100,67,0,0,0,0,70,117,108,108,32,100,105,99,116,105,111,110,97,114,121,32,105,115,32,110,111,116,32,105,110,115,116,97,108,108,101,100].concat([32,102,111,114,32,39,37,115,39,10,0,0,0,0,0,0,108,101,118,101,108,0,0,0,36,118,101,114,98,102,0,0,103,101,110,100,101,114,0,0,37,115,10,0,0,0,0,0,95,37,100,67,48,0,0,0,99,97,112,105,116,97,108,95,108,101,116,116,101,114,115,0,36,116,101,120,116,0,0,0,40,37,115,32,37,100,41,0,108,97,110,103,117,97,103,101,0,0,0,0,0,0,0,0,95,37,100,67,111,0,0,0,112,117,110,99,116,117,97,116,105,111,110,0,0,0,0,0,36,98,114,107,0,0,0,0,110,97,109,101,0,0,0,0,37,115,37,99,37,115,37,99,0,0,0,0,0,0,0,0,109,111,100,101,0,0,0,0,36,109,97,120,51,0,0,0,37,115,37,99,37,115,0,0,97,122,32,98,110,32,102,97,32,102,97,45,112,105,110,32,104,105,32,104,121,32,104,121,45,119,101,115,116,32,105,100,32,107,97,32,107,110,32,107,117,32,109,108,32,109,115,32,110,101,32,112,97,32,116,97,32,116,101,32,116,114,32,118,105,32,118,105,45,104,117,101,32,118,105,45,115,103,110,32,122,104,32,122,104,45,121,117,101,32,0,0,0,0,0,0,95,48,67,0,0,0,0,0,102,105,101,108,100,0,0,0,95,97,114,0,0,0,0,0,36,104,97,115,100,111,116,0,116,101,115,116,47,0,0,0,109,98,114,111,108,97,32,100,105,100,32,110,111,116,32,114,101,116,117,114,110,32,97,32,46,119,97,118,32,104,101,97,100,101,114,0,0,0,0,0,95,48,67,48,0,0,0,0,114,97,110,103,101,0,0,0,36,100,111,116,0,0,0,0,101,110,0,0,0,0,0,0,36,99,111,109,98,105,110,101,0,0,0,0,0,0,0,0,109,98,47,0,0,0,0,0,95,48,67,111,0,0,0,0,118,111,108,117,109,101,0,0,117,110,112,114,0,0,0,0,119,95,97,108,116,50,0,0,36,97,108,116,54,0,0,0,49,46,52,56,46,48,51,32,32,48,52,46,77,97,114,46,49,52,0,0,0,0,0,0,37,115,37,99,118,111,105,99,101,115,0,0,0,0,0,0,105,110,116,111,110,97,116,105,111,110,115,0,0,0,0,0,37,115,37,115,37,115,0,0,37,115,47,109,98,114,111,108,97,95,112,104,47,37,115,0,114,97,116,101,0,0,0,0,47,117,115,114,47,115,104,97,114,101,47,101,115,112,101,97,107,45,100,97,116,97,0,0,36,97,108,116,53,0,0,0,37,115,37,115,37,115,37,115,0,0,0,0,0,0,0,0,37,99,0,0,0,0,0,0,109,111,100,101,114,97,116,101,0,0,0,0,0,0,0,0,37,115,47,109,98,114,111,108,97,47,37,115,0,0,0,0,72,79,77,69,0,0,0,0,36,97,108,116,52,0,0,0,37,115,43,37,115,0,0,0,95,48,97,110,100,0,0,0,114,101,100,117,99,101,100,0,69,83,80,69,65,75,95,68,65,84,65,95,80,65,84,72,0,0,0,0,0,0,0,0,36,97,108,116,51,0,0,0,32,32,32,0,0,0,0,0,37,99,37,115,0,0,0,0,101,105,121,0,0,0,0,0,95,111,114,100,0,0,0,0,66,97,100,32,100,97,116,97,58,32,39,37,115,39,32,40,37,120,32,108,101,110,103,116,104,61,37,120,41,10,0,0,120,45,115,116,114,111,110,103,0,0,0,0,0,0,0,0,37,115,47,101,115,112,101,97,107,45,100,97,116,97,0,0,36,97,108,116,50,0,0,0,85,110,107,110,111,119,110,32,112,104,111,110,101,109,101,32,116,97,98,108,101,58,32,39,37,115,39,10,0,0,0,0,98,100,103,106,108,109,110,114,118,119,121,122,0,0,0,0,95,111,114,100,50,48,0,0,115,116,114,111,110,103,0,0,10,115,112,101,97,107,32,91,111,112,116,105,111,110,115,93,32,91,34,60,119,111,114,100,115,62,34,93,10,10,45,102,32,60,116,101,120,116,32,102,105,108,101,62,32,32,32,84,101,120,116,32,102,105,108,101,32,116,111,32,115,112,101,97,107,10,45,45,115,116,100,105,110,32,32,32,32,82,101,97,100,32,116,101,120,116,32,105,110,112,117,116,32,102,114,111,109,32,115,116,100,105,110,32,105,110,115,116,101,97,100,32,111,102,32,97,32,102,105,108,101,10,10,73,102,32,110,101,105,116,104,101,114,32,45,102,32,110,111,114,32,45,45,115,116,100,105,110,44,32,116,104,101,110,32,60,119,111,114,100,115,62,32,97,114,101,32,115,112,111,107,101,110,44,32,111,114,32,105,102,32,110,111,110,101,32,116,104,101,110,32,116,101,120,116,10,105,115,32,115,112,111,107,101,110,32,102,114,111,109,32,115,116,100,105,110,44,32,101,97,99,104,32,108,105,110,101,32,115,101,112,97,114,97,116,101,108,121,46,10,10,45,97,32,60,105,110,116,101,103,101,114,62,10,9,32,32,32,65,109,112,108,105,116,117,100,101,44,32,48,32,116,111,32,50,48,48,44,32,100,101,102,97,117,108,116,32,105,115,32,49,48,48,10,45,103,32,60,105,110,116,101,103,101,114,62,10,9,32,32,32,87,111,114,100,32,103,97,112,46,32,80,97,117,115,101,32,98,101,116,119,101,101,110,32,119,111,114,100,115,44,32,117,110,105,116,115,32,111,102,32,49,48,109,83,32,97,116,32,116,104,101,32,100,101,102,97,117,108,116,32,115,112,101,101,100,10,45,107,32,60,105,110,116,101,103,101,114,62,10,9,32,32,32,73,110,100,105,99,97,116,101,32,99,97,112,105,116,97,108,32,108,101,116,116,101,114,115,32,119,105,116,104,58,32,49,61,115,111,117,110,100,44,32,50,61,116,104,101,32,119,111,114,100,32,34,99,97,112,105,116,97,108,115,34,44,10,9,32,32,32,104,105,103,104,101,114,32,118,97,108,117,101,115,32,105,110,100,105,99,97,116,101,32,97,32,112,105,116,99,104,32,105,110,99,114,101,97,115,101,32,40,116,114,121,32,45,107,50,48,41,46,10,45,108,32,60,105,110,116,101,103,101,114,62,10,9,32,32,32,76,105,110,101,32,108,101,110,103,116,104,46,32,73,102,32,110,111,116,32,122,101,114,111,32,40,119,104,105,99,104,32,105,115,32,116,104,101,32,100,101,102,97,117,108,116,41,44,32,99,111,110,115,105,100,101,114,10,9,32,32,32,108,105,110,101,115,32,108,101,115,115,32,116,104,97,110,32,116,104,105,115,32,108,101,110,103,116,104,32,97,115,32,101,110,100,45,111,102,45,99,108,97,117,115,101,10,45,112,32,60,105,110,116,101,103,101,114,62,10,9,32,32,32,80,105,116,99,104,32,97,100,106,117,115,116,109,101,110,116,44,32,48,32,116,111,32,57,57,44,32,100,101,102,97,117,108,116,32,105,115,32,53,48,10,45,115,32,60,105,110,116,101,103,101,114,62,10,9,32,32,32,83,112,101,101,100,32,105,110,32,119,111,114,100,115,32,112,101,114,32,109,105,110,117,116,101,44,32,56,48,32,116,111,32,52,53,48,44,32,100,101,102,97,117,108,116,32,105,115,32,49,55,53,10,45,118,32,60,118,111,105,99,101,32,110,97,109,101,62,10,9,32,32,32,85,115,101,32,118,111,105,99,101,32,102,105,108,101,32,111,102,32,116,104,105,115,32,110,97,109,101,32,102,114,111,109,32,101,115,112,101,97,107,45,100,97,116,97,47,118,111,105,99,101,115,10,45,119,32,60,119,97,118,101,32,102,105,108,101,32,110,97,109,101,62,10,9,32,32,32,87,114,105,116,101,32,115,112,101,101,99,104,32,116,111,32,116,104,105,115,32,87,65,86,32,102,105,108,101,44,32,114,97,116,104,101,114,32,116,104,97,110,32,115,112,101,97,107,105,110,103,32,105,116,32,100,105,114,101,99,116,108,121,10,45,98,9,32,32,32,73,110,112,117,116,32,116,101,120,116,32,101,110,99,111,100,105,110,103,44,32,49,61,85,84,70,56,44,32,50,61,56,32,98,105,116,44,32,52,61,49,54,32,98,105,116,32,10,45,109,9,32,32,32,73,110,116,101,114,112,114,101,116,32,83,83,77,76,32,109,97,114,107,117,112,44,32,97,110,100,32,105,103,110,111,114,101,32,111,116,104,101,114,32,60,32,62,32,116,97,103,115,10,45,113,9,32,32,32,81,117,105,101,116,44,32,100,111,110,39,116,32,112,114,111,100,117,99,101,32,97,110,121,32,115,112,101,101,99,104,32,40,109,97,121,32,98,101,32,117,115,101,102,117,108,32,119,105,116,104,32,45,120,41,10,45,120,9,32,32,32,87,114,105,116,101,32,112,104,111,110,101,109,101,32,109,110,101,109,111,110,105,99,115,32,116,111,32,115,116,100,111,117,116,10,45,88,9,32,32,32,87,114,105,116,101,32,112,104,111,110,101,109,101,115,32,109,110,101,109,111,110,105,99,115,32,97,110,100,32,116,114,97,110,115,108,97,116,105,111,110,32,116,114,97,99,101,32,116,111,32,115,116,100,111,117,116,10,45,122,9,32,32,32,78,111,32,102,105,110,97,108,32,115,101,110,116,101,110,99,101,32,112,97,117,115,101,32,97,116,32,116,104,101,32,101,110,100,32,111,102,32,116,104,101,32,116,101,120,116,10,45,45,99,111,109,112,105,108,101,61,60,118,111,105,99,101,32,110,97,109,101,62,10,9,32,32,32,67,111,109,112,105,108,101,32,112,114,111,110,117,110,99,105,97,116,105,111,110,32,114,117,108,101,115,32,97,110,100,32,100,105,99,116,105,111,110,97,114,121,32,102,114,111,109,32,116,104,101,32,99,117,114,114,101,110,116,10,9,32,32,32,100,105,114,101,99,116,111,114,121,46,32,60,118,111,105,99,101,32,110,97,109,101,62,32,115,112,101,99,105,102,105,101,115,32,116,104,101,32,108,97,110,103,117,97,103,101,10,45,45,105,112,97,32,32,32,32,32,32,87,114,105,116,101,32,112,104,111,110,101,109,101,115,32,116,111,32,115,116,100,111,117,116,32,117,115,105,110,103,32,73,110,116,101,114,110,97,116,105,111,110,97,108,32,80,104,111,110,101,116,105,99,32,65,108,112,104,97,98,101,116,10,9,32,32,32,32,32,32,32,32,32,45,45,105,112,97,61,49,32,85,115,101,32,116,105,101,115,44,32,45,45,105,112,97,61,50,32,85,115,101,32,90,87,74,44,32,45,45,105,112,97,61,51,32,83,101,112,97,114,97,116,101,32,119,105,116,104,32,95,10,45,45,112,97,116,104,61,34,60,112,97,116,104,62,34,10,9,32,32,32,83,112,101,99,105,102,105,101,115,32,116,104,101,32,100,105,114,101,99,116,111,114,121,32,99,111,110,116,97,105,110,105,110,103,32,116,104,101,32,101,115,112,101,97,107,45,100,97,116,97,32,100,105,114,101,99,116,111,114,121,10,45,45,112,104,111,32,32,32,32,32,32,87,114,105,116,101,32,109,98,114,111,108,97,32,112,104,111,110,101,109,101,32,100,97,116,97,32,40,46,112,104,111,41,32,116,111,32,115,116,100,111,117,116,32,111,114,32,116,111,32,116,104,101,32,102,105,108,101,32,105,110,32,45,45,112,104,111,110,111,117,116,10,45,45,112,104,111,110,111,117,116,61,34,60,102,105,108,101,110,97,109,101,62,34,10,9,32,32,32,87,114,105,116,101,32,112,104,111,110,101,109,101,32,111,117,116,112,117,116,32,102,114,111,109,32,45,120,32,45,88,32,45,45,105,112,97,32,97,110,100,32,45,45,112,104,111,32,116,111,32,116,104,105,115,32,102,105,108,101,10,45,45,112,117,110,99,116,61,34,60,99,104,97,114,97,99,116,101,114,115,62,34,10,9,32,32,32,83,112,101,97,107,32,116,104,101,32,110,97,109,101,115,32,111,102,32,112,117,110,99,116,117,97,116,105,111,110,32,99,104,97,114,97,99,116,101,114,115,32,100,117,114,105,110,103,32,115,112,101,97,107,105,110,103,46,32,32,73,102,10,9,32,32,32,61,60,99,104,97,114,97,99,116,101,114,115,62,32,105,115,32,111,109,105,116,116,101,100,44,32,97,108,108,32,112,117,110,99,116,117,97,116,105,111,110,32,105,115,32,115,112,111,107,101,110,46,10,45,45,115,112,108,105,116,61,34,60,109,105,110,117,116,101,115,62,34,10,9,32,32,32,83,116,97,114,116,115,32,97,32,110,101,119,32,87,65,86,32,102,105,108,101,32,101,118,101,114,121,32,60,109,105,110,117,116,101,115,62,46,32,32,85,115,101,100,32,119,105,116,104,32,45,119,10,45,45,115,116,100,111,117,116,32,32,32,87,114,105,116,101,32,115,112,101,101,99,104,32,111,117,116,112,117,116,32,116,111,32,115,116,100,111,117,116,10,45,45,118,101,114,115,105,111,110,32,32,83,104,111,119,115,32,118,101,114,115,105,111,110,32,110,117,109,98,101,114,32,97,110,100,32,100,97,116,101,44,32,97,110,100,32,108,111,99,97,116,105,111,110,32,111,102,32,101,115,112,101,97,107,45,100,97,116,97,10,45,45,118,111,105,99,101,115,61,60,108,97,110,103,117,97,103,101,62,10,9,32,32,32,76,105,115,116,32,116,104,101,32,97,118,97,105,108,97,98,108,101,32,118,111,105,99,101,115,32,102,111,114,32,116,104,101,32,115,112,101,99,105,102,105,101,100,32,108,97,110,103,117,97,103,101,46,10,9,32,32,32,73,102,32,60,108,97,110,103,117,97,103,101,62,32,105,115,32,111,109,105,116,116,101,100,44,32,116,104,101,110,32,108,105,115,116,32,97,108,108,32,118,111,105,99,101,115,46,10,0,0,0,0,0,0,0,37,50,100,32,32,37,45,49,50,115,37,115,37,99,32,32,37,45,50,48,115,32,37,45,49,51,115,32,0,0,0,0,36,97,108,116,49,0,0,0,66,97,100,32,118,111,105,99,101,32,97,116,116,114,105,98,117,116,101,58,32,37,115,10,0,0,0,0,0,0,0,0,99,102,104,107,112,113,115,116,120,0,0,0,0,0,0,0,95,37,100,88,0,0,0,0,109,101,100,105,117,109,0,0,87,114,111,110,103,32,118,101,114,115,105,111,110,32,111,102,32,101,115,112,101,97,107,45,100,97,116,97,32,48,120,37,120,32,40,101,120,112,101,99,116,115,32,48,120,37,120,41,32,97,116,32,37,115,10,0,36,97,108,116,0,0,0,0,100,105,99,116,100,105,97,108,101,99,116,32,110,97,109,101,32,39,37,115,39,32,110,111,116,32,114,101,99,111,103,110,105,122,101,100,10,0,0,0,104,108,109,110,114,0,0,0,95,37,100,88,102,0,0,0,119,101,97,107,0,0,0,0,70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,101,115,112,101,97,107,45,100,97,116,97,10,0,0,0,0,0,36,100,111,117,98,108,101,0,97,108,112,104,97,98,101,116,32,110,97,109,101,32,39,37,115,39,32,110,111,116,32,102,111,117,110,100,10,0,0,0,98,99,100,102,103,104,106,107,108,109,110,112,113,114,115,116,118,119,120,122,0,0,0,0,37,100,32,37,100,32,37,100,32,37,100,32,37,100,32,37,100,32,37,100,32,37,100,32,37,100,32,37,100,0,0,0,95,37,100,88,37,99,0,0,120,45,119,101,97,107,0,0,95,104,101,0,0,0,0,0,36,97,98,98,114,101,118,0,108,97,116,105,110,0,0,0,98,99,100,102,103,106,107,108,109,110,112,113,115,116,118,120,122,0,0,0,0,0,0,0,87,65,86,69,102,109,116,32,0,0,0,0,0,0,0,0,95,37,100,0,0,0,0,0,103,108,121,112,104,115,0,0,85,84,70,45,56,0,0,0,37,99,0,0,0,0,0,0,36,117,110,115,116,114,101,115,115,101,110,100,0,0,0,0,37,115,32,37,115,0,0,0,97,101,105,111,117,0,0,0,112,105,112,101,40,41,58,32,37,115,0,0,0,0,0,0,95,37,100,97,0,0,0,0,116,101,108,101,112,104,111,110,101,0,0,0,0,0,0,0,101,110,95,85,83,46,85,84,70,45,56,0,0,0,0,0,119,95,97,108,116,49,0,0,36,115,116,114,101,110,100,50,0,0,0,0,0,0,0,0,109,98,114,111,108,97,32,118,111,105,99,101,32,110,111,116,32,102,111,117,110,100,10,0,102,99,110,116,108,40,41,58,32,37,115,0,0,0,0,0,112,104,111,110,100,97,116,97,0,0,0,0,0,0,0,0,95,37,100,111,0,0,0,0,47,117,115,114,47,115,104,97,114,101,47,109,98,114,111,108,97,47,118,111,105,99,101,115,47,37,115,0,0,0,0,0,116,116,115,58,100,105,103,105,116,115,0,0,0,0,0,0,66,97,100,32,114,117,108,101,115,32,100,97,116,97,32,105,110,32,39,37,115,95,100,105,99,116,39,32,97,116,32,48,120,37,120,10,0,0,0,0,119,98,0,0,0,0,0,0,37,115,32,37,115,32,37,100,0,0,0,0,0,0,0,0,36,115,116,114,101,110,100,0,47,112,114,111,99,32,105,115,32,117,110,97,99,99,101,115,115,105,98,108,101,58,32,37,115,0,0,0,0,0,0,0,95,37,100,101,0,0,0,0,101,110,0,0,0,0,0,0,116,116,115,58,107,101,121,0,10,0,0,0,0,0,0,0,37,115,95,37,46,50,100,37,115,0,0,0,0,0,0,0,66,97,100,32,118,111,105,99,101,32,111,112,116,105,111,110,58,32,37,115,32,37,115,10,0,0,0,0,0,0,0,0,36,112,97,117,115,101,0,0,98,100,103,106,108,109,110,114,118,119,122,97,101,105,111,117,121,0,0,0,0,0,0,0,47,112,114,111,99,47,37,100,47,115,116,97,116,0,0,0,37,115,37,99,37,115,37,99,37,115,37,115,0,0,0,0,95,37,100,37,99,0,0,0,116,116,115,58,99,104,97,114,0,0,0,0,0,0,0,0,101,115,112,101,97,107,58,32,66,97,100,32,105,110,116,111,110,97,116,105,111,110,32,100,97,116,97,10,0,0,0,0,37,51,100,9,37,115,32,91,37,115,93,10,0,0,0,0,45,119,32,111,112,116,105,111,110,32,109,117,115,116,32,98,101,32,117,115,101,100,32,98,101,99,97,117,115,101,32,116,104,101,32,112,114,111,103,114,97,109,32,119,97,115,32,98,117,105,108,116,32,119,105,116,104,111,117,116,32,97,32,115,111,117,110,100,32,105,110,116,101,114,102,97,99,101,10,0,37,100,0,0,0,0,0,0,37,100,32,37,100,32,37,100,0,0,0,0,0,0,0,0,36,117,51,43,0,0,0,0,98,99,100,102,103,106,107,109,110,112,113,115,116,118,120,122,0,0,0,0,0,0,0,0,109,98,114,111,108,97,58,32,37,115,10,0,0,0,0,0,95,37,100,37,99,120,0,0,69,109,112,116,121,32,95,100,105,99,116,32,102,105,108,101,58,32,39,37,115,10,0,0,99,104,97,114,97,99,116,101,114,115,0,0,0,0,0,0,39,32,91,37,115,93,32,32,37,115,10,0,0,0,0,0,67,97,110,39,116,32,119,114,105,116,101,32,116,111,32,111,117,116,112,117,116,32,102,105,108,101,32,39,37,115,39,10,39,0,0,0,0,0,0,0,37,115,32,37,100,32,37,100,0,0,0,0,0,0,0,0,36,117,50,43,0,0,0,0,101,0,0,0,0,0,0,0,45,46,119,97,118,0,0,0,95,37,100,102,0,0,0,0,112,105,116,99,104,0,0,0,70,111,117,110,100,58,32,39,37,115,0,0,0,0,0,0,37,115,102,105,108,101,32,39,37,115,39,10,0,0,0,0,37,51,100,0,0,0,0,0,37,100,0,0,0,0,0,0,36,117,49,43,0,0,0,0,106,118,114,0,0,0,0,0,45,0,0,0,0,0,0,0,95,37,100,102,120,0,0,0,105,99,111,110,0,0,0,0,70,111,117,110,100,58,32,39,37,115,32,37,115,10,0,0,114,0,0,0,0,0,0,0,37,100,32,37,100,32,37,100,32,37,100,0,0,0,0,0,107,112,115,116,0,0,0,0,36,117,43,0,0,0,0,0,45,118,0,0,0,0,0,0,95,100,112,116,50,0,0,0,115,112,101,108,108,105,110,103,0,0,0,0,0,0,0,0,70,108,97,103,115,58,32,32,37,115,32,32,37,115,10,0,37,115,118,111,105,99,101,32,39,37,115,39,10,0,0,0,66,97,100,32,111,112,116,105,111,110,32,110,117,109,98,101,114,32,37,100,10,0,0,0,104,98,115,0,0,0,0,0,36,117,51,0,0,0,0,0,45,101,0,0,0,0,0,0,110,65,0,0,0,0,0,0,102,101,109,97,108,101,0,0,37,99,37,115,0,0,0,0,110,111,0,0,0,0,0,0,101,115,0,0,0,0,0,0,95,104,121,0,0,0,0,0,100,101,102,97,117,108,116,0,85,110,107,110,111,119,110,32,116,117,110,101,32,39,37,115,39,10,0,0,0,0,0,0,97,101,105,111,117,121,0,0,36,117,50,0,0,0,0,0,109,98,114,111,108,97,0,0,116,65,0,0,0,0,0,0,82,73,70,70,0,0,0,0,95,37,99,100,0,0,0,0,115,111,109,101,0,0,0,0,115,0,0,0,0,0,0,0,105,110,102,105,110,105,116,121,0,0,0,0,0,0,0,0,115,112,101,97,107,32,116,101,120,116,45,116,111,45,115,112,101,101,99,104,58,32,37,115,32,32,32,68,97,116,97,32,97,116,58,32,37,115,10,0,95,48,108,97,110,103,0,0,78,85,76,76,0,0,0,0,95,122,104,0,0,0,0,0,36,117,49,0,0,0,0,0,37,103,0,0,0,0,0,0,116,115,0,0,0,0,0,0,95,48,90,37,100,0,0,0,97,108,108,0,0,0,0,0,97,100,100,32,101,10,0,0,66,97,100,32,118,97,108,117,101,32,102,111,114,32,45,105,112,97,61,10,0,0,0,0,37,115,32,37,115,32,37,115,32,37,115,32,37,115,32,37,115,0,0,0,0,0,0,0,95,106,97,0,0,0,0,0,108,105,115,116,0,0,0,0,36,117,0,0,0,0,0,0,100,117,112,50,40,41,58,32,37,115,10,0,0,0,0,0,112,104,111,110,105,110,100,101,120,0,0,0,0,0,0,0,110,103,0,0,0,0,0,0,37,115,37,115,37,115,37,99,37,115,0,0,0,0,0,0,47,117,115,114,47,115,104,97,114,101,47,109,98,114,111,108,97,47,37,115,47,37,115,0,110,111,110,101,0,0,0,0,117,0,0,0,0,0,0,0,67,97,110,39,116,32,119,114,105,116,101,32,116,111,58,32,37,115,10,0,0,0,0,0,37,100,32,37,100,0,0,0,95,98,114,97,105,108,108,101,0,0,0,0,0,0,0,0,36,55,0,0,0,0,0,0,102,111,114,107,40,41,58,32,37,115,0,0,0,0,0,0,110,100,0,0,0,0,0,0,37,115,37,115,37,99,37,115,37,115,0,0,0,0,0,0,37,99,37,115,37,99,37,115,37,99,0,0,0,0,0,0,91,2,37,115,93,93,0,0,110,115,0,0,0,0,0,0,37,115,58,32,0,0,0,0,119,0,0,0,0,0,0,0,37,115,0,0,0,0,0,0,95,101,116,104,0,0,0,0,109,98,114,111,108,97,32,105,110,105,116,32,114,101,113,117,101,115,116,32,119,104,101,110,32,97,108,114,101,97,100,121,32,105,110,105,116,105,97,108,105,122,101,100,0,0,0,0,36,54,0,0,0,0,0,0,109,98,0,0,0,0,0,0,37,0,0,0,0,0,0,0,115,111,120,32,34,37,115,34,32,45,114,32,37,100,32,45,99,49,32,45,116,32,119,97,118,32,37,115,10,0,0,0,97,116,104,0,0,0,0,0,10,115,112,101,97,107,32,116,101,120,116,45,116,111,45,115,112,101,101,99,104,58,32,37,115,32,32,32,68,97,116,97,32,97,116,58,32,37,115,10,37,115,0,0,0,0,0,0,37,120,0,0,0,0,0,0,45,0,0,0,0,0,0,0,95,107,111,0,0,0,0,0,114,101,97,100,40,41,58,32,37,115,0,0,0,0,0,0,36,53,0,0,0,0,0,0,104,65,0,0,0,0,0,0,95,37,100,110,0,0,0,0,67,97,110,39,116,32,114,101,97,100,32,100,105,99,116,105,111,110,97,114,121,32,102,105,108,101,58,32,39,37,115,39,10,0,0,0,0,0,0,0,47,116,109,112,47,101,115,112,101,97,107,88,88,88,88,88,88,0,0,0,0,0,0,0,117,114,0,0,0,0,0,0,37,100,0,0,0,0,0,0,118,97,114,105,97,110,116,0,95,107,97,0,0,0,0,0,119,114,105,116,101,40,41,58,32,37,115,0,0,0,0,0,36,52,0,0,0,0,0,0,103,99,0,0,0,0,0,0,95,46,0,0,0,0,0,0,114,98,0,0,0,0,0,0,105,114,0,0,0,0,0,0,97,58,98,58,102,58,103,58,104,107,58,108,58,112,58,113,115,58,118,58,119,58,120,88,109,122,0,0,0,0,0,0,32,32,32,0,0,0,0,0,37,115,32,37,100,0,0,0,95,109,121,0,0,0,0,0,109,98,114,111,108,97,32,112,114,111,99,101,115,115,32,105,115,32,115,116,97,108,108,101,100,0,0,0,0,0,0,0,36,51,0,0,0,0,0,0,100,116,0,0,0,0,0,0,67,97,110,39,116,32,114,101,97,100,32,100,97,116,97,32,102,105,108,101,58,32,39,37,115,39,10,0,0,0,0,0,95,48,77,37,100,0,0,0,37,115,37,99,115,111,117,110,100,105,99,111,110,115,37,99,37,115,0,0,0,0,0,0,114,115,0,0,0,0,0,0,70,97,105,108,101,100,32,116,111,32,114,101,97,100,32,0,43,37,115,0,0,0,0,0,95,116,105,0,0,0,0,0,112,111,108,108,40,41,58,32,37,115,0,0,0,0,0,0,36,50,0,0,0,0,0,0,98,104,102,0,0,0,0,0,114,98,0,0,0,0,0,0,95,100,112,116,0,0,0,0,32,37,115,32,37,100,32,37,115,0,0,0,0,0,0,0,99,0,0,0,0,0,0,0,33,118,0,0,0,0,0,0,118,101,114,115,105,111,110,0,101,110,0,0,0,0,0,0,95,108,111,0,0,0,0,0,44,32,40,37,115,41,0,0,36,49,0,0,0,0,0,0,98,112,0,0,0,0,0,0,109,97,108,101,0,0,0,0,73,110,118,97,108,105,100,32,105,110,115,116,114,117,99,116,105,111,110,32,37,46,52,120,32,102,111,114,32,112,104,111,110,101,109,101,32,39,37,115,39,10,0,0,0,0,0,0,95,48,0,0,0,0,0,0,32,1,45,49,48,83,0,0,105,111,110,0,0,0,0,0,95,99,121,114,0,0,0,0,105,112,97,0,0,0,0,0,114,0,0,0,0,0,0,0,95,116,104,0,0,0,0,0,109,98,114,111,119,114,97,112,32,101,114,114,111,114,58,32,37,115,0,0,0,0,0,0,80,83,65,82,72,84,73,86,89,77,85,66,70,0,0,0,112,95,97,108,116,0,0,0,117,110,97,98,108,101,32,116,111,32,103,101,116,32,46,119,97,118,32,104,101,97,100,101,114,32,102,114,111,109,32,109,98,114,111,108,97,0,0,0,95,37,99,32,37,115,0,0,9,49,48,48,32,37,100,10,0,0,0,0,0,0,0,0,95,120,35,37,115,0,0,0,1,43,49,48,83,0,0,0,82,101,112,108,97,99,101,58,32,37,115,32,32,37,115,10,0,0,0,0,0,0,0,0,112,104,111,0,0,0,0,0,37,115,10,10,0,0,0,0,37,115,116,101,115,116,37,99,37,115,0,0,0,0,0,0,95,115,105,0,0,0,0,0,109,98,114,111,108,97,32,100,105,101,100,32,97,110,100,32,119,97,105,116,32,115,116,97,116,117,115,32,105,115,32,119,101,105,114,100,0,0,0,0,95,94,95,0,0,0,0,0,112,95,97,108,116,54,0,0,115,111,117,110,100,105,99,111,110,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,95,35,37,115,0,0,0,0,32,37,115,0,0,0,0,0,37,115,32,0,0,0,0,0,112,104,111,110,111,117,116,0,37,115,37,115,37,99,37,115,0,0,0,0,0,0,0,0,95,109,108,0,0,0,0,0,109,98,114,111,108,97,32,101,120,105,116,101,100,32,119,105,116,104,32,115,116,97,116,117,115,32,37,100,0,0,0,0,112,104,111,110,116,97,98,0,39,10,0,0,0,0,0,0,110,111,112,114,101,102,105,120,0,0,0,0,0,0,0,0,112,95,97,108,116,53,0,0,37,100,0,0,0,0,0,0,32,37,100,32,37,100,0,0,32,32,37,100,32,37,115,32,32,32,32,0,0,0,0,0,47,117,115,114,47,115,104,97,114,101,47,109,98,114,111,108,97,47,37,115,0,0,0,0,95,46,112,0,0,0,0,0,37,99,37,115,0,0,0,0,112,97,116,104,0,0,0,0,111,116,104,101,114,0,0,0,95,107,110,0,0,0,0,0,109,98,114,111,108,97,32,100,105,101,100,32,98,121,32,115,105,103,110,97,108,32,37,100,0,0,0,0,0,0,0,0,87,79,82,68,58,32,102,108,103,61,37,46,53,120,32,108,101,110,61,37,100,32,32,39,0,0,0,0,0,0,0,0,112,95,97,108,116,52,0,0,112,97,95,100,101,118,105,99,101,0,0,0,0,0,0,0,32,48,32,37,100,0,0,0,95,114,111,109,97,110,0,0,37,115,37,99,37,99,37,115,0,0,0,0,0,0,0,0,1,37,100,73,32,0,0,0,84,114,97,110,115,108,97,116,101,32,39,37,115,39,10,0,97,112,111,115,0,0,0,0,115,112,108,105,116,0,0,0,110,98,115,112,0,0,0,0,37,115,37,99,37,115,95,100,105,99,116,0,0,0,0,0,113,117,111,116,0,0,0,0,67,97,110,39,116,32,97,99,99,101,115,115,32,40,37,115,41,32,102,105,108,101,32,39,37,115,39,10,0,0,0,0,97,115,105,97,0,0,0,0,97,109,112,0,0,0,0,0,95,116,101,0,0,0,0,0,37,53,100,58,32,84,119,111,32,109,97,110,121,32,112,97,114,116,115,32,105,110,32,97,32,109,117,108,116,105,45,119,111,114,100,32,101,110,116,114,121,58,32,37,100,10,0,0,119,97,105,116,112,105,100,40,41,32,105,115,32,99,111,110,102,117,115,101,100,0,0,0,108,116,0,0,0,0,0,0,69,78,68,67,76,65,85,83,69,10,0,0,0,0,0,0,85,43,37,120,0,0,0,0,112,95,97,108,116,51,0,0,103,116,0,0,0,0,0,0,37,53,100,58,32,66,97,100,32,112,104,111,110,101,109,101,32,91,37,115,93,32,40,85,43,37,120,41,32,105,110,58,32,37,115,32,32,37,115,10,0,0,0,0,0,0,0,0,116,111,110,101,0,0,0,0,95,32,9,37,100,10,0,0,99,111,100,101,0,0,0,0,37,53,100,58,32,78,101,101,100,32,116,111,32,99,111,109,112,105,108,101,32,100,105,99,116,105,111,110,97,114,121,32,97,103,97,105,110,10,0,0,105,120,99,109,118,108,100,0,101,109,0,0,0,0,0,0,32,0,0,0,0,0,0,0,105,0,0,0,0,0,0,0,37,53,100,58,32,77,105,115,115,105,110,103,32,39,40,39,10,0,0,0,0,0,0,0,91,2,40,88,49,41,40,88,49,41,40,88,49,41,93,93,0,0,0,0,0,0,0,0,85,110,112,114,111,110,111,117,110,99,97,98,108,101,63,32,39,37,115,39,10,0,0,0,98,0,0,0,0,0,0,0,37,53,100,58,32,85,110,107,110,111,119,110,32,107,101,121,119,111,114,100,58,32,37,115,10,0,0,0,0,0,0,0,102,111,110,116,0,0,0,0,9,37,100,32,101,110,116,114,105,101,115,10,0,0,0,0,115,116,100,111,117,116,0,0,115,116,121,108,101,0,0,0,67,97,110,39,116,32,97,108,108,111,99,97,116,101,32,109,101,109,111,114,121,10,0,0,115,99,114,105,112,116,0,0,37,115,37,99,37,99,0,0,37,115,37,115,0,0,0,0,101,117,114,111,112,101,0,0,104,114,0,0,0,0,0,0,95,116,97,0,0,0,0,0,37,115,37,115,46,116,120,116,0,0,0,0,0,0,0,0,109,98,114,111,108,97,32,99,108,111,115,101,100,32,115,116,100,101,114,114,32,97,110,100,32,100,105,100,32,110,111,116,32,101,120,105,116,0,0,0,104,52,0,0,0,0,0,0,67,76,65,85,83,69,32,37,120,58,10,0,0,0,0,0,57,0,0,0,0,0,0,0,112,95,97,108,116,50,0,0,104,51,0,0,0,0,0,0,37,53,100,58,32,108,101,116,116,101,114,103,114,111,117,112,32,76,37,46,50,100,32,105,115,32,97,108,114,101,97,100,121,32,100,101,102,105,110,101,100,10,0,0,0,0,0,0,119,0,0,0,0,0,0,0,37,100,37,115,10,0,0,0,104,50,0,0,0,0,0,0,37,53,100,58,32,108,101,116,116,101,114,103,114,111,117,112,32,111,117,116,32,111,102,32,114,97,110,103,101,32,40,48,49,45,37,46,50,100,41,10,0,0,0,0,0,0,0,0,37,99,37,115,37,115,37,115,0,0,0,0,0,0,0,0,104,49,0,0,0,0,0,0,114,98,0,0,0,0,0,0,37,53,100,58,32,69,120,112,101,99,116,101,100,32,50,32,100,105,103,105,116,115,32,97,102,116,101,114,32,39,46,76,39,10,0,0,0,0,0,0,116,100,0,0,0,0,0,0,37,53,100,58,32,36,32,99,111,109,109,97,110,100,32,110,111,116,32,114,101,99,111,103,110,105,122,101,100,10,0,0,91,2,37,115,93,93,32,0,105,109,103,0,0,0,0,0,37,53,100,58,32,76,101,116,116,101,114,32,103,114,111,117,112,32,76,37,46,50,100,32,110,111,116,32,100,101,102,105,110,101,100,10,0,0,0,0,100,100,0,0,0,0,0,0,37,53,100,58,32,69,120,112,101,99,116,101,100,32,50,32,100,105,103,105,116,115,32,97,102,116,101,114,32,39,76,39,10,0,0,0,0,0,0,0,118,111,105,99,101,115,0,0,108,105,0,0,0,0,0,0,37,99,37,115,0,0,0,0,98,114,0,0,0,0,0,0,37,53,100,58,32,98,97,100,32,99,111,110,100,105,116,105,111,110,32,110,117,109,98,101,114,32,63,37,100,10,0,0,37,115,32,0,0,0,0,0,109,101,116,97,100,97,116,97,0,0,0,0,0,0,0,0,95,111,114,0,0,0,0,0,37,53,100,58,32,87,114,111,110,103,32,105,110,105,116,105,97,108,32,108,101,116,116,101,114,115,32,39,37,115,39,32,102,111,114,32,103,114,111,117,112,32,39,37,115,39,10,0,109,98,114,111,108,97,58,32,37,115,0,0,0,0,0,0,98,114,101,97,107,0,0,0,101,115,45,108,97,0,0,0,37,53,100,58,32,66,97,100,32,112,104,111,110,101,109,101,32,91,37,115,93,32,40,85,43,37,120,41,32,105,110,58,32,37,115,10,0,0,0,0,112,95,97,108,116,49,0,0,101,109,112,104,97,115,105,115,0,0,0,0,0,0,0,0,37,53,100,58,32,83,121,110,116,97,120,32,101,114,114,111,114,10,0,0,0,0,0,0,47,47,0,0,0,0,0,0,37,100,32,37,115,0,0,0,37,100,10,37,115,9,0,0,97,117,100,105,111,0,0,0,36,103,114,111,117,112,0,0,97,112,111,115,116,114,111,112,104,101,0,0,0,0,0,0,37,120,0,0,0,0,0,0,116,116,115,58,115,116,121,108,101,0,0,0,0,0,0,0,37,53,100,58,32,83,121,110,116,97,120,32,101,114,114,111,114,46,32,83,112,97,99,101,32,97,102,116,101,114,32,40,10,0,0,0,0,0,0,0,108,95,108,101,110,103,116,104,95,109,111,100,115,0,0,0,115,117,98,0,0,0,0,0,9,37,100,32,114,117,108,101,115,44,32,37,100,32,103,114,111,117,112,115,32,40,37,100,41,10,10,0,0,0,0,0,91,2,95,94,95,37,115,32,37,115,32,95,94,95,37,115,93,93,0,0,0,0,0,0,108,95,115,111,110,111,114,97,110,116,95,109,105,110,0,0,61,61,44,44,39,39,0,0,112,104,111,110,101,109,101,0,10,0,0,0,0,0,0,0,108,95,117,110,112,114,111,110,111,117,110,99,97,98,108,101,0,0,0,0,0,0,0,0,112,0,0,0,0,0,0,0,114,98,0,0,0,0,0,0,112,117,110,99,116,0,0,0,80,116,121,32,76,97,110,103,117,97,103,101,32,65,103,101,47,71,101,110,100,101,114,32,86,111,105,99,101,78,97,109,101,32,32,32,32,32,32,32,32,32,32,70,105,108,101,32,32,32,32,32,32,32,32,32,32,79,116,104,101,114,32,76,97,110,103,117,97,103,101,115,10,0,0,0,0,0,0,0,67,97,110,39,116,32,97,108,108,111,99,97,116,101,32,109,101,109,111,114,121,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,7,0,8,0,9,0,10,0,11,0,13,0,14,0,16,0,18,0,20,0,22,0,25,0,28,0,32,0,35,0,40,0,45,0,51,0,57,0,64,0,71,0,80,0,90,0,101,0,114,0,128,0,142,0,159,0,179,0,202,0,227,0,0,1,28,1,62,1,103,1,149,1,199,1,0,2,56,2,126,2,207,2,113,3,143,3,0,4,113,4,252,4,158,5,86,6,31,7,0,8,225,8,248,9,59,11,172,12,61,14,0,16,195,17,240,19,119,22,88,25,123,28,0,32,133,35,223,39,238,44,176,50,246,56,0,64,174,71,164,80,133,91,102,102,51,115,255,127,255,31,15,7,0,0,0,0,176,4,118,4,64,4,14,4,223,3,180,3,139,3,101,3,65,3,31,3,0,3,226,2,198,2,171,2,146,2,122,2,100,2,78,2,58,2,39,2,21,2,3,2,243,1,227,1,212,1,198,1,184,1,171,1,159,1,147,1,135,1,124,1,114,1,104,1,94,1,85,1,76,1,67,1,59,1,51,1,44,1,36,1,29,1,22,1,16,1,9,1,3,1,253,0,247,0,242,0,237,0,231,0,226,0,221,0,217,0,212,0,208,0,204,0,199,0,195,0,192,0,188,0,184,0,180,0,177,0,174,0,170,0,167,0,164,0,161,0,158,0,155,0,153,0,150,0,147,0,145,0,142,0,140,0,137,0,135,0,133,0,131,0,128,0,126,0,124,0,122,0,120,0,119,0,117,0,115,0,113,0,111,0,110,0,108,0,106,0,105,0,103,0,102,0,100,0,99,0,97,0,96,0,95,0,93,0,92,0,91,0,90,0,88,0,87,0,86,0,85,0,84,0,83,0,82,0,80,0,79,0,78,0,77,0,76,0,75,0,75,0,74,0,73,0,72,0,71,0,70,0,69,0,68,0,68,0,67,0,66,0,65,0,64,0,64,0,63,0,62,0,61,0,61,0,60,0,59,0,59,0,58,0,57,0,57,0,56,0,56,0,55,0,55,0,54,0,54,0,53,0,53,0,52,0,52,0,51,0,51,0,50,0,50,0,49,0,49,0,48,0,48,0,47,0,47,0,46,0,46,0,45,0,45,0,44,0,44,0,43,0,43,0,42,0,42,0,41,0,41,0,41,0,41,0,40,0,40,0,39,0,39,0,38,0,38,0,38,0,38,0,37,0,37,0,36,0,36,0,36,0,36,0,35,0,35,0,35,0,35,0,34,0,34,0,33,0,33,0,33,0,33,0,32,0,32,0,32,0,32,0,31,0,31,0,31,0,31,0,30,0,30,0,30,0,30,0,29,0,29,0,29,0,29,0,28,0,28,0,28,0,28,0,27,0,27,0,0,0,0,0,216,75,0,0,16,76,0,0,136,76,0,0,80,76,0,0,0,0,0,0,192,34,0,0,100,0,0,0,160,32,0,0,60,0,0,0,112,32,0,0,80,0,0,0,160,52,0,0,100,0,0,0,40,32,0,0,125,0,0,0,232,31,0,0,160,0,0,0,0,0,0,0,255,255,255,255,192,34,0,0,100,0,0,0,120,33,0,0,0,0,0,0,88,33,0,0,30,0,0,0,40,33,0,0,65,0,0,0,160,52,0,0,100,0,0,0,0,33,0,0,150,0,0,0,216,32,0,0,230,0,0,0,0,0,0,0,255,255,255,255,192,34,0,0,100,0,0,0,200,31,0,0,20,0,0,0,160,31,0,0,50,0,0,0,160,52,0,0,100,0,0,0,120,31,0,0,140,0,0,0,56,31,0,0,180,0,0,0,0,0,0,0,255,255,255,255,192,34,0,0,100,0,0,0,200,31,0,0,70,0,0,0,160,31,0,0,85,0,0,0,160,52,0,0,100,0,0,0,120,31,0,0,110,0,0,0,56,31,0,0,120,0,0,0,0,0,0,0,255,255,255,255,230,32,20,8,0,0,0,0,150,0,140,0,220,0,220,0,0,0,0,0,4,1,24,1,16,16,18,18,20,24,24,22,44,21,24,46,47,0,0,0,17,18,19,20,22,23,0,0,44,25,39,41,0,0,0,0,42,22,38,40,0,0,0,0,17,18,19,20,23,25,26,27,28,29,31,32,33,34,36,37,39,41,44,0,0,0,0,0,44,46,47,49,0,0,0,0,24,36,0,0,1,0,0,0,232,35,0,0,2,0,0,0,192,35,0,0,3,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,83,65,80,82,0,67,0,0,0,0,0,70,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,168,203,104,65,0,0,0,0,168,203,104,193,0,0,0,0,0,0,0,0,168,160,1,0,40,161,1,0,88,233,1,0,88,160,1,0,224,188,1,0,0,0,0,0,0,1,2,0,0,4,5,3,6,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,4,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,72,34,0,0,32,224,0,0,8,34,0,0,9,224,0,0,208,33,0,0,95,224,0,0,168,33,0,0,34,0,0,0,0,0,0,0,0,0,0,0,50,50,40,70,90,100,0,0,100,100,75,100,120,150,0,0,100,100,70,110,135,150,0,0,0,54,0,0,1,0,0,0,0,0,0,0,255,255,255,255,240,56,0,0,18,0,0,0,248,55,0,0,20,0,0,0,112,55,0,0,36,0,0,0,232,54,0,0,64,0,0,0,80,54,0,0,193,0,0,0,0,0,0,0,255,255,255,255,24,60,0,0,1,0,0,0,160,42,0,0,2,0,0,0,96,42,0,0,3,0,0,0,104,43,0,0,4,0,0,0,8,43,0,0,5,0,0,0,0,0,0,0,255,255,255,255,136,58,0,0,0,0,0,0,16,58,0,0,2,0,0,0,192,57,0,0,1,0,0,0,104,57,0,0,20,0,0,0,0,0,0,0,255,255,255,255,0,0,0,0,32,42,0,0,176,41,0,0,104,57,0,0,120,41,0,0,0,0,0,0,0,0,0,0,7,0,0,0,14,0,0,0,21,0,0,0,40,0,0,0,80,0,0,0,24,60,0,0,1,0,0,0,112,59,0,0,2,0,0,0,240,58,0,0,3,0,0,0,0,0,0,0,255,255,255,255,24,60,0,0,0,0,0,0,176,53,0,0,1,0,0,0,32,53,0,0,2,0,0,0,160,52,0,0,3,0,0,0,104,43,0,0,4,0,0,0,8,43,0,0,5,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,0,0,0,0,0,0,64,0,90,0,110,0,128,0,143,0,156,0,169,0,181,0,192,0,202,0,212,0,221,0,230,0,239,0,247,0,0,1,7,1,15,1,22,1,30,1,37,1,44,1,50,1,57,1,64,1,70,1,76,1,82,1,88,1,94,1,100,1,106,1,111,1,117,1,122,1,128,1,133,1,138,1,143,1,148,1,153,1,158,1,163,1,168,1,173,1,178,1,182,1,187,1,192,1,196,1,201,1,205,1,209,1,214,1,218,1,222,1,227,1,231,1,235,1,239,1,243,1,247,1,251,1,0,2,3,2,7,2,11,2,15,2,19,2,23,2,27,2,31,2,34,2,38,2,42,2,45,2,49,2,53,2,56,2,60,2,64,2,67,2,71,2,74,2,78,2,81,2,84,2,88,2,91,2,95,2,98,2,101,2,105,2,108,2,111,2,115,2,118,2,121,2,124,2,128,2,131,2,134,2,137,2])
.concat([140,2,143,2,146,2,150,2,153,2,156,2,159,2,162,2,165,2,168,2,171,2,174,2,177,2,180,2,183,2,186,2,189,2,192,2,194,2,197,2,200,2,203,2,206,2,209,2,212,2,214,2,217,2,220,2,223,2,226,2,228,2,231,2,234,2,237,2,239,2,242,2,245,2,247,2,250,2,253,2,0,3,2,3,5,3,7,3,10,3,13,3,15,3,18,3,21,3,23,3,26,3,28,3,31,3,33,3,36,3,39,3,41,3,44,3,46,3,49,3,51,3,54,3,56,3,59,3,61,3,64,3,66,3,68,3,71,3,73,3,76,3,78,3,81,3,83,3,85,3,88,3,90,3,93,3,95,3,97,3,100,3,102,3,104,3,107,3,109,3,111,3,114,3,116,3,118,3,121,3,123,3,125,3,128,3,130,3,132,3,134,3,0,0,1,170,2,172,173,3,4,5,176,177,178,179,180,180,182,6,7,8,185,9,10,188,12,13,14,15,16,17,18,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,0,0,0,0,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27,28,29,0,0,30,31,32,33,34,35,36,0,37,38,0,0,0,0,39,0,0,40,0,41,0,42,0,43,0,0,0,0,0,0,44,0,45,0,46,0,0,0,0,0,47,0,0,0,48,0,0,0,0,0,0,0,49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,50,0,51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,52,0,0,0,0,0,53,0,54,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,55,0,56,0,57,0,182,0,140,0,220,0,220,0,220,0,240,0,4,1,24,1,39,0,0,0,0,0,0,0,0,1,2,3,0,0,0,0,18,18,20,20,20,22,22,20,82,73,70,70,36,240,255,127,87,65,86,69,102,109,116,32,16,0,0,0,1,0,1,0,9,61,0,0,18,122,0,0,2,0,16,0,100,97,116,97,0,240,255,127,0,0,0,0,51,51,51,51,51,51,227,63,154,153,153,153,153,153,217,63,51,51,51,51,51,51,195,63,184,30,133,235,81,184,174,63,123,20,174,71,225,122,164,63,186,73,12,2,43,135,150,63,184,30,133,235,81,184,158,63,56,38,0,0,0,0,0,0,192,40,0,0,0,0,0,0,89,0,160,0,70,0,160,0,200,0,200,0,244,1,244,1,244,1,89,0,0,0,0,0,0,0,59,0,59,0,59,0,59,0,59,0,59,0,0,0,0,0,0,0,0,0,0,0,59,0,59,0,89,0,149,0,200,0,200,0,244,1,0,0,0,0,0,0,0,0,0,0,24,1,176,2,40,4,246,10,188,12,116,14,100,25,88,27,64,31,24,1,0,0,0,0,0,192,224,240,0,0,0,0,255,31,15,7,0,0,0,0,144,0,0,0,160,0,0,0,176,0,0,0,192,0,0,0,48,0,0,0,48,0,0,0,64,0,0,0,80,0,0,0,0,1,0,0,0,0,0,0,112,10,113,10,0,0,0,0,240,62,0,0,0,0,0,0,184,37,0,0,0,0,0,0,0,0,0,0,104,0,0,0,160,35,0,0,0,0,0,0,0,0,0,0,0,1,0,0,136,33,0,0,2,0,0,0,0,0,0,0,1,1,0,0,176,31,0,0,2,0,0,0,0,0,0,0,2,1,0,0,168,72,0,0,2,0,0,0,0,0,0,0,3,1,0,0,136,70,0,0,2,0,0,0,0,0,0,0,4,1,0,0,120,68,0,0,0,0,0,0,0,0,0,0,5,1,0,0,136,66,0,0,2,0,0,0,0,0,0,0,6,1,0,0,216,65,0,0,1,0,0,0,0,0,0,0,7,1,0,0,40,65,0,0,1,0,0,0,0,0,0,0,8,1,0,0,152,64,0,0,0,0,0,0,0,0,0,0,9,1,0,0,232,63,0,0,2,0,0,0,0,0,0,0,10,1,0,0,96,63,0,0,0,0,0,0,0,0,0,0,11,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,97,3,0,0,13,32,0,0,104,72,0,0,0,0,0,0,243,0,16,1,0,1,0,1,0,1,0,1,0,1,240,0,240,0,240,0,0,0,0,0,97,0,0,0,224,0,0,0,225,0,0,0,163,30,0,0,227,0,0,0,161,30,0,0,3,1,0,0,177,30,0,0,175,30,0,0,179,30,0,0,181,30,0,0,183,30,0,0,226,0,0,0,167,30,0,0,165,30,0,0,169,30,0,0,171,30,0,0,173,30,0,0,101,0,0,0,232,0,0,0,233,0,0,0,187,30,0,0,189,30,0,0,185,30,0,0,234,0,0,0,193,30,0,0,191,30,0,0,195,30,0,0,197,30,0,0,199,30,0,0,105,0,0,0,236,0,0,0,237,0,0,0,201,30,0,0,41,1,0,0,203,30,0,0,111,0,0,0,242,0,0,0,243,0,0,0,207,30,0,0,245,0,0,0,205,30,0,0,244,0,0,0,211,30,0,0,209,30,0,0,213,30,0,0,215,30,0,0,217,30,0,0,161,1,0,0,221,30,0,0,219,30,0,0,223,30,0,0,225,30,0,0,227,30,0,0,117,0,0,0,249,0,0,0,250,0,0,0,231,30,0,0,105,1,0,0,229,30,0,0,176,1,0,0,235,30,0,0,233,30,0,0,237,30,0,0,239,30,0,0,241,30,0,0,121,0,0,0,243,30,0,0,253,0,0,0,247,30,0,0,249,30,0,0,245,30,0,0,0,0,0,0,0,0,0,0,184,55,0,0,0,0,0,0,2,5,6,171,175,183,188,0,48,52,56,61,67,85,87,0,49,53,55,56,59,72,85,0,16,44,45,46,47,48,49,53,55,57,63,69,73,74,75,76,77,78,79,0,0,0,0,0,46,0,0,0,44,0,0,0,39,0,0,0,200,2,0,0,0,0,0,0,0,0,0,0,230,0,230,0,230,0,230,0,0,0,0,0,230,0,230,0,39,0,0,0,183,0,0,0,0,0,0,0,0,0,0,0,230,0,230,0,240,0,240,0,0,0,0,0,4,1,4,1,145,0,145,0,170,0,160,0,0,0,0,0,74,1,94,1,108,0,0,0,0,0,0,0,195,3,0,0,0,0,0,0,230,0,150,0,230,0,230,0,230,0,0,0,240,0,250,0,150,0,150,0,180,0,180,0,210,0,230,0,230,0,240,0,190,0,180,0,200,0,230,0,0,0,0,0,240,0,250,0,190,0,180,0,230,0,230,0,0,0,0,0,250,0,250,0,200,0,200,0,210,0,210,0,0,0,0,0,230,0,230,0,160,0,170,0,200,0,200,0,0,0,0,0,64,1,84,1,160,0,135,0,220,0,220,0,0,0,0,0,250,0,24,1,160,0,150,0,200,0,200,0,0,0,0,0,250,0,4,1,150,0,150,0,180,0,180,0,0,0,0,0,44,1,44,1,190,0,190,0,210,0,210,0,0,0,0,0,210,0,210,0,170,0,170,0,180,0,180,0,0,0,0,0,240,0,4,1,170,0,115,0,210,0,240,0,0,0,0,0,4,1,24,1,160,0,190,0,175,0,175,0,0,0,0,0,200,0,210,0,200,0,200,0,200,0,200,0,0,0,0,0,200,0,200,0,160,0,140,0,200,0,200,0,0,0,0,0,220,0,230,0,160,0,135,0,210,0,210,0,0,0,0,0,4,1,24,1,180,0,160,0,240,0,240,0,0,0,0,0,4,1,4,1,180,0,160,0,200,0,200,0,0,0,0,0,220,0,230,0,180,0,130,0,210,0,210,0,0,0,0,0,210,0,210,0,180,0,180,0,190,0,180,0,0,0,0,0,230,0,240,0,150,0,140,0,170,0,170,0,0,0,0,0,44,1,74,1,180,0,160,0,200,0,200,0,0,0,0,0,240,0,250,0,160,0,200,0,180,0,180,0,0,0,0,0,220,0,240,0,250,0,200,0,250,0,250,0,0,0,0,0,250,0,250,0,185,0,195,0,195,0,190,0,0,0,0,0,210,0,220,0,180,0,160,0,200,0,200,0,0,0,0,0,220,0,230,0,190,0,190,0,210,0,210,0,0,0,0,0,230,0,250,0,190,0,170,0,190,0,200,0,0,0,0,0,190,0,240,0,150,0,180,0,200,0,200,0,0,0,0,0,210,0,250,0,200,0,200,0,200,0,200,0,0,0,0,0,210,0,230,0,180,0,190,0,230,0,180,0,0,0,0,0,240,0,14,1,150,0,150,0,230,0,180,0,0,0,0,0,44,1,64,1,182,0,140,0,220,0,220,0,0,0,0,0,248,0,19,1,155,0,180,0,210,0,210,0,0,0,0,0,14,1,44,1,150,0,130,0,200,0,200,0,0,0,0,0,14,1,14,1,160,0,140,0,200,0,200,0,0,0,0,0,220,0,230,0,170,0,220,0,180,0,180,0,0,0,0,0,250,0,14,1,180,0,180,0,210,0,210,0,0,0,0,0,230,0,240,0,170,0,140,0,220,0,220,0,0,0,0,0,250,0,14,1,19,19,19,19,19,19,19,19,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,0,0,0,0,0,0,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,0,0,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,45,0,0,0,0,0,0,0,46,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,47,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,0,0,0,0,0,49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,50,0,0,0,0,0,0,0,0,0,0,0,51,0,0,0,99,0,0,0,102,0,0,0,104,0,0,0,107,0,0,0,112,0,0,0,116,0,0,0,120,0,0,0,254,0,0,0,0,0,0,0,0,0,0,0,64,4,0,0,48,4,0,0,53,4,0,0,56,4,0,0,57,4,0,0,62,4,0,0,67,4,0,0,75,4,0,0,77,4,0,0,78,4,0,0,79,4,0,0,80,4,0,0,81,4,0,0,86,4,0,0,87,4,0,0,93,4,0,0,94,4,0,0,0,0,0,0,22,16,22,22,22,22,22,22,16,16,16,16,22,22,22,22,18,16,20,21,20,21,21,20,18,16,20,21,20,21,21,20,18,18,18,18,20,20,22,22,16,12,19,19,20,22,22,21,16,16,20,20,20,22,22,21,16,12,16,16,20,20,21,19,17,16,20,20,20,22,22,21,15,13,18,18,20,22,22,21,16,11,19,21,20,22,22,21,17,13,19,19,20,22,22,21,18,15,20,20,20,22,22,22,17,17,20,20,20,22,22,21,17,13,20,20,20,22,22,21,18,18,20,20,20,22,22,21,15,14,19,19,20,22,22,20,16,18,18,18,20,22,22,21,17,17,19,19,20,22,22,21,17,17,20,20,20,22,22,21,17,14,20,19,20,22,22,21,18,16,18,18,18,18,18,18,18,16,22,22,20,22,22,22,16,16,18,18,18,18,18,18,16,12,18,18,20,20,20,20,16,14,20,20,20,22,22,21,15,12,20,20,20,22,22,21,20,20,20,20,20,22,22,20,17,15,18,18,0,0,22,20,18,18,18,18,20,20,22,22,69,0,0,0,0,0,0,0,49,50,51,53,54,55,57,58,59,60,62,63,64,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,86,0,0,0,0,0,0,0,50,51,52,54,57,58,60,61,62,63,64,65,66,67,68,70,71,73,74,75,76,77,78,79,80,81,82,83,84,86,0,0,50,51,52,54,56,58,59,60,61,62,64,65,66,67,68,70,71,72,0,0,0,0,0,0,56,58,62,64,66,67,68,70,71,0,0,0,0,0,0,0,99,100,103,104,109,114,116,117,0,0,0,0,0,0,0,0,45,46,47,53,55,57,69,77,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,2,3,88,89,90,91,92,93,94,95,123,124,126,127,0,0,96,97,85,86,87,98,99,0,6,7,8,3,0,0,0,0,11,0,0,0,0,0,0,0,208,67,0,0,0,0,0,0,1,0,0,0,10,0,0,0,100,0,0,0,232,3,0,0,5,0,0,0,50,0,0,0,244,1,0,0,0,0,0,0,56,35,0,0,0,0,0,0,0,122,122,0,0,0,0,0,0,115,115,0,0,0,0,0,0,105,122,0,0,0,0,0,0,0,1,1,2,3,3,4,5,6,7,7,8,9,10,11,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,2,2,3,3,4,5,6,7,7,8,9,10,0,0,1,2,3,3,3,4,5,6,7,7,7,8,9,10,0,1,0,0,1,1,0,1,1,2,4,0,0,0,0,0,45,77,70,45,0,0,0,0,216,63,0,0,0,0,0,0,80,63,0,0,232,62,0,0,56,62,0,0,232,61,0,0,48,61,0,0,160,60,0,0,32,60,0,0,0,0,0,0,16,16,10,16,22,0,0,0,130,128,120,116,100,100,128,128,128,0,0,0,0,0,0,0,140,128,128,160,171,171,128,128,128,0,0,0,0,0,0,0,0,0,0,0,200,0,0,0,200,0,0,0,144,1,0,0,144,1,0,0,144,1,0,0,88,2,0,0,88,2,0,0,88,2,0,0,0,0,0,0,255,255,255,255,0,0,0,0,32,32,32,32,32,32,32,32,32,32,38,37,43,35,83,68,90,65,76,33,32,64,63,74,78,75,86,63,84,88,63,87,65,66,67,72,70,71,89,0,88,34,0,0,0,0,0,0,16,21,49,24,30,35,43,45,46,47,185,201,145,143,54,0,255,254,254,254,254,254,254,254,254,254,253,253,253,253,252,252,252,251,251,251,250,250,249,249,248,248,247,247,246,245,245,244,243,243,242,241,239,237,235,233,231,229,227,225,223,221,218,216,213,211,208,205,203,200,197,194,191,187,184,181,178,174,171,167,163,160,156,152,148,144,140,136,132,127,123,119,114,110,105,100,96,94,91,88,86,83,81,78,76,74,71,69,66,64,62,60,57,55,53,51,49,47,44,42,40,38,36,34,32,30,29,27,25,23,21,19,18,16,14,12,11,9,7,6,4,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,52,32,20,10,0,0,0,0,0,0,0,64,34,0,0,0,34,0,0,0,0,0,0,112,43,0,0,0,0,0,0,0,0,0,0,1,1,1,2,2,3,3,4,4,5,6,6,7,8,8,9,10,11,12,12,13,14,15,16,17,18,19,20,22,23,24,25,27,28,29,31,32,34,35,37,38,40,41,43,45,47,48,50,52,54,56,58,60,62,64,66,68,71,73,75,78,80,82,85,87,90,93,95,98,101,103,106,109,112,115,118,121,124,127,130,134,137,140,144,147,150,154,157,160,163,166,169,172,175,178,181,184,187,190,193,196,199,202,205,208,211,214,217,220,223,226,228,231,233,236,238,240,242,244,246,248,250,251,253,254,254,253,253,252,251,251,250,250,249,248,248,247,247,246,246,245,244,244,243,243,242,242,241,240,240,239,238,238,237,236,235,234,234,233,232,231,230,229,228,227,226,225,224,222,221,220,219,217,216,214,213,211,210,208,206,204,203,201,199,197,195,192,190,188,185,183,181,178,175,173,170,167,164,161,158,154,151,148,144,141,137,133,129,125,121,117,113,109,104,100,97,94,91,87,84,81,77,74,70,67,64,60,57,53,50,46,42,39,35,31,28,24,20,17,13,11,9,7,5,4,3,2,1,0,0,0,0,0,0,0,2,3,5,8,11,14,18,22,27,32,37,43,49,55,62,69,76,83,90,98,105,113,121,128,136,144,152,159,166,174,181,188,194,201,207,213,218,224,228,233,237,240,244,246,249,251,252,253,253,253,253,252,251,249,246,244,240,237,233,228,224,218,213,207,201,194,188,181,174,166,159,152,144,136,128,121,113,105,98,90,83,76,69,62,55,49,43,37,32,27,22,18,14,11,8,5,3,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,232,30,0,0,1,0,0,0,168,30,0,0,2,0,0,0,104,30,0,0,3,0,0,0,32,30,0,0,4,0,0,0,240,29,0,0,5,0,0,0,160,29,0,0,6,0,0,0,152,72,0,0,7,0,0,0,112,72,0,0,8,0,0,0,24,72,0,0,9,0,0,0,208,71,0,0,10,0,0,0,168,71,0,0,11,0,0,0,104,71,0,0,12,0,0,0,40,71,0,0,13,0,0,0,208,70,0,0,14,0,0,0,160,70,0,0,15,0,0,0,144,70,0,0,15,0,0,0,88,70,0,0,15,0,0,0,40,70,0,0,15,0,0,0,248,69,0,0,15,0,0,0,192,69,0,0,7,0,0,0,120,69,0,0,7,0,0,0,48,69,0,0,7,0,0,0,8,69,0,0,7,0,0,0,192,68,0,0,7,0,0,0,160,68,0,0,14,0,0,0,128,68,0,0,14,0,0,0,96,68,0,0,16,0,0,0,56,68,0,0,16,0,0,0,232,67,0,0,16,0,0,0,104,43,0,0,16,0,0,0,216,67,0,0,16,0,0,0,160,67,0,0,16,0,0,0,0,0,0,0,0,0,0,0,12,1,14,1,19,1,1,3,15,3,14,6,17,6,3,9,1,11,15,11,1,12,9,12,1,14,6,14,9,14,14,14,15,14,28,14,3,15,17,15,18,15,15,16,17,16,1,17,6,17,9,17,15,17,19,18,32,18,255,127,0,0,0,0,6,0,0,0,7,0,0,0,9,0,0,0,9,0,0,0,20,0,0,0,20,0,0,0,20,0,0,0,25,0,0,0,40,0,41,0,91,0,93,0,123,0,125,0,60,0,62,0,34,0,39,0,96,0,171,0,187,0,10,48,11,48,60,224,0,0,0,0,0,0,0,0,136,63,0,0,40,63,0,0,160,62,0,0,32,62,0,0,152,61,0,0,0,61,0,0,112,60,0,0,232,59,0,0,96,59,0,0,216,58,0,0,112,58,0,0,0,0,0,0,16,98,1,0,0,0,0,0,9,0,0,0,9,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,23,0,0,0,55,0,0,0,32,0,0,0,118,0,0,0,0,0,0,0,121,0,0,0,0,0,0,0,130,0,0,0,0,0,0,0,95,0,0,0,0,0,0,0,80,37,81,37,82,37,81,4,83,37,84,37,85,37,86,37,87,37,88,37,89,37,90,37,91,37,92,37,93,37,94,37,95,37,96,37,97,37,1,4,98,37,99,37,100,37,101,37,102,37,103,37,104,37,105,37,106,37,107,37,108,37,169,0,78,4,48,4,49,4,70,4,52,4,53,4,68,4,51,4,69,4,56,4,57,4,58,4,59,4,60,4,61,4,62,4,63,4,79,4,64,4,65,4,66,4,67,4,54,4,50,4,76,4,75,4,55,4,72,4,77,4,73,4,71,4,74,4,46,4,16,4,17,4,38,4,20,4,21,4,36,4,19,4,37,4,24,4,25,4,26,4,27,4,28,4,29,4,30,4,31,4,47,4,32,4,33,4,34,4,35,4,22,4,18,4,44,4,43,4,23,4,40,4,45,4,41,4,39,4,42,4,0,40,24,8,0,0,0,0,32,0,1,9,2,9,3,9,5,9,6,9,7,9,8,9,9,9,10,9,11,9,14,9,15,9,16,9,13,9,18,9,19,9,20,9,17,9,21,9,22,9,23,9,24,9,25,9,26,9,27,9,28,9,29,9,30,9,31,9,32,9,33,9,34,9,35,9,36,9,37,9,38,9,39,9,40,9,41,9,42,9,43,9,44,9,45,9,46,9,47,9,95,9,48,9,49,9,50,9,51,9,52,9,53,9,54,9,55,9,56,9,57,9,32,0,62,9,63,9,64,9,65,9,66,9,67,9,70,9,71,9,72,9,69,9,74,9,75,9,76,9,73,9,77,9,60,9,100,9,32,0,32,0,32,0,32,0,32,0,32,0,48,0,49,0,50,0,51,0,52,0,53,0,54,0,55,0,56,0,57,0,32,0,32,0,32,0,32,0,32,0,173,0,1,0,64,6,1,0,12,32,45,0,13,32,1,0,0,0,0,0,0,0,0,0,48,4,0,0,97,0,0,0,49,4,0,0,98,0,0,0,70,4,0,0,99,0,0,0,91,4,0,0,7,1,0,0,71,4,0,0,13,1,0,0,95,4,0,0,100,0,126,1,85,4,0,0,100,0,122,0,52,4,0,0,100,0,0,0,82,4,0,0,17,1,0,0,53,4,0,0,101,0,0,0,68,4,0,0,102,0,0,0,51,4,0,0,103,0,0,0,69,4,0,0,104,0,0,0,56,4,0,0,105,0,0,0,88,4,0,0,106,0,0,0,58,4,0,0,107,0,0,0,89,4,0,0,108,0,106,0,59,4,0,0,108,0,0,0,60,4,0,0,109,0,0,0,90,4,0,0,110,0,106,0,61,4,0,0,110,0,0,0,62,4,0,0,111,0,0,0,63,4,0,0,112,0,0,0,64,4,0,0,114,0,0,0,65,4,0,0,115,0,0,0,72,4,0,0,97,1,0,0,66,4,0,0,116,0,0,0,67,4,0,0,117,0,0,0,50,4,0,0,118,0,0,0,55,4,0,0,122,0,0,0,54,4,0,0,126,1,0,0,83,4,0,0,17,1,0,0,92,4,0,0,7,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,1,1,0,1,0,1,0,0,0,0,0,0,0,0,0,173,0,1,0,12,32,1,0,13,32,1,0,0,0,0,0,88,67,0,0,62,0,0,0,48,67,0,0,60,224,0,0,216,66,0,0,38,0,0,0,168,66,0,0,34,0,0,0,144,66,0,0,32,0,0,0,128,66,0,0,39,0,0,0,0,0,0,0,255,255,255,255,0,64,8,0,70,18,0,0,0,0,0,0,24,12,0,0,4,80,18,6,78,22,0,0,0,0,0,0,34,52,0,0,4,88,22,6,82,22,0,0,0,0,0,0,34,64,0,0,0,92,8,0,92,80,0,0,0,0,0,0,76,8,1,0,0,86,4,0,94,66,0,0,0,0,0,0,34,10,0,0,0,62,10,0,62,20,0,0,0,0,0,0,28,16,0,0,4,68,18,6,68,22,0,0,0,0,0,0,30,44,0,0,6,64,16,0,66,32,0,0,0,0,0,0,32,18,0,0,2,68,46,0,42,32,0,0,0,0,0,0,46,58,0,0,4,78,24,6,72,22,0,0,0,0,0,0,42,52,0,0,4,88,34,0,64,32,0,0,0,0,0,0,46,82,0,0,0,56,12,0,56,20,0,0,0,0,0,0,24,12,0,0,0,70,18,0,70,24,0,0,0,0,0,0,32,20,0,0,166,0,1,0,129,0,103,5,0,0,40,1,41,5,105,5,234,0,0,0,66,5,0,0,195,0,67,29,0,0,239,4,108,5,44,0,108,0,4,0,0,0,173,0,109,5,0,0,238,4,5,0,110,0,177,4,241,4,49,5,241,143,178,0,0,0,114,5,0,0,51,5,115,0,244,4,180,154,0,0,8,0,183,0,0,0,55,21,0,0,55,5,0,0,205,0,119,0,183,8,56,5,0,0,0,0,201,0,9,1,185,0,57,5,250,4,10,0,123,5,187,0,188,0,190,0,126,0,63,5,63,1,0,0,11,1,0,0,204,0,140,0,0,0,0,0,103,0,0,0,108,13,109,0,47,1,176,0,113,0,118,5,76,4,76,28,233,143,0,0,233,207,57,142,0,0,57,206,0,0,0,0,0,0,102,3,102,1,102,2,166,4,166,2,38,4,166,138,40,2,106,3,106,1,106,2,170,2,110,3,110,1,110,2,174,2,41,0,179,4,116,3,116,1,116,2,180,4,180,2,0,0,116,4,122,3,122,1,122,2,186,2,126,1,57,0,190,2,0,0,166,3,0,0,166,1,0,0,230,3,0,0,104,1,0,0,104,2,0,0,40,3,0,0,232,1,0,0,233,1,0,0,105,4,0,0,170,3,0,0,170,1,0,0,42,3,0,0,234,3,0,0,234,1,0,0,108,2,0,0,172,1,0,0,44,3,0,0,44,2,0,0,109,2,0,0,109,4,0,0,174,4,0,0,174,3,0,0,174,1,0,0,238,3,0,0,46,0,0,0,238,139,0,0,111,2,0,0,48,2,48,0,0,0,113,1,0,0,49,2,0,0,241,1,0,0,49,3,0,0,113,4,0,0,115,1,0,0,51,2,0,0,243,1,51,0,0,0,51,0,0,0,180,3,0,0,180,1,0,0,244,2,0,0,180,138,0,0,119,1,0,0,55,2,0,0,247,1,0,0,120,1,0,0,120,2,0,0,56,2,0,0,248,1,0,0,57,2,0,0,249,1,0,0,121,4,0,0,186,4,0,0,186,3,0,0,186,1,0,0,58,4,0,0,250,2,0,0,250,3,0,0,124,2,0,0,126,2,0,0,0,0,127,1,0,0,63,3,0,0,255,1,56,0,240,0,0,0,170,0,0,0,170,0,0,0,170,0,0,0,170,0,0,0,170,0,0,0,170,0,0,0,170,0,0,0,170,0,0,0,0,0,0,0,110,120,100,110,110,110,110,110,110,110,110,120,100,110,110,110,110,110,110,110,110,120,100,110,100,110,110,110,100,110,110,120,100,110,110,110,110,110,110,110,110,120,100,110,110,110,110,110,110,110,110,120,100,110,110,110,110,110,110,110,110,120,100,110,110,110,110,110,110,110,110,120,100,110,110,110,110,110,110,110,110,120,100,110,110,110,110,110,110,110,110,120,100,110,110,110,110,110,110,110,0,0,0,0,60,0,0,0,0,0,0,0,0,0,0,0,20,16,4,0,40,0,8,0,40,32,8,0,45,48,8,0,30,0,4,0,30,16,4,0,30,144,4,0,30,144,4,0,30,16,4,0,30,16,4,0,30,144,36,0,40,32,8,0,30,16,4,0,40,128,8,0,40,128,8,0,20,16,4,0,45,48,24,0,40,32,24,0,40,0,24,0,20,16,4,0,30,16,4,0,40,32,8,0,40,0,8,0,40,128,8,0,40,128,8,0,70,0,8,0,40,0,8,0,20,16,4,0,30,16,4,0,30,0,4,0,30,0,4,0,40,32,8,0,70,0,8,0,70,0,8,0,20,144,4,0,40,128,8,0,45,176,8,0,20,144,4,0,40,128,8,0,30,128,4,0,30,144,4,0,40,160,8,0,30,16,4,0,0,0,0,0,0,0,0,0,22,22,22,22,22,22,22,21,21,21,21,20,20,19,19,18,17,16,15,15,15,15,15,15,15,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,23,10,212,9,146,9,80,9,15,9,206,8,143,8,79,8,19,8,213,7,154,7,98,7,40,7,243,6,190,6,139,6,90,6,43,6,253,5,211,5,169,5,129,5,92,5,56,5,22,5,247,4,215,4,187,4,160,4,134,4,110,4,87,4,65,4,45,4,25,4,7,4,245,3,228,3,212,3,197,3,182,3,168,3,153,3,141,3,127,3,113,3,101,3,87,3,75,3,62,3,50,3,36,3,24,3,11,3,254,2,242,2,228,2,216,2,203,2,190,2,177,2,164,2,151,2,139,2,125,2,114,2,100,2,89,2,76,2,64,2,52,2,40,2,28,2,18,2,5,2,251,1,240,1,229,1,219,1,208,1,198,1,187,1,178,1,168,1,158,1,148,1,138,1,129,1,119,1,110,1,99,1,91,1,80,1,72,1,61,1,52,1,43,1,32,1,24,1,13,1,4,1,250,0,240,0,231,0,220,0,212,0,200,0,192,0,181,0,172,0,161,0,152,0,142,0,133,0,123,0,113,0,105,0,94,0,86,0,76,0,67,0,57,0,49,0,39,0,30,0,22,0,11,0,4,0,251,255,242,255,233,255,224,255,215,255,206,255,196,255,187,255,178,255,169,255,160,255,149,255,141,255,130,255,122,255,112,255,102,255,92,255,82,255,73,255,63,255,53,255,43,255,34,255,23,255,14,255,4,255,250,254,241,254,231,254,221,254,211,254,202,254,192,254,182,254,173,254,163,254,155,254,144,254,135,254,125,254,115,254,106,254,95,254,86,254,76,254,66,254,56,254,45,254,35,254,25,254,13,254,3,254,247,253,236,253,225,253,213,253,201,253,189,253,177,253,165,253,152,253,140,253,127,253,115,253,102,253,89,253,76,253,63,253,51,253,36,253,25,253,10,253,255,252,241,252,229,252,216,252,204,252,190,252,179,252,164,252,152,252,139,252,126,252,113,252,98,252,85,252,69,252,56,252,38,252,25,252,6,252,246,251,226,251,208,251,186,251,165,251,142,251,118,251,92,251,65,251,36,251,6,251,229,250,196,250,159,250,121,250,83,250,40,250,254,249,208,249,161,249,112,249,60,249,9,249,209,248,154,248,96,248,38,248,232,247,171,247,108,247,44,247,235,246,170,246,104,246,38,246,227,245,127,127,127,128,129,131,132,135,137,140,143,146,150,153,157,161,165,170,174,178,183,187,192,197,201,205,210,214,218,222,226,230,234,237,240,243,245,248,250,251,252,253,254,254,253,252,251,249,247,244,240,236,231,226,220,213,206,198,189,180,169,158,146,136,130,125,119,114,108,102,96,90,84,78,73,66,60,55,50,45,40,36,31,27,24,20,17,14,12,9,7,6,5,4,4,4,4,5,6,8,10,13,16,20,24,29,35,41,47,55,62,71,80,90,100,112,124,131,133,136,138,140,142,143,145,146,147,147,11,12,13,14,0,0,0,0,0,0,0,0,0,0,0,0,1,2,12,3,13,4,14,5,11,0,0,0,0,0,0,0,46,57,78,50,96,97,0,0,3,7,5,0,96,98,0,0,46,57,78,46,96,97,0,0,3,7,5,0,96,98,0,0,46,57,78,46,96,97,0,0,3,7,5,0,96,98,0,0,46,57,90,50,96,97,0,0,3,9,5,0,240,93,0,0,46,57,78,50,96,97,0,0,3,7,5,0,96,98,0,0,46,57,74,55,96,97,0,0,4,7,5,0,184,123,0,0,46,57,74,55,96,97,0,0,4,7,5,0,184,123,0,0,46,57,74,55,96,97,0,0,4,7,5,0,184,123,0,0,46,57,78,50,96,97,0,0,3,7,5,0,96,98,0,0,46,57,78,46,96,97,0,0,3,7,5,0,96,98,0,0,46,57,78,50,96,97,0,0,3,7,5,0,96,98,0,0,34,41,41,32,96,97,0,0,3,7,5,0,184,123,0,0,46,57,55,50,96,97,0,0,3,7,5,0,184,123,0,0,3,2,4,5,6,7,26,0,202,254,112,254,18,2,100,1,224,0,89,0,23,0,246,255,198,255,240,255,205,1,87,2,24,2,189,2,2,3,93,2,241,1,205,1,48,2,148,1,110,0,224,0,131,0,104,0,159,255,155,0,22,1,102,255,115,251,170,253,225,2,125,0,176,253,41,0,11,0,9,255,246,255,65,0,92,0,80,0,208,254,71,0,167,0,255,255,122,0,233,0,161,0,213,255,22,1,223,1,229,1,151,1,10,1,138,2,134,0,80,0,236,0,68,0,4,1,13,1,179,0,53,0,140,0,19,1,37,1,40,1,104,0,1,1,152,0,55,1,182,0,7,1,245,0,125,0,58,1,140,0,44,0,203,0,230,0,21,255,226,254,23,0,107,0,92,0,165,255,38,0,208,1,187,1,176,0,98,0,240,252,111,246,157,248,235,251,192,249,74,250,152,250,19,251,75,252,38,253,100,150,100,105,110,115,110,110,110,100,105,150,105,110,125,135,140,115,135,100,105,150,90,105,90,122,135,100,90,100,105,150,100,105,100,122,135,100,100,100,105,150,100,105,105,115,135,110,105,100,105,150,100,105,105,122,130,120,125,100,105,150,100,105,110,122,125,115,110,100,105,150,100,105,105,122,135,120,105,100,105,150,100,105,105,115,135,110,105,100,100,100,100,100,100,100,100,100,100,100,0,0,0,0,96,111,0,0,96,111,0,0,48,109,0,0,160,103,0,0,160,103,0,0,160,103,0,0,170,0,97,128,178,0,50,128,179,0,51,128,185,0,49,128,186,0,111,128,176,2,104,128,177,2,102,130,178,2,106,128,179,2,114,128,180,2,121,130,181,2,123,130,182,2,129,130,183,2,119,128,184,2,121,128,192,2,148,130,193,2,149,130,224,2,99,130,225,2,108,128,226,2,115,128,227,2,120,128,112,32,48,128,113,32,105,128,116,32,52,128,117,32,53,128,118,32,54,128,119,32,55,128,120,32,56,128,121,32,57,128,122,32,43,128,123,32,45,128,124,32,61,128,125,32,40,128,126,32,41,128,127,32,110,128,128,32,48,64,129,32,49,64,130,32,50,64,131,32,51,64,132,32,52,64,133,32,53,64,134,32,54,64,135,32,55,64,136,32,56,64,137,32,57,64,138,32,43,64,139,32,45,64,140,32,61,64,141,32,40,64,142,32,41,64,144,32,97,64,145,32,101,64,146,32,111,64,147,32,120,64,148,32,89,66,149,32,104,64,150,32,107,64,151,32,108,64,152,32,109,64,153,32,110,64,154,32,112,64,155,32,115,64,156,32,116,64,0,0,0,0,0,0,0,0,120,121,120,119,119,118,118,117,116,116,115,114,113,112,112,111,111,110,109,108,107,106,106,104,103,103,102,102,102,101,101,99,98,98,97,96,96,95,94,93,91,90,91,90,89,88,86,85,86,85,85,84,82,81,80,79,77,78,78,76,77,75,75,74,73,71,72,70,69,69,69,67,65,64,63,63,63,61,61,59,59,59,58,56,57,58,56,54,53,52,52,53,52,52,50,48,47,47,45,46,45,0,0,0,194,186,0,0,0,0,0,0,0,0,0,0,0,70,242,41,0,47,0,47,0,69,242,41,0,47,0,46,0,69,242,40,0,46,0,45,0,52,242,40,0,45,45,44,0,52,242,40,0,43,43,43,0,52,242,40,0,42,42,42,0,52,242,40,0,41,41,41,0,52,242,40,100,120,100,105,100,110,110,100,95,100,105,120,105,110,125,130,135,115,125,100,105,120,75,100,75,105,120,85,75,100,105,120,85,105,95,115,120,100,95,100,110,120,95,105,100,115,120,100,100,100,105,120,100,105,95,115,120,110,95,100,105,120,100,105,105,122,125,110,105,100,105,120,100,105,105,122,125,110,105,100,105,120,95,105,100,115,120,110,100,100,100,120,100,100,100,100,100,100,100,100,0,0,0,0,1,2,3,4,5,6,0,0,0,0,0,0,0,0,0,0,45,0,0,0,38,0,0,0,45,0,0,0,45,0,0,0,55,0,0,0,0,0,0,0,17,18,19,20,22,23,25,26,27,28,29,31,32,33,34,36,37,38,39,40,41,42,44,115,123,131,155,0,0,0,0,0,97,97,97,97,97,97,97,99,101,101,101,101,105,105,105,105,100,110,111,111,111,111,111,0,111,117,117,117,117,121,116,115,97,97,97,97,97,97,97,99,101,101,101,101,105,105,105,105,100,110,111,111,111,111,111,0,111,117,117,117,117,121,116,121,97,97,97,97,97,97,99,99,99,99,99,99,99,99,100,100,100,100,101,101,101,101,101,101,101,101,101,101,103,103,103,103,103,103,103,103,104,104,104,104,105,105,105,105,105,105,105,105,105,105,105,105,106,106,107,107,107,108,108,108,108,108,108,108,108,108,108,110,110,110,110,110,110,110,110,110,111,111,111,111,111,111,111,111,114,114,114,114,114,114,115,115,115,115,115,115,115,115,116,116,116,116,116,116,117,117,117,117,117,117,117,117,117,117,117,117,119,119,121,121,121,122,122,122,122,122,122,115,98,98,98,98,0,0,111,99,99,100,100,100,100,100,101,101,101,102,102,103,103,104,105,105,107,107,108,108,109,110,110,111,111,111,111,111,112,112,121,0,0,115,115,116,116,116,116,117,117,117,118,121,121,122,122,122,122,122,122,122,0,0,0,119,116,116,116,107,100,100,100,108,108,108,110,110,110,97,97,105,105,111,111,117,117,117,117,117,117,117,117,117,117,101,97,97,97,97,97,97,103,103,103,103,107,107,111,111,111,111,122,122,106,100,100,100,103,103,119,119,110,110,97,97,97,97,111,111,97,97,97,97,101,101,101,101,105,105,105,105,111,111,111,111,114,114,114,114,117,117,117,117,115,115,116,116,121,121,104,104,110,100,111,111,122,122,97,97,101,101,111,111,111,111,111,111,111,111,121,121,108,110,116,106,100,113,97,99,99,108,116,115,122,0,0,98,117,118,101,101,106,106,113,113,114,114,121,121,97,97,97,98,111,99,100,100,101,101,101,101,101,101,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,6,0,0,240,6,0,0,102,9,0,0,230,9,0,0,102,10,0,0,230,10,0,0,102,11,0,0,230,11,0,0,102,12,0,0,230,12,0,0,102,13,0,0,80,14,0,0,208,14,0,0,32,15,0,0,64,16,0,0,144,16,0,0,0,0,0,0,0,0,0,0,0,0,177,3,89,2,91,2,179,3,185,3,83,1,201,3,198,3,131,2,197,3,146,2,148,2,126,2,0,0,0,0,114,114,113,113,112,111,109,108,106,104,102,100,97,95,92,90,87,84,81,78,75,72,69,66,63,59,56,53,50,47,44,41,38,35,32,29,27,24,22,20,18,16,14,12,11,10,9,8,7,7,7,7,7,6,5,5,5,5,5,5,5,5,5,6,7,7,8,9,10,12,13,15,16,18,20,22,24,27,29,32,35,38,41,44,47,51,55,59,63,67,71,76,81,86,91,96,101,106,111,116,121,127,132,137,143,149,155,161,167,173,179,186,192,199,206,213,220,227,234,241,245,247,250,252,253,254,255,255,254,255,255,255,255,255,254,253,252,250,248,246,244,241,238,235,232,229,225,222,218,214,210,205,201,196,191,186,182,176,171,166,161,156,150,145,139,134,128,123,117,111,106,100,95,89,84,79,73,68,63,58,53,48,43,38,34,29,25,21,17,13,10,7,4,3,1,0,0,0,0,0,0,0,0,1,1,2,4,5,7,9,11,13,16,18,21,24,27,30,34,37,41,45,49,53,58,62,67,72,76,81,87,91,94,98,101,104,107,110,113,116,118,120,123,124,126,128,129,130,131,131,132,132,131,131,130,129,228,0,235,0,239,0,246,0,252,0,255,0,0,0,0,0,48,38,0,0,1,0,0,0,8,38,0,0,2,0,0,0,0,0,0,0,0,0,0,0,26,0,0,0,0,0,0,0,255,255,255,255,255,253,249,245,242,238,235,232,228,225,222,218,216,213,210,207,204,201,198,196,193,191,188,186,183,181,179,176,174,172,169,168,165,163,161,159,158,155,153,152,150,148,146,145,143,141,139,137,136,135,133,131,130,129,127,126,124,123,122,120,119,118,117,115,114,113,112,111,110,109,107,106,105,104,103,102,101,100,99,98,97,96,95,94,93,92,91,90,89,89,88,87,86,85,84,83,82,82,81,80,80,79,78,77,76,76,75,75,74,73,72,71,71,70,69,69,68,67,67,66,66,65,64,64,63,62,62,61,61,60,59,59,58,58,57,57,56,56,55,54,54,53,53,52,52,52,51,50,50,49,49,48,48,47,47,46,46,46,45,45,44,44,44,43,43,42,41,40,40,40,39,39,39,38,38,38,37,37,37,36,36,35,35,35,35,34,34,34,33,33,33,32,32,31,31,31,30,30,30,29,29,29,29,28,28,27,27,27,27,26,26,26,26,25,25,25,24,24,24,24,23,23,23,23,22,22,22,21,21,21,21,20,20,20,20,19,19,19,18,18,17,17,17,16,16,16,16,16,16,15,15,15,15,14,14,14,13,13,13,12,12,12,12,11,11,11,11,10,10,10,9,9,9,8,8,8,152,153,153,154,156,157,159,161,164,167,169,172,176,179,182,186,190,193,197,201,205,209,212,216,220,223,227,230,234,237,240,242,245,247,249,251,252,253,254,254,255,255,255,255,255,255,254,253,251,250,248,246,243,241,238,236,233,230,228,224,221,218,215,211,208,204,200,196,192,188,184,180,176,172,167,163,159,154,150,145,141,136,132,127,123,118,114,109,105,101,96,92,88,84,80,76,72,68,64,60,57,53,50,47,43,40,38,35,32,29,26,23,21,18,15,13,10,8,7,5,3,2,1,0,0,0,0,0,208,206,205,204,202,200,199,197,195,193,192,189,187,184,181,179,176,173,170,167,163,160,157,153,150,146,143,139,135,132,128,124,120,116,112,109,105,101,97,93,89,85,81,77,74,70,66,62,59,55,52,49,47,45,42,40,38,36,34,32,30,28,26,25,23,21,20,18,17,15,14,13,12,10,9,8,7,6,5,5,4,3,2,2,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,2,2,3,4,4,5,6,7,8,9,10,11,12,14,15,16,18,19,21,23,24,26,28,30,32,0,0,0,0,255,127,0,0,238,2,0,0,44,1,0,0,99,0,0,0,99,0,0,0,99,0,0,0,0,0,0,0,238,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,44,0,46,0,63,0,33,0,58,0,59,0,161,0,191,0,19,32,20,32,38,32,126,3,135,3,100,9,137,5,93,5,92,5,94,5,91,5,12,6,27,6,31,6,212,6,244,13,13,15,14,15,98,19,99,19,100,19,101,19,102,19,103,19,104,19,251,16,1,48,2,48,1,255,12,255,14,255,26,255,27,255,31,255,0,0,0,0,192,37,0,0,12,0,0,0,144,37,0,0,16,0,0,0,0,0,0,0,255,255,255,255,144,40,0,0,1,0,0,0,96,40,0,0,2,0,0,0,40,40,0,0,3,0,0,0,168,36,0,0,7,0,0,0,120,36,0,0,8,0,0,0,56,36,0,0,5,0,0,0,248,35,0,0,4,0,0,0,208,35,0,0,6,0,0,0,168,35,0,0,20,0,0,0,96,35,0,0,21,0,0,0,32,35,0,0,22,0,0,0,248,34,0,0,18,0,0,0,208,34,0,0,19,0,0,0,152,34,0,0,23,0,0,0,104,34,0,0,24,0,0,0,32,34,0,0,25,0,0,0,232,33,0,0,26,0,0,0,192,33,0,0,36,0,0,0,152,33,0,0,17,0,0,0,104,33,0,0,9,0,0,0,64,33,0,0,10,0,0,0,16,33,0,0,11,0,0,0,232,32,0,0,12,0,0,0,184,32,0,0,13,0,0,0,136,32,0,0,14,0,0,0,72,32,0,0,15,0,0,0,16,32,0,0,16,0,0,0,216,31,0,0,27,0,0,0,184,31,0,0,28,0,0,0,152,39,0,0,29,0,0,0,136,31,0,0,37,0,0,0,96,31,0,0,30,0,0,0,32,31,0,0,31,0,0,0,248,30,0,0,32,0,0,0,184,30,0,0,33,0,0,0,136,30,0,0,34,0,0,0,56,30,0,0,35,0,0,0,0,30,0,0,1,1,0,0,216,29,0,0,3,1,0,0])
.concat([136,29,0,0,4,1,0,0,128,72,0,0,5,1,0,0,88,72,0,0,7,1,0,0,8,72,0,0,6,1,0,0,184,71,0,0,20,1,0,0,0,0,0,0,0,0,0,0,112,35,0,0,48,35,0,0,8,35,0,0,216,34,0,0,184,34,0,0,120,34,0,0,64,0,0,0,0,0,0,0,207,204,201,198,195,192,189,185,180,176,171,167,162,156,151,146,140,134,129,123,117,111,105,99,93,87,80,74,68,62,56,51,45,39,34,28,23,18,13,8,4,2,2,1,0,0,0,0,0,1,1,2,3,4,5,7,8,10,12,13,15,18,20,22,25,27,30,33,36,39,42,45,48,52,54,56,58,60,63,65,67,70,72,75,77,80,82,85,88,90,93,96,99,102,105,108,111,114,117,120,123,126,129,133,136,139,143,146,150,153,157,160,164,168,172,175,179,183,187,191,195,199,203,207,211,215,219,224,200,33,0,0,1,0,0,0,160,33,0,0,1,0,0,0,112,33,0,0,1,0,0,0,72,33,0,0,1,0,0,0,32,33,0,0,0,0,0,0,240,32,0,0,0,0,0,0,200,32,0,0,0,0,0,0,144,32,0,0,0,0,0,0,104,32,0,0,0,0,0,0,32,32,0,0,0,0,0,0,224,31,0,0,0,0,0,0,192,31,0,0,0,0,0,0,152,31,0,0,0,0,0,0,104,31,0,0,0,0,0,0,48,31,0,0,0,0,0,0,0,31,0,0,0,0,0,0,208,30,0,0,0,0,0,0,152,30,0,0,0,0,0,0,96,30,0,0,0,0,0,0,24,30,0,0,0,0,0,0,232,29,0,0,0,0,0,0,152,29,0,0,0,0,0,0,160,0,2,30,3,30,163,0,10,1,11,1,10,30,167,0,128,30,169,0,130,30,11,30,242,30,173,0,174,0,120,1,30,30,31,30,32,1,33,1,64,30,65,30,182,0,86,30,129,30,87,30,131,30,96,30,243,30,132,30,133,30,97,30,192,0,193,0,194,0,195,0,196,0,197,0,198,0,199,0,200,0,201,0,202,0,203,0,204,0,205,0,206,0,207,0,116,1,209,0,210,0,211,0,212,0,213,0,214,0,106,30,216,0,217,0,218,0,219,0,220,0,221,0,118,1,223,0,224,0,225,0,226,0,227,0,228,0,229,0,230,0,231,0,232,0,233,0,234,0,235,0,236,0,237,0,238,0,239,0,117,1,241,0,242,0,243,0,244,0,245,0,246,0,107,30,248,0,249,0,250,0,251,0,252,0,253,0,119,1,255,0,128,155,181,203,220,232,237,236,230,220,206,191,176,163,152,144,140,139,140,143,146,148,149,146,140,131,120,105,89,73,60,49,42,41,45,54,68,86,105,125,143,159,170,177,178,173,164,150,135,120,105,92,83,79,79,85,94,107,122,136,150,162,171,176,177,174,168,160,152,145,139,136,137,141,148,157,168,178,187,192,193,189,180,165,146,124,99,74,50,30,14,5,2,5,15,30,48,68,89,109,127,140,150,156,159,159,157,155,153,153,156,161,169,179,191,202,213,220,224,222,216,204,187,166,143,119,96,75,58,46,40,41,47,58,72,89,106,122,134,144,148,149,145,137,128,117,107,98,92,90,92,97,105,116,128,138,148,154,158,157,152,144,134,124,113,104,98,96,99,107,120,136,155,175,194,210,223,230,231,226,215,198,178,156,132,111,91,75,64,57,55,56,61,67,74,80,84,86,85,82,77,72,66,63,62,65,73,86,103,124,147,171,195,217,234,246,252,251,244,231,213,192,170,148,128,113,100,93,90,92,97,104,112,119,125,127,127,123,116,107,97,87,78,72,70,72,78,89,102,117,132,147,159,167,171,170,164,153,139,123,106,91,78,70,67,69,77,90,107,127,146,166,184,197,207,211,210,205,196,185,173,161,150,142,137,135,135,138,141,145,146,145,140,132,120,104,85,65,46,28,14,5,1,5,15,31,52,77,104,129,154,176,193,205,211,211,208,200,191,181,171,164,159,156,157,160,165,170,174,177,176,171,163,150,135,118,99,81,66,54,47,45,49,58,72,89,107,126,142,156,166,170,169,163,152,138,123,108,93,82,74,72,74,80,90,103,117,130,6,38,24,14,4,0,0,0,0,0,0,0,0,0,0,0,0,0,128,63,0,0,0,0,255,249,244,238,233,228,223,218,213,208,203,198,193,189,184,179,175,170,166,161,157,153,149,144,140,136,132,128,125,121,117,113,110,106,103,99,96,93,89,86,83,80,77,74,71,68,65,62,60,57,55,52,50,47,45,43,40,38,36,34,32,30,28,26,25,23,21,20,18,17,15,14,13,12,10,9,8,7,6,5,5,4,3,2,2,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,2,2,3,4,4,5,6,7,8,9,10,11,12,14,15,16,18,19,21,23,24,26,28,30,32,160,0,161,0,162,0,163,0,164,0,165,0,166,0,167,0,168,0,169,0,170,0,171,0,172,0,173,0,174,0,175,0,176,0,177,0,178,0,179,0,180,0,181,0,182,0,183,0,184,0,185,0,186,0,187,0,188,0,189,0,190,0,191,0,192,0,193,0,194,0,195,0,196,0,197,0,198,0,199,0,200,0,201,0,202,0,203,0,204,0,205,0,206,0,207,0,30,1,209,0,210,0,211,0,212,0,213,0,214,0,215,0,216,0,217,0,218,0,219,0,220,0,48,1,94,1,223,0,224,0,225,0,226,0,227,0,228,0,229,0,230,0,231,0,232,0,233,0,234,0,235,0,236,0,237,0,238,0,239,0,31,1,241,0,242,0,243,0,244,0,245,0,246,0,247,0,248,0,249,0,250,0,251,0,252,0,49,1,95,1,255,0,160,0,24,32,25,32,163,0,172,32,175,32,166,0,167,0,168,0,169,0,122,3,171,0,172,0,173,0,0,0,21,32,176,0,177,0,178,0,179,0,132,3,133,3,134,3,183,0,136,3,137,3,138,3,187,0,140,3,189,0,142,3,143,3,144,3,145,3,146,3,147,3,148,3,149,3,150,3,151,3,152,3,153,3,154,3,155,3,156,3,157,3,158,3,159,3,160,3,161,3,0,0,163,3,164,3,165,3,166,3,167,3,168,3,169,3,170,3,171,3,172,3,173,3,174,3,175,3,176,3,177,3,178,3,179,3,180,3,181,3,182,3,183,3,184,3,185,3,186,3,187,3,188,3,189,3,190,3,191,3,192,3,193,3,194,3,195,3,196,3,197,3,198,3,199,3,200,3,201,3,202,3,203,3,204,3,205,3,206,3,0,0,160,0,1,4,2,4,3,4,4,4,5,4,6,4,7,4,8,4,9,4,10,4,11,4,12,4,173,0,14,4,15,4,16,4,17,4,18,4,19,4,20,4,21,4,22,4,23,4,24,4,25,4,26,4,27,4,28,4,29,4,30,4,31,4,32,4,33,4,34,4,35,4,36,4,37,4,38,4,39,4,40,4,41,4,42,4,43,4,44,4,45,4,46,4,47,4,48,4,49,4,50,4,51,4,52,4,53,4,54,4,55,4,56,4,57,4,58,4,59,4,60,4,61,4,62,4,63,4,64,4,65,4,66,4,67,4,68,4,69,4,70,4,71,4,72,4,73,4,74,4,75,4,76,4,77,4,78,4,79,4,22,33,81,4,82,4,83,4,84,4,85,4,86,4,87,4,88,4,89,4,90,4,91,4,92,4,167,0,94,4,95,4,160,0,4,1,56,1,86,1,164,0,40,1,59,1,167,0,168,0,96,1,18,1,34,1,102,1,173,0,125,1,175,0,176,0,5,1,219,2,87,1,180,0,41,1,60,1,199,2,184,0,97,1,19,1,35,1,103,1,74,1,126,1,75,1,0,1,193,0,194,0,195,0,196,0,197,0,198,0,46,1,12,1,201,0,24,1,203,0,22,1,205,0,206,0,42,1,16,1,69,1,76,1,54,1,212,0,213,0,214,0,215,0,216,0,114,1,218,0,219,0,220,0,104,1,106,1,223,0,1,1,225,0,226,0,227,0,228,0,229,0,230,0,47,1,13,1,233,0,25,1,235,0,23,1,237,0,238,0,43,1,17,1,70,1,77,1,55,1,244,0,245,0,246,0,247,0,248,0,115,1,250,0,251,0,252,0,105,1,107,1,217,2,160,0,38,1,216,2,163,0,164,0,0,0,36,1,167,0,168,0,48,1,94,1,30,1,52,1,173,0,0,0,123,1,176,0,39,1,178,0,179,0,180,0,181,0,37,1,183,0,184,0,49,1,95,1,31,1,53,1,189,0,0,0,124,1,192,0,193,0,194,0,0,0,196,0,10,1,8,1,199,0,200,0,201,0,202,0,203,0,204,0,205,0,206,0,207,0,0,0,209,0,210,0,211,0,212,0,32,1,214,0,215,0,28,1,217,0,218,0,219,0,220,0,108,1,92,1,223,0,224,0,225,0,226,0,0,0,228,0,11,1,9,1,231,0,232,0,233,0,234,0,235,0,236,0,237,0,238,0,239,0,0,0,241,0,242,0,243,0,244,0,33,1,246,0,247,0,29,1,249,0,250,0,251,0,252,0,109,1,93,1,217,2,160,0,4,1,216,2,65,1,164,0,61,1,90,1,167,0,168,0,96,1,94,1,100,1,121,1,173,0,125,1,123,1,176,0,5,1,219,2,66,1,180,0,62,1,91,1,199,2,184,0,97,1,95,1,101,1,122,1,221,2,126,1,124,1,84,1,193,0,194,0,2,1,196,0,57,1,6,1,199,0,12,1,201,0,24,1,203,0,26,1,205,0,206,0,14,1,16,1,67,1,71,1,211,0,212,0,80,1,214,0,215,0,88,1,110,1,218,0,112,1,220,0,221,0,98,1,223,0,85,1,225,0,226,0,3,1,228,0,58,1,7,1,231,0,13,1,233,0,25,1,235,0,27,1,237,0,238,0,15,1,17,1,68,1,72,1,243,0,244,0,81,1,246,0,247,0,89,1,111,1,250,0,113,1,252,0,253,0,99,1,217,2,160,0,161,0,162,0,163,0,164,0,165,0,166,0,167,0,168,0,169,0,170,0,171,0,172,0,173,0,174,0,175,0,176,0,177,0,178,0,179,0,180,0,181,0,182,0,183,0,184,0,185,0,186,0,187,0,188,0,189,0,190,0,191,0,192,0,193,0,194,0,195,0,196,0,197,0,198,0,199,0,200,0,201,0,202,0,203,0,204,0,205,0,206,0,207,0,208,0,209,0,210,0,211,0,212,0,213,0,214,0,215,0,216,0,217,0,218,0,219,0,220,0,221,0,222,0,223,0,224,0,225,0,226,0,227,0,228,0,229,0,230,0,231,0,232,0,233,0,234,0,235,0,236,0,237,0,238,0,239,0,240,0,241,0,242,0,243,0,244,0,245,0,246,0,247,0,248,0,249,0,250,0,251,0,252,0,253,0,254,0,255,0])
, "i8", ALLOC_NONE, Runtime.GLOBAL_BASE)
var tempDoublePtr = Runtime.alignMemory(allocate(12, "i8", ALLOC_STATIC), 8);
assert(tempDoublePtr % 8 == 0);
function copyTempFloat(ptr) { // functions, because inlining this code increases code size too much
  HEAP8[tempDoublePtr] = HEAP8[ptr];
  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];
  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];
  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];
}
function copyTempDouble(ptr) {
  HEAP8[tempDoublePtr] = HEAP8[ptr];
  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];
  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];
  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];
  HEAP8[tempDoublePtr+4] = HEAP8[ptr+4];
  HEAP8[tempDoublePtr+5] = HEAP8[ptr+5];
  HEAP8[tempDoublePtr+6] = HEAP8[ptr+6];
  HEAP8[tempDoublePtr+7] = HEAP8[ptr+7];
}
  var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:42,EIDRM:43,ECHRNG:44,EL2NSYNC:45,EL3HLT:46,EL3RST:47,ELNRNG:48,EUNATCH:49,ENOCSI:50,EL2HLT:51,EDEADLK:35,ENOLCK:37,EBADE:52,EBADR:53,EXFULL:54,ENOANO:55,EBADRQC:56,EBADSLT:57,EDEADLOCK:35,EBFONT:59,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:72,EDOTDOT:73,EBADMSG:74,ENOTUNIQ:76,EBADFD:77,EREMCHG:78,ELIBACC:79,ELIBBAD:80,ELIBSCN:81,ELIBMAX:82,ELIBEXEC:83,ENOSYS:38,ENOTEMPTY:39,ENAMETOOLONG:36,ELOOP:40,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:97,EPROTOTYPE:91,ENOTSOCK:88,ENOPROTOOPT:92,ESHUTDOWN:108,ECONNREFUSED:111,EADDRINUSE:98,ECONNABORTED:103,ENETUNREACH:101,ENETDOWN:100,ETIMEDOUT:110,EHOSTDOWN:112,EHOSTUNREACH:113,EINPROGRESS:115,EALREADY:114,EDESTADDRREQ:89,EMSGSIZE:90,EPROTONOSUPPORT:93,ESOCKTNOSUPPORT:94,EADDRNOTAVAIL:99,ENETRESET:102,EISCONN:106,ENOTCONN:107,ETOOMANYREFS:109,EUSERS:87,EDQUOT:122,ESTALE:116,ENOTSUP:95,ENOMEDIUM:123,EILSEQ:84,EOVERFLOW:75,ECANCELED:125,ENOTRECOVERABLE:131,EOWNERDEAD:130,ESTRPIPE:86};
  var ERRNO_MESSAGES={0:"Success",1:"Not super-user",2:"No such file or directory",3:"No such process",4:"Interrupted system call",5:"I/O error",6:"No such device or address",7:"Arg list too long",8:"Exec format error",9:"Bad file number",10:"No children",11:"No more processes",12:"Not enough core",13:"Permission denied",14:"Bad address",15:"Block device required",16:"Mount device busy",17:"File exists",18:"Cross-device link",19:"No such device",20:"Not a directory",21:"Is a directory",22:"Invalid argument",23:"Too many open files in system",24:"Too many open files",25:"Not a typewriter",26:"Text file busy",27:"File too large",28:"No space left on device",29:"Illegal seek",30:"Read only file system",31:"Too many links",32:"Broken pipe",33:"Math arg out of domain of func",34:"Math result not representable",35:"File locking deadlock error",36:"File or path name too long",37:"No record locks available",38:"Function not implemented",39:"Directory not empty",40:"Too many symbolic links",42:"No message of desired type",43:"Identifier removed",44:"Channel number out of range",45:"Level 2 not synchronized",46:"Level 3 halted",47:"Level 3 reset",48:"Link number out of range",49:"Protocol driver not attached",50:"No CSI structure available",51:"Level 2 halted",52:"Invalid exchange",53:"Invalid request descriptor",54:"Exchange full",55:"No anode",56:"Invalid request code",57:"Invalid slot",59:"Bad font file fmt",60:"Device not a stream",61:"No data (for no delay io)",62:"Timer expired",63:"Out of streams resources",64:"Machine is not on the network",65:"Package not installed",66:"The object is remote",67:"The link has been severed",68:"Advertise error",69:"Srmount error",70:"Communication error on send",71:"Protocol error",72:"Multihop attempted",73:"Cross mount point (not really error)",74:"Trying to read unreadable message",75:"Value too large for defined data type",76:"Given log. name not unique",77:"f.d. invalid for this operation",78:"Remote address changed",79:"Can   access a needed shared lib",80:"Accessing a corrupted shared lib",81:".lib section in a.out corrupted",82:"Attempting to link in too many libs",83:"Attempting to exec a shared library",84:"Illegal byte sequence",86:"Streams pipe error",87:"Too many users",88:"Socket operation on non-socket",89:"Destination address required",90:"Message too long",91:"Protocol wrong type for socket",92:"Protocol not available",93:"Unknown protocol",94:"Socket type not supported",95:"Not supported",96:"Protocol family not supported",97:"Address family not supported by protocol family",98:"Address already in use",99:"Address not available",100:"Network interface is not configured",101:"Network is unreachable",102:"Connection reset by network",103:"Connection aborted",104:"Connection reset by peer",105:"No buffer space available",106:"Socket is already connected",107:"Socket is not connected",108:"Can't send after socket shutdown",109:"Too many references",110:"Connection timed out",111:"Connection refused",112:"Host is down",113:"Host is unreachable",114:"Socket already connected",115:"Connection already in progress",116:"Stale file handle",122:"Quota exceeded",123:"No medium (in tape drive)",125:"Operation canceled",130:"Previous owner died",131:"State not recoverable"};
  var ___errno_state=0;function ___setErrNo(value) {
      // For convenient setting and returning of errno.
      HEAP32[((___errno_state)>>2)]=value
      return value;
    }
  var PATH={splitPath:function (filename) {
        var splitPathRe = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
        return splitPathRe.exec(filename).slice(1);
      },normalizeArray:function (parts, allowAboveRoot) {
        // if the path tries to go above the root, `up` ends up > 0
        var up = 0;
        for (var i = parts.length - 1; i >= 0; i--) {
          var last = parts[i];
          if (last === '.') {
            parts.splice(i, 1);
          } else if (last === '..') {
            parts.splice(i, 1);
            up++;
          } else if (up) {
            parts.splice(i, 1);
            up--;
          }
        }
        // if the path is allowed to go above the root, restore leading ..s
        if (allowAboveRoot) {
          for (; up--; up) {
            parts.unshift('..');
          }
        }
        return parts;
      },normalize:function (path) {
        var isAbsolute = path.charAt(0) === '/',
            trailingSlash = path.substr(-1) === '/';
        // Normalize the path
        path = PATH.normalizeArray(path.split('/').filter(function(p) {
          return !!p;
        }), !isAbsolute).join('/');
        if (!path && !isAbsolute) {
          path = '.';
        }
        if (path && trailingSlash) {
          path += '/';
        }
        return (isAbsolute ? '/' : '') + path;
      },dirname:function (path) {
        var result = PATH.splitPath(path),
            root = result[0],
            dir = result[1];
        if (!root && !dir) {
          // No dirname whatsoever
          return '.';
        }
        if (dir) {
          // It has a dirname, strip trailing slash
          dir = dir.substr(0, dir.length - 1);
        }
        return root + dir;
      },basename:function (path) {
        // EMSCRIPTEN return '/'' for '/', not an empty string
        if (path === '/') return '/';
        var lastSlash = path.lastIndexOf('/');
        if (lastSlash === -1) return path;
        return path.substr(lastSlash+1);
      },extname:function (path) {
        return PATH.splitPath(path)[3];
      },join:function () {
        var paths = Array.prototype.slice.call(arguments, 0);
        return PATH.normalize(paths.join('/'));
      },join2:function (l, r) {
        return PATH.normalize(l + '/' + r);
      },resolve:function () {
        var resolvedPath = '',
          resolvedAbsolute = false;
        for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
          var path = (i >= 0) ? arguments[i] : FS.cwd();
          // Skip empty and invalid entries
          if (typeof path !== 'string') {
            throw new TypeError('Arguments to path.resolve must be strings');
          } else if (!path) {
            continue;
          }
          resolvedPath = path + '/' + resolvedPath;
          resolvedAbsolute = path.charAt(0) === '/';
        }
        // At this point the path should be resolved to a full absolute path, but
        // handle relative paths to be safe (might happen when process.cwd() fails)
        resolvedPath = PATH.normalizeArray(resolvedPath.split('/').filter(function(p) {
          return !!p;
        }), !resolvedAbsolute).join('/');
        return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';
      },relative:function (from, to) {
        from = PATH.resolve(from).substr(1);
        to = PATH.resolve(to).substr(1);
        function trim(arr) {
          var start = 0;
          for (; start < arr.length; start++) {
            if (arr[start] !== '') break;
          }
          var end = arr.length - 1;
          for (; end >= 0; end--) {
            if (arr[end] !== '') break;
          }
          if (start > end) return [];
          return arr.slice(start, end - start + 1);
        }
        var fromParts = trim(from.split('/'));
        var toParts = trim(to.split('/'));
        var length = Math.min(fromParts.length, toParts.length);
        var samePartsLength = length;
        for (var i = 0; i < length; i++) {
          if (fromParts[i] !== toParts[i]) {
            samePartsLength = i;
            break;
          }
        }
        var outputParts = [];
        for (var i = samePartsLength; i < fromParts.length; i++) {
          outputParts.push('..');
        }
        outputParts = outputParts.concat(toParts.slice(samePartsLength));
        return outputParts.join('/');
      }};
  var TTY={ttys:[],init:function () {
        // https://github.com/kripken/emscripten/pull/1555
        // if (ENVIRONMENT_IS_NODE) {
        //   // currently, FS.init does not distinguish if process.stdin is a file or TTY
        //   // device, it always assumes it's a TTY device. because of this, we're forcing
        //   // process.stdin to UTF8 encoding to at least make stdin reading compatible
        //   // with text files until FS.init can be refactored.
        //   process['stdin']['setEncoding']('utf8');
        // }
      },shutdown:function () {
        // https://github.com/kripken/emscripten/pull/1555
        // if (ENVIRONMENT_IS_NODE) {
        //   // inolen: any idea as to why node -e 'process.stdin.read()' wouldn't exit immediately (with process.stdin being a tty)?
        //   // isaacs: because now it's reading from the stream, you've expressed interest in it, so that read() kicks off a _read() which creates a ReadReq operation
        //   // inolen: I thought read() in that case was a synchronous operation that just grabbed some amount of buffered data if it exists?
        //   // isaacs: it is. but it also triggers a _read() call, which calls readStart() on the handle
        //   // isaacs: do process.stdin.pause() and i'd think it'd probably close the pending call
        //   process['stdin']['pause']();
        // }
      },register:function (dev, ops) {
        TTY.ttys[dev] = { input: [], output: [], ops: ops };
        FS.registerDevice(dev, TTY.stream_ops);
      },stream_ops:{open:function (stream) {
          var tty = TTY.ttys[stream.node.rdev];
          if (!tty) {
            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
          }
          stream.tty = tty;
          stream.seekable = false;
        },close:function (stream) {
          // flush any pending line data
          if (stream.tty.output.length) {
            stream.tty.ops.put_char(stream.tty, 10);
          }
        },read:function (stream, buffer, offset, length, pos /* ignored */) {
          if (!stream.tty || !stream.tty.ops.get_char) {
            throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
          }
          var bytesRead = 0;
          for (var i = 0; i < length; i++) {
            var result;
            try {
              result = stream.tty.ops.get_char(stream.tty);
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
            if (result === undefined && bytesRead === 0) {
              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
            }
            if (result === null || result === undefined) break;
            bytesRead++;
            buffer[offset+i] = result;
          }
          if (bytesRead) {
            stream.node.timestamp = Date.now();
          }
          return bytesRead;
        },write:function (stream, buffer, offset, length, pos) {
          if (!stream.tty || !stream.tty.ops.put_char) {
            throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
          }
          for (var i = 0; i < length; i++) {
            try {
              stream.tty.ops.put_char(stream.tty, buffer[offset+i]);
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
          }
          if (length) {
            stream.node.timestamp = Date.now();
          }
          return i;
        }},default_tty_ops:{get_char:function (tty) {
          if (!tty.input.length) {
            var result = null;
            if (ENVIRONMENT_IS_NODE) {
              result = process['stdin']['read']();
              if (!result) {
                if (process['stdin']['_readableState'] && process['stdin']['_readableState']['ended']) {
                  return null;  // EOF
                }
                return undefined;  // no data available
              }
            } else if (typeof window != 'undefined' &&
              typeof window.prompt == 'function') {
              // Browser.
              result = window.prompt('Input: ');  // returns null on cancel
              if (result !== null) {
                result += '\n';
              }
            } else if (typeof readline == 'function') {
              // Command line.
              result = readline();
              if (result !== null) {
                result += '\n';
              }
            }
            if (!result) {
              return null;
            }
            tty.input = intArrayFromString(result, true);
          }
          return tty.input.shift();
        },put_char:function (tty, val) {
          if (val === null || val === 10) {
            Module['print'](tty.output.join(''));
            tty.output = [];
          } else {
            tty.output.push(TTY.utf8.processCChar(val));
          }
        }},default_tty1_ops:{put_char:function (tty, val) {
          if (val === null || val === 10) {
            Module['printErr'](tty.output.join(''));
            tty.output = [];
          } else {
            tty.output.push(TTY.utf8.processCChar(val));
          }
        }}};
  var MEMFS={ops_table:null,CONTENT_OWNING:1,CONTENT_FLEXIBLE:2,CONTENT_FIXED:3,mount:function (mount) {
        return MEMFS.createNode(null, '/', 16384 | 0777, 0);
      },createNode:function (parent, name, mode, dev) {
        if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {
          // no supported
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (!MEMFS.ops_table) {
          MEMFS.ops_table = {
            dir: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr,
                lookup: MEMFS.node_ops.lookup,
                mknod: MEMFS.node_ops.mknod,
                mknod: MEMFS.node_ops.mknod,
                rename: MEMFS.node_ops.rename,
                unlink: MEMFS.node_ops.unlink,
                rmdir: MEMFS.node_ops.rmdir,
                readdir: MEMFS.node_ops.readdir,
                symlink: MEMFS.node_ops.symlink
              },
              stream: {
                llseek: MEMFS.stream_ops.llseek
              }
            },
            file: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr
              },
              stream: {
                llseek: MEMFS.stream_ops.llseek,
                read: MEMFS.stream_ops.read,
                write: MEMFS.stream_ops.write,
                allocate: MEMFS.stream_ops.allocate,
                mmap: MEMFS.stream_ops.mmap
              }
            },
            link: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr,
                readlink: MEMFS.node_ops.readlink
              },
              stream: {}
            },
            chrdev: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr
              },
              stream: FS.chrdev_stream_ops
            },
          };
        }
        var node = FS.createNode(parent, name, mode, dev);
        if (FS.isDir(node.mode)) {
          node.node_ops = MEMFS.ops_table.dir.node;
          node.stream_ops = MEMFS.ops_table.dir.stream;
          node.contents = {};
        } else if (FS.isFile(node.mode)) {
          node.node_ops = MEMFS.ops_table.file.node;
          node.stream_ops = MEMFS.ops_table.file.stream;
          node.contents = [];
          node.contentMode = MEMFS.CONTENT_FLEXIBLE;
        } else if (FS.isLink(node.mode)) {
          node.node_ops = MEMFS.ops_table.link.node;
          node.stream_ops = MEMFS.ops_table.link.stream;
        } else if (FS.isChrdev(node.mode)) {
          node.node_ops = MEMFS.ops_table.chrdev.node;
          node.stream_ops = MEMFS.ops_table.chrdev.stream;
        }
        node.timestamp = Date.now();
        // add the new node to the parent
        if (parent) {
          parent.contents[name] = node;
        }
        return node;
      },ensureFlexible:function (node) {
        if (node.contentMode !== MEMFS.CONTENT_FLEXIBLE) {
          var contents = node.contents;
          node.contents = Array.prototype.slice.call(contents);
          node.contentMode = MEMFS.CONTENT_FLEXIBLE;
        }
      },node_ops:{getattr:function (node) {
          var attr = {};
          // device numbers reuse inode numbers.
          attr.dev = FS.isChrdev(node.mode) ? node.id : 1;
          attr.ino = node.id;
          attr.mode = node.mode;
          attr.nlink = 1;
          attr.uid = 0;
          attr.gid = 0;
          attr.rdev = node.rdev;
          if (FS.isDir(node.mode)) {
            attr.size = 4096;
          } else if (FS.isFile(node.mode)) {
            attr.size = node.contents.length;
          } else if (FS.isLink(node.mode)) {
            attr.size = node.link.length;
          } else {
            attr.size = 0;
          }
          attr.atime = new Date(node.timestamp);
          attr.mtime = new Date(node.timestamp);
          attr.ctime = new Date(node.timestamp);
          // NOTE: In our implementation, st_blocks = Math.ceil(st_size/st_blksize),
          //       but this is not required by the standard.
          attr.blksize = 4096;
          attr.blocks = Math.ceil(attr.size / attr.blksize);
          return attr;
        },setattr:function (node, attr) {
          if (attr.mode !== undefined) {
            node.mode = attr.mode;
          }
          if (attr.timestamp !== undefined) {
            node.timestamp = attr.timestamp;
          }
          if (attr.size !== undefined) {
            MEMFS.ensureFlexible(node);
            var contents = node.contents;
            if (attr.size < contents.length) contents.length = attr.size;
            else while (attr.size > contents.length) contents.push(0);
          }
        },lookup:function (parent, name) {
          throw FS.genericErrors[ERRNO_CODES.ENOENT];
        },mknod:function (parent, name, mode, dev) {
          return MEMFS.createNode(parent, name, mode, dev);
        },rename:function (old_node, new_dir, new_name) {
          // if we're overwriting a directory at new_name, make sure it's empty.
          if (FS.isDir(old_node.mode)) {
            var new_node;
            try {
              new_node = FS.lookupNode(new_dir, new_name);
            } catch (e) {
            }
            if (new_node) {
              for (var i in new_node.contents) {
                throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
              }
            }
          }
          // do the internal rewiring
          delete old_node.parent.contents[old_node.name];
          old_node.name = new_name;
          new_dir.contents[new_name] = old_node;
          old_node.parent = new_dir;
        },unlink:function (parent, name) {
          delete parent.contents[name];
        },rmdir:function (parent, name) {
          var node = FS.lookupNode(parent, name);
          for (var i in node.contents) {
            throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
          }
          delete parent.contents[name];
        },readdir:function (node) {
          var entries = ['.', '..']
          for (var key in node.contents) {
            if (!node.contents.hasOwnProperty(key)) {
              continue;
            }
            entries.push(key);
          }
          return entries;
        },symlink:function (parent, newname, oldpath) {
          var node = MEMFS.createNode(parent, newname, 0777 | 40960, 0);
          node.link = oldpath;
          return node;
        },readlink:function (node) {
          if (!FS.isLink(node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          return node.link;
        }},stream_ops:{read:function (stream, buffer, offset, length, position) {
          var contents = stream.node.contents;
          if (position >= contents.length)
            return 0;
          var size = Math.min(contents.length - position, length);
          assert(size >= 0);
          if (size > 8 && contents.subarray) { // non-trivial, and typed array
            buffer.set(contents.subarray(position, position + size), offset);
          } else
          {
            for (var i = 0; i < size; i++) {
              buffer[offset + i] = contents[position + i];
            }
          }
          return size;
        },write:function (stream, buffer, offset, length, position, canOwn) {
          var node = stream.node;
          node.timestamp = Date.now();
          var contents = node.contents;
          if (length && contents.length === 0 && position === 0 && buffer.subarray) {
            // just replace it with the new data
            if (canOwn && offset === 0) {
              node.contents = buffer; // this could be a subarray of Emscripten HEAP, or allocated from some other source.
              node.contentMode = (buffer.buffer === HEAP8.buffer) ? MEMFS.CONTENT_OWNING : MEMFS.CONTENT_FIXED;
            } else {
              node.contents = new Uint8Array(buffer.subarray(offset, offset+length));
              node.contentMode = MEMFS.CONTENT_FIXED;
            }
            return length;
          }
          MEMFS.ensureFlexible(node);
          var contents = node.contents;
          while (contents.length < position) contents.push(0);
          for (var i = 0; i < length; i++) {
            contents[position + i] = buffer[offset + i];
          }
          return length;
        },llseek:function (stream, offset, whence) {
          var position = offset;
          if (whence === 1) {  // SEEK_CUR.
            position += stream.position;
          } else if (whence === 2) {  // SEEK_END.
            if (FS.isFile(stream.node.mode)) {
              position += stream.node.contents.length;
            }
          }
          if (position < 0) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          stream.ungotten = [];
          stream.position = position;
          return position;
        },allocate:function (stream, offset, length) {
          MEMFS.ensureFlexible(stream.node);
          var contents = stream.node.contents;
          var limit = offset + length;
          while (limit > contents.length) contents.push(0);
        },mmap:function (stream, buffer, offset, length, position, prot, flags) {
          if (!FS.isFile(stream.node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
          }
          var ptr;
          var allocated;
          var contents = stream.node.contents;
          // Only make a new copy when MAP_PRIVATE is specified.
          if ( !(flags & 2) &&
                (contents.buffer === buffer || contents.buffer === buffer.buffer) ) {
            // We can't emulate MAP_SHARED when the file is not backed by the buffer
            // we're mapping to (e.g. the HEAP buffer).
            allocated = false;
            ptr = contents.byteOffset;
          } else {
            // Try to avoid unnecessary slices.
            if (position > 0 || position + length < contents.length) {
              if (contents.subarray) {
                contents = contents.subarray(position, position + length);
              } else {
                contents = Array.prototype.slice.call(contents, position, position + length);
              }
            }
            allocated = true;
            ptr = _malloc(length);
            if (!ptr) {
              throw new FS.ErrnoError(ERRNO_CODES.ENOMEM);
            }
            buffer.set(contents, ptr);
          }
          return { ptr: ptr, allocated: allocated };
        }}};
  var IDBFS={dbs:{},indexedDB:function () {
        return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
      },DB_VERSION:20,DB_STORE_NAME:"FILE_DATA",mount:function (mount) {
        return MEMFS.mount.apply(null, arguments);
      },syncfs:function (mount, populate, callback) {
        IDBFS.getLocalSet(mount, function(err, local) {
          if (err) return callback(err);
          IDBFS.getRemoteSet(mount, function(err, remote) {
            if (err) return callback(err);
            var src = populate ? remote : local;
            var dst = populate ? local : remote;
            IDBFS.reconcile(src, dst, callback);
          });
        });
      },reconcile:function (src, dst, callback) {
        var total = 0;
        var create = {};
        for (var key in src.files) {
          if (!src.files.hasOwnProperty(key)) continue;
          var e = src.files[key];
          var e2 = dst.files[key];
          if (!e2 || e.timestamp > e2.timestamp) {
            create[key] = e;
            total++;
          }
        }
        var remove = {};
        for (var key in dst.files) {
          if (!dst.files.hasOwnProperty(key)) continue;
          var e = dst.files[key];
          var e2 = src.files[key];
          if (!e2) {
            remove[key] = e;
            total++;
          }
        }
        if (!total) {
          // early out
          return callback(null);
        }
        var completed = 0;
        function done(err) {
          if (err) return callback(err);
          if (++completed >= total) {
            return callback(null);
          }
        };
        // create a single transaction to handle and IDB reads / writes we'll need to do
        var db = src.type === 'remote' ? src.db : dst.db;
        var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readwrite');
        transaction.onerror = function transaction_onerror() { callback(this.error); };
        var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
        for (var path in create) {
          if (!create.hasOwnProperty(path)) continue;
          var entry = create[path];
          if (dst.type === 'local') {
            // save file to local
            try {
              if (FS.isDir(entry.mode)) {
                FS.mkdir(path, entry.mode);
              } else if (FS.isFile(entry.mode)) {
                var stream = FS.open(path, 'w+', 0666);
                FS.write(stream, entry.contents, 0, entry.contents.length, 0, true /* canOwn */);
                FS.close(stream);
              }
              done(null);
            } catch (e) {
              return done(e);
            }
          } else {
            // save file to IDB
            var req = store.put(entry, path);
            req.onsuccess = function req_onsuccess() { done(null); };
            req.onerror = function req_onerror() { done(this.error); };
          }
        }
        for (var path in remove) {
          if (!remove.hasOwnProperty(path)) continue;
          var entry = remove[path];
          if (dst.type === 'local') {
            // delete file from local
            try {
              if (FS.isDir(entry.mode)) {
                // TODO recursive delete?
                FS.rmdir(path);
              } else if (FS.isFile(entry.mode)) {
                FS.unlink(path);
              }
              done(null);
            } catch (e) {
              return done(e);
            }
          } else {
            // delete file from IDB
            var req = store.delete(path);
            req.onsuccess = function req_onsuccess() { done(null); };
            req.onerror = function req_onerror() { done(this.error); };
          }
        }
      },getLocalSet:function (mount, callback) {
        var files = {};
        function isRealDir(p) {
          return p !== '.' && p !== '..';
        };
        function toAbsolute(root) {
          return function(p) {
            return PATH.join2(root, p);
          }
        };
        var check = FS.readdir(mount.mountpoint)
          .filter(isRealDir)
          .map(toAbsolute(mount.mountpoint));
        while (check.length) {
          var path = check.pop();
          var stat, node;
          try {
            var lookup = FS.lookupPath(path);
            node = lookup.node;
            stat = FS.stat(path);
          } catch (e) {
            return callback(e);
          }
          if (FS.isDir(stat.mode)) {
            check.push.apply(check, FS.readdir(path)
              .filter(isRealDir)
              .map(toAbsolute(path)));
            files[path] = { mode: stat.mode, timestamp: stat.mtime };
          } else if (FS.isFile(stat.mode)) {
            files[path] = { contents: node.contents, mode: stat.mode, timestamp: stat.mtime };
          } else {
            return callback(new Error('node type not supported'));
          }
        }
        return callback(null, { type: 'local', files: files });
      },getDB:function (name, callback) {
        // look it up in the cache
        var db = IDBFS.dbs[name];
        if (db) {
          return callback(null, db);
        }
        var req;
        try {
          req = IDBFS.indexedDB().open(name, IDBFS.DB_VERSION);
        } catch (e) {
          return onerror(e);
        }
        req.onupgradeneeded = function req_onupgradeneeded() {
          db = req.result;
          db.createObjectStore(IDBFS.DB_STORE_NAME);
        };
        req.onsuccess = function req_onsuccess() {
          db = req.result;
          // add to the cache
          IDBFS.dbs[name] = db;
          callback(null, db);
        };
        req.onerror = function req_onerror() {
          callback(this.error);
        };
      },getRemoteSet:function (mount, callback) {
        var files = {};
        IDBFS.getDB(mount.mountpoint, function(err, db) {
          if (err) return callback(err);
          var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readonly');
          transaction.onerror = function transaction_onerror() { callback(this.error); };
          var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
          store.openCursor().onsuccess = function store_openCursor_onsuccess(event) {
            var cursor = event.target.result;
            if (!cursor) {
              return callback(null, { type: 'remote', db: db, files: files });
            }
            files[cursor.key] = cursor.value;
            cursor.continue();
          };
        });
      }};
  var NODEFS={isWindows:false,staticInit:function () {
        NODEFS.isWindows = !!process.platform.match(/^win/);
      },mount:function (mount) {
        assert(ENVIRONMENT_IS_NODE);
        return NODEFS.createNode(null, '/', NODEFS.getMode(mount.opts.root), 0);
      },createNode:function (parent, name, mode, dev) {
        if (!FS.isDir(mode) && !FS.isFile(mode) && !FS.isLink(mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var node = FS.createNode(parent, name, mode);
        node.node_ops = NODEFS.node_ops;
        node.stream_ops = NODEFS.stream_ops;
        return node;
      },getMode:function (path) {
        var stat;
        try {
          stat = fs.lstatSync(path);
          if (NODEFS.isWindows) {
            // On Windows, directories return permission bits 'rw-rw-rw-', even though they have 'rwxrwxrwx', so 
            // propagate write bits to execute bits.
            stat.mode = stat.mode | ((stat.mode & 146) >> 1);
          }
        } catch (e) {
          if (!e.code) throw e;
          throw new FS.ErrnoError(ERRNO_CODES[e.code]);
        }
        return stat.mode;
      },realPath:function (node) {
        var parts = [];
        while (node.parent !== node) {
          parts.push(node.name);
          node = node.parent;
        }
        parts.push(node.mount.opts.root);
        parts.reverse();
        return PATH.join.apply(null, parts);
      },flagsToPermissionStringMap:{0:"r",1:"r+",2:"r+",64:"r",65:"r+",66:"r+",129:"rx+",193:"rx+",514:"w+",577:"w",578:"w+",705:"wx",706:"wx+",1024:"a",1025:"a",1026:"a+",1089:"a",1090:"a+",1153:"ax",1154:"ax+",1217:"ax",1218:"ax+",4096:"rs",4098:"rs+"},flagsToPermissionString:function (flags) {
        if (flags in NODEFS.flagsToPermissionStringMap) {
          return NODEFS.flagsToPermissionStringMap[flags];
        } else {
          return flags;
        }
      },node_ops:{getattr:function (node) {
          var path = NODEFS.realPath(node);
          var stat;
          try {
            stat = fs.lstatSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          // node.js v0.10.20 doesn't report blksize and blocks on Windows. Fake them with default blksize of 4096.
          // See http://support.microsoft.com/kb/140365
          if (NODEFS.isWindows && !stat.blksize) {
            stat.blksize = 4096;
          }
          if (NODEFS.isWindows && !stat.blocks) {
            stat.blocks = (stat.size+stat.blksize-1)/stat.blksize|0;
          }
          return {
            dev: stat.dev,
            ino: stat.ino,
            mode: stat.mode,
            nlink: stat.nlink,
            uid: stat.uid,
            gid: stat.gid,
            rdev: stat.rdev,
            size: stat.size,
            atime: stat.atime,
            mtime: stat.mtime,
            ctime: stat.ctime,
            blksize: stat.blksize,
            blocks: stat.blocks
          };
        },setattr:function (node, attr) {
          var path = NODEFS.realPath(node);
          try {
            if (attr.mode !== undefined) {
              fs.chmodSync(path, attr.mode);
              // update the common node structure mode as well
              node.mode = attr.mode;
            }
            if (attr.timestamp !== undefined) {
              var date = new Date(attr.timestamp);
              fs.utimesSync(path, date, date);
            }
            if (attr.size !== undefined) {
              fs.truncateSync(path, attr.size);
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },lookup:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          var mode = NODEFS.getMode(path);
          return NODEFS.createNode(parent, name, mode);
        },mknod:function (parent, name, mode, dev) {
          var node = NODEFS.createNode(parent, name, mode, dev);
          // create the backing node for this in the fs root as well
          var path = NODEFS.realPath(node);
          try {
            if (FS.isDir(node.mode)) {
              fs.mkdirSync(path, node.mode);
            } else {
              fs.writeFileSync(path, '', { mode: node.mode });
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          return node;
        },rename:function (oldNode, newDir, newName) {
          var oldPath = NODEFS.realPath(oldNode);
          var newPath = PATH.join2(NODEFS.realPath(newDir), newName);
          try {
            fs.renameSync(oldPath, newPath);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },unlink:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          try {
            fs.unlinkSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },rmdir:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          try {
            fs.rmdirSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },readdir:function (node) {
          var path = NODEFS.realPath(node);
          try {
            return fs.readdirSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },symlink:function (parent, newName, oldPath) {
          var newPath = PATH.join2(NODEFS.realPath(parent), newName);
          try {
            fs.symlinkSync(oldPath, newPath);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },readlink:function (node) {
          var path = NODEFS.realPath(node);
          try {
            return fs.readlinkSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        }},stream_ops:{open:function (stream) {
          var path = NODEFS.realPath(stream.node);
          try {
            if (FS.isFile(stream.node.mode)) {
              stream.nfd = fs.openSync(path, NODEFS.flagsToPermissionString(stream.flags));
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },close:function (stream) {
          try {
            if (FS.isFile(stream.node.mode) && stream.nfd) {
              fs.closeSync(stream.nfd);
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },read:function (stream, buffer, offset, length, position) {
          // FIXME this is terrible.
          var nbuffer = new Buffer(length);
          var res;
          try {
            res = fs.readSync(stream.nfd, nbuffer, 0, length, position);
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          if (res > 0) {
            for (var i = 0; i < res; i++) {
              buffer[offset + i] = nbuffer[i];
            }
          }
          return res;
        },write:function (stream, buffer, offset, length, position) {
          // FIXME this is terrible.
          var nbuffer = new Buffer(buffer.subarray(offset, offset + length));
          var res;
          try {
            res = fs.writeSync(stream.nfd, nbuffer, 0, length, position);
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          return res;
        },llseek:function (stream, offset, whence) {
          var position = offset;
          if (whence === 1) {  // SEEK_CUR.
            position += stream.position;
          } else if (whence === 2) {  // SEEK_END.
            if (FS.isFile(stream.node.mode)) {
              try {
                var stat = fs.fstatSync(stream.nfd);
                position += stat.size;
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES[e.code]);
              }
            }
          }
          if (position < 0) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          stream.position = position;
          return position;
        }}};
  var _stdin=allocate(1, "i32*", ALLOC_STATIC);
  var _stdout=allocate(1, "i32*", ALLOC_STATIC);
  var _stderr=allocate(1, "i32*", ALLOC_STATIC);
  function _fflush(stream) {
      // int fflush(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fflush.html
      // we don't currently perform any user-space buffering of data
    }var FS={root:null,mounts:[],devices:[null],streams:[null],nextInode:1,nameTable:null,currentPath:"/",initialized:false,ignorePermissions:true,ErrnoError:null,genericErrors:{},handleFSError:function (e) {
        if (!(e instanceof FS.ErrnoError)) throw e + ' : ' + stackTrace();
        return ___setErrNo(e.errno);
      },lookupPath:function (path, opts) {
        path = PATH.resolve(FS.cwd(), path);
        opts = opts || { recurse_count: 0 };
        if (opts.recurse_count > 8) {  // max recursive lookup of 8
          throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
        }
        // split the path
        var parts = PATH.normalizeArray(path.split('/').filter(function(p) {
          return !!p;
        }), false);
        // start at the root
        var current = FS.root;
        var current_path = '/';
        for (var i = 0; i < parts.length; i++) {
          var islast = (i === parts.length-1);
          if (islast && opts.parent) {
            // stop resolving
            break;
          }
          current = FS.lookupNode(current, parts[i]);
          current_path = PATH.join2(current_path, parts[i]);
          // jump to the mount's root node if this is a mountpoint
          if (FS.isMountpoint(current)) {
            current = current.mount.root;
          }
          // follow symlinks
          // by default, lookupPath will not follow a symlink if it is the final path component.
          // setting opts.follow = true will override this behavior.
          if (!islast || opts.follow) {
            var count = 0;
            while (FS.isLink(current.mode)) {
              var link = FS.readlink(current_path);
              current_path = PATH.resolve(PATH.dirname(current_path), link);
              var lookup = FS.lookupPath(current_path, { recurse_count: opts.recurse_count });
              current = lookup.node;
              if (count++ > 40) {  // limit max consecutive symlinks to 40 (SYMLOOP_MAX).
                throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
              }
            }
          }
        }
        return { path: current_path, node: current };
      },getPath:function (node) {
        var path;
        while (true) {
          if (FS.isRoot(node)) {
            var mount = node.mount.mountpoint;
            if (!path) return mount;
            return mount[mount.length-1] !== '/' ? mount + '/' + path : mount + path;
          }
          path = path ? node.name + '/' + path : node.name;
          node = node.parent;
        }
      },hashName:function (parentid, name) {
        var hash = 0;
        for (var i = 0; i < name.length; i++) {
          hash = ((hash << 5) - hash + name.charCodeAt(i)) | 0;
        }
        return ((parentid + hash) >>> 0) % FS.nameTable.length;
      },hashAddNode:function (node) {
        var hash = FS.hashName(node.parent.id, node.name);
        node.name_next = FS.nameTable[hash];
        FS.nameTable[hash] = node;
      },hashRemoveNode:function (node) {
        var hash = FS.hashName(node.parent.id, node.name);
        if (FS.nameTable[hash] === node) {
          FS.nameTable[hash] = node.name_next;
        } else {
          var current = FS.nameTable[hash];
          while (current) {
            if (current.name_next === node) {
              current.name_next = node.name_next;
              break;
            }
            current = current.name_next;
          }
        }
      },lookupNode:function (parent, name) {
        var err = FS.mayLookup(parent);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        var hash = FS.hashName(parent.id, name);
        for (var node = FS.nameTable[hash]; node; node = node.name_next) {
          var nodeName = node.name;
          if (node.parent.id === parent.id && nodeName === name) {
            return node;
          }
        }
        // if we failed to find it in the cache, call into the VFS
        return FS.lookup(parent, name);
      },createNode:function (parent, name, mode, rdev) {
        if (!FS.FSNode) {
          FS.FSNode = function(parent, name, mode, rdev) {
            this.id = FS.nextInode++;
            this.name = name;
            this.mode = mode;
            this.node_ops = {};
            this.stream_ops = {};
            this.rdev = rdev;
            this.parent = null;
            this.mount = null;
            if (!parent) {
              parent = this;  // root node sets parent to itself
            }
            this.parent = parent;
            this.mount = parent.mount;
            FS.hashAddNode(this);
          };
          // compatibility
          var readMode = 292 | 73;
          var writeMode = 146;
          FS.FSNode.prototype = {};
          // NOTE we must use Object.defineProperties instead of individual calls to
          // Object.defineProperty in order to make closure compiler happy
          Object.defineProperties(FS.FSNode.prototype, {
            read: {
              get: function() { return (this.mode & readMode) === readMode; },
              set: function(val) { val ? this.mode |= readMode : this.mode &= ~readMode; }
            },
            write: {
              get: function() { return (this.mode & writeMode) === writeMode; },
              set: function(val) { val ? this.mode |= writeMode : this.mode &= ~writeMode; }
            },
            isFolder: {
              get: function() { return FS.isDir(this.mode); },
            },
            isDevice: {
              get: function() { return FS.isChrdev(this.mode); },
            },
          });
        }
        return new FS.FSNode(parent, name, mode, rdev);
      },destroyNode:function (node) {
        FS.hashRemoveNode(node);
      },isRoot:function (node) {
        return node === node.parent;
      },isMountpoint:function (node) {
        return node.mounted;
      },isFile:function (mode) {
        return (mode & 61440) === 32768;
      },isDir:function (mode) {
        return (mode & 61440) === 16384;
      },isLink:function (mode) {
        return (mode & 61440) === 40960;
      },isChrdev:function (mode) {
        return (mode & 61440) === 8192;
      },isBlkdev:function (mode) {
        return (mode & 61440) === 24576;
      },isFIFO:function (mode) {
        return (mode & 61440) === 4096;
      },isSocket:function (mode) {
        return (mode & 49152) === 49152;
      },flagModes:{"r":0,"rs":1052672,"r+":2,"w":577,"wx":705,"xw":705,"w+":578,"wx+":706,"xw+":706,"a":1089,"ax":1217,"xa":1217,"a+":1090,"ax+":1218,"xa+":1218},modeStringToFlags:function (str) {
        var flags = FS.flagModes[str];
        if (typeof flags === 'undefined') {
          throw new Error('Unknown file open mode: ' + str);
        }
        return flags;
      },flagsToPermissionString:function (flag) {
        var accmode = flag & 2097155;
        var perms = ['r', 'w', 'rw'][accmode];
        if ((flag & 512)) {
          perms += 'w';
        }
        return perms;
      },nodePermissions:function (node, perms) {
        if (FS.ignorePermissions) {
          return 0;
        }
        // return 0 if any user, group or owner bits are set.
        if (perms.indexOf('r') !== -1 && !(node.mode & 292)) {
          return ERRNO_CODES.EACCES;
        } else if (perms.indexOf('w') !== -1 && !(node.mode & 146)) {
          return ERRNO_CODES.EACCES;
        } else if (perms.indexOf('x') !== -1 && !(node.mode & 73)) {
          return ERRNO_CODES.EACCES;
        }
        return 0;
      },mayLookup:function (dir) {
        return FS.nodePermissions(dir, 'x');
      },mayCreate:function (dir, name) {
        try {
          var node = FS.lookupNode(dir, name);
          return ERRNO_CODES.EEXIST;
        } catch (e) {
        }
        return FS.nodePermissions(dir, 'wx');
      },mayDelete:function (dir, name, isdir) {
        var node;
        try {
          node = FS.lookupNode(dir, name);
        } catch (e) {
          return e.errno;
        }
        var err = FS.nodePermissions(dir, 'wx');
        if (err) {
          return err;
        }
        if (isdir) {
          if (!FS.isDir(node.mode)) {
            return ERRNO_CODES.ENOTDIR;
          }
          if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {
            return ERRNO_CODES.EBUSY;
          }
        } else {
          if (FS.isDir(node.mode)) {
            return ERRNO_CODES.EISDIR;
          }
        }
        return 0;
      },mayOpen:function (node, flags) {
        if (!node) {
          return ERRNO_CODES.ENOENT;
        }
        if (FS.isLink(node.mode)) {
          return ERRNO_CODES.ELOOP;
        } else if (FS.isDir(node.mode)) {
          if ((flags & 2097155) !== 0 ||  // opening for write
              (flags & 512)) {
            return ERRNO_CODES.EISDIR;
          }
        }
        return FS.nodePermissions(node, FS.flagsToPermissionString(flags));
      },MAX_OPEN_FDS:4096,nextfd:function (fd_start, fd_end) {
        fd_start = fd_start || 1;
        fd_end = fd_end || FS.MAX_OPEN_FDS;
        for (var fd = fd_start; fd <= fd_end; fd++) {
          if (!FS.streams[fd]) {
            return fd;
          }
        }
        throw new FS.ErrnoError(ERRNO_CODES.EMFILE);
      },getStream:function (fd) {
        return FS.streams[fd];
      },createStream:function (stream, fd_start, fd_end) {
        if (!FS.FSStream) {
          FS.FSStream = function(){};
          FS.FSStream.prototype = {};
          // compatibility
          Object.defineProperties(FS.FSStream.prototype, {
            object: {
              get: function() { return this.node; },
              set: function(val) { this.node = val; }
            },
            isRead: {
              get: function() { return (this.flags & 2097155) !== 1; }
            },
            isWrite: {
              get: function() { return (this.flags & 2097155) !== 0; }
            },
            isAppend: {
              get: function() { return (this.flags & 1024); }
            }
          });
        }
        if (stream.__proto__) {
          // reuse the object
          stream.__proto__ = FS.FSStream.prototype;
        } else {
          var newStream = new FS.FSStream();
          for (var p in stream) {
            newStream[p] = stream[p];
          }
          stream = newStream;
        }
        var fd = FS.nextfd(fd_start, fd_end);
        stream.fd = fd;
        FS.streams[fd] = stream;
        return stream;
      },closeStream:function (fd) {
        FS.streams[fd] = null;
      },chrdev_stream_ops:{open:function (stream) {
          var device = FS.getDevice(stream.node.rdev);
          // override node's stream ops with the device's
          stream.stream_ops = device.stream_ops;
          // forward the open call
          if (stream.stream_ops.open) {
            stream.stream_ops.open(stream);
          }
        },llseek:function () {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }},major:function (dev) {
        return ((dev) >> 8);
      },minor:function (dev) {
        return ((dev) & 0xff);
      },makedev:function (ma, mi) {
        return ((ma) << 8 | (mi));
      },registerDevice:function (dev, ops) {
        FS.devices[dev] = { stream_ops: ops };
      },getDevice:function (dev) {
        return FS.devices[dev];
      },syncfs:function (populate, callback) {
        if (typeof(populate) === 'function') {
          callback = populate;
          populate = false;
        }
        var completed = 0;
        var total = FS.mounts.length;
        function done(err) {
          if (err) {
            return callback(err);
          }
          if (++completed >= total) {
            callback(null);
          }
        };
        // sync all mounts
        for (var i = 0; i < FS.mounts.length; i++) {
          var mount = FS.mounts[i];
          if (!mount.type.syncfs) {
            done(null);
            continue;
          }
          mount.type.syncfs(mount, populate, done);
        }
      },mount:function (type, opts, mountpoint) {
        var lookup;
        if (mountpoint) {
          lookup = FS.lookupPath(mountpoint, { follow: false });
          mountpoint = lookup.path;  // use the absolute path
        }
        var mount = {
          type: type,
          opts: opts,
          mountpoint: mountpoint,
          root: null
        };
        // create a root node for the fs
        var root = type.mount(mount);
        root.mount = mount;
        mount.root = root;
        // assign the mount info to the mountpoint's node
        if (lookup) {
          lookup.node.mount = mount;
          lookup.node.mounted = true;
          // compatibility update FS.root if we mount to /
          if (mountpoint === '/') {
            FS.root = mount.root;
          }
        }
        // add to our cached list of mounts
        FS.mounts.push(mount);
        return root;
      },lookup:function (parent, name) {
        return parent.node_ops.lookup(parent, name);
      },mknod:function (path, mode, dev) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var err = FS.mayCreate(parent, name);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.mknod) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return parent.node_ops.mknod(parent, name, mode, dev);
      },create:function (path, mode) {
        mode = mode !== undefined ? mode : 0666;
        mode &= 4095;
        mode |= 32768;
        return FS.mknod(path, mode, 0);
      },mkdir:function (path, mode) {
        mode = mode !== undefined ? mode : 0777;
        mode &= 511 | 512;
        mode |= 16384;
        return FS.mknod(path, mode, 0);
      },mkdev:function (path, mode, dev) {
        if (typeof(dev) === 'undefined') {
          dev = mode;
          mode = 0666;
        }
        mode |= 8192;
        return FS.mknod(path, mode, dev);
      },symlink:function (oldpath, newpath) {
        var lookup = FS.lookupPath(newpath, { parent: true });
        var parent = lookup.node;
        var newname = PATH.basename(newpath);
        var err = FS.mayCreate(parent, newname);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.symlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return parent.node_ops.symlink(parent, newname, oldpath);
      },rename:function (old_path, new_path) {
        var old_dirname = PATH.dirname(old_path);
        var new_dirname = PATH.dirname(new_path);
        var old_name = PATH.basename(old_path);
        var new_name = PATH.basename(new_path);
        // parents must exist
        var lookup, old_dir, new_dir;
        try {
          lookup = FS.lookupPath(old_path, { parent: true });
          old_dir = lookup.node;
          lookup = FS.lookupPath(new_path, { parent: true });
          new_dir = lookup.node;
        } catch (e) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        // need to be part of the same mount
        if (old_dir.mount !== new_dir.mount) {
          throw new FS.ErrnoError(ERRNO_CODES.EXDEV);
        }
        // source must exist
        var old_node = FS.lookupNode(old_dir, old_name);
        // old path should not be an ancestor of the new path
        var relative = PATH.relative(old_path, new_dirname);
        if (relative.charAt(0) !== '.') {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        // new path should not be an ancestor of the old path
        relative = PATH.relative(new_path, old_dirname);
        if (relative.charAt(0) !== '.') {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
        }
        // see if the new path already exists
        var new_node;
        try {
          new_node = FS.lookupNode(new_dir, new_name);
        } catch (e) {
          // not fatal
        }
        // early out if nothing needs to change
        if (old_node === new_node) {
          return;
        }
        // we'll need to delete the old entry
        var isdir = FS.isDir(old_node.mode);
        var err = FS.mayDelete(old_dir, old_name, isdir);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        // need delete permissions if we'll be overwriting.
        // need create permissions if new doesn't already exist.
        err = new_node ?
          FS.mayDelete(new_dir, new_name, isdir) :
          FS.mayCreate(new_dir, new_name);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!old_dir.node_ops.rename) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(old_node) || (new_node && FS.isMountpoint(new_node))) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        // if we are going to change the parent, check write permissions
        if (new_dir !== old_dir) {
          err = FS.nodePermissions(old_dir, 'w');
          if (err) {
            throw new FS.ErrnoError(err);
          }
        }
        // remove the node from the lookup hash
        FS.hashRemoveNode(old_node);
        // do the underlying fs rename
        try {
          old_dir.node_ops.rename(old_node, new_dir, new_name);
        } catch (e) {
          throw e;
        } finally {
          // add the node back to the hash (in case node_ops.rename
          // changed its name)
          FS.hashAddNode(old_node);
        }
      },rmdir:function (path) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var node = FS.lookupNode(parent, name);
        var err = FS.mayDelete(parent, name, true);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.rmdir) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        parent.node_ops.rmdir(parent, name);
        FS.destroyNode(node);
      },readdir:function (path) {
        var lookup = FS.lookupPath(path, { follow: true });
        var node = lookup.node;
        if (!node.node_ops.readdir) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
        }
        return node.node_ops.readdir(node);
      },unlink:function (path) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var node = FS.lookupNode(parent, name);
        var err = FS.mayDelete(parent, name, false);
        if (err) {
          // POSIX says unlink should set EPERM, not EISDIR
          if (err === ERRNO_CODES.EISDIR) err = ERRNO_CODES.EPERM;
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.unlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        parent.node_ops.unlink(parent, name);
        FS.destroyNode(node);
      },readlink:function (path) {
        var lookup = FS.lookupPath(path, { follow: false });
        var link = lookup.node;
        if (!link.node_ops.readlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        return link.node_ops.readlink(link);
      },stat:function (path, dontFollow) {
        var lookup = FS.lookupPath(path, { follow: !dontFollow });
        var node = lookup.node;
        if (!node.node_ops.getattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return node.node_ops.getattr(node);
      },lstat:function (path) {
        return FS.stat(path, true);
      },chmod:function (path, mode, dontFollow) {
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: !dontFollow });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        node.node_ops.setattr(node, {
          mode: (mode & 4095) | (node.mode & ~4095),
          timestamp: Date.now()
        });
      },lchmod:function (path, mode) {
        FS.chmod(path, mode, true);
      },fchmod:function (fd, mode) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        FS.chmod(stream.node, mode);
      },chown:function (path, uid, gid, dontFollow) {
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: !dontFollow });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        node.node_ops.setattr(node, {
          timestamp: Date.now()
          // we ignore the uid / gid for now
        });
      },lchown:function (path, uid, gid) {
        FS.chown(path, uid, gid, true);
      },fchown:function (fd, uid, gid) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        FS.chown(stream.node, uid, gid);
      },truncate:function (path, len) {
        if (len < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: true });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isDir(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!FS.isFile(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var err = FS.nodePermissions(node, 'w');
        if (err) {
          throw new FS.ErrnoError(err);
        }
        node.node_ops.setattr(node, {
          size: len,
          timestamp: Date.now()
        });
      },ftruncate:function (fd, len) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        FS.truncate(stream.node, len);
      },utime:function (path, atime, mtime) {
        var lookup = FS.lookupPath(path, { follow: true });
        var node = lookup.node;
        node.node_ops.setattr(node, {
          timestamp: Math.max(atime, mtime)
        });
      },open:function (path, flags, mode, fd_start, fd_end) {
        flags = typeof flags === 'string' ? FS.modeStringToFlags(flags) : flags;
        mode = typeof mode === 'undefined' ? 0666 : mode;
        if ((flags & 64)) {
          mode = (mode & 4095) | 32768;
        } else {
          mode = 0;
        }
        var node;
        if (typeof path === 'object') {
          node = path;
        } else {
          path = PATH.normalize(path);
          try {
            var lookup = FS.lookupPath(path, {
              follow: !(flags & 131072)
            });
            node = lookup.node;
          } catch (e) {
            // ignore
          }
        }
        // perhaps we need to create the node
        if ((flags & 64)) {
          if (node) {
            // if O_CREAT and O_EXCL are set, error out if the node already exists
            if ((flags & 128)) {
              throw new FS.ErrnoError(ERRNO_CODES.EEXIST);
            }
          } else {
            // node doesn't exist, try to create it
            node = FS.mknod(path, mode, 0);
          }
        }
        if (!node) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        // can't truncate a device
        if (FS.isChrdev(node.mode)) {
          flags &= ~512;
        }
        // check permissions
        var err = FS.mayOpen(node, flags);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        // do truncation if necessary
        if ((flags & 512)) {
          FS.truncate(node, 0);
        }
        // we've already handled these, don't pass down to the underlying vfs
        flags &= ~(128 | 512);
        // register the stream with the filesystem
        var stream = FS.createStream({
          node: node,
          path: FS.getPath(node),  // we want the absolute path to the node
          flags: flags,
          seekable: true,
          position: 0,
          stream_ops: node.stream_ops,
          // used by the file family libc calls (fopen, fwrite, ferror, etc.)
          ungotten: [],
          error: false
        }, fd_start, fd_end);
        // call the new stream's open function
        if (stream.stream_ops.open) {
          stream.stream_ops.open(stream);
        }
        if (Module['logReadFiles'] && !(flags & 1)) {
          if (!FS.readFiles) FS.readFiles = {};
          if (!(path in FS.readFiles)) {
            FS.readFiles[path] = 1;
            Module['printErr']('read file: ' + path);
          }
        }
        return stream;
      },close:function (stream) {
        try {
          if (stream.stream_ops.close) {
            stream.stream_ops.close(stream);
          }
        } catch (e) {
          throw e;
        } finally {
          FS.closeStream(stream.fd);
        }
      },llseek:function (stream, offset, whence) {
        if (!stream.seekable || !stream.stream_ops.llseek) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        return stream.stream_ops.llseek(stream, offset, whence);
      },read:function (stream, buffer, offset, length, position) {
        if (length < 0 || position < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 1) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (FS.isDir(stream.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!stream.stream_ops.read) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var seeking = true;
        if (typeof position === 'undefined') {
          position = stream.position;
          seeking = false;
        } else if (!stream.seekable) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);
        if (!seeking) stream.position += bytesRead;
        return bytesRead;
      },write:function (stream, buffer, offset, length, position, canOwn) {
        if (length < 0 || position < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (FS.isDir(stream.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!stream.stream_ops.write) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var seeking = true;
        if (typeof position === 'undefined') {
          position = stream.position;
          seeking = false;
        } else if (!stream.seekable) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        if (stream.flags & 1024) {
          // seek to the end before writing in append mode
          FS.llseek(stream, 0, 2);
        }
        var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);
        if (!seeking) stream.position += bytesWritten;
        return bytesWritten;
      },allocate:function (stream, offset, length) {
        if (offset < 0 || length <= 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (!FS.isFile(stream.node.mode) && !FS.isDir(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
        }
        if (!stream.stream_ops.allocate) {
          throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);
        }
        stream.stream_ops.allocate(stream, offset, length);
      },mmap:function (stream, buffer, offset, length, position, prot, flags) {
        // TODO if PROT is PROT_WRITE, make sure we have write access
        if ((stream.flags & 2097155) === 1) {
          throw new FS.ErrnoError(ERRNO_CODES.EACCES);
        }
        if (!stream.stream_ops.mmap) {
          throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
        }
        return stream.stream_ops.mmap(stream, buffer, offset, length, position, prot, flags);
      },ioctl:function (stream, cmd, arg) {
        if (!stream.stream_ops.ioctl) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTTY);
        }
        return stream.stream_ops.ioctl(stream, cmd, arg);
      },readFile:function (path, opts) {
        opts = opts || {};
        opts.flags = opts.flags || 'r';
        opts.encoding = opts.encoding || 'binary';
        var ret;
        var stream = FS.open(path, opts.flags);
        var stat = FS.stat(path);
        var length = stat.size;
        var buf = new Uint8Array(length);
        FS.read(stream, buf, 0, length, 0);
        if (opts.encoding === 'utf8') {
          ret = '';
          var utf8 = new Runtime.UTF8Processor();
          for (var i = 0; i < length; i++) {
            ret += utf8.processCChar(buf[i]);
          }
        } else if (opts.encoding === 'binary') {
          ret = buf;
        } else {
          throw new Error('Invalid encoding type "' + opts.encoding + '"');
        }
        FS.close(stream);
        return ret;
      },writeFile:function (path, data, opts) {
        opts = opts || {};
        opts.flags = opts.flags || 'w';
        opts.encoding = opts.encoding || 'utf8';
        var stream = FS.open(path, opts.flags, opts.mode);
        if (opts.encoding === 'utf8') {
          var utf8 = new Runtime.UTF8Processor();
          var buf = new Uint8Array(utf8.processJSString(data));
          FS.write(stream, buf, 0, buf.length, 0);
        } else if (opts.encoding === 'binary') {
          FS.write(stream, data, 0, data.length, 0);
        } else {
          throw new Error('Invalid encoding type "' + opts.encoding + '"');
        }
        FS.close(stream);
      },cwd:function () {
        return FS.currentPath;
      },chdir:function (path) {
        var lookup = FS.lookupPath(path, { follow: true });
        if (!FS.isDir(lookup.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
        }
        var err = FS.nodePermissions(lookup.node, 'x');
        if (err) {
          throw new FS.ErrnoError(err);
        }
        FS.currentPath = lookup.path;
      },createDefaultDirectories:function () {
        FS.mkdir('/tmp');
      },createDefaultDevices:function () {
        // create /dev
        FS.mkdir('/dev');
        // setup /dev/null
        FS.registerDevice(FS.makedev(1, 3), {
          read: function() { return 0; },
          write: function() { return 0; }
        });
        FS.mkdev('/dev/null', FS.makedev(1, 3));
        // setup /dev/tty and /dev/tty1
        // stderr needs to print output using Module['printErr']
        // so we register a second tty just for it.
        TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);
        TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);
        FS.mkdev('/dev/tty', FS.makedev(5, 0));
        FS.mkdev('/dev/tty1', FS.makedev(6, 0));
        // we're not going to emulate the actual shm device,
        // just create the tmp dirs that reside in it commonly
        FS.mkdir('/dev/shm');
        FS.mkdir('/dev/shm/tmp');
      },createStandardStreams:function () {
        // TODO deprecate the old functionality of a single
        // input / output callback and that utilizes FS.createDevice
        // and instead require a unique set of stream ops
        // by default, we symlink the standard streams to the
        // default tty devices. however, if the standard streams
        // have been overwritten we create a unique device for
        // them instead.
        if (Module['stdin']) {
          FS.createDevice('/dev', 'stdin', Module['stdin']);
        } else {
          FS.symlink('/dev/tty', '/dev/stdin');
        }
        if (Module['stdout']) {
          FS.createDevice('/dev', 'stdout', null, Module['stdout']);
        } else {
          FS.symlink('/dev/tty', '/dev/stdout');
        }
        if (Module['stderr']) {
          FS.createDevice('/dev', 'stderr', null, Module['stderr']);
        } else {
          FS.symlink('/dev/tty1', '/dev/stderr');
        }
        // open default streams for the stdin, stdout and stderr devices
        var stdin = FS.open('/dev/stdin', 'r');
        HEAP32[((_stdin)>>2)]=stdin.fd;
        assert(stdin.fd === 1, 'invalid handle for stdin (' + stdin.fd + ')');
        var stdout = FS.open('/dev/stdout', 'w');
        HEAP32[((_stdout)>>2)]=stdout.fd;
        assert(stdout.fd === 2, 'invalid handle for stdout (' + stdout.fd + ')');
        var stderr = FS.open('/dev/stderr', 'w');
        HEAP32[((_stderr)>>2)]=stderr.fd;
        assert(stderr.fd === 3, 'invalid handle for stderr (' + stderr.fd + ')');
      },ensureErrnoError:function () {
        if (FS.ErrnoError) return;
        FS.ErrnoError = function ErrnoError(errno) {
          this.errno = errno;
          for (var key in ERRNO_CODES) {
            if (ERRNO_CODES[key] === errno) {
              this.code = key;
              break;
            }
          }
          this.message = ERRNO_MESSAGES[errno];
        };
        FS.ErrnoError.prototype = new Error();
        FS.ErrnoError.prototype.constructor = FS.ErrnoError;
        // Some errors may happen quite a bit, to avoid overhead we reuse them (and suffer a lack of stack info)
        [ERRNO_CODES.ENOENT].forEach(function(code) {
          FS.genericErrors[code] = new FS.ErrnoError(code);
          FS.genericErrors[code].stack = '<generic error, no stack>';
        });
      },staticInit:function () {
        FS.ensureErrnoError();
        FS.nameTable = new Array(4096);
        FS.root = FS.createNode(null, '/', 16384 | 0777, 0);
        FS.mount(MEMFS, {}, '/');
        FS.createDefaultDirectories();
        FS.createDefaultDevices();
      },init:function (input, output, error) {
        assert(!FS.init.initialized, 'FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)');
        FS.init.initialized = true;
        FS.ensureErrnoError();
        // Allow Module.stdin etc. to provide defaults, if none explicitly passed to us here
        Module['stdin'] = input || Module['stdin'];
        Module['stdout'] = output || Module['stdout'];
        Module['stderr'] = error || Module['stderr'];
        FS.createStandardStreams();
      },quit:function () {
        FS.init.initialized = false;
        for (var i = 0; i < FS.streams.length; i++) {
          var stream = FS.streams[i];
          if (!stream) {
            continue;
          }
          FS.close(stream);
        }
      },getMode:function (canRead, canWrite) {
        var mode = 0;
        if (canRead) mode |= 292 | 73;
        if (canWrite) mode |= 146;
        return mode;
      },joinPath:function (parts, forceRelative) {
        var path = PATH.join.apply(null, parts);
        if (forceRelative && path[0] == '/') path = path.substr(1);
        return path;
      },absolutePath:function (relative, base) {
        return PATH.resolve(base, relative);
      },standardizePath:function (path) {
        return PATH.normalize(path);
      },findObject:function (path, dontResolveLastLink) {
        var ret = FS.analyzePath(path, dontResolveLastLink);
        if (ret.exists) {
          return ret.object;
        } else {
          ___setErrNo(ret.error);
          return null;
        }
      },analyzePath:function (path, dontResolveLastLink) {
        // operate from within the context of the symlink's target
        try {
          var lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });
          path = lookup.path;
        } catch (e) {
        }
        var ret = {
          isRoot: false, exists: false, error: 0, name: null, path: null, object: null,
          parentExists: false, parentPath: null, parentObject: null
        };
        try {
          var lookup = FS.lookupPath(path, { parent: true });
          ret.parentExists = true;
          ret.parentPath = lookup.path;
          ret.parentObject = lookup.node;
          ret.name = PATH.basename(path);
          lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });
          ret.exists = true;
          ret.path = lookup.path;
          ret.object = lookup.node;
          ret.name = lookup.node.name;
          ret.isRoot = lookup.path === '/';
        } catch (e) {
          ret.error = e.errno;
        };
        return ret;
      },createFolder:function (parent, name, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(canRead, canWrite);
        return FS.mkdir(path, mode);
      },createPath:function (parent, path, canRead, canWrite) {
        parent = typeof parent === 'string' ? parent : FS.getPath(parent);
        var parts = path.split('/').reverse();
        while (parts.length) {
          var part = parts.pop();
          if (!part) continue;
          var current = PATH.join2(parent, part);
          try {
            FS.mkdir(current);
          } catch (e) {
            // ignore EEXIST
          }
          parent = current;
        }
        return current;
      },createFile:function (parent, name, properties, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(canRead, canWrite);
        return FS.create(path, mode);
      },createDataFile:function (parent, name, data, canRead, canWrite, canOwn) {
        var path = name ? PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name) : parent;
        var mode = FS.getMode(canRead, canWrite);
        var node = FS.create(path, mode);
        if (data) {
          if (typeof data === 'string') {
            var arr = new Array(data.length);
            for (var i = 0, len = data.length; i < len; ++i) arr[i] = data.charCodeAt(i);
            data = arr;
          }
          // make sure we can write to the file
          FS.chmod(node, mode | 146);
          var stream = FS.open(node, 'w');
          FS.write(stream, data, 0, data.length, 0, canOwn);
          FS.close(stream);
          FS.chmod(node, mode);
        }
        return node;
      },createDevice:function (parent, name, input, output) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(!!input, !!output);
        if (!FS.createDevice.major) FS.createDevice.major = 64;
        var dev = FS.makedev(FS.createDevice.major++, 0);
        // Create a fake device that a set of stream ops to emulate
        // the old behavior.
        FS.registerDevice(dev, {
          open: function(stream) {
            stream.seekable = false;
          },
          close: function(stream) {
            // flush any pending line data
            if (output && output.buffer && output.buffer.length) {
              output(10);
            }
          },
          read: function(stream, buffer, offset, length, pos /* ignored */) {
            var bytesRead = 0;
            for (var i = 0; i < length; i++) {
              var result;
              try {
                result = input();
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES.EIO);
              }
              if (result === undefined && bytesRead === 0) {
                throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
              }
              if (result === null || result === undefined) break;
              bytesRead++;
              buffer[offset+i] = result;
            }
            if (bytesRead) {
              stream.node.timestamp = Date.now();
            }
            return bytesRead;
          },
          write: function(stream, buffer, offset, length, pos) {
            for (var i = 0; i < length; i++) {
              try {
                output(buffer[offset+i]);
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES.EIO);
              }
            }
            if (length) {
              stream.node.timestamp = Date.now();
            }
            return i;
          }
        });
        return FS.mkdev(path, mode, dev);
      },createLink:function (parent, name, target, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        return FS.symlink(target, path);
      },forceLoadFile:function (obj) {
        if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;
        var success = true;
        if (typeof XMLHttpRequest !== 'undefined') {
          throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");
        } else if (Module['read']) {
          // Command-line.
          try {
            // WARNING: Can't read binary files in V8's d8 or tracemonkey's js, as
            //          read() will try to parse UTF8.
            obj.contents = intArrayFromString(Module['read'](obj.url), true);
          } catch (e) {
            success = false;
          }
        } else {
          throw new Error('Cannot load without read() or XMLHttpRequest.');
        }
        if (!success) ___setErrNo(ERRNO_CODES.EIO);
        return success;
      },createLazyFile:function (parent, name, url, canRead, canWrite) {
        if (typeof XMLHttpRequest !== 'undefined') {
          if (!ENVIRONMENT_IS_WORKER) throw 'Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc';
          // Lazy chunked Uint8Array (implements get and length from Uint8Array). Actual getting is abstracted away for eventual reuse.
          function LazyUint8Array() {
            this.lengthKnown = false;
            this.chunks = []; // Loaded chunks. Index is the chunk number
          }
          LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {
            if (idx > this.length-1 || idx < 0) {
              return undefined;
            }
            var chunkOffset = idx % this.chunkSize;
            var chunkNum = Math.floor(idx / this.chunkSize);
            return this.getter(chunkNum)[chunkOffset];
          }
          LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {
            this.getter = getter;
          }
          LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {
              // Find length
              var xhr = new XMLHttpRequest();
              xhr.open('HEAD', url, false);
              xhr.send(null);
              if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
              var datalength = Number(xhr.getResponseHeader("Content-length"));
              var header;
              var hasByteServing = (header = xhr.getResponseHeader("Accept-Ranges")) && header === "bytes";
              var chunkSize = 1024*1024; // Chunk size in bytes
              if (!hasByteServing) chunkSize = datalength;
              // Function to get a range from the remote URL.
              var doXHR = (function(from, to) {
                if (from > to) throw new Error("invalid range (" + from + ", " + to + ") or no bytes requested!");
                if (to > datalength-1) throw new Error("only " + datalength + " bytes available! programmer error!");
                // TODO: Use mozResponseArrayBuffer, responseStream, etc. if available.
                var xhr = new XMLHttpRequest();
                xhr.open('GET', url, false);
                if (datalength !== chunkSize) xhr.setRequestHeader("Range", "bytes=" + from + "-" + to);
                // Some hints to the browser that we want binary data.
                if (typeof Uint8Array != 'undefined') xhr.responseType = 'arraybuffer';
                if (xhr.overrideMimeType) {
                  xhr.overrideMimeType('text/plain; charset=x-user-defined');
                }
                xhr.send(null);
                if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
                if (xhr.response !== undefined) {
                  return new Uint8Array(xhr.response || []);
                } else {
                  return intArrayFromString(xhr.responseText || '', true);
                }
              });
              var lazyArray = this;
              lazyArray.setDataGetter(function(chunkNum) {
                var start = chunkNum * chunkSize;
                var end = (chunkNum+1) * chunkSize - 1; // including this byte
                end = Math.min(end, datalength-1); // if datalength-1 is selected, this is the last block
                if (typeof(lazyArray.chunks[chunkNum]) === "undefined") {
                  lazyArray.chunks[chunkNum] = doXHR(start, end);
                }
                if (typeof(lazyArray.chunks[chunkNum]) === "undefined") throw new Error("doXHR failed!");
                return lazyArray.chunks[chunkNum];
              });
              this._length = datalength;
              this._chunkSize = chunkSize;
              this.lengthKnown = true;
          }
          var lazyArray = new LazyUint8Array();
          Object.defineProperty(lazyArray, "length", {
              get: function() {
                  if(!this.lengthKnown) {
                      this.cacheLength();
                  }
                  return this._length;
              }
          });
          Object.defineProperty(lazyArray, "chunkSize", {
              get: function() {
                  if(!this.lengthKnown) {
                      this.cacheLength();
                  }
                  return this._chunkSize;
              }
          });
          var properties = { isDevice: false, contents: lazyArray };
        } else {
          var properties = { isDevice: false, url: url };
        }
        var node = FS.createFile(parent, name, properties, canRead, canWrite);
        // This is a total hack, but I want to get this lazy file code out of the
        // core of MEMFS. If we want to keep this lazy file concept I feel it should
        // be its own thin LAZYFS proxying calls to MEMFS.
        if (properties.contents) {
          node.contents = properties.contents;
        } else if (properties.url) {
          node.contents = null;
          node.url = properties.url;
        }
        // override each stream op with one that tries to force load the lazy file first
        var stream_ops = {};
        var keys = Object.keys(node.stream_ops);
        keys.forEach(function(key) {
          var fn = node.stream_ops[key];
          stream_ops[key] = function forceLoadLazyFile() {
            if (!FS.forceLoadFile(node)) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
            return fn.apply(null, arguments);
          };
        });
        // use a custom read function
        stream_ops.read = function stream_ops_read(stream, buffer, offset, length, position) {
          if (!FS.forceLoadFile(node)) {
            throw new FS.ErrnoError(ERRNO_CODES.EIO);
          }
          var contents = stream.node.contents;
          if (position >= contents.length)
            return 0;
          var size = Math.min(contents.length - position, length);
          assert(size >= 0);
          if (contents.slice) { // normal array
            for (var i = 0; i < size; i++) {
              buffer[offset + i] = contents[position + i];
            }
          } else {
            for (var i = 0; i < size; i++) { // LazyUint8Array from sync binary XHR
              buffer[offset + i] = contents.get(position + i);
            }
          }
          return size;
        };
        node.stream_ops = stream_ops;
        return node;
      },createPreloadedFile:function (parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn) {
        Browser.init();
        // TODO we should allow people to just pass in a complete filename instead
        // of parent and name being that we just join them anyways
        var fullname = name ? PATH.resolve(PATH.join2(parent, name)) : parent;
        function processData(byteArray) {
          function finish(byteArray) {
            if (!dontCreateFile) {
              FS.createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);
            }
            if (onload) onload();
            removeRunDependency('cp ' + fullname);
          }
          var handled = false;
          Module['preloadPlugins'].forEach(function(plugin) {
            if (handled) return;
            if (plugin['canHandle'](fullname)) {
              plugin['handle'](byteArray, fullname, finish, function() {
                if (onerror) onerror();
                removeRunDependency('cp ' + fullname);
              });
              handled = true;
            }
          });
          if (!handled) finish(byteArray);
        }
        addRunDependency('cp ' + fullname);
        if (typeof url == 'string') {
          Browser.asyncLoad(url, function(byteArray) {
            processData(byteArray);
          }, onerror);
        } else {
          processData(url);
        }
      },indexedDB:function () {
        return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
      },DB_NAME:function () {
        return 'EM_FS_' + window.location.pathname;
      },DB_VERSION:20,DB_STORE_NAME:"FILE_DATA",saveFilesToDB:function (paths, onload, onerror) {
        onload = onload || function(){};
        onerror = onerror || function(){};
        var indexedDB = FS.indexedDB();
        try {
          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
        } catch (e) {
          return onerror(e);
        }
        openRequest.onupgradeneeded = function openRequest_onupgradeneeded() {
          console.log('creating db');
          var db = openRequest.result;
          db.createObjectStore(FS.DB_STORE_NAME);
        };
        openRequest.onsuccess = function openRequest_onsuccess() {
          var db = openRequest.result;
          var transaction = db.transaction([FS.DB_STORE_NAME], 'readwrite');
          var files = transaction.objectStore(FS.DB_STORE_NAME);
          var ok = 0, fail = 0, total = paths.length;
          function finish() {
            if (fail == 0) onload(); else onerror();
          }
          paths.forEach(function(path) {
            var putRequest = files.put(FS.analyzePath(path).object.contents, path);
            putRequest.onsuccess = function putRequest_onsuccess() { ok++; if (ok + fail == total) finish() };
            putRequest.onerror = function putRequest_onerror() { fail++; if (ok + fail == total) finish() };
          });
          transaction.onerror = onerror;
        };
        openRequest.onerror = onerror;
      },loadFilesFromDB:function (paths, onload, onerror) {
        onload = onload || function(){};
        onerror = onerror || function(){};
        var indexedDB = FS.indexedDB();
        try {
          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
        } catch (e) {
          return onerror(e);
        }
        openRequest.onupgradeneeded = onerror; // no database to load from
        openRequest.onsuccess = function openRequest_onsuccess() {
          var db = openRequest.result;
          try {
            var transaction = db.transaction([FS.DB_STORE_NAME], 'readonly');
          } catch(e) {
            onerror(e);
            return;
          }
          var files = transaction.objectStore(FS.DB_STORE_NAME);
          var ok = 0, fail = 0, total = paths.length;
          function finish() {
            if (fail == 0) onload(); else onerror();
          }
          paths.forEach(function(path) {
            var getRequest = files.get(path);
            getRequest.onsuccess = function getRequest_onsuccess() {
              if (FS.analyzePath(path).exists) {
                FS.unlink(path);
              }
              FS.createDataFile(PATH.dirname(path), PATH.basename(path), getRequest.result, true, true, true);
              ok++;
              if (ok + fail == total) finish();
            };
            getRequest.onerror = function getRequest_onerror() { fail++; if (ok + fail == total) finish() };
          });
          transaction.onerror = onerror;
        };
        openRequest.onerror = onerror;
      }};function _stat(path, buf, dontResolveLastLink) {
      // http://pubs.opengroup.org/onlinepubs/7908799/xsh/stat.html
      // int stat(const char *path, struct stat *buf);
      // NOTE: dontResolveLastLink is a shortcut for lstat(). It should never be
      //       used in client code.
      path = typeof path !== 'string' ? Pointer_stringify(path) : path;
      try {
        var stat = dontResolveLastLink ? FS.lstat(path) : FS.stat(path);
        HEAP32[((buf)>>2)]=stat.dev;
        HEAP32[(((buf)+(4))>>2)]=0;
        HEAP32[(((buf)+(8))>>2)]=stat.ino;
        HEAP32[(((buf)+(12))>>2)]=stat.mode
        HEAP32[(((buf)+(16))>>2)]=stat.nlink
        HEAP32[(((buf)+(20))>>2)]=stat.uid
        HEAP32[(((buf)+(24))>>2)]=stat.gid
        HEAP32[(((buf)+(28))>>2)]=stat.rdev
        HEAP32[(((buf)+(32))>>2)]=0;
        HEAP32[(((buf)+(36))>>2)]=stat.size
        HEAP32[(((buf)+(40))>>2)]=4096
        HEAP32[(((buf)+(44))>>2)]=stat.blocks
        HEAP32[(((buf)+(48))>>2)]=Math.floor(stat.atime.getTime() / 1000)
        HEAP32[(((buf)+(52))>>2)]=0
        HEAP32[(((buf)+(56))>>2)]=Math.floor(stat.mtime.getTime() / 1000)
        HEAP32[(((buf)+(60))>>2)]=0
        HEAP32[(((buf)+(64))>>2)]=Math.floor(stat.ctime.getTime() / 1000)
        HEAP32[(((buf)+(68))>>2)]=0
        HEAP32[(((buf)+(72))>>2)]=stat.ino
        return 0;
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }
  var _mkport=undefined;var SOCKFS={mount:function (mount) {
        return FS.createNode(null, '/', 16384 | 0777, 0);
      },createSocket:function (family, type, protocol) {
        var streaming = type == 1;
        if (protocol) {
          assert(streaming == (protocol == 6)); // if SOCK_STREAM, must be tcp
        }
        // create our internal socket structure
        var sock = {
          family: family,
          type: type,
          protocol: protocol,
          server: null,
          peers: {},
          pending: [],
          recv_queue: [],
          sock_ops: SOCKFS.websocket_sock_ops
        };
        // create the filesystem node to store the socket structure
        var name = SOCKFS.nextname();
        var node = FS.createNode(SOCKFS.root, name, 49152, 0);
        node.sock = sock;
        // and the wrapping stream that enables library functions such
        // as read and write to indirectly interact with the socket
        var stream = FS.createStream({
          path: name,
          node: node,
          flags: FS.modeStringToFlags('r+'),
          seekable: false,
          stream_ops: SOCKFS.stream_ops
        });
        // map the new stream to the socket structure (sockets have a 1:1
        // relationship with a stream)
        sock.stream = stream;
        return sock;
      },getSocket:function (fd) {
        var stream = FS.getStream(fd);
        if (!stream || !FS.isSocket(stream.node.mode)) {
          return null;
        }
        return stream.node.sock;
      },stream_ops:{poll:function (stream) {
          var sock = stream.node.sock;
          return sock.sock_ops.poll(sock);
        },ioctl:function (stream, request, varargs) {
          var sock = stream.node.sock;
          return sock.sock_ops.ioctl(sock, request, varargs);
        },read:function (stream, buffer, offset, length, position /* ignored */) {
          var sock = stream.node.sock;
          var msg = sock.sock_ops.recvmsg(sock, length);
          if (!msg) {
            // socket is closed
            return 0;
          }
          buffer.set(msg.buffer, offset);
          return msg.buffer.length;
        },write:function (stream, buffer, offset, length, position /* ignored */) {
          var sock = stream.node.sock;
          return sock.sock_ops.sendmsg(sock, buffer, offset, length);
        },close:function (stream) {
          var sock = stream.node.sock;
          sock.sock_ops.close(sock);
        }},nextname:function () {
        if (!SOCKFS.nextname.current) {
          SOCKFS.nextname.current = 0;
        }
        return 'socket[' + (SOCKFS.nextname.current++) + ']';
      },websocket_sock_ops:{createPeer:function (sock, addr, port) {
          var ws;
          if (typeof addr === 'object') {
            ws = addr;
            addr = null;
            port = null;
          }
          if (ws) {
            // for sockets that've already connected (e.g. we're the server)
            // we can inspect the _socket property for the address
            if (ws._socket) {
              addr = ws._socket.remoteAddress;
              port = ws._socket.remotePort;
            }
            // if we're just now initializing a connection to the remote,
            // inspect the url property
            else {
              var result = /ws[s]?:\/\/([^:]+):(\d+)/.exec(ws.url);
              if (!result) {
                throw new Error('WebSocket URL must be in the format ws(s)://address:port');
              }
              addr = result[1];
              port = parseInt(result[2], 10);
            }
          } else {
            // create the actual websocket object and connect
            try {
              var url = 'ws://' + addr + ':' + port;
              // the node ws library API is slightly different than the browser's
              var opts = ENVIRONMENT_IS_NODE ? {headers: {'websocket-protocol': ['binary']}} : ['binary'];
              // If node we use the ws library.
              var WebSocket = ENVIRONMENT_IS_NODE ? require('ws') : window['WebSocket'];
              ws = new WebSocket(url, opts);
              ws.binaryType = 'arraybuffer';
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EHOSTUNREACH);
            }
          }
          var peer = {
            addr: addr,
            port: port,
            socket: ws,
            dgram_send_queue: []
          };
          SOCKFS.websocket_sock_ops.addPeer(sock, peer);
          SOCKFS.websocket_sock_ops.handlePeerEvents(sock, peer);
          // if this is a bound dgram socket, send the port number first to allow
          // us to override the ephemeral port reported to us by remotePort on the
          // remote end.
          if (sock.type === 2 && typeof sock.sport !== 'undefined') {
            peer.dgram_send_queue.push(new Uint8Array([
                255, 255, 255, 255,
                'p'.charCodeAt(0), 'o'.charCodeAt(0), 'r'.charCodeAt(0), 't'.charCodeAt(0),
                ((sock.sport & 0xff00) >> 8) , (sock.sport & 0xff)
            ]));
          }
          return peer;
        },getPeer:function (sock, addr, port) {
          return sock.peers[addr + ':' + port];
        },addPeer:function (sock, peer) {
          sock.peers[peer.addr + ':' + peer.port] = peer;
        },removePeer:function (sock, peer) {
          delete sock.peers[peer.addr + ':' + peer.port];
        },handlePeerEvents:function (sock, peer) {
          var first = true;
          var handleOpen = function () {
            try {
              var queued = peer.dgram_send_queue.shift();
              while (queued) {
                peer.socket.send(queued);
                queued = peer.dgram_send_queue.shift();
              }
            } catch (e) {
              // not much we can do here in the way of proper error handling as we've already
              // lied and said this data was sent. shut it down.
              peer.socket.close();
            }
          };
          function handleMessage(data) {
            assert(typeof data !== 'string' && data.byteLength !== undefined);  // must receive an ArrayBuffer
            data = new Uint8Array(data);  // make a typed array view on the array buffer
            // if this is the port message, override the peer's port with it
            var wasfirst = first;
            first = false;
            if (wasfirst &&
                data.length === 10 &&
                data[0] === 255 && data[1] === 255 && data[2] === 255 && data[3] === 255 &&
                data[4] === 'p'.charCodeAt(0) && data[5] === 'o'.charCodeAt(0) && data[6] === 'r'.charCodeAt(0) && data[7] === 't'.charCodeAt(0)) {
              // update the peer's port and it's key in the peer map
              var newport = ((data[8] << 8) | data[9]);
              SOCKFS.websocket_sock_ops.removePeer(sock, peer);
              peer.port = newport;
              SOCKFS.websocket_sock_ops.addPeer(sock, peer);
              return;
            }
            sock.recv_queue.push({ addr: peer.addr, port: peer.port, data: data });
          };
          if (ENVIRONMENT_IS_NODE) {
            peer.socket.on('open', handleOpen);
            peer.socket.on('message', function(data, flags) {
              if (!flags.binary) {
                return;
              }
              handleMessage((new Uint8Array(data)).buffer);  // copy from node Buffer -> ArrayBuffer
            });
            peer.socket.on('error', function() {
              // don't throw
            });
          } else {
            peer.socket.onopen = handleOpen;
            peer.socket.onmessage = function peer_socket_onmessage(event) {
              handleMessage(event.data);
            };
          }
        },poll:function (sock) {
          if (sock.type === 1 && sock.server) {
            // listen sockets should only say they're available for reading
            // if there are pending clients.
            return sock.pending.length ? (64 | 1) : 0;
          }
          var mask = 0;
          var dest = sock.type === 1 ?  // we only care about the socket state for connection-based sockets
            SOCKFS.websocket_sock_ops.getPeer(sock, sock.daddr, sock.dport) :
            null;
          if (sock.recv_queue.length ||
              !dest ||  // connection-less sockets are always ready to read
              (dest && dest.socket.readyState === dest.socket.CLOSING) ||
              (dest && dest.socket.readyState === dest.socket.CLOSED)) {  // let recv return 0 once closed
            mask |= (64 | 1);
          }
          if (!dest ||  // connection-less sockets are always ready to write
              (dest && dest.socket.readyState === dest.socket.OPEN)) {
            mask |= 4;
          }
          if ((dest && dest.socket.readyState === dest.socket.CLOSING) ||
              (dest && dest.socket.readyState === dest.socket.CLOSED)) {
            mask |= 16;
          }
          return mask;
        },ioctl:function (sock, request, arg) {
          switch (request) {
            case 21531:
              var bytes = 0;
              if (sock.recv_queue.length) {
                bytes = sock.recv_queue[0].data.length;
              }
              HEAP32[((arg)>>2)]=bytes;
              return 0;
            default:
              return ERRNO_CODES.EINVAL;
          }
        },close:function (sock) {
          // if we've spawned a listen server, close it
          if (sock.server) {
            try {
              sock.server.close();
            } catch (e) {
            }
            sock.server = null;
          }
          // close any peer connections
          var peers = Object.keys(sock.peers);
          for (var i = 0; i < peers.length; i++) {
            var peer = sock.peers[peers[i]];
            try {
              peer.socket.close();
            } catch (e) {
            }
            SOCKFS.websocket_sock_ops.removePeer(sock, peer);
          }
          return 0;
        },bind:function (sock, addr, port) {
          if (typeof sock.saddr !== 'undefined' || typeof sock.sport !== 'undefined') {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);  // already bound
          }
          sock.saddr = addr;
          sock.sport = port || _mkport();
          // in order to emulate dgram sockets, we need to launch a listen server when
          // binding on a connection-less socket
          // note: this is only required on the server side
          if (sock.type === 2) {
            // close the existing server if it exists
            if (sock.server) {
              sock.server.close();
              sock.server = null;
            }
            // swallow error operation not supported error that occurs when binding in the
            // browser where this isn't supported
            try {
              sock.sock_ops.listen(sock, 0);
            } catch (e) {
              if (!(e instanceof FS.ErrnoError)) throw e;
              if (e.errno !== ERRNO_CODES.EOPNOTSUPP) throw e;
            }
          }
        },connect:function (sock, addr, port) {
          if (sock.server) {
            throw new FS.ErrnoError(ERRNO_CODS.EOPNOTSUPP);
          }
          // TODO autobind
          // if (!sock.addr && sock.type == 2) {
          // }
          // early out if we're already connected / in the middle of connecting
          if (typeof sock.daddr !== 'undefined' && typeof sock.dport !== 'undefined') {
            var dest = SOCKFS.websocket_sock_ops.getPeer(sock, sock.daddr, sock.dport);
            if (dest) {
              if (dest.socket.readyState === dest.socket.CONNECTING) {
                throw new FS.ErrnoError(ERRNO_CODES.EALREADY);
              } else {
                throw new FS.ErrnoError(ERRNO_CODES.EISCONN);
              }
            }
          }
          // add the socket to our peer list and set our
          // destination address / port to match
          var peer = SOCKFS.websocket_sock_ops.createPeer(sock, addr, port);
          sock.daddr = peer.addr;
          sock.dport = peer.port;
          // always "fail" in non-blocking mode
          throw new FS.ErrnoError(ERRNO_CODES.EINPROGRESS);
        },listen:function (sock, backlog) {
          if (!ENVIRONMENT_IS_NODE) {
            throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);
          }
          if (sock.server) {
             throw new FS.ErrnoError(ERRNO_CODES.EINVAL);  // already listening
          }
          var WebSocketServer = require('ws').Server;
          var host = sock.saddr;
          sock.server = new WebSocketServer({
            host: host,
            port: sock.sport
            // TODO support backlog
          });
          sock.server.on('connection', function(ws) {
            if (sock.type === 1) {
              var newsock = SOCKFS.createSocket(sock.family, sock.type, sock.protocol);
              // create a peer on the new socket
              var peer = SOCKFS.websocket_sock_ops.createPeer(newsock, ws);
              newsock.daddr = peer.addr;
              newsock.dport = peer.port;
              // push to queue for accept to pick up
              sock.pending.push(newsock);
            } else {
              // create a peer on the listen socket so calling sendto
              // with the listen socket and an address will resolve
              // to the correct client
              SOCKFS.websocket_sock_ops.createPeer(sock, ws);
            }
          });
          sock.server.on('closed', function() {
            sock.server = null;
          });
          sock.server.on('error', function() {
            // don't throw
          });
        },accept:function (listensock) {
          if (!listensock.server) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          var newsock = listensock.pending.shift();
          newsock.stream.flags = listensock.stream.flags;
          return newsock;
        },getname:function (sock, peer) {
          var addr, port;
          if (peer) {
            if (sock.daddr === undefined || sock.dport === undefined) {
              throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
            }
            addr = sock.daddr;
            port = sock.dport;
          } else {
            // TODO saddr and sport will be set for bind()'d UDP sockets, but what
            // should we be returning for TCP sockets that've been connect()'d?
            addr = sock.saddr || 0;
            port = sock.sport || 0;
          }
          return { addr: addr, port: port };
        },sendmsg:function (sock, buffer, offset, length, addr, port) {
          if (sock.type === 2) {
            // connection-less sockets will honor the message address,
            // and otherwise fall back to the bound destination address
            if (addr === undefined || port === undefined) {
              addr = sock.daddr;
              port = sock.dport;
            }
            // if there was no address to fall back to, error out
            if (addr === undefined || port === undefined) {
              throw new FS.ErrnoError(ERRNO_CODES.EDESTADDRREQ);
            }
          } else {
            // connection-based sockets will only use the bound
            addr = sock.daddr;
            port = sock.dport;
          }
          // find the peer for the destination address
          var dest = SOCKFS.websocket_sock_ops.getPeer(sock, addr, port);
          // early out if not connected with a connection-based socket
          if (sock.type === 1) {
            if (!dest || dest.socket.readyState === dest.socket.CLOSING || dest.socket.readyState === dest.socket.CLOSED) {
              throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
            } else if (dest.socket.readyState === dest.socket.CONNECTING) {
              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
            }
          }
          // create a copy of the incoming data to send, as the WebSocket API
          // doesn't work entirely with an ArrayBufferView, it'll just send
          // the entire underlying buffer
          var data;
          if (buffer instanceof Array || buffer instanceof ArrayBuffer) {
            data = buffer.slice(offset, offset + length);
          } else {  // ArrayBufferView
            data = buffer.buffer.slice(buffer.byteOffset + offset, buffer.byteOffset + offset + length);
          }
          // if we're emulating a connection-less dgram socket and don't have
          // a cached connection, queue the buffer to send upon connect and
          // lie, saying the data was sent now.
          if (sock.type === 2) {
            if (!dest || dest.socket.readyState !== dest.socket.OPEN) {
              // if we're not connected, open a new connection
              if (!dest || dest.socket.readyState === dest.socket.CLOSING || dest.socket.readyState === dest.socket.CLOSED) {
                dest = SOCKFS.websocket_sock_ops.createPeer(sock, addr, port);
              }
              dest.dgram_send_queue.push(data);
              return length;
            }
          }
          try {
            // send the actual data
            dest.socket.send(data);
            return length;
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
        },recvmsg:function (sock, length) {
          // http://pubs.opengroup.org/onlinepubs/7908799/xns/recvmsg.html
          if (sock.type === 1 && sock.server) {
            // tcp servers should not be recv()'ing on the listen socket
            throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
          }
          var queued = sock.recv_queue.shift();
          if (!queued) {
            if (sock.type === 1) {
              var dest = SOCKFS.websocket_sock_ops.getPeer(sock, sock.daddr, sock.dport);
              if (!dest) {
                // if we have a destination address but are not connected, error out
                throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
              }
              else if (dest.socket.readyState === dest.socket.CLOSING || dest.socket.readyState === dest.socket.CLOSED) {
                // return null if the socket has closed
                return null;
              }
              else {
                // else, our socket is in a valid state but truly has nothing available
                throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
              }
            } else {
              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
            }
          }
          // queued.data will be an ArrayBuffer if it's unadulterated, but if it's
          // requeued TCP data it'll be an ArrayBufferView
          var queuedLength = queued.data.byteLength || queued.data.length;
          var queuedOffset = queued.data.byteOffset || 0;
          var queuedBuffer = queued.data.buffer || queued.data;
          var bytesRead = Math.min(length, queuedLength);
          var res = {
            buffer: new Uint8Array(queuedBuffer, queuedOffset, bytesRead),
            addr: queued.addr,
            port: queued.port
          };
          // push back any unread data for TCP connections
          if (sock.type === 1 && bytesRead < queuedLength) {
            var bytesRemaining = queuedLength - bytesRead;
            queued.data = new Uint8Array(queuedBuffer, queuedOffset + bytesRead, bytesRemaining);
            sock.recv_queue.unshift(queued);
          }
          return res;
        }}};function _send(fd, buf, len, flags) {
      var sock = SOCKFS.getSocket(fd);
      if (!sock) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      // TODO honor flags
      return _write(fd, buf, len);
    }
  function _pwrite(fildes, buf, nbyte, offset) {
      // ssize_t pwrite(int fildes, const void *buf, size_t nbyte, off_t offset);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/write.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        var slab = HEAP8;
        return FS.write(stream, slab, buf, nbyte, offset);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _write(fildes, buf, nbyte) {
      // ssize_t write(int fildes, const void *buf, size_t nbyte);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/write.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        var slab = HEAP8;
        return FS.write(stream, slab, buf, nbyte);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _fwrite(ptr, size, nitems, stream) {
      // size_t fwrite(const void *restrict ptr, size_t size, size_t nitems, FILE *restrict stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fwrite.html
      var bytesToWrite = nitems * size;
      if (bytesToWrite == 0) return 0;
      var bytesWritten = _write(stream, ptr, bytesToWrite);
      if (bytesWritten == -1) {
        var streamObj = FS.getStream(stream);
        if (streamObj) streamObj.error = true;
        return 0;
      } else {
        return Math.floor(bytesWritten / size);
      }
    }
  Module["_strlen"] = _strlen;
  function __reallyNegative(x) {
      return x < 0 || (x === 0 && (1/x) === -Infinity);
    }function __formatString(format, varargs) {
      var textIndex = format;
      var argIndex = 0;
      function getNextArg(type) {
        // NOTE: Explicitly ignoring type safety. Otherwise this fails:
        //       int x = 4; printf("%c\n", (char)x);
        var ret;
        if (type === 'double') {
          ret = HEAPF64[(((varargs)+(argIndex))>>3)];
        } else if (type == 'i64') {
          ret = [HEAP32[(((varargs)+(argIndex))>>2)],
                 HEAP32[(((varargs)+(argIndex+8))>>2)]];
          argIndex += 8; // each 32-bit chunk is in a 64-bit block
        } else {
          type = 'i32'; // varargs are always i32, i64, or double
          ret = HEAP32[(((varargs)+(argIndex))>>2)];
        }
        argIndex += Math.max(Runtime.getNativeFieldSize(type), Runtime.getAlignSize(type, null, true));
        return ret;
      }
      var ret = [];
      var curr, next, currArg;
      while(1) {
        var startTextIndex = textIndex;
        curr = HEAP8[(textIndex)];
        if (curr === 0) break;
        next = HEAP8[((textIndex+1)|0)];
        if (curr == 37) {
          // Handle flags.
          var flagAlwaysSigned = false;
          var flagLeftAlign = false;
          var flagAlternative = false;
          var flagZeroPad = false;
          var flagPadSign = false;
          flagsLoop: while (1) {
            switch (next) {
              case 43:
                flagAlwaysSigned = true;
                break;
              case 45:
                flagLeftAlign = true;
                break;
              case 35:
                flagAlternative = true;
                break;
              case 48:
                if (flagZeroPad) {
                  break flagsLoop;
                } else {
                  flagZeroPad = true;
                  break;
                }
              case 32:
                flagPadSign = true;
                break;
              default:
                break flagsLoop;
            }
            textIndex++;
            next = HEAP8[((textIndex+1)|0)];
          }
          // Handle width.
          var width = 0;
          if (next == 42) {
            width = getNextArg('i32');
            textIndex++;
            next = HEAP8[((textIndex+1)|0)];
          } else {
            while (next >= 48 && next <= 57) {
              width = width * 10 + (next - 48);
              textIndex++;
              next = HEAP8[((textIndex+1)|0)];
            }
          }
          // Handle precision.
          var precisionSet = false, precision = -1;
          if (next == 46) {
            precision = 0;
            precisionSet = true;
            textIndex++;
            next = HEAP8[((textIndex+1)|0)];
            if (next == 42) {
              precision = getNextArg('i32');
              textIndex++;
            } else {
              while(1) {
                var precisionChr = HEAP8[((textIndex+1)|0)];
                if (precisionChr < 48 ||
                    precisionChr > 57) break;
                precision = precision * 10 + (precisionChr - 48);
                textIndex++;
              }
            }
            next = HEAP8[((textIndex+1)|0)];
          }
          if (precision === -1) {
            precision = 6; // Standard default.
            precisionSet = false;
          }
          // Handle integer sizes. WARNING: These assume a 32-bit architecture!
          var argSize;
          switch (String.fromCharCode(next)) {
            case 'h':
              var nextNext = HEAP8[((textIndex+2)|0)];
              if (nextNext == 104) {
                textIndex++;
                argSize = 1; // char (actually i32 in varargs)
              } else {
                argSize = 2; // short (actually i32 in varargs)
              }
              break;
            case 'l':
              var nextNext = HEAP8[((textIndex+2)|0)];
              if (nextNext == 108) {
                textIndex++;
                argSize = 8; // long long
              } else {
                argSize = 4; // long
              }
              break;
            case 'L': // long long
            case 'q': // int64_t
            case 'j': // intmax_t
              argSize = 8;
              break;
            case 'z': // size_t
            case 't': // ptrdiff_t
            case 'I': // signed ptrdiff_t or unsigned size_t
              argSize = 4;
              break;
            default:
              argSize = null;
          }
          if (argSize) textIndex++;
          next = HEAP8[((textIndex+1)|0)];
          // Handle type specifier.
          switch (String.fromCharCode(next)) {
            case 'd': case 'i': case 'u': case 'o': case 'x': case 'X': case 'p': {
              // Integer.
              var signed = next == 100 || next == 105;
              argSize = argSize || 4;
              var currArg = getNextArg('i' + (argSize * 8));
              var origArg = currArg;
              var argText;
              // Flatten i64-1 [low, high] into a (slightly rounded) double
              if (argSize == 8) {
                currArg = Runtime.makeBigInt(currArg[0], currArg[1], next == 117);
              }
              // Truncate to requested size.
              if (argSize <= 4) {
                var limit = Math.pow(256, argSize) - 1;
                currArg = (signed ? reSign : unSign)(currArg & limit, argSize * 8);
              }
              // Format the number.
              var currAbsArg = Math.abs(currArg);
              var prefix = '';
              if (next == 100 || next == 105) {
                if (argSize == 8 && i64Math) argText = i64Math.stringify(origArg[0], origArg[1], null); else
                argText = reSign(currArg, 8 * argSize, 1).toString(10);
              } else if (next == 117) {
                if (argSize == 8 && i64Math) argText = i64Math.stringify(origArg[0], origArg[1], true); else
                argText = unSign(currArg, 8 * argSize, 1).toString(10);
                currArg = Math.abs(currArg);
              } else if (next == 111) {
                argText = (flagAlternative ? '0' : '') + currAbsArg.toString(8);
              } else if (next == 120 || next == 88) {
                prefix = (flagAlternative && currArg != 0) ? '0x' : '';
                if (argSize == 8 && i64Math) {
                  if (origArg[1]) {
                    argText = (origArg[1]>>>0).toString(16);
                    var lower = (origArg[0]>>>0).toString(16);
                    while (lower.length < 8) lower = '0' + lower;
                    argText += lower;
                  } else {
                    argText = (origArg[0]>>>0).toString(16);
                  }
                } else
                if (currArg < 0) {
                  // Represent negative numbers in hex as 2's complement.
                  currArg = -currArg;
                  argText = (currAbsArg - 1).toString(16);
                  var buffer = [];
                  for (var i = 0; i < argText.length; i++) {
                    buffer.push((0xF - parseInt(argText[i], 16)).toString(16));
                  }
                  argText = buffer.join('');
                  while (argText.length < argSize * 2) argText = 'f' + argText;
                } else {
                  argText = currAbsArg.toString(16);
                }
                if (next == 88) {
                  prefix = prefix.toUpperCase();
                  argText = argText.toUpperCase();
                }
              } else if (next == 112) {
                if (currAbsArg === 0) {
                  argText = '(nil)';
                } else {
                  prefix = '0x';
                  argText = currAbsArg.toString(16);
                }
              }
              if (precisionSet) {
                while (argText.length < precision) {
                  argText = '0' + argText;
                }
              }
              // Add sign if needed
              if (currArg >= 0) {
                if (flagAlwaysSigned) {
                  prefix = '+' + prefix;
                } else if (flagPadSign) {
                  prefix = ' ' + prefix;
                }
              }
              // Move sign to prefix so we zero-pad after the sign
              if (argText.charAt(0) == '-') {
                prefix = '-' + prefix;
                argText = argText.substr(1);
              }
              // Add padding.
              while (prefix.length + argText.length < width) {
                if (flagLeftAlign) {
                  argText += ' ';
                } else {
                  if (flagZeroPad) {
                    argText = '0' + argText;
                  } else {
                    prefix = ' ' + prefix;
                  }
                }
              }
              // Insert the result into the buffer.
              argText = prefix + argText;
              argText.split('').forEach(function(chr) {
                ret.push(chr.charCodeAt(0));
              });
              break;
            }
            case 'f': case 'F': case 'e': case 'E': case 'g': case 'G': {
              // Float.
              var currArg = getNextArg('double');
              var argText;
              if (isNaN(currArg)) {
                argText = 'nan';
                flagZeroPad = false;
              } else if (!isFinite(currArg)) {
                argText = (currArg < 0 ? '-' : '') + 'inf';
                flagZeroPad = false;
              } else {
                var isGeneral = false;
                var effectivePrecision = Math.min(precision, 20);
                // Convert g/G to f/F or e/E, as per:
                // http://pubs.opengroup.org/onlinepubs/9699919799/functions/printf.html
                if (next == 103 || next == 71) {
                  isGeneral = true;
                  precision = precision || 1;
                  var exponent = parseInt(currArg.toExponential(effectivePrecision).split('e')[1], 10);
                  if (precision > exponent && exponent >= -4) {
                    next = ((next == 103) ? 'f' : 'F').charCodeAt(0);
                    precision -= exponent + 1;
                  } else {
                    next = ((next == 103) ? 'e' : 'E').charCodeAt(0);
                    precision--;
                  }
                  effectivePrecision = Math.min(precision, 20);
                }
                if (next == 101 || next == 69) {
                  argText = currArg.toExponential(effectivePrecision);
                  // Make sure the exponent has at least 2 digits.
                  if (/[eE][-+]\d$/.test(argText)) {
                    argText = argText.slice(0, -1) + '0' + argText.slice(-1);
                  }
                } else if (next == 102 || next == 70) {
                  argText = currArg.toFixed(effectivePrecision);
                  if (currArg === 0 && __reallyNegative(currArg)) {
                    argText = '-' + argText;
                  }
                }
                var parts = argText.split('e');
                if (isGeneral && !flagAlternative) {
                  // Discard trailing zeros and periods.
                  while (parts[0].length > 1 && parts[0].indexOf('.') != -1 &&
                         (parts[0].slice(-1) == '0' || parts[0].slice(-1) == '.')) {
                    parts[0] = parts[0].slice(0, -1);
                  }
                } else {
                  // Make sure we have a period in alternative mode.
                  if (flagAlternative && argText.indexOf('.') == -1) parts[0] += '.';
                  // Zero pad until required precision.
                  while (precision > effectivePrecision++) parts[0] += '0';
                }
                argText = parts[0] + (parts.length > 1 ? 'e' + parts[1] : '');
                // Capitalize 'E' if needed.
                if (next == 69) argText = argText.toUpperCase();
                // Add sign.
                if (currArg >= 0) {
                  if (flagAlwaysSigned) {
                    argText = '+' + argText;
                  } else if (flagPadSign) {
                    argText = ' ' + argText;
                  }
                }
              }
              // Add padding.
              while (argText.length < width) {
                if (flagLeftAlign) {
                  argText += ' ';
                } else {
                  if (flagZeroPad && (argText[0] == '-' || argText[0] == '+')) {
                    argText = argText[0] + '0' + argText.slice(1);
                  } else {
                    argText = (flagZeroPad ? '0' : ' ') + argText;
                  }
                }
              }
              // Adjust case.
              if (next < 97) argText = argText.toUpperCase();
              // Insert the result into the buffer.
              argText.split('').forEach(function(chr) {
                ret.push(chr.charCodeAt(0));
              });
              break;
            }
            case 's': {
              // String.
              var arg = getNextArg('i8*');
              var argLength = arg ? _strlen(arg) : '(null)'.length;
              if (precisionSet) argLength = Math.min(argLength, precision);
              if (!flagLeftAlign) {
                while (argLength < width--) {
                  ret.push(32);
                }
              }
              if (arg) {
                for (var i = 0; i < argLength; i++) {
                  ret.push(HEAPU8[((arg++)|0)]);
                }
              } else {
                ret = ret.concat(intArrayFromString('(null)'.substr(0, argLength), true));
              }
              if (flagLeftAlign) {
                while (argLength < width--) {
                  ret.push(32);
                }
              }
              break;
            }
            case 'c': {
              // Character.
              if (flagLeftAlign) ret.push(getNextArg('i8'));
              while (--width > 0) {
                ret.push(32);
              }
              if (!flagLeftAlign) ret.push(getNextArg('i8'));
              break;
            }
            case 'n': {
              // Write the length written so far to the next parameter.
              var ptr = getNextArg('i32*');
              HEAP32[((ptr)>>2)]=ret.length
              break;
            }
            case '%': {
              // Literal percent sign.
              ret.push(curr);
              break;
            }
            default: {
              // Unknown specifiers remain untouched.
              for (var i = startTextIndex; i < textIndex + 2; i++) {
                ret.push(HEAP8[(i)]);
              }
            }
          }
          textIndex += 2;
          // TODO: Support a/A (hex float) and m (last error) specifiers.
          // TODO: Support %1${specifier} for arg selection.
        } else {
          ret.push(curr);
          textIndex += 1;
        }
      }
      return ret;
    }function _fprintf(stream, format, varargs) {
      // int fprintf(FILE *restrict stream, const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      var result = __formatString(format, varargs);
      var stack = Runtime.stackSave();
      var ret = _fwrite(allocate(result, 'i8', ALLOC_STACK), 1, result.length, stream);
      Runtime.stackRestore(stack);
      return ret;
    }
  Module["_strcpy"] = _strcpy;
  function _snprintf(s, n, format, varargs) {
      // int snprintf(char *restrict s, size_t n, const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      var result = __formatString(format, varargs);
      var limit = (n === undefined) ? result.length
                                    : Math.min(result.length, Math.max(n - 1, 0));
      if (s < 0) {
        s = -s;
        var buf = _malloc(limit+1);
        HEAP32[((s)>>2)]=buf;
        s = buf;
      }
      for (var i = 0; i < limit; i++) {
        HEAP8[(((s)+(i))|0)]=result[i];
      }
      if (limit < n || (n === undefined)) HEAP8[(((s)+(i))|0)]=0;
      return result.length;
    }function _sprintf(s, format, varargs) {
      // int sprintf(char *restrict s, const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      return _snprintf(s, undefined, format, varargs);
    }
  function _fputc(c, stream) {
      // int fputc(int c, FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fputc.html
      var chr = unSign(c & 0xFF);
      HEAP8[((_fputc.ret)|0)]=chr
      var ret = _write(stream, _fputc.ret, 1);
      if (ret == -1) {
        var streamObj = FS.getStream(stream);
        if (streamObj) streamObj.error = true;
        return -1;
      } else {
        return chr;
      }
    }
  function __getFloat(text) {
      return /^[+-]?[0-9]*\.?[0-9]+([eE][+-]?[0-9]+)?/.exec(text);
    }function __scanString(format, get, unget, varargs) {
      if (!__scanString.whiteSpace) {
        __scanString.whiteSpace = {};
        __scanString.whiteSpace[32] = 1;
        __scanString.whiteSpace[9] = 1;
        __scanString.whiteSpace[10] = 1;
        __scanString.whiteSpace[11] = 1;
        __scanString.whiteSpace[12] = 1;
        __scanString.whiteSpace[13] = 1;
      }
      // Supports %x, %4x, %d.%d, %lld, %s, %f, %lf.
      // TODO: Support all format specifiers.
      format = Pointer_stringify(format);
      var soFar = 0;
      if (format.indexOf('%n') >= 0) {
        // need to track soFar
        var _get = get;
        get = function get() {
          soFar++;
          return _get();
        }
        var _unget = unget;
        unget = function unget() {
          soFar--;
          return _unget();
        }
      }
      var formatIndex = 0;
      var argsi = 0;
      var fields = 0;
      var argIndex = 0;
      var next;
      mainLoop:
      for (var formatIndex = 0; formatIndex < format.length;) {
        if (format[formatIndex] === '%' && format[formatIndex+1] == 'n') {
          var argPtr = HEAP32[(((varargs)+(argIndex))>>2)];
          argIndex += Runtime.getAlignSize('void*', null, true);
          HEAP32[((argPtr)>>2)]=soFar;
          formatIndex += 2;
          continue;
        }
        if (format[formatIndex] === '%') {
          var nextC = format.indexOf('c', formatIndex+1);
          if (nextC > 0) {
            var maxx = 1;
            if (nextC > formatIndex+1) {
              var sub = format.substring(formatIndex+1, nextC);
              maxx = parseInt(sub);
              if (maxx != sub) maxx = 0;
            }
            if (maxx) {
              var argPtr = HEAP32[(((varargs)+(argIndex))>>2)];
              argIndex += Runtime.getAlignSize('void*', null, true);
              fields++;
              for (var i = 0; i < maxx; i++) {
                next = get();
                HEAP8[((argPtr++)|0)]=next;
              }
              formatIndex += nextC - formatIndex + 1;
              continue;
            }
          }
        }
        // handle %[...]
        if (format[formatIndex] === '%' && format.indexOf('[', formatIndex+1) > 0) {
          var match = /\%([0-9]*)\[(\^)?(\]?[^\]]*)\]/.exec(format.substring(formatIndex));
          if (match) {
            var maxNumCharacters = parseInt(match[1]) || Infinity;
            var negateScanList = (match[2] === '^');
            var scanList = match[3];
            // expand "middle" dashs into character sets
            var middleDashMatch;
            while ((middleDashMatch = /([^\-])\-([^\-])/.exec(scanList))) {
              var rangeStartCharCode = middleDashMatch[1].charCodeAt(0);
              var rangeEndCharCode = middleDashMatch[2].charCodeAt(0);
              for (var expanded = ''; rangeStartCharCode <= rangeEndCharCode; expanded += String.fromCharCode(rangeStartCharCode++));
              scanList = scanList.replace(middleDashMatch[1] + '-' + middleDashMatch[2], expanded);
            }
            var argPtr = HEAP32[(((varargs)+(argIndex))>>2)];
            argIndex += Runtime.getAlignSize('void*', null, true);
            fields++;
            for (var i = 0; i < maxNumCharacters; i++) {
              next = get();
              if (negateScanList) {
                if (scanList.indexOf(String.fromCharCode(next)) < 0) {
                  HEAP8[((argPtr++)|0)]=next;
                } else {
                  unget();
                  break;
                }
              } else {
                if (scanList.indexOf(String.fromCharCode(next)) >= 0) {
                  HEAP8[((argPtr++)|0)]=next;
                } else {
                  unget();
                  break;
                }
              }
            }
            // write out null-terminating character
            HEAP8[((argPtr++)|0)]=0;
            formatIndex += match[0].length;
            continue;
          }
        }      
        // remove whitespace
        while (1) {
          next = get();
          if (next == 0) return fields;
          if (!(next in __scanString.whiteSpace)) break;
        }
        unget();
        if (format[formatIndex] === '%') {
          formatIndex++;
          var suppressAssignment = false;
          if (format[formatIndex] == '*') {
            suppressAssignment = true;
            formatIndex++;
          }
          var maxSpecifierStart = formatIndex;
          while (format[formatIndex].charCodeAt(0) >= 48 &&
                 format[formatIndex].charCodeAt(0) <= 57) {
            formatIndex++;
          }
          var max_;
          if (formatIndex != maxSpecifierStart) {
            max_ = parseInt(format.slice(maxSpecifierStart, formatIndex), 10);
          }
          var long_ = false;
          var half = false;
          var longLong = false;
          if (format[formatIndex] == 'l') {
            long_ = true;
            formatIndex++;
            if (format[formatIndex] == 'l') {
              longLong = true;
              formatIndex++;
            }
          } else if (format[formatIndex] == 'h') {
            half = true;
            formatIndex++;
          }
          var type = format[formatIndex];
          formatIndex++;
          var curr = 0;
          var buffer = [];
          // Read characters according to the format. floats are trickier, they may be in an unfloat state in the middle, then be a valid float later
          if (type == 'f' || type == 'e' || type == 'g' ||
              type == 'F' || type == 'E' || type == 'G') {
            next = get();
            while (next > 0 && (!(next in __scanString.whiteSpace)))  {
              buffer.push(String.fromCharCode(next));
              next = get();
            }
            var m = __getFloat(buffer.join(''));
            var last = m ? m[0].length : 0;
            for (var i = 0; i < buffer.length - last + 1; i++) {
              unget();
            }
            buffer.length = last;
          } else {
            next = get();
            var first = true;
            // Strip the optional 0x prefix for %x.
            if ((type == 'x' || type == 'X') && (next == 48)) {
              var peek = get();
              if (peek == 120 || peek == 88) {
                next = get();
              } else {
                unget();
              }
            }
            while ((curr < max_ || isNaN(max_)) && next > 0) {
              if (!(next in __scanString.whiteSpace) && // stop on whitespace
                  (type == 's' ||
                   ((type === 'd' || type == 'u' || type == 'i') && ((next >= 48 && next <= 57) ||
                                                                     (first && next == 45))) ||
                   ((type === 'x' || type === 'X') && (next >= 48 && next <= 57 ||
                                     next >= 97 && next <= 102 ||
                                     next >= 65 && next <= 70))) &&
                  (formatIndex >= format.length || next !== format[formatIndex].charCodeAt(0))) { // Stop when we read something that is coming up
                buffer.push(String.fromCharCode(next));
                next = get();
                curr++;
                first = false;
              } else {
                break;
              }
            }
            unget();
          }
          if (buffer.length === 0) return 0;  // Failure.
          if (suppressAssignment) continue;
          var text = buffer.join('');
          var argPtr = HEAP32[(((varargs)+(argIndex))>>2)];
          argIndex += Runtime.getAlignSize('void*', null, true);
          switch (type) {
            case 'd': case 'u': case 'i':
              if (half) {
                HEAP16[((argPtr)>>1)]=parseInt(text, 10);
              } else if (longLong) {
                (tempI64 = [parseInt(text, 10)>>>0,(tempDouble=parseInt(text, 10),(+(Math_abs(tempDouble))) >= (+1) ? (tempDouble > (+0) ? ((Math_min((+(Math_floor((tempDouble)/(+4294967296)))), (+4294967295)))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/(+4294967296))))))>>>0) : 0)],HEAP32[((argPtr)>>2)]=tempI64[0],HEAP32[(((argPtr)+(4))>>2)]=tempI64[1]);
              } else {
                HEAP32[((argPtr)>>2)]=parseInt(text, 10);
              }
              break;
            case 'X':
            case 'x':
              HEAP32[((argPtr)>>2)]=parseInt(text, 16)
              break;
            case 'F':
            case 'f':
            case 'E':
            case 'e':
            case 'G':
            case 'g':
            case 'E':
              // fallthrough intended
              if (long_) {
                HEAPF64[((argPtr)>>3)]=parseFloat(text)
              } else {
                HEAPF32[((argPtr)>>2)]=parseFloat(text)
              }
              break;
            case 's':
              var array = intArrayFromString(text);
              for (var j = 0; j < array.length; j++) {
                HEAP8[(((argPtr)+(j))|0)]=array[j]
              }
              break;
          }
          fields++;
        } else if (format[formatIndex].charCodeAt(0) in __scanString.whiteSpace) {
          next = get();
          while (next in __scanString.whiteSpace) {
            if (next <= 0) break mainLoop;  // End of input.
            next = get();
          }
          unget(next);
          formatIndex++;
        } else {
          // Not a specifier.
          next = get();
          if (format[formatIndex].charCodeAt(0) !== next) {
            unget(next);
            break mainLoop;
          }
          formatIndex++;
        }
      }
      return fields;
    }function _sscanf(s, format, varargs) {
      // int sscanf(const char *restrict s, const char *restrict format, ... );
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/scanf.html
      var index = 0;
      function get() { return HEAP8[(((s)+(index++))|0)]; };
      function unget() { index--; };
      return __scanString(format, get, unget, varargs);
    }
  function _printf(format, varargs) {
      // int printf(const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      var stdout = HEAP32[((_stdout)>>2)];
      return _fprintf(stdout, format, varargs);
    }
  function __exit(status) {
      // void _exit(int status);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/exit.html
      Module['exit'](status);
    }function _exit(status) {
      __exit(status);
    }
  function _isspace(chr) {
      return (chr == 32) || (chr >= 9 && chr <= 13);
    }function __parseInt(str, endptr, base, min, max, bits, unsign) {
      // Skip space.
      while (_isspace(HEAP8[(str)])) str++;
      // Check for a plus/minus sign.
      var multiplier = 1;
      if (HEAP8[(str)] == 45) {
        multiplier = -1;
        str++;
      } else if (HEAP8[(str)] == 43) {
        str++;
      }
      // Find base.
      var finalBase = base;
      if (!finalBase) {
        if (HEAP8[(str)] == 48) {
          if (HEAP8[((str+1)|0)] == 120 ||
              HEAP8[((str+1)|0)] == 88) {
            finalBase = 16;
            str += 2;
          } else {
            finalBase = 8;
            str++;
          }
        }
      } else if (finalBase==16) {
        if (HEAP8[(str)] == 48) {
          if (HEAP8[((str+1)|0)] == 120 ||
              HEAP8[((str+1)|0)] == 88) {
            str += 2;
          }
        }
      }
      if (!finalBase) finalBase = 10;
      // Get digits.
      var chr;
      var ret = 0;
      while ((chr = HEAP8[(str)]) != 0) {
        var digit = parseInt(String.fromCharCode(chr), finalBase);
        if (isNaN(digit)) {
          break;
        } else {
          ret = ret * finalBase + digit;
          str++;
        }
      }
      // Apply sign.
      ret *= multiplier;
      // Set end pointer.
      if (endptr) {
        HEAP32[((endptr)>>2)]=str
      }
      // Unsign if needed.
      if (unsign) {
        if (Math.abs(ret) > max) {
          ret = max;
          ___setErrNo(ERRNO_CODES.ERANGE);
        } else {
          ret = unSign(ret, bits);
        }
      }
      // Validate range.
      if (ret > max || ret < min) {
        ret = ret > max ? max : min;
        ___setErrNo(ERRNO_CODES.ERANGE);
      }
      if (bits == 64) {
        return ((asm["setTempRet0"]((tempDouble=ret,(+(Math_abs(tempDouble))) >= (+1) ? (tempDouble > (+0) ? ((Math_min((+(Math_floor((tempDouble)/(+4294967296)))), (+4294967295)))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/(+4294967296))))))>>>0) : 0)),ret>>>0)|0);
      }
      return ret;
    }function _strtol(str, endptr, base) {
      return __parseInt(str, endptr, base, -2147483648, 2147483647, 32);  // LONG_MIN, LONG_MAX.
    }function _atoi(ptr) {
      return _strtol(ptr, null, 10);
    }
  function _open(path, oflag, varargs) {
      // int open(const char *path, int oflag, ...);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/open.html
      var mode = HEAP32[((varargs)>>2)];
      path = Pointer_stringify(path);
      try {
        var stream = FS.open(path, oflag, mode);
        return stream.fd;
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _fopen(filename, mode) {
      // FILE *fopen(const char *restrict filename, const char *restrict mode);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fopen.html
      var flags;
      mode = Pointer_stringify(mode);
      if (mode[0] == 'r') {
        if (mode.indexOf('+') != -1) {
          flags = 2;
        } else {
          flags = 0;
        }
      } else if (mode[0] == 'w') {
        if (mode.indexOf('+') != -1) {
          flags = 2;
        } else {
          flags = 1;
        }
        flags |= 64;
        flags |= 512;
      } else if (mode[0] == 'a') {
        if (mode.indexOf('+') != -1) {
          flags = 2;
        } else {
          flags = 1;
        }
        flags |= 64;
        flags |= 1024;
      } else {
        ___setErrNo(ERRNO_CODES.EINVAL);
        return 0;
      }
      var ret = _open(filename, flags, allocate([0x1FF, 0, 0, 0], 'i32', ALLOC_STACK));  // All creation permissions.
      return (ret == -1) ? 0 : ret;
    }
  Module["_memset"] = _memset;var _llvm_memset_p0i8_i32=_memset;
  function _strrchr(ptr, chr) {
      var ptr2 = ptr + _strlen(ptr);
      do {
        if (HEAP8[(ptr2)] == chr) return ptr2;
        ptr2--;
      } while (ptr2 >= ptr);
      return 0;
    }
  function _close(fildes) {
      // int close(int fildes);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/close.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        FS.close(stream);
        return 0;
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }
  function _fsync(fildes) {
      // int fsync(int fildes);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fsync.html
      var stream = FS.getStream(fildes);
      if (stream) {
        // We write directly to the file system, so there's nothing to do here.
        return 0;
      } else {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
    }function _fclose(stream) {
      // int fclose(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fclose.html
      _fsync(stream);
      return _close(stream);
    }
  function _ftell(stream) {
      // long ftell(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/ftell.html
      stream = FS.getStream(stream);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      if (FS.isChrdev(stream.node.mode)) {
        ___setErrNo(ERRNO_CODES.ESPIPE);
        return -1;
      } else {
        return stream.position;
      }
    }
  function _lseek(fildes, offset, whence) {
      // off_t lseek(int fildes, off_t offset, int whence);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/lseek.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        return FS.llseek(stream, offset, whence);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _fseek(stream, offset, whence) {
      // int fseek(FILE *stream, long offset, int whence);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fseek.html
      var ret = _lseek(stream, offset, whence);
      if (ret == -1) {
        return -1;
      }
      stream = FS.getStream(stream);
      stream.eof = false;
      return 0;
    }
  function _strncmp(px, py, n) {
      var i = 0;
      while (i < n) {
        var x = HEAPU8[(((px)+(i))|0)];
        var y = HEAPU8[(((py)+(i))|0)];
        if (x == y && x == 0) return 0;
        if (x == 0) return -1;
        if (y == 0) return 1;
        if (x == y) {
          i ++;
          continue;
        } else {
          return x > y ? 1 : -1;
        }
      }
      return 0;
    }function _strcmp(px, py) {
      return _strncmp(px, py, TOTAL_MEMORY);
    }
  function _setlocale(category, locale) {
      if (!_setlocale.ret) _setlocale.ret = allocate([0], 'i8', ALLOC_NORMAL);
      return _setlocale.ret;
    }
  var _environ=allocate(1, "i32*", ALLOC_STATIC);var ___environ=_environ;function ___buildEnvironment(env) {
      // WARNING: Arbitrary limit!
      var MAX_ENV_VALUES = 64;
      var TOTAL_ENV_SIZE = 1024;
      // Statically allocate memory for the environment.
      var poolPtr;
      var envPtr;
      if (!___buildEnvironment.called) {
        ___buildEnvironment.called = true;
        // Set default values. Use string keys for Closure Compiler compatibility.
        ENV['USER'] = 'root';
        ENV['PATH'] = '/';
        ENV['PWD'] = '/';
        ENV['HOME'] = '/home/emscripten';
        ENV['LANG'] = 'en_US.UTF-8';
        ENV['_'] = './this.program';
        // Allocate memory.
        poolPtr = allocate(TOTAL_ENV_SIZE, 'i8', ALLOC_STATIC);
        envPtr = allocate(MAX_ENV_VALUES * 4,
                          'i8*', ALLOC_STATIC);
        HEAP32[((envPtr)>>2)]=poolPtr
        HEAP32[((_environ)>>2)]=envPtr;
      } else {
        envPtr = HEAP32[((_environ)>>2)];
        poolPtr = HEAP32[((envPtr)>>2)];
      }
      // Collect key=value lines.
      var strings = [];
      var totalSize = 0;
      for (var key in env) {
        if (typeof env[key] === 'string') {
          var line = key + '=' + env[key];
          strings.push(line);
          totalSize += line.length;
        }
      }
      if (totalSize > TOTAL_ENV_SIZE) {
        throw new Error('Environment size exceeded TOTAL_ENV_SIZE!');
      }
      // Make new.
      var ptrSize = 4;
      for (var i = 0; i < strings.length; i++) {
        var line = strings[i];
        writeAsciiToMemory(line, poolPtr);
        HEAP32[(((envPtr)+(i * ptrSize))>>2)]=poolPtr;
        poolPtr += line.length + 1;
      }
      HEAP32[(((envPtr)+(strings.length * ptrSize))>>2)]=0;
    }var ENV={};function _getenv(name) {
      // char *getenv(const char *name);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/getenv.html
      if (name === 0) return 0;
      name = Pointer_stringify(name);
      if (!ENV.hasOwnProperty(name)) return 0;
      if (_getenv.ret) _free(_getenv.ret);
      _getenv.ret = allocate(intArrayFromString(ENV[name]), 'i8', ALLOC_NORMAL);
      return _getenv.ret;
    }
  function _access(path, amode) {
      // int access(const char *path, int amode);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/access.html
      path = Pointer_stringify(path);
      if (amode & ~7) {
        // need a valid mode
        ___setErrNo(ERRNO_CODES.EINVAL);
        return -1;
      }
      var node;
      try {
        var lookup = FS.lookupPath(path, { follow: true });
        node = lookup.node;
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
      var perms = '';
      if (amode & 4) perms += 'r';
      if (amode & 2) perms += 'w';
      if (amode & 1) perms += 'x';
      if (perms /* otherwise, they've just passed F_OK */ && FS.nodePermissions(node, perms)) {
        ___setErrNo(ERRNO_CODES.EACCES);
        return -1;
      }
      return 0;
    }
  Module["_strcat"] = _strcat;
  function _recv(fd, buf, len, flags) {
      var sock = SOCKFS.getSocket(fd);
      if (!sock) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      // TODO honor flags
      return _read(fd, buf, len);
    }
  function _pread(fildes, buf, nbyte, offset) {
      // ssize_t pread(int fildes, void *buf, size_t nbyte, off_t offset);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/read.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        var slab = HEAP8;
        return FS.read(stream, slab, buf, nbyte, offset);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _read(fildes, buf, nbyte) {
      // ssize_t read(int fildes, void *buf, size_t nbyte);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/read.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        var slab = HEAP8;
        return FS.read(stream, slab, buf, nbyte);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _fread(ptr, size, nitems, stream) {
      // size_t fread(void *restrict ptr, size_t size, size_t nitems, FILE *restrict stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fread.html
      var bytesToRead = nitems * size;
      if (bytesToRead == 0) {
        return 0;
      }
      var bytesRead = 0;
      var streamObj = FS.getStream(stream);
      if (!streamObj) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return 0;
      }
      while (streamObj.ungotten.length && bytesToRead > 0) {
        HEAP8[((ptr++)|0)]=streamObj.ungotten.pop()
        bytesToRead--;
        bytesRead++;
      }
      var err = _read(stream, ptr, bytesToRead);
      if (err == -1) {
        if (streamObj) streamObj.error = true;
        return 0;
      }
      bytesRead += err;
      if (bytesRead < bytesToRead) streamObj.eof = true;
      return Math.floor(bytesRead / size);
    }function _fgetc(stream) {
      // int fgetc(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fgetc.html
      var streamObj = FS.getStream(stream);
      if (!streamObj) return -1;
      if (streamObj.eof || streamObj.error) return -1;
      var ret = _fread(_fgetc.ret, 1, 1, stream);
      if (ret == 0) {
        return -1;
      } else if (ret == -1) {
        streamObj.error = true;
        return -1;
      } else {
        return HEAPU8[((_fgetc.ret)|0)];
      }
    }function _fgets(s, n, stream) {
      // char *fgets(char *restrict s, int n, FILE *restrict stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fgets.html
      var streamObj = FS.getStream(stream);
      if (!streamObj) return 0;
      if (streamObj.error || streamObj.eof) return 0;
      var byte_;
      for (var i = 0; i < n - 1 && byte_ != 10; i++) {
        byte_ = _fgetc(stream);
        if (byte_ == -1) {
          if (streamObj.error || (streamObj.eof && i == 0)) return 0;
          else if (streamObj.eof) break;
        }
        HEAP8[(((s)+(i))|0)]=byte_
      }
      HEAP8[(((s)+(i))|0)]=0
      return s;
    }
  function _strstr(ptr1, ptr2) {
      var check = 0, start;
      do {
        if (!check) {
          start = ptr1;
          check = ptr2;
        }
        var curr1 = HEAP8[((ptr1++)|0)];
        var curr2 = HEAP8[((check++)|0)];
        if (curr2 == 0) return start;
        if (curr2 != curr1) {
          // rewind to one character after start, to find ez in eeez
          ptr1 = start + 1;
          check = 0;
        }
      } while (curr1);
      return 0;
    }
  Module["_memcmp"] = _memcmp;
  Module["_memcpy"] = _memcpy;function _qsort(base, num, size, cmp) {
      if (num == 0 || size == 0) return;
      // forward calls to the JavaScript sort method
      // first, sort the items logically
      var keys = [];
      for (var i = 0; i < num; i++) keys.push(i);
      keys.sort(function(a, b) {
        return Module['dynCall_iii'](cmp, base+a*size, base+b*size);
      });
      // apply the sort
      var temp = _malloc(num*size);
      _memcpy(temp, base, num*size);
      for (var i = 0; i < num; i++) {
        if (keys[i] == i) continue; // already in place
        _memcpy(base+i*size, temp+keys[i]*size, size);
      }
      _free(temp);
    }
  function _unlink(path) {
      // int unlink(const char *path);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/unlink.html
      path = Pointer_stringify(path);
      try {
        FS.unlink(path);
        return 0;
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }
  function _rmdir(path) {
      // int rmdir(const char *path);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/rmdir.html
      path = Pointer_stringify(path);
      try {
        FS.rmdir(path);
        return 0;
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _remove(path) {
      // int remove(const char *path);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/remove.html
      var ret = _unlink(path);
      if (ret == -1) ret = _rmdir(path);
      return ret;
    }
  var _llvm_memcpy_p0i8_p0i8_i32=_memcpy;
  function _isalnum(chr) {
      return (chr >= 48 && chr <= 57) ||
             (chr >= 97 && chr <= 122) ||
             (chr >= 65 && chr <= 90);
    }
  function _strchr(ptr, chr) {
      ptr--;
      do {
        ptr++;
        var val = HEAP8[(ptr)];
        if (val == chr) return ptr;
      } while (val);
      return 0;
    }
  Module["_strncpy"] = _strncpy;
  Module["_tolower"] = _tolower;
  function _isalpha(chr) {
      return (chr >= 97 && chr <= 122) ||
             (chr >= 65 && chr <= 90);
    }
  var _abs=Math_abs;
  function _isdigit(chr) {
      return chr >= 48 && chr <= 57;
    }
  function _isupper(chr) {
      return chr >= 65 && chr <= 90;
    }
  function _islower(chr) {
      return chr >= 97 && chr <= 122;
    }
  function _ispunct(chr) {
      return (chr >= 33 && chr <= 47) ||
             (chr >= 58 && chr <= 64) ||
             (chr >= 91 && chr <= 96) ||
             (chr >= 123 && chr <= 126);
    }
  function _feof(stream) {
      // int feof(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/feof.html
      stream = FS.getStream(stream);
      return Number(stream && stream.eof);
    }
  function _creat(path, mode) {
      // int creat(const char *path, mode_t mode);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/creat.html
      return _open(path, 1 | 64 | 512, allocate([mode, 0, 0, 0], 'i32', ALLOC_STACK));
    }
  function _mktemp(template) {
      if (!_mktemp.counter) _mktemp.counter = 0;
      var c = (_mktemp.counter++).toString();
      var rep = 'XXXXXX';
      while (c.length < rep.length) c = '0' + c;
      writeArrayToMemory(intArrayFromString(c), template + Pointer_stringify(template).indexOf(rep));
      return template;
    }function _mkstemp(template) {
      return _creat(_mktemp(template), 0600);
    }
  function _system(command) {
      // int system(const char *command);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/system.html
      // Can't call external programs.
      ___setErrNo(ERRNO_CODES.EAGAIN);
      return -1;
    }
  var _llvm_pow_f64=Math_pow;
  function _ungetc(c, stream) {
      // int ungetc(int c, FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/ungetc.html
      stream = FS.getStream(stream);
      if (!stream) {
        return -1;
      }
      if (c === -1) {
        // do nothing for EOF character
        return c;
      }
      c = unSign(c & 0xFF);
      stream.ungotten.push(c);
      stream.eof = false;
      return c;
    }
  function _strdup(ptr) {
      var len = _strlen(ptr);
      var newStr = _malloc(len + 1);
      (_memcpy(newStr, ptr, len)|0);
      HEAP8[(((newStr)+(len))|0)]=0;
      return newStr;
    }
  function _kill(pid, sig) {
      // int kill(pid_t pid, int sig);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/kill.html
      // Makes no sense in a single-process environment.
      ___setErrNo(ERRNO_CODES.EPERM);
      return -1;
    }
  function ___errno_location() {
      return ___errno_state;
    }
  function _strerror_r(errnum, strerrbuf, buflen) {
      if (errnum in ERRNO_MESSAGES) {
        if (ERRNO_MESSAGES[errnum].length > buflen - 1) {
          return ___setErrNo(ERRNO_CODES.ERANGE);
        } else {
          var msg = ERRNO_MESSAGES[errnum];
          writeAsciiToMemory(msg, strerrbuf);
          return 0;
        }
      } else {
        return ___setErrNo(ERRNO_CODES.EINVAL);
      }
    }function _strerror(errnum) {
      if (!_strerror.buffer) _strerror.buffer = _malloc(256);
      _strerror_r(errnum, _strerror.buffer, 256);
      return _strerror.buffer;
    }
  Module["_memmove"] = _memmove;var _llvm_memmove_p0i8_p0i8_i32=_memmove;
  var _llvm_va_start=undefined;
  function _vfprintf(s, f, va_arg) {
      return _fprintf(s, f, HEAP32[((va_arg)>>2)]);
    }
  function _llvm_va_end() {}
  function _wait(stat_loc) {
      // pid_t wait(int *stat_loc);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/wait.html
      // Makes no sense in a single-process environment.
      ___setErrNo(ERRNO_CODES.ECHILD);
      return -1;
    }var _waitpid=_wait;
  function _vsnprintf(s, n, format, va_arg) {
      return _snprintf(s, n, format, HEAP32[((va_arg)>>2)]);
    }
  var ___DEFAULT_POLLMASK=5;function _poll(fds, nfds, timeout) {
      // int poll(struct pollfd fds[], nfds_t nfds, int timeout);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/poll.html
      var nonzero = 0;
      for (var i = 0; i < nfds; i++) {
        var pollfd = fds + 8 * i;
        var fd = HEAP32[((pollfd)>>2)];
        var events = HEAP16[(((pollfd)+(4))>>1)];
        var mask = 32;
        var stream = FS.getStream(fd);
        if (stream) {
          mask = ___DEFAULT_POLLMASK;
          if (stream.stream_ops.poll) {
            mask = stream.stream_ops.poll(stream);
          }
        }
        mask &= events | 8 | 16;
        if (mask) nonzero++;
        HEAP16[(((pollfd)+(6))>>1)]=mask
      }
      return nonzero;
    }
  function _memchr(ptr, chr, num) {
      chr = unSign(chr);
      for (var i = 0; i < num; i++) {
        if (HEAP8[(ptr)] == chr) return ptr;
        ptr++;
      }
      return 0;
    }
  function _fork() {
      // pid_t fork(void);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fork.html
      // We don't support multiple processes.
      ___setErrNo(ERRNO_CODES.EAGAIN);
      return -1;
    }
  function _fcntl(fildes, cmd, varargs, dup2) {
      // int fcntl(int fildes, int cmd, ...);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/fcntl.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      switch (cmd) {
        case 0:
          var arg = HEAP32[((varargs)>>2)];
          if (arg < 0) {
            ___setErrNo(ERRNO_CODES.EINVAL);
            return -1;
          }
          var newStream;
          try {
            newStream = FS.open(stream.path, stream.flags, 0, arg);
          } catch (e) {
            FS.handleFSError(e);
            return -1;
          }
          return newStream.fd;
        case 1:
        case 2:
          return 0;  // FD_CLOEXEC makes no sense for a single process.
        case 3:
          return stream.flags;
        case 4:
          var arg = HEAP32[((varargs)>>2)];
          stream.flags |= arg;
          return 0;
        case 12:
        case 12:
          var arg = HEAP32[((varargs)>>2)];
          var offset = 0;
          // We're always unlocked.
          HEAP16[(((arg)+(offset))>>1)]=2
          return 0;
        case 13:
        case 14:
        case 13:
        case 14:
          // Pretend that the locking is successful.
          return 0;
        case 8:
        case 9:
          // These are for sockets. We don't have them fully implemented yet.
          ___setErrNo(ERRNO_CODES.EINVAL);
          return -1;
        default:
          ___setErrNo(ERRNO_CODES.EINVAL);
          return -1;
      }
      // Should never be reached. Only to silence strict warnings.
      return -1;
    }function _dup2(fildes, fildes2) {
      // int dup2(int fildes, int fildes2);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/dup.html
      var stream = FS.getStream(fildes);
      if (fildes2 < 0) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      } else if (fildes === fildes2 && stream) {
        return fildes;
      } else {
        _close(fildes2);
        try {
          var stream2 = FS.open(stream.path, stream.flags, 0, fildes2, fildes2);
          return stream2.fd;
        } catch (e) {
          FS.handleFSError(e);
          return -1;
        }
      }
    }
  function _signal(sig, func) {
      // TODO
      return 0;
    }
  function _execl(/* ... */) {
      // int execl(const char *path, const char *arg0, ... /*, (char *)0 */);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/exec.html
      // We don't support executing external code.
      ___setErrNo(ERRNO_CODES.ENOEXEC);
      return -1;
    }var _execlp=_execl;
  function _pipe(fildes) {
      // int pipe(int fildes[2]);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/pipe.html
      // It is possible to implement this using two device streams, but pipes make
      // little sense in a single-threaded environment, so we do not support them.
      ___setErrNo(ERRNO_CODES.ENOSYS);
      return -1;
    }
  function _opendir(dirname) {
      // DIR *opendir(const char *dirname);
      // http://pubs.opengroup.org/onlinepubs/007908799/xsh/opendir.html
      // NOTE: Calculating absolute path redundantly since we need to associate it
      //       with the opened stream.
      var path = Pointer_stringify(dirname);
      if (!path) {
        ___setErrNo(ERRNO_CODES.ENOENT);
        return 0;
      }
      var node;
      try {
        var lookup = FS.lookupPath(path, { follow: true });
        node = lookup.node;
      } catch (e) {
        FS.handleFSError(e);
        return 0;
      }
      if (!FS.isDir(node.mode)) {
        ___setErrNo(ERRNO_CODES.ENOTDIR);
        return 0;
      }
      var err = _open(dirname, 0, allocate([0, 0, 0, 0], 'i32', ALLOC_STACK));
      // open returns 0 on failure, not -1
      return err === -1 ? 0 : err;
    }
  function _readdir_r(dirp, entry, result) {
      // int readdir_r(DIR *dirp, struct dirent *entry, struct dirent **result);
      // http://pubs.opengroup.org/onlinepubs/007908799/xsh/readdir_r.html
      var stream = FS.getStream(dirp);
      if (!stream) {
        return ___setErrNo(ERRNO_CODES.EBADF);
      }
      var entries;
      try {
        entries = FS.readdir(stream.path);
      } catch (e) {
        return FS.handleFSError(e);
      }
      if (stream.position < 0 || stream.position >= entries.length) {
        HEAP32[((result)>>2)]=0
        return 0;
      }
      var id;
      var type;
      var name = entries[stream.position];
      var offset = stream.position + 1;
      if (!name.indexOf('.')) {
        id = 1;
        type = 4;
      } else {
        var child = FS.lookupNode(stream.node, name);
        id = child.id;
        type = FS.isChrdev(child.mode) ? 2 :  // DT_CHR, character device.
               FS.isDir(child.mode) ? 4 :     // DT_DIR, directory.
               FS.isLink(child.mode) ? 10 :   // DT_LNK, symbolic link.
               8;                             // DT_REG, regular file.
      }
      HEAP32[((entry)>>2)]=id
      HEAP32[(((entry)+(4))>>2)]=offset
      HEAP32[(((entry)+(8))>>2)]=name.length + 1
      for (var i = 0; i < name.length; i++) {
        HEAP8[(((entry + 11)+(i))|0)]=name.charCodeAt(i)
      }
      HEAP8[(((entry + 11)+(i))|0)]=0
      HEAP8[(((entry)+(10))|0)]=type
      HEAP32[((result)>>2)]=entry
      stream.position++;
      return 0;
    }function _readdir(dirp) {
      // struct dirent *readdir(DIR *dirp);
      // http://pubs.opengroup.org/onlinepubs/007908799/xsh/readdir_r.html
      var stream = FS.getStream(dirp);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return 0;
      }
      // TODO Is it supposed to be safe to execute multiple readdirs?
      if (!_readdir.entry) _readdir.entry = _malloc(268);
      if (!_readdir.result) _readdir.result = _malloc(4);
      var err = _readdir_r(dirp, _readdir.entry, _readdir.result);
      if (err) {
        ___setErrNo(err);
        return 0;
      }
      return HEAP32[((_readdir.result)>>2)];
    }
  function _closedir(dirp) {
      // int closedir(DIR *dirp);
      // http://pubs.opengroup.org/onlinepubs/007908799/xsh/closedir.html
      return _close(dirp);
    }
  var _cos=Math_cos;
  function _rand() {
      return Math.floor(Math.random()*0x80000000);
    }
  var _exp=Math_exp;
  var _sin=Math_sin;
  function _abort() {
      Module['abort']();
    }
  function _sbrk(bytes) {
      // Implement a Linux-like 'memory area' for our 'process'.
      // Changes the size of the memory area by |bytes|; returns the
      // address of the previous top ('break') of the memory area
      // We control the "dynamic" memory - DYNAMIC_BASE to DYNAMICTOP
      var self = _sbrk;
      if (!self.called) {
        DYNAMICTOP = alignMemoryPage(DYNAMICTOP); // make sure we start out aligned
        self.called = true;
        assert(Runtime.dynamicAlloc);
        self.alloc = Runtime.dynamicAlloc;
        Runtime.dynamicAlloc = function() { abort('cannot dynamically allocate, sbrk now has control') };
      }
      var ret = DYNAMICTOP;
      if (bytes != 0) self.alloc(bytes);
      return ret;  // Previous break location.
    }
  function _sysconf(name) {
      // long sysconf(int name);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/sysconf.html
      switch(name) {
        case 30: return PAGE_SIZE;
        case 132:
        case 133:
        case 12:
        case 137:
        case 138:
        case 15:
        case 235:
        case 16:
        case 17:
        case 18:
        case 19:
        case 20:
        case 149:
        case 13:
        case 10:
        case 236:
        case 153:
        case 9:
        case 21:
        case 22:
        case 159:
        case 154:
        case 14:
        case 77:
        case 78:
        case 139:
        case 80:
        case 81:
        case 79:
        case 82:
        case 68:
        case 67:
        case 164:
        case 11:
        case 29:
        case 47:
        case 48:
        case 95:
        case 52:
        case 51:
        case 46:
          return 200809;
        case 27:
        case 246:
        case 127:
        case 128:
        case 23:
        case 24:
        case 160:
        case 161:
        case 181:
        case 182:
        case 242:
        case 183:
        case 184:
        case 243:
        case 244:
        case 245:
        case 165:
        case 178:
        case 179:
        case 49:
        case 50:
        case 168:
        case 169:
        case 175:
        case 170:
        case 171:
        case 172:
        case 97:
        case 76:
        case 32:
        case 173:
        case 35:
          return -1;
        case 176:
        case 177:
        case 7:
        case 155:
        case 8:
        case 157:
        case 125:
        case 126:
        case 92:
        case 93:
        case 129:
        case 130:
        case 131:
        case 94:
        case 91:
          return 1;
        case 74:
        case 60:
        case 69:
        case 70:
        case 4:
          return 1024;
        case 31:
        case 42:
        case 72:
          return 32;
        case 87:
        case 26:
        case 33:
          return 2147483647;
        case 34:
        case 1:
          return 47839;
        case 38:
        case 36:
          return 99;
        case 43:
        case 37:
          return 2048;
        case 0: return 2097152;
        case 3: return 65536;
        case 28: return 32768;
        case 44: return 32767;
        case 75: return 16384;
        case 39: return 1000;
        case 89: return 700;
        case 71: return 256;
        case 40: return 255;
        case 2: return 100;
        case 180: return 64;
        case 25: return 20;
        case 5: return 16;
        case 6: return 6;
        case 73: return 4;
        case 84: return 1;
      }
      ___setErrNo(ERRNO_CODES.EINVAL);
      return -1;
    }
  function _time(ptr) {
      var ret = Math.floor(Date.now()/1000);
      if (ptr) {
        HEAP32[((ptr)>>2)]=ret
      }
      return ret;
    }
  function _copysign(a, b) {
      return __reallyNegative(a) === __reallyNegative(b) ? a : -a;
    }var _copysignl=_copysign;
  function _fmod(x, y) {
      return x % y;
    }var _fmodl=_fmod;
  var _fabs=Math_abs;
  function _llvm_lifetime_start() {}
  var _llvm_memset_p0i8_i64=_memset;
  function _llvm_lifetime_end() {}
  var Browser={mainLoop:{scheduler:null,shouldPause:false,paused:false,queue:[],pause:function () {
          Browser.mainLoop.shouldPause = true;
        },resume:function () {
          if (Browser.mainLoop.paused) {
            Browser.mainLoop.paused = false;
            Browser.mainLoop.scheduler();
          }
          Browser.mainLoop.shouldPause = false;
        },updateStatus:function () {
          if (Module['setStatus']) {
            var message = Module['statusMessage'] || 'Please wait...';
            var remaining = Browser.mainLoop.remainingBlockers;
            var expected = Browser.mainLoop.expectedBlockers;
            if (remaining) {
              if (remaining < expected) {
                Module['setStatus'](message + ' (' + (expected - remaining) + '/' + expected + ')');
              } else {
                Module['setStatus'](message);
              }
            } else {
              Module['setStatus']('');
            }
          }
        }},isFullScreen:false,pointerLock:false,moduleContextCreatedCallbacks:[],workers:[],init:function () {
        if (!Module["preloadPlugins"]) Module["preloadPlugins"] = []; // needs to exist even in workers
        if (Browser.initted || ENVIRONMENT_IS_WORKER) return;
        Browser.initted = true;
        try {
          new Blob();
          Browser.hasBlobConstructor = true;
        } catch(e) {
          Browser.hasBlobConstructor = false;
          console.log("warning: no blob constructor, cannot create blobs with mimetypes");
        }
        Browser.BlobBuilder = typeof MozBlobBuilder != "undefined" ? MozBlobBuilder : (typeof WebKitBlobBuilder != "undefined" ? WebKitBlobBuilder : (!Browser.hasBlobConstructor ? console.log("warning: no BlobBuilder") : null));
        Browser.URLObject = typeof window != "undefined" ? (window.URL ? window.URL : window.webkitURL) : undefined;
        if (!Module.noImageDecoding && typeof Browser.URLObject === 'undefined') {
          console.log("warning: Browser does not support creating object URLs. Built-in browser image decoding will not be available.");
          Module.noImageDecoding = true;
        }
        // Support for plugins that can process preloaded files. You can add more of these to
        // your app by creating and appending to Module.preloadPlugins.
        //
        // Each plugin is asked if it can handle a file based on the file's name. If it can,
        // it is given the file's raw data. When it is done, it calls a callback with the file's
        // (possibly modified) data. For example, a plugin might decompress a file, or it
        // might create some side data structure for use later (like an Image element, etc.).
        var imagePlugin = {};
        imagePlugin['canHandle'] = function imagePlugin_canHandle(name) {
          return !Module.noImageDecoding && /\.(jpg|jpeg|png|bmp)$/i.test(name);
        };
        imagePlugin['handle'] = function imagePlugin_handle(byteArray, name, onload, onerror) {
          var b = null;
          if (Browser.hasBlobConstructor) {
            try {
              b = new Blob([byteArray], { type: Browser.getMimetype(name) });
              if (b.size !== byteArray.length) { // Safari bug #118630
                // Safari's Blob can only take an ArrayBuffer
                b = new Blob([(new Uint8Array(byteArray)).buffer], { type: Browser.getMimetype(name) });
              }
            } catch(e) {
              Runtime.warnOnce('Blob constructor present but fails: ' + e + '; falling back to blob builder');
            }
          }
          if (!b) {
            var bb = new Browser.BlobBuilder();
            bb.append((new Uint8Array(byteArray)).buffer); // we need to pass a buffer, and must copy the array to get the right data range
            b = bb.getBlob();
          }
          var url = Browser.URLObject.createObjectURL(b);
          var img = new Image();
          img.onload = function img_onload() {
            assert(img.complete, 'Image ' + name + ' could not be decoded');
            var canvas = document.createElement('canvas');
            canvas.width = img.width;
            canvas.height = img.height;
            var ctx = canvas.getContext('2d');
            ctx.drawImage(img, 0, 0);
            Module["preloadedImages"][name] = canvas;
            Browser.URLObject.revokeObjectURL(url);
            if (onload) onload(byteArray);
          };
          img.onerror = function img_onerror(event) {
            console.log('Image ' + url + ' could not be decoded');
            if (onerror) onerror();
          };
          img.src = url;
        };
        Module['preloadPlugins'].push(imagePlugin);
        var audioPlugin = {};
        audioPlugin['canHandle'] = function audioPlugin_canHandle(name) {
          return !Module.noAudioDecoding && name.substr(-4) in { '.ogg': 1, '.wav': 1, '.mp3': 1 };
        };
        audioPlugin['handle'] = function audioPlugin_handle(byteArray, name, onload, onerror) {
          var done = false;
          function finish(audio) {
            if (done) return;
            done = true;
            Module["preloadedAudios"][name] = audio;
            if (onload) onload(byteArray);
          }
          function fail() {
            if (done) return;
            done = true;
            Module["preloadedAudios"][name] = new Audio(); // empty shim
            if (onerror) onerror();
          }
          if (Browser.hasBlobConstructor) {
            try {
              var b = new Blob([byteArray], { type: Browser.getMimetype(name) });
            } catch(e) {
              return fail();
            }
            var url = Browser.URLObject.createObjectURL(b); // XXX we never revoke this!
            var audio = new Audio();
            audio.addEventListener('canplaythrough', function() { finish(audio) }, false); // use addEventListener due to chromium bug 124926
            audio.onerror = function audio_onerror(event) {
              if (done) return;
              console.log('warning: browser could not fully decode audio ' + name + ', trying slower base64 approach');
              function encode64(data) {
                var BASE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
                var PAD = '=';
                var ret = '';
                var leftchar = 0;
                var leftbits = 0;
                for (var i = 0; i < data.length; i++) {
                  leftchar = (leftchar << 8) | data[i];
                  leftbits += 8;
                  while (leftbits >= 6) {
                    var curr = (leftchar >> (leftbits-6)) & 0x3f;
                    leftbits -= 6;
                    ret += BASE[curr];
                  }
                }
                if (leftbits == 2) {
                  ret += BASE[(leftchar&3) << 4];
                  ret += PAD + PAD;
                } else if (leftbits == 4) {
                  ret += BASE[(leftchar&0xf) << 2];
                  ret += PAD;
                }
                return ret;
              }
              audio.src = 'data:audio/x-' + name.substr(-3) + ';base64,' + encode64(byteArray);
              finish(audio); // we don't wait for confirmation this worked - but it's worth trying
            };
            audio.src = url;
            // workaround for chrome bug 124926 - we do not always get oncanplaythrough or onerror
            Browser.safeSetTimeout(function() {
              finish(audio); // try to use it even though it is not necessarily ready to play
            }, 10000);
          } else {
            return fail();
          }
        };
        Module['preloadPlugins'].push(audioPlugin);
        // Canvas event setup
        var canvas = Module['canvas'];
        canvas.requestPointerLock = canvas['requestPointerLock'] ||
                                    canvas['mozRequestPointerLock'] ||
                                    canvas['webkitRequestPointerLock'];
        canvas.exitPointerLock = document['exitPointerLock'] ||
                                 document['mozExitPointerLock'] ||
                                 document['webkitExitPointerLock'] ||
                                 function(){}; // no-op if function does not exist
        canvas.exitPointerLock = canvas.exitPointerLock.bind(document);
        function pointerLockChange() {
          Browser.pointerLock = document['pointerLockElement'] === canvas ||
                                document['mozPointerLockElement'] === canvas ||
                                document['webkitPointerLockElement'] === canvas;
        }
        document.addEventListener('pointerlockchange', pointerLockChange, false);
        document.addEventListener('mozpointerlockchange', pointerLockChange, false);
        document.addEventListener('webkitpointerlockchange', pointerLockChange, false);
        if (Module['elementPointerLock']) {
          canvas.addEventListener("click", function(ev) {
            if (!Browser.pointerLock && canvas.requestPointerLock) {
              canvas.requestPointerLock();
              ev.preventDefault();
            }
          }, false);
        }
      },createContext:function (canvas, useWebGL, setInModule, webGLContextAttributes) {
        var ctx;
        try {
          if (useWebGL) {
            var contextAttributes = {
              antialias: false,
              alpha: false
            };
            if (webGLContextAttributes) {
              for (var attribute in webGLContextAttributes) {
                contextAttributes[attribute] = webGLContextAttributes[attribute];
              }
            }
            var errorInfo = '?';
            function onContextCreationError(event) {
              errorInfo = event.statusMessage || errorInfo;
            }
            canvas.addEventListener('webglcontextcreationerror', onContextCreationError, false);
            try {
              ['experimental-webgl', 'webgl'].some(function(webglId) {
                return ctx = canvas.getContext(webglId, contextAttributes);
              });
            } finally {
              canvas.removeEventListener('webglcontextcreationerror', onContextCreationError, false);
            }
          } else {
            ctx = canvas.getContext('2d');
          }
          if (!ctx) throw ':(';
        } catch (e) {
          Module.print('Could not create canvas: ' + [errorInfo, e]);
          return null;
        }
        if (useWebGL) {
          // Set the background of the WebGL canvas to black
          canvas.style.backgroundColor = "black";
          // Warn on context loss
          canvas.addEventListener('webglcontextlost', function(event) {
            alert('WebGL context lost. You will need to reload the page.');
          }, false);
        }
        if (setInModule) {
          GLctx = Module.ctx = ctx;
          Module.useWebGL = useWebGL;
          Browser.moduleContextCreatedCallbacks.forEach(function(callback) { callback() });
          Browser.init();
        }
        return ctx;
      },destroyContext:function (canvas, useWebGL, setInModule) {},fullScreenHandlersInstalled:false,lockPointer:undefined,resizeCanvas:undefined,requestFullScreen:function (lockPointer, resizeCanvas) {
        Browser.lockPointer = lockPointer;
        Browser.resizeCanvas = resizeCanvas;
        if (typeof Browser.lockPointer === 'undefined') Browser.lockPointer = true;
        if (typeof Browser.resizeCanvas === 'undefined') Browser.resizeCanvas = false;
        var canvas = Module['canvas'];
        function fullScreenChange() {
          Browser.isFullScreen = false;
          if ((document['webkitFullScreenElement'] || document['webkitFullscreenElement'] ||
               document['mozFullScreenElement'] || document['mozFullscreenElement'] ||
               document['fullScreenElement'] || document['fullscreenElement']) === canvas) {
            canvas.cancelFullScreen = document['cancelFullScreen'] ||
                                      document['mozCancelFullScreen'] ||
                                      document['webkitCancelFullScreen'];
            canvas.cancelFullScreen = canvas.cancelFullScreen.bind(document);
            if (Browser.lockPointer) canvas.requestPointerLock();
            Browser.isFullScreen = true;
            if (Browser.resizeCanvas) Browser.setFullScreenCanvasSize();
          } else if (Browser.resizeCanvas){
            Browser.setWindowedCanvasSize();
          }
          if (Module['onFullScreen']) Module['onFullScreen'](Browser.isFullScreen);
        }
        if (!Browser.fullScreenHandlersInstalled) {
          Browser.fullScreenHandlersInstalled = true;
          document.addEventListener('fullscreenchange', fullScreenChange, false);
          document.addEventListener('mozfullscreenchange', fullScreenChange, false);
          document.addEventListener('webkitfullscreenchange', fullScreenChange, false);
        }
        canvas.requestFullScreen = canvas['requestFullScreen'] ||
                                   canvas['mozRequestFullScreen'] ||
                                   (canvas['webkitRequestFullScreen'] ? function() { canvas['webkitRequestFullScreen'](Element['ALLOW_KEYBOARD_INPUT']) } : null);
        canvas.requestFullScreen();
      },requestAnimationFrame:function requestAnimationFrame(func) {
        if (typeof window === 'undefined') { // Provide fallback to setTimeout if window is undefined (e.g. in Node.js)
          setTimeout(func, 1000/60);
        } else {
          if (!window.requestAnimationFrame) {
            window.requestAnimationFrame = window['requestAnimationFrame'] ||
                                           window['mozRequestAnimationFrame'] ||
                                           window['webkitRequestAnimationFrame'] ||
                                           window['msRequestAnimationFrame'] ||
                                           window['oRequestAnimationFrame'] ||
                                           window['setTimeout'];
          }
          window.requestAnimationFrame(func);
        }
      },safeCallback:function (func) {
        return function() {
          if (!ABORT) return func.apply(null, arguments);
        };
      },safeRequestAnimationFrame:function (func) {
        return Browser.requestAnimationFrame(function() {
          if (!ABORT) func();
        });
      },safeSetTimeout:function (func, timeout) {
        return setTimeout(function() {
          if (!ABORT) func();
        }, timeout);
      },safeSetInterval:function (func, timeout) {
        return setInterval(function() {
          if (!ABORT) func();
        }, timeout);
      },getMimetype:function (name) {
        return {
          'jpg': 'image/jpeg',
          'jpeg': 'image/jpeg',
          'png': 'image/png',
          'bmp': 'image/bmp',
          'ogg': 'audio/ogg',
          'wav': 'audio/wav',
          'mp3': 'audio/mpeg'
        }[name.substr(name.lastIndexOf('.')+1)];
      },getUserMedia:function (func) {
        if(!window.getUserMedia) {
          window.getUserMedia = navigator['getUserMedia'] ||
                                navigator['mozGetUserMedia'];
        }
        window.getUserMedia(func);
      },getMovementX:function (event) {
        return event['movementX'] ||
               event['mozMovementX'] ||
               event['webkitMovementX'] ||
               0;
      },getMovementY:function (event) {
        return event['movementY'] ||
               event['mozMovementY'] ||
               event['webkitMovementY'] ||
               0;
      },mouseX:0,mouseY:0,mouseMovementX:0,mouseMovementY:0,calculateMouseEvent:function (event) { // event should be mousemove, mousedown or mouseup
        if (Browser.pointerLock) {
          // When the pointer is locked, calculate the coordinates
          // based on the movement of the mouse.
          // Workaround for Firefox bug 764498
          if (event.type != 'mousemove' &&
              ('mozMovementX' in event)) {
            Browser.mouseMovementX = Browser.mouseMovementY = 0;
          } else {
            Browser.mouseMovementX = Browser.getMovementX(event);
            Browser.mouseMovementY = Browser.getMovementY(event);
          }
          // check if SDL is available
          if (typeof SDL != "undefined") {
          	Browser.mouseX = SDL.mouseX + Browser.mouseMovementX;
          	Browser.mouseY = SDL.mouseY + Browser.mouseMovementY;
          } else {
          	// just add the mouse delta to the current absolut mouse position
          	// FIXME: ideally this should be clamped against the canvas size and zero
          	Browser.mouseX += Browser.mouseMovementX;
          	Browser.mouseY += Browser.mouseMovementY;
          }        
        } else {
          // Otherwise, calculate the movement based on the changes
          // in the coordinates.
          var rect = Module["canvas"].getBoundingClientRect();
          var x, y;
          // Neither .scrollX or .pageXOffset are defined in a spec, but
          // we prefer .scrollX because it is currently in a spec draft.
          // (see: http://www.w3.org/TR/2013/WD-cssom-view-20131217/)
          var scrollX = ((typeof window.scrollX !== 'undefined') ? window.scrollX : window.pageXOffset);
          var scrollY = ((typeof window.scrollY !== 'undefined') ? window.scrollY : window.pageYOffset);
          if (event.type == 'touchstart' ||
              event.type == 'touchend' ||
              event.type == 'touchmove') {
            var t = event.touches.item(0);
            if (t) {
              x = t.pageX - (scrollX + rect.left);
              y = t.pageY - (scrollY + rect.top);
            } else {
              return;
            }
          } else {
            x = event.pageX - (scrollX + rect.left);
            y = event.pageY - (scrollY + rect.top);
          }
          // the canvas might be CSS-scaled compared to its backbuffer;
          // SDL-using content will want mouse coordinates in terms
          // of backbuffer units.
          var cw = Module["canvas"].width;
          var ch = Module["canvas"].height;
          x = x * (cw / rect.width);
          y = y * (ch / rect.height);
          Browser.mouseMovementX = x - Browser.mouseX;
          Browser.mouseMovementY = y - Browser.mouseY;
          Browser.mouseX = x;
          Browser.mouseY = y;
        }
      },xhrLoad:function (url, onload, onerror) {
        var xhr = new XMLHttpRequest();
        xhr.open('GET', url, true);
        xhr.responseType = 'arraybuffer';
        xhr.onload = function xhr_onload() {
          if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0
            onload(xhr.response);
          } else {
            onerror();
          }
        };
        xhr.onerror = onerror;
        xhr.send(null);
      },asyncLoad:function (url, onload, onerror, noRunDep) {
        Browser.xhrLoad(url, function(arrayBuffer) {
          assert(arrayBuffer, 'Loading data file "' + url + '" failed (no arrayBuffer).');
          onload(new Uint8Array(arrayBuffer));
          if (!noRunDep) removeRunDependency('al ' + url);
        }, function(event) {
          if (onerror) {
            onerror();
          } else {
            throw 'Loading data file "' + url + '" failed.';
          }
        });
        if (!noRunDep) addRunDependency('al ' + url);
      },resizeListeners:[],updateResizeListeners:function () {
        var canvas = Module['canvas'];
        Browser.resizeListeners.forEach(function(listener) {
          listener(canvas.width, canvas.height);
        });
      },setCanvasSize:function (width, height, noUpdates) {
        var canvas = Module['canvas'];
        canvas.width = width;
        canvas.height = height;
        if (!noUpdates) Browser.updateResizeListeners();
      },windowedWidth:0,windowedHeight:0,setFullScreenCanvasSize:function () {
        var canvas = Module['canvas'];
        this.windowedWidth = canvas.width;
        this.windowedHeight = canvas.height;
        canvas.width = screen.width;
        canvas.height = screen.height;
        // check if SDL is available   
        if (typeof SDL != "undefined") {
        	var flags = HEAPU32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)];
        	flags = flags | 0x00800000; // set SDL_FULLSCREEN flag
        	HEAP32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)]=flags
        }
        Browser.updateResizeListeners();
      },setWindowedCanvasSize:function () {
        var canvas = Module['canvas'];
        canvas.width = this.windowedWidth;
        canvas.height = this.windowedHeight;
        // check if SDL is available       
        if (typeof SDL != "undefined") {
        	var flags = HEAPU32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)];
        	flags = flags & ~0x00800000; // clear SDL_FULLSCREEN flag
        	HEAP32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)]=flags
        }
        Browser.updateResizeListeners();
      }};
FS.staticInit();__ATINIT__.unshift({ func: function() { if (!Module["noFSInit"] && !FS.init.initialized) FS.init() } });__ATMAIN__.push({ func: function() { FS.ignorePermissions = false } });__ATEXIT__.push({ func: function() { FS.quit() } });Module["FS_createFolder"] = FS.createFolder;Module["FS_createPath"] = FS.createPath;Module["FS_createDataFile"] = FS.createDataFile;Module["FS_createPreloadedFile"] = FS.createPreloadedFile;Module["FS_createLazyFile"] = FS.createLazyFile;Module["FS_createLink"] = FS.createLink;Module["FS_createDevice"] = FS.createDevice;
___errno_state = Runtime.staticAlloc(4); HEAP32[((___errno_state)>>2)]=0;
__ATINIT__.unshift({ func: function() { TTY.init() } });__ATEXIT__.push({ func: function() { TTY.shutdown() } });TTY.utf8 = new Runtime.UTF8Processor();
if (ENVIRONMENT_IS_NODE) { var fs = require("fs"); NODEFS.staticInit(); }
__ATINIT__.push({ func: function() { SOCKFS.root = FS.mount(SOCKFS, {}, null); } });
_fputc.ret = allocate([0], "i8", ALLOC_STATIC);
___buildEnvironment(ENV);
_fgetc.ret = allocate([0], "i8", ALLOC_STATIC);
Module["requestFullScreen"] = function Module_requestFullScreen(lockPointer, resizeCanvas) { Browser.requestFullScreen(lockPointer, resizeCanvas) };
  Module["requestAnimationFrame"] = function Module_requestAnimationFrame(func) { Browser.requestAnimationFrame(func) };
  Module["setCanvasSize"] = function Module_setCanvasSize(width, height, noUpdates) { Browser.setCanvasSize(width, height, noUpdates) };
  Module["pauseMainLoop"] = function Module_pauseMainLoop() { Browser.mainLoop.pause() };
  Module["resumeMainLoop"] = function Module_resumeMainLoop() { Browser.mainLoop.resume() };
  Module["getUserMedia"] = function Module_getUserMedia() { Browser.getUserMedia() }
STACK_BASE = STACKTOP = Runtime.alignMemory(STATICTOP);
staticSealed = true; // seal the static portion of memory
STACK_MAX = STACK_BASE + 5242880;
DYNAMIC_BASE = DYNAMICTOP = Runtime.alignMemory(STACK_MAX);
assert(DYNAMIC_BASE < TOTAL_MEMORY, "TOTAL_MEMORY not big enough for stack");
 var ctlz_i8 = allocate([8,7,6,6,5,5,5,5,4,4,4,4,4,4,4,4,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_DYNAMIC);
 var cttz_i8 = allocate([8,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,7,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0], "i8", ALLOC_DYNAMIC);
var Math_min = Math.min;
function invoke_iiii(index,a1,a2,a3) {
  try {
    return Module["dynCall_iiii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_vi(index,a1) {
  try {
    Module["dynCall_vi"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_vii(index,a1,a2) {
  try {
    Module["dynCall_vii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_ii(index,a1) {
  try {
    return Module["dynCall_ii"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_v(index) {
  try {
    Module["dynCall_v"](index);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_iii(index,a1,a2) {
  try {
    return Module["dynCall_iii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function asmPrintInt(x, y) {
  Module.print('int ' + x + ',' + y);// + ' ' + new Error().stack);
}
function asmPrintFloat(x, y) {
  Module.print('float ' + x + ',' + y);// + ' ' + new Error().stack);
}
// EMSCRIPTEN_START_ASM
var asm = (function(global, env, buffer) {
  'use asm';
  var HEAP8 = new global.Int8Array(buffer);
  var HEAP16 = new global.Int16Array(buffer);
  var HEAP32 = new global.Int32Array(buffer);
  var HEAPU8 = new global.Uint8Array(buffer);
  var HEAPU16 = new global.Uint16Array(buffer);
  var HEAPU32 = new global.Uint32Array(buffer);
  var HEAPF32 = new global.Float32Array(buffer);
  var HEAPF64 = new global.Float64Array(buffer);
  var STACKTOP=env.STACKTOP|0;
  var STACK_MAX=env.STACK_MAX|0;
  var tempDoublePtr=env.tempDoublePtr|0;
  var ABORT=env.ABORT|0;
  var cttz_i8=env.cttz_i8|0;
  var ctlz_i8=env.ctlz_i8|0;
  var _stdin=env._stdin|0;
  var ___progname=env.___progname|0;
  var _stderr=env._stderr|0;
  var _stdout=env._stdout|0;
  var NaN=+env.NaN;
  var Infinity=+env.Infinity;
  var __THREW__ = 0;
  var threwValue = 0;
  var setjmpId = 0;
  var undef = 0;
  var tempInt = 0, tempBigInt = 0, tempBigIntP = 0, tempBigIntS = 0, tempBigIntR = 0.0, tempBigIntI = 0, tempBigIntD = 0, tempValue = 0, tempDouble = 0.0;
  var tempRet0 = 0;
  var tempRet1 = 0;
  var tempRet2 = 0;
  var tempRet3 = 0;
  var tempRet4 = 0;
  var tempRet5 = 0;
  var tempRet6 = 0;
  var tempRet7 = 0;
  var tempRet8 = 0;
  var tempRet9 = 0;
  var Math_floor=global.Math.floor;
  var Math_abs=global.Math.abs;
  var Math_sqrt=global.Math.sqrt;
  var Math_pow=global.Math.pow;
  var Math_cos=global.Math.cos;
  var Math_sin=global.Math.sin;
  var Math_tan=global.Math.tan;
  var Math_acos=global.Math.acos;
  var Math_asin=global.Math.asin;
  var Math_atan=global.Math.atan;
  var Math_atan2=global.Math.atan2;
  var Math_exp=global.Math.exp;
  var Math_log=global.Math.log;
  var Math_ceil=global.Math.ceil;
  var Math_imul=global.Math.imul;
  var abort=env.abort;
  var assert=env.assert;
  var asmPrintInt=env.asmPrintInt;
  var asmPrintFloat=env.asmPrintFloat;
  var Math_min=env.min;
  var invoke_iiii=env.invoke_iiii;
  var invoke_vi=env.invoke_vi;
  var invoke_vii=env.invoke_vii;
  var invoke_ii=env.invoke_ii;
  var invoke_v=env.invoke_v;
  var invoke_iii=env.invoke_iii;
  var _llvm_lifetime_end=env._llvm_lifetime_end;
  var _lseek=env._lseek;
  var _rand=env._rand;
  var __scanString=env.__scanString;
  var _fclose=env._fclose;
  var _kill=env._kill;
  var _fflush=env._fflush;
  var _strtol=env._strtol;
  var _fputc=env._fputc;
  var _fwrite=env._fwrite;
  var _send=env._send;
  var _isspace=env._isspace;
  var _dup2=env._dup2;
  var _read=env._read;
  var _execl=env._execl;
  var _strstr=env._strstr;
  var _fsync=env._fsync;
  var _signal=env._signal;
  var _remove=env._remove;
  var _opendir=env._opendir;
  var _fmod=env._fmod;
  var _strcmp=env._strcmp;
  var _memchr=env._memchr;
  var _strncmp=env._strncmp;
  var _snprintf=env._snprintf;
  var _fgetc=env._fgetc;
  var _readdir=env._readdir;
  var __getFloat=env.__getFloat;
  var _fgets=env._fgets;
  var _close=env._close;
  var _mktemp=env._mktemp;
  var _poll=env._poll;
  var ___setErrNo=env.___setErrNo;
  var _access=env._access;
  var _ftell=env._ftell;
  var _abs=env._abs;
  var _exit=env._exit;
  var _sprintf=env._sprintf;
  var _strrchr=env._strrchr;
  var _fcntl=env._fcntl;
  var _copysign=env._copysign;
  var _recv=env._recv;
  var _wait=env._wait;
  var _cos=env._cos;
  var _islower=env._islower;
  var __exit=env.__exit;
  var _isupper=env._isupper;
  var _llvm_va_end=env._llvm_va_end;
  var _setlocale=env._setlocale;
  var _printf=env._printf;
  var _pread=env._pread;
  var _fopen=env._fopen;
  var _open=env._open;
  var _sysconf=env._sysconf;
  var _isalnum=env._isalnum;
  var _qsort=env._qsort;
  var _system=env._system;
  var _isalpha=env._isalpha;
  var _rmdir=env._rmdir;
  var _strdup=env._strdup;
  var _fork=env._fork;
  var __formatString=env.__formatString;
  var _getenv=env._getenv;
  var _atoi=env._atoi;
  var _vfprintf=env._vfprintf;
  var _llvm_pow_f64=env._llvm_pow_f64;
  var _sbrk=env._sbrk;
  var ___errno_location=env.___errno_location;
  var _strerror=env._strerror;
  var _llvm_lifetime_start=env._llvm_lifetime_start;
  var __parseInt=env.__parseInt;
  var _ungetc=env._ungetc;
  var _vsnprintf=env._vsnprintf;
  var _sscanf=env._sscanf;
  var _creat=env._creat;
  var _fread=env._fread;
  var _abort=env._abort;
  var _fprintf=env._fprintf;
  var _isdigit=env._isdigit;
  var ___buildEnvironment=env.___buildEnvironment;
  var _feof=env._feof;
  var _ispunct=env._ispunct;
  var _fabs=env._fabs;
  var __reallyNegative=env.__reallyNegative;
  var _fseek=env._fseek;
  var _write=env._write;
  var _mkstemp=env._mkstemp;
  var _sin=env._sin;
  var _strchr=env._strchr;
  var _stat=env._stat;
  var _time=env._time;
  var _closedir=env._closedir;
  var _unlink=env._unlink;
  var _pwrite=env._pwrite;
  var _strerror_r=env._strerror_r;
  var _pipe=env._pipe;
  var _exp=env._exp;
  var _readdir_r=env._readdir_r;
  var tempFloat = 0.0;
// EMSCRIPTEN_START_FUNCS
function _malloc($bytes) {
 $bytes = $bytes | 0;
 var $8 = 0, $9 = 0, $10 = 0, $11 = 0, $17 = 0, $18 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $35 = 0, $40 = 0, $45 = 0, $56 = 0, $59 = 0, $62 = 0, $64 = 0, $65 = 0, $67 = 0, $69 = 0, $71 = 0, $73 = 0, $75 = 0, $77 = 0, $79 = 0, $82 = 0, $83 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $100 = 0, $105 = 0, $106 = 0, $109 = 0, $111 = 0, $117 = 0, $120 = 0, $121 = 0, $122 = 0, $124 = 0, $125 = 0, $126 = 0, $132 = 0, $133 = 0, $_pre_phi = 0, $F4_0 = 0, $145 = 0, $150 = 0, $152 = 0, $153 = 0, $155 = 0, $157 = 0, $159 = 0, $161 = 0, $163 = 0, $165 = 0, $167 = 0, $172 = 0, $rsize_0_i = 0, $v_0_i = 0, $t_0_i = 0, $179 = 0, $183 = 0, $185 = 0, $189 = 0, $190 = 0, $192 = 0, $193 = 0, $196 = 0, $197 = 0, $201 = 0, $203 = 0, $207 = 0, $211 = 0, $215 = 0, $220 = 0, $221 = 0, $224 = 0, $225 = 0, $RP_0_i = 0, $R_0_i = 0, $227 = 0, $228 = 0, $231 = 0, $232 = 0, $R_1_i = 0, $242 = 0, $244 = 0, $258 = 0, $274 = 0, $286 = 0, $300 = 0, $304 = 0, $315 = 0, $318 = 0, $319 = 0, $320 = 0, $322 = 0, $323 = 0, $324 = 0, $330 = 0, $331 = 0, $_pre_phi_i = 0, $F1_0_i = 0, $342 = 0, $348 = 0, $349 = 0, $350 = 0, $353 = 0, $354 = 0, $361 = 0, $362 = 0, $365 = 0, $367 = 0, $370 = 0, $375 = 0, $idx_0_i = 0, $383 = 0, $391 = 0, $rst_0_i = 0, $sizebits_0_i = 0, $t_0_i116 = 0, $rsize_0_i117 = 0, $v_0_i118 = 0, $396 = 0, $397 = 0, $rsize_1_i = 0, $v_1_i = 0, $403 = 0, $406 = 0, $rst_1_i = 0, $t_1_i = 0, $rsize_2_i = 0, $v_2_i = 0, $414 = 0, $417 = 0, $422 = 0, $424 = 0, $425 = 0, $427 = 0, $429 = 0, $431 = 0, $433 = 0, $435 = 0, $437 = 0, $439 = 0, $t_2_ph_i = 0, $v_330_i = 0, $rsize_329_i = 0, $t_228_i = 0, $449 = 0, $450 = 0, $_rsize_3_i = 0, $t_2_v_3_i = 0, $452 = 0, $455 = 0, $v_3_lcssa_i = 0, $rsize_3_lcssa_i = 0, $463 = 0, $464 = 0, $467 = 0, $468 = 0, $472 = 0, $474 = 0, $478 = 0, $482 = 0, $486 = 0, $491 = 0, $492 = 0, $495 = 0, $496 = 0, $RP_0_i119 = 0, $R_0_i120 = 0, $498 = 0, $499 = 0, $502 = 0, $503 = 0, $R_1_i122 = 0, $513 = 0, $515 = 0, $529 = 0, $545 = 0, $557 = 0, $571 = 0, $575 = 0, $586 = 0, $589 = 0, $591 = 0, $592 = 0, $593 = 0, $599 = 0, $600 = 0, $_pre_phi_i128 = 0, $F5_0_i = 0, $612 = 0, $613 = 0, $620 = 0, $621 = 0, $624 = 0, $626 = 0, $629 = 0, $634 = 0, $I7_0_i = 0, $641 = 0, $648 = 0, $649 = 0, $668 = 0, $T_0_i = 0, $K12_0_i = 0, $677 = 0, $678 = 0, $694 = 0, $695 = 0, $697 = 0, $711 = 0, $nb_0 = 0, $714 = 0, $717 = 0, $718 = 0, $721 = 0, $736 = 0, $743 = 0, $746 = 0, $747 = 0, $748 = 0, $762 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $779 = 0, $782 = 0, $783 = 0, $791 = 0, $794 = 0, $sp_0_i_i = 0, $796 = 0, $797 = 0, $800 = 0, $806 = 0, $809 = 0, $812 = 0, $813 = 0, $814 = 0, $ssize_0_i = 0, $824 = 0, $825 = 0, $829 = 0, $835 = 0, $836 = 0, $840 = 0, $843 = 0, $847 = 0, $ssize_1_i = 0, $br_0_i = 0, $tsize_0_i = 0, $tbase_0_i = 0, $849 = 0, $856 = 0, $860 = 0, $ssize_2_i = 0, $tsize_0303639_i = 0, $tsize_1_i = 0, $876 = 0, $877 = 0, $881 = 0, $883 = 0, $_tbase_1_i = 0, $tbase_245_i = 0, $tsize_244_i = 0, $886 = 0, $890 = 0, $893 = 0, $i_02_i_i = 0, $899 = 0, $901 = 0, $908 = 0, $914 = 0, $917 = 0, $sp_067_i = 0, $925 = 0, $926 = 0, $927 = 0, $932 = 0, $939 = 0, $944 = 0, $946 = 0, $947 = 0, $949 = 0, $955 = 0, $958 = 0, $968 = 0, $sp_160_i = 0, $970 = 0, $975 = 0, $982 = 0, $986 = 0, $993 = 0, $996 = 0, $1003 = 0, $1004 = 0, $1005 = 0, $_sum_i21_i = 0, $1009 = 0, $1010 = 0, $1011 = 0, $1019 = 0, $1028 = 0, $_sum2_i23_i = 0, $1037 = 0, $1041 = 0, $1042 = 0, $1047 = 0, $1050 = 0, $1053 = 0, $1076 = 0, $_pre_phi57_i_i = 0, $1081 = 0, $1084 = 0, $1087 = 0, $1092 = 0, $1097 = 0, $1101 = 0, $_sum67_i_i = 0, $1107 = 0, $1108 = 0, $1112 = 0, $1113 = 0, $RP_0_i_i = 0, $R_0_i_i = 0, $1115 = 0, $1116 = 0, $1119 = 0, $1120 = 0, $R_1_i_i = 0, $1132 = 0, $1134 = 0, $1148 = 0, $_sum3233_i_i = 0, $1165 = 0, $1178 = 0, $qsize_0_i_i = 0, $oldfirst_0_i_i = 0, $1194 = 0, $1202 = 0, $1205 = 0, $1207 = 0, $1208 = 0, $1209 = 0, $1215 = 0, $1216 = 0, $_pre_phi_i25_i = 0, $F4_0_i_i = 0, $1228 = 0, $1229 = 0, $1236 = 0, $1237 = 0, $1240 = 0, $1242 = 0, $1245 = 0, $1250 = 0, $I7_0_i_i = 0, $1257 = 0, $1264 = 0, $1265 = 0, $1284 = 0, $T_0_i27_i = 0, $K8_0_i_i = 0, $1293 = 0, $1294 = 0, $1310 = 0, $1311 = 0, $1313 = 0, $1327 = 0, $sp_0_i_i_i = 0, $1330 = 0, $1334 = 0, $1335 = 0, $1341 = 0, $1348 = 0, $1349 = 0, $1353 = 0, $1354 = 0, $1358 = 0, $1364 = 0, $1367 = 0, $1377 = 0, $1380 = 0, $1381 = 0, $1389 = 0, $1392 = 0, $1398 = 0, $1401 = 0, $1403 = 0, $1404 = 0, $1405 = 0, $1411 = 0, $1412 = 0, $_pre_phi_i_i = 0, $F_0_i_i = 0, $1422 = 0, $1423 = 0, $1430 = 0, $1431 = 0, $1434 = 0, $1436 = 0, $1439 = 0, $1444 = 0, $I1_0_i_i = 0, $1451 = 0, $1455 = 0, $1456 = 0, $1471 = 0, $T_0_i_i = 0, $K2_0_i_i = 0, $1480 = 0, $1481 = 0, $1494 = 0, $1495 = 0, $1497 = 0, $1507 = 0, $1510 = 0, $1511 = 0, $1512 = 0, $mem_0 = 0, label = 0;
 do {
  if ($bytes >>> 0 < 245 >>> 0) {
   if ($bytes >>> 0 < 11 >>> 0) {
    $8 = 16;
   } else {
    $8 = $bytes + 11 & -8;
   }
   $9 = $8 >>> 3;
   $10 = HEAP32[22676] | 0;
   $11 = $10 >>> ($9 >>> 0);
   if (($11 & 3 | 0) != 0) {
    $17 = ($11 & 1 ^ 1) + $9 | 0;
    $18 = $17 << 1;
    $20 = 90744 + ($18 << 2) | 0;
    $21 = 90744 + ($18 + 2 << 2) | 0;
    $22 = HEAP32[$21 >> 2] | 0;
    $23 = $22 + 8 | 0;
    $24 = HEAP32[$23 >> 2] | 0;
    do {
     if (($20 | 0) == ($24 | 0)) {
      HEAP32[22676] = $10 & ~(1 << $17);
     } else {
      if ($24 >>> 0 < (HEAP32[22680] | 0) >>> 0) {
       _abort();
       return 0;
      }
      $35 = $24 + 12 | 0;
      if ((HEAP32[$35 >> 2] | 0) == ($22 | 0)) {
       HEAP32[$35 >> 2] = $20;
       HEAP32[$21 >> 2] = $24;
       break;
      } else {
       _abort();
       return 0;
      }
     }
    } while (0);
    $40 = $17 << 3;
    HEAP32[$22 + 4 >> 2] = $40 | 3;
    $45 = $22 + ($40 | 4) | 0;
    HEAP32[$45 >> 2] = HEAP32[$45 >> 2] | 1;
    $mem_0 = $23;
    return $mem_0 | 0;
   }
   if ($8 >>> 0 <= (HEAP32[22678] | 0) >>> 0) {
    $nb_0 = $8;
    break;
   }
   if (($11 | 0) != 0) {
    $56 = 2 << $9;
    $59 = $11 << $9 & ($56 | -$56);
    $62 = ($59 & -$59) - 1 | 0;
    $64 = $62 >>> 12 & 16;
    $65 = $62 >>> ($64 >>> 0);
    $67 = $65 >>> 5 & 8;
    $69 = $65 >>> ($67 >>> 0);
    $71 = $69 >>> 2 & 4;
    $73 = $69 >>> ($71 >>> 0);
    $75 = $73 >>> 1 & 2;
    $77 = $73 >>> ($75 >>> 0);
    $79 = $77 >>> 1 & 1;
    $82 = ($67 | $64 | $71 | $75 | $79) + ($77 >>> ($79 >>> 0)) | 0;
    $83 = $82 << 1;
    $85 = 90744 + ($83 << 2) | 0;
    $86 = 90744 + ($83 + 2 << 2) | 0;
    $87 = HEAP32[$86 >> 2] | 0;
    $88 = $87 + 8 | 0;
    $89 = HEAP32[$88 >> 2] | 0;
    do {
     if (($85 | 0) == ($89 | 0)) {
      HEAP32[22676] = $10 & ~(1 << $82);
     } else {
      if ($89 >>> 0 < (HEAP32[22680] | 0) >>> 0) {
       _abort();
       return 0;
      }
      $100 = $89 + 12 | 0;
      if ((HEAP32[$100 >> 2] | 0) == ($87 | 0)) {
       HEAP32[$100 >> 2] = $85;
       HEAP32[$86 >> 2] = $89;
       break;
      } else {
       _abort();
       return 0;
      }
     }
    } while (0);
    $105 = $82 << 3;
    $106 = $105 - $8 | 0;
    HEAP32[$87 + 4 >> 2] = $8 | 3;
    $109 = $87;
    $111 = $109 + $8 | 0;
    HEAP32[$109 + ($8 | 4) >> 2] = $106 | 1;
    HEAP32[$109 + $105 >> 2] = $106;
    $117 = HEAP32[22678] | 0;
    if (($117 | 0) != 0) {
     $120 = HEAP32[22681] | 0;
     $121 = $117 >>> 3;
     $122 = $121 << 1;
     $124 = 90744 + ($122 << 2) | 0;
     $125 = HEAP32[22676] | 0;
     $126 = 1 << $121;
     do {
      if (($125 & $126 | 0) == 0) {
       HEAP32[22676] = $125 | $126;
       $F4_0 = $124;
       $_pre_phi = 90744 + ($122 + 2 << 2) | 0;
      } else {
       $132 = 90744 + ($122 + 2 << 2) | 0;
       $133 = HEAP32[$132 >> 2] | 0;
       if ($133 >>> 0 >= (HEAP32[22680] | 0) >>> 0) {
        $F4_0 = $133;
        $_pre_phi = $132;
        break;
       }
       _abort();
       return 0;
      }
     } while (0);
     HEAP32[$_pre_phi >> 2] = $120;
     HEAP32[$F4_0 + 12 >> 2] = $120;
     HEAP32[$120 + 8 >> 2] = $F4_0;
     HEAP32[$120 + 12 >> 2] = $124;
    }
    HEAP32[22678] = $106;
    HEAP32[22681] = $111;
    $mem_0 = $88;
    return $mem_0 | 0;
   }
   $145 = HEAP32[22677] | 0;
   if (($145 | 0) == 0) {
    $nb_0 = $8;
    break;
   }
   $150 = ($145 & -$145) - 1 | 0;
   $152 = $150 >>> 12 & 16;
   $153 = $150 >>> ($152 >>> 0);
   $155 = $153 >>> 5 & 8;
   $157 = $153 >>> ($155 >>> 0);
   $159 = $157 >>> 2 & 4;
   $161 = $157 >>> ($159 >>> 0);
   $163 = $161 >>> 1 & 2;
   $165 = $161 >>> ($163 >>> 0);
   $167 = $165 >>> 1 & 1;
   $172 = HEAP32[91008 + (($155 | $152 | $159 | $163 | $167) + ($165 >>> ($167 >>> 0)) << 2) >> 2] | 0;
   $t_0_i = $172;
   $v_0_i = $172;
   $rsize_0_i = (HEAP32[$172 + 4 >> 2] & -8) - $8 | 0;
   while (1) {
    $179 = HEAP32[$t_0_i + 16 >> 2] | 0;
    if (($179 | 0) == 0) {
     $183 = HEAP32[$t_0_i + 20 >> 2] | 0;
     if (($183 | 0) == 0) {
      break;
     } else {
      $185 = $183;
     }
    } else {
     $185 = $179;
    }
    $189 = (HEAP32[$185 + 4 >> 2] & -8) - $8 | 0;
    $190 = $189 >>> 0 < $rsize_0_i >>> 0;
    $t_0_i = $185;
    $v_0_i = $190 ? $185 : $v_0_i;
    $rsize_0_i = $190 ? $189 : $rsize_0_i;
   }
   $192 = $v_0_i;
   $193 = HEAP32[22680] | 0;
   if ($192 >>> 0 < $193 >>> 0) {
    _abort();
    return 0;
   }
   $196 = $192 + $8 | 0;
   $197 = $196;
   if ($192 >>> 0 >= $196 >>> 0) {
    _abort();
    return 0;
   }
   $201 = HEAP32[$v_0_i + 24 >> 2] | 0;
   $203 = HEAP32[$v_0_i + 12 >> 2] | 0;
   do {
    if (($203 | 0) == ($v_0_i | 0)) {
     $220 = $v_0_i + 20 | 0;
     $221 = HEAP32[$220 >> 2] | 0;
     if (($221 | 0) == 0) {
      $224 = $v_0_i + 16 | 0;
      $225 = HEAP32[$224 >> 2] | 0;
      if (($225 | 0) == 0) {
       $R_1_i = 0;
       break;
      } else {
       $R_0_i = $225;
       $RP_0_i = $224;
      }
     } else {
      $R_0_i = $221;
      $RP_0_i = $220;
     }
     while (1) {
      $227 = $R_0_i + 20 | 0;
      $228 = HEAP32[$227 >> 2] | 0;
      if (($228 | 0) != 0) {
       $R_0_i = $228;
       $RP_0_i = $227;
       continue;
      }
      $231 = $R_0_i + 16 | 0;
      $232 = HEAP32[$231 >> 2] | 0;
      if (($232 | 0) == 0) {
       break;
      } else {
       $R_0_i = $232;
       $RP_0_i = $231;
      }
     }
     if ($RP_0_i >>> 0 < $193 >>> 0) {
      _abort();
      return 0;
     } else {
      HEAP32[$RP_0_i >> 2] = 0;
      $R_1_i = $R_0_i;
      break;
     }
    } else {
     $207 = HEAP32[$v_0_i + 8 >> 2] | 0;
     if ($207 >>> 0 < $193 >>> 0) {
      _abort();
      return 0;
     }
     $211 = $207 + 12 | 0;
     if ((HEAP32[$211 >> 2] | 0) != ($v_0_i | 0)) {
      _abort();
      return 0;
     }
     $215 = $203 + 8 | 0;
     if ((HEAP32[$215 >> 2] | 0) == ($v_0_i | 0)) {
      HEAP32[$211 >> 2] = $203;
      HEAP32[$215 >> 2] = $207;
      $R_1_i = $203;
      break;
     } else {
      _abort();
      return 0;
     }
    }
   } while (0);
   L78 : do {
    if (($201 | 0) != 0) {
     $242 = $v_0_i + 28 | 0;
     $244 = 91008 + (HEAP32[$242 >> 2] << 2) | 0;
     do {
      if (($v_0_i | 0) == (HEAP32[$244 >> 2] | 0)) {
       HEAP32[$244 >> 2] = $R_1_i;
       if (($R_1_i | 0) != 0) {
        break;
       }
       HEAP32[22677] = HEAP32[22677] & ~(1 << HEAP32[$242 >> 2]);
       break L78;
      } else {
       if ($201 >>> 0 < (HEAP32[22680] | 0) >>> 0) {
        _abort();
        return 0;
       }
       $258 = $201 + 16 | 0;
       if ((HEAP32[$258 >> 2] | 0) == ($v_0_i | 0)) {
        HEAP32[$258 >> 2] = $R_1_i;
       } else {
        HEAP32[$201 + 20 >> 2] = $R_1_i;
       }
       if (($R_1_i | 0) == 0) {
        break L78;
       }
      }
     } while (0);
     if ($R_1_i >>> 0 < (HEAP32[22680] | 0) >>> 0) {
      _abort();
      return 0;
     }
     HEAP32[$R_1_i + 24 >> 2] = $201;
     $274 = HEAP32[$v_0_i + 16 >> 2] | 0;
     do {
      if (($274 | 0) != 0) {
       if ($274 >>> 0 < (HEAP32[22680] | 0) >>> 0) {
        _abort();
        return 0;
       } else {
        HEAP32[$R_1_i + 16 >> 2] = $274;
        HEAP32[$274 + 24 >> 2] = $R_1_i;
        break;
       }
      }
     } while (0);
     $286 = HEAP32[$v_0_i + 20 >> 2] | 0;
     if (($286 | 0) == 0) {
      break;
     }
     if ($286 >>> 0 < (HEAP32[22680] | 0) >>> 0) {
      _abort();
      return 0;
     } else {
      HEAP32[$R_1_i + 20 >> 2] = $286;
      HEAP32[$286 + 24 >> 2] = $R_1_i;
      break;
     }
    }
   } while (0);
   if ($rsize_0_i >>> 0 < 16 >>> 0) {
    $300 = $rsize_0_i + $8 | 0;
    HEAP32[$v_0_i + 4 >> 2] = $300 | 3;
    $304 = $192 + ($300 + 4) | 0;
    HEAP32[$304 >> 2] = HEAP32[$304 >> 2] | 1;
   } else {
    HEAP32[$v_0_i + 4 >> 2] = $8 | 3;
    HEAP32[$192 + ($8 | 4) >> 2] = $rsize_0_i | 1;
    HEAP32[$192 + ($rsize_0_i + $8) >> 2] = $rsize_0_i;
    $315 = HEAP32[22678] | 0;
    if (($315 | 0) != 0) {
     $318 = HEAP32[22681] | 0;
     $319 = $315 >>> 3;
     $320 = $319 << 1;
     $322 = 90744 + ($320 << 2) | 0;
     $323 = HEAP32[22676] | 0;
     $324 = 1 << $319;
     do {
      if (($323 & $324 | 0) == 0) {
       HEAP32[22676] = $323 | $324;
       $F1_0_i = $322;
       $_pre_phi_i = 90744 + ($320 + 2 << 2) | 0;
      } else {
       $330 = 90744 + ($320 + 2 << 2) | 0;
       $331 = HEAP32[$330 >> 2] | 0;
       if ($331 >>> 0 >= (HEAP32[22680] | 0) >>> 0) {
        $F1_0_i = $331;
        $_pre_phi_i = $330;
        break;
       }
       _abort();
       return 0;
      }
     } while (0);
     HEAP32[$_pre_phi_i >> 2] = $318;
     HEAP32[$F1_0_i + 12 >> 2] = $318;
     HEAP32[$318 + 8 >> 2] = $F1_0_i;
     HEAP32[$318 + 12 >> 2] = $322;
    }
    HEAP32[22678] = $rsize_0_i;
    HEAP32[22681] = $197;
   }
   $342 = $v_0_i + 8 | 0;
   if (($342 | 0) == 0) {
    $nb_0 = $8;
    break;
   } else {
    $mem_0 = $342;
   }
   return $mem_0 | 0;
  } else {
   if ($bytes >>> 0 > 4294967231 >>> 0) {
    $nb_0 = -1;
    break;
   }
   $348 = $bytes + 11 | 0;
   $349 = $348 & -8;
   $350 = HEAP32[22677] | 0;
   if (($350 | 0) == 0) {
    $nb_0 = $349;
    break;
   }
   $353 = -$349 | 0;
   $354 = $348 >>> 8;
   do {
    if (($354 | 0) == 0) {
     $idx_0_i = 0;
    } else {
     if ($349 >>> 0 > 16777215 >>> 0) {
      $idx_0_i = 31;
      break;
     }
     $361 = ($354 + 1048320 | 0) >>> 16 & 8;
     $362 = $354 << $361;
     $365 = ($362 + 520192 | 0) >>> 16 & 4;
     $367 = $362 << $365;
     $370 = ($367 + 245760 | 0) >>> 16 & 2;
     $375 = 14 - ($365 | $361 | $370) + ($367 << $370 >>> 15) | 0;
     $idx_0_i = $349 >>> (($375 + 7 | 0) >>> 0) & 1 | $375 << 1;
    }
   } while (0);
   $383 = HEAP32[91008 + ($idx_0_i << 2) >> 2] | 0;
   L126 : do {
    if (($383 | 0) == 0) {
     $v_2_i = 0;
     $rsize_2_i = $353;
     $t_1_i = 0;
    } else {
     if (($idx_0_i | 0) == 31) {
      $391 = 0;
     } else {
      $391 = 25 - ($idx_0_i >>> 1) | 0;
     }
     $v_0_i118 = 0;
     $rsize_0_i117 = $353;
     $t_0_i116 = $383;
     $sizebits_0_i = $349 << $391;
     $rst_0_i = 0;
     while (1) {
      $396 = HEAP32[$t_0_i116 + 4 >> 2] & -8;
      $397 = $396 - $349 | 0;
      if ($397 >>> 0 < $rsize_0_i117 >>> 0) {
       if (($396 | 0) == ($349 | 0)) {
        $v_2_i = $t_0_i116;
        $rsize_2_i = $397;
        $t_1_i = $t_0_i116;
        break L126;
       } else {
        $v_1_i = $t_0_i116;
        $rsize_1_i = $397;
       }
      } else {
       $v_1_i = $v_0_i118;
       $rsize_1_i = $rsize_0_i117;
      }
      $403 = HEAP32[$t_0_i116 + 20 >> 2] | 0;
      $406 = HEAP32[$t_0_i116 + 16 + ($sizebits_0_i >>> 31 << 2) >> 2] | 0;
      $rst_1_i = ($403 | 0) == 0 | ($403 | 0) == ($406 | 0) ? $rst_0_i : $403;
      if (($406 | 0) == 0) {
       $v_2_i = $v_1_i;
       $rsize_2_i = $rsize_1_i;
       $t_1_i = $rst_1_i;
       break;
      } else {
       $v_0_i118 = $v_1_i;
       $rsize_0_i117 = $rsize_1_i;
       $t_0_i116 = $406;
       $sizebits_0_i = $sizebits_0_i << 1;
       $rst_0_i = $rst_1_i;
      }
     }
    }
   } while (0);
   if (($t_1_i | 0) == 0 & ($v_2_i | 0) == 0) {
    $414 = 2 << $idx_0_i;
    $417 = $350 & ($414 | -$414);
    if (($417 | 0) == 0) {
     $nb_0 = $349;
     break;
    }
    $422 = ($417 & -$417) - 1 | 0;
    $424 = $422 >>> 12 & 16;
    $425 = $422 >>> ($424 >>> 0);
    $427 = $425 >>> 5 & 8;
    $429 = $425 >>> ($427 >>> 0);
    $431 = $429 >>> 2 & 4;
    $433 = $429 >>> ($431 >>> 0);
    $435 = $433 >>> 1 & 2;
    $437 = $433 >>> ($435 >>> 0);
    $439 = $437 >>> 1 & 1;
    $t_2_ph_i = HEAP32[91008 + (($427 | $424 | $431 | $435 | $439) + ($437 >>> ($439 >>> 0)) << 2) >> 2] | 0;
   } else {
    $t_2_ph_i = $t_1_i;
   }
   if (($t_2_ph_i | 0) == 0) {
    $rsize_3_lcssa_i = $rsize_2_i;
    $v_3_lcssa_i = $v_2_i;
   } else {
    $t_228_i = $t_2_ph_i;
    $rsize_329_i = $rsize_2_i;
    $v_330_i = $v_2_i;
    while (1) {
     $449 = (HEAP32[$t_228_i + 4 >> 2] & -8) - $349 | 0;
     $450 = $449 >>> 0 < $rsize_329_i >>> 0;
     $_rsize_3_i = $450 ? $449 : $rsize_329_i;
     $t_2_v_3_i = $450 ? $t_228_i : $v_330_i;
     $452 = HEAP32[$t_228_i + 16 >> 2] | 0;
     if (($452 | 0) != 0) {
      $t_228_i = $452;
      $rsize_329_i = $_rsize_3_i;
      $v_330_i = $t_2_v_3_i;
      continue;
     }
     $455 = HEAP32[$t_228_i + 20 >> 2] | 0;
     if (($455 | 0) == 0) {
      $rsize_3_lcssa_i = $_rsize_3_i;
      $v_3_lcssa_i = $t_2_v_3_i;
      break;
     } else {
      $t_228_i = $455;
      $rsize_329_i = $_rsize_3_i;
      $v_330_i = $t_2_v_3_i;
     }
    }
   }
   if (($v_3_lcssa_i | 0) == 0) {
    $nb_0 = $349;
    break;
   }
   if ($rsize_3_lcssa_i >>> 0 >= ((HEAP32[22678] | 0) - $349 | 0) >>> 0) {
    $nb_0 = $349;
    break;
   }
   $463 = $v_3_lcssa_i;
   $464 = HEAP32[22680] | 0;
   if ($463 >>> 0 < $464 >>> 0) {
    _abort();
    return 0;
   }
   $467 = $463 + $349 | 0;
   $468 = $467;
   if ($463 >>> 0 >= $467 >>> 0) {
    _abort();
    return 0;
   }
   $472 = HEAP32[$v_3_lcssa_i + 24 >> 2] | 0;
   $474 = HEAP32[$v_3_lcssa_i + 12 >> 2] | 0;
   do {
    if (($474 | 0) == ($v_3_lcssa_i | 0)) {
     $491 = $v_3_lcssa_i + 20 | 0;
     $492 = HEAP32[$491 >> 2] | 0;
     if (($492 | 0) == 0) {
      $495 = $v_3_lcssa_i + 16 | 0;
      $496 = HEAP32[$495 >> 2] | 0;
      if (($496 | 0) == 0) {
       $R_1_i122 = 0;
       break;
      } else {
       $R_0_i120 = $496;
       $RP_0_i119 = $495;
      }
     } else {
      $R_0_i120 = $492;
      $RP_0_i119 = $491;
     }
     while (1) {
      $498 = $R_0_i120 + 20 | 0;
      $499 = HEAP32[$498 >> 2] | 0;
      if (($499 | 0) != 0) {
       $R_0_i120 = $499;
       $RP_0_i119 = $498;
       continue;
      }
      $502 = $R_0_i120 + 16 | 0;
      $503 = HEAP32[$502 >> 2] | 0;
      if (($503 | 0) == 0) {
       break;
      } else {
       $R_0_i120 = $503;
       $RP_0_i119 = $502;
      }
     }
     if ($RP_0_i119 >>> 0 < $464 >>> 0) {
      _abort();
      return 0;
     } else {
      HEAP32[$RP_0_i119 >> 2] = 0;
      $R_1_i122 = $R_0_i120;
      break;
     }
    } else {
     $478 = HEAP32[$v_3_lcssa_i + 8 >> 2] | 0;
     if ($478 >>> 0 < $464 >>> 0) {
      _abort();
      return 0;
     }
     $482 = $478 + 12 | 0;
     if ((HEAP32[$482 >> 2] | 0) != ($v_3_lcssa_i | 0)) {
      _abort();
      return 0;
     }
     $486 = $474 + 8 | 0;
     if ((HEAP32[$486 >> 2] | 0) == ($v_3_lcssa_i | 0)) {
      HEAP32[$482 >> 2] = $474;
      HEAP32[$486 >> 2] = $478;
      $R_1_i122 = $474;
      break;
     } else {
      _abort();
      return 0;
     }
    }
   } while (0);
   L176 : do {
    if (($472 | 0) != 0) {
     $513 = $v_3_lcssa_i + 28 | 0;
     $515 = 91008 + (HEAP32[$513 >> 2] << 2) | 0;
     do {
      if (($v_3_lcssa_i | 0) == (HEAP32[$515 >> 2] | 0)) {
       HEAP32[$515 >> 2] = $R_1_i122;
       if (($R_1_i122 | 0) != 0) {
        break;
       }
       HEAP32[22677] = HEAP32[22677] & ~(1 << HEAP32[$513 >> 2]);
       break L176;
      } else {
       if ($472 >>> 0 < (HEAP32[22680] | 0) >>> 0) {
        _abort();
        return 0;
       }
       $529 = $472 + 16 | 0;
       if ((HEAP32[$529 >> 2] | 0) == ($v_3_lcssa_i | 0)) {
        HEAP32[$529 >> 2] = $R_1_i122;
       } else {
        HEAP32[$472 + 20 >> 2] = $R_1_i122;
       }
       if (($R_1_i122 | 0) == 0) {
        break L176;
       }
      }
     } while (0);
     if ($R_1_i122 >>> 0 < (HEAP32[22680] | 0) >>> 0) {
      _abort();
      return 0;
     }
     HEAP32[$R_1_i122 + 24 >> 2] = $472;
     $545 = HEAP32[$v_3_lcssa_i + 16 >> 2] | 0;
     do {
      if (($545 | 0) != 0) {
       if ($545 >>> 0 < (HEAP32[22680] | 0) >>> 0) {
        _abort();
        return 0;
       } else {
        HEAP32[$R_1_i122 + 16 >> 2] = $545;
        HEAP32[$545 + 24 >> 2] = $R_1_i122;
        break;
       }
      }
     } while (0);
     $557 = HEAP32[$v_3_lcssa_i + 20 >> 2] | 0;
     if (($557 | 0) == 0) {
      break;
     }
     if ($557 >>> 0 < (HEAP32[22680] | 0) >>> 0) {
      _abort();
      return 0;
     } else {
      HEAP32[$R_1_i122 + 20 >> 2] = $557;
      HEAP32[$557 + 24 >> 2] = $R_1_i122;
      break;
     }
    }
   } while (0);
   do {
    if ($rsize_3_lcssa_i >>> 0 < 16 >>> 0) {
     $571 = $rsize_3_lcssa_i + $349 | 0;
     HEAP32[$v_3_lcssa_i + 4 >> 2] = $571 | 3;
     $575 = $463 + ($571 + 4) | 0;
     HEAP32[$575 >> 2] = HEAP32[$575 >> 2] | 1;
    } else {
     HEAP32[$v_3_lcssa_i + 4 >> 2] = $349 | 3;
     HEAP32[$463 + ($349 | 4) >> 2] = $rsize_3_lcssa_i | 1;
     HEAP32[$463 + ($rsize_3_lcssa_i + $349) >> 2] = $rsize_3_lcssa_i;
     $586 = $rsize_3_lcssa_i >>> 3;
     if ($rsize_3_lcssa_i >>> 0 < 256 >>> 0) {
      $589 = $586 << 1;
      $591 = 90744 + ($589 << 2) | 0;
      $592 = HEAP32[22676] | 0;
      $593 = 1 << $586;
      do {
       if (($592 & $593 | 0) == 0) {
        HEAP32[22676] = $592 | $593;
        $F5_0_i = $591;
        $_pre_phi_i128 = 90744 + ($589 + 2 << 2) | 0;
       } else {
        $599 = 90744 + ($589 + 2 << 2) | 0;
        $600 = HEAP32[$599 >> 2] | 0;
        if ($600 >>> 0 >= (HEAP32[22680] | 0) >>> 0) {
         $F5_0_i = $600;
         $_pre_phi_i128 = $599;
         break;
        }
        _abort();
        return 0;
       }
      } while (0);
      HEAP32[$_pre_phi_i128 >> 2] = $468;
      HEAP32[$F5_0_i + 12 >> 2] = $468;
      HEAP32[$463 + ($349 + 8) >> 2] = $F5_0_i;
      HEAP32[$463 + ($349 + 12) >> 2] = $591;
      break;
     }
     $612 = $467;
     $613 = $rsize_3_lcssa_i >>> 8;
     do {
      if (($613 | 0) == 0) {
       $I7_0_i = 0;
      } else {
       if ($rsize_3_lcssa_i >>> 0 > 16777215 >>> 0) {
        $I7_0_i = 31;
        break;
       }
       $620 = ($613 + 1048320 | 0) >>> 16 & 8;
       $621 = $613 << $620;
       $624 = ($621 + 520192 | 0) >>> 16 & 4;
       $626 = $621 << $624;
       $629 = ($626 + 245760 | 0) >>> 16 & 2;
       $634 = 14 - ($624 | $620 | $629) + ($626 << $629 >>> 15) | 0;
       $I7_0_i = $rsize_3_lcssa_i >>> (($634 + 7 | 0) >>> 0) & 1 | $634 << 1;
      }
     } while (0);
     $641 = 91008 + ($I7_0_i << 2) | 0;
     HEAP32[$463 + ($349 + 28) >> 2] = $I7_0_i;
     HEAP32[$463 + ($349 + 20) >> 2] = 0;
     HEAP32[$463 + ($349 + 16) >> 2] = 0;
     $648 = HEAP32[22677] | 0;
     $649 = 1 << $I7_0_i;
     if (($648 & $649 | 0) == 0) {
      HEAP32[22677] = $648 | $649;
      HEAP32[$641 >> 2] = $612;
      HEAP32[$463 + ($349 + 24) >> 2] = $641;
      HEAP32[$463 + ($349 + 12) >> 2] = $612;
      HEAP32[$463 + ($349 + 8) >> 2] = $612;
      break;
     }
     if (($I7_0_i | 0) == 31) {
      $668 = 0;
     } else {
      $668 = 25 - ($I7_0_i >>> 1) | 0;
     }
     $K12_0_i = $rsize_3_lcssa_i << $668;
     $T_0_i = HEAP32[$641 >> 2] | 0;
     while (1) {
      if ((HEAP32[$T_0_i + 4 >> 2] & -8 | 0) == ($rsize_3_lcssa_i | 0)) {
       break;
      }
      $677 = $T_0_i + 16 + ($K12_0_i >>> 31 << 2) | 0;
      $678 = HEAP32[$677 >> 2] | 0;
      if (($678 | 0) == 0) {
       label = 151;
       break;
      } else {
       $K12_0_i = $K12_0_i << 1;
       $T_0_i = $678;
      }
     }
     if ((label | 0) == 151) {
      if ($677 >>> 0 < (HEAP32[22680] | 0) >>> 0) {
       _abort();
       return 0;
      } else {
       HEAP32[$677 >> 2] = $612;
       HEAP32[$463 + ($349 + 24) >> 2] = $T_0_i;
       HEAP32[$463 + ($349 + 12) >> 2] = $612;
       HEAP32[$463 + ($349 + 8) >> 2] = $612;
       break;
      }
     }
     $694 = $T_0_i + 8 | 0;
     $695 = HEAP32[$694 >> 2] | 0;
     $697 = HEAP32[22680] | 0;
     if ($T_0_i >>> 0 < $697 >>> 0) {
      _abort();
      return 0;
     }
     if ($695 >>> 0 < $697 >>> 0) {
      _abort();
      return 0;
     } else {
      HEAP32[$695 + 12 >> 2] = $612;
      HEAP32[$694 >> 2] = $612;
      HEAP32[$463 + ($349 + 8) >> 2] = $695;
      HEAP32[$463 + ($349 + 12) >> 2] = $T_0_i;
      HEAP32[$463 + ($349 + 24) >> 2] = 0;
      break;
     }
    }
   } while (0);
   $711 = $v_3_lcssa_i + 8 | 0;
   if (($711 | 0) == 0) {
    $nb_0 = $349;
    break;
   } else {
    $mem_0 = $711;
   }
   return $mem_0 | 0;
  }
 } while (0);
 $714 = HEAP32[22678] | 0;
 if ($nb_0 >>> 0 <= $714 >>> 0) {
  $717 = $714 - $nb_0 | 0;
  $718 = HEAP32[22681] | 0;
  if ($717 >>> 0 > 15 >>> 0) {
   $721 = $718;
   HEAP32[22681] = $721 + $nb_0;
   HEAP32[22678] = $717;
   HEAP32[$721 + ($nb_0 + 4) >> 2] = $717 | 1;
   HEAP32[$721 + $714 >> 2] = $717;
   HEAP32[$718 + 4 >> 2] = $nb_0 | 3;
  } else {
   HEAP32[22678] = 0;
   HEAP32[22681] = 0;
   HEAP32[$718 + 4 >> 2] = $714 | 3;
   $736 = $718 + ($714 + 4) | 0;
   HEAP32[$736 >> 2] = HEAP32[$736 >> 2] | 1;
  }
  $mem_0 = $718 + 8 | 0;
  return $mem_0 | 0;
 }
 $743 = HEAP32[22679] | 0;
 if ($nb_0 >>> 0 < $743 >>> 0) {
  $746 = $743 - $nb_0 | 0;
  HEAP32[22679] = $746;
  $747 = HEAP32[22682] | 0;
  $748 = $747;
  HEAP32[22682] = $748 + $nb_0;
  HEAP32[$748 + ($nb_0 + 4) >> 2] = $746 | 1;
  HEAP32[$747 + 4 >> 2] = $nb_0 | 3;
  $mem_0 = $747 + 8 | 0;
  return $mem_0 | 0;
 }
 do {
  if ((HEAP32[19566] | 0) == 0) {
   $762 = _sysconf(30) | 0;
   if (($762 - 1 & $762 | 0) == 0) {
    HEAP32[19568] = $762;
    HEAP32[19567] = $762;
    HEAP32[19569] = -1;
    HEAP32[19570] = -1;
    HEAP32[19571] = 0;
    HEAP32[22787] = 0;
    HEAP32[19566] = (_time(0) | 0) & -16 ^ 1431655768;
    break;
   } else {
    _abort();
    return 0;
   }
  }
 } while (0);
 $771 = $nb_0 + 48 | 0;
 $772 = HEAP32[19568] | 0;
 $773 = $nb_0 + 47 | 0;
 $774 = $772 + $773 | 0;
 $775 = -$772 | 0;
 $776 = $774 & $775;
 if ($776 >>> 0 <= $nb_0 >>> 0) {
  $mem_0 = 0;
  return $mem_0 | 0;
 }
 $779 = HEAP32[22786] | 0;
 do {
  if (($779 | 0) != 0) {
   $782 = HEAP32[22784] | 0;
   $783 = $782 + $776 | 0;
   if ($783 >>> 0 <= $782 >>> 0 | $783 >>> 0 > $779 >>> 0) {
    $mem_0 = 0;
   } else {
    break;
   }
   return $mem_0 | 0;
  }
 } while (0);
 L268 : do {
  if ((HEAP32[22787] & 4 | 0) == 0) {
   $791 = HEAP32[22682] | 0;
   L270 : do {
    if (($791 | 0) == 0) {
     label = 181;
    } else {
     $794 = $791;
     $sp_0_i_i = 91152;
     while (1) {
      $796 = $sp_0_i_i | 0;
      $797 = HEAP32[$796 >> 2] | 0;
      if ($797 >>> 0 <= $794 >>> 0) {
       $800 = $sp_0_i_i + 4 | 0;
       if (($797 + (HEAP32[$800 >> 2] | 0) | 0) >>> 0 > $794 >>> 0) {
        break;
       }
      }
      $806 = HEAP32[$sp_0_i_i + 8 >> 2] | 0;
      if (($806 | 0) == 0) {
       label = 181;
       break L270;
      } else {
       $sp_0_i_i = $806;
      }
     }
     if (($sp_0_i_i | 0) == 0) {
      label = 181;
      break;
     }
     $840 = $774 - (HEAP32[22679] | 0) & $775;
     if ($840 >>> 0 >= 2147483647 >>> 0) {
      $tsize_0303639_i = 0;
      break;
     }
     $843 = _sbrk($840 | 0) | 0;
     $847 = ($843 | 0) == ((HEAP32[$796 >> 2] | 0) + (HEAP32[$800 >> 2] | 0) | 0);
     $tbase_0_i = $847 ? $843 : -1;
     $tsize_0_i = $847 ? $840 : 0;
     $br_0_i = $843;
     $ssize_1_i = $840;
     label = 190;
    }
   } while (0);
   do {
    if ((label | 0) == 181) {
     $809 = _sbrk(0) | 0;
     if (($809 | 0) == -1) {
      $tsize_0303639_i = 0;
      break;
     }
     $812 = $809;
     $813 = HEAP32[19567] | 0;
     $814 = $813 - 1 | 0;
     if (($814 & $812 | 0) == 0) {
      $ssize_0_i = $776;
     } else {
      $ssize_0_i = $776 - $812 + ($814 + $812 & -$813) | 0;
     }
     $824 = HEAP32[22784] | 0;
     $825 = $824 + $ssize_0_i | 0;
     if (!($ssize_0_i >>> 0 > $nb_0 >>> 0 & $ssize_0_i >>> 0 < 2147483647 >>> 0)) {
      $tsize_0303639_i = 0;
      break;
     }
     $829 = HEAP32[22786] | 0;
     if (($829 | 0) != 0) {
      if ($825 >>> 0 <= $824 >>> 0 | $825 >>> 0 > $829 >>> 0) {
       $tsize_0303639_i = 0;
       break;
      }
     }
     $835 = _sbrk($ssize_0_i | 0) | 0;
     $836 = ($835 | 0) == ($809 | 0);
     $tbase_0_i = $836 ? $809 : -1;
     $tsize_0_i = $836 ? $ssize_0_i : 0;
     $br_0_i = $835;
     $ssize_1_i = $ssize_0_i;
     label = 190;
    }
   } while (0);
   L290 : do {
    if ((label | 0) == 190) {
     $849 = -$ssize_1_i | 0;
     if (($tbase_0_i | 0) != -1) {
      $tsize_244_i = $tsize_0_i;
      $tbase_245_i = $tbase_0_i;
      label = 201;
      break L268;
     }
     do {
      if (($br_0_i | 0) != -1 & $ssize_1_i >>> 0 < 2147483647 >>> 0 & $ssize_1_i >>> 0 < $771 >>> 0) {
       $856 = HEAP32[19568] | 0;
       $860 = $773 - $ssize_1_i + $856 & -$856;
       if ($860 >>> 0 >= 2147483647 >>> 0) {
        $ssize_2_i = $ssize_1_i;
        break;
       }
       if ((_sbrk($860 | 0) | 0) == -1) {
        _sbrk($849 | 0) | 0;
        $tsize_0303639_i = $tsize_0_i;
        break L290;
       } else {
        $ssize_2_i = $860 + $ssize_1_i | 0;
        break;
       }
      } else {
       $ssize_2_i = $ssize_1_i;
      }
     } while (0);
     if (($br_0_i | 0) == -1) {
      $tsize_0303639_i = $tsize_0_i;
     } else {
      $tsize_244_i = $ssize_2_i;
      $tbase_245_i = $br_0_i;
      label = 201;
      break L268;
     }
    }
   } while (0);
   HEAP32[22787] = HEAP32[22787] | 4;
   $tsize_1_i = $tsize_0303639_i;
   label = 198;
  } else {
   $tsize_1_i = 0;
   label = 198;
  }
 } while (0);
 do {
  if ((label | 0) == 198) {
   if ($776 >>> 0 >= 2147483647 >>> 0) {
    break;
   }
   $876 = _sbrk($776 | 0) | 0;
   $877 = _sbrk(0) | 0;
   if (!(($877 | 0) != -1 & ($876 | 0) != -1 & $876 >>> 0 < $877 >>> 0)) {
    break;
   }
   $881 = $877 - $876 | 0;
   $883 = $881 >>> 0 > ($nb_0 + 40 | 0) >>> 0;
   $_tbase_1_i = $883 ? $876 : -1;
   if (($_tbase_1_i | 0) != -1) {
    $tsize_244_i = $883 ? $881 : $tsize_1_i;
    $tbase_245_i = $_tbase_1_i;
    label = 201;
   }
  }
 } while (0);
 do {
  if ((label | 0) == 201) {
   $886 = (HEAP32[22784] | 0) + $tsize_244_i | 0;
   HEAP32[22784] = $886;
   if ($886 >>> 0 > (HEAP32[22785] | 0) >>> 0) {
    HEAP32[22785] = $886;
   }
   $890 = HEAP32[22682] | 0;
   L310 : do {
    if (($890 | 0) == 0) {
     $893 = HEAP32[22680] | 0;
     if (($893 | 0) == 0 | $tbase_245_i >>> 0 < $893 >>> 0) {
      HEAP32[22680] = $tbase_245_i;
     }
     HEAP32[22788] = $tbase_245_i;
     HEAP32[22789] = $tsize_244_i;
     HEAP32[22791] = 0;
     HEAP32[22685] = HEAP32[19566];
     HEAP32[22684] = -1;
     $i_02_i_i = 0;
     do {
      $899 = $i_02_i_i << 1;
      $901 = 90744 + ($899 << 2) | 0;
      HEAP32[90744 + ($899 + 3 << 2) >> 2] = $901;
      HEAP32[90744 + ($899 + 2 << 2) >> 2] = $901;
      $i_02_i_i = $i_02_i_i + 1 | 0;
     } while ($i_02_i_i >>> 0 < 32 >>> 0);
     $908 = $tbase_245_i + 8 | 0;
     if (($908 & 7 | 0) == 0) {
      $914 = 0;
     } else {
      $914 = -$908 & 7;
     }
     $917 = $tsize_244_i - 40 - $914 | 0;
     HEAP32[22682] = $tbase_245_i + $914;
     HEAP32[22679] = $917;
     HEAP32[$tbase_245_i + ($914 + 4) >> 2] = $917 | 1;
     HEAP32[$tbase_245_i + ($tsize_244_i - 36) >> 2] = 40;
     HEAP32[22683] = HEAP32[19570];
    } else {
     $sp_067_i = 91152;
     while (1) {
      $925 = HEAP32[$sp_067_i >> 2] | 0;
      $926 = $sp_067_i + 4 | 0;
      $927 = HEAP32[$926 >> 2] | 0;
      if (($tbase_245_i | 0) == ($925 + $927 | 0)) {
       label = 213;
       break;
      }
      $932 = HEAP32[$sp_067_i + 8 >> 2] | 0;
      if (($932 | 0) == 0) {
       break;
      } else {
       $sp_067_i = $932;
      }
     }
     do {
      if ((label | 0) == 213) {
       if ((HEAP32[$sp_067_i + 12 >> 2] & 8 | 0) != 0) {
        break;
       }
       $939 = $890;
       if (!($939 >>> 0 >= $925 >>> 0 & $939 >>> 0 < $tbase_245_i >>> 0)) {
        break;
       }
       HEAP32[$926 >> 2] = $927 + $tsize_244_i;
       $944 = HEAP32[22682] | 0;
       $946 = (HEAP32[22679] | 0) + $tsize_244_i | 0;
       $947 = $944;
       $949 = $944 + 8 | 0;
       if (($949 & 7 | 0) == 0) {
        $955 = 0;
       } else {
        $955 = -$949 & 7;
       }
       $958 = $946 - $955 | 0;
       HEAP32[22682] = $947 + $955;
       HEAP32[22679] = $958;
       HEAP32[$947 + ($955 + 4) >> 2] = $958 | 1;
       HEAP32[$947 + ($946 + 4) >> 2] = 40;
       HEAP32[22683] = HEAP32[19570];
       break L310;
      }
     } while (0);
     if ($tbase_245_i >>> 0 < (HEAP32[22680] | 0) >>> 0) {
      HEAP32[22680] = $tbase_245_i;
     }
     $968 = $tbase_245_i + $tsize_244_i | 0;
     $sp_160_i = 91152;
     while (1) {
      $970 = $sp_160_i | 0;
      if ((HEAP32[$970 >> 2] | 0) == ($968 | 0)) {
       label = 223;
       break;
      }
      $975 = HEAP32[$sp_160_i + 8 >> 2] | 0;
      if (($975 | 0) == 0) {
       break;
      } else {
       $sp_160_i = $975;
      }
     }
     do {
      if ((label | 0) == 223) {
       if ((HEAP32[$sp_160_i + 12 >> 2] & 8 | 0) != 0) {
        break;
       }
       HEAP32[$970 >> 2] = $tbase_245_i;
       $982 = $sp_160_i + 4 | 0;
       HEAP32[$982 >> 2] = (HEAP32[$982 >> 2] | 0) + $tsize_244_i;
       $986 = $tbase_245_i + 8 | 0;
       if (($986 & 7 | 0) == 0) {
        $993 = 0;
       } else {
        $993 = -$986 & 7;
       }
       $996 = $tbase_245_i + ($tsize_244_i + 8) | 0;
       if (($996 & 7 | 0) == 0) {
        $1003 = 0;
       } else {
        $1003 = -$996 & 7;
       }
       $1004 = $tbase_245_i + ($1003 + $tsize_244_i) | 0;
       $1005 = $1004;
       $_sum_i21_i = $993 + $nb_0 | 0;
       $1009 = $tbase_245_i + $_sum_i21_i | 0;
       $1010 = $1009;
       $1011 = $1004 - ($tbase_245_i + $993) - $nb_0 | 0;
       HEAP32[$tbase_245_i + ($993 + 4) >> 2] = $nb_0 | 3;
       do {
        if (($1005 | 0) == (HEAP32[22682] | 0)) {
         $1019 = (HEAP32[22679] | 0) + $1011 | 0;
         HEAP32[22679] = $1019;
         HEAP32[22682] = $1010;
         HEAP32[$tbase_245_i + ($_sum_i21_i + 4) >> 2] = $1019 | 1;
        } else {
         if (($1005 | 0) == (HEAP32[22681] | 0)) {
          $1028 = (HEAP32[22678] | 0) + $1011 | 0;
          HEAP32[22678] = $1028;
          HEAP32[22681] = $1010;
          HEAP32[$tbase_245_i + ($_sum_i21_i + 4) >> 2] = $1028 | 1;
          HEAP32[$tbase_245_i + ($1028 + $_sum_i21_i) >> 2] = $1028;
          break;
         }
         $_sum2_i23_i = $tsize_244_i + 4 | 0;
         $1037 = HEAP32[$tbase_245_i + ($_sum2_i23_i + $1003) >> 2] | 0;
         if (($1037 & 3 | 0) == 1) {
          $1041 = $1037 & -8;
          $1042 = $1037 >>> 3;
          L355 : do {
           if ($1037 >>> 0 < 256 >>> 0) {
            $1047 = HEAP32[$tbase_245_i + (($1003 | 8) + $tsize_244_i) >> 2] | 0;
            $1050 = HEAP32[$tbase_245_i + ($tsize_244_i + 12 + $1003) >> 2] | 0;
            $1053 = 90744 + ($1042 << 1 << 2) | 0;
            do {
             if (($1047 | 0) != ($1053 | 0)) {
              if ($1047 >>> 0 < (HEAP32[22680] | 0) >>> 0) {
               _abort();
               return 0;
              }
              if ((HEAP32[$1047 + 12 >> 2] | 0) == ($1005 | 0)) {
               break;
              }
              _abort();
              return 0;
             }
            } while (0);
            if (($1050 | 0) == ($1047 | 0)) {
             HEAP32[22676] = HEAP32[22676] & ~(1 << $1042);
             break;
            }
            do {
             if (($1050 | 0) == ($1053 | 0)) {
              $_pre_phi57_i_i = $1050 + 8 | 0;
             } else {
              if ($1050 >>> 0 < (HEAP32[22680] | 0) >>> 0) {
               _abort();
               return 0;
              }
              $1076 = $1050 + 8 | 0;
              if ((HEAP32[$1076 >> 2] | 0) == ($1005 | 0)) {
               $_pre_phi57_i_i = $1076;
               break;
              }
              _abort();
              return 0;
             }
            } while (0);
            HEAP32[$1047 + 12 >> 2] = $1050;
            HEAP32[$_pre_phi57_i_i >> 2] = $1047;
           } else {
            $1081 = $1004;
            $1084 = HEAP32[$tbase_245_i + (($1003 | 24) + $tsize_244_i) >> 2] | 0;
            $1087 = HEAP32[$tbase_245_i + ($tsize_244_i + 12 + $1003) >> 2] | 0;
            do {
             if (($1087 | 0) == ($1081 | 0)) {
              $_sum67_i_i = $1003 | 16;
              $1107 = $tbase_245_i + ($_sum2_i23_i + $_sum67_i_i) | 0;
              $1108 = HEAP32[$1107 >> 2] | 0;
              if (($1108 | 0) == 0) {
               $1112 = $tbase_245_i + ($_sum67_i_i + $tsize_244_i) | 0;
               $1113 = HEAP32[$1112 >> 2] | 0;
               if (($1113 | 0) == 0) {
                $R_1_i_i = 0;
                break;
               } else {
                $R_0_i_i = $1113;
                $RP_0_i_i = $1112;
               }
              } else {
               $R_0_i_i = $1108;
               $RP_0_i_i = $1107;
              }
              while (1) {
               $1115 = $R_0_i_i + 20 | 0;
               $1116 = HEAP32[$1115 >> 2] | 0;
               if (($1116 | 0) != 0) {
                $R_0_i_i = $1116;
                $RP_0_i_i = $1115;
                continue;
               }
               $1119 = $R_0_i_i + 16 | 0;
               $1120 = HEAP32[$1119 >> 2] | 0;
               if (($1120 | 0) == 0) {
                break;
               } else {
                $R_0_i_i = $1120;
                $RP_0_i_i = $1119;
               }
              }
              if ($RP_0_i_i >>> 0 < (HEAP32[22680] | 0) >>> 0) {
               _abort();
               return 0;
              } else {
               HEAP32[$RP_0_i_i >> 2] = 0;
               $R_1_i_i = $R_0_i_i;
               break;
              }
             } else {
              $1092 = HEAP32[$tbase_245_i + (($1003 | 8) + $tsize_244_i) >> 2] | 0;
              if ($1092 >>> 0 < (HEAP32[22680] | 0) >>> 0) {
               _abort();
               return 0;
              }
              $1097 = $1092 + 12 | 0;
              if ((HEAP32[$1097 >> 2] | 0) != ($1081 | 0)) {
               _abort();
               return 0;
              }
              $1101 = $1087 + 8 | 0;
              if ((HEAP32[$1101 >> 2] | 0) == ($1081 | 0)) {
               HEAP32[$1097 >> 2] = $1087;
               HEAP32[$1101 >> 2] = $1092;
               $R_1_i_i = $1087;
               break;
              } else {
               _abort();
               return 0;
              }
             }
            } while (0);
            if (($1084 | 0) == 0) {
             break;
            }
            $1132 = $tbase_245_i + ($tsize_244_i + 28 + $1003) | 0;
            $1134 = 91008 + (HEAP32[$1132 >> 2] << 2) | 0;
            do {
             if (($1081 | 0) == (HEAP32[$1134 >> 2] | 0)) {
              HEAP32[$1134 >> 2] = $R_1_i_i;
              if (($R_1_i_i | 0) != 0) {
               break;
              }
              HEAP32[22677] = HEAP32[22677] & ~(1 << HEAP32[$1132 >> 2]);
              break L355;
             } else {
              if ($1084 >>> 0 < (HEAP32[22680] | 0) >>> 0) {
               _abort();
               return 0;
              }
              $1148 = $1084 + 16 | 0;
              if ((HEAP32[$1148 >> 2] | 0) == ($1081 | 0)) {
               HEAP32[$1148 >> 2] = $R_1_i_i;
              } else {
               HEAP32[$1084 + 20 >> 2] = $R_1_i_i;
              }
              if (($R_1_i_i | 0) == 0) {
               break L355;
              }
             }
            } while (0);
            if ($R_1_i_i >>> 0 < (HEAP32[22680] | 0) >>> 0) {
             _abort();
             return 0;
            }
            HEAP32[$R_1_i_i + 24 >> 2] = $1084;
            $_sum3233_i_i = $1003 | 16;
            $1165 = HEAP32[$tbase_245_i + ($_sum3233_i_i + $tsize_244_i) >> 2] | 0;
            do {
             if (($1165 | 0) != 0) {
              if ($1165 >>> 0 < (HEAP32[22680] | 0) >>> 0) {
               _abort();
               return 0;
              } else {
               HEAP32[$R_1_i_i + 16 >> 2] = $1165;
               HEAP32[$1165 + 24 >> 2] = $R_1_i_i;
               break;
              }
             }
            } while (0);
            $1178 = HEAP32[$tbase_245_i + ($_sum2_i23_i + $_sum3233_i_i) >> 2] | 0;
            if (($1178 | 0) == 0) {
             break;
            }
            if ($1178 >>> 0 < (HEAP32[22680] | 0) >>> 0) {
             _abort();
             return 0;
            } else {
             HEAP32[$R_1_i_i + 20 >> 2] = $1178;
             HEAP32[$1178 + 24 >> 2] = $R_1_i_i;
             break;
            }
           }
          } while (0);
          $oldfirst_0_i_i = $tbase_245_i + (($1041 | $1003) + $tsize_244_i) | 0;
          $qsize_0_i_i = $1041 + $1011 | 0;
         } else {
          $oldfirst_0_i_i = $1005;
          $qsize_0_i_i = $1011;
         }
         $1194 = $oldfirst_0_i_i + 4 | 0;
         HEAP32[$1194 >> 2] = HEAP32[$1194 >> 2] & -2;
         HEAP32[$tbase_245_i + ($_sum_i21_i + 4) >> 2] = $qsize_0_i_i | 1;
         HEAP32[$tbase_245_i + ($qsize_0_i_i + $_sum_i21_i) >> 2] = $qsize_0_i_i;
         $1202 = $qsize_0_i_i >>> 3;
         if ($qsize_0_i_i >>> 0 < 256 >>> 0) {
          $1205 = $1202 << 1;
          $1207 = 90744 + ($1205 << 2) | 0;
          $1208 = HEAP32[22676] | 0;
          $1209 = 1 << $1202;
          do {
           if (($1208 & $1209 | 0) == 0) {
            HEAP32[22676] = $1208 | $1209;
            $F4_0_i_i = $1207;
            $_pre_phi_i25_i = 90744 + ($1205 + 2 << 2) | 0;
           } else {
            $1215 = 90744 + ($1205 + 2 << 2) | 0;
            $1216 = HEAP32[$1215 >> 2] | 0;
            if ($1216 >>> 0 >= (HEAP32[22680] | 0) >>> 0) {
             $F4_0_i_i = $1216;
             $_pre_phi_i25_i = $1215;
             break;
            }
            _abort();
            return 0;
           }
          } while (0);
          HEAP32[$_pre_phi_i25_i >> 2] = $1010;
          HEAP32[$F4_0_i_i + 12 >> 2] = $1010;
          HEAP32[$tbase_245_i + ($_sum_i21_i + 8) >> 2] = $F4_0_i_i;
          HEAP32[$tbase_245_i + ($_sum_i21_i + 12) >> 2] = $1207;
          break;
         }
         $1228 = $1009;
         $1229 = $qsize_0_i_i >>> 8;
         do {
          if (($1229 | 0) == 0) {
           $I7_0_i_i = 0;
          } else {
           if ($qsize_0_i_i >>> 0 > 16777215 >>> 0) {
            $I7_0_i_i = 31;
            break;
           }
           $1236 = ($1229 + 1048320 | 0) >>> 16 & 8;
           $1237 = $1229 << $1236;
           $1240 = ($1237 + 520192 | 0) >>> 16 & 4;
           $1242 = $1237 << $1240;
           $1245 = ($1242 + 245760 | 0) >>> 16 & 2;
           $1250 = 14 - ($1240 | $1236 | $1245) + ($1242 << $1245 >>> 15) | 0;
           $I7_0_i_i = $qsize_0_i_i >>> (($1250 + 7 | 0) >>> 0) & 1 | $1250 << 1;
          }
         } while (0);
         $1257 = 91008 + ($I7_0_i_i << 2) | 0;
         HEAP32[$tbase_245_i + ($_sum_i21_i + 28) >> 2] = $I7_0_i_i;
         HEAP32[$tbase_245_i + ($_sum_i21_i + 20) >> 2] = 0;
         HEAP32[$tbase_245_i + ($_sum_i21_i + 16) >> 2] = 0;
         $1264 = HEAP32[22677] | 0;
         $1265 = 1 << $I7_0_i_i;
         if (($1264 & $1265 | 0) == 0) {
          HEAP32[22677] = $1264 | $1265;
          HEAP32[$1257 >> 2] = $1228;
          HEAP32[$tbase_245_i + ($_sum_i21_i + 24) >> 2] = $1257;
          HEAP32[$tbase_245_i + ($_sum_i21_i + 12) >> 2] = $1228;
          HEAP32[$tbase_245_i + ($_sum_i21_i + 8) >> 2] = $1228;
          break;
         }
         if (($I7_0_i_i | 0) == 31) {
          $1284 = 0;
         } else {
          $1284 = 25 - ($I7_0_i_i >>> 1) | 0;
         }
         $K8_0_i_i = $qsize_0_i_i << $1284;
         $T_0_i27_i = HEAP32[$1257 >> 2] | 0;
         while (1) {
          if ((HEAP32[$T_0_i27_i + 4 >> 2] & -8 | 0) == ($qsize_0_i_i | 0)) {
           break;
          }
          $1293 = $T_0_i27_i + 16 + ($K8_0_i_i >>> 31 << 2) | 0;
          $1294 = HEAP32[$1293 >> 2] | 0;
          if (($1294 | 0) == 0) {
           label = 296;
           break;
          } else {
           $K8_0_i_i = $K8_0_i_i << 1;
           $T_0_i27_i = $1294;
          }
         }
         if ((label | 0) == 296) {
          if ($1293 >>> 0 < (HEAP32[22680] | 0) >>> 0) {
           _abort();
           return 0;
          } else {
           HEAP32[$1293 >> 2] = $1228;
           HEAP32[$tbase_245_i + ($_sum_i21_i + 24) >> 2] = $T_0_i27_i;
           HEAP32[$tbase_245_i + ($_sum_i21_i + 12) >> 2] = $1228;
           HEAP32[$tbase_245_i + ($_sum_i21_i + 8) >> 2] = $1228;
           break;
          }
         }
         $1310 = $T_0_i27_i + 8 | 0;
         $1311 = HEAP32[$1310 >> 2] | 0;
         $1313 = HEAP32[22680] | 0;
         if ($T_0_i27_i >>> 0 < $1313 >>> 0) {
          _abort();
          return 0;
         }
         if ($1311 >>> 0 < $1313 >>> 0) {
          _abort();
          return 0;
         } else {
          HEAP32[$1311 + 12 >> 2] = $1228;
          HEAP32[$1310 >> 2] = $1228;
          HEAP32[$tbase_245_i + ($_sum_i21_i + 8) >> 2] = $1311;
          HEAP32[$tbase_245_i + ($_sum_i21_i + 12) >> 2] = $T_0_i27_i;
          HEAP32[$tbase_245_i + ($_sum_i21_i + 24) >> 2] = 0;
          break;
         }
        }
       } while (0);
       $mem_0 = $tbase_245_i + ($993 | 8) | 0;
       return $mem_0 | 0;
      }
     } while (0);
     $1327 = $890;
     $sp_0_i_i_i = 91152;
     while (1) {
      $1330 = HEAP32[$sp_0_i_i_i >> 2] | 0;
      if ($1330 >>> 0 <= $1327 >>> 0) {
       $1334 = HEAP32[$sp_0_i_i_i + 4 >> 2] | 0;
       $1335 = $1330 + $1334 | 0;
       if ($1335 >>> 0 > $1327 >>> 0) {
        break;
       }
      }
      $sp_0_i_i_i = HEAP32[$sp_0_i_i_i + 8 >> 2] | 0;
     }
     $1341 = $1330 + ($1334 - 39) | 0;
     if (($1341 & 7 | 0) == 0) {
      $1348 = 0;
     } else {
      $1348 = -$1341 & 7;
     }
     $1349 = $1330 + ($1334 - 47 + $1348) | 0;
     $1353 = $1349 >>> 0 < ($890 + 16 | 0) >>> 0 ? $1327 : $1349;
     $1354 = $1353 + 8 | 0;
     $1358 = $tbase_245_i + 8 | 0;
     if (($1358 & 7 | 0) == 0) {
      $1364 = 0;
     } else {
      $1364 = -$1358 & 7;
     }
     $1367 = $tsize_244_i - 40 - $1364 | 0;
     HEAP32[22682] = $tbase_245_i + $1364;
     HEAP32[22679] = $1367;
     HEAP32[$tbase_245_i + ($1364 + 4) >> 2] = $1367 | 1;
     HEAP32[$tbase_245_i + ($tsize_244_i - 36) >> 2] = 40;
     HEAP32[22683] = HEAP32[19570];
     HEAP32[$1353 + 4 >> 2] = 27;
     HEAP32[$1354 >> 2] = HEAP32[22788];
     HEAP32[$1354 + 4 >> 2] = HEAP32[22789];
     HEAP32[$1354 + 8 >> 2] = HEAP32[22790];
     HEAP32[$1354 + 12 >> 2] = HEAP32[22791];
     HEAP32[22788] = $tbase_245_i;
     HEAP32[22789] = $tsize_244_i;
     HEAP32[22791] = 0;
     HEAP32[22790] = $1354;
     $1377 = $1353 + 28 | 0;
     HEAP32[$1377 >> 2] = 7;
     if (($1353 + 32 | 0) >>> 0 < $1335 >>> 0) {
      $1380 = $1377;
      while (1) {
       $1381 = $1380 + 4 | 0;
       HEAP32[$1381 >> 2] = 7;
       if (($1380 + 8 | 0) >>> 0 < $1335 >>> 0) {
        $1380 = $1381;
       } else {
        break;
       }
      }
     }
     if (($1353 | 0) == ($1327 | 0)) {
      break;
     }
     $1389 = $1353 - $890 | 0;
     $1392 = $1327 + ($1389 + 4) | 0;
     HEAP32[$1392 >> 2] = HEAP32[$1392 >> 2] & -2;
     HEAP32[$890 + 4 >> 2] = $1389 | 1;
     HEAP32[$1327 + $1389 >> 2] = $1389;
     $1398 = $1389 >>> 3;
     if ($1389 >>> 0 < 256 >>> 0) {
      $1401 = $1398 << 1;
      $1403 = 90744 + ($1401 << 2) | 0;
      $1404 = HEAP32[22676] | 0;
      $1405 = 1 << $1398;
      do {
       if (($1404 & $1405 | 0) == 0) {
        HEAP32[22676] = $1404 | $1405;
        $F_0_i_i = $1403;
        $_pre_phi_i_i = 90744 + ($1401 + 2 << 2) | 0;
       } else {
        $1411 = 90744 + ($1401 + 2 << 2) | 0;
        $1412 = HEAP32[$1411 >> 2] | 0;
        if ($1412 >>> 0 >= (HEAP32[22680] | 0) >>> 0) {
         $F_0_i_i = $1412;
         $_pre_phi_i_i = $1411;
         break;
        }
        _abort();
        return 0;
       }
      } while (0);
      HEAP32[$_pre_phi_i_i >> 2] = $890;
      HEAP32[$F_0_i_i + 12 >> 2] = $890;
      HEAP32[$890 + 8 >> 2] = $F_0_i_i;
      HEAP32[$890 + 12 >> 2] = $1403;
      break;
     }
     $1422 = $890;
     $1423 = $1389 >>> 8;
     do {
      if (($1423 | 0) == 0) {
       $I1_0_i_i = 0;
      } else {
       if ($1389 >>> 0 > 16777215 >>> 0) {
        $I1_0_i_i = 31;
        break;
       }
       $1430 = ($1423 + 1048320 | 0) >>> 16 & 8;
       $1431 = $1423 << $1430;
       $1434 = ($1431 + 520192 | 0) >>> 16 & 4;
       $1436 = $1431 << $1434;
       $1439 = ($1436 + 245760 | 0) >>> 16 & 2;
       $1444 = 14 - ($1434 | $1430 | $1439) + ($1436 << $1439 >>> 15) | 0;
       $I1_0_i_i = $1389 >>> (($1444 + 7 | 0) >>> 0) & 1 | $1444 << 1;
      }
     } while (0);
     $1451 = 91008 + ($I1_0_i_i << 2) | 0;
     HEAP32[$890 + 28 >> 2] = $I1_0_i_i;
     HEAP32[$890 + 20 >> 2] = 0;
     HEAP32[$890 + 16 >> 2] = 0;
     $1455 = HEAP32[22677] | 0;
     $1456 = 1 << $I1_0_i_i;
     if (($1455 & $1456 | 0) == 0) {
      HEAP32[22677] = $1455 | $1456;
      HEAP32[$1451 >> 2] = $1422;
      HEAP32[$890 + 24 >> 2] = $1451;
      HEAP32[$890 + 12 >> 2] = $890;
      HEAP32[$890 + 8 >> 2] = $890;
      break;
     }
     if (($I1_0_i_i | 0) == 31) {
      $1471 = 0;
     } else {
      $1471 = 25 - ($I1_0_i_i >>> 1) | 0;
     }
     $K2_0_i_i = $1389 << $1471;
     $T_0_i_i = HEAP32[$1451 >> 2] | 0;
     while (1) {
      if ((HEAP32[$T_0_i_i + 4 >> 2] & -8 | 0) == ($1389 | 0)) {
       break;
      }
      $1480 = $T_0_i_i + 16 + ($K2_0_i_i >>> 31 << 2) | 0;
      $1481 = HEAP32[$1480 >> 2] | 0;
      if (($1481 | 0) == 0) {
       label = 331;
       break;
      } else {
       $K2_0_i_i = $K2_0_i_i << 1;
       $T_0_i_i = $1481;
      }
     }
     if ((label | 0) == 331) {
      if ($1480 >>> 0 < (HEAP32[22680] | 0) >>> 0) {
       _abort();
       return 0;
      } else {
       HEAP32[$1480 >> 2] = $1422;
       HEAP32[$890 + 24 >> 2] = $T_0_i_i;
       HEAP32[$890 + 12 >> 2] = $890;
       HEAP32[$890 + 8 >> 2] = $890;
       break;
      }
     }
     $1494 = $T_0_i_i + 8 | 0;
     $1495 = HEAP32[$1494 >> 2] | 0;
     $1497 = HEAP32[22680] | 0;
     if ($T_0_i_i >>> 0 < $1497 >>> 0) {
      _abort();
      return 0;
     }
     if ($1495 >>> 0 < $1497 >>> 0) {
      _abort();
      return 0;
     } else {
      HEAP32[$1495 + 12 >> 2] = $1422;
      HEAP32[$1494 >> 2] = $1422;
      HEAP32[$890 + 8 >> 2] = $1495;
      HEAP32[$890 + 12 >> 2] = $T_0_i_i;
      HEAP32[$890 + 24 >> 2] = 0;
      break;
     }
    }
   } while (0);
   $1507 = HEAP32[22679] | 0;
   if ($1507 >>> 0 <= $nb_0 >>> 0) {
    break;
   }
   $1510 = $1507 - $nb_0 | 0;
   HEAP32[22679] = $1510;
   $1511 = HEAP32[22682] | 0;
   $1512 = $1511;
   HEAP32[22682] = $1512 + $nb_0;
   HEAP32[$1512 + ($nb_0 + 4) >> 2] = $1510 | 1;
   HEAP32[$1511 + 4 >> 2] = $nb_0 | 3;
   $mem_0 = $1511 + 8 | 0;
   return $mem_0 | 0;
  }
 } while (0);
 HEAP32[(___errno_location() | 0) >> 2] = 12;
 $mem_0 = 0;
 return $mem_0 | 0;
}
function ___floatscan($f, $prec, $pok) {
 $f = $f | 0;
 $prec = $prec | 0;
 $pok = $pok | 0;
 var $x_i = 0, $bits_0_ph = 0, $emin_0_ph = 0, $3 = 0, $4 = 0, $6 = 0, $16 = 0, $24 = 0, $25 = 0, $sign_0 = 0, $c_0 = 0, $c_1149 = 0, $i_0148 = 0, $44 = 0, $c_2 = 0, $54 = 0, $c_1_lcssa = 0, $i_0_lcssa = 0, $58 = 0, $62 = 0, $i_1146 = 0, $80 = 0, $c_4 = 0, $92 = 0, $102 = 0, $i_4 = 0, $110 = 0, $120 = 0, $133 = 0, $_in = 0, $141 = 0, $156 = 0, $166 = 0, $170 = 0, $gotdig_0_i = 0, $c_0_i = 0, $180 = 0, $190 = 0, $c_1_ph_i = 0, $rp_0113_i$0 = 0, $rp_0113_i$1 = 0, $200 = 0, $210 = 0, $x_0_i = 0, $y_0_i = 0.0, $scale_0_i = 0.0, $gottail_0_i = 0, $gotrad_0_i = 0, $gotdig_2_i = 0, $rp_1_i$0 = 0, $rp_1_i$1 = 0, $dc_0_i$0 = 0, $dc_0_i$1 = 0, $c_2_i = 0, $212 = 0, $215 = 0, $218 = 0, $d_0_i = 0, $$etemp$1$1 = 0, $$etemp$2$1 = 0, $232 = 0.0, $x_1_i = 0, $y_1_i = 0.0, $scale_1_i = 0.0, $gottail_1_i = 0, $x_2_i = 0, $y_2_i = 0.0, $scale_2_i = 0.0, $gottail_2_i = 0, $gotrad_1_i = 0, $gotdig_3_i = 0, $rp_2_i$0 = 0, $rp_2_i$1 = 0, $dc_1_i$0 = 0, $dc_1_i$1 = 0, $243 = 0, $c_2_lcssa_i = 0, $256 = 0, $263 = 0, $272 = 0, $dc_0_rp_1_i$0 = 0, $dc_0_rp_1_i$1 = 0, $$etemp$4$1 = 0, $dc_2106_i$0 = 0, $dc_2106_i$1 = 0, $x_3105_i = 0, $274 = 0, $$etemp$6$1 = 0, $x_3_lcssa_i = 0, $280$0 = 0, $280$1 = 0, $e2_0_i$0 = 0, $e2_0_i$1 = 0, $306$1 = 0, $314 = 0, $315$1 = 0, $e2_1102_i$0 = 0, $e2_1102_i$1 = 0, $y_3101_i = 0.0, $x_4100_i = 0, $324 = 0, $x_5_i = 0, $_pn_i = 0.0, $y_4_i = 0.0, $e2_1_lcssa_i$0 = 0, $e2_1_lcssa_i$1 = 0, $y_3_lcssa_i = 0.0, $x_4_lcssa_i = 0, $331$1 = 0, $337 = 0, $_094_i = 0, $344 = 0.0, $345 = 0.0, $349 = 0, $_pre_phi_i = 0.0, $bias_099_i = 0.0, $x_6_i = 0, $y_5_i = 0.0, $357 = 0.0, $c_6 = 0, $sum_i = 0, $372 = 0, $gotdig_0_i90 = 0, $_0234_i = 0, $374 = 0, $384 = 0, $_1_ph_i = 0, $lrp_0336_i$0 = 0, $lrp_0336_i$1 = 0, $394 = 0, $_1_be_i = 0, $lrp_1_i$0 = 0, $lrp_1_i$1 = 0, $gotdig_2_i92 = 0, $gotrad_0_i93 = 0, $_2_i = 0, $404 = 0, $405 = 0, $407 = 0, $408 = 0, $409 = 0, $410 = 0, $_3323_i = 0, $j_0322_i = 0, $k_0321_i = 0, $gotrad_1320_i = 0, $gotdig_3319_i = 0, $lnz_0318_i = 0, $dc_0317_i$0 = 0, $dc_0317_i$1 = 0, $lrp_2316_i$0 = 0, $lrp_2316_i$1 = 0, $415 = 0, $419 = 0, $storemerge_i = 0, $426 = 0, $427 = 0, $lrp_3_i$0 = 0, $lrp_3_i$1 = 0, $dc_1_i96$0 = 0, $dc_1_i96$1 = 0, $lnz_2_i = 0, $gotdig_4_i = 0, $gotrad_2_i = 0, $k_2_i = 0, $j_2_i = 0, $433 = 0, $_3_be_i = 0, $442 = 0, $444 = 0, $_3_lcssa_i = 0, $j_0_lcssa_i = 0, $k_0_lcssa_i = 0, $gotrad_1_lcssa_i = 0, $gotdig_3_lcssa_i = 0, $lnz_0_lcssa_i = 0, $dc_0_lcssa_i$0 = 0, $dc_0_lcssa_i$1 = 0, $lrp_2_lcssa_i$0 = 0, $lrp_2_lcssa_i$1 = 0, $445 = 0, $_3314_i = 0, $j_0312_i = 0, $k_0310_i = 0, $gotdig_3307_i = 0, $lnz_0305_i = 0, $dc_0303_i$0 = 0, $dc_0303_i$1 = 0, $lrp_4_i$0 = 0, $lrp_4_i$1 = 0, $446 = 0, $451$0 = 0, $451$1 = 0, $e10_0_i$0 = 0, $e10_0_i$1 = 0, $lrp_5_i$0 = 0, $lrp_5_i$1 = 0, $475 = 0, $$etemp$14$1 = 0, $493 = 0, $494$1 = 0, $502 = 0, $503$1 = 0, $513 = 0, $515 = 0, $j_3297_i = 0, $k_3_i = 0, $522 = 0, $548 = 0, $_pre_i98 = 0, $562 = 0, $567 = 0, $570 = 0, $572 = 0, $carry_0289_i = 0, $k_4288_i = 0, $a_0287_i = 0, $rp_0286_i = 0, $573 = 0, $574 = 0, $577 = 0, $578 = 0, $581 = 0, $rp_1_i99 = 0, $a_1_i = 0, $rp_0_lcssa388_i = 0, $a_0_lcssa387_i = 0, $z_0_i = 0, $rp_2_ph264_i = 0, $e2_0_ph_i = 0, $z_1_ph265_i = 0, $a_2_ph266_i = 0, $593 = 0, $e2_0_us_i = 0, $z_1_us_i = 0, $z_2_us_i = 0, $k_5_in_us_i = 0, $carry1_0_us_i = 0, $k_5_us_i = 0, $597 = 0, $599$0 = 0, $$etemp$15$1 = 0, $_sink_off0_us_i = 0, $carry1_1_us_i = 0, $612 = 0, $z_3_us_i = 0, $618 = 0, $e2_0_us270_i = 0, $z_1_us271_i = 0, $z_2_us273_i = 0, $k_5_in_us274_i = 0, $carry1_0_us275_i = 0, $k_5_us276_i = 0, $624 = 0, $626$0 = 0, $$etemp$18$1 = 0, $_sink_off0_us279_i = 0, $carry1_1_us280_i = 0, $639 = 0, $z_3_us283_i = 0, $645 = 0, $carry1_1_lcssa_lcssa_i = 0, $z_3_lcssa_lcssa_i = 0, $_lcssa269_i = 0, $649 = 0, $653 = 0, $658 = 0, $z_4_i = 0, $e2_1_i = 0, $a_3_i = 0, $i_0_i = 0, $667 = 0, $671 = 0, $673 = 0, $i_1_i = 0, $680 = 0, $683 = 0, $686 = 0, $687 = 0, $carry3_0256_i = 0, $k_6254_i = 0, $a_4253_i = 0, $rp_4252_i = 0, $688 = 0, $689 = 0, $692 = 0, $or_cond241_i = 0, $rp_3_ph259_i = 0, $e2_1_ph_i = 0, $z_5_ph_i = 0, $a_3_ph_i = 0, $706 = 0, $709 = 0, $rp_3_i_ph = 0, $e2_1_i_ph = 0, $a_3_i_ph = 0, $710 = 0, $_240_i = 0, $z_7_i = 0, $721 = 0.0, $723 = 0, $denormal_0_i = 0, $_1236_i = 0, $732 = 0.0, $735 = 0.0, $y_1_i103 = 0.0, $frac_0_i = 0.0, $bias_0_i = 0.0, $740 = 0, $744 = 0, $frac_1_i = 0.0, $frac_2_i = 0.0, $780 = 0.0, $e2_2_i = 0, $denormal_2_i = 0, $y_2_i104 = 0.0, $e2_3_i = 0, $y_3_i = 0.0, $804 = 0, $z_7_1_i = 0, $813 = 0.0, $814 = 0.0, $815 = 0, $816 = 0, $_0 = 0.0, $819 = 0, $c_4_1 = 0, $phitmp_i$0 = 0, $242$0 = 0, $275$0 = 0, $275$1 = 0, $298$0 = 0, $299$0 = 0, $299$1 = 0, $329$0 = 0, $329$1 = 0, $333$0 = 0, $334$0 = 0, $334$1 = 0, $phitmp_i91$0 = 0, $414$0 = 0, $414$1 = 0, $462$0 = 0, $602$0 = 0, $602$1 = 0, $605$0 = 0, $607$0 = 0, $629$0 = 0, $629$1 = 0, $632$0 = 0, $634$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 512 | 0;
 $x_i = sp | 0;
 if (($prec | 0) == 2) {
  $emin_0_ph = -1074;
  $bits_0_ph = 53;
 } else if (($prec | 0) == 1) {
  $emin_0_ph = -1074;
  $bits_0_ph = 53;
 } else if (($prec | 0) == 0) {
  $emin_0_ph = -149;
  $bits_0_ph = 24;
 } else {
  $_0 = 0.0;
  STACKTOP = sp;
  return +$_0;
 }
 $3 = $f + 4 | 0;
 $4 = $f + 100 | 0;
 do {
  $6 = HEAP32[$3 >> 2] | 0;
  if ($6 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
   HEAP32[$3 >> 2] = $6 + 1;
   $16 = HEAPU8[$6] | 0;
  } else {
   $16 = ___shgetc($f) | 0;
  }
 } while ((_isspace($16 | 0) | 0) != 0);
 do {
  if (($16 | 0) == 45 | ($16 | 0) == 43) {
   $24 = 1 - ((($16 | 0) == 45) << 1) | 0;
   $25 = HEAP32[$3 >> 2] | 0;
   if ($25 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
    HEAP32[$3 >> 2] = $25 + 1;
    $c_0 = HEAPU8[$25] | 0;
    $sign_0 = $24;
    break;
   } else {
    $c_0 = ___shgetc($f) | 0;
    $sign_0 = $24;
    break;
   }
  } else {
   $c_0 = $16;
   $sign_0 = 1;
  }
 } while (0);
 $i_0148 = 0;
 $c_1149 = $c_0;
 while (1) {
  if (($c_1149 | 32 | 0) != (HEAP8[15104 + $i_0148 | 0] | 0)) {
   $i_0_lcssa = $i_0148;
   $c_1_lcssa = $c_1149;
   break;
  }
  do {
   if ($i_0148 >>> 0 < 7 >>> 0) {
    $44 = HEAP32[$3 >> 2] | 0;
    if ($44 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
     HEAP32[$3 >> 2] = $44 + 1;
     $c_2 = HEAPU8[$44] | 0;
     break;
    } else {
     $c_2 = ___shgetc($f) | 0;
     break;
    }
   } else {
    $c_2 = $c_1149;
   }
  } while (0);
  $54 = $i_0148 + 1 | 0;
  if ($54 >>> 0 < 8 >>> 0) {
   $i_0148 = $54;
   $c_1149 = $c_2;
  } else {
   $i_0_lcssa = $54;
   $c_1_lcssa = $c_2;
   break;
  }
 }
 do {
  if (($i_0_lcssa | 0) == 3) {
   label = 23;
  } else if (($i_0_lcssa | 0) != 8) {
   $58 = ($pok | 0) == 0;
   if (!($i_0_lcssa >>> 0 < 4 >>> 0 | $58)) {
    if (($i_0_lcssa | 0) == 8) {
     break;
    } else {
     label = 23;
     break;
    }
   }
   do {
    if (($i_0_lcssa | 0) == 0) {
     if (($c_1_lcssa | 32 | 0) == 110) {
      $80 = HEAP32[$3 >> 2] | 0;
      if ($80 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
       HEAP32[$3 >> 2] = $80 + 1;
       $c_4 = HEAPU8[$80] | 0;
      } else {
       $c_4 = ___shgetc($f) | 0;
      }
      if (($c_4 | 32 | 0) != 97) {
       break;
      }
      $819 = HEAP32[$3 >> 2] | 0;
      if ($819 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
       HEAP32[$3 >> 2] = $819 + 1;
       $c_4_1 = HEAPU8[$819] | 0;
      } else {
       $c_4_1 = ___shgetc($f) | 0;
      }
      if (($c_4_1 | 32 | 0) != 110) {
       break;
      }
      $92 = HEAP32[$3 >> 2] | 0;
      if ($92 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
       HEAP32[$3 >> 2] = $92 + 1;
       $102 = HEAPU8[$92] | 0;
      } else {
       $102 = ___shgetc($f) | 0;
      }
      if (($102 | 0) == 40) {
       $i_4 = 1;
      } else {
       if ((HEAP32[$4 >> 2] | 0) == 0) {
        $_0 = +NaN;
        STACKTOP = sp;
        return +$_0;
       }
       HEAP32[$3 >> 2] = (HEAP32[$3 >> 2] | 0) - 1;
       $_0 = +NaN;
       STACKTOP = sp;
       return +$_0;
      }
      while (1) {
       $110 = HEAP32[$3 >> 2] | 0;
       if ($110 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
        HEAP32[$3 >> 2] = $110 + 1;
        $120 = HEAPU8[$110] | 0;
       } else {
        $120 = ___shgetc($f) | 0;
       }
       if (!(($120 - 48 | 0) >>> 0 < 10 >>> 0 | ($120 - 65 | 0) >>> 0 < 26 >>> 0)) {
        if (!(($120 - 97 | 0) >>> 0 < 26 >>> 0 | ($120 | 0) == 95)) {
         break;
        }
       }
       $i_4 = $i_4 + 1 | 0;
      }
      if (($120 | 0) == 41) {
       $_0 = +NaN;
       STACKTOP = sp;
       return +$_0;
      }
      $133 = (HEAP32[$4 >> 2] | 0) == 0;
      if (!$133) {
       HEAP32[$3 >> 2] = (HEAP32[$3 >> 2] | 0) - 1;
      }
      if ($58) {
       HEAP32[(___errno_location() | 0) >> 2] = 22;
       ___shlim($f, 0);
       $_0 = 0.0;
       STACKTOP = sp;
       return +$_0;
      }
      if (($i_4 | 0) == 0 | $133) {
       $_0 = +NaN;
       STACKTOP = sp;
       return +$_0;
      } else {
       $_in = $i_4;
      }
      while (1) {
       $141 = $_in - 1 | 0;
       HEAP32[$3 >> 2] = (HEAP32[$3 >> 2] | 0) - 1;
       if (($141 | 0) == 0) {
        $_0 = +NaN;
        break;
       } else {
        $_in = $141;
       }
      }
      STACKTOP = sp;
      return +$_0;
     }
     do {
      if (($c_1_lcssa | 0) == 48) {
       $156 = HEAP32[$3 >> 2] | 0;
       if ($156 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
        HEAP32[$3 >> 2] = $156 + 1;
        $166 = HEAPU8[$156] | 0;
       } else {
        $166 = ___shgetc($f) | 0;
       }
       if (($166 | 32 | 0) != 120) {
        if ((HEAP32[$4 >> 2] | 0) == 0) {
         $c_6 = 48;
         break;
        }
        HEAP32[$3 >> 2] = (HEAP32[$3 >> 2] | 0) - 1;
        $c_6 = 48;
        break;
       }
       $170 = HEAP32[$3 >> 2] | 0;
       if ($170 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
        HEAP32[$3 >> 2] = $170 + 1;
        $c_0_i = HEAPU8[$170] | 0;
        $gotdig_0_i = 0;
       } else {
        $c_0_i = ___shgetc($f) | 0;
        $gotdig_0_i = 0;
       }
       while (1) {
        if (($c_0_i | 0) == 46) {
         label = 68;
         break;
        } else if (($c_0_i | 0) != 48) {
         $c_2_i = $c_0_i;
         $dc_0_i$1 = 0;
         $dc_0_i$0 = 0;
         $rp_1_i$1 = 0;
         $rp_1_i$0 = 0;
         $gotdig_2_i = $gotdig_0_i;
         $gotrad_0_i = 0;
         $gottail_0_i = 0;
         $scale_0_i = 1.0;
         $y_0_i = 0.0;
         $x_0_i = 0;
         break;
        }
        $180 = HEAP32[$3 >> 2] | 0;
        if ($180 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
         HEAP32[$3 >> 2] = $180 + 1;
         $c_0_i = HEAPU8[$180] | 0;
         $gotdig_0_i = 1;
         continue;
        } else {
         $c_0_i = ___shgetc($f) | 0;
         $gotdig_0_i = 1;
         continue;
        }
       }
       L103 : do {
        if ((label | 0) == 68) {
         $190 = HEAP32[$3 >> 2] | 0;
         if ($190 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
          HEAP32[$3 >> 2] = $190 + 1;
          $c_1_ph_i = HEAPU8[$190] | 0;
         } else {
          $c_1_ph_i = ___shgetc($f) | 0;
         }
         if (($c_1_ph_i | 0) == 48) {
          $rp_0113_i$1 = -1;
          $rp_0113_i$0 = -1;
         } else {
          $c_2_i = $c_1_ph_i;
          $dc_0_i$1 = 0;
          $dc_0_i$0 = 0;
          $rp_1_i$1 = 0;
          $rp_1_i$0 = 0;
          $gotdig_2_i = $gotdig_0_i;
          $gotrad_0_i = 1;
          $gottail_0_i = 0;
          $scale_0_i = 1.0;
          $y_0_i = 0.0;
          $x_0_i = 0;
          break;
         }
         while (1) {
          $200 = HEAP32[$3 >> 2] | 0;
          if ($200 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
           HEAP32[$3 >> 2] = $200 + 1;
           $210 = HEAPU8[$200] | 0;
          } else {
           $210 = ___shgetc($f) | 0;
          }
          if (($210 | 0) != 48) {
           $c_2_i = $210;
           $dc_0_i$1 = 0;
           $dc_0_i$0 = 0;
           $rp_1_i$1 = $rp_0113_i$1;
           $rp_1_i$0 = $rp_0113_i$0;
           $gotdig_2_i = 1;
           $gotrad_0_i = 1;
           $gottail_0_i = 0;
           $scale_0_i = 1.0;
           $y_0_i = 0.0;
           $x_0_i = 0;
           break L103;
          }
          $phitmp_i$0 = _i64Add($rp_0113_i$0, $rp_0113_i$1, -1, -1) | 0;
          $rp_0113_i$1 = tempRet0;
          $rp_0113_i$0 = $phitmp_i$0;
         }
        }
       } while (0);
       L116 : while (1) {
        $212 = $c_2_i - 48 | 0;
        do {
         if ($212 >>> 0 < 10 >>> 0) {
          $d_0_i = $212;
          label = 82;
         } else {
          $215 = $c_2_i | 32;
          $218 = ($c_2_i | 0) == 46;
          if (!(($215 - 97 | 0) >>> 0 < 6 >>> 0 | $218)) {
           $c_2_lcssa_i = $c_2_i;
           break L116;
          }
          if ($218) {
           if (($gotrad_0_i | 0) == 0) {
            $dc_1_i$1 = $dc_0_i$1;
            $dc_1_i$0 = $dc_0_i$0;
            $rp_2_i$1 = $dc_0_i$1;
            $rp_2_i$0 = $dc_0_i$0;
            $gotdig_3_i = $gotdig_2_i;
            $gotrad_1_i = 1;
            $gottail_2_i = $gottail_0_i;
            $scale_2_i = $scale_0_i;
            $y_2_i = $y_0_i;
            $x_2_i = $x_0_i;
            break;
           } else {
            $c_2_lcssa_i = 46;
            break L116;
           }
          } else {
           $d_0_i = ($c_2_i | 0) > 57 ? $215 - 87 | 0 : $212;
           label = 82;
           break;
          }
         }
        } while (0);
        if ((label | 0) == 82) {
         label = 0;
         $$etemp$1$1 = 0;
         do {
          if (($dc_0_i$1 | 0) < ($$etemp$1$1 | 0) | ($dc_0_i$1 | 0) == ($$etemp$1$1 | 0) & $dc_0_i$0 >>> 0 < 8 >>> 0) {
           $gottail_1_i = $gottail_0_i;
           $scale_1_i = $scale_0_i;
           $y_1_i = $y_0_i;
           $x_1_i = $d_0_i + ($x_0_i << 4) | 0;
          } else {
           $$etemp$2$1 = 0;
           if (($dc_0_i$1 | 0) < ($$etemp$2$1 | 0) | ($dc_0_i$1 | 0) == ($$etemp$2$1 | 0) & $dc_0_i$0 >>> 0 < 14 >>> 0) {
            $232 = $scale_0_i * .0625;
            $gottail_1_i = $gottail_0_i;
            $scale_1_i = $232;
            $y_1_i = $y_0_i + $232 * +($d_0_i | 0);
            $x_1_i = $x_0_i;
            break;
           }
           if (!(($d_0_i | 0) != 0 & ($gottail_0_i | 0) == 0)) {
            $gottail_1_i = $gottail_0_i;
            $scale_1_i = $scale_0_i;
            $y_1_i = $y_0_i;
            $x_1_i = $x_0_i;
            break;
           }
           $gottail_1_i = 1;
           $scale_1_i = $scale_0_i;
           $y_1_i = $y_0_i + $scale_0_i * .5;
           $x_1_i = $x_0_i;
          }
         } while (0);
         $242$0 = _i64Add($dc_0_i$0, $dc_0_i$1, 1, 0) | 0;
         $dc_1_i$1 = tempRet0;
         $dc_1_i$0 = $242$0;
         $rp_2_i$1 = $rp_1_i$1;
         $rp_2_i$0 = $rp_1_i$0;
         $gotdig_3_i = 1;
         $gotrad_1_i = $gotrad_0_i;
         $gottail_2_i = $gottail_1_i;
         $scale_2_i = $scale_1_i;
         $y_2_i = $y_1_i;
         $x_2_i = $x_1_i;
        }
        $243 = HEAP32[$3 >> 2] | 0;
        if ($243 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
         HEAP32[$3 >> 2] = $243 + 1;
         $c_2_i = HEAPU8[$243] | 0;
         $dc_0_i$1 = $dc_1_i$1;
         $dc_0_i$0 = $dc_1_i$0;
         $rp_1_i$1 = $rp_2_i$1;
         $rp_1_i$0 = $rp_2_i$0;
         $gotdig_2_i = $gotdig_3_i;
         $gotrad_0_i = $gotrad_1_i;
         $gottail_0_i = $gottail_2_i;
         $scale_0_i = $scale_2_i;
         $y_0_i = $y_2_i;
         $x_0_i = $x_2_i;
         continue;
        } else {
         $c_2_i = ___shgetc($f) | 0;
         $dc_0_i$1 = $dc_1_i$1;
         $dc_0_i$0 = $dc_1_i$0;
         $rp_1_i$1 = $rp_2_i$1;
         $rp_1_i$0 = $rp_2_i$0;
         $gotdig_2_i = $gotdig_3_i;
         $gotrad_0_i = $gotrad_1_i;
         $gottail_0_i = $gottail_2_i;
         $scale_0_i = $scale_2_i;
         $y_0_i = $y_2_i;
         $x_0_i = $x_2_i;
         continue;
        }
       }
       if (($gotdig_2_i | 0) == 0) {
        $256 = (HEAP32[$4 >> 2] | 0) == 0;
        if (!$256) {
         HEAP32[$3 >> 2] = (HEAP32[$3 >> 2] | 0) - 1;
        }
        do {
         if ($58) {
          ___shlim($f, 0);
         } else {
          if ($256) {
           break;
          }
          $263 = HEAP32[$3 >> 2] | 0;
          HEAP32[$3 >> 2] = $263 - 1;
          if (($gotrad_0_i | 0) == 0) {
           break;
          }
          HEAP32[$3 >> 2] = $263 - 2;
         }
        } while (0);
        $_0 = +($sign_0 | 0) * 0.0;
        STACKTOP = sp;
        return +$_0;
       }
       $272 = ($gotrad_0_i | 0) == 0;
       $dc_0_rp_1_i$0 = $272 ? $dc_0_i$0 : $rp_1_i$0;
       $dc_0_rp_1_i$1 = $272 ? $dc_0_i$1 : $rp_1_i$1;
       $$etemp$4$1 = 0;
       if (($dc_0_i$1 | 0) < ($$etemp$4$1 | 0) | ($dc_0_i$1 | 0) == ($$etemp$4$1 | 0) & $dc_0_i$0 >>> 0 < 8 >>> 0) {
        $x_3105_i = $x_0_i;
        $dc_2106_i$1 = $dc_0_i$1;
        $dc_2106_i$0 = $dc_0_i$0;
        while (1) {
         $274 = $x_3105_i << 4;
         $275$0 = _i64Add($dc_2106_i$0, $dc_2106_i$1, 1, 0) | 0;
         $275$1 = tempRet0;
         $$etemp$6$1 = 0;
         if (($275$1 | 0) < ($$etemp$6$1 | 0) | ($275$1 | 0) == ($$etemp$6$1 | 0) & $275$0 >>> 0 < 8 >>> 0) {
          $x_3105_i = $274;
          $dc_2106_i$1 = $275$1;
          $dc_2106_i$0 = $275$0;
         } else {
          $x_3_lcssa_i = $274;
          break;
         }
        }
       } else {
        $x_3_lcssa_i = $x_0_i;
       }
       do {
        if (($c_2_lcssa_i | 32 | 0) == 112) {
         $280$0 = _scanexp($f, $pok) | 0;
         $280$1 = tempRet0;
         if (!(($280$0 | 0) == 0 & ($280$1 | 0) == (-2147483648 | 0))) {
          $e2_0_i$1 = $280$1;
          $e2_0_i$0 = $280$0;
          break;
         }
         if ($58) {
          ___shlim($f, 0);
          $_0 = 0.0;
          STACKTOP = sp;
          return +$_0;
         } else {
          if ((HEAP32[$4 >> 2] | 0) == 0) {
           $e2_0_i$1 = 0;
           $e2_0_i$0 = 0;
           break;
          }
          HEAP32[$3 >> 2] = (HEAP32[$3 >> 2] | 0) - 1;
          $e2_0_i$1 = 0;
          $e2_0_i$0 = 0;
          break;
         }
        } else {
         if ((HEAP32[$4 >> 2] | 0) == 0) {
          $e2_0_i$1 = 0;
          $e2_0_i$0 = 0;
          break;
         }
         HEAP32[$3 >> 2] = (HEAP32[$3 >> 2] | 0) - 1;
         $e2_0_i$1 = 0;
         $e2_0_i$0 = 0;
        }
       } while (0);
       $298$0 = _i64Add($dc_0_rp_1_i$0 << 2 | 0 >>> 30, $dc_0_rp_1_i$1 << 2 | $dc_0_rp_1_i$0 >>> 30, -32, -1) | 0;
       $299$0 = _i64Add($298$0, tempRet0, $e2_0_i$0, $e2_0_i$1) | 0;
       $299$1 = tempRet0;
       if (($x_3_lcssa_i | 0) == 0) {
        $_0 = +($sign_0 | 0) * 0.0;
        STACKTOP = sp;
        return +$_0;
       }
       $306$1 = 0;
       if (($299$1 | 0) > ($306$1 | 0) | ($299$1 | 0) == ($306$1 | 0) & $299$0 >>> 0 > (-$emin_0_ph | 0) >>> 0) {
        HEAP32[(___errno_location() | 0) >> 2] = 34;
        $_0 = +($sign_0 | 0) * 1.7976931348623157e+308 * 1.7976931348623157e+308;
        STACKTOP = sp;
        return +$_0;
       }
       $314 = $emin_0_ph - 106 | 0;
       $315$1 = ($314 | 0) < 0 | 0 ? -1 : 0;
       if (($299$1 | 0) < ($315$1 | 0) | ($299$1 | 0) == ($315$1 | 0) & $299$0 >>> 0 < $314 >>> 0) {
        HEAP32[(___errno_location() | 0) >> 2] = 34;
        $_0 = +($sign_0 | 0) * 2.2250738585072014e-308 * 2.2250738585072014e-308;
        STACKTOP = sp;
        return +$_0;
       }
       if (($x_3_lcssa_i | 0) > -1) {
        $x_4100_i = $x_3_lcssa_i;
        $y_3101_i = $y_0_i;
        $e2_1102_i$1 = $299$1;
        $e2_1102_i$0 = $299$0;
        while (1) {
         $324 = $x_4100_i << 1;
         if ($y_3101_i < .5) {
          $_pn_i = $y_3101_i;
          $x_5_i = $324;
         } else {
          $_pn_i = $y_3101_i + -1.0;
          $x_5_i = $324 | 1;
         }
         $y_4_i = $y_3101_i + $_pn_i;
         $329$0 = _i64Add($e2_1102_i$0, $e2_1102_i$1, -1, -1) | 0;
         $329$1 = tempRet0;
         if (($x_5_i | 0) > -1) {
          $x_4100_i = $x_5_i;
          $y_3101_i = $y_4_i;
          $e2_1102_i$1 = $329$1;
          $e2_1102_i$0 = $329$0;
         } else {
          $x_4_lcssa_i = $x_5_i;
          $y_3_lcssa_i = $y_4_i;
          $e2_1_lcssa_i$1 = $329$1;
          $e2_1_lcssa_i$0 = $329$0;
          break;
         }
        }
       } else {
        $x_4_lcssa_i = $x_3_lcssa_i;
        $y_3_lcssa_i = $y_0_i;
        $e2_1_lcssa_i$1 = $299$1;
        $e2_1_lcssa_i$0 = $299$0;
       }
       $331$1 = 0;
       $333$0 = _i64Subtract(32, 0, $emin_0_ph, ($emin_0_ph | 0) < 0 | 0 ? -1 : 0) | 0;
       $334$0 = _i64Add($e2_1_lcssa_i$0, $e2_1_lcssa_i$1, $333$0, tempRet0) | 0;
       $334$1 = tempRet0;
       if (($331$1 | 0) > ($334$1 | 0) | ($331$1 | 0) == ($334$1 | 0) & $bits_0_ph >>> 0 > $334$0 >>> 0) {
        $337 = $334$0;
        $_094_i = ($337 | 0) < 0 ? 0 : $337;
       } else {
        $_094_i = $bits_0_ph;
       }
       do {
        if (($_094_i | 0) < 53) {
         $344 = +($sign_0 | 0);
         $345 = +_copysign(+(+_scalbn(1.0, 84 - $_094_i | 0)), +$344);
         if (!(($_094_i | 0) < 32 & $y_3_lcssa_i != 0.0)) {
          $y_5_i = $y_3_lcssa_i;
          $x_6_i = $x_4_lcssa_i;
          $bias_099_i = $345;
          $_pre_phi_i = $344;
          break;
         }
         $349 = $x_4_lcssa_i & 1;
         $y_5_i = ($349 | 0) == 0 ? 0.0 : $y_3_lcssa_i;
         $x_6_i = ($349 ^ 1) + $x_4_lcssa_i | 0;
         $bias_099_i = $345;
         $_pre_phi_i = $344;
        } else {
         $y_5_i = $y_3_lcssa_i;
         $x_6_i = $x_4_lcssa_i;
         $bias_099_i = 0.0;
         $_pre_phi_i = +($sign_0 | 0);
        }
       } while (0);
       $357 = $_pre_phi_i * $y_5_i + ($bias_099_i + $_pre_phi_i * +($x_6_i >>> 0 >>> 0)) - $bias_099_i;
       if ($357 == 0.0) {
        HEAP32[(___errno_location() | 0) >> 2] = 34;
       }
       $_0 = +_scalbnl($357, $e2_1_lcssa_i$0);
       STACKTOP = sp;
       return +$_0;
      } else {
       $c_6 = $c_1_lcssa;
      }
     } while (0);
     $sum_i = $emin_0_ph + $bits_0_ph | 0;
     $372 = 3 - $sum_i | 0;
     $_0234_i = $c_6;
     $gotdig_0_i90 = 0;
     while (1) {
      if (($_0234_i | 0) == 46) {
       label = 137;
       break;
      } else if (($_0234_i | 0) != 48) {
       $_2_i = $_0234_i;
       $gotrad_0_i93 = 0;
       $gotdig_2_i92 = $gotdig_0_i90;
       $lrp_1_i$1 = 0;
       $lrp_1_i$0 = 0;
       break;
      }
      $374 = HEAP32[$3 >> 2] | 0;
      if ($374 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
       HEAP32[$3 >> 2] = $374 + 1;
       $_0234_i = HEAPU8[$374] | 0;
       $gotdig_0_i90 = 1;
       continue;
      } else {
       $_0234_i = ___shgetc($f) | 0;
       $gotdig_0_i90 = 1;
       continue;
      }
     }
     L205 : do {
      if ((label | 0) == 137) {
       $384 = HEAP32[$3 >> 2] | 0;
       if ($384 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
        HEAP32[$3 >> 2] = $384 + 1;
        $_1_ph_i = HEAPU8[$384] | 0;
       } else {
        $_1_ph_i = ___shgetc($f) | 0;
       }
       if (($_1_ph_i | 0) == 48) {
        $lrp_0336_i$1 = -1;
        $lrp_0336_i$0 = -1;
       } else {
        $_2_i = $_1_ph_i;
        $gotrad_0_i93 = 1;
        $gotdig_2_i92 = $gotdig_0_i90;
        $lrp_1_i$1 = 0;
        $lrp_1_i$0 = 0;
        break;
       }
       while (1) {
        $394 = HEAP32[$3 >> 2] | 0;
        if ($394 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
         HEAP32[$3 >> 2] = $394 + 1;
         $_1_be_i = HEAPU8[$394] | 0;
        } else {
         $_1_be_i = ___shgetc($f) | 0;
        }
        if (($_1_be_i | 0) != 48) {
         $_2_i = $_1_be_i;
         $gotrad_0_i93 = 1;
         $gotdig_2_i92 = 1;
         $lrp_1_i$1 = $lrp_0336_i$1;
         $lrp_1_i$0 = $lrp_0336_i$0;
         break L205;
        }
        $phitmp_i91$0 = _i64Add($lrp_0336_i$0, $lrp_0336_i$1, -1, -1) | 0;
        $lrp_0336_i$1 = tempRet0;
        $lrp_0336_i$0 = $phitmp_i91$0;
       }
      }
     } while (0);
     $404 = $x_i | 0;
     HEAP32[$404 >> 2] = 0;
     $405 = $_2_i - 48 | 0;
     $407 = ($_2_i | 0) == 46;
     L219 : do {
      if ($405 >>> 0 < 10 >>> 0 | $407) {
       $408 = $x_i + 496 | 0;
       $lrp_2316_i$1 = $lrp_1_i$1;
       $lrp_2316_i$0 = $lrp_1_i$0;
       $dc_0317_i$1 = 0;
       $dc_0317_i$0 = 0;
       $lnz_0318_i = 0;
       $gotdig_3319_i = $gotdig_2_i92;
       $gotrad_1320_i = $gotrad_0_i93;
       $k_0321_i = 0;
       $j_0322_i = 0;
       $_3323_i = $_2_i;
       $410 = $405;
       $409 = $407;
       while (1) {
        do {
         if ($409) {
          if (($gotrad_1320_i | 0) == 0) {
           $j_2_i = $j_0322_i;
           $k_2_i = $k_0321_i;
           $gotrad_2_i = 1;
           $gotdig_4_i = $gotdig_3319_i;
           $lnz_2_i = $lnz_0318_i;
           $dc_1_i96$1 = $dc_0317_i$1;
           $dc_1_i96$0 = $dc_0317_i$0;
           $lrp_3_i$1 = $dc_0317_i$1;
           $lrp_3_i$0 = $dc_0317_i$0;
          } else {
           $lrp_4_i$1 = $lrp_2316_i$1;
           $lrp_4_i$0 = $lrp_2316_i$0;
           $dc_0303_i$1 = $dc_0317_i$1;
           $dc_0303_i$0 = $dc_0317_i$0;
           $lnz_0305_i = $lnz_0318_i;
           $gotdig_3307_i = $gotdig_3319_i;
           $k_0310_i = $k_0321_i;
           $j_0312_i = $j_0322_i;
           $_3314_i = $_3323_i;
           break L219;
          }
         } else {
          $414$0 = _i64Add($dc_0317_i$0, $dc_0317_i$1, 1, 0) | 0;
          $414$1 = tempRet0;
          $415 = ($_3323_i | 0) != 48;
          if (($k_0321_i | 0) >= 125) {
           if (!$415) {
            $j_2_i = $j_0322_i;
            $k_2_i = $k_0321_i;
            $gotrad_2_i = $gotrad_1320_i;
            $gotdig_4_i = $gotdig_3319_i;
            $lnz_2_i = $lnz_0318_i;
            $dc_1_i96$1 = $414$1;
            $dc_1_i96$0 = $414$0;
            $lrp_3_i$1 = $lrp_2316_i$1;
            $lrp_3_i$0 = $lrp_2316_i$0;
            break;
           }
           HEAP32[$408 >> 2] = HEAP32[$408 >> 2] | 1;
           $j_2_i = $j_0322_i;
           $k_2_i = $k_0321_i;
           $gotrad_2_i = $gotrad_1320_i;
           $gotdig_4_i = $gotdig_3319_i;
           $lnz_2_i = $lnz_0318_i;
           $dc_1_i96$1 = $414$1;
           $dc_1_i96$0 = $414$0;
           $lrp_3_i$1 = $lrp_2316_i$1;
           $lrp_3_i$0 = $lrp_2316_i$0;
           break;
          }
          $419 = $x_i + ($k_0321_i << 2) | 0;
          if (($j_0322_i | 0) == 0) {
           $storemerge_i = $410;
          } else {
           $storemerge_i = $_3323_i - 48 + ((HEAP32[$419 >> 2] | 0) * 10 | 0) | 0;
          }
          HEAP32[$419 >> 2] = $storemerge_i;
          $426 = $j_0322_i + 1 | 0;
          $427 = ($426 | 0) == 9;
          $j_2_i = $427 ? 0 : $426;
          $k_2_i = ($427 & 1) + $k_0321_i | 0;
          $gotrad_2_i = $gotrad_1320_i;
          $gotdig_4_i = 1;
          $lnz_2_i = $415 ? $414$0 : $lnz_0318_i;
          $dc_1_i96$1 = $414$1;
          $dc_1_i96$0 = $414$0;
          $lrp_3_i$1 = $lrp_2316_i$1;
          $lrp_3_i$0 = $lrp_2316_i$0;
         }
        } while (0);
        $433 = HEAP32[$3 >> 2] | 0;
        if ($433 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
         HEAP32[$3 >> 2] = $433 + 1;
         $_3_be_i = HEAPU8[$433] | 0;
        } else {
         $_3_be_i = ___shgetc($f) | 0;
        }
        $442 = $_3_be_i - 48 | 0;
        $444 = ($_3_be_i | 0) == 46;
        if ($442 >>> 0 < 10 >>> 0 | $444) {
         $lrp_2316_i$1 = $lrp_3_i$1;
         $lrp_2316_i$0 = $lrp_3_i$0;
         $dc_0317_i$1 = $dc_1_i96$1;
         $dc_0317_i$0 = $dc_1_i96$0;
         $lnz_0318_i = $lnz_2_i;
         $gotdig_3319_i = $gotdig_4_i;
         $gotrad_1320_i = $gotrad_2_i;
         $k_0321_i = $k_2_i;
         $j_0322_i = $j_2_i;
         $_3323_i = $_3_be_i;
         $410 = $442;
         $409 = $444;
        } else {
         $lrp_2_lcssa_i$1 = $lrp_3_i$1;
         $lrp_2_lcssa_i$0 = $lrp_3_i$0;
         $dc_0_lcssa_i$1 = $dc_1_i96$1;
         $dc_0_lcssa_i$0 = $dc_1_i96$0;
         $lnz_0_lcssa_i = $lnz_2_i;
         $gotdig_3_lcssa_i = $gotdig_4_i;
         $gotrad_1_lcssa_i = $gotrad_2_i;
         $k_0_lcssa_i = $k_2_i;
         $j_0_lcssa_i = $j_2_i;
         $_3_lcssa_i = $_3_be_i;
         label = 160;
         break;
        }
       }
      } else {
       $lrp_2_lcssa_i$1 = $lrp_1_i$1;
       $lrp_2_lcssa_i$0 = $lrp_1_i$0;
       $dc_0_lcssa_i$1 = 0;
       $dc_0_lcssa_i$0 = 0;
       $lnz_0_lcssa_i = 0;
       $gotdig_3_lcssa_i = $gotdig_2_i92;
       $gotrad_1_lcssa_i = $gotrad_0_i93;
       $k_0_lcssa_i = 0;
       $j_0_lcssa_i = 0;
       $_3_lcssa_i = $_2_i;
       label = 160;
      }
     } while (0);
     if ((label | 0) == 160) {
      $445 = ($gotrad_1_lcssa_i | 0) == 0;
      $lrp_4_i$1 = $445 ? $dc_0_lcssa_i$1 : $lrp_2_lcssa_i$1;
      $lrp_4_i$0 = $445 ? $dc_0_lcssa_i$0 : $lrp_2_lcssa_i$0;
      $dc_0303_i$1 = $dc_0_lcssa_i$1;
      $dc_0303_i$0 = $dc_0_lcssa_i$0;
      $lnz_0305_i = $lnz_0_lcssa_i;
      $gotdig_3307_i = $gotdig_3_lcssa_i;
      $k_0310_i = $k_0_lcssa_i;
      $j_0312_i = $j_0_lcssa_i;
      $_3314_i = $_3_lcssa_i;
     }
     $446 = ($gotdig_3307_i | 0) != 0;
     do {
      if ($446) {
       if (($_3314_i | 32 | 0) != 101) {
        label = 169;
        break;
       }
       $451$0 = _scanexp($f, $pok) | 0;
       $451$1 = tempRet0;
       do {
        if (($451$0 | 0) == 0 & ($451$1 | 0) == (-2147483648 | 0)) {
         if ($58) {
          ___shlim($f, 0);
          $_0 = 0.0;
          STACKTOP = sp;
          return +$_0;
         } else {
          if ((HEAP32[$4 >> 2] | 0) == 0) {
           $e10_0_i$1 = 0;
           $e10_0_i$0 = 0;
           break;
          }
          HEAP32[$3 >> 2] = (HEAP32[$3 >> 2] | 0) - 1;
          $e10_0_i$1 = 0;
          $e10_0_i$0 = 0;
          break;
         }
        } else {
         $e10_0_i$1 = $451$1;
         $e10_0_i$0 = $451$0;
        }
       } while (0);
       $462$0 = _i64Add($e10_0_i$0, $e10_0_i$1, $lrp_4_i$0, $lrp_4_i$1) | 0;
       $lrp_5_i$1 = tempRet0;
       $lrp_5_i$0 = $462$0;
      } else {
       label = 169;
      }
     } while (0);
     do {
      if ((label | 0) == 169) {
       if (($_3314_i | 0) <= -1) {
        $lrp_5_i$1 = $lrp_4_i$1;
        $lrp_5_i$0 = $lrp_4_i$0;
        break;
       }
       if ((HEAP32[$4 >> 2] | 0) == 0) {
        $lrp_5_i$1 = $lrp_4_i$1;
        $lrp_5_i$0 = $lrp_4_i$0;
        break;
       }
       HEAP32[$3 >> 2] = (HEAP32[$3 >> 2] | 0) - 1;
       $lrp_5_i$1 = $lrp_4_i$1;
       $lrp_5_i$0 = $lrp_4_i$0;
      }
     } while (0);
     if (!$446) {
      HEAP32[(___errno_location() | 0) >> 2] = 22;
      ___shlim($f, 0);
      $_0 = 0.0;
      STACKTOP = sp;
      return +$_0;
     }
     $475 = HEAP32[$404 >> 2] | 0;
     if (($475 | 0) == 0) {
      $_0 = +($sign_0 | 0) * 0.0;
      STACKTOP = sp;
      return +$_0;
     }
     $$etemp$14$1 = 0;
     do {
      if (($lrp_5_i$0 | 0) == ($dc_0303_i$0 | 0) & ($lrp_5_i$1 | 0) == ($dc_0303_i$1 | 0) & (($dc_0303_i$1 | 0) < ($$etemp$14$1 | 0) | ($dc_0303_i$1 | 0) == ($$etemp$14$1 | 0) & $dc_0303_i$0 >>> 0 < 10 >>> 0)) {
       if ($bits_0_ph >>> 0 <= 30 >>> 0) {
        if (($475 >>> ($bits_0_ph >>> 0) | 0) != 0) {
         break;
        }
       }
       $_0 = +($sign_0 | 0) * +($475 >>> 0 >>> 0);
       STACKTOP = sp;
       return +$_0;
      }
     } while (0);
     $493 = ($emin_0_ph | 0) / -2 | 0;
     $494$1 = ($493 | 0) < 0 | 0 ? -1 : 0;
     if (($lrp_5_i$1 | 0) > ($494$1 | 0) | ($lrp_5_i$1 | 0) == ($494$1 | 0) & $lrp_5_i$0 >>> 0 > $493 >>> 0) {
      HEAP32[(___errno_location() | 0) >> 2] = 34;
      $_0 = +($sign_0 | 0) * 1.7976931348623157e+308 * 1.7976931348623157e+308;
      STACKTOP = sp;
      return +$_0;
     }
     $502 = $emin_0_ph - 106 | 0;
     $503$1 = ($502 | 0) < 0 | 0 ? -1 : 0;
     if (($lrp_5_i$1 | 0) < ($503$1 | 0) | ($lrp_5_i$1 | 0) == ($503$1 | 0) & $lrp_5_i$0 >>> 0 < $502 >>> 0) {
      HEAP32[(___errno_location() | 0) >> 2] = 34;
      $_0 = +($sign_0 | 0) * 2.2250738585072014e-308 * 2.2250738585072014e-308;
      STACKTOP = sp;
      return +$_0;
     }
     if (($j_0312_i | 0) == 0) {
      $k_3_i = $k_0310_i;
     } else {
      if (($j_0312_i | 0) < 9) {
       $513 = $x_i + ($k_0310_i << 2) | 0;
       $j_3297_i = $j_0312_i;
       $515 = HEAP32[$513 >> 2] | 0;
       do {
        $515 = $515 * 10 | 0;
        $j_3297_i = $j_3297_i + 1 | 0;
       } while (($j_3297_i | 0) < 9);
       HEAP32[$513 >> 2] = $515;
      }
      $k_3_i = $k_0310_i + 1 | 0;
     }
     $522 = $lrp_5_i$0;
     do {
      if (($lnz_0305_i | 0) < 9) {
       if (!(($lnz_0305_i | 0) <= ($522 | 0) & ($522 | 0) < 18)) {
        break;
       }
       if (($522 | 0) == 9) {
        $_0 = +($sign_0 | 0) * +((HEAP32[$404 >> 2] | 0) >>> 0 >>> 0);
        STACKTOP = sp;
        return +$_0;
       }
       if (($522 | 0) < 9) {
        $_0 = +($sign_0 | 0) * +((HEAP32[$404 >> 2] | 0) >>> 0 >>> 0) / +(HEAP32[6848 + (8 - $522 << 2) >> 2] | 0);
        STACKTOP = sp;
        return +$_0;
       }
       $548 = $bits_0_ph + 27 + ($522 * -3 | 0) | 0;
       $_pre_i98 = HEAP32[$404 >> 2] | 0;
       if (($548 | 0) <= 30) {
        if (($_pre_i98 >>> ($548 >>> 0) | 0) != 0) {
         break;
        }
       }
       $_0 = +($sign_0 | 0) * +($_pre_i98 >>> 0 >>> 0) * +(HEAP32[6848 + ($522 - 10 << 2) >> 2] | 0);
       STACKTOP = sp;
       return +$_0;
      }
     } while (0);
     $562 = ($522 | 0) % 9 | 0;
     if (($562 | 0) == 0) {
      $a_2_ph266_i = 0;
      $z_1_ph265_i = $k_3_i;
      $e2_0_ph_i = 0;
      $rp_2_ph264_i = $522;
     } else {
      $567 = ($522 | 0) > -1 ? $562 : $562 + 9 | 0;
      $570 = HEAP32[6848 + (8 - $567 << 2) >> 2] | 0;
      do {
       if (($k_3_i | 0) == 0) {
        $z_0_i = 0;
        $a_0_lcssa387_i = 0;
        $rp_0_lcssa388_i = $522;
       } else {
        $572 = 1e9 / ($570 | 0) | 0;
        $rp_0286_i = $522;
        $a_0287_i = 0;
        $k_4288_i = 0;
        $carry_0289_i = 0;
        while (1) {
         $573 = $x_i + ($k_4288_i << 2) | 0;
         $574 = HEAP32[$573 >> 2] | 0;
         $577 = (($574 >>> 0) / ($570 >>> 0) | 0) + $carry_0289_i | 0;
         HEAP32[$573 >> 2] = $577;
         $578 = Math_imul(($574 >>> 0) % ($570 >>> 0) | 0, $572) | 0;
         $581 = $k_4288_i + 1 | 0;
         if (($k_4288_i | 0) == ($a_0287_i | 0) & ($577 | 0) == 0) {
          $a_1_i = $581 & 127;
          $rp_1_i99 = $rp_0286_i - 9 | 0;
         } else {
          $a_1_i = $a_0287_i;
          $rp_1_i99 = $rp_0286_i;
         }
         if (($581 | 0) == ($k_3_i | 0)) {
          break;
         } else {
          $rp_0286_i = $rp_1_i99;
          $a_0287_i = $a_1_i;
          $k_4288_i = $581;
          $carry_0289_i = $578;
         }
        }
        if (($578 | 0) == 0) {
         $z_0_i = $k_3_i;
         $a_0_lcssa387_i = $a_1_i;
         $rp_0_lcssa388_i = $rp_1_i99;
         break;
        }
        HEAP32[$x_i + ($k_3_i << 2) >> 2] = $578;
        $z_0_i = $k_3_i + 1 | 0;
        $a_0_lcssa387_i = $a_1_i;
        $rp_0_lcssa388_i = $rp_1_i99;
       }
      } while (0);
      $a_2_ph266_i = $a_0_lcssa387_i;
      $z_1_ph265_i = $z_0_i;
      $e2_0_ph_i = 0;
      $rp_2_ph264_i = 9 - $567 + $rp_0_lcssa388_i | 0;
     }
     L317 : while (1) {
      $593 = $x_i + ($a_2_ph266_i << 2) | 0;
      if (($rp_2_ph264_i | 0) < 18) {
       $z_1_us_i = $z_1_ph265_i;
       $e2_0_us_i = $e2_0_ph_i;
       while (1) {
        $carry1_0_us_i = 0;
        $k_5_in_us_i = $z_1_us_i + 127 | 0;
        $z_2_us_i = $z_1_us_i;
        while (1) {
         $k_5_us_i = $k_5_in_us_i & 127;
         $597 = $x_i + ($k_5_us_i << 2) | 0;
         $599$0 = HEAP32[$597 >> 2] | 0;
         $602$0 = _i64Add($599$0 << 29 | 0 >>> 3, 0 << 29 | $599$0 >>> 3, $carry1_0_us_i, 0) | 0;
         $602$1 = tempRet0;
         $$etemp$15$1 = 0;
         if ($602$1 >>> 0 > $$etemp$15$1 >>> 0 | $602$1 >>> 0 == $$etemp$15$1 >>> 0 & $602$0 >>> 0 > 1e9 >>> 0) {
          $605$0 = ___udivdi3($602$0, $602$1, 1e9, 0) | 0;
          $607$0 = ___uremdi3($602$0, $602$1, 1e9, 0) | 0;
          $carry1_1_us_i = $605$0;
          $_sink_off0_us_i = $607$0;
         } else {
          $carry1_1_us_i = 0;
          $_sink_off0_us_i = $602$0;
         }
         HEAP32[$597 >> 2] = $_sink_off0_us_i;
         $612 = ($k_5_us_i | 0) == ($a_2_ph266_i | 0);
         if (($k_5_us_i | 0) != ($z_2_us_i + 127 & 127 | 0) | $612) {
          $z_3_us_i = $z_2_us_i;
         } else {
          $z_3_us_i = ($_sink_off0_us_i | 0) == 0 ? $k_5_us_i : $z_2_us_i;
         }
         if ($612) {
          break;
         } else {
          $carry1_0_us_i = $carry1_1_us_i;
          $k_5_in_us_i = $k_5_us_i - 1 | 0;
          $z_2_us_i = $z_3_us_i;
         }
        }
        $618 = $e2_0_us_i - 29 | 0;
        if (($carry1_1_us_i | 0) == 0) {
         $z_1_us_i = $z_3_us_i;
         $e2_0_us_i = $618;
        } else {
         $_lcssa269_i = $618;
         $z_3_lcssa_lcssa_i = $z_3_us_i;
         $carry1_1_lcssa_lcssa_i = $carry1_1_us_i;
         break;
        }
       }
      } else {
       if (($rp_2_ph264_i | 0) == 18) {
        $z_1_us271_i = $z_1_ph265_i;
        $e2_0_us270_i = $e2_0_ph_i;
       } else {
        $a_3_ph_i = $a_2_ph266_i;
        $z_5_ph_i = $z_1_ph265_i;
        $e2_1_ph_i = $e2_0_ph_i;
        $rp_3_ph259_i = $rp_2_ph264_i;
        break;
       }
       while (1) {
        if ((HEAP32[$593 >> 2] | 0) >>> 0 >= 9007199 >>> 0) {
         $a_3_ph_i = $a_2_ph266_i;
         $z_5_ph_i = $z_1_us271_i;
         $e2_1_ph_i = $e2_0_us270_i;
         $rp_3_ph259_i = 18;
         break L317;
        }
        $carry1_0_us275_i = 0;
        $k_5_in_us274_i = $z_1_us271_i + 127 | 0;
        $z_2_us273_i = $z_1_us271_i;
        while (1) {
         $k_5_us276_i = $k_5_in_us274_i & 127;
         $624 = $x_i + ($k_5_us276_i << 2) | 0;
         $626$0 = HEAP32[$624 >> 2] | 0;
         $629$0 = _i64Add($626$0 << 29 | 0 >>> 3, 0 << 29 | $626$0 >>> 3, $carry1_0_us275_i, 0) | 0;
         $629$1 = tempRet0;
         $$etemp$18$1 = 0;
         if ($629$1 >>> 0 > $$etemp$18$1 >>> 0 | $629$1 >>> 0 == $$etemp$18$1 >>> 0 & $629$0 >>> 0 > 1e9 >>> 0) {
          $632$0 = ___udivdi3($629$0, $629$1, 1e9, 0) | 0;
          $634$0 = ___uremdi3($629$0, $629$1, 1e9, 0) | 0;
          $carry1_1_us280_i = $632$0;
          $_sink_off0_us279_i = $634$0;
         } else {
          $carry1_1_us280_i = 0;
          $_sink_off0_us279_i = $629$0;
         }
         HEAP32[$624 >> 2] = $_sink_off0_us279_i;
         $639 = ($k_5_us276_i | 0) == ($a_2_ph266_i | 0);
         if (($k_5_us276_i | 0) != ($z_2_us273_i + 127 & 127 | 0) | $639) {
          $z_3_us283_i = $z_2_us273_i;
         } else {
          $z_3_us283_i = ($_sink_off0_us279_i | 0) == 0 ? $k_5_us276_i : $z_2_us273_i;
         }
         if ($639) {
          break;
         } else {
          $carry1_0_us275_i = $carry1_1_us280_i;
          $k_5_in_us274_i = $k_5_us276_i - 1 | 0;
          $z_2_us273_i = $z_3_us283_i;
         }
        }
        $645 = $e2_0_us270_i - 29 | 0;
        if (($carry1_1_us280_i | 0) == 0) {
         $z_1_us271_i = $z_3_us283_i;
         $e2_0_us270_i = $645;
        } else {
         $_lcssa269_i = $645;
         $z_3_lcssa_lcssa_i = $z_3_us283_i;
         $carry1_1_lcssa_lcssa_i = $carry1_1_us280_i;
         break;
        }
       }
      }
      $649 = $a_2_ph266_i + 127 & 127;
      if (($649 | 0) == ($z_3_lcssa_lcssa_i | 0)) {
       $653 = $z_3_lcssa_lcssa_i + 127 & 127;
       $658 = $x_i + (($z_3_lcssa_lcssa_i + 126 & 127) << 2) | 0;
       HEAP32[$658 >> 2] = HEAP32[$658 >> 2] | HEAP32[$x_i + ($653 << 2) >> 2];
       $z_4_i = $653;
      } else {
       $z_4_i = $z_3_lcssa_lcssa_i;
      }
      HEAP32[$x_i + ($649 << 2) >> 2] = $carry1_1_lcssa_lcssa_i;
      $a_2_ph266_i = $649;
      $z_1_ph265_i = $z_4_i;
      $e2_0_ph_i = $_lcssa269_i;
      $rp_2_ph264_i = $rp_2_ph264_i + 9 | 0;
     }
     L348 : while (1) {
      $706 = $z_5_ph_i + 1 & 127;
      $709 = $x_i + (($z_5_ph_i + 127 & 127) << 2) | 0;
      $a_3_i_ph = $a_3_ph_i;
      $e2_1_i_ph = $e2_1_ph_i;
      $rp_3_i_ph = $rp_3_ph259_i;
      while (1) {
       $710 = ($rp_3_i_ph | 0) == 18;
       $_240_i = ($rp_3_i_ph | 0) > 27 ? 9 : 1;
       $a_3_i = $a_3_i_ph;
       $e2_1_i = $e2_1_i_ph;
       while (1) {
        $i_0_i = 0;
        while (1) {
         if (($i_0_i | 0) >= 2) {
          $i_1_i = $i_0_i;
          break;
         }
         $667 = $i_0_i + $a_3_i & 127;
         if (($667 | 0) == ($z_5_ph_i | 0)) {
          $i_1_i = 2;
          break;
         }
         $671 = HEAP32[$x_i + ($667 << 2) >> 2] | 0;
         $673 = HEAP32[6840 + ($i_0_i << 2) >> 2] | 0;
         if ($671 >>> 0 < $673 >>> 0) {
          $i_1_i = 2;
          break;
         }
         if ($671 >>> 0 > $673 >>> 0) {
          $i_1_i = $i_0_i;
          break;
         } else {
          $i_0_i = $i_0_i + 1 | 0;
         }
        }
        if (($i_1_i | 0) == 2 & $710) {
         break L348;
        }
        $683 = $_240_i + $e2_1_i | 0;
        if (($a_3_i | 0) == ($z_5_ph_i | 0)) {
         $a_3_i = $z_5_ph_i;
         $e2_1_i = $683;
        } else {
         break;
        }
       }
       $686 = (1 << $_240_i) - 1 | 0;
       $687 = 1e9 >>> ($_240_i >>> 0);
       $rp_4252_i = $rp_3_i_ph;
       $a_4253_i = $a_3_i;
       $k_6254_i = $a_3_i;
       $carry3_0256_i = 0;
       do {
        $688 = $x_i + ($k_6254_i << 2) | 0;
        $689 = HEAP32[$688 >> 2] | 0;
        $692 = ($689 >>> ($_240_i >>> 0)) + $carry3_0256_i | 0;
        HEAP32[$688 >> 2] = $692;
        $carry3_0256_i = Math_imul($689 & $686, $687) | 0;
        $or_cond241_i = ($k_6254_i | 0) == ($a_4253_i | 0) & ($692 | 0) == 0;
        $k_6254_i = $k_6254_i + 1 & 127;
        $rp_4252_i = $or_cond241_i ? $rp_4252_i - 9 | 0 : $rp_4252_i;
        $a_4253_i = $or_cond241_i ? $k_6254_i : $a_4253_i;
       } while (($k_6254_i | 0) != ($z_5_ph_i | 0));
       if (($carry3_0256_i | 0) == 0) {
        $a_3_i_ph = $a_4253_i;
        $e2_1_i_ph = $683;
        $rp_3_i_ph = $rp_4252_i;
        continue;
       }
       if (($706 | 0) != ($a_4253_i | 0)) {
        break;
       }
       HEAP32[$709 >> 2] = HEAP32[$709 >> 2] | 1;
       $a_3_i_ph = $a_4253_i;
       $e2_1_i_ph = $683;
       $rp_3_i_ph = $rp_4252_i;
      }
      HEAP32[$x_i + ($z_5_ph_i << 2) >> 2] = $carry3_0256_i;
      $a_3_ph_i = $a_4253_i;
      $z_5_ph_i = $706;
      $e2_1_ph_i = $683;
      $rp_3_ph259_i = $rp_4252_i;
     }
     $680 = $a_3_i & 127;
     if (($680 | 0) == ($z_5_ph_i | 0)) {
      HEAP32[$x_i + ($706 - 1 << 2) >> 2] = 0;
      $z_7_i = $706;
     } else {
      $z_7_i = $z_5_ph_i;
     }
     $721 = +((HEAP32[$x_i + ($680 << 2) >> 2] | 0) >>> 0 >>> 0);
     $723 = $a_3_i + 1 & 127;
     if (($723 | 0) == ($z_7_i | 0)) {
      $804 = $z_7_i + 1 & 127;
      HEAP32[$x_i + ($804 - 1 << 2) >> 2] = 0;
      $z_7_1_i = $804;
     } else {
      $z_7_1_i = $z_7_i;
     }
     $813 = +($sign_0 | 0);
     $814 = $813 * ($721 * 1.0e9 + +((HEAP32[$x_i + ($723 << 2) >> 2] | 0) >>> 0 >>> 0));
     $815 = $e2_1_i + 53 | 0;
     $816 = $815 - $emin_0_ph | 0;
     if (($816 | 0) < ($bits_0_ph | 0)) {
      $_1236_i = ($816 | 0) < 0 ? 0 : $816;
      $denormal_0_i = 1;
     } else {
      $_1236_i = $bits_0_ph;
      $denormal_0_i = 0;
     }
     if (($_1236_i | 0) < 53) {
      $732 = +_copysign(+(+_scalbn(1.0, 105 - $_1236_i | 0)), +$814);
      $735 = +_fmod(+$814, +(+_scalbn(1.0, 53 - $_1236_i | 0)));
      $bias_0_i = $732;
      $frac_0_i = $735;
      $y_1_i103 = $732 + ($814 - $735);
     } else {
      $bias_0_i = 0.0;
      $frac_0_i = 0.0;
      $y_1_i103 = $814;
     }
     $740 = $a_3_i + 2 & 127;
     do {
      if (($740 | 0) == ($z_7_1_i | 0)) {
       $frac_2_i = $frac_0_i;
      } else {
       $744 = HEAP32[$x_i + ($740 << 2) >> 2] | 0;
       do {
        if ($744 >>> 0 < 5e8 >>> 0) {
         if (($744 | 0) == 0) {
          if (($a_3_i + 3 & 127 | 0) == ($z_7_1_i | 0)) {
           $frac_1_i = $frac_0_i;
           break;
          }
         }
         $frac_1_i = $813 * .25 + $frac_0_i;
        } else {
         if ($744 >>> 0 > 5e8 >>> 0) {
          $frac_1_i = $813 * .75 + $frac_0_i;
          break;
         }
         if (($a_3_i + 3 & 127 | 0) == ($z_7_1_i | 0)) {
          $frac_1_i = $813 * .5 + $frac_0_i;
          break;
         } else {
          $frac_1_i = $813 * .75 + $frac_0_i;
          break;
         }
        }
       } while (0);
       if ((53 - $_1236_i | 0) <= 1) {
        $frac_2_i = $frac_1_i;
        break;
       }
       if (+_fmod(+$frac_1_i, +1.0) != 0.0) {
        $frac_2_i = $frac_1_i;
        break;
       }
       $frac_2_i = $frac_1_i + 1.0;
      }
     } while (0);
     $780 = $y_1_i103 + $frac_2_i - $bias_0_i;
     do {
      if (($815 & 2147483647 | 0) > (-2 - $sum_i | 0)) {
       if (+Math_abs(+$780) < 9007199254740992.0) {
        $y_2_i104 = $780;
        $denormal_2_i = $denormal_0_i;
        $e2_2_i = $e2_1_i;
       } else {
        $y_2_i104 = $780 * .5;
        $denormal_2_i = ($denormal_0_i | 0) != 0 & ($_1236_i | 0) == ($816 | 0) ? 0 : $denormal_0_i;
        $e2_2_i = $e2_1_i + 1 | 0;
       }
       if (($e2_2_i + 53 | 0) <= ($372 | 0)) {
        if (!(($denormal_2_i | 0) != 0 & $frac_2_i != 0.0)) {
         $y_3_i = $y_2_i104;
         $e2_3_i = $e2_2_i;
         break;
        }
       }
       HEAP32[(___errno_location() | 0) >> 2] = 34;
       $y_3_i = $y_2_i104;
       $e2_3_i = $e2_2_i;
      } else {
       $y_3_i = $780;
       $e2_3_i = $e2_1_i;
      }
     } while (0);
     $_0 = +_scalbnl($y_3_i, $e2_3_i);
     STACKTOP = sp;
     return +$_0;
    }
   } while (0);
   if ((HEAP32[$4 >> 2] | 0) != 0) {
    HEAP32[$3 >> 2] = (HEAP32[$3 >> 2] | 0) - 1;
   }
   HEAP32[(___errno_location() | 0) >> 2] = 22;
   ___shlim($f, 0);
   $_0 = 0.0;
   STACKTOP = sp;
   return +$_0;
  }
 } while (0);
 do {
  if ((label | 0) == 23) {
   $62 = (HEAP32[$4 >> 2] | 0) == 0;
   if (!$62) {
    HEAP32[$3 >> 2] = (HEAP32[$3 >> 2] | 0) - 1;
   }
   if ($i_0_lcssa >>> 0 < 4 >>> 0 | ($pok | 0) == 0 | $62) {
    break;
   } else {
    $i_1146 = $i_0_lcssa;
   }
   do {
    HEAP32[$3 >> 2] = (HEAP32[$3 >> 2] | 0) - 1;
    $i_1146 = $i_1146 - 1 | 0;
   } while ($i_1146 >>> 0 > 3 >>> 0);
  }
 } while (0);
 $_0 = +($sign_0 | 0) * Infinity;
 STACKTOP = sp;
 return +$_0;
}
function __Z15TranslateClauseP10TranslatorP8_IO_FILEPKvPiPPc($tr, $f_text, $vp_input, $tone_out, $voice_change) {
 $tr = $tr | 0;
 $f_text = $f_text | 0;
 $vp_input = $vp_input | 0;
 $tone_out = $tone_out | 0;
 $voice_change = $voice_change | 0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $ix = 0, $c = 0, $cc = 0, $source_index = 0, $prev_source_index = 0, $source_index_word = 0, $prev_in = 0, $prev_out = 0, $prev_out2 = 0, $prev_in_save = 0, $next_in = 0, $next_in_nbytes = 0, $char_inserted = 0, $clause_pause = 0, $pre_pause_add = 0, $word_mark = 0, $all_upper_case = 0, $finished = 0, $single_quoted = 0, $phoneme_mode = 0, $dict_flags = 0, $word_flags = 0, $next_word_flags = 0, $new_sentence2 = 0, $embedded_count = 0, $letter_count = 0, $space_inserted = 0, $syllable_marked = 0, $decimal_sep_count = 0, $word = 0, $p = 0, $j = 0, $k = 0, $n_digits = 0, $charix_top = 0, $charix = 0, $words = 0, $word_count = 0, $sbuf = 0, $terminator = 0, $tone = 0, $tone2 = 0, $srcix = 0, $next2_in = 0, $nx = 0, $c_temp = 0, $pn = 0, $pw = 0, $nw = 0, $number_buf = 0, $num_wtab = 0, $p2 = 0, $14 = 0, $206 = 0, $231 = 0, $275 = 0, $574 = 0, $579 = 0, $638 = 0, $765 = 0, $795 = 0, $800 = 0, $833 = 0, $985 = 0, $990 = 0, $1040 = 0, $1061 = 0, $1080 = 0, $1085 = 0, $1101 = 0, $1136 = 0, $1177 = 0, $1227 = 0, $1232 = 0, $1268 = 0, $1275 = 0, $1293 = 0, $1299 = 0, $1328 = 0, $1354 = 0, $1357 = 0, $1453 = 0, $1462 = 0, $1465 = 0, $1479 = 0, $1495 = 0, $1498 = 0, $1501 = 0, $1513 = 0, $1516 = 0, $1535 = 0, $1537 = 0, $1550 = 0, $1560 = 0, $1563 = 0, $1571 = 0, $1590 = 0, $1600 = 0, $1700 = 0, $1766 = 0, $1811 = 0, label = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 6848 | 0;
 $cc = sp | 0;
 $source_index = sp + 8 | 0;
 $prev_in = sp + 16 | 0;
 $prev_out = sp + 24 | 0;
 $next_in = sp + 32 | 0;
 $char_inserted = sp + 40 | 0;
 $word_flags = sp + 48 | 0;
 $charix_top = sp + 56 | 0;
 $charix = sp + 64 | 0;
 $words = sp + 1672 | 0;
 $sbuf = sp + 5272 | 0;
 $tone2 = sp + 6072 | 0;
 $next2_in = sp + 6080 | 0;
 $c_temp = sp + 6088 | 0;
 $number_buf = sp + 6096 | 0;
 $num_wtab = sp + 6248 | 0;
 $2 = $tr;
 $3 = $f_text;
 $4 = $vp_input;
 $5 = $tone_out;
 $6 = $voice_change;
 HEAP32[$source_index >> 2] = 0;
 $prev_source_index = 0;
 $source_index_word = 0;
 HEAP32[$prev_out >> 2] = 32;
 $prev_in_save = 0;
 HEAP32[$char_inserted >> 2] = 0;
 $pre_pause_add = 0;
 $word_mark = 0;
 $all_upper_case = 1;
 $phoneme_mode = 0;
 $dict_flags = 0;
 $embedded_count = 0;
 $letter_count = 0;
 $space_inserted = 0;
 $syllable_marked = 0;
 $decimal_sep_count = 0;
 HEAP32[$charix_top >> 2] = 0;
 $word_count = 0;
 if (($2 | 0) == 0) {
  $1 = 0;
  $1811 = $1;
  STACKTOP = sp;
  return $1811 | 0;
 }
 HEAP32[19444] = $4;
 HEAP32[19442] = $4;
 HEAP32[30924] = 0;
 HEAP32[28514] = 0;
 HEAP32[9546] = 0;
 HEAP32[28402] = 0;
 $14 = HEAP32[22654] | 0;
 HEAP32[22658] = $14;
 if (($14 | 0) < 0) {
  HEAP32[22658] = 0;
 }
 HEAP32[22656] = (HEAP32[22650] | 0) + 1;
 $ix = 0;
 while (1) {
  if (($ix | 0) >= 800) {
   break;
  }
  HEAP16[$charix + ($ix << 1) >> 1] = 0;
  $ix = $ix + 1 | 0;
 }
 $terminator = __Z10ReadClauseP10TranslatorP8_IO_FILEPcPsPiiS5_S3_($2, $3, 107832, $charix | 0, $charix_top, 800, $tone2, 104040) | 0;
 do {
  if ((HEAP32[19598] | 0) != 0) {
   if ((HEAP32[19580] & 4 | 0) == 0) {
    break;
   }
   _fprintf(HEAP32[19598] | 0, 17680, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $terminator, tempVarArgs) | 0) | 0;
   STACKTOP = tempVarArgs;
   $p = 107832;
   while (1) {
    if ((HEAP8[$p] | 0) == 0) {
     break;
    }
    _fputc(HEAP8[$p] | 0, HEAP32[19598] | 0) | 0;
    $p = $p + 1 | 0;
   }
   _fprintf(HEAP32[19598] | 0, 17208, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 7 & -8, HEAP32[tempVarArgs >> 2] = 0, tempVarArgs) | 0) | 0;
   STACKTOP = tempVarArgs;
   _fflush(HEAP32[19598] | 0) | 0;
  }
 } while (0);
 $p = 107832;
 HEAP16[$charix + ((HEAP32[$charix_top >> 2] | 0) + 1 << 1) >> 1] = 0;
 HEAP16[$charix + ((HEAP32[$charix_top >> 2] | 0) + 2 << 1) >> 1] = 32767;
 HEAP16[$charix + ((HEAP32[$charix_top >> 2] | 0) + 3 << 1) >> 1] = 0;
 $clause_pause = ($terminator & 4095) * 10 | 0;
 if (($terminator & 8388608 | 0) != 0) {
  $clause_pause = $clause_pause << 5;
 }
 $tone = $terminator >> 12 & 7;
 if ((HEAP32[$tone2 >> 2] | 0) != 0) {
  $tone = HEAP32[$tone2 >> 2] | 0;
 }
 $p = 107832;
 while (1) {
  if ((HEAP8[$p] | 0) == 0) {
   break;
  }
  if ((__Z8isspace2j(HEAP8[$p] | 0) | 0) == 0) {
   label = 23;
   break;
  }
  $p = $p + 1 | 0;
 }
 if ((label | 0) == 23) {}
 if ((HEAP8[$p] | 0) == 0) {
  $clause_pause = $clause_pause - (HEAP32[28426] | 0) | 0;
  if (($clause_pause | 0) < 0) {
   $clause_pause = 0;
  }
  if ((HEAP32[19550] | 0) != 0) {
   $terminator = $terminator | 524288;
  }
  HEAP32[28426] = (HEAP32[28426] | 0) + $clause_pause;
  $new_sentence2 = 0;
 } else {
  HEAP32[28426] = $clause_pause;
  $new_sentence2 = HEAP32[19550] | 0;
 }
 HEAP32[$2 + 8360 >> 2] = $terminator;
 if (($new_sentence2 | 0) != 0) {
  HEAP32[22652] = (HEAP32[22652] | 0) + 1;
  if ((HEAP32[9454] | 0) > 0) {
   HEAP32[9454] = (HEAP32[9454] | 0) - 1;
   if ((HEAP32[9454] | 0) == 0) {
    HEAP32[9450] = 0;
   }
  }
 }
 _memset(68328, 0, 8) | 0;
 HEAP8[68330] = 10;
 HEAP32[19564] = 1;
 HEAP32[$2 + 8320 >> 2] = 0;
 HEAP32[$2 + 8344 >> 2] = 0;
 HEAP32[$2 + 8304 >> 2] = 0;
 HEAP32[$2 + 8316 >> 2] = 0;
 HEAP32[$2 + 8308 >> 2] = 0;
 HEAP32[$2 + 8312 >> 2] = 0;
 HEAP32[$2 + 400 >> 2] = 0;
 HEAP32[$2 + 8348 >> 2] = 0;
 HEAP32[$2 + 8352 >> 2] = 0;
 HEAP32[$2 + 8356 >> 2] = 0;
 $word_count = 0;
 $single_quoted = 0;
 HEAP32[$word_flags >> 2] = 0;
 $next_word_flags = 0;
 HEAP8[$sbuf | 0] = 0;
 HEAP8[$sbuf + 1 | 0] = 32;
 HEAP8[$sbuf + 2 | 0] = 32;
 $ix = 3;
 HEAP32[$prev_in >> 2] = 32;
 HEAP16[$words + 4 >> 1] = $ix;
 HEAP32[$words >> 2] = 0;
 $finished = 0;
 $j = 0;
 while (1) {
  if ((HEAP16[$charix + ($j << 1) >> 1] | 0) > 0) {
   break;
  }
  $j = $j + 1 | 0;
 }
 HEAP16[$words + 8 >> 1] = HEAP16[$charix + ($j << 1) >> 1] | 0;
 $k = 0;
 while (1) {
  if ((HEAP16[$charix + ($j << 1) >> 1] | 0) == 0) {
   break;
  }
  $206 = $j;
  $j = $206 + 1 | 0;
  if ((HEAP16[$charix + ($206 << 1) >> 1] | 0) != -1) {
   $k = $k + 1 | 0;
  }
 }
 HEAP8[$words + 10 | 0] = $k;
 L67 : while (1) {
  do {
   if (($finished | 0) != 0) {
    $231 = 0;
   } else {
    if (($ix | 0) >= 800) {
     $231 = 0;
     break;
    }
    $231 = (HEAP32[19564] | 0) < 996;
   }
  } while (0);
  if (!$231) {
   break;
  }
  $prev_out2 = HEAP32[$prev_out >> 2] | 0;
  __Z8utf8_in2PiPKci($prev_out, $sbuf + ($ix - 1) | 0, 1) | 0;
  do {
   if ((HEAP8[$2 + 270 | 0] | 0) != 0) {
    if ((__Z9IsDigit09j(HEAP32[$prev_out >> 2] | 0) | 0) == 0) {
     break;
    }
    if ((__Z7IsAlphaj($prev_out2) | 0) == 0) {
     break;
    }
    HEAP32[$prev_out >> 2] = 97;
   }
  } while (0);
  if (($prev_in_save | 0) != 0) {
   HEAP32[$prev_in >> 2] = $prev_in_save;
   $prev_in_save = 0;
  } else {
   if ((HEAP32[$source_index >> 2] | 0) >>> 0 > 0 >>> 0) {
    __Z8utf8_in2PiPKci($prev_in, 107832 + ((HEAP32[$source_index >> 2] | 0) - 1) | 0, 1) | 0;
   }
  }
  $prev_source_index = HEAP32[$source_index >> 2] | 0;
  if ((HEAP32[$char_inserted >> 2] | 0) != 0) {
   $c = HEAP32[$char_inserted >> 2] | 0;
   HEAP32[$char_inserted >> 2] = 0;
  } else {
   $275 = __Z7utf8_inPiPKc($cc, 107832 + (HEAP32[$source_index >> 2] | 0) | 0) | 0;
   HEAP32[$source_index >> 2] = (HEAP32[$source_index >> 2] | 0) + $275;
   $c = HEAP32[$cc >> 2] | 0;
  }
  $next_in_nbytes = __Z7utf8_inPiPKc($next_in, 107832 + (HEAP32[$source_index >> 2] | 0) | 0) | 0;
  if (($c | 0) == 0) {
   $finished = 1;
   $c = 32;
  }
  if (($c | 0) == 1) {
   label = 69;
  } else {
   if (($c | 0) == (HEAP8[6880] | 0)) {
    label = 69;
   }
  }
  if ((label | 0) == 69) {
   label = 0;
   $srcix = (HEAP32[$source_index >> 2] | 0) - 1 | 0;
   if ((HEAP32[$prev_in >> 2] | 0) == 32) {
    $embedded_count = $embedded_count + (__ZL15EmbeddedCommandPj($source_index) | 0) | 0;
    $prev_in_save = HEAP32[$prev_in >> 2] | 0;
    _memset(107832 + $srcix | 0, 32, (HEAP32[$source_index >> 2] | 0) - $srcix | 0) | 0;
    HEAP32[$source_index >> 2] = $srcix;
    continue;
   }
   $c = 32;
   $prev_in_save = $c;
   HEAP32[$source_index >> 2] = (HEAP32[$source_index >> 2] | 0) - 1;
  }
  do {
   if ((HEAP32[28504] | 0) == 36) {
    if (($c | 0) == 32) {
     break;
    }
    do {
     if ((HEAP32[$prev_in >> 2] | 0) == 32) {
      if ((HEAP32[$next_in >> 2] | 0) != 32) {
       break;
      }
      HEAP32[28504] = 20;
     }
    } while (0);
    $c = __Z9towlower2j($c) | 0;
   }
  } while (0);
  if (($phoneme_mode | 0) != 0) {
   $all_upper_case = 8;
   do {
    if (($c | 0) == 93) {
     if ((HEAP32[$next_in >> 2] | 0) != 93) {
      break;
     }
     $phoneme_mode = 0;
     HEAP32[$source_index >> 2] = (HEAP32[$source_index >> 2] | 0) + 1;
     $c = 32;
    }
   } while (0);
  } else {
   if ((HEAP32[28504] & 240 | 0) == 64) {
    if ((_iswdigit($c) | 0) != 0) {
     HEAP32[28400] = (HEAP32[28400] | 0) + 1;
     if ((HEAP32[28400] | 0) > (HEAP32[28504] & 15 | 0)) {
      $c = 32;
      $space_inserted = 1;
      HEAP32[28400] = 0;
     }
    } else {
     HEAP32[28400] = 0;
     if ((_iswdigit(HEAP32[$prev_out >> 2] | 0) | 0) != 0) {
      $c = 32;
      $space_inserted = 1;
     }
    }
   } else {
    if ((HEAP32[28504] & 16 | 0) == 0) {
     do {
      if (($c | 0) == 146) {
       label = 98;
      } else {
       if (($c | 0) == 180) {
        label = 98;
        break;
       }
       if (($c | 0) == 8217) {
        label = 98;
        break;
       }
       if (($c | 0) == 8242) {
        label = 98;
       }
      }
     } while (0);
     if ((label | 0) == 98) {
      label = 0;
      $c = 39;
     }
     if (($c | 0) == 8216) {
      label = 101;
     } else {
      if (($c | 0) == 63) {
       label = 101;
      }
     }
     do {
      if ((label | 0) == 101) {
       label = 0;
       if ((__Z7IsAlphaj(HEAP32[$prev_out >> 2] | 0) | 0) == 0) {
        break;
       }
       if ((__Z7IsAlphaj(HEAP32[$next_in >> 2] | 0) | 0) == 0) {
        break;
       }
       $c = 39;
      }
     } while (0);
     if (($c | 0) == 1328) {
      $c = 32;
      HEAP32[$word_flags >> 2] = HEAP32[$word_flags >> 2] | 1024;
     }
     if (($c | 0) == 1367) {
      $c = 32;
      HEAP32[$word_flags >> 2] = HEAP32[$word_flags >> 2] | 131072;
     }
     $c = __ZL13TranslateCharP10TranslatorPcijjPiS2_($2, 107832 + (HEAP32[$source_index >> 2] | 0) | 0, HEAP32[$prev_in >> 2] | 0, $c, HEAP32[$next_in >> 2] | 0, $char_inserted, $word_flags) | 0;
     if (($c | 0) == 8) {
      continue;
     }
     if ((HEAP32[$char_inserted >> 2] | 0) != 0) {
      HEAP32[$next_in >> 2] = HEAP32[$char_inserted >> 2];
     }
     do {
      if ((__Z7IsAlphaj($c) | 0) == 0) {
       if ((__Z7IsSpacej($c) | 0) != 0) {
        break;
       }
       if ((_wcschr(HEAP32[$2 + 456 >> 2] | 0, $c) | 0) != 0) {
        break;
       }
       if ((__Z7IsAlphaj(HEAP32[$prev_out >> 2] | 0) | 0) != 0) {
        do {
         if ((HEAP8[$2 + 270 | 0] | 0) != 0) {
          if ((__Z9IsDigit09j($c) | 0) == 0) {
           label = 120;
           break;
          }
          if ((__Z9IsDigit09j(HEAP32[$next_in >> 2] | 0) | 0) != 0) {
           label = 120;
           break;
          }
         } else {
          label = 120;
         }
        } while (0);
        if ((label | 0) == 120) {
         label = 0;
         $c = 32;
         $space_inserted = 1;
        }
       }
      }
     } while (0);
     if ((_iswdigit(HEAP32[$prev_out >> 2] | 0) | 0) != 0) {
      do {
       if ((_iswdigit($c) | 0) == 0) {
        if (($c | 0) == 46) {
         break;
        }
        if (($c | 0) == 44) {
         break;
        }
        if (($c | 0) == 32) {
         break;
        }
        $c = 32;
        $space_inserted = 1;
       }
      } while (0);
     } else {
      if ((HEAP32[$prev_in >> 2] | 0) != 44) {
       $decimal_sep_count = 0;
      }
     }
     L175 : do {
      if (($c | 0) == 91) {
       do {
        if ((HEAP32[$next_in >> 2] | 0) != 2) {
         if ((HEAP32[$next_in >> 2] | 0) == 91) {
          if ((HEAP32[19534] | 0) != 0) {
           break;
          }
         }
         break L175;
        }
       } while (0);
       $phoneme_mode = 8;
       HEAP32[$source_index >> 2] = (HEAP32[$source_index >> 2] | 0) + 1;
       continue L67;
      }
     } while (0);
     if ((__Z7IsAlphaj($c) | 0) != 0) {
      do {
       if ((__Z7IsAlphaj(HEAP32[$prev_out >> 2] | 0) | 0) != 0) {
        if ((HEAP8[$2 + 271 | 0] | 0) == 0) {
         break;
        }
        if (($c | 0) > 12352) {
         label = 144;
         break;
        }
        if ((HEAP32[$prev_out >> 2] | 0) > 12352) {
         label = 144;
        }
       } else {
        label = 144;
       }
      } while (0);
      if ((label | 0) == 144) {
       label = 0;
       if ((_wcschr(HEAP32[$2 + 456 >> 2] | 0, HEAP32[$prev_out >> 2] | 0) | 0) == 0) {
        $letter_count = 0;
       }
       do {
        if ((HEAP32[$prev_out >> 2] | 0) != 32) {
         if ((_wcschr(HEAP32[$2 + 456 >> 2] | 0, HEAP32[$prev_out >> 2] | 0) | 0) != 0) {
          label = 151;
          break;
         }
         $c = 32;
         $space_inserted = 1;
         if ((__Z9IsBracketi(HEAP32[$prev_out >> 2] | 0) | 0) == 0) {
          $next_word_flags = $next_word_flags | 256;
         }
        } else {
         label = 151;
        }
       } while (0);
       if ((label | 0) == 151) {
        label = 0;
        if ((__Z9iswupper2i($c) | 0) != 0) {
         HEAP32[$word_flags >> 2] = HEAP32[$word_flags >> 2] | 2;
        }
        do {
         if ((HEAP32[$prev_out >> 2] | 0) == 32) {
          if ((_iswdigit(HEAP8[$sbuf + ($ix - 2) | 0] | 0) | 0) == 0) {
           break;
          }
          if ((_iswdigit(HEAP32[$prev_in >> 2] | 0) | 0) != 0) {
           break;
          }
          $574 = $ix;
          $ix = $574 + 1 | 0;
          HEAP8[$sbuf + $574 | 0] = 32;
          $579 = $words + ($word_count * 12 | 0) + 4 | 0;
          HEAP16[$579 >> 1] = (HEAP16[$579 >> 1] | 0) + 1;
         }
        } while (0);
       }
      }
      if (($c | 0) != 32) {
       $letter_count = $letter_count + 1 | 0;
       if ((HEAP32[$2 + 720 >> 2] | 0) > 0) {
        if (($c | 0) < 592) {
         if ((HEAP32[$prev_out >> 2] | 0) >= (HEAP32[$2 + 720 >> 2] | 0)) {
          label = 166;
         } else {
          label = 163;
         }
        } else {
         label = 163;
        }
        do {
         if ((label | 0) == 163) {
          label = 0;
          if (($c | 0) < (HEAP32[$2 + 720 >> 2] | 0)) {
           break;
          }
          if (($letter_count | 0) <= 1) {
           break;
          }
          if ((HEAP32[$prev_out >> 2] | 0) < 592) {
           label = 166;
          }
         }
        } while (0);
        if ((label | 0) == 166) {
         label = 0;
         if ((__Z7IsAlphaj(HEAP32[$prev_out >> 2] | 0) | 0) != 0) {
          $c = 32;
          $space_inserted = 1;
          HEAP32[$word_flags >> 2] = HEAP32[$word_flags >> 2] | 16384;
          $next_word_flags = $next_word_flags | 128;
         }
        }
       }
      }
      if ((__Z9iswupper2i($c) | 0) != 0) {
       $c = __Z9towlower2j($c) | 0;
       $638 = HEAP32[$2 + 76 >> 2] | 0;
       $j = $638;
       if (($638 | 0) > 0) {
        do {
         if (($j | 0) == 2) {
          if (($syllable_marked | 0) != 0) {
           break;
          }
          HEAP32[$char_inserted >> 2] = $c;
          $c = 712;
          $syllable_marked = 1;
         }
        } while (0);
       } else {
        if ((__Z9iswlower2i(HEAP32[$prev_in >> 2] | 0) | 0) != 0) {
         if ((__Z15UpperCaseInWordP10TranslatorPci($2, $sbuf + $ix | 0, $c) | 0) == 1) {
          $c = __Z9towlower2j($c) | 0;
         } else {
          $c = 32;
          $space_inserted = 1;
          $prev_in_save = $c;
         }
        } else {
         do {
          if (($c | 0) != 32) {
           if ((__Z9iswupper2i(HEAP32[$prev_in >> 2] | 0) | 0) == 0) {
            break;
           }
           if ((__Z9iswlower2i(HEAP32[$next_in >> 2] | 0) | 0) == 0) {
            break;
           }
           __Z7utf8_inPiPKc($next2_in, 107832 + ((HEAP32[$source_index >> 2] | 0) + $next_in_nbytes) | 0) | 0;
           do {
            if ((HEAP32[$2 + 324 >> 2] | 0) == 28268) {
             if (($letter_count | 0) != 2) {
              label = 190;
              break;
             }
             if (($c | 0) != 106) {
              label = 190;
              break;
             }
             if ((HEAP32[$prev_in >> 2] | 0) != 73) {
              label = 190;
              break;
             }
            } else {
             label = 190;
            }
           } while (0);
           if ((label | 0) == 190) {
            label = 0;
            if ((__Z7IsAlphaj(HEAP32[$next2_in >> 2] | 0) | 0) != 0) {
             $c = 32;
             $space_inserted = 1;
             $prev_in_save = $c;
             $next_word_flags = $next_word_flags | 256;
            }
           }
          }
         } while (0);
        }
       }
      } else {
       do {
        if (($all_upper_case | 0) != 0) {
         if (($letter_count | 0) <= 2) {
          label = 206;
          break;
         }
         do {
          if (($c | 0) == 115) {
           if ((HEAP32[$next_in >> 2] | 0) != 32) {
            label = 204;
            break;
           }
           $c = 32;
           $all_upper_case = $all_upper_case | 4;
           if ((HEAP8[$sbuf + ($ix - 1) | 0] | 0) == 39) {
            HEAP8[$sbuf + ($ix - 1) | 0] = 32;
           }
          } else {
           label = 204;
          }
         } while (0);
         if ((label | 0) == 204) {
          label = 0;
          $all_upper_case = 0;
         }
        } else {
         label = 206;
        }
       } while (0);
       if ((label | 0) == 206) {
        label = 0;
        $all_upper_case = 0;
       }
      }
     } else {
      if (($c | 0) == 45) {
       do {
        if ((__Z7IsSpacej(HEAP32[$prev_in >> 2] | 0) | 0) != 0) {
         label = 218;
        } else {
         if ((__Z7IsAlphaj(HEAP32[$next_in >> 2] | 0) | 0) == 0) {
          label = 218;
          break;
         }
         if ((HEAP32[$prev_out >> 2] | 0) != 32) {
          $c = 32;
          $space_inserted = 1;
         } else {
          HEAP32[$word_flags >> 2] = HEAP32[$word_flags >> 2] | 128;
          if (($word_count | 0) > 0) {
           $765 = $words + (($word_count - 1 | 0) * 12 | 0) | 0;
           HEAP32[$765 >> 2] = HEAP32[$765 >> 2] | 16384;
          }
          $c = 32;
         }
        }
       } while (0);
       if ((label | 0) == 218) {
        label = 0;
        do {
         if ((HEAP32[$prev_in >> 2] | 0) == 32) {
          if ((HEAP32[$next_in >> 2] | 0) != 32) {
           label = 221;
           break;
          }
          $c = 32;
          $pre_pause_add = 4;
         } else {
          label = 221;
         }
        } while (0);
        if ((label | 0) == 221) {
         label = 0;
         if ((HEAP32[$next_in >> 2] | 0) == 45) {
          HEAP32[$source_index >> 2] = (HEAP32[$source_index >> 2] | 0) + 1;
          $c = 32;
          $pre_pause_add = 4;
         } else {
          do {
           if ((HEAP32[$prev_out >> 2] | 0) == 32) {
            if ((__Z7IsAlphaj($prev_out2) | 0) == 0) {
             break;
            }
            if ((__Z7IsAlphaj(HEAP32[$prev_in >> 2] | 0) | 0) != 0) {
             break;
            }
            $795 = $ix;
            $ix = $795 + 1 | 0;
            HEAP8[$sbuf + $795 | 0] = 32;
            $800 = $words + ($word_count * 12 | 0) + 4 | 0;
            HEAP16[$800 >> 1] = (HEAP16[$800 >> 1] | 0) + 1;
           }
          } while (0);
         }
        }
       }
      } else {
       if (($c | 0) == 46) {
        if ((HEAP32[$prev_out >> 2] | 0) == 46) {
         $c = 32;
         $space_inserted = 1;
        } else {
         do {
          if (($word_count | 0) > 0) {
           if ((HEAP32[$words + (($word_count - 1 | 0) * 12 | 0) >> 2] & 256 | 0) != 0) {
            break;
           }
           if ((__Z7IsAlphaj(HEAP32[$prev_in >> 2] | 0) | 0) == 0) {
            break;
           }
           $833 = $words + (($word_count - 1 | 0) * 12 | 0) | 0;
           HEAP32[$833 >> 2] = HEAP32[$833 >> 2] | 65536;
           if ((__Z7IsSpacej(HEAP32[$next_in >> 2] | 0) | 0) != 0) {
            label = 239;
           } else {
            if ((HEAP32[$next_in >> 2] | 0) == 45) {
             label = 239;
            }
           }
           if ((label | 0) == 239) {
            label = 0;
            $c = 32;
           }
          }
         } while (0);
        }
       } else {
        if (($c | 0) == 39) {
         if ((HEAP32[$prev_in >> 2] | 0) == 46) {
          label = 246;
         } else {
          if ((_iswalnum(HEAP32[$prev_in >> 2] | 0) | 0) != 0) {
           label = 246;
          } else {
           label = 248;
          }
         }
         do {
          if ((label | 0) == 246) {
           label = 0;
           if ((__Z7IsAlphaj(HEAP32[$next_in >> 2] | 0) | 0) == 0) {
            label = 248;
            break;
           }
           $single_quoted = 0;
          }
         } while (0);
         if ((label | 0) == 248) {
          label = 0;
          do {
           if ((HEAP32[$2 + 104 >> 2] & 1 | 0) != 0) {
            if ((__Z7IsAlphaj(HEAP32[$next_in >> 2] | 0) | 0) == 0) {
             label = 251;
             break;
            }
            $single_quoted = 0;
           } else {
            label = 251;
           }
          } while (0);
          if ((label | 0) == 251) {
           label = 0;
           do {
            if ((HEAP32[$2 + 104 >> 2] & 2 | 0) != 0) {
             if ((__Z7IsAlphaj(HEAP32[$prev_in >> 2] | 0) | 0) == 0) {
              label = 254;
              break;
             }
             $single_quoted = 0;
            } else {
             label = 254;
            }
           } while (0);
           if ((label | 0) == 254) {
            label = 0;
            do {
             if ((_wcschr(HEAP32[$2 + 452 >> 2] | 0, HEAP32[$prev_in >> 2] | 0) | 0) != 0) {
              if (($prev_out2 | 0) != 32) {
               label = 259;
               break;
              }
              $single_quoted = 0;
              if ((HEAP32[$next_in >> 2] | 0) == 32) {
               HEAP32[$source_index >> 2] = (HEAP32[$source_index >> 2] | 0) + 1;
              }
             } else {
              label = 259;
             }
            } while (0);
            if ((label | 0) == 259) {
             label = 0;
             do {
              if ((HEAP32[$prev_out >> 2] | 0) == 115) {
               if (($single_quoted | 0) != 0) {
                label = 262;
                break;
               }
               $c = 32;
              } else {
               label = 262;
              }
             } while (0);
             if ((label | 0) == 262) {
              label = 0;
              if ((__Z7IsSpacej(HEAP32[$prev_out >> 2] | 0) | 0) != 0) {
               $single_quoted = 1;
              } else {
               $single_quoted = 0;
              }
              $pre_pause_add = 4;
              $c = 32;
             }
            }
           }
          }
         }
        } else {
         if ((__Z11lookupwcharPKti(24984, $c) | 0) != 0) {
          $c = 32;
         } else {
          if ((_iswdigit($c) | 0) != 0) {
           do {
            if ((HEAP8[$2 + 270 | 0] | 0) != 0) {
             if ((__Z7IsAlphaj(HEAP32[$prev_out >> 2] | 0) | 0) == 0) {
              label = 278;
              break;
             }
             if ((__Z7IsDigitj(HEAP32[$next_in >> 2] | 0) | 0) != 0) {
              label = 278;
              break;
             }
            } else {
             label = 278;
            }
           } while (0);
           if ((label | 0) == 278) {
            label = 0;
            do {
             if ((HEAP32[$prev_out >> 2] | 0) != 32) {
              if ((_iswdigit(HEAP32[$prev_out >> 2] | 0) | 0) != 0) {
               label = 286;
               break;
              }
              do {
               if ((HEAP32[$prev_out >> 2] | 0) != (HEAP32[$2 + 224 >> 2] | 0)) {
                label = 283;
               } else {
                if (($decimal_sep_count | 0) > 0) {
                 if ((HEAP32[$2 + 224 >> 2] | 0) == 44) {
                  label = 283;
                  break;
                 }
                }
                $decimal_sep_count = 1;
               }
              } while (0);
              if ((label | 0) == 283) {
               label = 0;
               $c = 32;
               $space_inserted = 1;
              }
             } else {
              label = 286;
             }
            } while (0);
            if ((label | 0) == 286) {
             label = 0;
             do {
              if ((HEAP32[$prev_out >> 2] | 0) == 32) {
               if ((__Z7IsAlphaj($prev_out2) | 0) == 0) {
                break;
               }
               if ((__Z7IsAlphaj(HEAP32[$prev_in >> 2] | 0) | 0) != 0) {
                break;
               }
               $985 = $ix;
               $ix = $985 + 1 | 0;
               HEAP8[$sbuf + $985 | 0] = 32;
               $990 = $words + ($word_count * 12 | 0) + 4 | 0;
               HEAP16[$990 >> 1] = (HEAP16[$990 >> 1] | 0) + 1;
              }
             } while (0);
            }
           }
          }
         }
        }
       }
      }
     }
    }
   }
  }
  if ((__Z7IsSpacej($c) | 0) != 0) {
   if ((HEAP32[$prev_out >> 2] | 0) == 32) {
    HEAP32[$word_flags >> 2] = HEAP32[$word_flags >> 2] | 262144;
    continue;
   }
   if ((HEAP32[$cc >> 2] | 0) == 9) {
    label = 306;
   } else {
    if ((HEAP32[$cc >> 2] | 0) == 10) {
     label = 306;
    }
   }
   if ((label | 0) == 306) {
    label = 0;
    $next_word_flags = $next_word_flags | 262144;
   }
   if (($space_inserted | 0) != 0) {
    $j = 0;
    $k = (HEAP32[$source_index >> 2] | 0) - 1 | 0;
    while (1) {
     if (($k | 0) >= ($source_index_word | 0)) {
      $1040 = (HEAP16[$charix + ($k << 1) >> 1] | 0) != 0;
     } else {
      $1040 = 0;
     }
     if (!$1040) {
      break;
     }
     if ((HEAP16[$charix + ($k << 1) >> 1] | 0) > 0) {
      $j = $j + 1 | 0;
     }
     $k = $k - 1 | 0;
    }
    HEAP8[$words + ($word_count * 12 | 0) + 10 | 0] = $j;
   }
   $source_index_word = HEAP32[$source_index >> 2] | 0;
   $1061 = $ix;
   $ix = $1061 + 1 | 0;
   HEAP8[$sbuf + $1061 | 0] = 32;
   do {
    if (($word_count | 0) < 299) {
     if (($ix | 0) <= (HEAPU16[$words + ($word_count * 12 | 0) + 4 >> 1] | 0)) {
      break;
     }
     if (($embedded_count | 0) > 0) {
      $1080 = 78480 + ((HEAP32[30924] | 0) - 1 << 2) | 0;
      HEAP32[$1080 >> 2] = HEAP32[$1080 >> 2] | 128;
      $1085 = $words + ($word_count * 12 | 0) | 0;
      HEAP32[$1085 >> 2] = HEAP32[$1085 >> 2] | 64;
      $embedded_count = 0;
     }
     HEAP8[$words + ($word_count * 12 | 0) + 6 | 0] = HEAP32[9546];
     $1101 = $words + ($word_count * 12 | 0) | 0;
     HEAP32[$1101 >> 2] = HEAP32[$1101 >> 2] | ($all_upper_case | HEAP32[$word_flags >> 2] | HEAP32[28470]);
     HEAP8[$words + ($word_count * 12 | 0) + 7 | 0] = $word_mark;
     if ((HEAP32[9546] | 0) > 0) {
      $j = $ix;
      while (1) {
       if (($j | 0) <= (HEAPU16[$words + ($word_count * 12 | 0) + 4 >> 1] | 0)) {
        break;
       }
       HEAP8[$sbuf + $j | 0] = HEAP8[$sbuf + ($j - 1) | 0] | 0;
       $j = $j - 1 | 0;
      }
      HEAP8[$sbuf + $j | 0] = 32;
      $1136 = $words + ($word_count * 12 | 0) + 4 | 0;
      HEAP16[$1136 >> 1] = (HEAP16[$1136 >> 1] | 0) + 1;
      $ix = $ix + 1 | 0;
     }
     $word_count = $word_count + 1 | 0;
     HEAP16[$words + ($word_count * 12 | 0) + 4 >> 1] = $ix;
     HEAP32[$words + ($word_count * 12 | 0) >> 2] = 0;
     $j = HEAP32[$source_index >> 2] | 0;
     while (1) {
      if ((HEAP16[$charix + ($j << 1) >> 1] | 0) > 0) {
       break;
      }
      $j = $j + 1 | 0;
     }
     HEAP16[$words + ($word_count * 12 | 0) + 8 >> 1] = HEAP16[$charix + ($j << 1) >> 1] | 0;
     $k = 0;
     while (1) {
      if ((HEAP16[$charix + ($j << 1) >> 1] | 0) == 0) {
       break;
      }
      $1177 = $j;
      $j = $1177 + 1 | 0;
      if ((HEAP16[$charix + ($1177 << 1) >> 1] | 0) != -1) {
       $k = $k + 1 | 0;
      }
     }
     HEAP8[$words + ($word_count * 12 | 0) + 10 | 0] = $k;
     HEAP32[$word_flags >> 2] = $next_word_flags;
     $next_word_flags = 0;
     HEAP32[9546] = 0;
     $word_mark = 0;
     $all_upper_case = 1;
     $syllable_marked = 0;
    }
   } while (0);
   if (($space_inserted | 0) != 0) {
    HEAP32[$source_index >> 2] = $prev_source_index;
    HEAP32[$char_inserted >> 2] = 0;
    $space_inserted = 0;
   }
  } else {
   if (($ix | 0) < 796) {
    $ix = $ix + (__Z8utf8_outjPc($c, $sbuf + $ix | 0) | 0) | 0;
   }
  }
  if (($pre_pause_add | 0) > (HEAP32[9546] | 0)) {
   HEAP32[9546] = $pre_pause_add;
  }
  $pre_pause_add = 0;
 }
 do {
  if (($word_count | 0) == 0) {
   if (($embedded_count | 0) <= 0) {
    break;
   }
   $1227 = 78480 + ((HEAP32[30924] | 0) - 1 << 2) | 0;
   HEAP32[$1227 >> 2] = HEAP32[$1227 >> 2] | 128;
   $1232 = $words + ($word_count * 12 | 0) | 0;
   HEAP32[$1232 >> 2] = HEAP32[$1232 >> 2] | 64;
   $word_count = 1;
  }
 } while (0);
 HEAP32[$2 + 8324 >> 2] = $sbuf + ($ix - 1);
 HEAP8[$sbuf + $ix | 0] = 0;
 HEAP8[$words + 6 | 0] = 0;
 HEAP8[$words + ($word_count * 12 | 0) + 6 | 0] = 8;
 if (($word_count | 0) > 0) {
  $ix = $word_count - 1 | 0;
  while (1) {
   if (($ix | 0) > 0) {
    $1268 = (__Z9IsBracketi(HEAP8[$sbuf + (HEAPU16[$words + ($ix * 12 | 0) + 4 >> 1] | 0) | 0] | 0) | 0) != 0;
   } else {
    $1268 = 0;
   }
   if (!$1268) {
    break;
   }
   $ix = $ix - 1 | 0;
  }
  $1275 = $words + ($ix * 12 | 0) | 0;
  HEAP32[$1275 >> 2] = HEAP32[$1275 >> 2] | 16;
  do {
   if (($terminator & 4194304 | 0) != 0) {
    if ((HEAP32[$words + (($word_count - 1 | 0) * 12 | 0) >> 2] & 256 | 0) != 0) {
     break;
    }
    $1293 = $words + (($word_count - 1 | 0) * 12 | 0) | 0;
    HEAP32[$1293 >> 2] = HEAP32[$1293 >> 2] | 65536;
   }
  } while (0);
 }
 $1299 = $words | 0;
 HEAP32[$1299 >> 2] = HEAP32[$1299 >> 2] | 512;
 $ix = 0;
 while (1) {
  if (($ix | 0) >= ($word_count | 0)) {
   break;
  }
  HEAP32[22650] = (HEAP32[22650] | 0) + 1;
  if ((HEAP32[9452] | 0) > 0) {
   HEAP32[9452] = (HEAP32[9452] | 0) - 1;
   if ((HEAP32[9452] | 0) == 0) {
    HEAP32[9450] = 0;
   }
  }
  if ((HEAP32[9450] | 0) != 0) {} else {
   HEAP32[22648] = 0;
   $1328 = $sbuf + (HEAPU16[$words + ($ix * 12 | 0) + 4 >> 1] | 0) | 0;
   $pw = $1328;
   $word = $1328;
   do {
    if ((_iswdigit(HEAP8[$word | 0] | 0) | 0) != 0) {
     if ((HEAP32[$2 + 208 >> 2] | 0) == 1227133512) {
      break;
     }
     $pn = $number_buf | 0;
     while (1) {
      if ($pn >>> 0 >= ($number_buf + 130 | 0) >>> 0) {
       break;
      }
      if ((_iswdigit(HEAP8[$pw] | 0) | 0) != 0) {
       $1354 = $pw;
       $pw = $1354 + 1 | 0;
       $1357 = $pn;
       $pn = $1357 + 1 | 0;
       HEAP8[$1357] = HEAP8[$1354] | 0;
      } else {
       if ((HEAP8[$pw] | 0) != (HEAP32[$2 + 220 >> 2] | 0)) {
        label = 378;
        break;
       }
       if ((HEAP8[$pw + 1 | 0] | 0) != 32) {
        label = 378;
        break;
       }
       if ((_iswdigit(HEAP8[$pw + 2 | 0] | 0) | 0) == 0) {
        label = 378;
        break;
       }
       if ((HEAP8[$pw + 3 | 0] | 0) == 32) {
        label = 378;
        break;
       }
       if ((HEAP8[$pw + 4 | 0] | 0) == 32) {
        label = 378;
        break;
       }
       $pw = $pw + 2 | 0;
       $ix = $ix + 1 | 0;
      }
     }
     if ((label | 0) == 378) {
      label = 0;
      $nx = $pw - $word | 0;
      _memset($word | 0, 32, $nx | 0) | 0;
      $nx = $pn - $number_buf | 0;
      _memcpy($word | 0, $number_buf | 0, $nx) | 0;
     }
     $pw = $word;
    }
   } while (0);
   $n_digits = 0;
   while (1) {
    if ((_iswdigit(HEAP8[$word + $n_digits | 0] | 0) | 0) == 0) {
     break;
    }
    $n_digits = $n_digits + 1 | 0;
   }
   if (($n_digits | 0) > 4) {
    HEAP8[$number_buf | 0] = 32;
    $pn = $number_buf + 1 | 0;
    $nx = $n_digits;
    $nw = 0;
    if (($n_digits | 0) > (HEAP32[$2 + 228 >> 2] | 0)) {
     label = 389;
    } else {
     if ((HEAP8[$word | 0] | 0) == 48) {
      label = 389;
     }
    }
    if ((label | 0) == 389) {
     label = 0;
     $1453 = $words + ($ix * 12 | 0) | 0;
     HEAP32[$1453 >> 2] = HEAP32[$1453 >> 2] | 524288;
    }
    while (1) {
     if ($pn >>> 0 >= ($number_buf + 130 | 0) >>> 0) {
      break;
     }
     $1462 = $pw;
     $pw = $1462 + 1 | 0;
     $1465 = HEAP8[$1462] | 0;
     $c = $1465;
     if ((__Z9IsDigit09j($1465) | 0) == 0) {
      if (($c | 0) != (HEAP32[$2 + 224 >> 2] | 0)) {
       label = 394;
       break;
      }
     }
     $1479 = $pn;
     $pn = $1479 + 1 | 0;
     HEAP8[$1479] = $c;
     $nx = $nx - 1 | 0;
     do {
      if (($nx | 0) > 0) {
       if ((HEAP32[$2 + 208 >> 2] & 1 << $nx | 0) == 0) {
        break;
       }
       $1495 = $nw;
       $nw = $1495 + 1 | 0;
       $1498 = $num_wtab + ($1495 * 12 | 0) | 0;
       $1501 = $words + ($ix * 12 | 0) | 0;
       HEAP32[$1498 >> 2] = HEAP32[$1501 >> 2];
       HEAP32[$1498 + 4 >> 2] = HEAP32[$1501 + 4 >> 2];
       HEAP32[$1498 + 8 >> 2] = HEAP32[$1501 + 8 >> 2];
       if ((HEAP32[$2 + 220 >> 2] | 0) != 32) {
        $1513 = $pn;
        $pn = $1513 + 1 | 0;
        HEAP8[$1513] = HEAP32[$2 + 220 >> 2];
       }
       $1516 = $pn;
       $pn = $1516 + 1 | 0;
       HEAP8[$1516] = 32;
       if ((HEAP32[$words + ($ix * 12 | 0) >> 2] & 524288 | 0) == 0) {
        if ((HEAP32[$2 + 208 >> 2] & 1 << $nx - 1 | 0) != 0) {
         $1535 = $pn;
         $pn = $1535 + 1 | 0;
         HEAP8[$1535] = 48;
         $1537 = $pn;
         $pn = $1537 + 1 | 0;
         HEAP8[$1537] = 48;
        }
        if ((HEAP32[$2 + 208 >> 2] & 1 << $nx - 2 | 0) != 0) {
         $1550 = $pn;
         $pn = $1550 + 1 | 0;
         HEAP8[$1550] = 48;
        }
       }
      }
     } while (0);
    }
    if ((label | 0) == 394) {
     label = 0;
    }
    $pw = $pw - 1 | 0;
    $1560 = $num_wtab + ($nw * 12 | 0) | 0;
    $1563 = $words + ($ix * 12 | 0) | 0;
    HEAP32[$1560 >> 2] = HEAP32[$1563 >> 2];
    HEAP32[$1560 + 4 >> 2] = HEAP32[$1563 + 4 >> 2];
    HEAP32[$1560 + 8 >> 2] = HEAP32[$1563 + 8 >> 2];
    HEAP32[$1560 + 12 >> 2] = HEAP32[$1563 + 12 >> 2];
    HEAP32[$1560 + 16 >> 2] = HEAP32[$1563 + 16 >> 2];
    HEAP32[$1560 + 20 >> 2] = HEAP32[$1563 + 20 >> 2];
    $j = 1;
    while (1) {
     if (($j | 0) > ($nw | 0)) {
      break;
     }
     $1571 = $num_wtab + ($j * 12 | 0) | 0;
     HEAP32[$1571 >> 2] = HEAP32[$1571 >> 2] & -262209;
     $j = $j + 1 | 0;
    }
    _memcpy($pn | 0, $pw | 0, 16) | 0;
    HEAP8[$pn + 16 | 0] = 0;
    $nw = 0;
    $pw = $number_buf + 1 | 0;
    while (1) {
     if ($pw >>> 0 >= $pn >>> 0) {
      break;
     }
     $1590 = $nw;
     $nw = $1590 + 1 | 0;
     $dict_flags = __ZL14TranslateWord2P10TranslatorPcP8WORD_TABii($2, $pw, $num_wtab + ($1590 * 12 | 0) | 0, HEAPU8[$words + ($ix * 12 | 0) + 6 | 0] | 0, 0) | 0;
     do {
      $1600 = $pw;
      $pw = $1600 + 1 | 0;
     } while ((HEAP8[$1600] | 0) != 32);
     HEAP8[$words + ($ix * 12 | 0) + 6 | 0] = 0;
    }
   } else {
    HEAP32[9546] = 0;
    $dict_flags = __ZL14TranslateWord2P10TranslatorPcP8WORD_TABii($2, $word, $words + ($ix * 12 | 0) | 0, HEAPU8[$words + ($ix * 12 | 0) + 6 | 0] | 0, HEAPU8[$words + (($ix + 1 | 0) * 12 | 0) + 6 | 0] | 0) | 0;
    if ((HEAP32[9546] | 0) > (HEAPU8[$words + (($ix + 1 | 0) * 12 | 0) + 6 | 0] | 0)) {
     HEAP8[$words + (($ix + 1 | 0) * 12 | 0) + 6 | 0] = HEAP32[9546];
     HEAP32[9546] = 0;
    }
    if (($dict_flags & 4096 | 0) != 0) {
     $pw = $word;
     while (1) {
      if ((HEAP8[$pw] | 0) == 32) {
       break;
      }
      _memset($number_buf | 0, 32, 9) | 0;
      $nx = __Z7utf8_inPiPKc($c_temp, $pw) | 0;
      _memcpy($number_buf + 2 | 0, $pw | 0, $nx) | 0;
      __ZL14TranslateWord2P10TranslatorPcP8WORD_TABii($2, $number_buf + 2 | 0, $words + ($ix * 12 | 0) | 0, 0, 0) | 0;
      $pw = $pw + $nx | 0;
     }
    }
    do {
     if (($dict_flags & 50331648 | 0) != 0) {
      if (($ix | 0) != ($word_count - 1 - (HEAP32[22626] | 0) | 0)) {
       break;
      }
      if (($terminator & 4194304 | 0) == 0) {
       break;
      }
      $clause_pause = 10;
      $tone = 4;
     }
    } while (0);
   }
   if (($dict_flags & 128 | 0) != 0) {
    while (1) {
     if ((HEAP32[22626] | 0) <= 0) {
      break;
     }
     $1700 = $words + (($ix + (HEAP32[22626] | 0) | 0) * 12 | 0) | 0;
     HEAP32[$1700 >> 2] = HEAP32[$1700 >> 2] | 1048576;
     HEAP32[22626] = (HEAP32[22626] | 0) - 1;
    }
   }
  }
  $ix = $ix + 1 | 0;
 }
 if ((HEAP32[28514] | 0) < (HEAP32[30924] | 0)) {
  __Z16Word_EmbeddedCmdv();
 }
 $ix = 0;
 while (1) {
  if (($ix | 0) >= 2) {
   break;
  }
  $p2 = 68328 + ((HEAP32[19564] | 0) + $ix << 3) | 0;
  HEAP8[$p2 + 2 | 0] = 9;
  HEAP8[$p2 + 3 | 0] = 0;
  HEAP16[$p2 + 4 >> 1] = HEAP32[$source_index >> 2];
  HEAP16[$p2 >> 1] = 0;
  $ix = $ix + 1 | 0;
 }
 HEAP32[19564] = (HEAP32[19564] | 0) + 2;
 if ((HEAP32[22650] | 0) == 0) {
  $clause_pause = 0;
 }
 do {
  if ((__Z3Eofv() | 0) != 0) {
   if (($word_count | 0) != 0) {
    if ((HEAP32[19544] | 0) != 0) {
     break;
    }
   }
   $clause_pause = 10;
  }
 } while (0);
 __Z15MakePhonemeListP10Translatorii($2, $clause_pause, $new_sentence2);
 HEAP32[17072] = 0;
 HEAP16[34142] = 1;
 if (($embedded_count | 0) != 0) {
  HEAP16[44280 + (((HEAP32[19562] | 0) - 2 | 0) * 24 | 0) >> 1] = 2;
  $1766 = 78480 + ((HEAP32[30924] | 0) - 1 << 2) | 0;
  HEAP32[$1766 >> 2] = HEAP32[$1766 >> 2] | 128;
  HEAP32[78480 + (HEAP32[30924] << 2) >> 2] = 128;
 }
 HEAP32[28422] = $clause_pause;
 if (($5 | 0) != 0) {
  HEAP32[$5 >> 2] = $tone;
 }
 HEAP32[19550] = 0;
 if (($terminator & 524288 | 0) != 0) {
  HEAP32[19550] = 1;
 }
 if (($6 | 0) != 0) {
  if (($terminator & 131072 | 0) != 0) {
   HEAP32[$6 >> 2] = 104040;
  } else {
   HEAP32[$6 >> 2] = 0;
  }
 }
 do {
  if ((__Z3Eofv() | 0) == 0) {
   if (($4 | 0) == 0) {
    break;
   }
   if ((HEAP32[19538] | 0) == 3) {
    $1 = HEAP32[19442] | 0;
    $1811 = $1;
    STACKTOP = sp;
    return $1811 | 0;
   } else {
    $1 = HEAP32[19444] | 0;
    $1811 = $1;
    STACKTOP = sp;
    return $1811 | 0;
   }
  }
 } while (0);
 $1 = 0;
 $1811 = $1;
 STACKTOP = sp;
 return $1811 | 0;
}
function __Z13TranslateWordP10TranslatorPciP8WORD_TABS1_($tr, $word_start, $next_pause, $wtab, $word_out) {
 $tr = $tr | 0;
 $word_start = $word_start | 0;
 $next_pause = $next_pause | 0;
 $wtab = $wtab | 0;
 $word_out = $word_out | 0;
 var $1 = 0, $2 = 0, $3 = 0, $5 = 0, $6 = 0, $word1 = 0, $word_length = 0, $ix = 0, $p = 0, $pfix = 0, $n_chars = 0, $dictionary_flags = 0, $dictionary_flags2 = 0, $end_type = 0, $end_type1 = 0, $prefix_type = 0, $prefix_stress = 0, $wordx = 0, $phonemes = 0, $phonemes2 = 0, $prefix_phonemes = 0, $unpron_phonemes = 0, $end_phonemes = 0, $end_phonemes2 = 0, $word_copy = 0, $word_copy2 = 0, $word_copy_length = 0, $prefix_chars = 0, $found = 0, $end_flags = 0, $c_temp = 0, $first_char = 0, $last_char = 0, $add_plural_suffix = 0, $prefix_flags = 0, $more_suffixes = 0, $confirm_prefix = 0, $spell_word = 0, $stress_bits = 0, $emphasize_allcaps = 0, $wflags = 0, $wmark = 0, $was_unpronouncable = 0, $loopcount = 0, $wtab_null = 0, $posn = 0, $non_initial = 0, $length = 0, $wc = 0, $end2 = 0, $end_phonemes21 = 0, $wordpf = 0, $prefix_phonemes2 = 0, $p2 = 0, $57 = 0, $60 = 0, $93 = 0, $352 = 0, $355 = 0, $464 = 0, $466 = 0, $483 = 0, $577 = 0, $597 = 0, $632 = 0, $706 = 0, $709 = 0, $867 = 0, $913 = 0, $1007 = 0, $1028 = 0, $1193 = 0, $1219 = 0, $1334 = 0, $1344 = 0, $1354 = 0, $1364 = 0, $1384 = 0, $1406 = 0, $1415 = 0, label = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1976 | 0;
 $word1 = sp | 0;
 $dictionary_flags = sp + 8 | 0;
 $dictionary_flags2 = sp + 16 | 0;
 $wordx = sp + 24 | 0;
 $phonemes = sp + 32 | 0;
 $phonemes2 = sp + 232 | 0;
 $prefix_phonemes = sp + 432 | 0;
 $unpron_phonemes = sp + 632 | 0;
 $end_phonemes = sp + 832 | 0;
 $end_phonemes2 = sp + 1032 | 0;
 $word_copy = sp + 1232 | 0;
 $word_copy2 = sp + 1392 | 0;
 $prefix_chars = sp + 1552 | 0;
 $c_temp = sp + 1624 | 0;
 $first_char = sp + 1632 | 0;
 $last_char = sp + 1640 | 0;
 $wtab_null = sp + 1648 | 0;
 $wc = sp + 1744 | 0;
 $end_phonemes21 = sp + 1752 | 0;
 $wordpf = sp + 1952 | 0;
 $prefix_phonemes2 = sp + 1960 | 0;
 $2 = $tr;
 $3 = $word_start;
 $5 = $wtab;
 $6 = $word_out;
 $end_type = 0;
 $end_type1 = 0;
 $prefix_type = 0;
 $found = 0;
 HEAP32[$last_char >> 2] = 0;
 $add_plural_suffix = 0;
 $prefix_flags = 0;
 $emphasize_allcaps = 0;
 $was_unpronouncable = 0;
 if (($5 | 0) == 0) {
  _memset($wtab_null | 0, 0, 96) | 0;
  $5 = $wtab_null | 0;
 }
 $wflags = HEAP32[$5 >> 2] | 0;
 $wmark = HEAPU8[$5 + 7 | 0] | 0;
 HEAP32[$dictionary_flags >> 2] = 0;
 HEAP32[$dictionary_flags + 4 >> 2] = 0;
 HEAP32[$dictionary_flags2 >> 2] = 0;
 HEAP32[$dictionary_flags2 + 4 >> 2] = 0;
 HEAP32[22626] = 0;
 HEAP8[$phonemes | 0] = 0;
 HEAP8[$unpron_phonemes | 0] = 0;
 HEAP8[$prefix_phonemes | 0] = 0;
 HEAP8[$end_phonemes | 0] = 0;
 if ((HEAP32[$2 + 808 >> 2] | 0) == 0) {
  HEAP8[33176] = 0;
  $1 = 0;
  $1415 = $1;
  STACKTOP = sp;
  return $1415 | 0;
 }
 HEAP32[$word1 >> 2] = $3;
 if ((HEAP8[HEAP32[$word1 >> 2] | 0] | 0) == 32) {
  HEAP32[$word1 >> 2] = (HEAP32[$word1 >> 2] | 0) + 1;
 }
 HEAP32[$wordx >> 2] = HEAP32[$word1 >> 2];
 __Z7utf8_inPiPKc($first_char, HEAP32[$wordx >> 2] | 0) | 0;
 $word_length = 0;
 while (1) {
  if ((HEAP8[HEAP32[$wordx >> 2] | 0] | 0) != 0) {
   $57 = (HEAP8[HEAP32[$wordx >> 2] | 0] | 0) != 32;
  } else {
   $57 = 0;
  }
  if (!$57) {
   break;
  }
  $60 = __Z7utf8_inPiPKc($last_char, HEAP32[$wordx >> 2] | 0) | 0;
  HEAP32[$wordx >> 2] = (HEAP32[$wordx >> 2] | 0) + $60;
  $word_length = $word_length + 1 | 0;
 }
 $word_copy_length = (HEAP32[$wordx >> 2] | 0) - $3 | 0;
 if (($word_copy_length | 0) >= 160) {
  $word_copy_length = 159;
 }
 _memcpy($word_copy2 | 0, $3 | 0, $word_copy_length) | 0;
 $spell_word = 0;
 do {
  if (($word_length | 0) == 1) {
   if (($wflags & 4194304 | 0) == 0) {
    break;
   }
   __Z7utf8_inPiPKc($c_temp, (HEAP32[$wordx >> 2] | 0) + 1 | 0) | 0;
   if ((__Z7IsAlphaj(HEAP32[$c_temp >> 2] | 0) | 0) != 0) {
    $93 = __Z16AlphabetFromChari(HEAP32[$last_char >> 2] | 0) | 0;
    if (($93 | 0) != (__Z16AlphabetFromChari(HEAP32[$c_temp >> 2] | 0) | 0)) {
     label = 18;
    }
   } else {
    label = 18;
   }
   if ((label | 0) == 18) {
    $spell_word = 1;
   }
  }
 } while (0);
 if ((HEAP32[19464] | 0) == 36) {
  if (($word_length | 0) == 1) {
   $spell_word = 4;
  } else {
   HEAP32[$word1 >> 2] = (HEAP32[$word1 >> 2] | 0) - 1;
   HEAP8[HEAP32[$word1 >> 2] | 0] = 95;
   $found = __Z14LookupDictListP10TranslatorPPcS1_PjiP8WORD_TAB($2, $word1, $phonemes | 0, $dictionary_flags | 0, 0, $5) | 0;
  }
 }
 if ((HEAP32[19464] & 16 | 0) != 0) {
  $spell_word = HEAP32[19464] & 15;
 } else {
  if (($found | 0) == 0) {
   $found = __Z14LookupDictListP10TranslatorPPcS1_PjiP8WORD_TAB($2, $word1, $phonemes | 0, $dictionary_flags | 0, 2, $5) | 0;
  }
  do {
   if ((HEAP32[$dictionary_flags >> 2] & 1 | 0) != 0) {
    if ((HEAP8[(HEAP32[$wordx >> 2] | 0) + 1 | 0] | 0) != 46) {
     break;
    }
    HEAP8[(HEAP32[$wordx >> 2] | 0) + 1 | 0] = 32;
   }
  } while (0);
  if ((HEAP32[$dictionary_flags >> 2] & 536870912 | 0) != 0) {
   if (($6 | 0) != 0) {
    _strcpy($6 | 0, HEAP32[$word1 >> 2] | 0) | 0;
   }
   HEAP32[$first_char >> 2] = HEAP8[HEAP32[$word1 >> 2] | 0] | 0;
   $stress_bits = HEAP32[$dictionary_flags >> 2] & 127;
   $found = __Z14LookupDictListP10TranslatorPPcS1_PjiP8WORD_TAB($2, $word1, $phonemes | 0, $dictionary_flags2 | 0, 0, $5) | 0;
   if ((HEAP32[$dictionary_flags2 >> 2] | 0) != 0) {
    HEAP32[$dictionary_flags >> 2] = HEAP32[$dictionary_flags2 >> 2];
    HEAP32[$dictionary_flags + 4 >> 2] = HEAP32[$dictionary_flags2 + 4 >> 2];
    if (($stress_bits | 0) != 0) {
     HEAP32[$dictionary_flags >> 2] = HEAP32[$dictionary_flags >> 2] & -128 | $stress_bits;
    }
   }
  } else {
   do {
    if (($found | 0) == 0) {
     if ((HEAP32[$dictionary_flags >> 2] & 128 | 0) == 0) {
      break;
     }
     if ((HEAP32[$dictionary_flags >> 2] & 8192 | 0) != 0) {
      break;
     }
     HEAP32[$wordx >> 2] = HEAP32[$word1 >> 2];
     $ix = 0;
     while (1) {
      if (($ix | 0) >= (HEAP32[22626] | 0)) {
       break;
      }
      if ((HEAP8[HEAP32[$wordx >> 2] | 0] | 0) == 32) {
       HEAP8[HEAP32[$wordx >> 2] | 0] = 45;
       $ix = $ix + 1 | 0;
      }
      HEAP32[$wordx >> 2] = (HEAP32[$wordx >> 2] | 0) + 1;
     }
    }
   } while (0);
  }
  do {
   if (($word_length | 0) == 1) {
    if ((HEAP32[22626] | 0) != 0) {
     break;
    }
    if ((__ZL17CheckDottedAbbrevPcP8WORD_TAB(HEAP32[$word1 >> 2] | 0, $5) | 0) != 0) {
     HEAP32[$dictionary_flags >> 2] = 0;
     HEAP32[$dictionary_flags + 4 >> 2] = 0;
     $spell_word = 1;
     if ((HEAP32[22626] | 0) != 0) {
      HEAP32[$dictionary_flags >> 2] = 128;
     }
    }
   }
  } while (0);
  if ((HEAP8[$phonemes | 0] | 0) == 21) {
   _strcpy(33176, $phonemes | 0) | 0;
   $1 = 0;
   $1415 = $1;
   STACKTOP = sp;
   return $1415 | 0;
  }
  do {
   if (($wmark | 0) > 0) {
    if (($wmark | 0) >= 8) {
     break;
    }
    HEAP32[$dictionary_flags >> 2] = HEAP32[$dictionary_flags >> 2] & -16 | $wmark;
   }
  } while (0);
  do {
   if (($found | 0) == 0) {
    if ((HEAP32[$dictionary_flags >> 2] & 8192 | 0) == 0) {
     break;
    }
    $spell_word = 1;
   }
  } while (0);
  do {
   if (($found | 0) == 0) {
    if ((_iswdigit(HEAP32[$first_char >> 2] | 0) | 0) == 0) {
     break;
    }
    __Z6LookupP10TranslatorPKcPc($2, 15160, 33176) | 0;
    if ((HEAP8[33176] | 0) == 21) {
     $1 = 0;
     $1415 = $1;
     STACKTOP = sp;
     return $1415 | 0;
    }
    do {
     if ((HEAP32[$2 + 204 >> 2] & 32768 | 0) != 0) {
      if ((HEAP32[$5 >> 2] & 2097152 | 0) != 0) {
       break;
      }
      _sprintf(33176, 13840, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = 21, tempVarArgs) | 0) | 0;
      STACKTOP = tempVarArgs;
      $1 = 0;
      $1415 = $1;
      STACKTOP = sp;
      return $1415 | 0;
     }
    } while (0);
    $found = __Z15TranslateNumberP10TranslatorPcS1_PjP8WORD_TABi($2, HEAP32[$word1 >> 2] | 0, $phonemes | 0, $dictionary_flags | 0, $5, 0) | 0;
   }
  } while (0);
  do {
   if (($found | 0) == 0) {
    if (($wflags & 3 | 0) == 2) {
     break;
    }
    do {
     if ((HEAP32[$2 + 200 >> 2] & 16777216 | 0) != 0) {
      label = 78;
     } else {
      if ((HEAP32[$2 + 200 >> 2] & 33554432 | 0) == 0) {
       break;
      }
      if (($wflags & 1 | 0) != 0) {
       label = 78;
      }
     }
    } while (0);
    if ((label | 0) == 78) {
     if (($wflags & 16 | 0) != 0) {
      label = 80;
     } else {
      if ((HEAP32[$5 + 12 >> 2] & 256 | 0) == 0) {
       label = 80;
      }
     }
     if ((label | 0) == 80) {
      $352 = __Z14TranslateRomanP10TranslatorPcS1_P8WORD_TAB($2, HEAP32[$word1 >> 2] | 0, $phonemes | 0, $5) | 0;
      $found = $352;
      if (($352 | 0) != 0) {
       $355 = $dictionary_flags | 0;
       HEAP32[$355 >> 2] = HEAP32[$355 >> 2] | 8192;
      }
     }
    }
   }
  } while (0);
  do {
   if (($wflags & 1 | 0) != 0) {
    if (($word_length | 0) <= 1) {
     break;
    }
    if ((__Z9iswalpha2i(HEAP32[$first_char >> 2] | 0) | 0) == 0) {
     break;
    }
    do {
     if ((HEAP32[19458] & 256 | 0) != 0) {
      if ((HEAP32[$dictionary_flags >> 2] & 8192 | 0) != 0) {
       label = 91;
       break;
      }
      $emphasize_allcaps = 2048;
     } else {
      label = 91;
     }
    } while (0);
    if ((label | 0) == 91) {
     do {
      if (($found | 0) == 0) {
       if ((HEAP32[$dictionary_flags >> 2] & 128 | 0) != 0) {
        break;
       }
       if (($word_length | 0) >= 4) {
        break;
       }
       if ((HEAP32[$2 + 8340 >> 2] | 0) <= 3) {
        break;
       }
       if ((HEAP32[$2 + 8336 >> 2] | 0) > (HEAP32[$2 + 8340 >> 2] | 0)) {
        break;
       }
       $spell_word = 1;
      }
     } while (0);
    }
   }
  } while (0);
 }
 if (($spell_word | 0) > 0) {
  HEAP8[$phonemes | 0] = 0;
  $end_type = 0;
  if ((__ZL22SpeakIndividualLettersP10TranslatorPcS1_i($2, HEAP32[$word1 >> 2] | 0, $phonemes | 0, $spell_word) | 0) != 0) {
   _strcpy(33176, $phonemes | 0) | 0;
   if (($wflags & 4194304 | 0) != 0) {
    $1 = 0;
    $1415 = $1;
    STACKTOP = sp;
    return $1415 | 0;
   } else {
    $1 = HEAP32[$dictionary_flags >> 2] & 128;
    $1415 = $1;
    STACKTOP = sp;
    return $1415 | 0;
   }
  }
  if (($word_length | 0) > 1) {
   $1 = 4096;
   $1415 = $1;
   STACKTOP = sp;
   return $1415 | 0;
  }
  if ((HEAP8[$phonemes | 0] | 0) == 21) {}
  $1 = 0;
  $1415 = $1;
  STACKTOP = sp;
  return $1415 | 0;
 }
 if (($found | 0) == 0) {
  $posn = 0;
  $non_initial = 0;
  $length = 999;
  HEAP32[$wordx >> 2] = HEAP32[$word1 >> 2];
  while (1) {
   if (($length | 0) < 3) {
    if (($length | 0) > 0) {
     $466 = 1;
    } else {
     label = 114;
    }
   } else {
    label = 114;
   }
   if ((label | 0) == 114) {
    label = 0;
    if (($word_length | 0) > 1) {
     $464 = (__Z14UnpronouncableP10TranslatorPci($2, HEAP32[$wordx >> 2] | 0, $posn) | 0) != 0;
    } else {
     $464 = 0;
    }
    $466 = $464;
   }
   if (!$466) {
    break;
   }
   $was_unpronouncable = 67108864;
   $emphasize_allcaps = 0;
   if ((HEAP8[HEAP32[$wordx >> 2] | 0] | 0) == 39) {
    label = 119;
    break;
   }
   if (($posn | 0) > 0) {
    $non_initial = 1;
   }
   $483 = __Z15TranslateLetterP10TranslatorPcS1_i($2, HEAP32[$wordx >> 2] | 0, $unpron_phonemes | 0, $non_initial) | 0;
   HEAP32[$wordx >> 2] = (HEAP32[$wordx >> 2] | 0) + $483;
   $posn = $posn + 1 | 0;
   if ((HEAP8[$unpron_phonemes | 0] | 0) == 21) {
    label = 123;
    break;
   }
   $length = 0;
   while (1) {
    if ((HEAP8[(HEAP32[$wordx >> 2] | 0) + $length | 0] | 0) == 32) {
     break;
    }
    $length = $length + 1 | 0;
   }
  }
  if ((label | 0) == 119) {} else if ((label | 0) == 123) {
   _strcpy(33176, $unpron_phonemes | 0) | 0;
   if ((_strcmp($unpron_phonemes + 1 | 0, 10632) | 0) == 0) {
    $1 = 4096;
    $1415 = $1;
    STACKTOP = sp;
    return $1415 | 0;
   } else {
    $1 = 0;
    $1415 = $1;
    STACKTOP = sp;
    return $1415 | 0;
   }
  }
  __Z17SetSpellingStressP10TranslatorPcii($2, $unpron_phonemes | 0, 0, $posn);
  if ((HEAP8[HEAP32[$wordx >> 2] | 0] | 0) != 32) {
   do {
    if ((HEAP8[$unpron_phonemes | 0] | 0) != 0) {
     if ((HEAP8[HEAP32[$wordx >> 2] | 0] | 0) == 39) {
      break;
     }
     HEAP8[(HEAP32[$wordx >> 2] | 0) - 1 | 0] = 32;
    }
   } while (0);
   $end_type = __Z14TranslateRulesP10TranslatorPcS1_iS1_iPj($2, HEAP32[$wordx >> 2] | 0, $phonemes | 0, 200, $end_phonemes | 0, $wflags, $dictionary_flags | 0) | 0;
   if ((HEAP8[$phonemes | 0] | 0) == 21) {
    _strcpy(33176, $phonemes | 0) | 0;
    $1 = 0;
    $1415 = $1;
    STACKTOP = sp;
    return $1415 | 0;
   }
   do {
    if ((HEAP8[$phonemes | 0] | 0) == 0) {
     if ((HEAP8[$end_phonemes | 0] | 0) != 0) {
      break;
     }
     __Z7utf8_inPiPKc($wc, HEAP32[$wordx >> 2] | 0) | 0;
     do {
      if (($word_length | 0) == 1) {
       if ((__Z7IsAlphaj(HEAP32[$wc >> 2] | 0) | 0) == 0) {
        if ((__Z13IsSuperscripti(HEAP32[$wc >> 2] | 0) | 0) == 0) {
         break;
        }
       }
       $577 = __ZL22SpeakIndividualLettersP10TranslatorPcS1_i($2, HEAP32[$wordx >> 2] | 0, $phonemes | 0, $spell_word) | 0;
       HEAP32[$wordx >> 2] = $577;
       if (($577 | 0) == 0) {
        $1 = 0;
        $1415 = $1;
        STACKTOP = sp;
        return $1415 | 0;
       } else {
        _strcpy(33176, $phonemes | 0) | 0;
        $1 = 0;
        $1415 = $1;
        STACKTOP = sp;
        return $1415 | 0;
       }
      }
     } while (0);
    }
   } while (0);
   HEAP32[$c_temp >> 2] = HEAP8[(HEAP32[$wordx >> 2] | 0) - 1 | 0] | 0;
   $found = 0;
   $confirm_prefix = 1;
   $loopcount = 0;
   while (1) {
    if (($loopcount | 0) < 50) {
     $597 = ($end_type & 1024 | 0) != 0;
    } else {
     $597 = 0;
    }
    if (!$597) {
     break;
    }
    do {
     if (($confirm_prefix | 0) != 0) {
      if (($end_type & 131072 | 0) != 0) {
       label = 158;
       break;
      }
      HEAP8[$phonemes2 | 0] = 0;
      $end2 = __Z14TranslateRulesP10TranslatorPcS1_iS1_iPj($2, HEAP32[$wordx >> 2] | 0, $phonemes2 | 0, 200, $end_phonemes21 | 0, $wflags | 536870912 | 268435456, $dictionary_flags | 0) | 0;
      if (($end2 | 0) == 0) {
       label = 158;
       break;
      }
      __Z12RemoveEndingP10TranslatorPciS1_($2, HEAP32[$wordx >> 2] | 0, $end2, $word_copy | 0) | 0;
      $end_type = __Z14TranslateRulesP10TranslatorPcS1_iS1_iPj($2, HEAP32[$wordx >> 2] | 0, $phonemes | 0, 200, $end_phonemes | 0, $wflags | 268435456, $dictionary_flags | 0) | 0;
      $632 = HEAP32[$wordx >> 2] | 0;
      _memcpy($632 | 0, $word_copy | 0, _strlen($word_copy | 0) | 0) | 0;
      if (($end_type & 1024 | 0) == 0) {
       $end_type = $end2;
       _strcpy($phonemes | 0, $phonemes2 | 0) | 0;
       _strcpy($end_phonemes | 0, $end_phonemes21 | 0) | 0;
       if ((HEAP32[19530] | 0) == 2) {
        __Z14DecodePhonemesPKcPc($end_phonemes | 0, $end_phonemes21 | 0);
        _fprintf(HEAP32[19596] | 0, 9960, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $end_phonemes21, tempVarArgs) | 0) | 0;
        STACKTOP = tempVarArgs;
       }
      }
      $confirm_prefix = 0;
     } else {
      label = 158;
     }
    } while (0);
    if ((label | 0) == 158) {
     label = 0;
     $prefix_type = $end_type;
     if (($prefix_type & 2048 | 0) != 0) {
      HEAP32[$2 + 8304 >> 2] = 1;
     }
     HEAP8[(HEAP32[$wordx >> 2] | 0) - 1 | 0] = HEAP32[$c_temp >> 2];
     if (($prefix_type & 131072 | 0) == 0) {
      $ix = $prefix_type & 15;
      while (1) {
       if (($ix | 0) <= 0) {
        break;
       }
       HEAP32[$wordx >> 2] = (HEAP32[$wordx >> 2] | 0) + 1;
       while (1) {
        if ((HEAP8[HEAP32[$wordx >> 2] | 0] & 192 | 0) != 128) {
         break;
        }
        HEAP32[$wordx >> 2] = (HEAP32[$wordx >> 2] | 0) + 1;
       }
       $ix = $ix - 1 | 0;
      }
     } else {
      $pfix = 1;
      HEAP8[$prefix_chars | 0] = 0;
      $n_chars = $prefix_type & 63;
      $ix = 0;
      while (1) {
       if (($ix | 0) >= ($n_chars | 0)) {
        break;
       }
       $706 = HEAP32[$wordx >> 2] | 0;
       HEAP32[$wordx >> 2] = $706 + 1;
       $709 = $pfix;
       $pfix = $709 + 1 | 0;
       HEAP8[$prefix_chars + $709 | 0] = HEAP8[$706] | 0;
       do {
        if (($prefix_type & 131072 | 0) != 0) {
         if (($ix | 0) != ($n_chars - 1 | 0)) {
          break;
         }
         HEAP8[$prefix_chars + ($pfix - 1) | 0] = 0;
        }
       } while (0);
       $ix = $ix + 1 | 0;
      }
      HEAP8[$prefix_chars + $pfix | 0] = 0;
     }
     HEAP32[$c_temp >> 2] = HEAP8[(HEAP32[$wordx >> 2] | 0) - 1 | 0] | 0;
     HEAP8[(HEAP32[$wordx >> 2] | 0) - 1 | 0] = 32;
     $confirm_prefix = 1;
     $wflags = $wflags | 8388608;
     if (($prefix_type & 131072 | 0) != 0) {
      __Z8strncpy0PcPKci($prefix_phonemes2 | 0, $end_phonemes | 0, 12);
      HEAP32[$wordpf >> 2] = $prefix_chars + 1;
      _strcpy($prefix_phonemes | 0, $phonemes | 0) | 0;
      $found = __Z14LookupDictListP10TranslatorPPcS1_PjiP8WORD_TAB($2, $wordpf, $phonemes | 0, $dictionary_flags | 0, 0, $5) | 0;
      if (($found | 0) != 0) {
       _strcpy($prefix_phonemes | 0, $phonemes | 0) | 0;
      }
      if ((HEAP32[$dictionary_flags >> 2] & 8192 | 0) != 0) {
       HEAP8[$prefix_phonemes | 0] = 0;
       __ZL22SpeakIndividualLettersP10TranslatorPcS1_i($2, HEAP32[$wordpf >> 2] | 0, $prefix_phonemes | 0, 1) | 0;
      }
     } else {
      _strcat($prefix_phonemes | 0, $end_phonemes | 0) | 0;
     }
     HEAP8[$end_phonemes | 0] = 0;
     $end_type = 0;
     $found = __Z14LookupDictListP10TranslatorPPcS1_PjiP8WORD_TAB($2, $wordx, $phonemes | 0, $dictionary_flags2 | 0, 1024, $5) | 0;
     if ((HEAP32[$dictionary_flags >> 2] | 0) == 0) {
      HEAP32[$dictionary_flags >> 2] = HEAP32[$dictionary_flags2 >> 2];
      HEAP32[$dictionary_flags + 4 >> 2] = HEAP32[$dictionary_flags2 + 4 >> 2];
     } else {
      $prefix_flags = 1;
     }
     if (($found | 0) == 0) {
      $end_type = __Z14TranslateRulesP10TranslatorPcS1_iS1_iPj($2, HEAP32[$wordx >> 2] | 0, $phonemes | 0, 200, $end_phonemes | 0, $wflags & 8404992, $dictionary_flags | 0) | 0;
      if ((HEAP8[$phonemes | 0] | 0) == 21) {
       label = 189;
       break;
      }
     }
    }
    $loopcount = $loopcount + 1 | 0;
   }
   if ((label | 0) == 189) {
    HEAP8[(HEAP32[$wordx >> 2] | 0) - 1 | 0] = HEAP32[$c_temp >> 2];
    _strcpy(33176, $phonemes | 0) | 0;
    $1 = 0;
    $1415 = $1;
    STACKTOP = sp;
    return $1415 | 0;
   }
   do {
    if (($end_type | 0) != 0) {
     if (($end_type & 1024 | 0) != 0) {
      break;
     }
     $end_type1 = $end_type;
     _strcpy($phonemes2 | 0, $phonemes | 0) | 0;
     $end_flags = __Z12RemoveEndingP10TranslatorPciS1_($2, HEAP32[$wordx >> 2] | 0, $end_type, $word_copy | 0) | 0;
     $more_suffixes = 1;
     while (1) {
      if (($more_suffixes | 0) == 0) {
       label = 234;
       break;
      }
      $more_suffixes = 0;
      HEAP8[$phonemes | 0] = 0;
      if ((HEAP8[$prefix_phonemes | 0] | 0) != 0) {
       HEAP8[(HEAP32[$wordx >> 2] | 0) - 1 | 0] = HEAP32[$c_temp >> 2];
       $found = __Z14LookupDictListP10TranslatorPPcS1_PjiP8WORD_TAB($2, $word1, $phonemes | 0, $dictionary_flags2 | 0, $end_flags, $5) | 0;
       HEAP8[(HEAP32[$wordx >> 2] | 0) - 1 | 0] = 32;
       if ((HEAP8[$phonemes | 0] | 0) == 21) {
        label = 199;
        break;
       }
       if ((HEAP32[$dictionary_flags >> 2] | 0) == 0) {
        HEAP32[$dictionary_flags >> 2] = HEAP32[$dictionary_flags2 >> 2];
        HEAP32[$dictionary_flags + 4 >> 2] = HEAP32[$dictionary_flags2 + 4 >> 2];
       }
       if (($found | 0) != 0) {
        HEAP8[$prefix_phonemes | 0] = 0;
       }
       do {
        if (($found | 0) == 0) {
         if ((HEAP32[$dictionary_flags2 >> 2] | 0) == 0) {
          break;
         }
         $prefix_flags = 1;
        }
       } while (0);
      }
      if (($found | 0) == 0) {
       $found = __Z14LookupDictListP10TranslatorPPcS1_PjiP8WORD_TAB($2, $wordx, $phonemes | 0, $dictionary_flags2 | 0, $end_flags, $5) | 0;
       if ((HEAP8[$phonemes | 0] | 0) == 21) {
        label = 210;
        break;
       }
       if ((HEAP32[$dictionary_flags2 >> 2] & 8192 | 0) != 0) {}
       if ((HEAP32[$dictionary_flags >> 2] | 0) == 0) {
        HEAP32[$dictionary_flags >> 2] = HEAP32[$dictionary_flags2 >> 2];
        HEAP32[$dictionary_flags + 4 >> 2] = HEAP32[$dictionary_flags2 + 4 >> 2];
       }
      }
      if (($found | 0) == 0) {
       if (($end_type & 16384 | 0) != 0) {
        _strcpy($phonemes | 0, $phonemes2 | 0) | 0;
       } else {
        if (($end_flags & 4 | 0) != 0) {
         $wflags = $wflags | 8192;
        }
        if (($end_type & 262144 | 0) != 0) {
         $wflags = $wflags | 134217728;
        }
        if (($end_type & 524288 | 0) != 0) {
         _strcpy($end_phonemes2 | 0, $end_phonemes | 0) | 0;
         $end_type = __Z14TranslateRulesP10TranslatorPcS1_iS1_iPj($2, HEAP32[$wordx >> 2] | 0, $phonemes | 0, 200, $end_phonemes | 0, $wflags, $dictionary_flags | 0) | 0;
         _strcat($end_phonemes | 0, $end_phonemes2 | 0) | 0;
         do {
          if (($end_type | 0) != 0) {
           if (($end_type & 1024 | 0) != 0) {
            break;
           }
           $end_flags = __Z12RemoveEndingP10TranslatorPciS1_($2, HEAP32[$wordx >> 2] | 0, $end_type, 0) | 0;
           $more_suffixes = 1;
          }
         } while (0);
        } else {
         __Z14TranslateRulesP10TranslatorPcS1_iS1_iPj($2, HEAP32[$wordx >> 2] | 0, $phonemes | 0, 200, 0, $wflags, $dictionary_flags | 0) | 0;
         $end_type = 0;
        }
        if ((HEAP8[$phonemes | 0] | 0) == 21) {
         label = 230;
         break;
        }
       }
      }
     }
     if ((label | 0) == 210) {
      $913 = HEAP32[$wordx >> 2] | 0;
      _memcpy($913 | 0, $word_copy | 0, _strlen($word_copy | 0) | 0) | 0;
      _strcpy(33176, $phonemes | 0) | 0;
      $1 = 0;
      $1415 = $1;
      STACKTOP = sp;
      return $1415 | 0;
     } else if ((label | 0) == 199) {
      $867 = HEAP32[$wordx >> 2] | 0;
      _memcpy($867 | 0, $word_copy | 0, _strlen($word_copy | 0) | 0) | 0;
      _strcpy(33176, $phonemes | 0) | 0;
      $1 = 0;
      $1415 = $1;
      STACKTOP = sp;
      return $1415 | 0;
     } else if ((label | 0) == 230) {
      _strcpy(33176, $phonemes | 0) | 0;
      $1007 = HEAP32[$wordx >> 2] | 0;
      _memcpy($1007 | 0, $word_copy | 0, _strlen($word_copy | 0) | 0) | 0;
      HEAP8[(HEAP32[$wordx >> 2] | 0) - 1 | 0] = HEAP32[$c_temp >> 2];
      $1 = 0;
      $1415 = $1;
      STACKTOP = sp;
      return $1415 | 0;
     } else if ((label | 0) == 234) {
      if (($end_type1 & 65536 | 0) == 0) {
       __Z14AppendPhonemesP10TranslatorPciPKc($2, $phonemes | 0, 200, $end_phonemes | 0);
       HEAP8[$end_phonemes | 0] = 0;
      }
      $1028 = HEAP32[$wordx >> 2] | 0;
      _memcpy($1028 | 0, $word_copy | 0, _strlen($word_copy | 0) | 0) | 0;
      break;
     }
    }
   } while (0);
   HEAP8[(HEAP32[$wordx >> 2] | 0) - 1 | 0] = HEAP32[$c_temp >> 2];
  }
 }
 if (($add_plural_suffix | 0) != 0) {
  label = 242;
 } else {
  if (($wflags & 4 | 0) != 0) {
   label = 242;
  }
 }
 if ((label | 0) == 242) {
  if ((HEAP32[$last_char >> 2] | 0) == 102) {
   __Z14TranslateRulesP10TranslatorPcS1_iS1_iPj($2, 23489, $phonemes | 0, 200, 0, 0, 0) | 0;
  } else {
   do {
    if ((HEAP32[$last_char >> 2] | 0) == 0) {
     label = 246;
    } else {
     if ((__Z8strchr_wPKci(9320, HEAP32[$last_char >> 2] | 0) | 0) == 0) {
      label = 246;
      break;
     }
     __Z14TranslateRulesP10TranslatorPcS1_iS1_iPj($2, 23497, $phonemes | 0, 200, 0, 0, 0) | 0;
    }
   } while (0);
   if ((label | 0) == 246) {
    __Z14TranslateRulesP10TranslatorPcS1_iS1_iPj($2, 23481, $phonemes | 0, 200, 0, 0, 0) | 0;
   }
  }
 }
 $wflags = $wflags | $emphasize_allcaps;
 $prefix_stress = 0;
 $p = $prefix_phonemes | 0;
 while (1) {
  if ((HEAP8[$p] | 0) == 0) {
   break;
  }
  if ((HEAP8[$p] | 0) == 6) {
   label = 254;
  } else {
   if ((HEAP8[$p] | 0) == 7) {
    label = 254;
   }
  }
  if ((label | 0) == 254) {
   label = 0;
   $prefix_stress = HEAP8[$p] | 0;
  }
  $p = $p + 1 | 0;
 }
 do {
  if (($prefix_flags | 0) != 0) {
   label = 259;
  } else {
   if (($prefix_stress | 0) != 0) {
    label = 259;
    break;
   }
   if ((HEAP8[$prefix_phonemes | 0] | 0) == 0) {
    __Z13SetWordStressP10TranslatorPcPjii($2, $phonemes | 0, $dictionary_flags | 0, -1, 0);
   } else {
    __Z13SetWordStressP10TranslatorPcPjii($2, $phonemes | 0, $dictionary_flags | 0, -1, 0);
   }
   _snprintf(33176, 200, 8784, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 24 | 0, HEAP32[tempVarArgs >> 2] = $unpron_phonemes, HEAP32[tempVarArgs + 8 >> 2] = $prefix_phonemes, HEAP32[tempVarArgs + 16 >> 2] = $phonemes, tempVarArgs) | 0) | 0;
   STACKTOP = tempVarArgs;
   HEAP8[33375] = 0;
  }
 } while (0);
 if ((label | 0) == 259) {
  do {
   if ((HEAP32[$2 + 36 >> 2] | 0) != 0) {
    label = 261;
   } else {
    if (($prefix_type & 65536 | 0) != 0) {
     label = 261;
     break;
    }
    _snprintf(33176, 200, 8784, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 24 | 0, HEAP32[tempVarArgs >> 2] = $unpron_phonemes, HEAP32[tempVarArgs + 8 >> 2] = $prefix_phonemes, HEAP32[tempVarArgs + 16 >> 2] = $phonemes, tempVarArgs) | 0) | 0;
    STACKTOP = tempVarArgs;
    HEAP8[33375] = 0;
    __Z13SetWordStressP10TranslatorPcPjii($2, 33176, $dictionary_flags | 0, -1, 0);
   }
  } while (0);
  if ((label | 0) == 261) {
   __Z13SetWordStressP10TranslatorPcPjii($2, $phonemes | 0, $dictionary_flags | 0, 3, 0);
   $ix = 0;
   $p2 = $prefix_phonemes | 0;
   while (1) {
    if ((HEAP8[$p2] | 0) == 0) {
     break;
    }
    if ((HEAP8[$p2] | 0) == 6) {
     if (($ix | 0) == 0) {
      $ix = 1;
     } else {
      HEAP8[$p2] = 5;
     }
    }
    $p2 = $p2 + 1 | 0;
   }
   _snprintf(33176, 200, 8784, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 24 | 0, HEAP32[tempVarArgs >> 2] = $unpron_phonemes, HEAP32[tempVarArgs + 8 >> 2] = $prefix_phonemes, HEAP32[tempVarArgs + 16 >> 2] = $phonemes, tempVarArgs) | 0) | 0;
   STACKTOP = tempVarArgs;
   HEAP8[33375] = 0;
   __Z13SetWordStressP10TranslatorPcPjii($2, 33176, $dictionary_flags | 0, -1, 0);
  }
 }
 if ((HEAP8[$end_phonemes | 0] | 0) != 0) {
  $ix = _strlen(33176) | 0;
  HEAP8[$end_phonemes + (199 - $ix) | 0] = 0;
  _strcpy(33176 + $ix | 0, $end_phonemes | 0) | 0;
 }
 if (($wflags & 16 | 0) != 0) {
  $1193 = $dictionary_flags | 0;
  HEAP32[$1193 >> 2] = HEAP32[$1193 >> 2] & -268435457;
 }
 do {
  if (($wflags & 128 | 0) != 0) {
   if ((HEAP32[$2 + 12 >> 2] & 1048576 | 0) == 0) {
    label = 284;
    break;
   }
   __Z16ChangeWordStressP10TranslatorPci($2, 33176, 3);
  } else {
   label = 284;
  }
 } while (0);
 if ((label | 0) == 284) {
  if (($wflags & 3072 | 0) != 0) {
   __Z16ChangeWordStressP10TranslatorPci($2, 33176, 6);
   if (($wflags & 2048 | 0) != 0) {
    $1219 = $dictionary_flags | 0;
    HEAP32[$1219 >> 2] = HEAP32[$1219 >> 2] | 268435456;
   }
  } else {
   if ((HEAP32[$5 + ((HEAP32[22626] | 0) * 12 | 0) >> 2] & 16 | 0) != 0) {
    if ((HEAP32[$dictionary_flags >> 2] & 1536 | 0) != 0) {
     __Z16ChangeWordStressP10TranslatorPci($2, 33176, 4);
    } else {
     do {
      if ((HEAP32[$dictionary_flags >> 2] & 2048 | 0) != 0) {
       if ((HEAP32[28402] | 0) == 0) {
        break;
       }
       __Z16ChangeWordStressP10TranslatorPci($2, 33176, 3);
      }
     } while (0);
    }
   }
  }
 }
 if (($end_type1 & 8192 | 0) != 0) {
  HEAP32[$2 + 8304 >> 2] = 2;
  HEAP32[$2 + 8312 >> 2] = 2;
 }
 if ((HEAP32[$dictionary_flags + 4 >> 2] & 8 | 0) != 0) {
  HEAP32[$2 + 8308 >> 2] = 3;
  HEAP32[$2 + 8304 >> 2] = 0;
  HEAP32[$2 + 8316 >> 2] = 0;
 } else {
  if ((HEAP32[$dictionary_flags + 4 >> 2] & 1 | 0) != 0) {
   HEAP32[$2 + 8304 >> 2] = 2;
   HEAP32[$2 + 8312 >> 2] = 0;
   HEAP32[$2 + 8316 >> 2] = 0;
  } else {
   if ((HEAP32[$dictionary_flags + 4 >> 2] & 2 | 0) != 0) {
    HEAP32[$2 + 8304 >> 2] = 0;
    HEAP32[$2 + 8312 >> 2] = 2;
    HEAP32[$2 + 8308 >> 2] = 0;
    HEAP32[$2 + 8316 >> 2] = 0;
   } else {
    if ((HEAP32[$dictionary_flags + 4 >> 2] & 4 | 0) != 0) {
     HEAP32[$2 + 8316 >> 2] = 2;
     HEAP32[$2 + 8304 >> 2] = 0;
     HEAP32[$2 + 8312 >> 2] = 0;
     HEAP32[$2 + 8308 >> 2] = 0;
    }
   }
  }
 }
 do {
  if ((HEAP8[HEAP32[$wordx >> 2] | 0] | 0) != 0) {
   if ((HEAP32[$dictionary_flags + 4 >> 2] & 256 | 0) != 0) {
    break;
   }
   if ((HEAP32[$2 + 8304 >> 2] | 0) > 0) {
    $1334 = $2 + 8304 | 0;
    HEAP32[$1334 >> 2] = (HEAP32[$1334 >> 2] | 0) - 1;
   }
   if ((HEAP32[$2 + 8312 >> 2] | 0) > 0) {
    $1344 = $2 + 8312 | 0;
    HEAP32[$1344 >> 2] = (HEAP32[$1344 >> 2] | 0) - 1;
   }
   if ((HEAP32[$2 + 8316 >> 2] | 0) > 0) {
    $1354 = $2 + 8316 | 0;
    HEAP32[$1354 >> 2] = (HEAP32[$1354 >> 2] | 0) - 1;
   }
   if ((HEAP32[$2 + 8308 >> 2] | 0) > 0) {
    $1364 = $2 + 8308 | 0;
    HEAP32[$1364 >> 2] = (HEAP32[$1364 >> 2] | 0) - 1;
   }
  }
 } while (0);
 do {
  if (($word_length | 0) == 1) {
   if ((HEAP32[$2 + 324 >> 2] | 0) != 25966) {
    break;
   }
   if ((__Z9iswalpha2i(HEAP32[$first_char >> 2] | 0) | 0) == 0) {
    break;
   }
   if ((HEAP32[$first_char >> 2] | 0) == 105) {
    break;
   }
   $1384 = $dictionary_flags | 0;
   HEAP32[$1384 >> 2] = HEAP32[$1384 >> 2] | 16777216;
  }
 } while (0);
 do {
  if ((HEAP32[$2 + 84 >> 2] & 2 | 0) != 0) {
   if ((HEAP32[$dictionary_flags >> 2] & 98304 | 0) == 0) {
    break;
   }
   __Z22ApplySpecialAttribute2P10TranslatorPci($2, 33176, HEAP32[$dictionary_flags >> 2] | 0);
  }
 } while (0);
 $1406 = $dictionary_flags | 0;
 HEAP32[$1406 >> 2] = HEAP32[$1406 >> 2] | $was_unpronouncable;
 _memcpy($3 | 0, $word_copy2 | 0, $word_copy_length) | 0;
 $1 = HEAP32[$dictionary_flags >> 2] | 0;
 $1415 = $1;
 STACKTOP = sp;
 return $1415 | 0;
}
function __Z10ReadClauseP10TranslatorP8_IO_FILEPcPsPiiS5_S3_($tr, $f_in, $buf, $charix, $charix_top, $n_buf, $tone_type, $voice_change) {
 $tr = $tr | 0;
 $f_in = $f_in | 0;
 $buf = $buf | 0;
 $charix = $charix | 0;
 $charix_top = $charix_top | 0;
 $n_buf = $n_buf | 0;
 $tone_type = $tone_type | 0;
 $voice_change = $voice_change | 0;
 var $1 = 0, $2 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $c1 = 0, $c2 = 0, $cprev = 0, $cprev2 = 0, $c_next = 0, $parag = 0, $ix = 0, $j = 0, $nl_count = 0, $linelength = 0, $phoneme_mode = 0, $n_xml_buf = 0, $terminator = 0, $punct = 0, $found = 0, $any_alnum = 0, $self_closing = 0, $punct_data = 0, $is_end_clause = 0, $announced_punctuation = 0, $stressed_word = 0, $end_clause_after_tag = 0, $end_clause_index = 0, $xml_buf = 0, $xml_buf2 = 0, $p_word = 0, $text_buf = 0, $text_buf2 = 0, $p2 = 0, $30 = 0, $54 = 0, $98 = 0, $107 = 0, $155 = 0, $159 = 0, $168 = 0, $169 = 0, $185 = 0, $188 = 0, $192 = 0, $237 = 0, $275 = 0, $278 = 0, $311 = 0, $341 = 0, $357 = 0, $385 = 0, $390 = 0, $402 = 0, $405 = 0, $406 = 0, $411 = 0, $425 = 0, $441 = 0, $444 = 0, $448 = 0, $467 = 0, $490 = 0, $558 = 0, $604 = 0, $646 = 0, $741 = 0, $754 = 0, $821 = 0, $842 = 0, $851 = 0, $875 = 0, $1078 = 0, $1101 = 0, $1143 = 0, $1162 = 0, label = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1152 | 0;
 $c1 = sp | 0;
 $c2 = sp + 8 | 0;
 $ix = sp + 16 | 0;
 $xml_buf = sp + 24 | 0;
 $xml_buf2 = sp + 1056 | 0;
 $text_buf = sp + 1080 | 0;
 $text_buf2 = sp + 1120 | 0;
 $2 = $tr;
 $4 = $buf;
 $5 = $charix;
 $6 = $charix_top;
 $7 = $n_buf;
 $8 = $tone_type;
 $9 = $voice_change;
 HEAP32[$c1 >> 2] = 32;
 $cprev = 32;
 $cprev2 = 32;
 HEAP32[$ix >> 2] = 0;
 $linelength = 0;
 $phoneme_mode = 0;
 $any_alnum = 0;
 $punct_data = 0;
 $announced_punctuation = 0;
 $stressed_word = 0;
 $end_clause_after_tag = 0;
 $end_clause_index = 0;
 if ((HEAP32[28396] | 0) != 0) {
  HEAP32[9450] = 0;
  HEAP32[28396] = 0;
 }
 HEAP32[$2 + 400 >> 2] = 0;
 HEAP32[$2 + 8336 >> 2] = 0;
 HEAP32[$2 + 8340 >> 2] = 0;
 HEAP32[28590] = 0;
 HEAP32[$8 >> 2] = 0;
 HEAP8[$9] = 0;
 HEAP32[26954] = $f_in;
 if ((HEAP32[30930] | 0) != 0) {
  _strcpy($4 | 0, HEAP32[30930] | 0) | 0;
  $30 = _strlen(HEAP32[30930] | 0) | 0;
  HEAP32[$ix >> 2] = (HEAP32[$ix >> 2] | 0) + $30;
  HEAP32[30930] = 0;
 }
 if ((HEAP32[28844] | 0) != 0) {
  HEAP32[$c2 >> 2] = HEAP32[28844];
 } else {
  HEAP32[$c2 >> 2] = __ZL4GetCv() | 0;
 }
 L11 : while (1) {
  do {
   if ((__Z3Eofv() | 0) != 0) {
    if ((HEAP32[30932] | 0) != 0) {
     $54 = 1;
     break;
    }
    if ((HEAP32[28844] | 0) != 0) {
     $54 = 1;
     break;
    }
    $54 = (HEAP32[5928] | 0) >= 0;
   } else {
    $54 = 1;
   }
  } while (0);
  if (!$54) {
   label = 341;
   break;
  }
  if ((_iswalnum(HEAP32[$c1 >> 2] | 0) | 0) == 0) {
   if ((HEAP32[19602] | 0) > 0) {
    if ((HEAP32[22654] | 0) > (HEAP32[19602] | 0)) {
     label = 17;
     break;
    }
   }
   if ((HEAP32[9470] | 0) > 0) {
    if ((HEAP32[22654] | 0) >= (HEAP32[9470] | 0)) {
     label = 20;
     break;
    }
   }
  }
  $cprev2 = $cprev;
  $cprev = HEAP32[$c1 >> 2] | 0;
  HEAP32[$c1 >> 2] = HEAP32[$c2 >> 2];
  if ((HEAP32[5928] | 0) >= 0) {
   if ((HEAP8[105080 + (HEAP32[5928] | 0) | 0] | 0) == 0) {
    HEAP32[5928] = -1;
   }
  }
  do {
   if ((HEAP32[5928] | 0) == 0) {
    if ((HEAP32[28844] | 0) != 0) {
     break;
    }
    $98 = HEAP32[5928] | 0;
    HEAP32[5928] = $98 + 1;
    HEAP32[$c1 >> 2] = HEAP8[105080 + $98 | 0] | 0;
   }
  } while (0);
  if ((HEAP32[5928] | 0) >= 0) {
   $107 = HEAP32[5928] | 0;
   HEAP32[5928] = $107 + 1;
   HEAP32[$c2 >> 2] = HEAP8[105080 + $107 | 0] | 0;
  } else {
   HEAP32[$c2 >> 2] = __ZL4GetCv() | 0;
   if ((__Z3Eofv() | 0) != 0) {
    HEAP32[$c2 >> 2] = 32;
   }
  }
  HEAP32[28844] = 0;
  do {
   if ((HEAP32[19462] | 0) != 0) {
    if (($phoneme_mode | 0) != 0) {
     break;
    }
    do {
     if ((HEAP32[28370] | 0) != 38) {
      if ((HEAP32[$c1 >> 2] | 0) != 38) {
       label = 68;
       break;
      }
      if ((HEAP32[$c2 >> 2] | 0) != 35) {
       if ((HEAP32[$c2 >> 2] | 0) < 97) {
        label = 68;
        break;
       }
       if ((HEAP32[$c2 >> 2] | 0) > 122) {
        label = 68;
        break;
       }
      }
      $n_xml_buf = 0;
      HEAP32[$c1 >> 2] = HEAP32[$c2 >> 2];
      while (1) {
       do {
        if ((__Z3Eofv() | 0) != 0) {
         $155 = 0;
        } else {
         if ((_iswalnum(HEAP32[$c1 >> 2] | 0) | 0) == 0) {
          if ((HEAP32[$c1 >> 2] | 0) != 35) {
           $155 = 0;
           break;
          }
         }
         $155 = ($n_xml_buf | 0) < 20;
        }
       } while (0);
       if (!$155) {
        break;
       }
       $159 = $n_xml_buf;
       $n_xml_buf = $159 + 1 | 0;
       HEAP8[$xml_buf2 + $159 | 0] = HEAP32[$c1 >> 2];
       HEAP32[$c1 >> 2] = __ZL4GetCv() | 0;
      }
      HEAP8[$xml_buf2 + $n_xml_buf | 0] = 0;
      HEAP32[$c2 >> 2] = __ZL4GetCv() | 0;
      $168 = HEAP32[$c1 >> 2] | 0;
      $169 = HEAP32[$c2 >> 2] | 0;
      _sprintf(105080, 17576, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 24 | 0, HEAP32[tempVarArgs >> 2] = $xml_buf2, HEAP32[tempVarArgs + 8 >> 2] = $168, HEAP32[tempVarArgs + 16 >> 2] = $169, tempVarArgs) | 0) | 0;
      STACKTOP = tempVarArgs;
      if ((HEAP32[$c1 >> 2] | 0) == 59) {
       if ((HEAP8[$xml_buf2 | 0] | 0) == 35) {
        if ((HEAP8[$xml_buf2 + 1 | 0] | 0) == 120) {
         $185 = _sscanf($xml_buf2 + 2 | 0, 15720, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $c1, tempVarArgs) | 0) | 0;
         STACKTOP = tempVarArgs;
         $found = $185;
        } else {
         $188 = _sscanf($xml_buf2 + 1 | 0, 14472, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $c1, tempVarArgs) | 0) | 0;
         STACKTOP = tempVarArgs;
         $found = $188;
        }
       } else {
        $192 = __Z10LookupMnemP8MNEM_TABPKc(25720, $xml_buf2 | 0) | 0;
        $found = $192;
        if (($192 | 0) != -1) {
         HEAP32[$c1 >> 2] = $found;
         if ((HEAP32[$c2 >> 2] | 0) == 0) {
          HEAP32[$c2 >> 2] = 32;
         }
        }
       }
      } else {
       $found = -1;
      }
      if (($found | 0) <= 0) {
       HEAP32[5928] = 0;
       HEAP32[$c1 >> 2] = 38;
       HEAP32[$c2 >> 2] = 32;
      }
      do {
       if ((HEAP32[$c1 >> 2] | 0) <= 32) {
        if ((HEAP32[31316] | 0) != 20) {
         if ((HEAP32[31316] | 0) != 36) {
          break;
         }
        }
        HEAP32[$c1 >> 2] = (HEAP32[$c1 >> 2] | 0) + 57344;
       }
      } while (0);
     } else {
      label = 68;
     }
    } while (0);
    if ((label | 0) == 68) {
     label = 0;
     do {
      if ((HEAP32[$c1 >> 2] | 0) == 60) {
       if ((HEAP32[28370] | 0) == 60) {
        break;
       }
       L97 : do {
        if ((HEAP32[$c2 >> 2] | 0) == 33) {
         while (1) {
          if ((__Z3Eofv() | 0) != 0) {
           $237 = 0;
          } else {
           $237 = (HEAP32[$c1 >> 2] | 0) != 62;
          }
          if (!$237) {
           break;
          }
          HEAP32[$c1 >> 2] = __ZL4GetCv() | 0;
         }
         HEAP32[$c2 >> 2] = 32;
        } else {
         do {
          if ((HEAP32[$c2 >> 2] | 0) != 47) {
           if ((__Z9iswalpha2i(HEAP32[$c2 >> 2] | 0) | 0) != 0) {
            break;
           }
           break L97;
          }
         } while (0);
         if ((HEAP32[$ix >> 2] | 0) > ($7 - 20 | 0)) {
          label = 80;
          break L11;
         }
         $n_xml_buf = 0;
         HEAP32[$c1 >> 2] = HEAP32[$c2 >> 2];
         while (1) {
          do {
           if ((__Z3Eofv() | 0) != 0) {
            $275 = 0;
           } else {
            if ((HEAP32[$c1 >> 2] | 0) == 62) {
             $275 = 0;
             break;
            }
            $275 = ($n_xml_buf | 0) < 256;
           }
          } while (0);
          if (!$275) {
           break;
          }
          $278 = $n_xml_buf;
          $n_xml_buf = $278 + 1 | 0;
          HEAP32[$xml_buf + ($278 << 2) >> 2] = HEAP32[$c1 >> 2];
          HEAP32[$c1 >> 2] = __ZL4GetCv() | 0;
         }
         HEAP32[$xml_buf + ($n_xml_buf << 2) >> 2] = 0;
         HEAP32[$c2 >> 2] = 32;
         $self_closing = 0;
         if ((HEAP32[$xml_buf + ($n_xml_buf - 1 << 2) >> 2] | 0) == 47) {
          HEAP32[$xml_buf + ($n_xml_buf - 1 << 2) >> 2] = 32;
          $self_closing = 1;
         }
         $terminator = __ZL14ProcessSsmlTagPwPcPiii($xml_buf | 0, $4, $ix, $7, $self_closing) | 0;
         if (($terminator | 0) != 0) {
          label = 90;
          break L11;
         }
         HEAP32[$c1 >> 2] = 32;
         HEAP32[$c2 >> 2] = __ZL4GetCv() | 0;
         continue L11;
        }
       } while (0);
      }
     } while (0);
    }
   }
  } while (0);
  HEAP32[28370] = 0;
  if ((HEAP32[28870] | 0) != 0) {
   continue;
  }
  if ((HEAP32[$c2 >> 2] | 0) == 10) {
   if ((HEAP32[19542] | 0) == -1) {
    label = 104;
    break;
   }
  }
  if ((HEAP32[$c1 >> 2] | 0) == 1) {
   label = 110;
  } else {
   if ((HEAP32[$c1 >> 2] | 0) == (HEAP8[6880] | 0)) {
    label = 110;
   }
  }
  do {
   if ((label | 0) == 110) {
    label = 0;
    if ((HEAP32[$c2 >> 2] | 0) == 86) {
     label = 111;
     break L11;
    }
    if ((HEAP32[$c2 >> 2] | 0) != 66) {
     break;
    }
    _strcpy($4 + (HEAP32[$ix >> 2] | 0) | 0, 10952) | 0;
    HEAP32[$ix >> 2] = (HEAP32[$ix >> 2] | 0) + 3;
    $425 = __ZL4GetCv() | 0;
    HEAP32[$c2 >> 2] = $425;
    if (($425 | 0) == 48) {
     HEAP32[19468] = 0;
    } else {
     HEAP32[19468] = 1;
     HEAP32[19470] = 0;
     if ((HEAP32[$c2 >> 2] | 0) != 49) {
      $j = 0;
      while (1) {
       if ((_iswspace(HEAP32[$c2 >> 2] | 0) | 0) != 0) {
        $441 = 0;
       } else {
        $441 = (__Z3Eofv() | 0) != 0 ^ 1;
       }
       if (!$441) {
        break;
       }
       $444 = $j;
       $j = $444 + 1 | 0;
       HEAP32[77880 + ($444 << 2) >> 2] = HEAP32[$c2 >> 2];
       HEAP32[$c2 >> 2] = __ZL4GetCv() | 0;
       $448 = HEAP32[$ix >> 2] | 0;
       HEAP32[$ix >> 2] = $448 + 1;
       HEAP8[$4 + $448 | 0] = 32;
      }
      HEAP32[77880 + ($j << 2) >> 2] = 0;
      HEAP32[19468] = 2;
     }
    }
    HEAP32[$c2 >> 2] = __ZL4GetCv() | 0;
    continue L11;
   }
  } while (0);
  $linelength = $linelength + 1 | 0;
  $467 = __Z12lookupwchar2PKti(HEAP32[$2 + 460 >> 2] | 0, HEAP32[$c1 >> 2] | 0) | 0;
  $j = $467;
  do {
   if (($467 | 0) != 0) {
    if (($j | 0) == 1) {
     continue L11;
    } else {
     HEAP32[$c1 >> 2] = $j;
     break;
    }
   }
  } while (0);
  if ((_iswalnum(HEAP32[$c1 >> 2] | 0) | 0) != 0) {
   $any_alnum = 1;
  } else {
   if (($stressed_word | 0) != 0) {
    $stressed_word = 0;
    HEAP32[$c1 >> 2] = 1328;
    __ZL6UngetCi(HEAP32[$c2 >> 2] | 0);
    HEAP32[$c2 >> 2] = 32;
   }
   $490 = __Z12lookupwchar2PKti(HEAP32[$2 + 460 >> 2] | 0, HEAP32[$c1 >> 2] | 0) | 0;
   $j = $490;
   do {
    if (($490 | 0) != 0) {
     if (($j | 0) == 1) {
      continue L11;
     } else {
      HEAP32[$c1 >> 2] = $j;
      break;
     }
    }
   } while (0);
   if ((HEAP32[$c1 >> 2] | 0) == 3851) {
    HEAP32[$c1 >> 2] = 32;
   }
   if ((_iswspace(HEAP32[$c1 >> 2] | 0) | 0) != 0) {
    if ((HEAP32[$2 + 324 >> 2] | 0) == 6972015) {
     $p_word = $4 + ((HEAP32[$ix >> 2] | 0) - 1) | 0;
     if ((HEAP8[$p_word | 0] | 0) == 105) {
      if ((HEAP8[$p_word - 1 | 0] | 0) == 46) {
       $p_word = $p_word - 1 | 0;
      }
      if ((HEAP8[$p_word - 1 | 0] | 0) == 32) {
       label = 152;
       break;
      }
     }
    }
   }
   if ((HEAP32[$c1 >> 2] | 0) == 3405) {
    if ((HEAP32[$c2 >> 2] | 0) == 8205) {
     HEAP32[$c1 >> 2] = 3406;
    }
   }
  }
  if ((__Z9iswupper2i(HEAP32[$c1 >> 2] | 0) | 0) != 0) {
   $558 = $2 + 8336 | 0;
   HEAP32[$558 >> 2] = (HEAP32[$558 >> 2] | 0) + 1;
   do {
    if ((HEAP32[19546] | 0) == 2) {
     if ((HEAP32[31316] | 0) != 0) {
      break;
     }
     if ((__Z9iswupper2i($cprev) | 0) != 0) {
      break;
     }
     if ((__ZL13LookupSpecialP10TranslatorPKcPc($2, 9544, $text_buf2 | 0) | 0) != 0) {
      _sprintf($text_buf | 0, 8984, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $text_buf2, tempVarArgs) | 0) | 0;
      STACKTOP = tempVarArgs;
      $j = _strlen($text_buf | 0) | 0;
      if (((HEAP32[$ix >> 2] | 0) + $j | 0) < ($7 | 0)) {
       _strcpy($4 + (HEAP32[$ix >> 2] | 0) | 0, $text_buf | 0) | 0;
       HEAP32[$ix >> 2] = (HEAP32[$ix >> 2] | 0) + $j;
      }
     }
    }
   } while (0);
  } else {
   if ((__Z9iswalpha2i(HEAP32[$c1 >> 2] | 0) | 0) != 0) {
    $604 = $2 + 8340 | 0;
    HEAP32[$604 >> 2] = (HEAP32[$604 >> 2] | 0) + 1;
   }
  }
  if ((HEAP32[19534] | 0) != 0) {
   if (($phoneme_mode | 0) > 0) {
    $phoneme_mode = $phoneme_mode - 1 | 0;
   } else {
    do {
     if ((HEAP32[$c1 >> 2] | 0) == 91) {
      if ((HEAP32[$c2 >> 2] | 0) != 91) {
       label = 180;
       break;
      }
      $phoneme_mode = -1;
     } else {
      label = 180;
     }
    } while (0);
    if ((label | 0) == 180) {
     label = 0;
     do {
      if ((HEAP32[$c1 >> 2] | 0) == 93) {
       if ((HEAP32[$c2 >> 2] | 0) != 93) {
        break;
       }
       $phoneme_mode = 2;
      }
     } while (0);
    }
   }
  }
  if ((HEAP32[$c1 >> 2] | 0) == 10) {
   $parag = 0;
   while (1) {
    if ((__Z3Eofv() | 0) != 0) {
     $646 = 0;
    } else {
     $646 = (_iswspace(HEAP32[$c2 >> 2] | 0) | 0) != 0;
    }
    if (!$646) {
     break;
    }
    if ((HEAP32[$c2 >> 2] | 0) == 10) {
     $parag = $parag + 1 | 0;
    }
    HEAP32[$c2 >> 2] = __ZL4GetCv() | 0;
   }
   if (($parag | 0) > 0) {
    label = 195;
    break;
   }
   if (($linelength | 0) <= (HEAP32[19542] | 0)) {
    label = 203;
    break;
   }
   $linelength = 0;
  }
  $announced_punctuation = 0;
  do {
   if (($phoneme_mode | 0) == 0) {
    if ((HEAP32[31316] | 0) != 0) {
     break;
    }
    $is_end_clause = 0;
    if (($end_clause_after_tag | 0) != 0) {
     if ((_iswspace(HEAP32[$c1 >> 2] | 0) | 0) == 0) {
      if ((__Z7IsAlphaj(HEAP32[$c1 >> 2] | 0) | 0) == 0) {
       label = 211;
       break L11;
      }
      if ((__Z9iswlower2i(HEAP32[$c1 >> 2] | 0) | 0) == 0) {
       label = 211;
       break L11;
      }
      $end_clause_after_tag = 0;
     }
    }
    do {
     if ((HEAP32[$c1 >> 2] | 0) == 46) {
      if ((HEAP32[$c2 >> 2] | 0) != 46) {
       break;
      }
      while (1) {
       $741 = __ZL4GetCv() | 0;
       $c_next = $741;
       if (($741 | 0) != 46) {
        break;
       }
       HEAP32[$c1 >> 2] = 8230;
       HEAP32[$c2 >> 2] = 32;
      }
      if ((HEAP32[$c1 >> 2] | 0) == 8230) {
       HEAP32[$c2 >> 2] = $c_next;
      } else {
       __ZL6UngetCi($c_next);
      }
     }
    } while (0);
    $punct_data = 0;
    $754 = __Z11lookupwcharPKti(30304, HEAP32[$c1 >> 2] | 0) | 0;
    $punct = $754;
    if (($754 | 0) != 0) {
     $punct_data = HEAP32[26640 + ($punct << 2) >> 2] | 0;
     if (($punct_data & 1048576 | 0) != 0) {
      $stressed_word = 1;
      HEAP32[$8 >> 2] = $punct_data >> 12 & 15;
      continue L11;
     }
     do {
      if ((_iswspace(HEAP32[$c2 >> 2] | 0) | 0) != 0) {
       label = 232;
      } else {
       if (($punct_data & 32768 | 0) != 0) {
        label = 232;
        break;
       }
       if ((__Z9IsBracketi(HEAP32[$c2 >> 2] | 0) | 0) != 0) {
        label = 232;
        break;
       }
       if ((HEAP32[$c2 >> 2] | 0) == 63) {
        label = 232;
        break;
       }
       if ((__Z3Eofv() | 0) != 0) {
        label = 232;
        break;
       }
       if ((HEAP32[$c2 >> 2] | 0) == (HEAP8[6880] | 0)) {
        label = 232;
       }
      }
     } while (0);
     if ((label | 0) == 232) {
      label = 0;
      $is_end_clause = 1;
     }
    }
    if ((HEAP32[$c1 >> 2] | 0) == 57404) {
     HEAP32[$c1 >> 2] = 60;
    }
    do {
     if ((HEAP32[19468] | 0) != 0) {
      if ((_iswpunct(HEAP32[$c1 >> 2] | 0) | 0) == 0) {
       break;
      }
      if ((HEAP32[32078] | 0) != 0) {
       break;
      }
      if ((HEAP32[19468] | 0) == 1) {
       label = 241;
      } else {
       if ((_wcschr(77880, HEAP32[$c1 >> 2] | 0) | 0) != 0) {
        label = 241;
       }
      }
      if ((label | 0) == 241) {
       label = 0;
       HEAP32[$2 + 400 >> 2] = 0;
       $821 = __ZL19AnnouncePunctuationP10TranslatoriPiPcS1_i($2, HEAP32[$c1 >> 2] | 0, $c2, $4, $ix, $is_end_clause) | 0;
       $terminator = $821;
       if (($821 | 0) >= 0) {
        label = 242;
        break L11;
       }
       $announced_punctuation = HEAP32[$c1 >> 2] | 0;
      }
     }
    } while (0);
    do {
     if (($punct_data & 2097152 | 0) != 0) {
      if (($announced_punctuation | 0) != 0) {
       break;
      }
      $p2 = $4 + (HEAP32[$ix >> 2] | 0) | 0;
      $842 = __ZL14LookupCharNameP10Translatorii($2, HEAP32[$c1 >> 2] | 0, 1) | 0;
      _sprintf($p2 | 0, 8984, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $842, tempVarArgs) | 0) | 0;
      STACKTOP = tempVarArgs;
      if ((HEAP8[$p2 | 0] | 0) != 0) {
       $851 = _strlen($p2 | 0) | 0;
       HEAP32[$ix >> 2] = (HEAP32[$ix >> 2] | 0) + $851;
       $announced_punctuation = HEAP32[$c1 >> 2] | 0;
       $punct_data = $punct_data & -28673;
      }
     }
    } while (0);
    if (($is_end_clause | 0) != 0) {
     $nl_count = 0;
     $c_next = HEAP32[$c2 >> 2] | 0;
     if ((_iswspace($c_next) | 0) != 0) {
      while (1) {
       if ((__Z3Eofv() | 0) != 0) {
        $875 = 0;
       } else {
        $875 = (_iswspace($c_next) | 0) != 0;
       }
       if (!$875) {
        break;
       }
       if (($c_next | 0) == 10) {
        $nl_count = $nl_count + 1 | 0;
       }
       $c_next = __ZL4GetCv() | 0;
      }
     }
     do {
      if ((HEAP32[$c1 >> 2] | 0) == 46) {
       if (($nl_count | 0) >= 2) {
        break;
       }
       $punct_data = $punct_data | 4194304;
      }
     } while (0);
     if (($nl_count | 0) == 0) {
      do {
       if ((HEAP32[$c1 >> 2] | 0) == 44) {
        if (($cprev | 0) != 46) {
         break;
        }
        if ((HEAP32[$2 + 324 >> 2] | 0) != 26741) {
         break;
        }
        if ((_iswdigit($cprev2) | 0) == 0) {
         break;
        }
        if ((_iswdigit($c_next) | 0) == 0) {
         if ((__Z9iswlower2i($c_next) | 0) == 0) {
          break;
         }
        }
        HEAP32[$c1 >> 2] = 1367;
        $is_end_clause = 0;
       }
      } while (0);
      if ((HEAP32[$c1 >> 2] | 0) == 46) {
       L340 : do {
        if ((HEAP32[$2 + 200 >> 2] & 65536 | 0) != 0) {
         do {
          if ((_iswdigit($cprev) | 0) == 0) {
           if ((__ZL8IsRomanUj($cprev) | 0) == 0) {
            label = 284;
            break L340;
           }
           if ((__ZL8IsRomanUj($cprev2) | 0) != 0) {
            break;
           }
           if ((_iswspace($cprev2) | 0) == 0) {
            label = 284;
            break L340;
           }
          }
         } while (0);
         if ((_iswdigit($cprev) | 0) != 0) {
          if ((__Z9iswlower2i($c_next) | 0) != 0) {
           label = 281;
          } else {
           if (($c_next | 0) == 45) {
            label = 281;
           }
          }
          if ((label | 0) == 281) {
           label = 0;
           $is_end_clause = 0;
          }
         } else {
          $is_end_clause = 0;
         }
        } else {
         label = 284;
        }
       } while (0);
       if ((label | 0) == 284) {
        label = 0;
        if (($c_next | 0) == 39) {
         $is_end_clause = 0;
        }
       }
       if ((__Z9iswlower2i($c_next) | 0) != 0) {
        $is_end_clause = 0;
       }
       if (($any_alnum | 0) == 0) {
        HEAP32[$c1 >> 2] = 32;
        $is_end_clause = 0;
       }
      } else {
       if (($any_alnum | 0) == 0) {
        $is_end_clause = 0;
       }
      }
      do {
       if (($is_end_clause | 0) != 0) {
        if ((HEAP32[$c1 >> 2] | 0) != 46) {
         break;
        }
        if (($c_next | 0) != 60) {
         break;
        }
        if ((HEAP32[19462] | 0) == 0) {
         break;
        }
        $is_end_clause = 0;
        $end_clause_index = HEAP32[$ix >> 2] | 0;
        $end_clause_after_tag = $punct_data;
       }
      } while (0);
     }
     if (($is_end_clause | 0) != 0) {
      label = 302;
      break L11;
     }
     if ((__Z3Eofv() | 0) == 0) {
      if ((_iswspace(HEAP32[$c2 >> 2] | 0) | 0) != 0) {
       __ZL6UngetCi($c_next);
      }
     }
    }
   }
  } while (0);
  if ((HEAP32[28404] | 0) == 1) {
   continue;
  }
  if ((HEAP32[$c1 >> 2] | 0) == ($announced_punctuation | 0)) {
   if ((__Z9IsBracketi(HEAP32[$c1 >> 2] | 0) | 0) != 0) {
    HEAP32[$c1 >> 2] = 57384;
   } else {
    if ((HEAP32[$c1 >> 2] | 0) != 45) {
     HEAP32[$c1 >> 2] = 32;
    }
   }
  }
  $j = (HEAP32[$ix >> 2] | 0) + 1 | 0;
  if ((HEAP32[$c1 >> 2] | 0) == 57404) {
   HEAP32[$c1 >> 2] = 60;
  }
  $1078 = __Z8utf8_outjPc(HEAP32[$c1 >> 2] | 0, $4 + (HEAP32[$ix >> 2] | 0) | 0) | 0;
  HEAP32[$ix >> 2] = (HEAP32[$ix >> 2] | 0) + $1078;
  do {
   if ((_iswspace(HEAP32[$c1 >> 2] | 0) | 0) == 0) {
    if ((__Z9IsBracketi(HEAP32[$c1 >> 2] | 0) | 0) != 0) {
     break;
    }
    HEAP16[$5 + (HEAP32[$ix >> 2] << 1) >> 1] = (HEAP32[22654] | 0) - (HEAP32[22658] | 0);
    while (1) {
     if (($j | 0) >= (HEAP32[$ix >> 2] | 0)) {
      break;
     }
     $1101 = $j;
     $j = $1101 + 1 | 0;
     HEAP16[$5 + ($1101 << 1) >> 1] = -1;
    }
   }
  } while (0);
  HEAP32[$6 >> 2] = HEAP32[$ix >> 2];
  do {
   if ((HEAP32[$ix >> 2] | 0) > ($7 - 75 | 0)) {
    if ((__Z7IsAlphaj(HEAP32[$c1 >> 2] | 0) | 0) != 0) {
     break;
    }
    if ((_iswdigit(HEAP32[$c1 >> 2] | 0) | 0) == 0) {
     label = 339;
     break L11;
    }
   }
  } while (0);
  if ((HEAP32[$ix >> 2] | 0) >= ($7 - 4 | 0)) {
   label = 339;
   break;
  }
 }
 if ((label | 0) == 17) {
  HEAP32[28590] = 1;
  $1 = 589864;
  $1162 = $1;
  STACKTOP = sp;
  return $1162 | 0;
 } else if ((label | 0) == 20) {
  HEAP32[28396] = 1;
  HEAP32[9470] = 0;
  __ZL6UngetCi(HEAP32[$c2 >> 2] | 0);
  $1 = 16384;
  $1162 = $1;
  STACKTOP = sp;
  return $1162 | 0;
 } else if ((label | 0) == 90) {
  if (($end_clause_after_tag | 0) != 0) {
   HEAP32[$ix >> 2] = $end_clause_index;
  }
  HEAP8[$4 + (HEAP32[$ix >> 2] | 0) | 0] = 32;
  $311 = HEAP32[$ix >> 2] | 0;
  HEAP32[$ix >> 2] = $311 + 1;
  HEAP8[$4 + $311 | 0] = 0;
  if (($terminator & 131072 | 0) != 0) {
   _strcpy($9 | 0, 113712) | 0;
  }
  $1 = $terminator;
  $1162 = $1;
  STACKTOP = sp;
  return $1162 | 0;
 } else if ((label | 0) == 111) {
  $385 = HEAP32[$ix >> 2] | 0;
  HEAP32[$ix >> 2] = $385 + 1;
  HEAP8[$4 + $385 | 0] = 0;
  while (1) {
   $390 = __ZL4GetCv() | 0;
   HEAP32[$c1 >> 2] = $390;
   do {
    if ((_iswspace($390) | 0) != 0) {
     $402 = 0;
    } else {
     if ((__Z3Eofv() | 0) != 0) {
      $402 = 0;
      break;
     }
     $402 = (HEAP32[$ix >> 2] | 0) < ($7 - 1 | 0);
    }
   } while (0);
   if (!$402) {
    break;
   }
   $405 = HEAP32[$c1 >> 2] & 255;
   $406 = HEAP32[$ix >> 2] | 0;
   HEAP32[$ix >> 2] = $406 + 1;
   HEAP8[$4 + $406 | 0] = $405;
  }
  $411 = HEAP32[$ix >> 2] | 0;
  HEAP32[$ix >> 2] = $411 + 1;
  HEAP8[$4 + $411 | 0] = 0;
  $1 = 147456;
  $1162 = $1;
  STACKTOP = sp;
  return $1162 | 0;
 } else if ((label | 0) == 242) {
  $1 = $terminator;
  $1162 = $1;
  STACKTOP = sp;
  return $1162 | 0;
 } else if ((label | 0) == 80) {
  __ZL6UngetCi(HEAP32[$c2 >> 2] | 0);
  HEAP32[28844] = HEAP32[$c1 >> 2];
  HEAP8[$4 + (HEAP32[$ix >> 2] | 0) | 0] = 32;
  HEAP8[$4 + ((HEAP32[$ix >> 2] | 0) + 1) | 0] = 0;
  $1 = 16384;
  $1162 = $1;
  STACKTOP = sp;
  return $1162 | 0;
 } else if ((label | 0) == 152) {
  HEAP32[30930] = 10184;
  __ZL6UngetCi(HEAP32[$c2 >> 2] | 0);
  HEAP8[$p_word | 0] = 0;
  $1 = 524328;
  $1162 = $1;
  STACKTOP = sp;
  return $1162 | 0;
 } else if ((label | 0) == 195) {
  __ZL6UngetCi(HEAP32[$c2 >> 2] | 0);
  if (($end_clause_after_tag | 0) != 0) {
   __ZL10RemoveCharPc($4 + $end_clause_index | 0);
  }
  HEAP8[$4 + (HEAP32[$ix >> 2] | 0) | 0] = 32;
  HEAP8[$4 + ((HEAP32[$ix >> 2] | 0) + 1) | 0] = 0;
  if (($parag | 0) > 3) {
   $parag = 3;
  }
  if ((HEAP32[19462] | 0) != 0) {
   $parag = 1;
  }
  $1 = ($parag * 30 | 0) + 524328 | 0;
  $1162 = $1;
  STACKTOP = sp;
  return $1162 | 0;
 } else if ((label | 0) == 203) {
  __ZL6UngetCi(HEAP32[$c2 >> 2] | 0);
  HEAP8[$4 + (HEAP32[$ix >> 2] | 0) | 0] = 32;
  HEAP8[$4 + ((HEAP32[$ix >> 2] | 0) + 1) | 0] = 0;
  $1 = 262174;
  $1162 = $1;
  STACKTOP = sp;
  return $1162 | 0;
 } else if ((label | 0) == 211) {
  __ZL6UngetCi(HEAP32[$c2 >> 2] | 0);
  HEAP32[28844] = HEAP32[$c1 >> 2];
  HEAP8[$4 + $end_clause_index | 0] = 32;
  HEAP8[$4 + ($end_clause_index + 1) | 0] = 0;
  $1 = $end_clause_after_tag;
  $1162 = $1;
  STACKTOP = sp;
  return $1162 | 0;
 } else if ((label | 0) == 302) {
  __ZL6UngetCi($c_next);
  HEAP8[$4 + (HEAP32[$ix >> 2] | 0) | 0] = 32;
  HEAP8[$4 + ((HEAP32[$ix >> 2] | 0) + 1) | 0] = 0;
  do {
   if ((_iswdigit($cprev) | 0) != 0) {
    if ((__Z7IsAlphaj($c_next) | 0) != 0) {
     break;
    }
    $punct_data = $punct_data & -4194305;
   }
  } while (0);
  if (($nl_count | 0) <= 1) {
   $1 = $punct_data;
   $1162 = $1;
   STACKTOP = sp;
   return $1162 | 0;
  }
  do {
   if (($punct_data | 0) != 532520) {
    if (($punct_data | 0) == 536621) {
     break;
    }
    $1 = 524358;
    $1162 = $1;
    STACKTOP = sp;
    return $1162 | 0;
   }
  } while (0);
  $1 = $punct_data + 35 | 0;
  $1162 = $1;
  STACKTOP = sp;
  return $1162 | 0;
 } else if ((label | 0) == 339) {
  HEAP8[$4 + (HEAP32[$ix >> 2] | 0) | 0] = 32;
  HEAP8[$4 + ((HEAP32[$ix >> 2] | 0) + 1) | 0] = 0;
  __ZL6UngetCi(HEAP32[$c2 >> 2] | 0);
  $1 = 16384;
  $1162 = $1;
  STACKTOP = sp;
  return $1162 | 0;
 } else if ((label | 0) == 341) {
  if (($stressed_word | 0) != 0) {
   $1143 = __Z8utf8_outjPc(1328, $4 + (HEAP32[$ix >> 2] | 0) | 0) | 0;
   HEAP32[$ix >> 2] = (HEAP32[$ix >> 2] | 0) + $1143;
  }
  if (($end_clause_after_tag | 0) != 0) {
   __ZL10RemoveCharPc($4 + $end_clause_index | 0);
  }
  HEAP8[$4 + (HEAP32[$ix >> 2] | 0) | 0] = 32;
  HEAP8[$4 + ((HEAP32[$ix >> 2] | 0) + 1) | 0] = 0;
  $1 = 589864;
  $1162 = $1;
  STACKTOP = sp;
  return $1162 | 0;
 } else if ((label | 0) == 104) {
  $341 = __Z11lookupwcharPKti(30304, HEAP32[$c1 >> 2] | 0) | 0;
  $punct = $341;
  if (($341 | 0) == 0) {
   HEAP16[$5 + (HEAP32[$ix >> 2] << 1) >> 1] = (HEAP32[22654] | 0) - (HEAP32[22658] | 0);
   HEAP32[$6 >> 2] = HEAP32[$ix >> 2];
   $357 = __Z8utf8_outjPc(HEAP32[$c1 >> 2] | 0, $4 + (HEAP32[$ix >> 2] | 0) | 0) | 0;
   HEAP32[$ix >> 2] = (HEAP32[$ix >> 2] | 0) + $357;
   $terminator = 524328;
  } else {
   $terminator = HEAP32[26640 + ($punct << 2) >> 2] | 0;
  }
  HEAP8[$4 + (HEAP32[$ix >> 2] | 0) | 0] = 32;
  HEAP8[$4 + ((HEAP32[$ix >> 2] | 0) + 1) | 0] = 0;
  $1 = $terminator;
  $1162 = $1;
  STACKTOP = sp;
  return $1162 | 0;
 }
 return 0;
}
function __Z9LoadVoicePKci($vname, $control) {
 $vname = $vname | 0;
 $control = $control | 0;
 var $1 = 0, $2 = 0, $3 = 0, $f_voice = 0, $p = 0, $key = 0, $ix = 0, $n = 0, $value = 0, $value2 = 0, $langix = 0, $tone_only = 0, $language_set = 0, $phonemes_set = 0, $stress_amps_set = 0, $stress_lengths_set = 0, $stress_add_set = 0, $conditional_rules = 0, $langopts = 0, $new_translator = 0, $voicename = 0, $language_name = 0, $translator_name = 0, $new_dictionary = 0, $phonemes_name = 0, $option_name = 0, $language_type = 0, $buf = 0, $path_voices = 0, $dict_min = 0, $stress_amps = 0, $stress_lengths = 0, $stress_add = 0, $names = 0, $name1 = 0, $name2 = 0, $voice_dir = 0, $pitch1 = 0, $pitch2 = 0, $len = 0, $priority = 0, $age = 0, $vgender = 0, $tone_data = 0, $srate = 0, $123 = 0, $153 = 0, $169 = 0, $175 = 0, $306 = 0, $367 = 0, $385 = 0, $423 = 0, $445 = 0, $455 = 0, $472 = 0, $523 = 0, $538 = 0, $542 = 0, $546 = 0, $575 = 0, $579 = 0, $589 = 0, $598 = 0, $619 = 0, $633 = 0, $665 = 0, $674 = 0, $675 = 0, $710 = 0, $736 = 0, $757 = 0, $761 = 0, $767 = 0, $851 = 0, $888 = 0, $938 = 0, $975 = 0, label = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1344 | 0;
 $ix = sp | 0;
 $value = sp + 8 | 0;
 $value2 = sp + 16 | 0;
 $voicename = sp + 24 | 0;
 $language_name = sp + 64 | 0;
 $translator_name = sp + 104 | 0;
 $new_dictionary = sp + 144 | 0;
 $phonemes_name = sp + 184 | 0;
 $option_name = sp + 224 | 0;
 $buf = sp + 264 | 0;
 $path_voices = sp + 456 | 0;
 $dict_min = sp + 632 | 0;
 $stress_amps = sp + 640 | 0;
 $stress_lengths = sp + 672 | 0;
 $stress_add = sp + 704 | 0;
 $names = sp + 736 | 0;
 $name1 = sp + 1056 | 0;
 $name2 = sp + 1096 | 0;
 $pitch1 = sp + 1176 | 0;
 $pitch2 = sp + 1184 | 0;
 $priority = sp + 1192 | 0;
 $age = sp + 1200 | 0;
 $vgender = sp + 1208 | 0;
 $tone_data = sp + 1288 | 0;
 $srate = sp + 1336 | 0;
 $2 = $vname;
 $3 = $control;
 $f_voice = 0;
 $langix = 0;
 $tone_only = $3 & 2;
 $language_set = 0;
 $phonemes_set = 0;
 $stress_amps_set = 0;
 $stress_lengths_set = 0;
 $stress_add_set = 0;
 $conditional_rules = 0;
 $langopts = 0;
 $new_translator = 0;
 HEAP32[$dict_min >> 2] = 0;
 __Z8strncpy0PcPKci($voicename | 0, $2, 40);
 do {
  if (($3 & 16 | 0) != 0) {
   _strcpy($buf | 0, $2 | 0) | 0;
   if ((__Z13GetFileLengthPKc($buf | 0) | 0) > 0) {
    break;
   }
   $1 = 0;
   $975 = $1;
   STACKTOP = sp;
   return $975 | 0;
  } else {
   if ((HEAP8[$voicename | 0] | 0) == 0) {
    _strcpy($voicename | 0, 9224) | 0;
   }
   _sprintf($path_voices | 0, 8688, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 24 | 0, HEAP32[tempVarArgs >> 2] = 76328, HEAP32[tempVarArgs + 8 >> 2] = 47, HEAP32[tempVarArgs + 16 >> 2] = 47, tempVarArgs) | 0) | 0;
   STACKTOP = tempVarArgs;
   _sprintf($buf | 0, 8216, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = $path_voices, HEAP32[tempVarArgs + 8 >> 2] = $voicename, tempVarArgs) | 0) | 0;
   STACKTOP = tempVarArgs;
   if ((__Z13GetFileLengthPKc($buf | 0) | 0) <= 0) {
    do {
     if ((HEAP8[$voicename | 0] | 0) == 109) {
      if ((HEAP8[$voicename + 1 | 0] | 0) != 98) {
       label = 11;
       break;
      }
      $voice_dir = 7696;
     } else {
      label = 11;
     }
    } while (0);
    if ((label | 0) == 11) {
     _sprintf($name2 | 0, 18120, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $voicename, tempVarArgs) | 0) | 0;
     STACKTOP = tempVarArgs;
     if ((_strstr(HEAP32[5292] | 0, $voicename | 0) | 0) != 0) {
      $voice_dir = 17592;
     } else {
      if ((_strstr(HEAP32[5294] | 0, $voicename | 0) | 0) != 0) {
       $voice_dir = 17104;
      } else {
       $voice_dir = 16864;
      }
     }
     _sprintf($buf | 0, 16688, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 32 | 0, HEAP32[tempVarArgs >> 2] = $path_voices, HEAP32[tempVarArgs + 8 >> 2] = $voice_dir, HEAP32[tempVarArgs + 16 >> 2] = 47, HEAP32[tempVarArgs + 24 >> 2] = $voicename, tempVarArgs) | 0) | 0;
     STACKTOP = tempVarArgs;
     if ((__Z13GetFileLengthPKc($buf | 0) | 0) <= 0) {
      _sprintf($buf | 0, 16552, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 24 | 0, HEAP32[tempVarArgs >> 2] = $path_voices, HEAP32[tempVarArgs + 8 >> 2] = 47, HEAP32[tempVarArgs + 16 >> 2] = $voicename, tempVarArgs) | 0) | 0;
      STACKTOP = tempVarArgs;
     }
    }
   }
  }
 } while (0);
 $f_voice = _fopen($buf | 0, 16368) | 0;
 $language_type = 16232;
 if (($f_voice | 0) == 0) {
  if (($3 & 3 | 0) != 0) {
   $1 = 0;
   $975 = $1;
   STACKTOP = sp;
   return $975 | 0;
  }
  if ((__Z22SelectPhonemeTableNamePKc($voicename | 0) | 0) >= 0) {
   $language_type = $voicename | 0;
  }
 }
 do {
  if (($tone_only | 0) == 0) {
   if ((HEAP32[9112] | 0) == 0) {
    break;
   }
   __Z16DeleteTranslatorP10Translator(HEAP32[9112] | 0);
   HEAP32[9112] = 0;
  }
 } while (0);
 _strcpy($translator_name | 0, $language_type | 0) | 0;
 _strcpy($new_dictionary | 0, $language_type | 0) | 0;
 _strcpy($phonemes_name | 0, $language_type | 0) | 0;
 if (($tone_only | 0) != 0) {
  $123 = _strchr(102376, 43) | 0;
  $p = $123;
  if (($123 | 0) != 0) {
   HEAP8[$p] = 0;
  }
  _sprintf($buf | 0, 16128, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $2 + 3, tempVarArgs) | 0) | 0;
  STACKTOP = tempVarArgs;
  _strcat(102376, $buf | 0) | 0;
  $langopts = HEAP32[9112] | 0;
 } else {
  HEAP32[144] = 105200;
  __Z8strncpy0PcPKci(102376, $2, 40);
  HEAP8[102520] = 0;
  HEAP8[102416] = 0;
  HEAP32[22640] = 102376;
  HEAP32[22638] = 102520;
  HEAP32[22639] = 102416;
 }
 __Z10VoiceReseti($tone_only);
 if (($tone_only | 0) == 0) {
  __Z22SelectPhonemeTableNamePKc($phonemes_name | 0) | 0;
 }
 while (1) {
  if (($f_voice | 0) != 0) {
   $153 = (__ZL11fgets_stripPciP8_IO_FILE($buf | 0, 190, $f_voice) | 0) != 0;
  } else {
   $153 = 0;
  }
  if (!$153) {
   break;
  }
  $p = $buf | 0;
  while (1) {
   if ((HEAP8[$p] | 0) != 0) {
    $169 = (_isspace(HEAP8[$p] | 0) | 0) != 0 ^ 1;
   } else {
    $169 = 0;
   }
   if (!$169) {
    break;
   }
   $p = $p + 1 | 0;
  }
  $175 = $p;
  $p = $175 + 1 | 0;
  HEAP8[$175] = 0;
  if ((HEAP8[$buf | 0] | 0) == 0) {
   continue;
  }
  $key = __Z10LookupMnemP8MNEM_TABPKc(30416, $buf | 0) | 0;
  L73 : do {
   switch ($key | 0) {
   case 1:
    {
     if (($tone_only | 0) == 0) {
      while (1) {
       if ((_isspace(HEAP8[$p] | 0) | 0) == 0) {
        break;
       }
       $p = $p + 1 | 0;
      }
      __Z8strncpy0PcPKci(102520, $p, 40);
     }
     break;
    }
   case 2:
    {
     if (($tone_only | 0) != 0) {
      break L73;
     }
     HEAP32[$priority >> 2] = 5;
     HEAP8[$language_name | 0] = 0;
     _sscanf($p | 0, 15976, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = $language_name, HEAP32[tempVarArgs + 8 >> 2] = $priority, tempVarArgs) | 0) | 0;
     STACKTOP = tempVarArgs;
     if ((_strcmp($language_name | 0, 15864) | 0) == 0) {
      break L73;
     }
     $len = (_strlen($language_name | 0) | 0) + 2 | 0;
     if ($len >>> 0 < (100 - $langix - 1 | 0) >>> 0) {
      HEAP8[102416 + $langix | 0] = HEAP32[$priority >> 2];
      _strcpy($langix + 102417 | 0, $language_name | 0) | 0;
      $langix = $langix + $len | 0;
     }
     if (($language_set | 0) == 0) {
      $language_type = _strtok($language_name | 0, 15728) | 0;
      $language_set = 1;
      _strcpy($translator_name | 0, $language_type | 0) | 0;
      _strcpy($new_dictionary | 0, $language_type | 0) | 0;
      _strcpy($phonemes_name | 0, $language_type | 0) | 0;
      __Z22SelectPhonemeTableNamePKc($phonemes_name | 0) | 0;
      if (($new_translator | 0) != 0) {
       __Z16DeleteTranslatorP10Translator($new_translator);
      }
      $new_translator = __Z16SelectTranslatorPKc($translator_name | 0) | 0;
      $langopts = $new_translator | 0;
      __Z8strncpy0PcPKci((HEAP32[144] | 0) + 40 | 0, $language_name | 0, 20);
     }
     break;
    }
   case 36:
    {
     if (($phonemes_set | 0) == 0) {
      __Z22SelectPhonemeTableNamePKc($phonemes_name | 0) | 0;
      $phonemes_set = 1;
     }
     __ZL18PhonemeReplacementiPc($key, $p);
     break;
    }
   case 17:
    {
     _sscanf($p | 0, 15424, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = $langopts, HEAP32[tempVarArgs + 8 >> 2] = $langopts + 4, tempVarArgs) | 0) | 0;
     STACKTOP = tempVarArgs;
     break;
    }
   case 24:
    {
     _sscanf($p | 0, 14816, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 32 | 0, HEAP32[tempVarArgs >> 2] = $langopts + 8, HEAP32[tempVarArgs + 8 >> 2] = $langopts + 12, HEAP32[tempVarArgs + 16 >> 2] = $langopts + 16, HEAP32[tempVarArgs + 24 >> 2] = $langopts + 20, tempVarArgs) | 0) | 0;
     STACKTOP = tempVarArgs;
     break;
    }
   case 26:
    {
     $523 = _sscanf($p | 0, 14744, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $value, tempVarArgs) | 0) | 0;
     STACKTOP = tempVarArgs;
     do {
      if (($523 | 0) == 1) {
       if ((HEAP32[$value >> 2] | 0) >= 20) {
        break;
       }
       HEAP32[$new_translator + 448 >> 2] = HEAP32[6888 + (HEAP32[$value >> 2] << 2) >> 2];
      }
     } while (0);
     break;
    }
   case 28:
    {
     HEAP32[$value2 >> 2] = 0;
     $538 = _sscanf($p | 0, 14648, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 24 | 0, HEAP32[tempVarArgs >> 2] = $option_name, HEAP32[tempVarArgs + 8 >> 2] = $value, HEAP32[tempVarArgs + 16 >> 2] = $value2, tempVarArgs) | 0) | 0;
     STACKTOP = tempVarArgs;
     if (($538 | 0) >= 2) {
      $542 = __Z10LookupMnemP8MNEM_TABPKc(30392, $option_name | 0) | 0;
      HEAP32[$ix >> 2] = $542;
      if (($542 | 0) >= 0) {
       label = 134;
      } else {
       label = 132;
      }
     } else {
      label = 132;
     }
     do {
      if ((label | 0) == 132) {
       label = 0;
       $546 = _sscanf($p | 0, 14480, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 24 | 0, HEAP32[tempVarArgs >> 2] = $ix, HEAP32[tempVarArgs + 8 >> 2] = $value, HEAP32[tempVarArgs + 16 >> 2] = $value2, tempVarArgs) | 0) | 0;
       STACKTOP = tempVarArgs;
       if (($546 | 0) >= 2) {
        if ((HEAP32[$ix >> 2] | 0) < 21) {
         label = 134;
         break;
        }
       }
       _fprintf(HEAP32[_stderr >> 2] | 0, 14224, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = $buf, HEAP32[tempVarArgs + 8 >> 2] = $p, tempVarArgs) | 0) | 0;
       STACKTOP = tempVarArgs;
      }
     } while (0);
     if ((label | 0) == 134) {
      label = 0;
      HEAP32[$langopts + 24 + (HEAP32[$ix >> 2] << 2) >> 2] = HEAP32[$value >> 2];
      HEAP32[$langopts + 108 + (HEAP32[$ix >> 2] << 2) >> 2] = HEAP32[$value2 >> 2];
     }
     break;
    }
   case 9:
    {
     HEAP32[$value >> 2] = 0;
     HEAP32[(HEAP32[144] | 0) + 100 >> 2] = 0;
     $575 = (HEAP32[144] | 0) + 100 | 0;
     _sscanf($p | 0, 15424, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = (HEAP32[144] | 0) + 96, HEAP32[tempVarArgs + 8 >> 2] = $575, tempVarArgs) | 0) | 0;
     STACKTOP = tempVarArgs;
     break;
    }
   case 10:
    {
     $579 = _sscanf($p | 0, 14744, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $value, tempVarArgs) | 0) | 0;
     STACKTOP = tempVarArgs;
     if (($579 | 0) == 1) {
      HEAP32[(HEAP32[144] | 0) + 88 >> 2] = HEAP32[$value >> 2] << 5;
     }
     break;
    }
   case 11:
    {
     $589 = _sscanf($p | 0, 14744, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $value, tempVarArgs) | 0) | 0;
     STACKTOP = tempVarArgs;
     if (($589 | 0) == 1) {
      HEAP32[(HEAP32[144] | 0) + 92 >> 2] = HEAP32[$value >> 2];
     }
     break;
    }
   case 12:
    {
     $598 = _sscanf($p | 0, 14744, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $value, tempVarArgs) | 0) | 0;
     STACKTOP = tempVarArgs;
     if (($598 | 0) == 1) {
      if ((HEAP32[$value >> 2] | 0) > 4) {
       HEAP32[(HEAP32[144] | 0) + 108 >> 2] = 1;
       HEAP32[$value >> 2] = 4;
      }
      HEAP32[(HEAP32[144] | 0) + 104 >> 2] = (HEAP32[$value >> 2] | 0) + 1;
     }
     break;
    }
   case 13:
    {
     __Z14ReadTonePointsPcPi($p, $tone_data | 0);
     __ZL13SetToneAdjustP7voice_tPi(HEAP32[144] | 0, $tone_data | 0);
     break;
    }
   case 14:
    {
     $619 = _sscanf($p | 0, 14744, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $value, tempVarArgs) | 0) | 0;
     STACKTOP = tempVarArgs;
     if (($619 | 0) == 1) {
      HEAP32[(HEAP32[144] | 0) + 112 >> 2] = (HEAP32[$value >> 2] << 6 | 0) / 100 | 0;
     }
     break;
    }
   case 15:
    {
     $633 = __ZL12Read8NumbersPcPi($p, (HEAP32[144] | 0) + 296 | 0) | 0;
     HEAP32[(HEAP32[144] | 0) + 292 >> 2] = $633;
     HEAP32[$ix >> 2] = 1;
     while (1) {
      if ((HEAP32[$ix >> 2] | 0) >= 8) {
       break;
      }
      if (((HEAP32[$ix >> 2] | 0) % 2 | 0 | 0) != 0) {
       HEAP32[(HEAP32[144] | 0) + 292 + (HEAP32[$ix >> 2] << 2) >> 2] = -(HEAP32[(HEAP32[144] | 0) + 292 + (HEAP32[$ix >> 2] << 2) >> 2] | 0);
      }
      HEAP32[$ix >> 2] = (HEAP32[$ix >> 2] | 0) + 1;
     }
     break;
    }
   case 16:
    {
     $665 = __ZL12Read8NumbersPcPi($p, (HEAP32[144] | 0) + 332 | 0) | 0;
     HEAP32[(HEAP32[144] | 0) + 328 >> 2] = $665;
     break;
    }
   case 37:
    {
     $674 = (HEAP32[144] | 0) + 124 | 0;
     $675 = _sscanf($p | 0, 15424, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = (HEAP32[144] | 0) + 120, HEAP32[tempVarArgs + 8 >> 2] = $674, tempVarArgs) | 0) | 0;
     STACKTOP = tempVarArgs;
     HEAP32[$value >> 2] = $675;
     break;
    }
   case 32:
    {
     _sscanf($p | 0, 14744, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = (HEAP32[144] | 0) + 84, tempVarArgs) | 0) | 0;
     STACKTOP = tempVarArgs;
     break;
    }
   case 29:
    {
     HEAP32[$srate >> 2] = 16e3;
     HEAP8[$name2 | 0] = 0;
     _sscanf($p | 0, 14120, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 24 | 0, HEAP32[tempVarArgs >> 2] = $name1, HEAP32[tempVarArgs + 8 >> 2] = $name2, HEAP32[tempVarArgs + 16 >> 2] = $srate, tempVarArgs) | 0) | 0;
     STACKTOP = tempVarArgs;
     if ((__Z15LoadMbrolaTablePKcS0_i($name1 | 0, $name2 | 0, HEAP32[$srate >> 2] | 0) | 0) != 0) {
      _fprintf(HEAP32[_stderr >> 2] | 0, 13960, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 7 & -8, HEAP32[tempVarArgs >> 2] = 0, tempVarArgs) | 0) | 0;
      STACKTOP = tempVarArgs;
     }
     HEAP32[(HEAP32[144] | 0) + 128 >> 2] = HEAP32[$srate >> 2];
     break;
    }
   case 30:
    {
     HEAP32[(HEAP32[144] | 0) + 132 >> 2] = 1;
     __ZL12Read8NumbersPcPi($p, (HEAP32[144] | 0) + 132 | 0) | 0;
     $710 = (HEAP32[144] | 0) + 152 | 0;
     HEAP32[$710 >> 2] = (HEAP32[$710 >> 2] | 0) - 40;
     break;
    }
   case 31:
    {
     __ZL12Read8NumbersPcPi($p, 36488) | 0;
     __Z8SetSpeedi(3);
     break;
    }
   case 33:
    {
     _sscanf($p | 0, 14744, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $dict_min, tempVarArgs) | 0) | 0;
     STACKTOP = tempVarArgs;
     break;
    }
   case 34:
    {
     HEAP8[$name2 | 0] = 0;
     HEAP8[$name1 | 0] = 0;
     _sscanf($p | 0, 13864, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = $name1, HEAP32[tempVarArgs + 8 >> 2] = $name2, tempVarArgs) | 0) | 0;
     STACKTOP = tempVarArgs;
     if ((_strcmp($name1 | 0, 13768) | 0) == 0) {
      __Z8strncpy0PcPKci($langopts + 288 | 0, $name2 | 0, 8);
     } else {
      $736 = __Z16AlphabetFromNamePKc($name1 | 0) | 0;
      if (($736 | 0) != 0) {
       HEAP32[$langopts + 300 >> 2] = HEAP32[$736 + 4 >> 2];
       HEAP32[$langopts + 304 >> 2] = __ZL13StringToWord2PKc($name2 | 0) | 0;
      } else {
       _fprintf(HEAP32[_stderr >> 2] | 0, 13648, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $name1, tempVarArgs) | 0) | 0;
       STACKTOP = tempVarArgs;
      }
     }
     break;
    }
   case 35:
    {
     $757 = _sscanf($p | 0, 15544, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $name1, tempVarArgs) | 0) | 0;
     STACKTOP = tempVarArgs;
     if (($757 | 0) == 1) {
      $761 = __Z10LookupMnemP8MNEM_TABPKc(29672, $name1 | 0) | 0;
      HEAP32[$ix >> 2] = $761;
      if (($761 | 0) > 0) {
       $767 = $langopts + 320 | 0;
       HEAP32[$767 >> 2] = HEAP32[$767 >> 2] | 1 << HEAP32[$ix >> 2];
      } else {
       _fprintf(HEAP32[_stderr >> 2] | 0, 13544, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $name1, tempVarArgs) | 0) | 0;
       STACKTOP = tempVarArgs;
      }
     }
     break;
    }
   case 3:
    {
     HEAP32[$age >> 2] = 0;
     _sscanf($p | 0, 15976, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = $vgender, HEAP32[tempVarArgs + 8 >> 2] = $age, tempVarArgs) | 0) | 0;
     STACKTOP = tempVarArgs;
     HEAP8[90564] = __Z10LookupMnemP8MNEM_TABPKc(6280, $vgender | 0) | 0;
     HEAP8[90565] = HEAP32[$age >> 2];
     break;
    }
   case 4:
    {
     if (($tone_only | 0) != 0) {
      break L73;
     }
     _sscanf($p | 0, 15544, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $translator_name, tempVarArgs) | 0) | 0;
     STACKTOP = tempVarArgs;
     if (($new_translator | 0) != 0) {
      __Z16DeleteTranslatorP10Translator($new_translator);
     }
     $new_translator = __Z16SelectTranslatorPKc($translator_name | 0) | 0;
     $langopts = $new_translator | 0;
     break;
    }
   case 6:
    {
     _sscanf($p | 0, 15544, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $new_dictionary, tempVarArgs) | 0) | 0;
     STACKTOP = tempVarArgs;
     break;
    }
   case 5:
    {
     _sscanf($p | 0, 15544, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $phonemes_name, tempVarArgs) | 0) | 0;
     STACKTOP = tempVarArgs;
     break;
    }
   case 7:
    {
     __ZL12VoiceFormantPc($p);
     break;
    }
   case 8:
    {
     $306 = _sscanf($p | 0, 15424, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = $pitch1, HEAP32[tempVarArgs + 8 >> 2] = $pitch2, tempVarArgs) | 0) | 0;
     STACKTOP = tempVarArgs;
     $n = $306;
     HEAP32[(HEAP32[144] | 0) + 64 >> 2] = (HEAP32[$pitch1 >> 2] | 0) - 9 << 12;
     HEAP32[(HEAP32[144] | 0) + 68 >> 2] = ((HEAP32[$pitch2 >> 2] | 0) - (HEAP32[$pitch1 >> 2] | 0) | 0) * 108 | 0;
     HEAP32[(HEAP32[144] | 0) + 116 >> 2] = ~~((+((HEAP32[$pitch1 >> 2] | 0) - 82 | 0) / 82.0 / 4.0 + 1.0) * 256.0);
     break;
    }
   case 20:
    {
     $stress_lengths_set = __ZL12Read8NumbersPcPi($p, $stress_lengths | 0) | 0;
     break;
    }
   case 21:
    {
     $stress_amps_set = __ZL12Read8NumbersPcPi($p, $stress_amps | 0) | 0;
     break;
    }
   case 22:
    {
     $stress_add_set = __ZL12Read8NumbersPcPi($p, $stress_add | 0) | 0;
     break;
    }
   case 18:
    {
     _sscanf($p | 0, 15424, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = 77832, HEAP32[tempVarArgs + 8 >> 2] = 77840, tempVarArgs) | 0) | 0;
     STACKTOP = tempVarArgs;
     if ((HEAP32[19458] & 255 | 0) != 0) {
      HEAP32[$langopts + 248 >> 2] = HEAP32[19458] & 255;
     }
     break;
    }
   case 19:
    {
     $367 = _sscanf($p | 0, 15256, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 48 | 0, HEAP32[tempVarArgs >> 2] = $names, HEAP32[tempVarArgs + 8 >> 2] = $names + 40, HEAP32[tempVarArgs + 16 >> 2] = $names + 80, HEAP32[tempVarArgs + 24 >> 2] = $names + 120, HEAP32[tempVarArgs + 32 >> 2] = $names + 160, HEAP32[tempVarArgs + 40 >> 2] = $names + 200, tempVarArgs) | 0) | 0;
     STACKTOP = tempVarArgs;
     $n = $367;
     HEAP32[$langopts + 248 >> 2] = 0;
     HEAP32[$ix >> 2] = 0;
     while (1) {
      if ((HEAP32[$ix >> 2] | 0) >= ($n | 0)) {
       break;
      }
      if ((_strcmp($names + ((HEAP32[$ix >> 2] | 0) * 40 | 0) | 0, 15168) | 0) == 0) {} else {
       $385 = __ZL10LookupTunePKc($names + ((HEAP32[$ix >> 2] | 0) * 40 | 0) | 0) | 0;
       HEAP32[$value >> 2] = $385;
       if (($385 | 0) < 0) {
        _fprintf(HEAP32[_stderr >> 2] | 0, 15016, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $names + ((HEAP32[$ix >> 2] | 0) * 40 | 0), tempVarArgs) | 0) | 0;
        STACKTOP = tempVarArgs;
       } else {
        HEAP8[$langopts + 252 + (HEAP32[$ix >> 2] | 0) | 0] = HEAP32[$value >> 2];
       }
      }
      HEAP32[$ix >> 2] = (HEAP32[$ix >> 2] | 0) + 1;
     }
     break;
    }
   case 23:
   case 27:
   case 25:
    {
     while (1) {
      if ((HEAP8[$p] | 0) == 0) {
       break;
      }
      while (1) {
       if ((_isspace(HEAP8[$p] | 0) | 0) == 0) {
        break;
       }
       $p = $p + 1 | 0;
      }
      $n = -1;
      $423 = _atoi($p | 0) | 0;
      $n = $423;
      if (($423 | 0) > 0) {
       $p = $p + 1 | 0;
       if (($n | 0) < 32) {
        if (($key | 0) == 23) {
         $conditional_rules = $conditional_rules | 1 << $n;
        } else {
         if (($key | 0) == 27) {
          $445 = $langopts + 200 | 0;
          HEAP32[$445 >> 2] = HEAP32[$445 >> 2] | 1 << $n;
         } else {
          if (($key | 0) == 25) {
           $455 = $langopts + 12 | 0;
           HEAP32[$455 >> 2] = HEAP32[$455 >> 2] | 1 << $n;
          }
         }
        }
       } else {
        do {
         if (($key | 0) == 27) {
          if (($n | 0) >= 64) {
           label = 113;
           break;
          }
          $472 = $langopts + 200 | 0;
          HEAP32[$472 >> 2] = HEAP32[$472 >> 2] | 1 << $n - 32;
         } else {
          label = 113;
         }
        } while (0);
        if ((label | 0) == 113) {
         label = 0;
         _fprintf(HEAP32[_stderr >> 2] | 0, 14912, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $n, tempVarArgs) | 0) | 0;
         STACKTOP = tempVarArgs;
        }
       }
      }
      while (1) {
       if ((_isalnum(HEAP8[$p] | 0) | 0) == 0) {
        break;
       }
       $p = $p + 1 | 0;
      }
     }
     __Z22ProcessLanguageOptionsP16LANGUAGE_OPTIONS($langopts);
     break;
    }
   default:
    {
     if (($key & 65280 | 0) == 256) {
      _sscanf($p | 0, 14744, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $langopts + 24 + (($key & 255) << 2), tempVarArgs) | 0) | 0;
      STACKTOP = tempVarArgs;
     } else {
      _fprintf(HEAP32[_stderr >> 2] | 0, 13416, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $buf, tempVarArgs) | 0) | 0;
      STACKTOP = tempVarArgs;
     }
    }
   }
  } while (0);
 }
 if (($f_voice | 0) != 0) {
  _fclose($f_voice | 0) | 0;
 }
 do {
  if (($new_translator | 0) == 0) {
   if (($tone_only | 0) != 0) {
    break;
   }
   $new_translator = __Z16SelectTranslatorPKc($translator_name | 0) | 0;
  }
 } while (0);
 __Z8SetSpeedi(3);
 HEAP32[$ix >> 2] = 0;
 while (1) {
  if ((HEAP32[$ix >> 2] | 0) >= 9) {
   break;
  }
  HEAP16[(HEAP32[144] | 0) + 236 + (HEAP32[$ix >> 2] << 1) >> 1] = HEAP16[(HEAP32[144] | 0) + 164 + (HEAP32[$ix >> 2] << 1) >> 1] | 0;
  HEAP16[(HEAP32[144] | 0) + 254 + (HEAP32[$ix >> 2] << 1) >> 1] = HEAP16[(HEAP32[144] | 0) + 182 + (HEAP32[$ix >> 2] << 1) >> 1] | 0;
  HEAP16[(HEAP32[144] | 0) + 272 + (HEAP32[$ix >> 2] << 1) >> 1] = HEAP16[(HEAP32[144] | 0) + 200 + (HEAP32[$ix >> 2] << 1) >> 1] | 0;
  HEAP32[$ix >> 2] = (HEAP32[$ix >> 2] | 0) + 1;
 }
 do {
  if (($tone_only | 0) != 0) {
   $new_translator = HEAP32[9112] | 0;
  } else {
   $851 = __Z22SelectPhonemeTableNamePKc($phonemes_name | 0) | 0;
   HEAP32[$ix >> 2] = $851;
   if (($851 | 0) < 0) {
    _fprintf(HEAP32[_stderr >> 2] | 0, 11056, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $phonemes_name, tempVarArgs) | 0) | 0;
    STACKTOP = tempVarArgs;
    HEAP32[$ix >> 2] = 0;
   }
   HEAP32[(HEAP32[144] | 0) + 60 >> 2] = HEAP32[$ix >> 2];
   HEAP32[$new_translator + 404 >> 2] = HEAP32[$ix >> 2];
   HEAP32[$new_translator + 444 >> 2] = HEAP32[$dict_min >> 2];
   __Z14LoadDictionaryP10TranslatorPKci($new_translator, $new_dictionary | 0, $3 & 4) | 0;
   if ((HEAP8[90512] | 0) != 0) {
    HEAP32[$new_translator + 440 >> 2] = $conditional_rules;
    HEAP8[102416 + $langix | 0] = 0;
    break;
   }
   $1 = 0;
   $975 = $1;
   STACKTOP = sp;
   return $975 | 0;
  }
 } while (0);
 $langopts = $new_translator | 0;
 $888 = HEAP32[$langopts + 48 >> 2] | 0;
 HEAP32[$value >> 2] = $888;
 if (($888 | 0) != 0) {
  __Z13SetLengthModsP10Translatori($new_translator, HEAP32[$value >> 2] | 0);
 }
 HEAP16[(HEAP32[144] | 0) + 200 >> 1] = ((HEAP16[(HEAP32[144] | 0) + 200 >> 1] | 0) * 105 | 0 | 0) / 100 | 0;
 if (($tone_only | 0) == 0) {
  HEAP32[9112] = $new_translator;
 }
 HEAP32[$ix >> 2] = 0;
 while (1) {
  if ((HEAP32[$ix >> 2] | 0) >= ($stress_lengths_set | 0)) {
   break;
  }
  HEAP16[(HEAP32[9112] | 0) + 424 + (HEAP32[$ix >> 2] << 1) >> 1] = HEAP32[$stress_lengths + (HEAP32[$ix >> 2] << 2) >> 2];
  HEAP32[$ix >> 2] = (HEAP32[$ix >> 2] | 0) + 1;
 }
 HEAP32[$ix >> 2] = 0;
 while (1) {
  if ((HEAP32[$ix >> 2] | 0) >= ($stress_add_set | 0)) {
   break;
  }
  $938 = (HEAP32[9112] | 0) + 424 + (HEAP32[$ix >> 2] << 1) | 0;
  HEAP16[$938 >> 1] = (HEAP16[$938 >> 1] | 0) + (HEAP32[$stress_add + (HEAP32[$ix >> 2] << 2) >> 2] | 0);
  HEAP32[$ix >> 2] = (HEAP32[$ix >> 2] | 0) + 1;
 }
 HEAP32[$ix >> 2] = 0;
 while (1) {
  if ((HEAP32[$ix >> 2] | 0) >= ($stress_amps_set | 0)) {
   break;
  }
  HEAP8[(HEAP32[9112] | 0) + 408 + (HEAP32[$ix >> 2] | 0) | 0] = HEAP32[$stress_amps + (HEAP32[$ix >> 2] << 2) >> 2];
  HEAP8[(HEAP32[9112] | 0) + 416 + (HEAP32[$ix >> 2] | 0) | 0] = (HEAP32[$stress_amps + (HEAP32[$ix >> 2] << 2) >> 2] | 0) - 1;
  HEAP32[$ix >> 2] = (HEAP32[$ix >> 2] | 0) + 1;
 }
 $1 = HEAP32[144] | 0;
 $975 = $1;
 STACKTOP = sp;
 return $975 | 0;
}
function __Z16SelectTranslatorPKc($name) {
 $name = $name | 0;
 var $1 = 0, $name2 = 0, $tr = 0, $16 = 0, $22 = 0, $573 = 0, $1324 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = $name;
 $name2 = 0;
 $tr = __ZL13NewTranslatorv() | 0;
 _strcpy($tr + 340 | 0, $1 | 0) | 0;
 while (1) {
  if ((HEAP8[$1] | 0) == 0) {
   break;
  }
  $16 = $1;
  $1 = $16 + 1 | 0;
  $name2 = ($name2 << 8) + (HEAP8[$16] | 0) | 0;
 }
 $22 = $name2;
 if (($22 | 0) == 25701) {
  __Z15SetupTranslatorP10TranslatorPKsPKh($tr, 22616, 23208);
  HEAP32[$tr + 8 >> 2] = 0;
  HEAP32[$tr >> 2] = 8;
  HEAP32[$tr + 4 >> 2] = 48;
  HEAP32[$tr + 36 >> 2] = 1;
  HEAP32[$tr + 40 >> 2] = 256;
  HEAP32[$tr + 96 >> 2] = 87;
  HEAP32[$tr + 200 >> 2] = 16846872;
  __ZL14SetLetterVowelP10Translatori($tr, 121);
  HEAP32[$tr + 44 >> 2] = 2;
 } else if (($22 | 0) == 26209) {
  HEAP32[$tr + 332 >> 2] = 1568;
  HEAP32[$tr + 328 >> 2] = 1740;
  HEAP32[$tr + 336 >> 2] = 22704;
  HEAP32[$tr + 720 >> 2] = 1536;
  HEAP32[$tr + 200 >> 2] = 96;
  HEAP32[$tr + 44 >> 2] = 1;
  HEAP32[$tr + 460 >> 2] = 25384;
 } else if (($22 | 0) == 25972) {
  HEAP32[$tr + 448 >> 2] = HEAP32[1726];
  label = 33;
 } else if (($22 | 0) == 26217) {
  label = 33;
 } else if (($22 | 0) == 24934) {
  __Z15SetupTranslatorP10TranslatorPKsPKh($tr, 22680, 0);
  HEAP32[$tr + 8 >> 2] = 0;
  HEAP32[$tr + 4 >> 2] = 48;
  HEAP32[$tr + 28 >> 2] = 1;
  HEAP32[$tr + 36 >> 2] = 1;
  __ZL14SetLetterVowelP10Translatori($tr, 121);
  HEAP32[$tr + 200 >> 2] = 16779472;
  HEAP32[$tr + 240 >> 2] = 1;
 } else if (($22 | 0) == 24941) {
  __Z15SetupTranslatorP10TranslatorPKsPKh($tr, 22504, 23160);
  HEAP32[$tr + 720 >> 2] = 4608;
  HEAP32[$tr + 8 >> 2] = 0;
  HEAP32[$tr + 12 >> 2] = 36;
  HEAP32[$tr + 196 >> 2] = HEAP32[$tr + 192 >> 2];
  HEAP32[$tr + 44 >> 2] = 1;
  HEAP32[$tr + 200 >> 2] = 1024;
 } else if (($22 | 0) == 25973) {
  __Z15SetupTranslatorP10TranslatorPKsPKh($tr, 22536, 23176);
  HEAP32[$tr + 8 >> 2] = 1;
  HEAP32[$tr + 200 >> 2] = 3147080;
 } else if (($22 | 0) == 26226) {
  __Z15SetupTranslatorP10TranslatorPKsPKh($tr, 22504, 23160);
  HEAP32[$tr + 8 >> 2] = 3;
  HEAP32[$tr + 12 >> 2] = 36;
  HEAP32[$tr + 32 >> 2] = 1;
  HEAP32[$tr + 196 >> 2] = HEAP32[$tr + 192 >> 2];
  HEAP32[$tr + 240 >> 2] = 2;
  HEAP32[$tr + 200 >> 2] = 118658312;
  __ZL14SetLetterVowelP10Translatori($tr, 121);
 } else if (($22 | 0) == 26465 | ($22 | 0) == 26468) {
  HEAP32[$tr + 8 >> 2] = 0;
  HEAP32[$tr + 12 >> 2] = 32;
  HEAP32[$tr + 200 >> 2] = 2098176;
  HEAP32[$tr + 240 >> 2] = 2;
  HEAP32[$tr + 44 >> 2] = 3;
  HEAP32[$tr + 32 >> 2] = 1;
 } else if (($22 | 0) == 26729 | ($22 | 0) == 28261 | ($22 | 0) == 28530 | ($22 | 0) == 28769 | ($22 | 0) == 26485) {
  __Z15SetupTranslatorP10TranslatorPKsPKh($tr, 22488, 23152);
  HEAP32[$tr + 448 >> 2] = HEAP32[1741];
  HEAP32[$tr + 196 >> 2] = HEAP32[$tr + 192 >> 2];
  HEAP32[$tr + 8 >> 2] = 6;
  HEAP32[$tr + 12 >> 2] = 65540;
  HEAP32[$tr + 200 >> 2] = 16;
  HEAP32[$tr + 208 >> 2] = 84648;
  HEAP32[$tr + 720 >> 2] = 2304;
  if (($name2 | 0) == 28769) {
   HEAP32[$tr + 720 >> 2] = 2560;
  } else {
   if (($name2 | 0) == 26485) {
    __Z15SetupTranslatorP10TranslatorPKsPKh($tr, 21992, 22696);
    HEAP32[$tr + 720 >> 2] = 2688;
    HEAP32[$tr + 8 >> 2] = 2;
   } else {
    if (($name2 | 0) == 28261) {
     __Z15SetupTranslatorP10TranslatorPKsPKh($tr, 21992, 22696);
     HEAP32[$tr + 208 >> 2] = 2796200;
     HEAP32[$tr + 228 >> 2] = 22;
     $573 = $tr + 204 | 0;
     HEAP32[$573 >> 2] = HEAP32[$573 >> 2] | 32768;
    } else {
     if (($name2 | 0) == 28530) {
      HEAP32[$tr + 720 >> 2] = 2816;
     }
    }
   }
  }
  __Z15SetIndicLettersP10Translator($tr);
 } else if (($22 | 0) == 27499) {
  HEAP32[$tr + 720 >> 2] = 1056;
  _memset($tr + 464 | 0, 0, 256) | 0;
  __ZL13SetLetterBitsP10TranslatoriPKc($tr, 0, 23768);
  __ZL13SetLetterBitsP10TranslatoriPKc($tr, 2, 28656);
  __ZL13SetLetterBitsP10TranslatoriPKc($tr, 7, 23768);
  __Z15SetupTranslatorP10TranslatorPKsPKh($tr, 22120, 23016);
  HEAP32[$tr + 8 >> 2] = 7;
  HEAP32[$tr + 12 >> 2] = 2097184;
  HEAP32[$tr + 312 >> 2] = 0;
  HEAP32[$tr + 100 >> 2] = 1;
  HEAP32[$tr + 200 >> 2] = 50176;
  HEAP8[$tr + 268 | 0] = 2;
  __Z13SetLengthModsP10Translatori($tr, 3);
 } else if (($22 | 0) == 27500) {
  __Z15SetupTranslatorP10TranslatorPKsPKh($tr, 21992, 22696);
  HEAP32[$tr + 8 >> 2] = 12;
  HEAP32[$tr + 12 >> 2] = 32;
  HEAP32[$tr + 200 >> 2] = 184618072;
 } else if (($22 | 0) == 24946) {
  HEAP32[$tr + 720 >> 2] = 1536;
  HEAP32[$tr + 200 >> 2] = 2884720;
  HEAP32[$tr + 44 >> 2] = 1;
 } else if (($22 | 0) == 25967) {
  __Z15SetupTranslatorP10TranslatorPKsPKh($tr, 22568, 23192);
  HEAP32[$tr + 448 >> 2] = HEAP32[1725];
  HEAP32[$tr + 452 >> 2] = 22056;
  HEAP32[$tr + 4 >> 2] = 2;
  HEAP32[$tr + 8 >> 2] = 2;
  HEAP32[$tr + 12 >> 2] = 22;
  HEAP32[$tr + 20 >> 2] = 2;
  HEAP32[$tr + 200 >> 2] = 16782344;
 } else if (($22 | 0) == 25971 | ($22 | 0) == 24942 | ($22 | 0) == 25441 | ($22 | 0) == 7364976) {
  __Z15SetupTranslatorP10TranslatorPKsPKh($tr, 22552, 23184);
  HEAP32[$tr + 196 >> 2] = HEAP32[$tr + 192 >> 2];
  HEAP32[$tr + 8 >> 2] = 2;
  HEAP32[$tr + 12 >> 2] = 534;
  HEAP32[$tr + 16 >> 2] = 0;
  HEAP32[$tr + 20 >> 2] = 2;
  HEAP32[$tr + 52 >> 2] = 120;
  HEAP32[$tr + 200 >> 2] = 85984552;
  HEAP32[$tr + 204 >> 2] = 6144;
  if (($name2 | 0) == 25441) {
   HEAP32[$tr + 456 >> 2] = 22008;
   HEAP32[$tr + 12 >> 2] = 566;
  } else {
   if (($name2 | 0) == 24942) {
    HEAP32[$tr + 12 >> 2] = 534;
    HEAP32[$tr + 200 >> 2] = 153093416;
    HEAP32[$tr + 204 >> 2] = 2048;
    HEAP32[$tr + 236 >> 2] = 28440;
   } else {
    if (($name2 | 0) == 7364976) {
     HEAP32[$tr + 12 >> 2] = 310;
    } else {
     HEAP32[$tr + 44 >> 2] = 2;
    }
   }
  }
 } else if (($22 | 0) == 25465) {
  __Z15SetupTranslatorP10TranslatorPKsPKh($tr, 22648, 23216);
  HEAP32[$tr + 448 >> 2] = HEAP32[1736];
  HEAP32[$tr + 8 >> 2] = 2;
  HEAP32[$tr + 12 >> 2] = 22;
  HEAP32[$tr + 16 >> 2] = 0;
  HEAP32[$tr + 20 >> 2] = 2;
  HEAP32[$tr + 52 >> 2] = 120;
  HEAP32[$tr + 200 >> 2] = 1024;
  __ZL14SetLetterVowelP10Translatori($tr, 119);
  __ZL14SetLetterVowelP10Translatori($tr, 121);
 } else if (($22 | 0) == 27745) {
  HEAP32[$tr + 448 >> 2] = HEAP32[1726];
  HEAP32[$tr + 8 >> 2] = 2;
  HEAP32[$tr + 12 >> 2] = 32;
  HEAP32[$tr + 16 >> 2] = 0;
  HEAP32[$tr + 20 >> 2] = 2;
  HEAP32[$tr + 28 >> 2] = 1;
  HEAP32[$tr + 200 >> 2] = 16777216;
  HEAP32[$tr + 212 >> 2] = 5e3;
 } else if (($22 | 0) == 27764) {
  HEAP32[$tr + 448 >> 2] = HEAP32[1726];
  HEAP32[$tr + 8 >> 2] = 2;
  HEAP32[$tr + 12 >> 2] = 32;
  HEAP32[$tr + 16 >> 2] = 0;
  HEAP32[$tr + 20 >> 2] = 2;
  HEAP32[$tr + 28 >> 2] = 1;
  HEAP32[$tr + 200 >> 2] = 99336;
  HEAP32[$tr + 204 >> 2] = 256;
  HEAP32[$tr + 212 >> 2] = 5e3;
 } else if (($22 | 0) == 27766) {
  __Z15SetupTranslatorP10TranslatorPKsPKh($tr, 22360, 23104);
  HEAP32[$tr + 8 >> 2] = 0;
  HEAP8[$tr + 269 | 0] = 1;
  HEAP32[$tr + 448 >> 2] = HEAP32[1726];
  HEAP32[$tr + 200 >> 2] = 99336;
  HEAP32[$tr + 12 >> 2] = 262166;
 } else if (($22 | 0) == 28011) {
  __Z15SetupTranslatorP10TranslatorPKsPKh($tr, 22344, 23096);
  HEAP32[$tr + 448 >> 2] = HEAP32[1727];
  HEAP32[$tr + 752 >> 2] = 22920;
  HEAP32[$tr + 724 >> 2] = 22920;
  HEAP32[$tr + 720 >> 2] = 1056;
  HEAP32[$tr + 8 >> 2] = 4;
  HEAP32[$tr + 200 >> 2] = 2114600;
  HEAP32[$tr + 204 >> 2] = 138;
 } else if (($22 | 0) == 28020) {
  HEAP32[$tr + 448 >> 2] = HEAP32[1725];
  HEAP32[$tr + 40 >> 2] = 256;
  HEAP32[$tr + 8 >> 2] = 2;
  HEAP32[$tr + 200 >> 2] = 1;
 } else if (($22 | 0) == 28268) {
  HEAP32[$tr + 8 >> 2] = 0;
  HEAP32[$tr + 4 >> 2] = 48;
  HEAP32[$tr + 28 >> 2] = 1;
  HEAP32[$tr + 36 >> 2] = 1;
  HEAP32[$tr + 40 >> 2] = 256;
  __ZL14SetLetterVowelP10Translatori($tr, 121);
  HEAP32[$tr + 200 >> 2] = 2169880;
  HEAP32[$tr + 232 >> 2] = 14672;
  HEAP32[$tr + 12 >> 2] = 128;
  _memcpy($tr + 424 | 0, 22312, 16) | 0;
 } else if (($22 | 0) == 28271) {
  __Z15SetupTranslatorP10TranslatorPKsPKh($tr, 22296, 0);
  HEAP32[$tr + 8 >> 2] = 0;
  __ZL14SetLetterVowelP10Translatori($tr, 121);
  HEAP32[$tr + 200 >> 2] = 71752;
 } else if (($22 | 0) == 28525) {
  __Z15SetupTranslatorP10TranslatorPKsPKh($tr, 22280, 23088);
  HEAP32[$tr + 8 >> 2] = 2;
  HEAP32[$tr + 12 >> 2] = 524310;
 } else if (($22 | 0) == 28780) {
  __Z15SetupTranslatorP10TranslatorPKsPKh($tr, 22264, 23080);
  HEAP32[$tr + 448 >> 2] = HEAP32[1724];
  HEAP32[$tr + 8 >> 2] = 2;
  HEAP32[$tr + 12 >> 2] = 6;
  HEAP32[$tr + 40 >> 2] = 9;
  HEAP8[$tr + 268 | 0] = 7;
  HEAP32[$tr + 200 >> 2] = 20488;
  HEAP32[$tr + 204 >> 2] = 192;
  HEAP32[$tr + 68 >> 2] = 260;
  __ZL14SetLetterVowelP10Translatori($tr, 121);
 } else if (($22 | 0) == 28788) {
  __Z15SetupTranslatorP10TranslatorPKsPKh($tr, 22248, 23072);
  HEAP32[$tr + 196 >> 2] = HEAP32[$tr + 192 >> 2];
  HEAP32[$tr + 8 >> 2] = 3;
  HEAP32[$tr + 12 >> 2] = 139286;
  HEAP32[$tr + 200 >> 2] = 33570920;
  HEAP32[$tr + 204 >> 2] = 14336;
  HEAP32[$tr + 212 >> 2] = 5e3;
  __ZL14SetLetterVowelP10Translatori($tr, 121);
  __ZL15ResetLetterBitsP10Translatori($tr, 2);
  __ZL13SetLetterBitsP10TranslatoriPKc($tr, 1, 14504);
  HEAP32[$tr + 84 >> 2] = 2;
  HEAP32[$tr + 240 >> 2] = 2;
 } else if (($22 | 0) == 29295) {
  __Z15SetupTranslatorP10TranslatorPKsPKh($tr, 22232, 23064);
  HEAP32[$tr + 8 >> 2] = 2;
  HEAP32[$tr + 12 >> 2] = 262;
  HEAP32[$tr + 448 >> 2] = HEAP32[1724];
  HEAP32[$tr + 200 >> 2] = 16805928;
  HEAP32[$tr + 204 >> 2] = 30;
 } else if (($22 | 0) == 29301) {
  __ZL18Translator_RussianP10Translator($tr);
 } else if (($22 | 0) == 29303) {
  HEAP32[$tr + 8 >> 2] = 2;
  HEAP32[$tr + 12 >> 2] = 22;
  HEAP32[$tr + 196 >> 2] = HEAP32[$tr + 192 >> 2];
  HEAP32[$tr + 44 >> 2] = 1;
  HEAP32[$tr + 200 >> 2] = 278624;
  HEAP32[$tr + 204 >> 2] = 512;
 } else if (($22 | 0) == 29547 | ($22 | 0) == 25459) {
  __Z15SetupTranslatorP10TranslatorPKsPKh($tr, 22216, 23056);
  HEAP32[$tr + 448 >> 2] = HEAP32[1724];
  HEAP32[$tr + 8 >> 2] = 0;
  HEAP32[$tr + 12 >> 2] = 22;
  HEAP32[$tr + 40 >> 2] = 3;
  HEAP8[$tr + 268 | 0] = 5;
  HEAP8[$tr + 269 | 0] = 1;
  HEAP32[$tr + 68 >> 2] = 4;
  HEAP32[$tr + 200 >> 2] = 16794624;
  HEAP32[$tr + 204 >> 2] = 128;
  HEAP32[$tr + 220 >> 2] = 0;
  HEAP32[$tr + 224 >> 2] = 44;
  if (($name2 | 0) == 25459) {
   HEAP32[$tr + 204 >> 2] = 264;
  }
  __ZL14SetLetterVowelP10Translatori($tr, 121);
  __ZL14SetLetterVowelP10Translatori($tr, 114);
  __ZL15ResetLetterBitsP10Translatori($tr, 32);
  __ZL13SetLetterBitsP10TranslatoriPKc($tr, 5, HEAP32[5478] | 0);
 } else if (($22 | 0) == 29545) {
  __Z15SetupTranslatorP10TranslatorPKsPKh($tr, 22136, 23024);
  HEAP32[$tr + 196 >> 2] = HEAP32[$tr + 192 >> 2];
  HEAP32[$tr + 8 >> 2] = 0;
  HEAP32[$tr + 12 >> 2] = 22;
  HEAP8[$tr + 269 | 0] = 1;
  HEAP32[$tr + 720 >> 2] = 3456;
  _memset($tr + 464 | 0, 0, 256) | 0;
  __ZL18SetLetterBitsRangeP10Translatoriii($tr, 0, 5, 22);
  __ZL18SetLetterBitsRangeP10Translatoriii($tr, 0, 74, 115);
  __ZL18SetLetterBitsRangeP10Translatoriii($tr, 1, 74, 115);
  __ZL18SetLetterBitsRangeP10Translatoriii($tr, 2, 26, 70);
  HEAP32[$tr + 44 >> 2] = 1;
  HEAP32[$tr + 316 >> 2] = (HEAP32[$tr + 720 >> 2] | 0) + 74;
  HEAP32[$tr + 200 >> 2] = 270589952;
  HEAP32[$tr + 204 >> 2] = 65536;
  HEAP32[$tr + 208 >> 2] = 84648;
 } else if (($22 | 0) == 29548) {
  HEAP32[$tr + 448 >> 2] = HEAP32[1724];
  HEAP32[$tr + 8 >> 2] = 2;
  HEAP32[$tr + 12 >> 2] = 32;
  HEAP32[$tr + 40 >> 2] = 259;
  HEAP32[$tr + 44 >> 2] = 118;
  HEAP32[$tr + 84 >> 2] = 2;
  HEAP32[$tr + 32 >> 2] = 1;
  $1324 = $tr + 578 | 0;
  HEAP8[$1324] = HEAPU8[$1324] | 128;
  HEAP32[$tr + 200 >> 2] = 16864280;
  HEAP32[$tr + 204 >> 2] = 256;
  HEAP32[$tr + 220 >> 2] = 32;
  HEAP32[$tr + 284 >> 2] = 25408;
 } else if (($22 | 0) == 29553) {
  __Z15SetupTranslatorP10TranslatorPKsPKh($tr, 22200, 23048);
  HEAP32[$tr + 8 >> 2] = 2;
  HEAP32[$tr + 12 >> 2] = 278;
  __ZL14SetLetterVowelP10Translatori($tr, 121);
  HEAP32[$tr + 200 >> 2] = 32872;
  HEAP32[$tr + 240 >> 2] = 2;
 } else if (($22 | 0) == 29558) {
  __Z15SetupTranslatorP10TranslatorPKsPKh($tr, 22168, 23040);
  HEAP32[$tr + 8 >> 2] = 0;
  __ZL14SetLetterVowelP10Translatori($tr, 121);
  HEAP32[$tr + 200 >> 2] = 6408;
  HEAP32[$tr + 240 >> 2] = 1;
 } else if (($22 | 0) == 29559 | ($22 | 0) == 29806) {
  __Z15SetupTranslatorP10TranslatorPKsPKh($tr, 22152, 23032);
  HEAP32[$tr + 196 >> 2] = HEAP32[$tr + 192 >> 2];
  HEAP32[$tr + 4 >> 2] = 1;
  HEAP32[$tr + 8 >> 2] = 2;
  HEAP32[$tr + 12 >> 2] = 22;
  HEAP8[$tr + 268 | 0] = 4;
  HEAP32[$tr + 200 >> 2] = 1248;
  HEAP32[$tr + 208 >> 2] = 1227133544;
 } else if (($22 | 0) == 29793 | ($22 | 0) == 27502 | ($22 | 0) == 28012 | ($22 | 0) == 28018 | ($22 | 0) == 29797) {
  __Z15SetupTranslatorP10TranslatorPKsPKh($tr, 22024, 23024);
  HEAP32[$tr + 196 >> 2] = HEAP32[$tr + 192 >> 2];
  HEAP32[$tr + 8 >> 2] = 0;
  HEAP32[$tr + 12 >> 2] = 22;
  HEAP8[$tr + 269 | 0] = 1;
  HEAP32[$tr + 208 >> 2] = 5288;
  if (($name2 | 0) == 29793) {
   __Z15SetupTranslatorP10TranslatorPKsPKh($tr, 22136, 0);
   HEAP32[$tr + 720 >> 2] = 2944;
   HEAP32[$tr + 200 >> 2] = 2097152;
   HEAP32[$tr + 204 >> 2] = 262144;
   HEAP32[$tr + 56 >> 2] = 1;
  } else {
   if (($name2 | 0) == 28018) {
    HEAP32[$tr + 720 >> 2] = 2304;
   } else {
    if (($name2 | 0) == 28012) {
     __Z15SetupTranslatorP10TranslatorPKsPKh($tr, 22328, 22696);
     HEAP32[$tr + 720 >> 2] = 3328;
     HEAP32[$tr + 200 >> 2] = 2098176;
     HEAP32[$tr + 204 >> 2] = 131072;
     HEAP32[$tr + 8 >> 2] = 13;
    } else {
     if (($name2 | 0) == 27502) {
      HEAP32[$tr + 720 >> 2] = 3200;
      HEAP32[$tr + 200 >> 2] = 1;
     } else {
      if (($name2 | 0) == 29797) {
       HEAP32[$tr + 720 >> 2] = 3072;
       HEAP32[$tr + 200 >> 2] = 1;
      }
     }
    }
   }
  }
  __Z15SetIndicLettersP10Translator($tr);
  __ZL18SetLetterBitsRangeP10Translatoriii($tr, 1, 78, 78);
 } else if (($22 | 0) == 29810 | ($22 | 0) == 24954) {
  __Z15SetupTranslatorP10TranslatorPKsPKh($tr, 22104, 23008);
  HEAP32[$tr + 448 >> 2] = HEAP32[1731];
  HEAP32[$tr + 8 >> 2] = 7;
  HEAP32[$tr + 12 >> 2] = 32;
  HEAP8[$tr + 273 | 0] = 1;
  HEAP32[$tr + 100 >> 2] = 1;
  if (($name2 | 0) == 24954) {
   HEAP32[$tr + 200 >> 2] = 2118920;
  } else {
   HEAP32[$tr + 200 >> 2] = 2114824;
  }
  HEAP8[$tr + 268 | 0] = 2;
 } else if (($22 | 0) == 29812) {
  __ZL18SetCyrillicLettersP10Translator($tr);
  __Z15SetupTranslatorP10TranslatorPKsPKh($tr, 22504, 23160);
  HEAP32[$tr + 8 >> 2] = 3;
  HEAP32[$tr + 12 >> 2] = 32;
  HEAP32[$tr + 200 >> 2] = 2131208;
 } else if (($22 | 0) == 30059) {
  __ZL18SetCyrillicLettersP10Translator($tr);
  HEAP32[$tr + 44 >> 2] = 1074;
 } else if (($22 | 0) == 30066 | ($22 | 0) == 29540) {
  HEAP32[$tr + 720 >> 2] = 1536;
  HEAP32[$tr + 44 >> 2] = 1;
  HEAP32[$tr + 200 >> 2] = 16;
  HEAP32[$tr + 208 >> 2] = 21160;
 } else if (($22 | 0) == 30313) {
  __Z15SetupTranslatorP10TranslatorPKsPKh($tr, 22088, 23e3);
  HEAP32[$tr + 196 >> 2] = HEAP32[$tr + 192 >> 2];
  HEAP32[$tr + 8 >> 2] = 0;
  HEAP32[$tr >> 2] = 33;
  HEAP32[$tr + 752 >> 2] = 21616;
  HEAP32[$tr + 724 >> 2] = 21616;
  HEAP32[$tr + 244 >> 2] = 1;
  HEAP32[$tr + 16 >> 2] = 2;
  HEAP32[$tr + 200 >> 2] = 12615688;
 } else if (($22 | 0) == 30575) {
  HEAP32[$tr + 8 >> 2] = 0;
  HEAP32[$tr + 200 >> 2] = 2098528;
 } else if (($22 | 0) == 31336 | ($22 | 0) == 8022137) {
  __Z15SetupTranslatorP10TranslatorPKsPKh($tr, 22072, 22992);
  HEAP32[$tr + 8 >> 2] = 3;
  HEAP32[$tr + 12 >> 2] = 2;
  HEAP32[$tr + 4 >> 2] = 0;
  HEAP32[$tr + 244 >> 2] = 1;
  HEAP32[$tr + 196 >> 2] = HEAP32[$tr + 192 >> 2];
  HEAP8[$tr + 270 | 0] = 1;
  HEAP8[$tr + 271 | 0] = 1;
  HEAP32[$tr + 296 >> 2] = 12544;
  HEAP32[$tr >> 2] = 33;
  if (($name2 | 0) == 31336) {
   HEAP8[$tr + 272 | 0] = 1;
   HEAP32[$tr + 280 >> 2] = 1;
  }
 } else if (($22 | 0) == 25697) {
  __Z15SetupTranslatorP10TranslatorPKsPKh($tr, 22632, 0);
  HEAP32[$tr + 8 >> 2] = 0;
  HEAP32[$tr + 36 >> 2] = 1;
  __ZL14SetLetterVowelP10Translatori($tr, 121);
  HEAP32[$tr + 200 >> 2] = 184618072;
 } else if (($22 | 0) == 25966) {
  __Z15SetupTranslatorP10TranslatorPKsPKh($tr, 22584, 0);
  HEAP32[$tr + 8 >> 2] = 0;
  HEAP32[$tr + 12 >> 2] = 8;
  HEAP32[$tr + 200 >> 2] = 16779328;
  HEAP32[$tr + 68 >> 2] = 2;
  HEAP32[$tr + 316 >> 2] = 101;
  HEAP32[$tr + 44 >> 2] = 2;
  __ZL13SetLetterBitsP10TranslatoriPKc($tr, 6, 15040);
 } else if (($22 | 0) == 25964 | ($22 | 0) == 6779491) {
  __Z15SetupTranslatorP10TranslatorPKsPKh($tr, 22600, 23200);
  HEAP32[$tr + 448 >> 2] = HEAP32[1729];
  HEAP32[$tr + 452 >> 2] = 22064;
  HEAP32[$tr + 720 >> 2] = 896;
  _memset($tr + 464 | 0, 0, 256) | 0;
  __ZL13SetLetterBitsP10TranslatoriPKc($tr, 0, 21944);
  __ZL13SetLetterBitsP10TranslatoriPKc($tr, 7, 21944);
  __ZL13SetLetterBitsP10TranslatoriPKc($tr, 1, 23336);
  __ZL13SetLetterBitsP10TranslatoriPKc($tr, 2, 23312);
  __ZL13SetLetterBitsP10TranslatoriPKc($tr, 6, 23368);
  HEAP32[$tr + 196 >> 2] = HEAP32[$tr + 192 >> 2];
  HEAP32[$tr + 8 >> 2] = 2;
  HEAP32[$tr + 12 >> 2] = 6;
  HEAP32[$tr + 16 >> 2] = 0;
  HEAP32[$tr + 20 >> 2] = 2;
  HEAP32[$tr + 52 >> 2] = 130;
  HEAP32[$tr + 200 >> 2] = 264;
  HEAP32[$tr + 204 >> 2] = 6146;
  if (($name2 | 0) == 6779491) {
   HEAP32[$tr + 44 >> 2] = 1;
  }
 } else if (($22 | 0) == 25718) {
  __Z15SetupTranslatorP10TranslatorPKsPKh($tr, 22136, 23024);
  HEAP32[$tr + 44 >> 2] = 1;
  HEAP32[$tr + 196 >> 2] = HEAP32[$tr + 192 >> 2];
  HEAP32[$tr + 720 >> 2] = 1920;
  HEAP32[$tr + 8 >> 2] = 0;
  HEAP32[$tr + 12 >> 2] = 65540;
  __ZL18SetLetterBitsRangeP10Translatoriii($tr, 1, 38, 48);
  HEAP32[$tr + 208 >> 2] = 5288;
  HEAP32[$tr + 200 >> 2] = 1;
 } else if (($22 | 0) == 25199) {
  HEAP32[$tr + 8 >> 2] = 0;
  HEAP32[$tr + 720 >> 2] = 3840;
  __ZL18SetLetterBitsRangeP10Translatoriii($tr, 0, 113, 125);
  __ZL18SetLetterBitsRangeP10Translatoriii($tr, 1, 113, 129);
  __ZL18SetLetterBitsRangeP10Translatoriii($tr, 1, 144, 188);
  __ZL18SetLetterBitsRangeP10Translatoriii($tr, 2, 64, 108);
  HEAP32[$tr + 44 >> 2] = 1;
  HEAP32[$tr + 200 >> 2] = 1;
 } else if (($22 | 0) == 25191) {
  __ZL18SetCyrillicLettersP10Translator($tr);
  __ZL14SetLetterVowelP10Translatori($tr, 42);
  HEAP32[$tr + 448 >> 2] = HEAP32[1727];
  HEAP32[$tr + 44 >> 2] = 1074;
  HEAP32[$tr + 40 >> 2] = 263;
  HEAP32[$tr + 64 >> 2] = 2;
  HEAP32[$tr + 8 >> 2] = 2;
  HEAP32[$tr + 200 >> 2] = 184554728;
  HEAP32[$tr + 220 >> 2] = 32;
 } else if (($22 | 0) == 27503) {
  HEAP32[$tr + 720 >> 2] = 4352;
  HEAP32[$tr + 296 >> 2] = 42752;
  _memset($tr + 464 | 0, 0, 256) | 0;
  __ZL18SetLetterBitsRangeP10Translatoriii($tr, 0, 97, 117);
  __ZL13SetLetterBitsP10TranslatoriPKc($tr, 6, 23352);
  __ZL13SetLetterBitsP10TranslatoriPKc($tr, 5, 21920);
  HEAP32[$tr + 8 >> 2] = 8;
  HEAP32[$tr + 44 >> 2] = 1;
  HEAP32[$tr + 200 >> 2] = 1024;
  HEAP32[$tr + 204 >> 2] = 16384;
  HEAP32[$tr + 208 >> 2] = 17895696;
  HEAP32[$tr + 228 >> 2] = 20;
 } else if (($22 | 0) == 27509) {
  __Z15SetupTranslatorP10TranslatorPKsPKh($tr, 22376, 23112);
  HEAP32[$tr + 448 >> 2] = HEAP32[1731];
  HEAP32[$tr + 8 >> 2] = 7;
  HEAP32[$tr + 200 >> 2] = 263264;
  HEAP8[$tr + 268 | 0] = 2;
 } else if (($22 | 0) == 25198 | ($22 | 0) == 24947 | ($22 | 0) == 7171689) {
  __Z15SetupTranslatorP10TranslatorPKsPKh($tr, 22664, 23224);
  HEAP32[$tr + 196 >> 2] = HEAP32[$tr + 192 >> 2];
  HEAP32[$tr + 8 >> 2] = 0;
  HEAP32[$tr + 12 >> 2] = 65540;
  HEAP32[$tr + 720 >> 2] = 2432;
  __Z15SetIndicLettersP10Translator($tr);
  __ZL18SetLetterBitsRangeP10Translatoriii($tr, 1, 1, 1);
  __ZL18SetLetterBitsRangeP10Translatoriii($tr, 4, 62, 76);
  HEAP32[$tr + 200 >> 2] = 16;
  HEAP32[$tr + 208 >> 2] = 613567144;
 } else if (($22 | 0) == 26738 | ($22 | 0) == 25203 | ($22 | 0) == 29554) {
  _strcpy($tr + 340 | 0, 14936) | 0;
  if (($name2 | 0) == 29554) {
   __Z15SetupTranslatorP10TranslatorPKsPKh($tr, 22184, 23144);
  } else {
   __Z15SetupTranslatorP10TranslatorPKsPKh($tr, 22472, 23144);
  }
  HEAP32[$tr + 448 >> 2] = HEAP32[1724];
  HEAP32[$tr + 8 >> 2] = 0;
  HEAP32[$tr + 12 >> 2] = 16;
  HEAP32[$tr + 40 >> 2] = 3;
  HEAP8[$tr + 268 | 0] = 5;
  HEAP8[$tr + 269 | 0] = 1;
  HEAP32[$tr + 240 >> 2] = 1;
  HEAP32[$tr + 200 >> 2] = 33572172;
  HEAP32[$tr + 204 >> 2] = 330;
  HEAP32[$tr + 284 >> 2] = 25408;
  HEAP32[$tr + 296 >> 2] = 1056;
  __ZL14SetLetterVowelP10Translatori($tr, 121);
  __ZL14SetLetterVowelP10Translatori($tr, 114);
 } else if (($22 | 0) == 26740) {
  HEAP32[$tr + 8 >> 2] = 3;
  HEAP32[$tr + 12 >> 2] = 36;
  HEAP32[$tr + 200 >> 2] = 17990912;
 } else if (($22 | 0) == 26741) {
  __Z15SetupTranslatorP10TranslatorPKsPKh($tr, 22456, 23136);
  HEAP32[$tr + 448 >> 2] = HEAP32[1724];
  HEAP32[$tr + 4 >> 2] = 32;
  HEAP32[$tr + 8 >> 2] = 0;
  HEAP32[$tr + 12 >> 2] = 1081398;
  HEAP32[$tr + 16 >> 2] = 2;
  HEAP32[$tr + 80 >> 2] = 1;
  HEAP32[$tr + 92 >> 2] = 2;
  HEAP32[$tr + 200 >> 2] = 186758144;
  HEAP32[$tr + 220 >> 2] = 32;
  HEAP32[$tr + 224 >> 2] = 44;
  HEAP32[$tr + 212 >> 2] = 899;
  HEAP32[$tr + 216 >> 2] = 1;
  __ZL14SetLetterVowelP10Translatori($tr, 121);
  HEAP8[$tr + 269 | 0] = 1;
  __Z13SetLengthModsP10Translatori($tr, 3);
 } else if (($22 | 0) == 26745) {
  __Z15SetupTranslatorP10TranslatorPKsPKh($tr, 22440, 0);
  HEAP32[$tr + 8 >> 2] = 3;
  HEAP32[$tr + 720 >> 2] = 1328;
  _memset($tr + 464 | 0, 0, 256) | 0;
  __ZL13SetLetterBitsP10TranslatoriPKc($tr, 0, 21936);
  __ZL13SetLetterBitsP10TranslatoriPKc($tr, 7, 21936);
  __ZL13SetLetterBitsP10TranslatoriPKc($tr, 1, 23280);
  __ZL13SetLetterBitsP10TranslatoriPKc($tr, 2, 23280);
  __ZL13SetLetterBitsP10TranslatoriPKc($tr, 2, 23232);
  HEAP8[$tr + 268 | 0] = 6;
  HEAP32[$tr + 200 >> 2] = 5128;
 } else if (($22 | 0) == 26980 | ($22 | 0) == 28019) {
  __Z15SetupTranslatorP10TranslatorPKsPKh($tr, 22424, 23128);
  HEAP32[$tr + 8 >> 2] = 2;
  HEAP32[$tr + 200 >> 2] = 16781320;
  HEAP32[$tr + 12 >> 2] = 22;
  HEAP32[$tr + 240 >> 2] = 2;
 } else if (($22 | 0) == 26995) {
  __Z15SetupTranslatorP10TranslatorPKsPKh($tr, 22408, 0);
  HEAP32[$tr + 8 >> 2] = 0;
  HEAP32[$tr + 12 >> 2] = 16;
  HEAP32[$tr + 32 >> 2] = 17;
  HEAP32[$tr + 64 >> 2] = 2;
  __ZL15ResetLetterBitsP10Translatori($tr, 24);
  __ZL13SetLetterBitsP10TranslatoriPKc($tr, 4, 14832);
  __ZL13SetLetterBitsP10TranslatoriPKc($tr, 3, 14760);
  HEAP32[$tr + 728 >> 2] = 22880;
  __ZL14SetLetterVowelP10Translatori($tr, 121);
  HEAP32[$tr + 200 >> 2] = 2280;
  HEAP32[$tr + 204 >> 2] = 2;
 } else if (($22 | 0) == 26996) {
  __Z15SetupTranslatorP10TranslatorPKsPKh($tr, 22392, 23120);
  HEAP32[$tr + 196 >> 2] = HEAP32[$tr + 192 >> 2];
  HEAP32[$tr + 8 >> 2] = 2;
  HEAP32[$tr + 12 >> 2] = 131088;
  HEAP32[$tr + 4 >> 2] = 1;
  HEAP32[$tr + 16 >> 2] = 2;
  HEAP32[$tr + 20 >> 2] = 2;
  HEAP32[$tr + 32 >> 2] = 2;
  HEAP32[$tr + 80 >> 2] = 1;
  HEAP32[$tr + 52 >> 2] = 130;
  HEAP32[$tr + 64 >> 2] = 1;
  HEAP32[$tr + 84 >> 2] = 2;
  HEAP32[$tr + 200 >> 2] = 117450248;
  HEAP32[$tr + 240 >> 2] = 2;
  __ZL14SetLetterVowelP10Translatori($tr, 121);
 } else if (($22 | 0) == 6972015) {
  __Z15SetupTranslatorP10TranslatorPKsPKh($tr, 22040, 0);
  HEAP32[$tr + 8 >> 2] = 2;
  HEAP32[$tr + 4 >> 2] = 524;
  HEAP32[$tr + 456 >> 2] = 21968;
  HEAP32[$tr + 76 >> 2] = 2;
  __ZL14SetLetterVowelP10Translatori($tr, 121);
  HEAP32[$tr + 308 >> 2] = 368;
 } else if (($22 | 0) == 27489) {
  __Z15SetupTranslatorP10TranslatorPKsPKh($tr, 22136, 23024);
  _memset($tr + 464 | 0, 0, 256) | 0;
  __ZL13SetLetterBitsP10TranslatoriPKc($tr, 0, 21928);
  __ZL13SetLetterBitsP10TranslatoriPKc($tr, 2, 23240);
  __ZL13SetLetterBitsP10TranslatoriPKc($tr, 7, 21928);
  HEAP32[$tr + 8 >> 2] = 0;
  HEAP32[$tr + 12 >> 2] = 16;
  HEAP32[$tr + 720 >> 2] = 4256;
  HEAP8[$tr + 268 | 0] = 7;
  HEAP32[$tr + 200 >> 2] = 19964960;
  HEAP32[$tr + 300 >> 2] = 1056;
  HEAP32[$tr + 304 >> 2] = 29301;
 } else {
  HEAP32[$tr + 44 >> 2] = 1;
 }
 if ((label | 0) == 33) {
  __Z15SetupTranslatorP10TranslatorPKsPKh($tr, 22520, 23168);
  HEAP32[$tr + 8 >> 2] = 0;
  HEAP32[$tr + 12 >> 2] = 86;
  HEAP32[$tr + 80 >> 2] = 1;
  HEAP32[$tr + 260 >> 2] = 130;
  HEAP32[$tr + 200 >> 2] = 4104;
  __ZL14SetLetterVowelP10Translatori($tr, 121);
  HEAP8[$tr + 269 | 0] = 1;
  HEAP32[$tr + 248 >> 2] = 3;
 }
 HEAP32[$tr + 324 >> 2] = $name2;
 __Z22ProcessLanguageOptionsP16LANGUAGE_OPTIONS($tr | 0);
 STACKTOP = sp;
 return $tr | 0;
}
function __Z13SetWordStressP10TranslatorPcPjii($tr, $output, $dictionary_flags, $tonic, $control) {
 $tr = $tr | 0;
 $output = $output | 0;
 $dictionary_flags = $dictionary_flags | 0;
 $tonic = $tonic | 0;
 $control = $control | 0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $phcode = 0, $p = 0, $ph = 0, $stress = 0, $max_stress = 0, $vowel_count = 0, $ix = 0, $v = 0, $v_stress = 0, $stressed_syllable = 0, $max_stress_posn = 0, $unstressed_word = 0, $max_output = 0, $final_ph = 0, $final_ph2 = 0, $mnem = 0, $post_tonic = 0, $done = 0, $stressflags = 0, $dflags = 0, $first_primary = 0, $long_vowel = 0, $vowel_stress = 0, $syllable_weight = 0, $vowel_length = 0, $phonetic = 0, $weight = 0, $lengthened = 0, $max_weight = 0, $shorten = 0, $514 = 0, $905 = 0, $920 = 0, $956 = 0, $959 = 0, $966 = 0, $968 = 0, $976 = 0, $981 = 0, $1101 = 0, $1125 = 0, $1173 = 0, $1186 = 0, $1190 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 528 | 0;
 $vowel_count = sp | 0;
 $stressed_syllable = sp + 8 | 0;
 $vowel_stress = sp + 16 | 0;
 $syllable_weight = sp + 120 | 0;
 $vowel_length = sp + 224 | 0;
 $phonetic = sp + 328 | 0;
 $1 = $tr;
 $2 = $output;
 $3 = $dictionary_flags;
 $4 = $tonic;
 $5 = $control;
 $unstressed_word = 0;
 $dflags = 0;
 $stressflags = HEAP32[$1 + 12 >> 2] | 0;
 if (($3 | 0) != 0) {
  $dflags = HEAP32[$3 >> 2] | 0;
 }
 $ix = 0;
 while (1) {
  if (($ix | 0) >= 200) {
   break;
  }
  HEAP8[$phonetic + $ix | 0] = HEAP8[$2 + $ix | 0] | 0;
  if ((HEAPU8[$phonetic + $ix | 0] | 0) >= (HEAP32[19560] | 0)) {
   HEAP8[$phonetic + $ix | 0] = 13;
  }
  if ((HEAPU8[$phonetic + $ix | 0] | 0) == 0) {
   label = 8;
   break;
  }
  $ix = $ix + 1 | 0;
 }
 if ((label | 0) == 8) {}
 if (($ix | 0) == 0) {
  STACKTOP = sp;
  return;
 }
 $final_ph = HEAPU8[$phonetic + ($ix - 1) | 0] | 0;
 $final_ph2 = HEAPU8[$phonetic + ($ix - 2) | 0] | 0;
 $max_output = $2 + 197 | 0;
 HEAP32[$stressed_syllable >> 2] = $dflags & 7;
 if (($dflags & 8 | 0) != 0) {
  HEAP32[$stressed_syllable >> 2] = $dflags & 3;
  $unstressed_word = 1;
 }
 $max_stress = __ZL14GetVowelStressP10TranslatorPhPaPiS3_i($1, $phonetic | 0, $vowel_stress | 0, $vowel_count, $stressed_syllable, 1) | 0;
 do {
  if (($max_stress | 0) < 0) {
   if (($3 | 0) == 0) {
    break;
   }
   $max_stress = 0;
  }
 } while (0);
 $ix = 1;
 $p = $phonetic | 0;
 while (1) {
  if ((HEAPU8[$p] | 0) == 0) {
   break;
  }
  do {
   if ((HEAPU8[(HEAP32[43256 + (HEAPU8[$p | 0] << 2) >> 2] | 0) + 11 | 0] | 0) == 2) {
    if ((HEAP32[(HEAP32[43256 + (HEAPU8[$p | 0] << 2) >> 2] | 0) + 4 >> 2] & 1048576 | 0) != 0) {
     break;
    }
    $weight = 0;
    $lengthened = 0;
    if ((HEAPU8[(HEAP32[43256 + (HEAPU8[$p + 1 | 0] << 2) >> 2] | 0) + 10 | 0] | 0) == 12) {
     $lengthened = 1;
    }
    if (($lengthened | 0) != 0) {
     label = 26;
    } else {
     if ((HEAP32[(HEAP32[43256 + (HEAPU8[$p | 0] << 2) >> 2] | 0) + 4 >> 2] & 2097152 | 0) != 0) {
      label = 26;
     }
    }
    if ((label | 0) == 26) {
     label = 0;
     $weight = $weight + 1 | 0;
    }
    HEAP8[$vowel_length + $ix | 0] = $weight;
    if (($lengthened | 0) != 0) {
     $p = $p + 1 | 0;
    }
    do {
     if ((HEAP8[23520 + (HEAPU8[(HEAP32[43256 + (HEAPU8[$p + 1 | 0] << 2) >> 2] | 0) + 11 | 0] | 0) | 0] | 0) != 0) {
      if ((HEAPU8[(HEAP32[43256 + (HEAPU8[$p + 2 | 0] << 2) >> 2] | 0) + 11 | 0] | 0) == 2) {
       if ((HEAP32[(HEAP32[43256 + (HEAPU8[$p + 1 | 0] << 2) >> 2] | 0) + 4 >> 2] & 2097152 | 0) == 0) {
        break;
       }
      }
      $weight = $weight + 1 | 0;
     }
    } while (0);
    HEAP8[$syllable_weight + $ix | 0] = $weight;
    $ix = $ix + 1 | 0;
   }
  } while (0);
  $p = $p + 1 | 0;
 }
 L52 : do {
  switch (HEAP32[$1 + 8 >> 2] | 0) {
  case 10:
   {
    do {
     if ((HEAP32[$stressed_syllable >> 2] | 0) == 0) {
      if ((HEAP32[$vowel_count >> 2] | 0) < 4) {
       HEAP8[$vowel_stress + ((HEAP32[$vowel_count >> 2] | 0) - 1) | 0] = 4;
       $max_stress = 4;
       break L52;
      } else {
       break;
      }
     }
    } while (0);
    label = 52;
    break;
   }
  case 2:
   {
    label = 52;
    break;
   }
  case 4:
   {
    if ((HEAP32[$stressed_syllable >> 2] | 0) == 0) {
     HEAP32[$stressed_syllable >> 2] = (HEAP32[$vowel_count >> 2] | 0) - 3;
     if ((HEAP32[$stressed_syllable >> 2] | 0) < 1) {
      HEAP32[$stressed_syllable >> 2] = 1;
     }
     if (($max_stress | 0) == 0) {
      HEAP8[$vowel_stress + (HEAP32[$stressed_syllable >> 2] | 0) | 0] = 4;
     }
     $max_stress = 4;
    }
    break;
   }
  case 5:
   {
    if ((HEAP32[$stressed_syllable >> 2] | 0) == 0) {
     HEAP32[$stressed_syllable >> 2] = (HEAP32[$vowel_count >> 2] | 0) - 3;
     if ((HEAP32[$vowel_count >> 2] | 0) < 16) {
      if ((HEAPU8[(HEAP32[43256 + ($final_ph << 2) >> 2] | 0) + 11 | 0] | 0) == 2) {
       HEAP32[$stressed_syllable >> 2] = HEAP8[23536 + (HEAP32[$vowel_count >> 2] | 0) | 0] | 0;
      } else {
       if ((HEAPU8[(HEAP32[43256 + ($final_ph << 2) >> 2] | 0) + 11 | 0] | 0) == 4) {
        HEAP32[$stressed_syllable >> 2] = HEAP8[23552 + (HEAP32[$vowel_count >> 2] | 0) | 0] | 0;
       } else {
        HEAP32[$stressed_syllable >> 2] = HEAP8[23504 + (HEAP32[$vowel_count >> 2] | 0) | 0] | 0;
       }
      }
     }
     HEAP8[$vowel_stress + (HEAP32[$stressed_syllable >> 2] | 0) | 0] = 4;
     $max_stress = 4;
    }
    break;
   }
  case 12:
   {
    $long_vowel = 0;
    $ix = 1;
    while (1) {
     if (($ix | 0) >= (HEAP32[$vowel_count >> 2] | 0)) {
      break;
     }
     if ((HEAP8[$vowel_stress + $ix | 0] | 0) == 4) {
      HEAP8[$vowel_stress + $ix | 0] = 3;
     }
     if ((HEAP8[$vowel_length + $ix | 0] | 0) > 0) {
      $long_vowel = $ix;
      HEAP8[$vowel_stress + $ix | 0] = 3;
     }
     $ix = $ix + 1 | 0;
    }
    if ((HEAP32[$stressed_syllable >> 2] | 0) == 0) {
     if (($long_vowel | 0) > 0) {
      HEAP32[$stressed_syllable >> 2] = $long_vowel;
     } else {
      if ((HEAP32[$vowel_count >> 2] | 0) > 5) {
       HEAP32[$stressed_syllable >> 2] = (HEAP32[$vowel_count >> 2] | 0) - 3;
      } else {
       HEAP32[$stressed_syllable >> 2] = (HEAP32[$vowel_count >> 2] | 0) - 1;
      }
     }
    }
    HEAP8[$vowel_stress + (HEAP32[$stressed_syllable >> 2] | 0) | 0] = 4;
    $max_stress = 4;
    break;
   }
  case 13:
   {
    if ((HEAP32[$stressed_syllable >> 2] | 0) == 0) {
     HEAP32[$stressed_syllable >> 2] = 1;
     do {
      if ((HEAP8[$vowel_length + 1 | 0] | 0) == 0) {
       if ((HEAP32[$vowel_count >> 2] | 0) <= 2) {
        break;
       }
       if ((HEAP8[$vowel_length + 2 | 0] | 0) <= 0) {
        break;
       }
       HEAP32[$stressed_syllable >> 2] = 2;
      }
     } while (0);
     HEAP8[$vowel_stress + (HEAP32[$stressed_syllable >> 2] | 0) | 0] = 4;
     $max_stress = 4;
    }
    break;
   }
  case 3:
   {
    if ((HEAP32[$stressed_syllable >> 2] | 0) == 0) {
     HEAP32[$stressed_syllable >> 2] = (HEAP32[$vowel_count >> 2] | 0) - 1;
     while (1) {
      if ((HEAP32[$stressed_syllable >> 2] | 0) <= 0) {
       break;
      }
      if ((HEAP8[$vowel_stress + (HEAP32[$stressed_syllable >> 2] | 0) | 0] | 0) < 0) {
       label = 99;
       break;
      }
      HEAP32[$stressed_syllable >> 2] = (HEAP32[$stressed_syllable >> 2] | 0) - 1;
     }
     if ((label | 0) == 99) {
      HEAP8[$vowel_stress + (HEAP32[$stressed_syllable >> 2] | 0) | 0] = 4;
     }
     $max_stress = 4;
    }
    break;
   }
  case 6:
   {
    if ((HEAP32[$stressed_syllable >> 2] | 0) == 0) {
     $max_weight = -1;
     $ix = 1;
     while (1) {
      if (($ix | 0) >= ((HEAP32[$vowel_count >> 2] | 0) - 1 | 0)) {
       break;
      }
      if ((HEAP8[$vowel_stress + $ix | 0] | 0) < 0) {
       $514 = HEAP8[$syllable_weight + $ix | 0] | 0;
       if (($514 | 0) >= ($max_weight | 0)) {
        $max_weight = $514;
        HEAP32[$stressed_syllable >> 2] = $ix;
       }
      }
      $ix = $ix + 1 | 0;
     }
     do {
      if ((HEAP8[$syllable_weight + ((HEAP32[$vowel_count >> 2] | 0) - 1) | 0] | 0) == 2) {
       if (($max_weight | 0) >= 2) {
        label = 134;
        break;
       }
       HEAP32[$stressed_syllable >> 2] = (HEAP32[$vowel_count >> 2] | 0) - 1;
      } else {
       label = 134;
      }
     } while (0);
     if ((label | 0) == 134) {
      if (($max_weight | 0) <= 0) {
       HEAP32[$stressed_syllable >> 2] = 1;
      }
     }
     HEAP8[$vowel_stress + (HEAP32[$stressed_syllable >> 2] | 0) | 0] = 4;
     $max_stress = 4;
    }
    break;
   }
  case 8:
   {
    do {
     if ((HEAP8[$syllable_weight + 1 | 0] | 0) <= 0) {
      if ((HEAP8[$syllable_weight + 2 | 0] | 0) == 0) {
       break;
      }
      label = 41;
      break L52;
     }
    } while (0);
    break;
   }
  case 1:
   {
    label = 41;
    break;
   }
  case 7:
   {
    if ((HEAP32[$stressed_syllable >> 2] | 0) == 0) {
     HEAP32[$stressed_syllable >> 2] = (HEAP32[$vowel_count >> 2] | 0) - 1;
     $ix = 1;
     while (1) {
      if (($ix | 0) >= (HEAP32[$vowel_count >> 2] | 0)) {
       break;
      }
      if ((HEAP8[$vowel_stress + $ix | 0] | 0) == 1) {
       label = 143;
       break;
      }
      $ix = $ix + 1 | 0;
     }
     if ((label | 0) == 143) {
      HEAP32[$stressed_syllable >> 2] = $ix - 1;
     }
     HEAP8[$vowel_stress + (HEAP32[$stressed_syllable >> 2] | 0) | 0] = 4;
     $max_stress = 4;
    }
    break;
   }
  case 9:
   {
    $ix = 1;
    while (1) {
     if (($ix | 0) >= (HEAP32[$vowel_count >> 2] | 0)) {
      break;
     }
     if ((HEAP8[$vowel_stress + $ix | 0] | 0) < 0) {
      HEAP8[$vowel_stress + $ix | 0] = 4;
     }
     $ix = $ix + 1 | 0;
    }
    break;
   }
  default:
   {}
  }
 } while (0);
 if ((label | 0) == 52) {
  if ((HEAP32[$stressed_syllable >> 2] | 0) == 0) {
   $max_stress = 4;
   if ((HEAP32[$vowel_count >> 2] | 0) > 2) {
    HEAP32[$stressed_syllable >> 2] = (HEAP32[$vowel_count >> 2] | 0) - 2;
    if (($stressflags & 768 | 0) != 0) {
     if ((HEAPU8[(HEAP32[43256 + ($final_ph << 2) >> 2] | 0) + 11 | 0] | 0) != 2) {
      if (($stressflags & 256 | 0) != 0) {
       HEAP32[$stressed_syllable >> 2] = (HEAP32[$vowel_count >> 2] | 0) - 1;
      } else {
       $mnem = HEAP32[HEAP32[43256 + ($final_ph << 2) >> 2] >> 2] | 0;
       if ((HEAP32[$1 + 324 >> 2] | 0) == 24942) {
        if (($mnem | 0) != 115) {
         if (($mnem | 0) != 110) {
          label = 62;
         } else {
          label = 61;
         }
        } else {
         label = 61;
        }
        if ((label | 0) == 61) {
         if ((HEAPU8[(HEAP32[43256 + ($final_ph2 << 2) >> 2] | 0) + 11 | 0] | 0) != 2) {
          label = 62;
         }
        }
        if ((label | 0) == 62) {
         HEAP32[$stressed_syllable >> 2] = (HEAP32[$vowel_count >> 2] | 0) - 1;
        }
       } else {
        do {
         if (($mnem | 0) == 115) {
          if ((HEAPU8[(HEAP32[43256 + ($final_ph2 << 2) >> 2] | 0) + 11 | 0] | 0) != 8) {
           label = 67;
           break;
          }
         } else {
          label = 67;
         }
        } while (0);
        if ((label | 0) == 67) {
         if ((HEAPU8[(HEAP32[43256 + ($final_ph << 2) >> 2] | 0) + 11 | 0] | 0) != 8) {
          if (($mnem | 0) != 115) {
           label = 70;
          } else {
           label = 69;
          }
         } else {
          label = 69;
         }
         if ((label | 0) == 69) {
          if ((HEAPU8[(HEAP32[43256 + ($final_ph2 << 2) >> 2] | 0) + 11 | 0] | 0) != 2) {
           label = 70;
          }
         }
         if ((label | 0) == 70) {
          HEAP32[$stressed_syllable >> 2] = (HEAP32[$vowel_count >> 2] | 0) - 1;
         }
        }
       }
      }
     }
    }
    if (($stressflags & 524288 | 0) != 0) {
     if ((HEAP8[$vowel_length + ((HEAP32[$vowel_count >> 2] | 0) - 1) | 0] | 0) > (HEAP8[$vowel_length + ((HEAP32[$vowel_count >> 2] | 0) - 2) | 0] | 0)) {
      HEAP32[$stressed_syllable >> 2] = (HEAP32[$vowel_count >> 2] | 0) - 1;
     }
    }
    if ((HEAP8[$vowel_stress + (HEAP32[$stressed_syllable >> 2] | 0) | 0] | 0) == 0) {
     label = 82;
    } else {
     if ((HEAP8[$vowel_stress + (HEAP32[$stressed_syllable >> 2] | 0) | 0] | 0) == 1) {
      label = 82;
     }
    }
    if ((label | 0) == 82) {
     if ((HEAP32[$stressed_syllable >> 2] | 0) > 1) {
      HEAP32[$stressed_syllable >> 2] = (HEAP32[$stressed_syllable >> 2] | 0) - 1;
     } else {
      HEAP32[$stressed_syllable >> 2] = (HEAP32[$stressed_syllable >> 2] | 0) + 1;
     }
    }
   } else {
    HEAP32[$stressed_syllable >> 2] = 1;
   }
   if ((HEAP8[$vowel_stress + (HEAP32[$stressed_syllable >> 2] | 0) | 0] | 0) < 0) {
    if ((HEAP8[$vowel_stress + ((HEAP32[$stressed_syllable >> 2] | 0) - 1) | 0] | 0) < 4) {
     label = 91;
    } else {
     if ((HEAP8[$vowel_stress + ((HEAP32[$stressed_syllable >> 2] | 0) + 1) | 0] | 0) < 4) {
      label = 91;
     }
    }
    if ((label | 0) == 91) {
     HEAP8[$vowel_stress + (HEAP32[$stressed_syllable >> 2] | 0) | 0] = $max_stress;
    }
   }
  }
 } else if ((label | 0) == 41) {
  do {
   if ((HEAP32[$stressed_syllable >> 2] | 0) == 0) {
    if ((HEAP32[$vowel_count >> 2] | 0) <= 2) {
     break;
    }
    HEAP32[$stressed_syllable >> 2] = 2;
    if (($max_stress | 0) == 0) {
     HEAP8[$vowel_stress + (HEAP32[$stressed_syllable >> 2] | 0) | 0] = 4;
    }
    $max_stress = 4;
   }
  } while (0);
 }
 if (($max_stress | 0) < 4) {
  $stress = 4;
 } else {
  $stress = 3;
 }
 if (($unstressed_word | 0) == 0) {
  do {
   if (($stressflags & 4096 | 0) != 0) {
    if ((HEAP32[$vowel_count >> 2] | 0) != 3) {
     break;
    }
    if ((HEAP8[$vowel_stress + 1 | 0] | 0) == 4) {
     HEAP8[$vowel_stress + 2 | 0] = 3;
    }
    if ((HEAP8[$vowel_stress + 2 | 0] | 0) == 4) {
     HEAP8[$vowel_stress + 1 | 0] = 3;
    }
   }
  } while (0);
  do {
   if (($stressflags & 8192 | 0) != 0) {
    if ((HEAP8[$vowel_stress + 1 | 0] | 0) >= 0) {
     break;
    }
    do {
     if ((HEAP32[$vowel_count >> 2] | 0) > 3) {
      if ((HEAP8[$vowel_stress + 2 | 0] | 0) < 4) {
       break;
      }
      HEAP8[$vowel_stress + 1 | 0] = 3;
     }
    } while (0);
   }
  } while (0);
 }
 $done = 0;
 $first_primary = 0;
 $v = 1;
 while (1) {
  if (($v | 0) >= (HEAP32[$vowel_count >> 2] | 0)) {
   break;
  }
  L282 : do {
   if ((HEAP8[$vowel_stress + $v | 0] | 0) < 0) {
    do {
     if (($stressflags & 16 | 0) != 0) {
      if (($stress | 0) >= 4) {
       label = 204;
       break;
      }
      if (($v | 0) != ((HEAP32[$vowel_count >> 2] | 0) - 1 | 0)) {
       label = 204;
       break;
      }
     } else {
      label = 204;
     }
    } while (0);
    if ((label | 0) == 204) {
     label = 0;
     do {
      if (($stressflags & 32768 | 0) != 0) {
       if (($done | 0) != 0) {
        label = 207;
        break;
       }
       HEAP8[$vowel_stress + $v | 0] = $stress;
       $done = 1;
       $stress = 3;
      } else {
       label = 207;
      }
     } while (0);
     if ((label | 0) == 207) {
      label = 0;
      do {
       if ((HEAP8[$vowel_stress + ($v - 1) | 0] | 0) <= 1) {
        if ((HEAP8[$vowel_stress + ($v + 1) | 0] | 0) > 1) {
         if (($stress | 0) != 4) {
          break;
         }
         if ((HEAP8[$vowel_stress + ($v + 1) | 0] | 0) > 2) {
          break;
         }
        }
        do {
         if (($stress | 0) == 3) {
          if (($stressflags & 32 | 0) == 0) {
           break;
          }
          break L282;
         }
        } while (0);
        do {
         if (($v | 0) > 1) {
          if (($stressflags & 64 | 0) == 0) {
           break;
          }
          if ((HEAP8[$syllable_weight + $v | 0] | 0) != 0) {
           break;
          }
          if ((HEAP8[$syllable_weight + ($v + 1) | 0] | 0) <= 0) {
           break;
          }
          break L282;
         }
        } while (0);
        HEAP8[$vowel_stress + $v | 0] = $stress;
        $done = 1;
        $stress = 3;
       }
      } while (0);
     }
    }
    label = 223;
   } else {
    label = 223;
   }
  } while (0);
  if ((label | 0) == 223) {
   label = 0;
   if ((HEAP8[$vowel_stress + $v | 0] | 0) >= 4) {
    if (($first_primary | 0) == 0) {
     $first_primary = $v;
    } else {
     if (($stressflags & 128 | 0) != 0) {
      HEAP8[$vowel_stress + $v | 0] = 3;
     }
    }
   }
  }
  $v = $v + 1 | 0;
 }
 do {
  if (($unstressed_word | 0) != 0) {
   if (($4 | 0) >= 0) {
    break;
   }
   if ((HEAP32[$vowel_count >> 2] | 0) <= 2) {
    $4 = HEAP32[$1 + 16 >> 2] | 0;
   } else {
    $4 = HEAP32[$1 + 20 >> 2] | 0;
   }
  }
 } while (0);
 $max_stress = 0;
 $max_stress_posn = 0;
 $v = 1;
 while (1) {
  if (($v | 0) >= (HEAP32[$vowel_count >> 2] | 0)) {
   break;
  }
  if ((HEAP8[$vowel_stress + $v | 0] | 0) >= ($max_stress | 0)) {
   $max_stress = HEAP8[$vowel_stress + $v | 0] | 0;
   $max_stress_posn = $v;
  }
  $v = $v + 1 | 0;
 }
 if (($4 | 0) >= 0) {
  if (($4 | 0) > ($max_stress | 0)) {
   label = 247;
  } else {
   if (($max_stress | 0) <= 4) {
    label = 247;
   }
  }
  if ((label | 0) == 247) {
   HEAP8[$vowel_stress + $max_stress_posn | 0] = $4;
  }
  $max_stress = $4;
 }
 $p = $phonetic | 0;
 $v = 1;
 do {
  if (($5 & 1 | 0) == 0) {
   $905 = HEAP32[43256 + (HEAPU8[$p] << 2) >> 2] | 0;
   $ph = $905;
   if (($905 | 0) == 0) {
    break;
   }
   while (1) {
    if ((HEAPU8[$ph + 11 | 0] | 0) == 1) {
     $920 = 1;
    } else {
     $920 = (HEAPU8[$p] | 0) == 15;
    }
    if (!$920) {
     break;
    }
    $p = $p + 1 | 0;
    $ph = HEAP32[43256 + (HEAPU8[$p | 0] << 2) >> 2] | 0;
   }
   do {
    if ((HEAP32[$1 + 4 >> 2] & 48 | 0) != 0) {
     if ((HEAPU8[$ph + 11 | 0] | 0) != 2) {
      break;
     }
     do {
      if ((HEAP32[$1 + 4 >> 2] & 32 | 0) != 0) {
       if ((HEAP8[$vowel_stress + 1 | 0] | 0) < 4) {
        label = 261;
        break;
       }
       $956 = $2;
       $2 = $956 + 1 | 0;
       HEAP8[$956] = 11;
      } else {
       label = 261;
      }
     } while (0);
     if ((label | 0) == 261) {
      $959 = $2;
      $2 = $959 + 1 | 0;
      HEAP8[$959] = 23;
     }
    }
   } while (0);
  }
 } while (0);
 $p = $phonetic | 0;
 $post_tonic = 0;
 while (1) {
  $966 = $p;
  $p = $966 + 1 | 0;
  $968 = HEAP8[$966] | 0;
  $phcode = $968;
  if (($968 & 255 | 0) != 0) {
   $976 = $2 >>> 0 < $max_output >>> 0;
  } else {
   $976 = 0;
  }
  if (!$976) {
   break;
  }
  $981 = HEAP32[43256 + (($phcode & 255) << 2) >> 2] | 0;
  $ph = $981;
  if (($981 | 0) == 0) {
   continue;
  }
  if ((HEAPU8[$ph + 11 | 0] | 0) == 0) {
   HEAP32[$1 + 8320 >> 2] = 0;
  } else {
   if ((HEAPU8[$ph + 11 | 0] | 0) == 2) {
    if ((HEAP32[$ph + 4 >> 2] & 1048576 | 0) != 0) {
     label = 274;
    } else {
     label = 275;
    }
   } else {
    label = 274;
   }
   if ((label | 0) == 274) {
    label = 0;
    if ((HEAPU8[$p] | 0) == 20) {
     label = 275;
    }
   }
   if ((label | 0) == 275) {
    label = 0;
    $v_stress = HEAP8[$vowel_stress + $v | 0] | 0;
    HEAP32[$1 + 8320 >> 2] = $v_stress;
    if ((HEAP8[$vowel_stress + ($v - 1) | 0] | 0) >= ($max_stress | 0)) {
     $post_tonic = 1;
    }
    if (($v_stress | 0) <= 1) {
     do {
      if (($v | 0) > 1) {
       if (($max_stress | 0) < 2) {
        label = 283;
        break;
       }
       if (($stressflags & 4 | 0) == 0) {
        label = 283;
        break;
       }
       if (($v | 0) != ((HEAP32[$vowel_count >> 2] | 0) - 1 | 0)) {
        label = 283;
        break;
       }
       $v_stress = 0;
      } else {
       label = 283;
      }
     } while (0);
     if ((label | 0) == 283) {
      label = 0;
      do {
       if (($stressflags & 2 | 0) != 0) {
        label = 286;
       } else {
        if (($v | 0) == 1) {
         label = 286;
         break;
        }
        if (($v | 0) == ((HEAP32[$vowel_count >> 2] | 0) - 1 | 0)) {
         label = 286;
         break;
        }
        do {
         if (($v | 0) == ((HEAP32[$vowel_count >> 2] | 0) - 2 | 0)) {
          if ((HEAP8[$vowel_stress + ((HEAP32[$vowel_count >> 2] | 0) - 1) | 0] | 0) > 1) {
           label = 290;
           break;
          }
          $v_stress = 1;
         } else {
          label = 290;
         }
        } while (0);
        if ((label | 0) == 290) {
         label = 0;
         if ((HEAP8[$vowel_stress + ($v - 1) | 0] | 0) < 0) {
          label = 292;
         } else {
          if (($stressflags & 65536 | 0) == 0) {
           label = 292;
          }
         }
         if ((label | 0) == 292) {
          label = 0;
          $v_stress = 0;
          HEAP8[$vowel_stress + $v | 0] = $v_stress;
         }
        }
       }
      } while (0);
      if ((label | 0) == 286) {
       label = 0;
       $v_stress = 1;
      }
     }
    }
    if (($v_stress | 0) == 0) {
     label = 299;
    } else {
     if (($v_stress | 0) > 1) {
      label = 299;
     }
    }
    if ((label | 0) == 299) {
     label = 0;
     $1101 = $2;
     $2 = $1101 + 1 | 0;
     HEAP8[$1101] = HEAP8[27744 + $v_stress | 0] | 0;
    }
    if ((HEAP8[$vowel_stress + $v | 0] | 0) > ($max_stress | 0)) {
     $max_stress = HEAP8[$vowel_stress + $v | 0] | 0;
    }
    do {
     if ((HEAPU8[$p] | 0) == 12) {
      $1125 = HEAP32[$1 + 32 >> 2] | 0;
      if (($1125 & 1 | 0) == 0) {
       break;
      }
      $shorten = 0;
      if (($1125 & 16 | 0) != 0) {
       if (($v | 0) != ($max_stress_posn | 0)) {
        $shorten = 1;
       }
      } else {
       if (($v_stress | 0) < 4) {
        $shorten = 1;
       }
      }
      if (($shorten | 0) != 0) {
       $p = $p + 1 | 0;
      }
     }
    } while (0);
    do {
     if (($v_stress | 0) >= 4) {
      if ((HEAP32[$1 + 32 >> 2] | 0) != 2) {
       break;
      }
      do {
       if (($v | 0) == ((HEAP32[$vowel_count >> 2] | 0) - 2 | 0)) {
        if ((HEAP8[$syllable_weight + $v | 0] | 0) != 0) {
         break;
        }
        $1173 = $2;
        $2 = $1173 + 1 | 0;
        HEAP8[$1173] = $phcode;
        $phcode = 12;
       }
      } while (0);
     }
    } while (0);
    $v = $v + 1 | 0;
   }
  }
  if (($phcode & 255 | 0) != 1) {
   $1186 = $2;
   $2 = $1186 + 1 | 0;
   HEAP8[$1186] = $phcode;
  }
 }
 $1190 = $2;
 $2 = $1190 + 1 | 0;
 HEAP8[$1190] = 0;
 STACKTOP = sp;
 return;
}
function __ZL9MatchRuleP10TranslatorPPcS1_iS1_P11MatchRecordii($tr, $word, $word_start, $group_length, $rule, $match_out, $word_flags, $dict_flags) {
 $tr = $tr | 0;
 $word = $word | 0;
 $word_start = $word_start | 0;
 $group_length = $group_length | 0;
 $rule = $rule | 0;
 $match_out = $match_out | 0;
 $word_flags = $word_flags | 0;
 $dict_flags = $dict_flags | 0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $rb = 0, $letter = 0, $letter_w = 0, $letter_xbytes = 0, $last_letter = 0, $pre_ptr = 0, $post_ptr = 0, $rule_start = 0, $p = 0, $ix = 0, $match_type = 0, $failed = 0, $unpron_ignore = 0, $consumed = 0, $syllable_count = 0, $vowel = 0, $letter_group = 0, $distance_right = 0, $distance_left = 0, $lg_pts = 0, $n_bytes = 0, $add_points = 0, $command = 0, $check_atstart = 0, $flags = 0, $match = 0, $total_consumed = 0, $condition_num = 0, $common_phonemes = 0, $group_chars = 0, $word_buf = 0, $p1 = 0, $vowel_count = 0, $p2 = 0, $p3 = 0, $p24 = 0, $rule_w = 0, $end_type = 0, $p5 = 0, $pts = 0, $decoded_phonemes = 0, $16 = 0, $44 = 0, $60 = 0, $61 = 0, $63 = 0, $71 = 0, $77 = 0, $85 = 0, $109 = 0, $142 = 0, $151 = 0, $154 = 0, $192 = 0, $198 = 0, $222 = 0, $231 = 0, $310 = 0, $512 = 0, $635 = 0, $660 = 0, $668 = 0, $732 = 0, $935 = 0, $958 = 0, $967 = 0, $992 = 0, $998 = 0, $1005 = 0, $1035 = 0, $1043 = 0, label = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 280 | 0;
 $letter_w = sp | 0;
 $flags = sp + 8 | 0;
 $match = sp + 16 | 0;
 $word_buf = sp + 32 | 0;
 $rule_w = sp + 192 | 0;
 $decoded_phonemes = sp + 200 | 0;
 $1 = $tr;
 $2 = $word;
 $3 = $word_start;
 $4 = $group_length;
 $5 = $rule;
 $6 = $match_out;
 $7 = $word_flags;
 $8 = $dict_flags;
 $group_chars = HEAP32[$2 >> 2] | 0;
 if (($5 | 0) == 0) {
  HEAP32[$6 >> 2] = 0;
  $16 = $2;
  HEAP32[$16 >> 2] = (HEAP32[$16 >> 2] | 0) + 1;
  STACKTOP = sp;
  return;
 }
 $total_consumed = 0;
 $common_phonemes = 0;
 $match_type = 0;
 HEAP32[22794] = 0;
 HEAP32[22795] = 90696;
 HEAP32[22796] = 0;
 HEAP32[22797] = 0;
 while (1) {
  if ((HEAP8[$5 | 0] | 0) == 7) {
   break;
  }
  $unpron_ignore = $7 & -2147483648;
  $match_type = 0;
  $consumed = 0;
  $letter = 0;
  $distance_right = -6;
  $distance_left = -2;
  $check_atstart = 0;
  HEAP32[$match >> 2] = 1;
  HEAP32[$match + 8 >> 2] = 0;
  HEAP32[$match + 12 >> 2] = 0;
  $pre_ptr = HEAP32[$2 >> 2] | 0;
  $post_ptr = (HEAP32[$2 >> 2] | 0) + $4 | 0;
  $rule_start = $5;
  $failed = 0;
  while (1) {
   if (!(($failed | 0) != 0 ^ 1)) {
    break;
   }
   $44 = $5;
   $5 = $44 + 1 | 0;
   $rb = HEAP8[$44] | 0;
   if (($rb & 255 | 0) <= 9) {
    switch ($rb & 255 | 0) {
    case 0:
     {
      if (($common_phonemes | 0) != 0) {
       HEAP32[$match + 4 >> 2] = $common_phonemes;
       while (1) {
        $60 = $match + 4 | 0;
        $61 = HEAP32[$60 >> 2] | 0;
        HEAP32[$60 >> 2] = $61 + 1;
        $63 = HEAP8[$61] | 0;
        $rb = $63;
        if (($63 & 255 | 0) != 0) {
         $71 = ($rb & 255 | 0) != 3;
        } else {
         $71 = 0;
        }
        if (!$71) {
         break;
        }
        if (($rb & 255 | 0) == 5) {
         $77 = $match + 4 | 0;
         HEAP32[$77 >> 2] = (HEAP32[$77 >> 2] | 0) + 1;
        }
        if (($rb & 255 | 0) == 9) {
         $85 = $match + 4 | 0;
         HEAP32[$85 >> 2] = (HEAP32[$85 >> 2] | 0) + 2;
        }
       }
      } else {
       HEAP32[$match + 4 >> 2] = 90696;
      }
      $5 = $5 - 1 | 0;
      $failed = 2;
      break;
     }
    case 8:
     {
      $check_atstart = 1;
      $unpron_ignore = 0;
      $match_type = 1;
      break;
     }
    case 1:
     {
      $match_type = 1;
      if (($7 & -2147483648 | 0) != 0) {
       $failed = 1;
      }
      break;
     }
    case 2:
     {
      $match_type = 2;
      break;
     }
    case 3:
     {
      HEAP32[$match + 4 >> 2] = $5;
      $failed = 2;
      break;
     }
    case 4:
     {
      $common_phonemes = $5;
      break;
     }
    case 5:
     {
      $109 = $5;
      $5 = $109 + 1 | 0;
      $condition_num = HEAP8[$109] | 0;
      if (($condition_num & 255 | 0) >= 32) {
       if ((HEAP32[$1 + 440 >> 2] & 1 << ($condition_num & 255) - 32 | 0) != 0) {
        $failed = 1;
       }
      } else {
       if ((HEAP32[$1 + 440 >> 2] & 1 << ($condition_num & 255) | 0) == 0) {
        $failed = 1;
       }
      }
      if (($failed | 0) == 0) {
       $142 = $match | 0;
       HEAP32[$142 >> 2] = (HEAP32[$142 >> 2] | 0) + 1;
      }
      break;
     }
    case 9:
     {
      $5 = $5 + 2 | 0;
      break;
     }
    default:
     {}
    }
    continue;
   }
   $add_points = 0;
   $151 = $match_type;
   if (($151 | 0) == 0) {
    $last_letter = $letter;
    $154 = $post_ptr;
    $post_ptr = $154 + 1 | 0;
    $letter = HEAP8[$154] | 0;
    do {
     if (($letter & 255 | 0) == ($rb & 255 | 0)) {
      label = 45;
     } else {
      if (($letter & 255 | 0) == 69) {
       if (($rb & 255 | 0) == 101) {
        label = 45;
        break;
       }
      }
      $failed = 1;
     }
    } while (0);
    if ((label | 0) == 45) {
     label = 0;
     if (($letter & 192 | 0) != 128) {
      $add_points = 21;
     }
     $consumed = $consumed + 1 | 0;
    }
   } else if (($151 | 0) == 2) {
    $distance_right = $distance_right + 6 | 0;
    if (($distance_right | 0) > 18) {
     $distance_right = 19;
    }
    $last_letter = $letter;
    $letter_xbytes = (__Z7utf8_inPiPKc($letter_w, $post_ptr) | 0) - 1 | 0;
    $192 = $post_ptr;
    $post_ptr = $192 + 1 | 0;
    $letter = HEAP8[$192] | 0;
    switch ($rb & 255 | 0) {
    case 17:
     {
      $198 = $5;
      $5 = $198 + 1 | 0;
      $letter_group = (HEAP8[$198] | 0) - 65 | 0;
      if ((__ZL8IsLetterP10Translatorii($1, HEAP32[$letter_w >> 2] | 0, $letter_group) | 0) != 0) {
       $lg_pts = 20;
       if (($letter_group | 0) == 2) {
        $lg_pts = 19;
       }
       $add_points = $lg_pts - $distance_right | 0;
       $post_ptr = $post_ptr + $letter_xbytes | 0;
      } else {
       $failed = 1;
      }
      break;
     }
    case 18:
     {
      $222 = $5;
      $5 = $222 + 1 | 0;
      $letter_group = (HEAP8[$222] | 0) - 65 | 0;
      $231 = __ZL13IsLetterGroupP10TranslatorPcii($1, $post_ptr - 1 | 0, $letter_group, 0) | 0;
      $n_bytes = $231;
      if (($231 | 0) > 0) {
       $add_points = 20 - $distance_right | 0;
       $post_ptr = $post_ptr + ($n_bytes - 1) | 0;
      } else {
       $failed = 1;
      }
      break;
     }
    case 25:
     {
      do {
       if ((__ZL8IsLetterP10Translatorii($1, HEAP32[$letter_w >> 2] | 0, 0) | 0) != 0) {
        label = 66;
       } else {
        if ((HEAP32[$letter_w >> 2] | 0) == 32) {
         if (($7 & 134217728 | 0) != 0) {
          label = 66;
          break;
         }
        }
        $add_points = 20 - $distance_right | 0;
        $post_ptr = $post_ptr + $letter_xbytes | 0;
       }
      } while (0);
      if ((label | 0) == 66) {
       label = 0;
       $failed = 1;
      }
      break;
     }
    case 15:
     {
      if ((__Z7IsDigitj(HEAP32[$letter_w >> 2] | 0) | 0) != 0) {
       $add_points = 20 - $distance_right | 0;
       $post_ptr = $post_ptr + $letter_xbytes | 0;
      } else {
       if ((HEAP8[$1 + 270 | 0] | 0) != 0) {
        $add_points = 20 - $distance_right | 0;
        $post_ptr = $post_ptr - 1 | 0;
       } else {
        $failed = 1;
       }
      }
      break;
     }
    case 16:
     {
      if ((__Z9iswalpha2i(HEAP32[$letter_w >> 2] | 0) | 0) != 0) {
       $failed = 1;
      } else {
       $add_points = 21 - $distance_right | 0;
       $post_ptr = $post_ptr + $letter_xbytes | 0;
      }
      break;
     }
    case 11:
     {
      if (($letter & 255 | 0) == ($last_letter & 255 | 0)) {
       $add_points = 21 - $distance_right | 0;
      } else {
       $failed = 1;
      }
      break;
     }
    case 28:
     {
      $310 = $5;
      $5 = $310 + 1 | 0;
      $command = HEAP8[$310] | 0;
      if (($command | 0) == 1) {
       HEAP32[$match + 8 >> 2] = 32768;
      } else {
       if (($command | 0) == 2) {
        if (($7 & 8388608 | 0) != 0) {
         $failed = 1;
        } else {
         $add_points = 1;
        }
       } else {
        if (($command & 240 | 0) == 16) {
         if (($8 & 1 << ($command & 15) + 14 | 0) != 0) {
          $add_points = 23;
         } else {
          $failed = 1;
         }
        } else {
         if (($command & 240 | 0) == 32) {
          label = 98;
         } else {
          if (($command | 0) == 3) {
           label = 98;
          }
         }
         if ((label | 0) == 98) {
          label = 0;
          $ix = (HEAP32[$2 >> 2] | 0) - $3 + $consumed + $4 + 1 | 0;
          _memcpy($word_buf | 0, $3 - 1 | 0, $ix) | 0;
          HEAP8[$word_buf + $ix | 0] = 32;
          HEAP8[$word_buf + ($ix + 1) | 0] = 0;
          __Z11LookupFlagsP10TranslatorPKcPPj($1, $word_buf + 1 | 0, $flags) | 0;
          do {
           if (($command | 0) == 3) {
            if ((HEAP32[HEAP32[$flags >> 2] >> 2] & -2147483648 | 0) == 0) {
             label = 102;
             break;
            }
            if ((HEAP32[(HEAP32[$flags >> 2] | 0) + 4 >> 2] & 16384 | 0) != 0) {
             label = 102;
             break;
            }
            $add_points = 23;
           } else {
            label = 102;
           }
          } while (0);
          if ((label | 0) == 102) {
           label = 0;
           if ((HEAP32[HEAP32[$flags >> 2] >> 2] & 1 << ($command & 15) + 14 | 0) != 0) {
            $add_points = 23;
           } else {
            $failed = 1;
           }
          }
         }
        }
       }
      }
      break;
     }
    case 45:
     {
      do {
       if (($letter & 255 | 0) == 45) {
        label = 114;
       } else {
        if (($letter & 255 | 0) == 32) {
         if (($7 & 16384 | 0) != 0) {
          label = 114;
          break;
         }
        }
        $failed = 1;
       }
      } while (0);
      if ((label | 0) == 114) {
       label = 0;
       $add_points = 22 - $distance_right | 0;
      }
      break;
     }
    case 21:
     {
      $p1 = $post_ptr + $letter_xbytes | 0;
      $vowel_count = 0;
      $syllable_count = 1;
      while (1) {
       if ((HEAP8[$5] | 0) != 21) {
        break;
       }
       $5 = $5 + 1 | 0;
       $syllable_count = $syllable_count + 1 | 0;
      }
      $vowel = 0;
      while (1) {
       if ((HEAP32[$letter_w >> 2] | 0) == 32) {
        break;
       }
       do {
        if (($vowel | 0) == 0) {
         if ((__ZL8IsLetterP10Translatorii($1, HEAP32[$letter_w >> 2] | 0, 7) | 0) == 0) {
          break;
         }
         $vowel_count = $vowel_count + 1 | 0;
        }
       } while (0);
       $vowel = __ZL8IsLetterP10Translatorii($1, HEAP32[$letter_w >> 2] | 0, 7) | 0;
       $p1 = $p1 + (__Z7utf8_inPiPKc($letter_w, $p1) | 0) | 0;
      }
      if (($syllable_count | 0) <= ($vowel_count | 0)) {
       $add_points = $syllable_count + 18 - $distance_right | 0;
      } else {
       $failed = 1;
      }
      break;
     }
    case 29:
     {
      $p2 = $post_ptr + $letter_xbytes | 0;
      while (1) {
       if ((HEAP32[$letter_w >> 2] | 0) == 32) {
        break;
       }
       if ((__ZL8IsLetterP10Translatorii($1, HEAP32[$letter_w >> 2] | 0, 7) | 0) != 0) {
        label = 133;
        break;
       }
       $p2 = $p2 + (__Z7utf8_inPiPKc($letter_w, $p2) | 0) | 0;
      }
      if ((label | 0) == 133) {
       label = 0;
       $failed = 1;
      }
      if (($failed | 0) == 0) {
       $add_points = 19 - $distance_right | 0;
      }
      break;
     }
    case 23:
     {
      $p3 = $post_ptr + $letter_xbytes | 0;
      $p24 = $p3;
      __Z7utf8_inPiPKc($rule_w, $5) | 0;
      while (1) {
       if ((HEAP32[$letter_w >> 2] | 0) != (HEAP32[$rule_w >> 2] | 0)) {
        $512 = (HEAP32[$letter_w >> 2] | 0) != 32;
       } else {
        $512 = 0;
       }
       if (!$512) {
        break;
       }
       $p24 = $p3;
       $p3 = $p3 + (__Z7utf8_inPiPKc($letter_w, $p3) | 0) | 0;
      }
      if ((HEAP32[$letter_w >> 2] | 0) == (HEAP32[$rule_w >> 2] | 0)) {
       $post_ptr = $p24;
      }
      break;
     }
    case 12:
     {
      $add_points = 20;
      break;
     }
    case 13:
     {
      $p = (HEAP32[$2 >> 2] | 0) + $4 | 0;
      while (1) {
       if ($p >>> 0 >= $post_ptr >>> 0) {
        break;
       }
       if ((HEAP8[$p] | 0) == 101) {
        label = 150;
        break;
       }
       $p = $p + 1 | 0;
      }
      if ((label | 0) == 150) {
       label = 0;
       HEAP32[$match + 12 >> 2] = $p;
      }
      break;
     }
    case 14:
     {
      $end_type = (HEAP8[$5 | 0] << 16) + ((HEAP8[$5 + 1 | 0] & 127) << 8) + (HEAP8[$5 + 2 | 0] & 127) | 0;
      do {
       if ((HEAP32[$1 + 8328 >> 2] | 0) == 0) {
        if (($end_type & 1024 | 0) != 0) {
         label = 158;
         break;
        }
        if ((HEAP32[$1 + 100 >> 2] & 1 | 0) == 0) {
         label = 158;
         break;
        }
        $failed = 1;
       } else {
        label = 158;
       }
      } while (0);
      if ((label | 0) == 158) {
       label = 0;
       HEAP32[$match + 8 >> 2] = $end_type;
       $5 = $5 + 3 | 0;
      }
      break;
     }
    case 24:
     {
      if (($7 & 8192 | 0) != 0) {
       $failed = 1;
      } else {
       $add_points = 1;
      }
      break;
     }
    default:
     {
      if (($letter & 255 | 0) == ($rb & 255 | 0)) {
       if (($letter & 192 | 0) != 128) {
        $add_points = 21 - $distance_right | 0;
       }
      } else {
       $failed = 1;
      }
     }
    }
   } else if (($151 | 0) == 1) {
    $distance_left = $distance_left + 2 | 0;
    if (($distance_left | 0) > 18) {
     $distance_left = 19;
    }
    $last_letter = HEAP8[$pre_ptr] | 0;
    $pre_ptr = $pre_ptr - 1 | 0;
    $letter_xbytes = (__Z8utf8_in2PiPKci($letter_w, $pre_ptr, 1) | 0) - 1 | 0;
    $letter = HEAP8[$pre_ptr] | 0;
    switch ($rb & 255 | 0) {
    case 17:
     {
      $635 = $5;
      $5 = $635 + 1 | 0;
      $letter_group = (HEAP8[$635] | 0) - 65 | 0;
      if ((__ZL8IsLetterP10Translatorii($1, HEAP32[$letter_w >> 2] | 0, $letter_group) | 0) != 0) {
       $lg_pts = 20;
       if (($letter_group | 0) == 2) {
        $lg_pts = 19;
       }
       $add_points = $lg_pts - $distance_left | 0;
       $pre_ptr = $pre_ptr + (-$letter_xbytes | 0) | 0;
      } else {
       $failed = 1;
      }
      break;
     }
    case 18:
     {
      $660 = $5;
      $5 = $660 + 1 | 0;
      $letter_group = (HEAP8[$660] | 0) - 65 | 0;
      $668 = __ZL13IsLetterGroupP10TranslatorPcii($1, $pre_ptr, $letter_group, 1) | 0;
      $n_bytes = $668;
      if (($668 | 0) > 0) {
       $add_points = 20 - $distance_right | 0;
       $pre_ptr = $pre_ptr + (-($n_bytes - 1 | 0) | 0) | 0;
      } else {
       $failed = 1;
      }
      break;
     }
    case 25:
     {
      if ((__ZL8IsLetterP10Translatorii($1, HEAP32[$letter_w >> 2] | 0, 0) | 0) != 0) {
       $failed = 1;
      } else {
       $add_points = 20 - $distance_left | 0;
       $pre_ptr = $pre_ptr + (-$letter_xbytes | 0) | 0;
      }
      break;
     }
    case 11:
     {
      if (($letter & 255 | 0) == ($last_letter & 255 | 0)) {
       $add_points = 21 - $distance_left | 0;
      } else {
       $failed = 1;
      }
      break;
     }
    case 15:
     {
      if ((__Z7IsDigitj(HEAP32[$letter_w >> 2] | 0) | 0) != 0) {
       $add_points = 21 - $distance_left | 0;
       $pre_ptr = $pre_ptr + (-$letter_xbytes | 0) | 0;
      } else {
       $failed = 1;
      }
      break;
     }
    case 16:
     {
      if ((__Z9iswalpha2i(HEAP32[$letter_w >> 2] | 0) | 0) != 0) {
       $failed = 1;
      } else {
       $add_points = 21 - $distance_right | 0;
       $pre_ptr = $pre_ptr + (-$letter_xbytes | 0) | 0;
      }
      break;
     }
    case 28:
     {
      $732 = $5;
      $5 = $732 + 1 | 0;
      $command = HEAP8[$732] | 0;
      if (($command | 0) == 3) {
       label = 202;
      } else {
       if (($command & 240 | 0) == 32) {
        label = 202;
       }
      }
      if ((label | 0) == 202) {
       label = 0;
       $ix = (HEAP32[$2 >> 2] | 0) - $3 + 1 | 0;
       _memcpy($word_buf | 0, $3 - 1 | 0, $ix) | 0;
       HEAP8[$word_buf + $ix | 0] = 32;
       HEAP8[$word_buf + ($ix + 1) | 0] = 0;
       __Z11LookupFlagsP10TranslatorPKcPPj($1, $word_buf + 1 | 0, $flags) | 0;
       do {
        if (($command | 0) == 3) {
         if ((HEAP32[HEAP32[$flags >> 2] >> 2] & -2147483648 | 0) == 0) {
          label = 206;
          break;
         }
         if ((HEAP32[(HEAP32[$flags >> 2] | 0) + 4 >> 2] & 16384 | 0) != 0) {
          label = 206;
          break;
         }
         $add_points = 23;
        } else {
         label = 206;
        }
       } while (0);
       if ((label | 0) == 206) {
        label = 0;
        if ((HEAP32[HEAP32[$flags >> 2] >> 2] & 1 << ($command & 15) + 14 | 0) != 0) {
         $add_points = 23;
        } else {
         $failed = 1;
        }
       }
      }
      break;
     }
    case 21:
     {
      $syllable_count = 1;
      while (1) {
       if ((HEAP8[$5] | 0) != 21) {
        break;
       }
       $5 = $5 + 1 | 0;
       $syllable_count = $syllable_count + 1 | 0;
      }
      if (($syllable_count | 0) <= (HEAP32[$1 + 8328 >> 2] | 0)) {
       $add_points = $syllable_count + 18 - $distance_left | 0;
      } else {
       $failed = 1;
      }
      break;
     }
    case 10:
     {
      if ((HEAP32[$1 + 8332 >> 2] | 0) > 0) {
       $add_points = 19;
      } else {
       $failed = 1;
      }
      break;
     }
    case 29:
     {
      $p5 = $pre_ptr + (-$letter_xbytes | 0) - 1 | 0;
      while (1) {
       if ((HEAP32[$letter_w >> 2] | 0) == 32) {
        break;
       }
       if ((__ZL8IsLetterP10Translatorii($1, HEAP32[$letter_w >> 2] | 0, 7) | 0) != 0) {
        label = 226;
        break;
       }
       $p5 = $p5 + (-(__Z8utf8_in2PiPKci($letter_w, $p5, 1) | 0) | 0) | 0;
      }
      if ((label | 0) == 226) {
       label = 0;
       $failed = 1;
      }
      if (($failed | 0) == 0) {
       $add_points = 3;
      }
      break;
     }
    case 26:
     {
      if ((HEAP32[$1 + 8304 >> 2] | 0) != 0) {
       $add_points = 1;
      } else {
       $failed = 1;
      }
      break;
     }
    case 19:
     {
      if (($7 & 2 | 0) != 0) {
       $add_points = 1;
      } else {
       $failed = 1;
      }
      break;
     }
    case 46:
     {
      $p = $pre_ptr;
      while (1) {
       if ((HEAP8[$p] | 0) == 32) {
        break;
       }
       if ((HEAP8[$p] | 0) == 46) {
        label = 242;
        break;
       }
       $p = $p - 1 | 0;
      }
      if ((label | 0) == 242) {
       label = 0;
       $add_points = 50;
      }
      if ((HEAP8[$p] | 0) == 32) {
       $failed = 1;
      }
      break;
     }
    case 45:
     {
      do {
       if (($letter & 255 | 0) == 45) {
        label = 251;
       } else {
        if (($letter & 255 | 0) == 32) {
         if (($7 & 128 | 0) != 0) {
          label = 251;
          break;
         }
        }
        $failed = 1;
       }
      } while (0);
      if ((label | 0) == 251) {
       label = 0;
       $add_points = 22 - $distance_right | 0;
      }
      break;
     }
    default:
     {
      if (($letter & 255 | 0) == ($rb & 255 | 0)) {
       if (($letter & 255 | 0) == 32) {
        $add_points = 4;
       } else {
        if (($letter & 192 | 0) != 128) {
         $add_points = 21 - $distance_left | 0;
        }
       }
      } else {
       $failed = 1;
      }
     }
    }
   }
   if (($failed | 0) == 0) {
    $935 = $match | 0;
    HEAP32[$935 >> 2] = (HEAP32[$935 >> 2] | 0) + $add_points;
   }
  }
  do {
   if (($failed | 0) == 2) {
    if (($unpron_ignore | 0) != 0) {
     break;
    }
    if (($check_atstart | 0) == 0) {
     label = 271;
    } else {
     if ((HEAP8[$pre_ptr - 1 | 0] | 0) == 32) {
      label = 271;
     }
    }
    if ((label | 0) == 271) {
     label = 0;
     if (($check_atstart | 0) != 0) {
      $958 = $match | 0;
      HEAP32[$958 >> 2] = (HEAP32[$958 >> 2] | 0) + 4;
     }
     if ((HEAP32[$match >> 2] | 0) >= (HEAP32[22794] | 0)) {
      $967 = $match;
      HEAP32[22794] = HEAP32[$967 >> 2];
      HEAP32[22795] = HEAP32[$967 + 4 >> 2];
      HEAP32[22796] = HEAP32[$967 + 8 >> 2];
      HEAP32[22797] = HEAP32[$967 + 12 >> 2];
      $total_consumed = $consumed;
     }
     do {
      if ((HEAP32[19530] | 0) == 2) {
       if ((HEAP32[$match >> 2] | 0) <= 0) {
        break;
       }
       if (($7 & 268435456 | 0) != 0) {
        break;
       }
       $pts = HEAP32[$match >> 2] | 0;
       if (($4 | 0) > 1) {
        $pts = $pts + 35 | 0;
       }
       __Z14DecodePhonemesPKcPc(HEAP32[$match + 4 >> 2] | 0, $decoded_phonemes | 0);
       $992 = HEAP32[19596] | 0;
       $998 = __Z10DecodeRulePKciPci($group_chars, $4, $rule_start, $7) | 0;
       _fprintf($992 | 0, 14376, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 24 | 0, HEAP32[tempVarArgs >> 2] = $pts, HEAP32[tempVarArgs + 8 >> 2] = $998, HEAP32[tempVarArgs + 16 >> 2] = $decoded_phonemes, tempVarArgs) | 0) | 0;
       STACKTOP = tempVarArgs;
      }
     } while (0);
    }
   }
  } while (0);
  do {
   $1005 = $5;
   $5 = $1005 + 1 | 0;
  } while ((HEAP8[$1005] | 0) != 0);
 }
 do {
  if ((HEAP32[19530] | 0) == 2) {
   if (($7 & 268435456 | 0) != 0) {
    break;
   }
   if (($4 | 0) <= 1) {
    _fprintf(HEAP32[19596] | 0, 14200, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 7 & -8, HEAP32[tempVarArgs >> 2] = 0, tempVarArgs) | 0) | 0;
    STACKTOP = tempVarArgs;
   }
  }
 } while (0);
 $total_consumed = $total_consumed + $4 | 0;
 if (($total_consumed | 0) == 0) {
  $total_consumed = 1;
 }
 $1035 = $2;
 HEAP32[$1035 >> 2] = (HEAP32[$1035 >> 2] | 0) + $total_consumed;
 if ((HEAP32[22794] | 0) == 0) {
  HEAP32[22795] = 90696;
 }
 $1043 = $6;
 HEAP32[$1043 >> 2] = HEAP32[22794];
 HEAP32[$1043 + 4 >> 2] = HEAP32[22795];
 HEAP32[$1043 + 8 >> 2] = HEAP32[22796];
 HEAP32[$1043 + 12 >> 2] = HEAP32[22797];
 STACKTOP = sp;
 return;
}
function __ZL14TranslateWord2P10TranslatorPcP8WORD_TABii($tr, $word, $wtab, $pre_pause, $next_pause) {
 $tr = $tr | 0;
 $word = $word | 0;
 $wtab = $wtab | 0;
 $pre_pause = $pre_pause | 0;
 $next_pause = $next_pause | 0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $flags = 0, $stress = 0, $next_stress = 0, $next_tone = 0, $p = 0, $srcix = 0, $found_dict_flag = 0, $ph_code = 0, $plist2 = 0, $ph = 0, $max_stress = 0, $max_stress_ix = 0, $prev_vowel = 0, $pitch_raised = 0, $switch_phonemes = 0, $first_phoneme = 0, $source_ix = 0, $len = 0, $ix = 0, $sylimit = 0, $new_language = 0, $bad_phoneme = 0, $word_flags = 0, $word_copy_len = 0, $word_copy = 0, $word_replaced = 0, $old_dictionary_name = 0, $c1 = 0, $lang_name = 0, $p2 = 0, $ok = 0, $flags2 = 0, $c_word2 = 0, $ph_buf = 0, $switch_attempt = 0, $21 = 0, $75 = 0, $122 = 0, $153 = 0, $157 = 0, $164 = 0, $180 = 0, $194 = 0, $201 = 0, $217 = 0, $220 = 0, $229 = 0, $344 = 0, $410 = 0, $546 = 0, $551 = 0, $557 = 0, $581 = 0, $584 = 0, $598 = 0, $601 = 0, $649 = 0, $687 = 0, $689 = 0, $696 = 0, $722 = 0, $723 = 0, $771 = 0, $789 = 0, $864 = 0, $927 = 0, $953 = 0, $1000 = 0, $1001 = 0, $1012 = 0, $1017 = 0, $1028 = 0, $1040 = 0, label = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 616 | 0;
 $bad_phoneme = sp | 0;
 $word_copy = sp + 8 | 0;
 $word_replaced = sp + 176 | 0;
 $old_dictionary_name = sp + 344 | 0;
 $lang_name = sp + 384 | 0;
 $flags2 = sp + 400 | 0;
 $c_word2 = sp + 408 | 0;
 $ph_buf = sp + 416 | 0;
 $2 = $tr;
 $3 = $word;
 $4 = $wtab;
 $5 = $pre_pause;
 $6 = $next_pause;
 $flags = 0;
 $next_tone = 0;
 $max_stress_ix = 0;
 $prev_vowel = -1;
 $pitch_raised = 0;
 $switch_phonemes = -1;
 $first_phoneme = 1;
 do {
  if ((HEAP32[19598] | 0) != 0) {
   if ((HEAP32[19580] & 8 | 0) == 0) {
    break;
   }
   $21 = HEAPU8[$4 + 10 | 0] | 0;
   _fprintf(HEAP32[19598] | 0, 16912, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = HEAP32[$4 >> 2], HEAP32[tempVarArgs + 8 >> 2] = $21, tempVarArgs) | 0) | 0;
   STACKTOP = tempVarArgs;
   $ix = 0;
   while (1) {
    if (($ix | 0) >= 40) {
     break;
    }
    if ((HEAP8[$3 + $ix | 0] | 0) == 0) {
     label = 6;
     break;
    }
    _fputc(HEAP8[$3 + $ix | 0] | 0, HEAP32[19598] | 0) | 0;
    $ix = $ix + 1 | 0;
   }
   if ((label | 0) == 6) {}
   _fprintf(HEAP32[19598] | 0, 16752, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 7 & -8, HEAP32[tempVarArgs >> 2] = 0, tempVarArgs) | 0) | 0;
   STACKTOP = tempVarArgs;
  }
 } while (0);
 $len = HEAPU8[$4 + 10 | 0] | 0;
 if (($len | 0) > 31) {
  $len = 31;
 }
 $source_ix = HEAP16[$4 + 8 >> 1] & 2047 | $len << 11;
 $word_flags = HEAP32[$4 >> 2] | 0;
 if (($word_flags & 64 | 0) != 0) {
  $75 = $4 | 0;
  HEAP32[$75 >> 2] = HEAP32[$75 >> 2] & -65;
  HEAP32[28516] = 2;
  __Z16Word_EmbeddedCmdv();
 }
 do {
  if ((HEAP8[$3 | 0] | 0) != 0) {
   if (($word_flags & 1048576 | 0) != 0) {
    break;
   }
   if ((HEAP32[$2 + 8344 >> 2] | 0) > 0) {
    $122 = $2 + 8344 | 0;
    HEAP32[$122 >> 2] = (HEAP32[$122 >> 2] | 0) - 1;
   }
   if ((HEAP32[19464] & 240 | 0) == 16) {
    if (($word_flags & 512 | 0) == 0) {
     $5 = $5 + 4 | 0;
    }
   }
   if (($word_flags & 2 | 0) != 0) {
    do {
     if ((HEAP32[19546] | 0) > 2) {
      if ((HEAP32[30924] | 0) >= 244) {
       break;
      }
      if ((HEAP32[28516] | 0) != 0) {
       $153 = 78480 + ((HEAP32[30924] | 0) - 1 << 2) | 0;
       HEAP32[$153 >> 2] = HEAP32[$153 >> 2] & -129;
      }
      $157 = HEAP32[19546] | 0;
      $pitch_raised = $157;
      if (($157 | 0) == 3) {
       $pitch_raised = 20;
      }
      $164 = HEAP32[30924] | 0;
      HEAP32[30924] = $164 + 1;
      HEAP32[78480 + ($164 << 2) >> 2] = ($pitch_raised << 8) + 193;
      HEAP32[28516] = 2;
     }
    } while (0);
   }
   $p = 33176;
   if (($word_flags & 8 | 0) != 0) {
    if ((_memcmp($3 | 0, 16616, 3) | 0) == 0) {
     $3 = $3 + 3 | 0;
     $ix = 0;
     while (1) {
      $180 = $3;
      $3 = $180 + 1 | 0;
      $c1 = HEAP8[$180] | 0;
      if (($c1 | 0) == 32) {
       break;
      }
      if (($c1 | 0) == 0) {
       break;
      }
      $194 = $ix;
      $ix = $194 + 1 | 0;
      HEAP8[$lang_name + $194 | 0] = _tolower($c1 | 0) | 0;
     }
     HEAP8[$lang_name + $ix | 0] = 0;
     $201 = __Z18LookupPhonemeTablePKc($lang_name | 0) | 0;
     $ix = $201;
     if (($201 | 0) > 0) {
      __Z18SelectPhonemeTablei($ix);
      HEAP8[33176] = 21;
      HEAP8[33177] = $ix;
      HEAP8[33178] = 0;
     }
    } else {
     __Z14EncodePhonemesPKcPcPi($3, 33176, $bad_phoneme) | 0;
    }
    $flags = -2147483648;
   } else {
    $ix = 0;
    while (1) {
     $217 = HEAP8[$3 + $ix | 0] | 0;
     HEAP8[$word_copy + $ix | 0] = $217;
     $220 = $217 << 24 >> 24;
     do {
      if (($220 | 0) != 32) {
       if (($220 | 0) == 0) {
        $229 = 0;
        break;
       }
       $229 = ($ix | 0) < 160;
      } else {
       $229 = 0;
      }
     } while (0);
     if (!$229) {
      break;
     }
     $ix = $ix + 1 | 0;
    }
    $word_copy_len = $ix;
    HEAP8[$word_replaced + 2 | 0] = 0;
    $flags = __Z13TranslateWordP10TranslatorPciP8WORD_TABS1_(HEAP32[9112] | 0, $3, $6, $4, $word_replaced + 2 | 0) | 0;
    if (($flags & 4096 | 0) != 0) {
     _memcpy($3 | 0, $word_copy | 0, $word_copy_len) | 0;
     $1 = $flags;
     $1040 = $1;
     STACKTOP = sp;
     return $1040 | 0;
    }
    do {
     if (($flags & 8388608 | 0) != 0) {
      if ((HEAP32[$4 + 12 >> 2] & 8 | 0) != 0) {
       break;
      }
      $ok = 1;
      HEAP32[$flags2 >> 2] = 0;
      $sylimit = HEAP32[$2 + 68 >> 2] | 0;
      $p2 = $3;
      while (1) {
       if ((HEAP8[$p2] | 0) == 32) {
        break;
       }
       $p2 = $p2 + 1 | 0;
      }
      __Z7utf8_inPiPKc($c_word2, $p2 + 1 | 0) | 0;
      if ((__Z9iswalpha2i(HEAP32[$c_word2 >> 2] | 0) | 0) == 0) {
       $ok = 0;
      }
      if (($ok | 0) != 0) {
       _strcpy($ph_buf | 0, 33176) | 0;
       HEAP32[$flags2 >> 2] = __Z13TranslateWordP10TranslatorPciP8WORD_TABS1_(HEAP32[9112] | 0, $p2 + 1 | 0, 0, $4 + 12 | 0, 0) | 0;
       if ((HEAP32[$flags2 >> 2] & 67108864 | 0) != 0) {
        label = 64;
       } else {
        if ((HEAP8[33176] | 0) == 21) {
         label = 64;
        }
       }
       if ((label | 0) == 64) {
        $ok = 0;
       }
       if (($sylimit & 256 | 0) != 0) {
        if ((HEAP32[$flags2 >> 2] & 32768 | 0) == 0) {
         $ok = 0;
        }
       }
       do {
        if (($sylimit & 512 | 0) != 0) {
         if ((HEAP32[$4 + 12 >> 2] & 16 | 0) == 0) {
          break;
         }
         $ok = 0;
        }
       } while (0);
       if (($ok | 0) == 0) {
        _strcpy(33176, $ph_buf | 0) | 0;
       }
      }
      if (($ok | 0) != 0) {
       HEAP8[$p2] = 45;
       $344 = $4 | 0;
       HEAP32[$344 >> 2] = HEAP32[$344 >> 2] & -2;
       $flags = __Z13TranslateWordP10TranslatorPciP8WORD_TABS1_(HEAP32[9112] | 0, $3, $6, $4, 0) | 0;
       do {
        if (($sylimit | 0) > 0) {
         if ((__ZL14CountSyllablesPh($p) | 0) <= ($sylimit & 31 | 0)) {
          label = 79;
          break;
         }
         HEAP8[$p2] = 32;
         $flags = __Z13TranslateWordP10TranslatorPciP8WORD_TABS1_(HEAP32[9112] | 0, $3, $6, $4, 0) | 0;
        } else {
         label = 79;
        }
       } while (0);
       if ((label | 0) == 79) {
        if (($flags | 0) == 0) {
         $flags = HEAP32[$flags2 >> 2] | 0;
        }
        $flags = $flags | 128;
        HEAP32[22626] = 1;
       }
      }
     }
    } while (0);
    if ((HEAPU8[$p | 0] | 0) == 21) {
     _strcpy($old_dictionary_name | 0, 90512) | 0;
     $switch_attempt = 0;
     while (1) {
      if (($switch_attempt | 0) >= 2) {
       break;
      }
      _memcpy($3 | 0, $word_copy | 0, $word_copy_len) | 0;
      $new_language = $p + 1 | 0;
      if ((HEAP8[$new_language | 0] | 0) == 0) {
       $new_language = 10632;
      }
      $switch_phonemes = __Z14SetTranslator2PKc($new_language) | 0;
      if (($switch_phonemes | 0) >= 0) {
       $410 = $4 | 0;
       HEAP32[$410 >> 2] = HEAP32[$410 >> 2] | 4194304;
       if ((HEAP8[$word_replaced + 2 | 0] | 0) != 0) {
        HEAP8[$word_replaced | 0] = 0;
        HEAP8[$word_replaced + 1 | 0] = 32;
        $flags = __Z13TranslateWordP10TranslatorPciP8WORD_TABS1_(HEAP32[9110] | 0, $word_replaced + 1 | 0, $6, $4, 0) | 0;
       } else {
        $flags = __Z13TranslateWordP10TranslatorPciP8WORD_TABS1_(HEAP32[9110] | 0, $3, $6, $4, $word_replaced + 2 | 0) | 0;
       }
      }
      if ((HEAPU8[$p | 0] | 0) != 21) {
       label = 95;
       break;
      }
      $switch_attempt = $switch_attempt + 1 | 0;
     }
     if ((label | 0) == 95) {}
     if ((HEAPU8[$p | 0] | 0) == 21) {
      $1 = 4096;
      $1040 = $1;
      STACKTOP = sp;
      return $1040 | 0;
     }
     if (($switch_phonemes | 0) < 0) {
      HEAP8[$p | 0] = 13;
      HEAP8[$p + 1 | 0] = 13;
      HEAP8[$p + 2 | 0] = 0;
     }
     if ((__Z24ChangeEquivalentPhonemesP10TranslatoriPc($2, $switch_phonemes, $p) | 0) != 0) {
      $switch_phonemes = -1;
     }
     if (($switch_phonemes | 0) == -1) {
      _strcpy(90512, $old_dictionary_name | 0) | 0;
      __Z18SelectPhonemeTablei(HEAP32[(HEAP32[144] | 0) + 60 >> 2] | 0);
      $switch_phonemes = HEAP32[(HEAP32[144] | 0) + 60 >> 2] | 0;
     }
    }
    if (($word_flags & 128 | 0) == 0) {
     if (($flags & 268435456 | 0) != 0) {
      if (($5 | 0) < 1) {
       $5 = 1;
      }
     }
     do {
      if (($flags & 256 | 0) != 0) {
       if (($word_flags | 0) != 0) {
        break;
       }
       if ((HEAP32[$4 - 12 >> 2] & 512 | 0) != 0) {
        break;
       }
       if ((HEAP32[$2 + 8344 >> 2] | 0) != 0) {
        break;
       }
       if (($5 | 0) < 4) {
        $5 = 4;
       }
       HEAP32[$2 + 8344 >> 2] = 3;
      }
     } while (0);
    }
    do {
     if ((HEAP32[28444] | 0) >= 3) {
      if (($5 | 0) >= 1) {
       break;
      }
      $5 = 1;
     }
    } while (0);
   }
   $stress = 0;
   $next_stress = 1;
   $srcix = 0;
   $max_stress = -1;
   $found_dict_flag = 0;
   do {
    if (($flags & -2147483648 | 0) != 0) {
     if (($flags & 536870912 | 0) != 0) {
      break;
     }
     $found_dict_flag = 16;
    }
   } while (0);
   while (1) {
    if (($5 | 0) > 0) {
     $546 = (HEAP32[19564] | 0) < 996;
    } else {
     $546 = 0;
    }
    if (!$546) {
     break;
    }
    if (($5 | 0) > 1) {
     $551 = HEAP32[19564] | 0;
     HEAP32[19564] = $551 + 1;
     __ZL9SetPlist2P13PHONEME_LIST2h(68328 + ($551 << 3) | 0, 9);
     $5 = $5 - 2 | 0;
    } else {
     $557 = HEAP32[19564] | 0;
     HEAP32[19564] = $557 + 1;
     __ZL9SetPlist2P13PHONEME_LIST2h(68328 + ($557 << 3) | 0, 11);
     $5 = $5 - 1 | 0;
    }
    HEAP32[$2 + 8348 >> 2] = 0;
    HEAP32[$2 + 8352 >> 2] = 0;
    HEAP32[$2 + 8356 >> 2] = 0;
   }
   $plist2 = 68328 + (HEAP32[19564] << 3) | 0;
   do {
    if ((HEAP32[19546] | 0) == 1) {
     if (($word_flags & 2 | 0) == 0) {
      break;
     }
     $581 = HEAP32[19564] | 0;
     HEAP32[19564] = $581 + 1;
     __ZL9SetPlist2P13PHONEME_LIST2h(68328 + ($581 << 3) | 0, 10);
     $584 = HEAP32[19564] | 0;
     HEAP32[19564] = $584 + 1;
     __ZL9SetPlist2P13PHONEME_LIST2h(68328 + ($584 << 3) | 0, 18);
     do {
      if (($word_flags & 1 | 0) != 0) {
       if ((__Z7IsAlphaj(HEAP8[$3 + 1 | 0] | 0) | 0) == 0) {
        break;
       }
       $598 = HEAP32[19564] | 0;
       HEAP32[19564] = $598 + 1;
       __ZL9SetPlist2P13PHONEME_LIST2h(68328 + ($598 << 3) | 0, 10);
       $601 = HEAP32[19564] | 0;
       HEAP32[19564] = $601 + 1;
       __ZL9SetPlist2P13PHONEME_LIST2h(68328 + ($601 << 3) | 0, 18);
      }
     } while (0);
    }
   } while (0);
   if (($switch_phonemes | 0) >= 0) {
    do {
     if ((HEAPU8[$p | 0] | 0) == 9) {
      if ((HEAPU8[$p + 1 | 0] | 0) != 21) {
       label = 147;
       break;
      }
      if ((HEAPU8[68330 + ((HEAP32[19564] | 0) - 1 << 3) | 0] | 0) == 21) {
       HEAP32[19564] = (HEAP32[19564] | 0) - 1;
      }
     } else {
      label = 147;
     }
    } while (0);
    if ((label | 0) == 147) {
     if ((HEAPU8[68330 + ((HEAP32[19564] | 0) - 1 << 3) | 0] | 0) == 21) {
      HEAP32[19564] = (HEAP32[19564] | 0) - 1;
     } else {
      __ZL9SetPlist2P13PHONEME_LIST2h(68328 + (HEAP32[19564] << 3) | 0, 21);
     }
     $649 = HEAP32[19564] | 0;
     HEAP32[19564] = $649 + 1;
     HEAP8[68335 + ($649 << 3) | 0] = $switch_phonemes;
    }
   }
   do {
    if (($word_flags & 128 | 0) != 0) {
     if ((HEAPU8[(HEAP32[43256 + (HEAPU8[$p] << 2) >> 2] | 0) + 11 | 0] | 0) != 0) {
      break;
     }
     $p = $p + 1 | 0;
    }
   } while (0);
   do {
    if ((HEAPU8[$p | 0] | 0) == 0) {
     if ((HEAP32[28516] | 0) == 0) {
      break;
     }
     HEAP8[$p | 0] = 23;
     HEAP8[$p + 1 | 0] = 0;
    }
   } while (0);
   while (1) {
    $687 = $p;
    $p = $687 + 1 | 0;
    $689 = HEAP8[$687] | 0;
    $ph_code = $689;
    if (($689 & 255 | 0) != 0) {
     $696 = (HEAP32[19564] | 0) < 996;
    } else {
     $696 = 0;
    }
    if (!$696) {
     break;
    }
    if (($ph_code & 255 | 0) == 255) {
     continue;
    }
    $ph = HEAP32[43256 + (($ph_code & 255) << 2) >> 2] | 0;
    if (($ph_code & 255 | 0) == 21) {
     HEAP8[68330 + (HEAP32[19564] << 3) | 0] = $ph_code;
     HEAP16[68332 + (HEAP32[19564] << 3) >> 1] = 0;
     HEAP16[68328 + (HEAP32[19564] << 3) >> 1] = 0;
     $722 = HEAP8[$p] | 0;
     $723 = HEAP32[19564] | 0;
     HEAP32[19564] = $723 + 1;
     HEAP8[68335 + ($723 << 3) | 0] = $722;
     __Z18SelectPhonemeTablei(HEAPU8[$p] | 0);
     $p = $p + 1 | 0;
    } else {
     if ((HEAPU8[$ph + 11 | 0] | 0) == 1) {
      if ((HEAPU16[$ph + 8 >> 1] | 0) == 0) {
       $next_stress = HEAPU8[$ph + 14 | 0] | 0;
      } else {
       if (($prev_vowel | 0) >= 0) {
        HEAP8[68335 + ($prev_vowel << 3) | 0] = $ph_code;
       } else {
        $next_tone = $ph_code & 255;
       }
      }
     } else {
      if (($ph_code & 255 | 0) == 20) {
       $prev_vowel = (HEAP32[19564] | 0) - 1 | 0;
       $771 = 68328 + ($prev_vowel << 3) | 0;
       HEAP16[$771 >> 1] = HEAPU16[$771 >> 1] | 4;
       HEAP8[68331 + ($prev_vowel << 3) | 0] = $next_stress;
      } else {
       if (($ph_code & 255 | 0) == 12) {
        $789 = 68328 + ((HEAP32[19564] | 0) - 1 << 3) | 0;
        HEAP16[$789 >> 1] = HEAPU16[$789 >> 1] | 8;
       } else {
        if (($ph_code & 255 | 0) == 15) {
         $srcix = $source_ix + 1 | 0;
        } else {
         if (($ph_code & 255 | 0) == 22) {
          if ((HEAP32[$2 + 80 >> 2] | 0) != 0) {
           $flags = $flags | 16384;
          }
         } else {
          HEAP8[68330 + (HEAP32[19564] << 3) | 0] = $ph_code;
          HEAP8[68335 + (HEAP32[19564] << 3) | 0] = 0;
          HEAP16[68328 + (HEAP32[19564] << 3) >> 1] = HEAP32[28516] | $found_dict_flag;
          HEAP32[28516] = 0;
          HEAP16[68332 + (HEAP32[19564] << 3) >> 1] = $srcix;
          $srcix = 0;
          if ((HEAPU8[$ph + 11 | 0] | 0) == 2) {
           $stress = $next_stress;
           $next_stress = 1;
           if (($stress | 0) >= 4) {
            HEAP32[28402] = 1;
           }
           do {
            if (($prev_vowel | 0) >= 0) {
             if (((HEAP32[19564] | 0) - 1 | 0) == ($prev_vowel | 0)) {
              break;
             }
             HEAP8[68331 + ((HEAP32[19564] | 0) - 1 << 3) | 0] = $stress;
            }
           } while (0);
           $864 = 68328 + (HEAP32[19564] << 3) | 0;
           HEAP16[$864 >> 1] = HEAPU16[$864 >> 1] | 4;
           $prev_vowel = HEAP32[19564] | 0;
           if (($stress | 0) > ($max_stress | 0)) {
            $max_stress = $stress;
            $max_stress_ix = HEAP32[19564] | 0;
           }
           if (($next_tone | 0) != 0) {
            HEAP8[68335 + (HEAP32[19564] << 3) | 0] = $next_tone;
            $next_tone = 0;
           }
          } else {
           do {
            if (($first_phoneme | 0) != 0) {
             if ((HEAP32[$2 + 80 >> 2] | 0) == 0) {
              break;
             }
             if ((HEAP32[$2 + 8352 >> 2] & 16384 | 0) != 0) {
              if ((HEAP32[$2 + 80 >> 2] & 1 | 0) != 0) {
               label = 201;
              } else {
               label = 199;
              }
             } else {
              label = 199;
             }
             do {
              if ((label | 0) == 199) {
               label = 0;
               if ((HEAP32[$2 + 8348 >> 2] | 0) == 0) {
                break;
               }
               if ((HEAP32[$2 + 80 >> 2] & 2 | 0) != 0) {
                label = 201;
               }
              }
             } while (0);
             if ((label | 0) == 201) {
              label = 0;
              $927 = 68328 + (HEAP32[19564] << 3) | 0;
              HEAP16[$927 >> 1] = HEAPU16[$927 >> 1] | 8;
             }
            }
           } while (0);
          }
          HEAP8[68331 + (HEAP32[19564] << 3) | 0] = $stress;
          HEAP32[19564] = (HEAP32[19564] | 0) + 1;
          $first_phoneme = 0;
         }
        }
       }
      }
     }
    }
   }
   if (($word_flags & 131072 | 0) != 0) {
    $953 = HEAP32[19564] | 0;
    HEAP32[19564] = $953 + 1;
    __ZL9SetPlist2P13PHONEME_LIST2h(68328 + ($953 << 3) | 0, 27);
   }
   if (($word_flags & 128 | 0) == 0) {
    HEAP16[$plist2 + 4 >> 1] = $source_ix;
   }
   HEAP32[$2 + 8348 >> 2] = 0;
   do {
    if (($stress | 0) >= 4) {
     if ((HEAPU8[(HEAP32[43256 + (HEAPU8[68330 + ((HEAP32[19564] | 0) - 1 << 3) | 0] << 2) >> 2] | 0) + 11 | 0] | 0) != 2) {
      break;
     }
     HEAP32[$2 + 8348 >> 2] = 1;
    }
   } while (0);
   if (($switch_phonemes | 0) >= 0) {
    _strcpy(90512, $old_dictionary_name | 0) | 0;
    __Z18SelectPhonemeTablei(HEAP32[(HEAP32[144] | 0) + 60 >> 2] | 0);
    __ZL9SetPlist2P13PHONEME_LIST2h(68328 + (HEAP32[19564] << 3) | 0, 21);
    $1000 = HEAP32[(HEAP32[144] | 0) + 60 >> 2] & 255;
    $1001 = HEAP32[19564] | 0;
    HEAP32[19564] = $1001 + 1;
    HEAP8[68335 + ($1001 << 3) | 0] = $1000;
   }
   if (($pitch_raised | 0) > 0) {
    $1012 = HEAP32[30924] | 0;
    HEAP32[30924] = $1012 + 1;
    HEAP32[78480 + ($1012 << 2) >> 2] = ($pitch_raised << 8) + 225;
    __ZL9SetPlist2P13PHONEME_LIST2h(68328 + (HEAP32[19564] << 3) | 0, 10);
    $1017 = HEAP32[19564] | 0;
    HEAP32[19564] = $1017 + 1;
    HEAP16[68328 + ($1017 << 3) >> 1] = 2;
   }
   if (($flags & 1024 | 0) != 0) {
    $1028 = 68328 + ($max_stress_ix << 3) | 0;
    HEAP16[$1028 >> 1] = HEAPU16[$1028 >> 1] | 64;
   }
   HEAP32[$2 + 8352 >> 2] = $flags;
   $1 = $flags;
   $1040 = $1;
   STACKTOP = sp;
   return $1040 | 0;
  }
 } while (0);
 if ((HEAP32[28516] | 0) != 0) {
  HEAP8[68330 + (HEAP32[19564] << 3) | 0] = 15;
  HEAP8[68331 + (HEAP32[19564] << 3) | 0] = 0;
  HEAP8[68334 + (HEAP32[19564] << 3) | 0] = 0;
  HEAP8[68335 + (HEAP32[19564] << 3) | 0] = 0;
  HEAP16[68328 + (HEAP32[19564] << 3) >> 1] = HEAP32[28516];
  HEAP16[68332 + (HEAP32[19564] << 3) >> 1] = 0;
  HEAP32[19564] = (HEAP32[19564] | 0) + 1;
  HEAP32[28516] = 0;
 }
 HEAP8[33176] = 0;
 $1 = 0;
 $1040 = $1;
 STACKTOP = sp;
 return $1040 | 0;
}
function __Z15MakePhonemeListP10Translatorii($tr, $post_pause, $start_sentence) {
 $tr = $tr | 0;
 $post_pause = $post_pause | 0;
 $start_sentence = $start_sentence | 0;
 var $1 = 0, $2 = 0, $3 = 0, $ix = 0, $j = 0, $insert_ph = 0, $phlist = 0, $ph = 0, $next = 0, $unstress_count = 0, $word_stress = 0, $current_phoneme_tab = 0, $max_stress = 0, $voicing = 0, $regression = 0, $end_sourceix = 0, $alternative = 0, $delete_count = 0, $word_start = 0, $inserted = 0, $deleted = 0, $phdata = 0, $n_ph_list3 = 0, $plist3 = 0, $plist3_inserted = 0, $ph_list3 = 0, $plist2 = 0, $worddata = 0, $type = 0, $stop_propagation = 0, $k = 0, $nextw = 0, $k1 = 0, $ph2 = 0, $ph22 = 0, $p = 0, $x = 0, $54 = 0, $99 = 0, $113 = 0, $117 = 0, $194 = 0, $381 = 0, $455 = 0, $457 = 0, $473 = 0, $493 = 0, $496 = 0, $565 = 0, $596 = 0, $624 = 0, $640 = 0, $651 = 0, $676 = 0, $692 = 0, $829 = 0, $879 = 0, $898 = 0, $935 = 0, $1213 = 0, $1239 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 24176 | 0;
 $phdata = sp | 0;
 $ph_list3 = sp + 152 | 0;
 $worddata = sp + 24152 | 0;
 $1 = $tr;
 $2 = $post_pause;
 $3 = $start_sentence;
 $ix = 0;
 $insert_ph = 0;
 $unstress_count = 0;
 $word_stress = 0;
 $plist3_inserted = 0;
 _memset($worddata | 0, 0, 24) | 0;
 $plist2 = 68328;
 $phlist = 44280;
 $end_sourceix = HEAPU16[$plist2 + ((HEAP32[19564] | 0) - 1 << 3) + 4 >> 1] | 0;
 $max_stress = 0;
 $j = (HEAP32[19564] | 0) - 3 | 0;
 while (1) {
  if (($j | 0) < 0) {
   break;
  }
  if ((HEAP8[$plist2 + ($j << 3) + 3 | 0] & 127 | 0) > ($max_stress | 0)) {
   $max_stress = HEAP8[$plist2 + ($j << 3) + 3 | 0] & 127;
  }
  if ((HEAPU16[$plist2 + ($j << 3) + 4 >> 1] | 0) != 0) {
   label = 6;
   break;
  }
  $j = $j - 1 | 0;
 }
 if ((label | 0) == 6) {}
 if (($max_stress | 0) < 4) {
  while (1) {
   $54 = $j - 1 | 0;
   $j = $54;
   if (($54 | 0) < 0) {
    break;
   }
   if ((HEAP16[$plist2 + ($j << 3) >> 1] & 64 | 0) != 0) {
    label = 13;
    break;
   }
   if ((HEAPU8[$plist2 + ($j << 3) + 3 | 0] | 0) >= 4) {
    label = 15;
    break;
   }
  }
  if ((label | 0) == 15) {} else if ((label | 0) == 13) {
   HEAP8[$plist2 + ($j << 3) + 3 | 0] = 4;
  }
 }
 $delete_count = 0;
 $current_phoneme_tab = HEAP32[$1 + 404 >> 2] | 0;
 $j = 0;
 while (1) {
  if (($j | 0) >= (HEAP32[19564] | 0)) {
   break;
  }
  if (($current_phoneme_tab | 0) != (HEAP32[$1 + 404 >> 2] | 0)) {
   $99 = $plist2 + ($j << 3) | 0;
   HEAP16[$99 >> 1] = HEAPU16[$99 >> 1] | 32;
  }
  if (($delete_count | 0) > 0) {
   $113 = $plist2 + ($j - $delete_count << 3) | 0;
   $117 = $plist2 + ($j << 3) | 0;
   HEAP16[$113 >> 1] = HEAP16[$117 >> 1] | 0;
   HEAP16[$113 + 2 >> 1] = HEAP16[$117 + 2 >> 1] | 0;
   HEAP16[$113 + 4 >> 1] = HEAP16[$117 + 4 >> 1] | 0;
   HEAP16[$113 + 6 >> 1] = HEAP16[$117 + 6 >> 1] | 0;
  }
  if ((HEAPU8[$plist2 + ($j << 3) + 2 | 0] | 0) == 21) {
   L35 : do {
    if ((HEAP16[$plist2 + ($j << 3) >> 1] & 2 | 0) != 0) {
     label = 31;
    } else {
     do {
      if ((HEAPU8[$plist2 + ($j << 3) + 7 | 0] | 0) != ($current_phoneme_tab | 0)) {
       if ((HEAPU8[$plist2 + ($j + 1 << 3) + 2 | 0] | 0) == 21) {
        break;
       }
       if ((HEAPU8[$plist2 + ($j + 1 << 3) + 2 | 0] | 0) != 9) {
        label = 31;
        break L35;
       }
       if ((HEAPU8[$plist2 + ($j + 2 << 3) + 2 | 0] | 0) != 21) {
        label = 31;
        break L35;
       }
      }
     } while (0);
     $delete_count = $delete_count + 1 | 0;
    }
   } while (0);
   if ((label | 0) == 31) {
    label = 0;
    $current_phoneme_tab = HEAPU8[$plist2 + ($j << 3) + 7 | 0] | 0;
   }
  }
  $j = $j + 1 | 0;
 }
 HEAP32[19564] = (HEAP32[19564] | 0) - $delete_count;
 $194 = HEAP32[$1 + 40 >> 2] | 0;
 $regression = $194;
 if (($194 | 0) != 0) {
  $stop_propagation = 0;
  $voicing = 0;
  $j = (HEAP32[19564] | 0) - 1 | 0;
  while (1) {
   if (($j | 0) < 0) {
    break;
   }
   $ph = HEAP32[43256 + (HEAPU8[$plist2 + ($j << 3) + 2 | 0] << 2) >> 2] | 0;
   do {
    if (($ph | 0) == 0) {} else {
     if ((HEAP16[$plist2 + ($j << 3) >> 1] & 32 | 0) != 0) {
      $stop_propagation = 0;
      $voicing = 0;
      if (($regression & 256 | 0) != 0) {
       $voicing = 1;
      }
      break;
     }
     $type = HEAPU8[$ph + 11 | 0] | 0;
     if (($regression & 2 | 0) != 0) {
      if ((HEAP32[$ph >> 2] & 255 | 0) == 118) {
       label = 47;
      } else {
       if ((HEAP32[$ph >> 2] & 255 | 0) == 82) {
        label = 47;
       }
      }
      if ((label | 0) == 47) {
       label = 0;
       $stop_propagation = 1;
       if (($regression & 16 | 0) != 0) {
        $voicing = 0;
       }
      }
     }
     do {
      if (($type | 0) == 4) {
       label = 53;
      } else {
       if (($type | 0) == 6) {
        label = 53;
        break;
       }
       do {
        if (($type | 0) == 5) {
         label = 63;
        } else {
         if (($type | 0) == 7) {
          label = 63;
          break;
         }
         if (($regression & 8 | 0) != 0) {
          if (($type | 0) == 0) {
           label = 74;
          } else {
           if (($type | 0) == 2) {
            label = 74;
           }
          }
          if ((label | 0) == 74) {
           label = 0;
           $voicing = 0;
          }
         } else {
          $voicing = 0;
         }
        }
       } while (0);
       if ((label | 0) == 63) {
        label = 0;
        do {
         if (($voicing | 0) == 0) {
          if (($regression & 15 | 0) == 0) {
           label = 66;
           break;
          }
          $voicing = 2;
         } else {
          label = 66;
         }
        } while (0);
        if ((label | 0) == 66) {
         label = 0;
         do {
          if (($voicing | 0) == 1) {
           if ((HEAPU8[$ph + 13 | 0] | 0) == 0) {
            break;
           }
           HEAP8[$plist2 + ($j << 3) + 2 | 0] = HEAP8[$ph + 13 | 0] | 0;
          }
         } while (0);
        }
       }
      }
     } while (0);
     if ((label | 0) == 53) {
      label = 0;
      do {
       if (($voicing | 0) == 0) {
        if (($regression & 15 | 0) == 0) {
         label = 56;
         break;
        }
        $voicing = 1;
       } else {
        label = 56;
       }
      } while (0);
      if ((label | 0) == 56) {
       label = 0;
       do {
        if (($voicing | 0) == 2) {
         if ((HEAPU8[$ph + 13 | 0] | 0) == 0) {
          break;
         }
         HEAP8[$plist2 + ($j << 3) + 2 | 0] = HEAP8[$ph + 13 | 0] | 0;
        }
       } while (0);
      }
     }
     if (($stop_propagation | 0) != 0) {
      $voicing = 0;
      $stop_propagation = 0;
     }
     if ((HEAP16[$plist2 + ($j << 3) + 4 >> 1] | 0) != 0) {
      if (($regression & 4 | 0) != 0) {
       $voicing = 0;
      }
      if (($regression & 256 | 0) != 0) {
       if (($voicing | 0) == 0) {
        $voicing = 1;
       }
      }
     }
    }
   } while (0);
   $j = $j - 1 | 0;
  }
 }
 $n_ph_list3 = (__ZL18SubstitutePhonemesP10TranslatorP12PHONEME_LIST($1, $ph_list3 | 0) | 0) - 2 | 0;
 $j = 0;
 while (1) {
  if (($j | 0) < ($n_ph_list3 | 0)) {
   $381 = ($ix | 0) < 997;
  } else {
   $381 = 0;
  }
  if (!$381) {
   break;
  }
  if ((HEAP16[$ph_list3 + ($j * 24 | 0) + 4 >> 1] | 0) != 0) {
   $word_stress = 0;
   $nextw = $j;
   while (1) {
    if (($nextw | 0) >= ($n_ph_list3 | 0)) {
     break;
    }
    if ((HEAPU8[$ph_list3 + ($nextw * 24 | 0) + 3 | 0] | 0) > ($word_stress | 0)) {
     $word_stress = HEAPU8[$ph_list3 + ($nextw * 24 | 0) + 3 | 0] | 0;
    }
    $nextw = $nextw + 1 | 0;
    if ((HEAP16[$ph_list3 + ($nextw * 24 | 0) + 4 >> 1] | 0) != 0) {
     label = 102;
     break;
    }
   }
   if ((label | 0) == 102) {
    label = 0;
   }
   $k = $j;
   while (1) {
    if (($k | 0) >= ($nextw | 0)) {
     break;
    }
    HEAP8[$ph_list3 + ($k * 24 | 0) + 6 | 0] = $word_stress;
    $k = $k + 1 | 0;
   }
   $j = $nextw;
  } else {
   $j = $j + 1 | 0;
  }
 }
 $ph = HEAP32[10823] | 0;
 HEAP32[$ph_list3 + 8 >> 2] = $ph;
 $word_start = 1;
 $j = 0;
 while (1) {
  if (($insert_ph | 0) != 0) {
   $457 = 1;
  } else {
   if (($j | 0) < ($n_ph_list3 | 0)) {
    $455 = ($ix | 0) < 997;
   } else {
    $455 = 0;
   }
   $457 = $455;
  }
  if (!$457) {
   break;
  }
  $plist3 = $ph_list3 + ($j * 24 | 0) | 0;
  $inserted = 0;
  $deleted = 0;
  if (($insert_ph | 0) != 0) {
   $next = HEAP32[43256 + (HEAPU8[$plist3 + 2 | 0] << 2) >> 2] | 0;
   $j = $j - 1 | 0;
   $473 = $ph_list3 + ($j * 24 | 0) | 0;
   $plist3_inserted = $473;
   $plist3 = $473;
   if (($j | 0) > 0) {
    if (($word_start | 0) > 0) {
     $k1 = $word_start;
     $word_start = $word_start - 1 | 0;
    } else {
     $k1 = 2;
    }
    while (1) {
     if (($k1 | 0) > ($j | 0)) {
      break;
     }
     $493 = $ph_list3 + (($k1 - 1 | 0) * 24 | 0) | 0;
     $496 = $ph_list3 + ($k1 * 24 | 0) | 0;
     HEAP32[$493 >> 2] = HEAP32[$496 >> 2];
     HEAP32[$493 + 4 >> 2] = HEAP32[$496 + 4 >> 2];
     HEAP32[$493 + 8 >> 2] = HEAP32[$496 + 8 >> 2];
     HEAP32[$493 + 12 >> 2] = HEAP32[$496 + 12 >> 2];
     HEAP32[$493 + 16 >> 2] = HEAP32[$496 + 16 >> 2];
     HEAP32[$493 + 20 >> 2] = HEAP32[$496 + 20 >> 2];
     $k1 = $k1 + 1 | 0;
    }
   }
   _memset($plist3 | 0, 0, 24) | 0;
   HEAP8[$plist3 + 2 | 0] = $insert_ph;
   $ph = HEAP32[43256 + ($insert_ph << 2) >> 2] | 0;
   HEAP32[$plist3 + 8 >> 2] = $ph;
   $insert_ph = 0;
   $inserted = 1;
  } else {
   if ((HEAPU16[$plist3 + 4 >> 1] | 0) != 0) {
    $word_start = $j;
   }
   $ph = HEAP32[43256 + (HEAPU8[$plist3 + 2 | 0] << 2) >> 2] | 0;
   HEAP32[$plist3 + 8 >> 2] = $ph;
   if ((HEAPU8[$plist3 + 2 | 0] | 0) == 21) {
    __Z18SelectPhonemeTablei(HEAPU8[$plist3 + 7 | 0] | 0);
   }
   $next = HEAP32[43256 + (HEAPU8[$plist3 + 26 | 0] << 2) >> 2] | 0;
   HEAP32[$plist3 + 32 >> 2] = $next;
  }
  if (($ph | 0) == 0) {} else {
   __Z16InterpretPhonemeP10TranslatoriP12PHONEME_LISTP12PHONEME_DATAP12WORD_PH_DATA($1, 256, $plist3, $phdata, $worddata);
   $565 = HEAP32[$phdata + 12 >> 2] | 0;
   $alternative = $565;
   if (($565 | 0) > 0) {
    HEAP32[$ph_list3 + (($j + 1 | 0) * 24 | 0) + 8 >> 2] = HEAP32[43256 + ($alternative << 2) >> 2];
    HEAP8[$ph_list3 + (($j + 1 | 0) * 24 | 0) + 2 | 0] = $alternative;
    HEAP8[$ph_list3 + (($j + 1 | 0) * 24 | 0) + 17 | 0] = HEAP8[(HEAP32[43256 + ($alternative << 2) >> 2] | 0) + 11 | 0] | 0;
    $next = HEAP32[43256 + ($alternative << 2) >> 2] | 0;
   }
   $596 = HEAP32[$phdata + 16 >> 2] | 0;
   $alternative = $596;
   do {
    if (($596 | 0) > 0) {
     if (($inserted | 0) != 0) {
      break;
     }
     $ph2 = $ph;
     $insert_ph = HEAPU8[$plist3 + 2 | 0] | 0;
     $ph = HEAP32[43256 + ($alternative << 2) >> 2] | 0;
     HEAP32[$plist3 + 8 >> 2] = $ph;
     HEAP8[$plist3 + 2 | 0] = $alternative;
     if ((HEAPU8[$ph + 11 | 0] | 0) == 2) {
      $624 = $plist3 | 0;
      HEAP16[$624 >> 1] = HEAPU16[$624 >> 1] | 4;
      if ((HEAPU8[$ph2 + 11 | 0] | 0) != 2) {
       HEAP8[$plist3 + 3 | 0] = 0;
      }
     } else {
      $640 = $plist3 | 0;
      HEAP16[$640 >> 1] = HEAPU16[$640 >> 1] & -5;
     }
     __Z16InterpretPhonemeP10TranslatoriP12PHONEME_LISTP12PHONEME_DATAP12WORD_PH_DATA($1, 256, $plist3, $phdata, $worddata);
    }
   } while (0);
   $651 = HEAP32[$phdata + 8 >> 2] | 0;
   $alternative = $651;
   if (($651 | 0) > 0) {
    $ph22 = $ph;
    $ph = HEAP32[43256 + ($alternative << 2) >> 2] | 0;
    HEAP32[$plist3 + 8 >> 2] = $ph;
    HEAP8[$plist3 + 2 | 0] = $alternative;
    if (($alternative | 0) == 1) {
     $deleted = 1;
    } else {
     if ((HEAPU8[$ph + 11 | 0] | 0) == 2) {
      $676 = $plist3 | 0;
      HEAP16[$676 >> 1] = HEAPU16[$676 >> 1] | 4;
      if ((HEAPU8[$ph22 + 11 | 0] | 0) != 2) {
       HEAP8[$plist3 + 3 | 0] = 0;
      }
     } else {
      $692 = $plist3 | 0;
      HEAP16[$692 >> 1] = HEAPU16[$692 >> 1] & -5;
     }
     __Z16InterpretPhonemeP10TranslatoriP12PHONEME_LISTP12PHONEME_DATAP12WORD_PH_DATA($1, 256, $plist3, $phdata, $worddata);
    }
   }
   do {
    if ((HEAPU8[$ph + 11 | 0] | 0) == 2) {
     if (($deleted | 0) != 0) {
      break;
     }
     if ((HEAPU8[$plist3 + 3 | 0] | 0) <= 1) {
      $unstress_count = $unstress_count + 1 | 0;
      if ((HEAP32[$1 + 12 >> 2] & 8 | 0) != 0) {
       $p = $plist3 + 24 | 0;
       while (1) {
        if ((HEAPU8[$p + 17 | 0] | 0) == 0) {
         break;
        }
        if ((HEAPU8[$p + 17 | 0] | 0) == 2) {
         label = 162;
         break;
        }
        $p = $p + 24 | 0;
       }
       if ((label | 0) == 162) {
        label = 0;
        if ((HEAPU8[$p + 3 | 0] | 0) <= 1) {
         if ((HEAPU8[$plist3 + 6 | 0] | 0) < 4) {
          HEAP8[$plist3 + 3 | 0] = 0;
         }
         if ((HEAPU8[$p + 6 | 0] | 0) < 4) {
          HEAP8[$p + 3 | 0] = 0;
         }
        }
       }
      } else {
       do {
        if (($unstress_count | 0) > 1) {
         if (($unstress_count & 1 | 0) != 0) {
          break;
         }
         do {
          if ((HEAP32[$1 + 12 >> 2] & 2 | 0) != 0) {
           label = 177;
          } else {
           if (($word_stress | 0) > 3) {
            if ((HEAPU16[$plist3 + 28 >> 1] | 0) != 0) {
             label = 177;
             break;
            }
           }
           HEAP8[$plist3 + 3 | 0] = 0;
          }
         } while (0);
         if ((label | 0) == 177) {
          label = 0;
          $unstress_count = 1;
         }
        }
       } while (0);
      }
     } else {
      $unstress_count = 0;
     }
    }
   } while (0);
   if ((HEAP16[$plist3 + 24 >> 1] & 8 | 0) != 0) {
    do {
     if (($j | 0) > 0) {
      if ((_strchr(23416, HEAPU8[$next + 11 | 0] | 0) | 0) == 0) {
       break;
      }
      $insert_ph = HEAPU8[$next + 10 | 0] | 0;
      $829 = $plist3 + 24 | 0;
      HEAP16[$829 >> 1] = HEAPU16[$829 >> 1] ^ 8;
     }
    } while (0);
   }
   if ((HEAPU16[$plist3 + 28 >> 1] | 0) != 0) {
    do {
     if ((HEAP32[$1 + 4 >> 2] | 0) != 0) {
      if ((HEAPU8[$ph + 11 | 0] | 0) == 0) {
       break;
      }
      do {
       if ((HEAPU8[$ph + 11 | 0] | 0) != 2) {
        if ((HEAP32[$1 + 4 >> 2] & 512 | 0) == 0) {
         break;
        }
        $insert_ph = 11;
       }
      } while (0);
      if ((HEAPU8[$next + 11 | 0] | 0) == 2) {
       $879 = HEAP32[$1 + 4 >> 2] & 12;
       $x = $879;
       if (($879 | 0) != 0) {
        if (($x | 0) == 12) {
         $insert_ph = 11;
        } else {
         $insert_ph = 23;
        }
       }
       do {
        if ((HEAPU8[$ph + 11 | 0] | 0) == 2) {
         $898 = HEAP32[$1 + 4 >> 2] & 3;
         $x = $898;
         if (($898 | 0) == 0) {
          break;
         }
         if (($x | 0) == 2) {
          $insert_ph = 10;
         } else {
          $insert_ph = 23;
         }
        }
       } while (0);
       do {
        if ((HEAPU8[$plist3 + 27 | 0] | 0) >= 4) {
         if ((HEAP32[$1 + 4 >> 2] & 256 | 0) == 0) {
          break;
         }
         $insert_ph = 10;
        }
       } while (0);
      }
     }
    } while (0);
    do {
     if (($plist3 | 0) != ($plist3_inserted | 0)) {
      if (($ix | 0) <= 0) {
       break;
      }
      $935 = HEAP32[$1 >> 2] & 7;
      $x = $935;
      if (($935 | 0) != 0) {
       do {
        if (($x | 0) > 1) {
         label = 218;
        } else {
         if (($insert_ph | 0) == 10) {
          break;
         }
         if (($insert_ph | 0) != 11) {
          label = 218;
         }
        }
       } while (0);
       if ((label | 0) == 218) {
        label = 0;
        $insert_ph = HEAPU8[5272 + $x | 0] | 0;
       }
      }
      if ((HEAP32[19454] | 0) > 0) {
       $insert_ph = 24;
      }
     }
    } while (0);
   }
   HEAP32[$plist3 + 56 >> 2] = HEAP32[43256 + (HEAPU8[$plist3 + 50 | 0] << 2) >> 2];
   do {
    if (($insert_ph | 0) == 0) {
     if ((HEAP32[$phdata + 20 >> 2] | 0) == 0) {
      break;
     }
     $insert_ph = HEAP32[$phdata + 20 >> 2] | 0;
    }
   } while (0);
   if ((HEAP32[$ph + 4 >> 2] & 16 | 0) != 0) {}
   if (($deleted | 0) == 0) {
    HEAP32[$phlist + ($ix * 24 | 0) + 8 >> 2] = $ph;
    HEAP8[$phlist + ($ix * 24 | 0) + 17 | 0] = HEAP8[$ph + 11 | 0] | 0;
    HEAP8[$phlist + ($ix * 24 | 0) + 16 | 0] = 0;
    HEAP16[$phlist + ($ix * 24 | 0) >> 1] = HEAP16[$plist3 >> 1] | 0;
    HEAP8[$phlist + ($ix * 24 | 0) + 3 | 0] = HEAP8[$plist3 + 3 | 0] & 15;
    HEAP8[$phlist + ($ix * 24 | 0) + 6 | 0] = HEAP8[$plist3 + 6 | 0] | 0;
    HEAP8[$phlist + ($ix * 24 | 0) + 7 | 0] = HEAP8[$plist3 + 7 | 0] | 0;
    HEAP16[$phlist + ($ix * 24 | 0) + 4 >> 1] = 0;
    HEAP8[$phlist + ($ix * 24 | 0) + 2 | 0] = HEAP8[$ph + 10 | 0] | 0;
    if ((HEAPU16[$plist3 + 4 >> 1] | 0) != 0) {
     HEAP16[$phlist + ($ix * 24 | 0) + 4 >> 1] = HEAP16[$plist3 + 4 >> 1] | 0;
     HEAP8[$phlist + ($ix * 24 | 0) + 21 | 0] = 1;
     if (($3 | 0) != 0) {
      HEAP8[$phlist + ($ix * 24 | 0) + 21 | 0] = 5;
      $3 = 0;
     }
    } else {
     HEAP8[$phlist + ($ix * 24 | 0) + 21 | 0] = 0;
    }
    HEAP32[$phlist + ($ix * 24 | 0) + 12 >> 2] = HEAP32[$phdata + 44 >> 2] << 1;
    do {
     if ((HEAPU8[$ph + 10 | 0] | 0) == 24) {
      if ((HEAP32[19454] | 0) <= 0) {
       break;
      }
      if ((HEAPU16[$plist3 + 28 >> 1] | 0) == 0) {
       break;
      }
      HEAP32[$phlist + ($ix * 24 | 0) + 8 >> 2] = HEAP32[10824];
      HEAP32[$phlist + ($ix * 24 | 0) + 12 >> 2] = (HEAP32[19454] | 0) * 14 | 0;
     }
    } while (0);
    do {
     if ((HEAPU8[$ph + 11 | 0] | 0) == 2) {
      label = 245;
     } else {
      if ((HEAPU8[$ph + 11 | 0] | 0) == 3) {
       label = 245;
       break;
      }
      if ((HEAPU8[$ph + 11 | 0] | 0) == 8) {
       label = 245;
       break;
      }
      if ((HEAPU8[$ph + 11 | 0] | 0) == 5) {
       label = 245;
       break;
      }
      if ((HEAPU8[$ph + 11 | 0] | 0) == 7) {
       label = 245;
       break;
      }
      if ((HEAP32[$ph + 4 >> 2] & 33554432 | 0) != 0) {
       label = 245;
      }
     }
    } while (0);
    if ((label | 0) == 245) {
     label = 0;
     HEAP32[$phlist + ($ix * 24 | 0) + 12 >> 2] = 128;
     HEAP8[$phlist + ($ix * 24 | 0) + 16 | 0] = 0;
    }
    HEAP8[$phlist + ($ix * 24 | 0) + 18 | 0] = 0;
    HEAP8[$phlist + ($ix * 24 | 0) + 20 | 0] = 20;
    HEAP8[$phlist + ($ix * 24 | 0) + 22 | 0] = -1;
    HEAP8[$phlist + ($ix * 24 | 0) + 23 | 0] = -1;
    $ix = $ix + 1 | 0;
   }
  }
  $j = $j + 1 | 0;
 }
 HEAP8[$phlist + ($ix * 24 | 0) + 21 | 0] = 2;
 HEAP8[$phlist + ($ix * 24 | 0) + 2 | 0] = 9;
 HEAP8[$phlist + ($ix * 24 | 0) + 17 | 0] = 0;
 HEAP32[$phlist + ($ix * 24 | 0) + 12 >> 2] = $2;
 HEAP16[$phlist + ($ix * 24 | 0) + 4 >> 1] = $end_sourceix;
 HEAP16[$phlist + ($ix * 24 | 0) >> 1] = 0;
 $1213 = $ix;
 $ix = $1213 + 1 | 0;
 HEAP32[$phlist + ($1213 * 24 | 0) + 8 >> 2] = HEAP32[10823];
 HEAP8[$phlist + ($ix * 24 | 0) + 2 | 0] = 9;
 HEAP8[$phlist + ($ix * 24 | 0) + 17 | 0] = 0;
 HEAP32[$phlist + ($ix * 24 | 0) + 12 >> 2] = 0;
 HEAP16[$phlist + ($ix * 24 | 0) + 4 >> 1] = 0;
 HEAP16[$phlist + ($ix * 24 | 0) >> 1] = 0;
 $1239 = $ix;
 $ix = $1239 + 1 | 0;
 HEAP32[$phlist + ($1239 * 24 | 0) + 8 >> 2] = HEAP32[10824];
 HEAP32[19562] = $ix;
 STACKTOP = sp;
 return;
}
function __Z8GenerateP12PHONEME_LISTPii($phoneme_list, $n_ph, $resume) {
 $phoneme_list = $phoneme_list | 0;
 $n_ph = $n_ph | 0;
 $resume = $resume | 0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $prev = 0, $next = 0, $next2 = 0, $p = 0, $released = 0, $stress = 0, $modulation = 0, $pre_voiced = 0, $free_min = 0, $pitch_env = 0, $amp_env = 0, $ph = 0, $use_ipa = 0, $done_phoneme_marker = 0, $phoneme_name = 0, $phdata = 0, $phdata_prev = 0, $phdata_next = 0, $phdata_tone = 0, $fmtp = 0, $38 = 0, $141 = 0, $146 = 0, $147 = 0, $148 = 0, $250 = 0, $299 = 0, $464 = 0, $612 = 0, $843 = 0, $866 = 0, $1055 = 0, $1083 = 0, $1111 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 672 | 0;
 $phoneme_name = sp | 0;
 $phdata = sp + 16 | 0;
 $phdata_prev = sp + 168 | 0;
 $phdata_next = sp + 320 | 0;
 $phdata_tone = sp + 472 | 0;
 $fmtp = sp + 624 | 0;
 $2 = $phoneme_list;
 $3 = $n_ph;
 $4 = $resume;
 $pitch_env = 0;
 $use_ipa = 0;
 if ((HEAP32[19466] | 0) != 0) {
  $1 = 0;
  $1111 = $1;
  STACKTOP = sp;
  return $1111 | 0;
 }
 if ((HEAP32[19536] & 2 | 0) != 0) {
  $use_ipa = 1;
 }
 if ((HEAP8[78288] | 0) != 0) {
  $1 = __Z14MbrolaGenerateP12PHONEME_LISTPii($2, $3, $4) | 0;
  $1111 = $1;
  STACKTOP = sp;
  return $1111 | 0;
 }
 if (($4 | 0) == 0) {
  HEAP32[25648] = 1;
  HEAP32[25650] = 0;
  HEAP32[25652] = 0;
  HEAP32[28530] = 0;
  HEAP32[32080] = 0;
  HEAP32[31356] = 0;
  HEAP32[31354] = -1;
  HEAP32[28454] = HEAP32[8360];
  HEAP32[28526] = HEAP32[8360];
  HEAP32[28442] = -1;
  HEAP32[28466] = -1;
  _memset(36408, 0, 16) | 0;
  _memset(102560, 0, 24) | 0;
  __ZL7DoPauseii(0, 0);
 }
 while (1) {
  if ((HEAP32[25648] | 0) < (HEAP32[$3 >> 2] | 0)) {
   $38 = (HEAP32[25648] | 0) < 998;
  } else {
   $38 = 0;
  }
  if (!$38) {
   break;
  }
  $p = $2 + ((HEAP32[25648] | 0) * 24 | 0) | 0;
  if ((HEAPU8[$p + 17 | 0] | 0) == 0) {
   $free_min = 10;
  } else {
   if ((HEAPU8[$p + 17 | 0] | 0) != 2) {
    $free_min = 15;
   } else {
    $free_min = 25;
   }
  }
  if ((__Z9WcmdqFreev() | 0) <= ($free_min | 0)) {
   label = 20;
   break;
  }
  $prev = $2 + (((HEAP32[25648] | 0) - 1 | 0) * 24 | 0) | 0;
  $next = $2 + (((HEAP32[25648] | 0) + 1 | 0) * 24 | 0) | 0;
  $next2 = $2 + (((HEAP32[25648] | 0) + 2 | 0) * 24 | 0) | 0;
  if ((HEAP16[$p >> 1] & 2 | 0) != 0) {
   __Z10DoEmbeddedPii(102600, HEAPU16[$p + 4 >> 1] | 0);
  }
  if ((HEAP8[$p + 21 | 0] | 0) != 0) {
   if ((HEAPU8[$p + 17 | 0] | 0) == 2) {
    if ((HEAP32[(HEAP32[9112] | 0) + 56 >> 2] & 1 | 0) != 0) {
     label = 27;
    } else {
     label = 26;
    }
   } else {
    label = 26;
   }
   do {
    if ((label | 0) == 26) {
     label = 0;
     if ((HEAP32[(HEAP32[$p + 8 >> 2] | 0) + 4 >> 2] & 16777216 | 0) != 0) {
      label = 27;
      break;
     }
     HEAP32[31356] = 0;
    }
   } while (0);
   if ((label | 0) == 27) {
    label = 0;
   }
   HEAP32[25646] = (HEAP16[$p + 4 >> 1] & 2047) + (HEAP32[22658] | 0);
   if ((HEAP8[$p + 21 | 0] & 4 | 0) != 0) {
    __Z8DoMarkeriiii(2, HEAP32[25646] | 0, 0, HEAP32[22652] | 0);
   }
   if ((HEAP8[$p + 21 | 0] & 1 | 0) != 0) {
    $141 = HEAP32[25646] | 0;
    $146 = HEAPU16[$p + 4 >> 1] >> 11;
    $147 = HEAP32[22656] | 0;
    $148 = HEAP32[25652] | 0;
    HEAP32[25652] = $148 + 1;
    __Z8DoMarkeriiii(1, $141, $146, $147 + $148 | 0);
   }
  }
  __ZL12EndAmplitudev();
  do {
   if ((HEAPU8[$p + 18 | 0] | 0) > 0) {
    if ((HEAP32[(HEAP32[$p + 8 >> 2] | 0) + 4 >> 2] & 33554432 | 0) != 0) {
     break;
    }
    __ZL7DoPauseii(HEAPU8[$p + 18 | 0] | 0, 1);
   }
  } while (0);
  $done_phoneme_marker = 0;
  do {
   if ((HEAP32[19536] | 0) != 0) {
    if ((HEAPU8[(HEAP32[$p + 8 >> 2] | 0) + 10 | 0] | 0) == 15) {
     break;
    }
    do {
     if ((HEAPU8[$p + 17 | 0] | 0) == 2) {
      if ((HEAPU8[$prev + 17 | 0] | 0) != 3) {
       if ((HEAPU8[$prev + 17 | 0] | 0) != 8) {
        label = 43;
        break;
       }
      }
     } else {
      label = 43;
     }
    } while (0);
    if ((label | 0) == 43) {
     label = 0;
     __Z15WritePhMnemonicPcP11PHONEME_TABP12PHONEME_LISTiPi($phoneme_name | 0, HEAP32[$p + 8 >> 2] | 0, $p, $use_ipa, 0) | 0;
     __Z15DoPhonemeMarkeriiiPc(7, HEAP32[25646] | 0, 0, $phoneme_name | 0);
     $done_phoneme_marker = 1;
    }
   }
  } while (0);
  switch (HEAPU8[$p + 17 | 0] | 0) {
  case 3:
   {
    _memset($fmtp | 0, 0, 48) | 0;
    $modulation = 0;
    if ((HEAP32[(HEAP32[$p + 8 >> 2] | 0) + 4 >> 2] & 128 | 0) != 0) {
     $modulation = 5;
    }
    if ((HEAP16[$p >> 1] & 1 | 0) == 0) {
     __ZL11DoAmplitudeiPh(HEAPU8[$p + 20 | 0] | 0, 0);
     __ZL7DoPitchPhii(HEAP32[6312 + (HEAPU8[$p + 16 | 0] << 2) >> 2] | 0, HEAPU8[$p + 22 | 0] | 0, HEAPU8[$p + 23 | 0] | 0);
    }
    if ((HEAPU8[$prev + 17 | 0] | 0) == 8) {
     HEAP32[31356] = 0;
    }
    if ((HEAPU8[$next + 17 | 0] | 0) == 2) {
     __ZL13StartSyllablev();
    }
    __Z16InterpretPhonemeP10TranslatoriP12PHONEME_LISTP12PHONEME_DATAP12WORD_PH_DATA(0, 0, $p, $phdata, 102560);
    HEAP32[$fmtp + 44 >> 2] = HEAP32[$phdata + 44 >> 2] << 1;
    HEAP32[$fmtp + 8 >> 2] = HEAP32[$phdata + 68 >> 2];
    HEAP32[$fmtp + 16 >> 2] = HEAP32[$phdata + 88 >> 2];
    HEAP32[$fmtp + 28 >> 2] = HEAP32[$phdata + 84 >> 2];
    HEAP32[$fmtp + 32 >> 2] = HEAP32[$phdata + 104 >> 2];
    __Z8DoSpect2P11PHONEME_TABiP10FMT_PARAMSP12PHONEME_LISTi(HEAP32[$p + 8 >> 2] | 0, 0, $fmtp, $p, $modulation) | 0;
    break;
   }
  case 7:
   {
    if ((HEAPU8[$next + 17 | 0] | 0) == 2) {
     __ZL11DoAmplitudeiPh(HEAPU8[$p + 20 | 0] | 0, 0);
     __ZL7DoPitchPhii(HEAP32[6312 + (HEAPU8[$p + 16 | 0] << 2) >> 2] | 0, HEAPU8[$p + 22 | 0] | 0, HEAPU8[$p + 23 | 0] | 0);
    } else {
     if ((HEAPU8[$next + 17 | 0] | 0) == 3) {
      __ZL11DoAmplitudeiPh(HEAPU8[$next + 20 | 0] | 0, 0);
      __ZL7DoPitchPhii(HEAP32[6312 + (HEAPU8[$next + 16 | 0] << 2) >> 2] | 0, HEAPU8[$next + 22 | 0] | 0, HEAPU8[$next + 23 | 0] | 0);
     } else {
      if ((HEAP32[28466] | 0) < 0) {
       __ZL11DoAmplitudeiPh(HEAPU8[$p + 20 | 0] | 0, 0);
       __ZL7DoPitchPhii(HEAP32[6312 + (HEAPU8[$p + 16 | 0] << 2) >> 2] | 0, HEAPU8[$p + 22 | 0] | 0, HEAPU8[$p + 23 | 0] | 0);
      }
     }
    }
    do {
     if ((HEAPU8[$next + 17 | 0] | 0) == 2) {
      label = 104;
     } else {
      if ((HEAPU8[$next + 17 | 0] | 0) == 3) {
       if ((HEAPU8[$next + 21 | 0] | 0) == 0) {
        label = 104;
        break;
       }
      }
      $612 = $p | 0;
      HEAP16[$612 >> 1] = HEAPU16[$612 >> 1] | 8192;
     }
    } while (0);
    if ((label | 0) == 104) {
     label = 0;
     __ZL13StartSyllablev();
    }
    __Z16InterpretPhonemeP10TranslatoriP12PHONEME_LISTP12PHONEME_DATAP12WORD_PH_DATA(0, 0, $p, $phdata, 102560);
    _memset($fmtp | 0, 0, 48) | 0;
    HEAP32[$fmtp + 44 >> 2] = HEAP32[$phdata + 44 >> 2] << 1;
    HEAP32[$fmtp + 8 >> 2] = HEAP32[$phdata + 68 >> 2];
    HEAP32[$fmtp + 16 >> 2] = HEAP32[$phdata + 88 >> 2];
    HEAP32[$fmtp + 28 >> 2] = HEAP32[$phdata + 84 >> 2];
    HEAP32[$fmtp + 32 >> 2] = HEAP32[$phdata + 104 >> 2];
    if ((HEAP16[$p >> 1] & 8 | 0) != 0) {
     __Z8DoSpect2P11PHONEME_TABiP10FMT_PARAMSP12PHONEME_LISTi(HEAP32[$p + 8 >> 2] | 0, 0, $fmtp, $p, 0) | 0;
    }
    __Z8DoSpect2P11PHONEME_TABiP10FMT_PARAMSP12PHONEME_LISTi(HEAP32[$p + 8 >> 2] | 0, 0, $fmtp, $p, 0) | 0;
    break;
   }
  case 0:
   {
    __ZL7DoPauseii(HEAP32[$p + 12 >> 2] | 0, 0);
    break;
   }
  case 6:
   {
    __Z16InterpretPhonemeP10TranslatoriP12PHONEME_LISTP12PHONEME_DATAP12WORD_PH_DATA(0, 0, $p, $phdata, 102560);
    if ((HEAP16[$p >> 1] & 8 | 0) != 0) {
     __Z9DoSample3P12PHONEME_DATAii($phdata, HEAP32[$p + 12 >> 2] | 0, 0) | 0;
    }
    __Z9DoSample3P12PHONEME_DATAii($phdata, HEAP32[$p + 12 >> 2] | 0, 0) | 0;
    break;
   }
  case 5:
   {
    $ph = HEAP32[$p + 8 >> 2] | 0;
    _memset($fmtp | 0, 0, 48) | 0;
    HEAP32[$fmtp >> 2] = 4;
    $pre_voiced = 0;
    if ((HEAPU8[$next + 17 | 0] | 0) == 2) {
     __ZL11DoAmplitudeiPh(HEAPU8[$p + 20 | 0] | 0, 0);
     __ZL7DoPitchPhii(HEAP32[6312 + (HEAPU8[$p + 16 | 0] << 2) >> 2] | 0, HEAPU8[$p + 22 | 0] | 0, HEAPU8[$p + 23 | 0] | 0);
     $pre_voiced = 1;
    } else {
     do {
      if ((HEAPU8[$next + 17 | 0] | 0) == 3) {
       if ((HEAP8[$next + 21 | 0] | 0) != 0) {
        label = 69;
        break;
       }
       __ZL11DoAmplitudeiPh(HEAPU8[$next + 20 | 0] | 0, 0);
       __ZL7DoPitchPhii(HEAP32[6312 + (HEAPU8[$next + 16 | 0] << 2) >> 2] | 0, HEAPU8[$next + 22 | 0] | 0, HEAPU8[$next + 23 | 0] | 0);
       $pre_voiced = 1;
      } else {
       label = 69;
      }
     } while (0);
     if ((label | 0) == 69) {
      label = 0;
      if ((HEAP32[28466] | 0) < 0) {
       __ZL11DoAmplitudeiPh(HEAPU8[$next + 20 | 0] | 0, 0);
       __ZL7DoPitchPhii(HEAP32[6312 + (HEAPU8[$p + 16 | 0] << 2) >> 2] | 0, HEAPU8[$p + 22 | 0] | 0, HEAPU8[$p + 23 | 0] | 0);
      }
     }
    }
    do {
     if ((HEAPU8[$prev + 17 | 0] | 0) == 2) {
      label = 76;
     } else {
      if ((HEAP32[(HEAP32[$prev + 8 >> 2] | 0) + 4 >> 2] & 256 | 0) != 0) {
       label = 76;
       break;
      }
      if ((HEAP32[$ph + 4 >> 2] & 33554432 | 0) != 0) {
       label = 76;
       break;
      }
      if ((HEAP16[$p >> 1] & 8 | 0) != 0) {
       __ZL7DoPauseii(50, 0);
      }
     }
    } while (0);
    if ((label | 0) == 76) {
     label = 0;
     __Z16InterpretPhonemeP10TranslatoriP12PHONEME_LISTP12PHONEME_DATAP12WORD_PH_DATA(0, 1, $p, $phdata, 102560);
     HEAP32[$fmtp + 8 >> 2] = HEAP32[$phdata + 68 >> 2];
     HEAP32[$fmtp + 16 >> 2] = HEAP32[$phdata + 88 >> 2];
     __Z8DoSpect2P11PHONEME_TABiP10FMT_PARAMSP12PHONEME_LISTi($ph, 0, $fmtp, $p, 0) | 0;
     if ((HEAP16[$p >> 1] & 8 | 0) != 0) {
      __ZL7DoPauseii(25, 1);
      __Z8DoSpect2P11PHONEME_TABiP10FMT_PARAMSP12PHONEME_LISTi($ph, 0, $fmtp, $p, 0) | 0;
     }
    }
    if (($pre_voiced | 0) != 0) {
     __ZL13StartSyllablev();
    } else {
     $464 = $p | 0;
     HEAP16[$464 >> 1] = HEAPU16[$464 >> 1] | 8192;
    }
    __Z16InterpretPhonemeP10TranslatoriP12PHONEME_LISTP12PHONEME_DATAP12WORD_PH_DATA(0, 0, $p, $phdata, 102560);
    HEAP32[$fmtp + 8 >> 2] = HEAP32[$phdata + 68 >> 2];
    HEAP32[$fmtp + 16 >> 2] = HEAP32[$phdata + 88 >> 2];
    HEAP32[$fmtp + 28 >> 2] = HEAP32[$phdata + 84 >> 2];
    HEAP32[$fmtp + 32 >> 2] = HEAP32[$phdata + 104 >> 2];
    __Z8DoSpect2P11PHONEME_TABiP10FMT_PARAMSP12PHONEME_LISTi($ph, 0, $fmtp, $p, 0) | 0;
    do {
     if ((HEAPU8[$p + 21 | 0] | 0) == 0) {
      if ((HEAPU8[$next2 + 21 | 0] | 0) != 0) {
       break;
      }
      if ((HEAPU8[$next + 17 | 0] | 0) == 7) {
       __ZL7DoPauseii(20, 0);
      }
      if ((HEAPU8[$next + 17 | 0] | 0) == 6) {
       __ZL7DoPauseii(12, 0);
      }
     }
    } while (0);
    break;
   }
  case 2:
   {
    $ph = HEAP32[$p + 8 >> 2] | 0;
    $stress = HEAP8[$p + 3 | 0] & 15;
    _memset($fmtp | 0, 0, 48) | 0;
    __Z16InterpretPhonemeP10TranslatoriP12PHONEME_LISTP12PHONEME_DATAP12WORD_PH_DATA(0, 0, $p, $phdata, 102560);
    HEAP32[$fmtp + 44 >> 2] = HEAP32[$phdata + 44 >> 2] << 1;
    $843 = HEAP32[$phdata + 76 >> 2] | 0;
    HEAP32[$fmtp + 8 >> 2] = $843;
    do {
     if (($843 | 0) != 0) {
      if ((HEAP32[$phdata >> 2] & 2 | 0) != 0) {
       label = 133;
       break;
      }
      HEAP32[$fmtp + 12 >> 2] = HEAP32[$phdata + 96 >> 2];
     } else {
      label = 133;
     }
    } while (0);
    if ((label | 0) == 133) {
     label = 0;
     if ((HEAPU8[$prev + 17 | 0] | 0) != 0) {
      __Z16InterpretPhonemeP10TranslatoriP12PHONEME_LISTP12PHONEME_DATAP12WORD_PH_DATA(0, 0, $prev, $phdata_prev, 0);
      $866 = HEAP32[$phdata_prev + 76 >> 2] | 0;
      HEAP32[$fmtp + 8 >> 2] = $866;
      if (($866 | 0) != 0) {
       HEAP32[$fmtp + 24 >> 2] = HEAP32[$phdata_prev + 96 >> 2];
      }
      HEAP32[$fmtp + 36 >> 2] = HEAP32[$phdata_prev + 108 >> 2];
      HEAP32[$fmtp + 40 >> 2] = HEAP32[$phdata_prev + 112 >> 2];
     }
    }
    if ((HEAP32[$fmtp + 8 >> 2] | 0) == 0) {
     HEAP32[$fmtp + 4 >> 2] = 1;
     HEAP32[$fmtp >> 2] = 1;
     HEAP32[$fmtp + 8 >> 2] = HEAP32[$phdata + 68 >> 2];
    }
    HEAP32[$fmtp + 16 >> 2] = HEAP32[$phdata + 88 >> 2];
    $pitch_env = HEAP32[6312 + (HEAPU8[$p + 16 | 0] << 2) >> 2] | 0;
    $amp_env = 0;
    if ((HEAPU8[$p + 7 | 0] | 0) != 0) {
     __Z17InterpretPhoneme2iP12PHONEME_DATA(HEAPU8[$p + 7 | 0] | 0, $phdata_tone);
     $pitch_env = __Z11GetEnvelopei(HEAP32[$phdata_tone + 124 >> 2] | 0) | 0;
     if ((HEAP32[$phdata_tone + 128 >> 2] | 0) > 0) {
      $amp_env = __Z11GetEnvelopei(HEAP32[$phdata_tone + 128 >> 2] | 0) | 0;
     }
    }
    __ZL13StartSyllablev();
    $modulation = 2;
    if (($stress | 0) <= 1) {
     $modulation = 1;
    } else {
     if (($stress | 0) >= 7) {
      $modulation = 3;
     }
    }
    do {
     if ((HEAPU8[$prev + 17 | 0] | 0) == 5) {
      label = 151;
     } else {
      if ((HEAPU8[$prev + 17 | 0] | 0) == 7) {
       label = 151;
       break;
      }
      do {
       if ((HEAPU8[$prev + 17 | 0] | 0) == 3) {
        label = 154;
       } else {
        if ((HEAPU8[$prev + 17 | 0] | 0) == 8) {
         label = 154;
         break;
        }
        if ((HEAP16[$p >> 1] & 1 | 0) == 0) {
         __ZL11DoAmplitudeiPh(HEAPU8[$p + 20 | 0] | 0, $amp_env);
         __ZL7DoPitchPhii($pitch_env, HEAPU8[$p + 22 | 0] | 0, HEAPU8[$p + 23 | 0] | 0);
        }
        __Z8DoSpect2P11PHONEME_TABiP10FMT_PARAMSP12PHONEME_LISTi($ph, 1, $fmtp, $p, $modulation) | 0;
       }
      } while (0);
      if ((label | 0) == 154) {
       label = 0;
       __ZL11DoAmplitudeiPh(HEAPU8[$p + 20 | 0] | 0, $amp_env);
       __Z8DoSpect2P11PHONEME_TABiP10FMT_PARAMSP12PHONEME_LISTi($ph, 1, $fmtp, $p, $modulation) | 0;
       __ZL7DoPitchPhii($pitch_env, HEAPU8[$p + 22 | 0] | 0, HEAPU8[$p + 23 | 0] | 0);
      }
     }
    } while (0);
    if ((label | 0) == 151) {
     label = 0;
     __ZL11DoAmplitudeiPh(HEAPU8[$p + 20 | 0] | 0, $amp_env);
     __ZL7DoPitchPhii($pitch_env, HEAPU8[$p + 22 | 0] | 0, HEAPU8[$p + 23 | 0] | 0);
     __Z8DoSpect2P11PHONEME_TABiP10FMT_PARAMSP12PHONEME_LISTi($ph, 1, $fmtp, $p, $modulation) | 0;
    }
    do {
     if ((HEAP32[19536] | 0) != 0) {
      if (($done_phoneme_marker | 0) != 0) {
       break;
      }
      __Z15WritePhMnemonicPcP11PHONEME_TABP12PHONEME_LISTiPi($phoneme_name | 0, HEAP32[$p + 8 >> 2] | 0, $p, $use_ipa, 0) | 0;
      __Z15DoPhonemeMarkeriiiPc(7, HEAP32[25646] | 0, 0, $phoneme_name | 0);
     }
    } while (0);
    HEAP32[$fmtp + 8 >> 2] = HEAP32[$phdata + 68 >> 2];
    HEAP32[$fmtp + 16 >> 2] = HEAP32[$phdata + 88 >> 2];
    HEAP32[$fmtp + 36 >> 2] = 0;
    HEAP32[$fmtp + 40 >> 2] = 0;
    $1055 = HEAP32[$phdata + 80 >> 2] | 0;
    HEAP32[$fmtp + 20 >> 2] = $1055;
    if (($1055 | 0) != 0) {
     HEAP32[$fmtp + 24 >> 2] = HEAP32[$phdata + 100 >> 2];
    } else {
     if ((HEAPU8[$next + 17 | 0] | 0) != 0) {
      HEAP32[$fmtp + 24 >> 2] = 0;
      __Z16InterpretPhonemeP10TranslatoriP12PHONEME_LISTP12PHONEME_DATAP12WORD_PH_DATA(0, 0, $next, $phdata_next, 0);
      HEAP32[$fmtp + 4 >> 2] = 1;
      HEAP32[$fmtp + 36 >> 2] = HEAP32[$phdata_next + 116 >> 2];
      HEAP32[$fmtp + 40 >> 2] = HEAP32[$phdata_next + 120 >> 2];
      $1083 = HEAP32[$phdata_next + 80 >> 2] | 0;
      HEAP32[$fmtp + 20 >> 2] = $1083;
      if (($1083 | 0) != 0) {
       HEAP32[$fmtp + 24 >> 2] = HEAP32[$phdata_next + 100 >> 2];
      }
     }
    }
    __Z8DoSpect2P11PHONEME_TABiP10FMT_PARAMSP12PHONEME_LISTi($ph, 2, $fmtp, $p, $modulation) | 0;
    break;
   }
  case 4:
   {
    $released = 0;
    $ph = HEAP32[$p + 8 >> 2] | 0;
    if ((HEAPU8[$next + 17 | 0] | 0) == 2) {
     $released = 1;
    } else {
     if ((HEAP8[$next + 21 | 0] | 0) == 0) {
      if ((HEAPU8[$next + 17 | 0] | 0) == 3) {
       $released = 1;
      }
     }
    }
    if (($released | 0) == 0) {
     $250 = $p | 0;
     HEAP16[$250 >> 1] = HEAPU16[$250 >> 1] | 8192;
    }
    if ((HEAP32[$ph + 4 >> 2] & 33554432 | 0) != 0) {
     _memset($fmtp | 0, 0, 48) | 0;
     __Z16InterpretPhonemeP10TranslatoriP12PHONEME_LISTP12PHONEME_DATAP12WORD_PH_DATA(0, 1, $p, $phdata, 102560);
     HEAP32[$fmtp + 8 >> 2] = HEAP32[$phdata + 68 >> 2];
     HEAP32[$fmtp + 16 >> 2] = HEAP32[$phdata + 88 >> 2];
     if ((HEAP32[28466] | 0) < 0) {
      __ZL11DoAmplitudeiPh(HEAPU8[$next + 20 | 0] | 0, 0);
      __ZL7DoPitchPhii(HEAP32[6312 + (HEAPU8[$p + 16 | 0] << 2) >> 2] | 0, HEAPU8[$next + 22 | 0] | 0, HEAPU8[$next + 23 | 0] | 0);
     }
     __Z8DoSpect2P11PHONEME_TABiP10FMT_PARAMSP12PHONEME_LISTi($ph, 0, $fmtp, $p, 0) | 0;
    }
    __Z16InterpretPhonemeP10TranslatoriP12PHONEME_LISTP12PHONEME_DATAP12WORD_PH_DATA(0, 0, $p, $phdata, 102560);
    $299 = $phdata | 0;
    HEAP32[$299 >> 2] = HEAP32[$299 >> 2] | 4;
    __Z9DoSample3P12PHONEME_DATAii($phdata, 0, 0) | 0;
    break;
   }
  case 8:
   {
    _memset($fmtp | 0, 0, 48) | 0;
    if ((HEAP16[$p >> 1] & 1 | 0) == 0) {
     __ZL11DoAmplitudeiPh(HEAPU8[$p + 20 | 0] | 0, 0);
     __ZL7DoPitchPhii(HEAP32[6312 + (HEAPU8[$p + 16 | 0] << 2) >> 2] | 0, HEAPU8[$p + 22 | 0] | 0, HEAPU8[$p + 23 | 0] | 0);
    }
    if ((HEAPU8[$prev + 17 | 0] | 0) == 8) {
     HEAP32[31356] = 0;
    }
    __Z16InterpretPhonemeP10TranslatoriP12PHONEME_LISTP12PHONEME_DATAP12WORD_PH_DATA(0, 0, $p, $phdata, 102560);
    HEAP32[$fmtp + 44 >> 2] = HEAP32[$phdata + 44 >> 2] << 1;
    HEAP32[$fmtp + 8 >> 2] = HEAP32[$phdata + 68 >> 2];
    HEAP32[$fmtp + 16 >> 2] = HEAP32[$phdata + 88 >> 2];
    if ((HEAPU8[$next + 17 | 0] | 0) == 2) {
     __ZL13StartSyllablev();
     __Z8DoSpect2P11PHONEME_TABiP10FMT_PARAMSP12PHONEME_LISTi(HEAP32[$p + 8 >> 2] | 0, 0, $fmtp, $p, 0) | 0;
    } else {
     do {
      if ((HEAPU8[$prev + 17 | 0] | 0) == 2) {
       if ((HEAP16[$p >> 1] & 1 | 0) == 0) {
        label = 118;
        break;
       }
       __Z8DoSpect2P11PHONEME_TABiP10FMT_PARAMSP12PHONEME_LISTi(HEAP32[$p + 8 >> 2] | 0, 0, $fmtp, $p, 0) | 0;
      } else {
       label = 118;
      }
     } while (0);
     if ((label | 0) == 118) {
      label = 0;
      HEAP32[31356] = 0;
      __Z8DoSpect2P11PHONEME_TABiP10FMT_PARAMSP12PHONEME_LISTi(HEAP32[$p + 8 >> 2] | 0, 0, $fmtp, $p, 0) | 0;
      HEAP32[31356] = 0;
     }
    }
    break;
   }
  default:
   {}
  }
  HEAP32[25648] = (HEAP32[25648] | 0) + 1;
 }
 if ((label | 0) == 20) {
  $1 = 1;
  $1111 = $1;
  STACKTOP = sp;
  return $1111 | 0;
 }
 __ZL8EndPitchi(1);
 if ((HEAP32[$3 >> 2] | 0) > 0) {
  __Z8DoMarkeriiii(5, HEAP32[22654] | 0, 0, HEAP32[22652] | 0);
  HEAP32[$3 >> 2] = 0;
 }
 $1 = 0;
 $1111 = $1;
 STACKTOP = sp;
 return $1111 | 0;
}
function __ZL17TranslateNumber_1P10TranslatorPcS1_PjP8WORD_TABi($tr, $word, $ph_out, $flags, $wtab, $control) {
 $tr = $tr | 0;
 $word = $word | 0;
 $ph_out = $ph_out | 0;
 $flags = $flags | 0;
 $wtab = $wtab | 0;
 $control = $control | 0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $n_digits = 0, $value = 0, $ix = 0, $digix = 0, $c = 0, $suppress_null = 0, $decimal_point = 0, $thousandplex = 0, $thousands_exact = 0, $thousands_inc = 0, $prev_thousands = 0, $ordinal = 0, $decimal_count = 0, $max_decimal_count = 0, $decimal_mode = 0, $suffix_ix = 0, $skipwords = 0, $group_len = 0, $p = 0, $string = 0, $buf1 = 0, $ph_append = 0, $ph_buf = 0, $ph_buf2 = 0, $ph_zeros = 0, $suffix = 0, $buf_digit_lookup = 0, $p2 = 0, $next_char = 0, $p1 = 0, $27 = 0, $110 = 0, $169 = 0, $192 = 0, $194 = 0, $198 = 0, $199 = 0, $238 = 0, $315 = 0, $332 = 0, $397 = 0, $674 = 0, $757 = 0, $878 = 0, $907 = 0, $916 = 0, $918 = 0, $1016 = 0, $1027 = 0, label = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 616 | 0;
 $p = sp | 0;
 $string = sp + 8 | 0;
 $buf1 = sp + 40 | 0;
 $ph_append = sp + 144 | 0;
 $ph_buf = sp + 200 | 0;
 $ph_buf2 = sp + 400 | 0;
 $ph_zeros = sp + 456 | 0;
 $suffix = sp + 512 | 0;
 $buf_digit_lookup = sp + 544 | 0;
 $p2 = sp + 600 | 0;
 $next_char = sp + 608 | 0;
 $2 = $tr;
 $3 = $word;
 $4 = $ph_out;
 $5 = $flags;
 $6 = $wtab;
 $suppress_null = 0;
 $decimal_point = 0;
 $thousandplex = 0;
 $thousands_exact = 1;
 $thousands_inc = 0;
 $prev_thousands = 0;
 $ordinal = 0;
 $skipwords = 0;
 HEAP32[$5 >> 2] = 0;
 HEAP32[28458] = 0;
 HEAP8[$buf_digit_lookup | 0] = 0;
 HEAP32[28592] = $buf_digit_lookup;
 HEAP32[28456] = $control;
 $ix = 0;
 while (1) {
  if ((__Z9IsDigit09j(HEAP8[$3 + $ix | 0] | 0) | 0) == 0) {
   break;
  }
  $ix = $ix + 1 | 0;
 }
 $n_digits = $ix;
 $27 = _atoi($3 | 0) | 0;
 $value = $27;
 $group_len = 3;
 if ((HEAP32[$2 + 204 >> 2] & 16384 | 0) != 0) {
  $group_len = 4;
 }
 do {
  if (($n_digits | 0) == ($group_len | 0)) {
   if ((HEAP8[$3 - 2 | 0] | 0) != (HEAP32[$2 + 220 >> 2] | 0)) {
    label = 11;
    break;
   }
   if ((__Z9IsDigit09j(HEAP8[$3 - 3 | 0] | 0) | 0) == 0) {
    label = 11;
    break;
   }
   $prev_thousands = 1;
  } else {
   label = 11;
  }
 } while (0);
 if ((label | 0) == 11) {
  if ((HEAP32[$2 + 220 >> 2] | 0) == 32) {
   label = 13;
  } else {
   if ((HEAP32[$2 + 200 >> 2] & 4096 | 0) != 0) {
    label = 13;
   }
  }
  if ((label | 0) == 13) {
   do {
    if (($n_digits | 0) == 3) {
     if ((HEAP32[$6 >> 2] & 262144 | 0) != 0) {
      break;
     }
     if ((__Z9IsDigit09j(HEAP8[$3 - 2 | 0] | 0) | 0) == 0) {
      break;
     }
     $prev_thousands = 1;
    }
   } while (0);
  }
 }
 if (($prev_thousands | 0) == 0) {
  HEAP32[28346] = 0;
 }
 HEAP8[115400] = 0;
 HEAP8[$ph_zeros | 0] = 0;
 if (($prev_thousands | 0) != 0) {
  label = 23;
 } else {
  if ((HEAP8[$3 | 0] | 0) != 48) {
   label = 23;
  }
 }
 if ((label | 0) == 23) {
  $110 = __ZL15CheckDotOrdinalP10TranslatorPcS1_P8WORD_TABi($2, $3, $3 + $ix | 0, $6, 0) | 0;
  $ordinal = $110;
  if (($110 | 0) != 0) {}
 }
 do {
  if ((HEAP8[$3 + $ix | 0] | 0) == 46) {
   if ((__Z9IsDigit09j(HEAP8[$3 + ($ix + 1) | 0] | 0) | 0) != 0) {
    break;
   }
   if ((__Z9IsDigit09j(HEAP8[$3 + ($ix + 2) | 0] | 0) | 0) != 0) {
    break;
   }
   if ((HEAP32[$6 + 12 >> 2] & 256 | 0) != 0) {
    break;
   }
   HEAP8[$3 + $ix | 0] = 0;
  }
 } while (0);
 if (($ordinal | 0) == 0) {
  label = 33;
 } else {
  if ((HEAP32[$2 + 324 >> 2] | 0) == 26741) {
   label = 33;
  }
 }
 if ((label | 0) == 33) {
  $ix = $ix + 1 | 0;
  HEAP32[$p >> 2] = $suffix;
  if ((HEAP32[$6 >> 2] & 16384 | 0) != 0) {
   $169 = HEAP32[$p >> 2] | 0;
   HEAP32[$p >> 2] = $169 + 1;
   HEAP8[$169] = 45;
   $ix = $ix + 1 | 0;
  }
  while (1) {
   do {
    if ((HEAP8[$3 + $ix | 0] | 0) != 0) {
     if ((HEAP8[$3 + $ix | 0] | 0) == 32) {
      $192 = 0;
      break;
     }
     $192 = ($ix | 0) < 29;
    } else {
     $192 = 0;
    }
   } while (0);
   if (!$192) {
    break;
   }
   $194 = $ix;
   $ix = $194 + 1 | 0;
   $198 = HEAP8[$3 + $194 | 0] | 0;
   $199 = HEAP32[$p >> 2] | 0;
   HEAP32[$p >> 2] = $199 + 1;
   HEAP8[$199] = $198;
  }
  HEAP8[HEAP32[$p >> 2] | 0] = 0;
  if ((HEAP8[$suffix | 0] | 0) != 0) {
   do {
    if ((HEAP32[$2 + 232 >> 2] | 0) != 0) {
     if ((_strcmp($suffix | 0, HEAP32[$2 + 232 >> 2] | 0) | 0) != 0) {
      label = 45;
      break;
     }
     $ordinal = 2;
    } else {
     label = 45;
    }
   } while (0);
   if ((label | 0) == 45) {
    if ((__Z9IsDigit09j(HEAP8[$suffix | 0] | 0) | 0) == 0) {
     _sprintf($string | 0, 16656, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $suffix, tempVarArgs) | 0) | 0;
     STACKTOP = tempVarArgs;
     if ((__Z6LookupP10TranslatorPKcPc($2, $string | 0, 115400) | 0) != 0) {
      $ordinal = 2;
      $238 = $5 | 0;
      HEAP32[$238 >> 2] = HEAP32[$238 >> 2] | 128;
      $skipwords = 1;
      _sprintf($string | 0, 16496, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $suffix, tempVarArgs) | 0) | 0;
      STACKTOP = tempVarArgs;
      __Z6LookupP10TranslatorPKcPc($2, $string | 0, 114136) | 0;
     }
    }
   }
  }
 }
 if ((HEAP32[$6 >> 2] & 32768 | 0) != 0) {
  $ordinal = 2;
 }
 HEAP8[$ph_append | 0] = 0;
 HEAP8[$ph_buf2 | 0] = 0;
 do {
  if ((HEAP8[$3 | 0] | 0) == 48) {
   if (($prev_thousands | 0) != 0) {
    break;
   }
   if ((HEAP8[$3 + 1 | 0] | 0) == 32) {
    break;
   }
   if ((HEAP8[$3 + 1 | 0] | 0) == (HEAP32[$2 + 224 >> 2] | 0)) {
    break;
   }
   do {
    if (($n_digits | 0) == 2) {
     if ((HEAP8[$3 + 3 | 0] | 0) != 58) {
      label = 63;
      break;
     }
     if ((__Z9IsDigit09j(HEAP8[$3 + 5 | 0] | 0) | 0) == 0) {
      label = 63;
      break;
     }
     if ((_isspace(HEAP8[$3 + 7 | 0] | 0) | 0) == 0) {
      label = 63;
      break;
     }
    } else {
     label = 63;
    }
   } while (0);
   if ((label | 0) == 63) {
    if (($n_digits | 0) > 3) {
     $315 = $5 | 0;
     HEAP32[$315 >> 2] = HEAP32[$315 >> 2] & -129;
     $1 = 0;
     $1027 = $1;
     STACKTOP = sp;
     return $1027 | 0;
    }
    $ix = 0;
    while (1) {
     if ((HEAP8[$3 + $ix | 0] | 0) == 48) {
      $332 = ($ix | 0) < ($n_digits - 1 | 0);
     } else {
      $332 = 0;
     }
     if (!$332) {
      break;
     }
     __Z6LookupP10TranslatorPKcPc($2, 16328, $ph_zeros + (_strlen($ph_zeros | 0) | 0) | 0) | 0;
     $ix = $ix + 1 | 0;
    }
   }
  }
 } while (0);
 do {
  if ((HEAP32[$2 + 200 >> 2] & 4096 | 0) != 0) {
   if ((HEAP8[$3 + $n_digits | 0] | 0) != 32) {
    label = 76;
    break;
   }
   $thousands_inc = 1;
  } else {
   label = 76;
  }
 } while (0);
 if ((label | 0) == 76) {
  if ((HEAP8[$3 + $n_digits | 0] | 0) == (HEAP32[$2 + 220 >> 2] | 0)) {
   $thousands_inc = 2;
  }
 }
 $suffix_ix = $n_digits + 2 | 0;
 if (($thousands_inc | 0) > 0) {
  $digix = $n_digits + $thousands_inc | 0;
  while (1) {
   if ((HEAP32[$6 + (($thousandplex + 1 | 0) * 12 | 0) >> 2] & 262144 | 0) == 0) {
    $397 = __Z19CheckThousandsGroupPci($3 + $digix | 0, $group_len) | 0;
   } else {
    $397 = 0;
   }
   if (!$397) {
    break;
   }
   $ix = 0;
   while (1) {
    if (($ix | 0) >= ($group_len | 0)) {
     break;
    }
    if ((HEAP8[$3 + ($digix + $ix) | 0] | 0) != 48) {
     label = 87;
     break;
    }
    $ix = $ix + 1 | 0;
   }
   if ((label | 0) == 87) {
    label = 0;
    $thousands_exact = 0;
   }
   $thousandplex = $thousandplex + 1 | 0;
   $digix = $digix + $group_len | 0;
   if ((HEAP8[$3 + $digix | 0] | 0) != (HEAP32[$2 + 220 >> 2] | 0)) {
    if ((HEAP32[$2 + 200 >> 2] & 4096 | 0) == 0) {
     label = 94;
     break;
    }
    if ((HEAP8[$3 + $digix | 0] | 0) != 32) {
     label = 94;
     break;
    }
   }
   $suffix_ix = $digix + 2 | 0;
   $digix = $digix + $thousands_inc | 0;
  }
  if ((label | 0) == 94) {}
 }
 do {
  if (($value | 0) == 0) {
   if (($prev_thousands | 0) == 0) {
    break;
   }
   $suppress_null = 1;
  }
 } while (0);
 if ((HEAP32[$2 + 324 >> 2] | 0) == 26741) {
  do {
   if ((HEAP32[$6 + ($thousandplex * 12 | 0) >> 2] & 16384 | 0) != 0) {
    if (($thousands_exact | 0) != 1) {
     break;
    }
    if ((__ZL11hu_number_ePKcii($3 + $suffix_ix | 0, $thousandplex, $value) | 0) == 0) {
     break;
    }
    HEAP32[28456] = HEAP32[28456] | 1;
   }
  } while (0);
 }
 do {
  if ((HEAP8[$3 + $n_digits | 0] | 0) == (HEAP32[$2 + 224 >> 2] | 0)) {
   if ((__Z9IsDigit09j(HEAP8[$3 + ($n_digits + 1) | 0] | 0) | 0) == 0) {
    label = 109;
    break;
   }
   __Z6LookupP10TranslatorPKcPc($2, 16184, $ph_append | 0) | 0;
   $decimal_point = 256;
  } else {
   label = 109;
  }
 } while (0);
 if ((label | 0) == 109) {
  if (($suppress_null | 0) == 0) {
   if (($thousands_inc | 0) > 0) {
    if (($thousandplex | 0) > 0) {
     do {
      if (($suppress_null | 0) == 0) {
       if ((__ZL15LookupThousandsP10TranslatoriiiPc($2, $value, $thousandplex, $thousands_exact, $ph_append | 0) | 0) == 0) {
        break;
       }
       $value = 0;
       $suppress_null = 1;
      }
     } while (0);
    }
   }
  } else {
   if ((HEAP32[28346] | 0) == 1) {
    _sprintf($string | 0, 16072, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $thousandplex + 1, tempVarArgs) | 0) | 0;
    STACKTOP = tempVarArgs;
    if ((__Z6LookupP10TranslatorPKcPc($2, $string | 0, $buf1 | 0) | 0) == 0) {
     _sprintf($string | 0, 16072, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $thousandplex, tempVarArgs) | 0) | 0;
     STACKTOP = tempVarArgs;
     __Z6LookupP10TranslatorPKcPc($2, $string | 0, $ph_append | 0) | 0;
    }
   }
  }
 }
 do {
  if ((HEAP8[$ph_append | 0] | 0) == 0) {
   if ((HEAP8[$3 + $n_digits | 0] | 0) != 46) {
    break;
   }
   if (($thousandplex | 0) != 0) {
    break;
   }
   __Z6LookupP10TranslatorPKcPc($2, 15912, $ph_append | 0) | 0;
  }
 } while (0);
 if (($thousandplex | 0) == 0) {
  HEAP32[$p >> 2] = $3;
  while (1) {
   if ((__Z9IsDigit09j(HEAP8[(HEAP32[$p >> 2] | 0) + 1 | 0] | 0) | 0) == 0) {
    break;
   }
   HEAP32[$p >> 2] = (HEAP32[$p >> 2] | 0) + 1;
  }
  if ((__Z9IsDigit09j(HEAP8[(HEAP32[$p >> 2] | 0) - 1 | 0] | 0) | 0) != 0) {
   HEAP32[$p2 >> 2] = (HEAP32[$p >> 2] | 0) - 1;
   if ((__Z14LookupDictListP10TranslatorPPcS1_PjiP8WORD_TAB($2, $p2, $buf_digit_lookup | 0, $5, 4, $6) | 0) != 0) {
    HEAP32[28458] = 2;
   }
  }
  do {
   if ((HEAP8[$buf_digit_lookup | 0] | 0) == 0) {
    if ((HEAP8[HEAP32[$p >> 2] | 0] | 0) == 48) {
     break;
    }
    if ((__Z14LookupDictListP10TranslatorPPcS1_PjiP8WORD_TAB($2, $p, $buf_digit_lookup | 0, $5, 4, $6) | 0) != 0) {
     HEAP32[28458] = 1;
    }
   }
  } while (0);
  if (($prev_thousands | 0) == 0) {
   do {
    if (($decimal_point | 0) == 0) {
     if (($ordinal | 0) != 0) {
      break;
     }
     _sprintf($string | 0, 15776, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $value, tempVarArgs) | 0) | 0;
     STACKTOP = tempVarArgs;
     if ((__Z6LookupP10TranslatorPKcPc($2, $string | 0, $4) | 0) == 0) {
      break;
     }
     $1 = 1;
     $1027 = $1;
     STACKTOP = sp;
     return $1027 | 0;
    }
   } while (0);
   if ((HEAP32[$2 + 204 >> 2] & 65536 | 0) != 0) {
    HEAP32[$p2 >> 2] = $3;
    while (1) {
     if ((HEAP8[HEAP32[$p2 >> 2] | 0] | 0) != 32) {
      $674 = (HEAP8[HEAP32[$p2 >> 2] | 0] | 0) != 0;
     } else {
      $674 = 0;
     }
     if (!$674) {
      break;
     }
     HEAP32[$p2 >> 2] = (HEAP32[$p2 >> 2] | 0) + 1;
    }
    if ((HEAP8[(HEAP32[$p2 >> 2] | 0) + 1 | 0] | 0) == 37) {
     __Z6LookupP10TranslatorPKcPc($2, 15624, $4) | 0;
     $4 = $4 + (_strlen($4 | 0) | 0) | 0;
     HEAP8[(HEAP32[$p2 >> 2] | 0) + 1 | 0] = 32;
    }
   }
  }
 }
 __ZL10LookupNum3P10TranslatoriPciii($2, $value, $ph_buf | 0, $suppress_null, $thousandplex, $prev_thousands | $ordinal | $decimal_point) | 0;
 do {
  if (($thousandplex | 0) > 0) {
   if ((HEAP32[$2 + 204 >> 2] & 512 | 0) == 0) {
    label = 161;
    break;
   }
   _sprintf($4 | 0, 15480, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 40 | 0, HEAP32[tempVarArgs >> 2] = $ph_zeros, HEAP32[tempVarArgs + 8 >> 2] = $ph_append, HEAP32[tempVarArgs + 16 >> 2] = 15, HEAP32[tempVarArgs + 24 >> 2] = $ph_buf2, HEAP32[tempVarArgs + 32 >> 2] = $ph_buf, tempVarArgs) | 0) | 0;
   STACKTOP = tempVarArgs;
  } else {
   label = 161;
  }
 } while (0);
 if ((label | 0) == 161) {
  _sprintf($4 | 0, 15344, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 40 | 0, HEAP32[tempVarArgs >> 2] = $ph_zeros, HEAP32[tempVarArgs + 8 >> 2] = $ph_buf2, HEAP32[tempVarArgs + 16 >> 2] = $ph_buf, HEAP32[tempVarArgs + 24 >> 2] = 15, HEAP32[tempVarArgs + 32 >> 2] = $ph_append, tempVarArgs) | 0) | 0;
  STACKTOP = tempVarArgs;
 }
 while (1) {
  if (($decimal_point | 0) == 0) {
   break;
  }
  $n_digits = $n_digits + 1 | 0;
  $decimal_count = 0;
  while (1) {
   if ((__Z9IsDigit09j(HEAP8[$3 + ($n_digits + $decimal_count) | 0] | 0) | 0) == 0) {
    break;
   }
   $decimal_count = $decimal_count + 1 | 0;
  }
  $max_decimal_count = 2;
  $757 = HEAP32[$2 + 200 >> 2] & 57344;
  $decimal_mode = $757;
  do {
   if (($757 | 0) == 32768) {
    $max_decimal_count = 5;
    label = 169;
   } else if (($757 | 0) == 16384) {
    label = 169;
   } else if (($757 | 0) == 8192 | ($757 | 0) == 40960 | ($757 | 0) == 49152) {
    __ZL10LookupNum3P10TranslatoriPciii($2, _atoi($3 + $n_digits | 0) | 0, $ph_buf | 0, 0, 0, 0) | 0;
    if ((HEAP8[$3 + $n_digits | 0] | 0) == 48) {
     label = 178;
    } else {
     if (($decimal_mode | 0) != 8192) {
      label = 178;
     }
    }
    if ((label | 0) == 178) {
     label = 0;
     _sprintf($string | 0, 15208, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $decimal_count, tempVarArgs) | 0) | 0;
     STACKTOP = tempVarArgs;
     if ((__Z6LookupP10TranslatorPKcPc($2, $string | 0, $buf1 | 0) | 0) == 0) {
      break;
     }
     if (($decimal_mode | 0) == 49152) {
      _strcat($4 | 0, $buf1 | 0) | 0;
     } else {
      _strcat($ph_buf | 0, $buf1 | 0) | 0;
     }
    }
    _strcat($4 | 0, $ph_buf | 0) | 0;
    $n_digits = $n_digits + $decimal_count | 0;
   } else if (($757 | 0) == 24576) {
    do {
     if (($decimal_count | 0) <= 4) {
      if ((HEAP8[$3 + $n_digits | 0] | 0) == 48) {
       break;
      }
      __ZL10LookupNum3P10TranslatoriPciii($2, _atoi($3 + $n_digits | 0) | 0, $buf1 | 0, 0, 0, 0) | 0;
      _strcat($4 | 0, $buf1 | 0) | 0;
      $n_digits = $n_digits + $decimal_count | 0;
     }
    } while (0);
   } else if (($757 | 0) == 57344) {
    while (1) {
     $878 = $decimal_count;
     $decimal_count = $878 - 1 | 0;
     if (($878 | 0) <= 1) {
      break;
     }
     _sprintf($string | 0, 15080, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = HEAP8[$3 + $n_digits | 0] | 0, tempVarArgs) | 0) | 0;
     STACKTOP = tempVarArgs;
     if ((__Z6LookupP10TranslatorPKcPc($2, $string | 0, $buf1 | 0) | 0) == 0) {
      label = 192;
      break;
     }
     $n_digits = $n_digits + 1 | 0;
     _strcat($4 | 0, $buf1 | 0) | 0;
    }
    if ((label | 0) == 192) {
     label = 0;
    }
   }
  } while (0);
  if ((label | 0) == 169) {
   label = 0;
   while (1) {
    if ((HEAP8[$3 + $n_digits | 0] | 0) != 48) {
     break;
    }
    __Z6LookupP10TranslatorPKcPc($2, 16328, $buf1 | 0) | 0;
    _strcat($4 | 0, $buf1 | 0) | 0;
    $decimal_count = $decimal_count - 1 | 0;
    $n_digits = $n_digits + 1 | 0;
   }
   do {
    if (($decimal_count | 0) <= ($max_decimal_count | 0)) {
     if ((__Z9IsDigit09j(HEAP8[$3 + $n_digits | 0] | 0) | 0) == 0) {
      break;
     }
     __ZL10LookupNum3P10TranslatoriPciii($2, _atoi($3 + $n_digits | 0) | 0, $buf1 | 0, 0, 0, 0) | 0;
     _strcat($4 | 0, $buf1 | 0) | 0;
     $n_digits = $n_digits + $decimal_count | 0;
    }
   } while (0);
  }
  while (1) {
   $907 = HEAP8[$3 + $n_digits | 0] | 0;
   $c = $907;
   if ((__Z9IsDigit09j($907 & 255) | 0) != 0) {
    $916 = (_strlen($4 | 0) | 0) >>> 0 < 190 >>> 0;
   } else {
    $916 = 0;
   }
   if (!$916) {
    break;
   }
   $918 = $n_digits;
   $n_digits = $918 + 1 | 0;
   $value = (HEAP8[$3 + $918 | 0] | 0) - 48 | 0;
   __ZL10LookupNum2P10TranslatoriiiPc($2, $value, 0, 2, $buf1 | 0) | 0;
   _sprintf($4 + (_strlen($4 | 0) | 0) | 0, 14976, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = 15, HEAP32[tempVarArgs + 8 >> 2] = $buf1, tempVarArgs) | 0) | 0;
   STACKTOP = tempVarArgs;
  }
  if ((__Z6LookupP10TranslatorPKcPc($2, 14856, $buf1 | 0) | 0) != 0) {
   _strcat($4 | 0, $buf1 | 0) | 0;
  }
  do {
   if (($c & 255 | 0) == (HEAP32[$2 + 224 >> 2] | 0)) {
    if ((__Z9IsDigit09j(HEAP8[$3 + ($n_digits + 1) | 0] | 0) | 0) == 0) {
     label = 205;
     break;
    }
    __Z6LookupP10TranslatorPKcPc($2, 16184, $buf1 | 0) | 0;
    _strcat($4 | 0, $buf1 | 0) | 0;
   } else {
    label = 205;
   }
  } while (0);
  if ((label | 0) == 205) {
   label = 0;
   $decimal_point = 0;
  }
 }
 do {
  if ((HEAP8[$4 | 0] | 0) != 0) {
   if ((HEAP8[$4 | 0] | 0) == 21) {
    break;
   }
   $p1 = $3 + ($n_digits + 1) | 0;
   $p1 = $p1 + (__Z7utf8_inPiPKc($next_char, $p1) | 0) | 0;
   do {
    if ((HEAP32[$2 + 200 >> 2] & 131072 | 0) != 0) {
     if ((HEAP32[$next_char >> 2] | 0) != 32) {
      break;
     }
     __Z7utf8_inPiPKc($next_char, $p1) | 0;
    }
   } while (0);
   do {
    if ((__Z9iswalpha2i(HEAP32[$next_char >> 2] | 0) | 0) == 0) {
     if (($thousands_exact | 0) != 0) {
      break;
     }
     _strcat($4 | 0, 19776) | 0;
    }
   } while (0);
  }
 } while (0);
 $1016 = $5;
 HEAP32[$1016 >> 2] = HEAP32[$1016 >> 2] | -2147483648;
 HEAP32[28346] = (HEAP32[28346] | 0) - 1;
 if (($skipwords | 0) != 0) {
  HEAP32[22626] = $skipwords;
 }
 $1 = 1;
 $1027 = $1;
 STACKTOP = sp;
 return $1027 | 0;
}
function __Z11CalcLengthsP10Translator($tr) {
 $tr = $tr | 0;
 var $1 = 0, $ix = 0, $ix2 = 0, $prev = 0, $next = 0, $next2 = 0, $next3 = 0, $p = 0, $p2 = 0, $stress = 0, $type = 0, $pre_sonorant = 0, $pre_voiced = 0, $last_pitch = 0, $pitch_start = 0, $length_mod = 0, $next2type = 0, $len = 0, $env2 = 0, $end_of_clause = 0, $embedded_ix = 0, $min_drop = 0, $pitch1 = 0, $emphasized = 0, $pitch_env = 0, $phdata_tone = 0, $103 = 0, $121 = 0, $351 = 0, $913 = 0, $939 = 0, $1129 = 0, $1147 = 0, $1160 = 0, $1172 = 0, $1192 = 0, label = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160 | 0;
 $embedded_ix = sp | 0;
 $phdata_tone = sp + 8 | 0;
 $1 = $tr;
 $pre_sonorant = 0;
 $pre_voiced = 0;
 $last_pitch = 0;
 HEAP32[$embedded_ix >> 2] = 0;
 $pitch_env = 0;
 $ix = 1;
 while (1) {
  if (($ix | 0) >= (HEAP32[19562] | 0)) {
   break;
  }
  $prev = 44280 + (($ix - 1 | 0) * 24 | 0) | 0;
  $p = 44280 + ($ix * 24 | 0) | 0;
  $stress = HEAP8[$p + 3 | 0] & 7;
  $emphasized = HEAP8[$p + 3 | 0] & 8;
  $next = 44280 + (($ix + 1 | 0) * 24 | 0) | 0;
  if ((HEAP16[$p >> 1] & 2 | 0) != 0) {
   __ZL11DoEmbedded2Pi($embedded_ix);
  }
  $type = HEAPU8[$p + 17 | 0] | 0;
  if ((HEAP16[$p >> 1] & 4 | 0) != 0) {
   $type = 2;
  }
  switch ($type | 0) {
  case 0:
   {
    $last_pitch = 0;
    break;
   }
  case 4:
   {
    $last_pitch = 0;
    if ((HEAPU8[$prev + 17 | 0] | 0) == 6) {
     HEAP8[$p + 18 | 0] = 25;
    } else {
     do {
      if ((HEAP32[26268] | 0) > 0) {
       label = 13;
      } else {
       if (($stress | 0) < 4) {
        label = 13;
        break;
       }
       HEAP8[$p + 18 | 0] = 60;
      }
     } while (0);
     if ((label | 0) == 13) {
      label = 0;
      HEAP8[$p + 18 | 0] = 48;
     }
    }
    if ((HEAPU8[$prev + 17 | 0] | 0) == 4) {
     HEAP8[$p + 18 | 0] = 60;
    }
    do {
     if ((HEAP32[$1 >> 2] & 16 | 0) != 0) {
      if ((HEAP8[$p + 21 | 0] | 0) == 0) {
       break;
      }
      HEAP8[$p + 18 | 0] = 60;
     }
    } while (0);
    if ((HEAP32[(HEAP32[$p + 8 >> 2] | 0) + 4 >> 2] & 4194304 | 0) != 0) {
     $103 = $p + 18 | 0;
     HEAP8[$103] = (HEAPU8[$103] | 0) + 30;
    }
    if ((HEAP16[$p >> 1] & 8 | 0) != 0) {
     $121 = $p + 18 | 0;
     HEAP8[$121] = (HEAPU8[$121] | 0) + (HEAP32[$1 + 260 >> 2] | 0);
    }
    break;
   }
  case 7:
  case 6:
   {
    if ((HEAP8[$p + 21 | 0] | 0) != 0) {
     do {
      if ((HEAPU8[$prev + 17 | 0] | 0) == 2) {
       if ((HEAP32[(HEAP32[$p + 8 >> 2] | 0) + 4 >> 2] & 16777216 | 0) == 0) {
        label = 30;
        break;
       }
      } else {
       label = 30;
      }
     } while (0);
     if ((label | 0) == 30) {
      label = 0;
      HEAP8[$p + 18 | 0] = 15;
     }
    }
    do {
     if ((HEAPU8[$next + 17 | 0] | 0) == 0) {
      if ((HEAPU8[$prev + 17 | 0] | 0) != 8) {
       break;
      }
      if ((HEAP32[(HEAP32[$p + 8 >> 2] | 0) + 4 >> 2] & 8 | 0) != 0) {
       break;
      }
      HEAP8[$p + 18 | 0] = 25;
     }
    } while (0);
    if ((HEAP32[(HEAP32[$prev + 8 >> 2] | 0) + 4 >> 2] & 16384 | 0) != 0) {
     HEAP8[$p + 18 | 0] = 30;
    }
    do {
     if ((HEAP32[$1 >> 2] & 16 | 0) != 0) {
      if ((HEAP8[$p + 21 | 0] | 0) == 0) {
       break;
      }
      HEAP8[$p + 18 | 0] = 30;
     }
    } while (0);
    do {
     if ((HEAP32[(HEAP32[$p + 8 >> 2] | 0) + 4 >> 2] & 32 | 0) != 0) {
      if ((HEAPU8[$next + 17 | 0] | 0) != 4) {
       label = 48;
       break;
      }
      if ((HEAP8[$next + 21 | 0] | 0) != 0) {
       label = 48;
       break;
      }
      if ((HEAPU8[$prev + 17 | 0] | 0) == 2) {
       HEAP32[$p + 12 >> 2] = 200;
      } else {
       HEAP32[$p + 12 >> 2] = 150;
      }
     } else {
      label = 48;
     }
    } while (0);
    if ((label | 0) == 48) {
     label = 0;
     HEAP32[$p + 12 >> 2] = 256;
    }
    if (($type | 0) == 7) {
     if ((HEAPU8[$next + 17 | 0] | 0) == 2) {
      $pre_voiced = 1;
     }
     if ((HEAPU8[$prev + 17 | 0] | 0) == 2) {
      label = 54;
     } else {
      if ((HEAPU8[$prev + 17 | 0] | 0) == 3) {
       label = 54;
      }
     }
     if ((label | 0) == 54) {
      label = 0;
      HEAP32[$p + 12 >> 2] = (((HEAP32[$prev + 12 >> 2] | 0) + 255 | 0) >>> 0) / 2 | 0;
     }
    }
    break;
   }
  case 5:
   {
    do {
     if ((HEAPU8[$prev + 17 | 0] | 0) == 7) {
      label = 61;
     } else {
      if ((HEAPU8[$prev + 17 | 0] | 0) == 6) {
       label = 61;
       break;
      }
      if ((HEAP32[(HEAP32[$prev + 8 >> 2] | 0) + 4 >> 2] & 32 | 0) != 0) {
       label = 61;
       break;
      }
      if ((HEAPU8[$prev + 17 | 0] | 0) == 3) {
       label = 61;
      }
     }
    } while (0);
    if ((label | 0) == 61) {
     label = 0;
     HEAP8[$p + 18 | 0] = 30;
    }
    if ((HEAPU8[$next + 17 | 0] | 0) == 2) {
     label = 64;
    } else {
     if ((HEAPU8[$next + 17 | 0] | 0) == 3) {
      label = 64;
     }
    }
    if ((label | 0) == 64) {
     label = 0;
     if ((HEAPU8[$next + 17 | 0] | 0) == 2) {
      label = 66;
     } else {
      if ((HEAP8[$next + 21 | 0] | 0) == 0) {
       label = 66;
      }
     }
     if ((label | 0) == 66) {
      label = 0;
      $pre_voiced = 1;
     }
     HEAP8[$p + 18 | 0] = 40;
     if ((HEAPU8[$prev + 17 | 0] | 0) == 2) {
      HEAP8[$p + 18 | 0] = 0;
     } else {
      if ((HEAPU8[$prev + 17 | 0] | 0) == 0) {
       if ((HEAP32[$prev + 12 >> 2] | 0) >>> 0 < (HEAPU8[$p + 18 | 0] | 0) >>> 0) {
        $351 = $p + 18 | 0;
        HEAP8[$351] = (HEAPU8[$351] | 0) - (HEAP32[$prev + 12 >> 2] | 0);
       } else {
        HEAP8[$p + 18 | 0] = 0;
       }
      } else {
       if ((HEAPU8[$p + 21 | 0] | 0) == 0) {
        if ((HEAPU8[$prev + 17 | 0] | 0) == 3) {
         HEAP8[$p + 18 | 0] = 20;
        }
        if ((HEAPU8[$prev + 17 | 0] | 0) == 8) {
         HEAP8[$p + 18 | 0] = 12;
        }
        do {
         if ((HEAPU8[$prev + 17 | 0] | 0) == 4) {
          if ((HEAP32[(HEAP32[$prev + 8 >> 2] | 0) + 4 >> 2] & 8 | 0) != 0) {
           break;
          }
          HEAP8[$p + 18 | 0] = 0;
         }
        } while (0);
       }
      }
     }
    }
    do {
     if ((HEAP32[$1 >> 2] & 16 | 0) != 0) {
      if ((HEAP8[$p + 21 | 0] | 0) == 0) {
       break;
      }
      if ((HEAPU8[$p + 18 | 0] | 0) >= 20) {
       break;
      }
      HEAP8[$p + 18 | 0] = 20;
     }
    } while (0);
    break;
   }
  case 3:
  case 8:
   {
    HEAP8[$p + 20 | 0] = HEAP8[$1 + 408 | 0] | 0;
    HEAP32[$p + 12 >> 2] = 256;
    $min_drop = 0;
    if ((HEAP8[$p + 21 | 0] | 0) != 0) {
     if ((HEAPU8[$prev + 17 | 0] | 0) == 3) {
      HEAP8[$p + 18 | 0] = 25;
     }
     if ((HEAPU8[$prev + 17 | 0] | 0) == 2) {
      if ((HEAP32[(HEAP32[$p + 8 >> 2] | 0) + 4 >> 2] & 16777216 | 0) == 0) {
       HEAP8[$p + 18 | 0] = 12;
      }
     }
    }
    if ((HEAPU8[$next + 17 | 0] | 0) == 2) {
     $pre_sonorant = 1;
    } else {
     HEAP8[$p + 23 | 0] = $last_pitch;
     do {
      if ((HEAPU8[$prev + 17 | 0] | 0) == 2) {
       label = 103;
      } else {
       if ((HEAPU8[$prev + 17 | 0] | 0) == 3) {
        label = 103;
        break;
       }
       $ix2 = $ix;
       while (1) {
        if (($ix2 | 0) >= (HEAP32[19562] | 0)) {
         break;
        }
        if ((HEAPU8[44297 + ($ix2 * 24 | 0) | 0] | 0) == 2) {
         label = 113;
         break;
        }
        $ix2 = $ix2 + 1 | 0;
       }
       if ((label | 0) == 113) {
        label = 0;
        HEAP8[$p + 23 | 0] = HEAP8[44303 + ($ix2 * 24 | 0) | 0] | 0;
       }
      }
     } while (0);
     if ((label | 0) == 103) {
      label = 0;
      HEAP32[$p + 12 >> 2] = HEAP32[$prev + 12 >> 2];
      if ((HEAPU8[$p + 17 | 0] | 0) == 3) {
       HEAP32[$p + 12 >> 2] = HEAP32[6244];
      }
      if ((HEAPU8[$next + 17 | 0] | 0) == 5) {
       HEAP32[$p + 12 >> 2] = (((HEAP32[$p + 12 >> 2] | 0) * 160 | 0) >>> 0) / 100 | 0;
      }
      if ((HEAPU8[$next + 17 | 0] | 0) == 7) {
       HEAP32[$p + 12 >> 2] = (((HEAP32[$p + 12 >> 2] | 0) * 120 | 0) >>> 0) / 100 | 0;
      }
     }
     HEAP8[$p + 22 | 0] = (HEAPU8[$p + 23 | 0] | 0) - 16;
     if ((HEAPU8[$p + 23 | 0] | 0) < 16) {
      HEAP8[$p + 22 | 0] = 0;
     }
     HEAP8[$p + 16 | 0] = 0;
     $pre_voiced = 0;
    }
    break;
   }
  case 2:
   {
    $min_drop = 0;
    $next2 = 44280 + (($ix + 2 | 0) * 24 | 0) | 0;
    $next3 = 44280 + (($ix + 3 | 0) * 24 | 0) | 0;
    if (($stress | 0) > 7) {
     $stress = 7;
    }
    if (($stress | 0) <= 1) {
     $stress = $stress ^ 1;
    }
    if (($pre_sonorant | 0) != 0) {
     HEAP8[$p + 20 | 0] = (HEAPU8[$1 + 408 + $stress | 0] | 0) - 1;
    } else {
     HEAP8[$p + 20 | 0] = HEAP8[$1 + 408 + $stress | 0] | 0;
    }
    if (($emphasized | 0) != 0) {
     HEAP8[$p + 20 | 0] = 25;
    }
    if (($ix | 0) >= ((HEAP32[19562] | 0) - 3 | 0)) {
     if ((HEAPU8[$p + 20 | 0] | 0) > (HEAP32[$1 + 60 >> 2] | 0)) {
      HEAP8[$p + 20 | 0] = HEAP32[$1 + 60 >> 2];
     }
    }
    HEAP32[26268] = 0;
    $end_of_clause = 0;
    $p2 = $p + 24 | 0;
    while (1) {
     if ((HEAPU8[$p2 + 21 | 0] | 0) != 0) {
      break;
     }
     do {
      if ((HEAPU8[$p2 + 17 | 0] | 0) == 2) {
       if ((HEAP32[(HEAP32[$p2 + 8 >> 2] | 0) + 4 >> 2] & 1048576 | 0) != 0) {
        break;
       }
       HEAP32[26268] = (HEAP32[26268] | 0) + 1;
      }
     } while (0);
     if ((HEAPU8[(HEAP32[$p2 + 8 >> 2] | 0) + 10 | 0] | 0) == 27) {
      $end_of_clause = 2;
     }
     $p2 = $p2 + 24 | 0;
    }
    if ((HEAPU8[(HEAP32[$p2 + 8 >> 2] | 0) + 10 | 0] | 0) == 27) {
     $end_of_clause = 2;
    }
    do {
     if ((HEAP8[$p2 + 21 | 0] & 2 | 0) != 0) {
      if ((HEAP32[26268] | 0) != 0) {
       break;
      }
      $end_of_clause = 2;
     }
    } while (0);
    do {
     if ((HEAPU8[(HEAP32[$next + 8 >> 2] | 0) + 10 | 0] | 0) == 23) {
      if ((HEAPU8[$next2 + 17 | 0] | 0) != 0) {
       break;
      }
      $next = $next2;
      $next2 = $next3;
      $next3 = 44280 + (($ix + 4 | 0) * 24 | 0) | 0;
     }
    } while (0);
    $next2type = HEAPU8[(HEAP32[$next2 + 8 >> 2] | 0) + 15 | 0] | 0;
    if ((HEAP32[26268] | 0) == 0) {
     if ((HEAP8[$next + 21 | 0] | 0) != 0) {
      label = 154;
     } else {
      if ((HEAP8[$next2 + 21 | 0] | 0) != 0) {
       label = 154;
      }
     }
     if ((label | 0) == 154) {
      label = 0;
      if (($next2type | 0) != 1) {
       $next2type = 0;
      }
     }
     $len = HEAPU8[(HEAP32[$1 + 196 >> 2] | 0) + (($next2type * 10 | 0) + (HEAPU8[(HEAP32[$next + 8 >> 2] | 0) + 15 | 0] | 0)) | 0] | 0;
     do {
      if ((HEAP8[$next + 21 | 0] | 0) != 0) {
       if ((HEAP32[$1 >> 2] & 32 | 0) == 0) {
        label = 160;
        break;
       }
       $length_mod = ($len + (HEAPU8[(HEAP32[$1 + 196 >> 2] | 0) + (((HEAPU8[(HEAP32[$next + 8 >> 2] | 0) + 15 | 0] | 0) * 10 | 0) + 1) | 0] | 0) | 0) / 2 | 0;
      } else {
       label = 160;
      }
     } while (0);
     if ((label | 0) == 160) {
      label = 0;
      $length_mod = $len;
     }
    } else {
     $length_mod = HEAPU8[(HEAP32[$1 + 192 >> 2] | 0) + (($next2type * 10 | 0) + (HEAPU8[(HEAP32[$next + 8 >> 2] | 0) + 15 | 0] | 0)) | 0] | 0;
     do {
      if ((HEAPU8[$next + 17 | 0] | 0) == 8) {
       if ((HEAPU8[$next2 + 17 | 0] | 0) != 4) {
        if ((HEAPU8[$next2 + 17 | 0] | 0) != 5) {
         break;
        }
       }
       if ((HEAP32[(HEAP32[$next3 + 8 >> 2] | 0) + 4 >> 2] & 8 | 0) == 0) {
        break;
       }
       $length_mod = $length_mod - 15 | 0;
      }
     } while (0);
    }
    if ((HEAP32[26268] | 0) == 0) {
     $length_mod = Math_imul($length_mod, HEAP32[6244] | 0) | 0;
    } else {
     if ((HEAP32[26268] | 0) == 1) {
      $length_mod = Math_imul($length_mod, HEAP32[6242] | 0) | 0;
     } else {
      $length_mod = Math_imul($length_mod, HEAP32[6240] | 0) | 0;
     }
    }
    $length_mod = ($length_mod | 0) / 128 | 0;
    if (($length_mod | 0) < 8) {
     $length_mod = 8;
    }
    if (($stress | 0) >= 7) {
     $length_mod = $length_mod + (HEAP32[$1 + 312 >> 2] | 0) | 0;
     if (($emphasized | 0) != 0) {
      $length_mod = $length_mod + ((HEAP32[$1 + 312 >> 2] | 0) / 2 | 0) | 0;
     }
    } else {
     if (($emphasized | 0) != 0) {
      $length_mod = $length_mod + (HEAP32[$1 + 312 >> 2] | 0) | 0;
     }
    }
    $913 = HEAP16[$1 + 424 + ($stress << 1) >> 1] | 0;
    $len = $913;
    if (($913 | 0) == 0) {
     $len = HEAP16[$1 + 436 >> 1] | 0;
    }
    $length_mod = Math_imul($length_mod, $len) | 0;
    if ((HEAPU8[$p + 7 | 0] | 0) != 0) {
     $939 = HEAPU8[(HEAP32[43256 + (HEAPU8[$p + 7 | 0] << 2) >> 2] | 0) + 14 | 0] | 0;
     if (($939 | 0) > 0) {
      $length_mod = (Math_imul($length_mod, $939) | 0) / 100 | 0;
     }
    }
    do {
     if (($end_of_clause | 0) == 2) {
      if ((HEAP32[$1 + 12 >> 2] & 2097152 | 0) != 0) {
       break;
      }
      $len = HEAPU8[(HEAP32[$p + 8 >> 2] | 0) + 14 | 0] << 1;
      if ((HEAP32[$1 + 12 >> 2] & 262144 | 0) != 0) {
       $len = 200;
      }
      $length_mod = (Math_imul($length_mod, ((280 - $len | 0) / 3 | 0) + 256 | 0) | 0) / 256 | 0;
     }
    } while (0);
    if (($length_mod | 0) > (Math_imul(HEAP32[$1 + 308 >> 2] | 0, HEAP32[6244] | 0) | 0)) {
     $length_mod = Math_imul(HEAP32[$1 + 308 >> 2] | 0, HEAP32[6244] | 0) | 0;
    }
    $length_mod = ($length_mod | 0) / 128 | 0;
    if ((HEAPU8[$p + 17 | 0] | 0) != 2) {
     $length_mod = 256;
     $min_drop = 16;
    }
    HEAP32[$p + 12 >> 2] = $length_mod;
    if ((HEAPU8[$p + 16 | 0] | 0) >= 19) {
     _fprintf(HEAP32[_stderr >> 2] | 0, 14344, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 7 & -8, HEAP32[tempVarArgs >> 2] = 0, tempVarArgs) | 0) | 0;
     STACKTOP = tempVarArgs;
     HEAP8[$p + 16 | 0] = 0;
    }
    $env2 = (HEAPU8[$p + 16 | 0] | 0) + 1 | 0;
    if ((HEAPU8[$p + 7 | 0] | 0) != 0) {
     __Z17InterpretPhoneme2iP12PHONEME_DATA(HEAPU8[$p + 7 | 0] | 0, $phdata_tone);
     $pitch_env = __Z11GetEnvelopei(HEAP32[$phdata_tone + 124 >> 2] | 0) | 0;
    } else {
     $pitch_env = HEAP32[6312 + ($env2 << 2) >> 2] | 0;
    }
    $pitch_start = (HEAPU8[$p + 22 | 0] | 0) + ((Math_imul((HEAPU8[$p + 23 | 0] | 0) - (HEAPU8[$p + 22 | 0] | 0) | 0, HEAPU8[$pitch_env | 0] | 0) | 0) / 256 | 0) | 0;
    if (($pre_sonorant | 0) != 0) {
     label = 205;
    } else {
     if (($pre_voiced | 0) != 0) {
      label = 205;
     }
    }
    if ((label | 0) == 205) {
     label = 0;
     if (($pitch_start | 0) == 255) {
      $last_pitch = $pitch_start;
     }
     if (($pitch_start - $last_pitch | 0) > 16) {
      $last_pitch = $pitch_start - 16 | 0;
     }
     HEAP8[$prev + 22 | 0] = $last_pitch;
     HEAP8[$prev + 23 | 0] = $pitch_start;
     if (($last_pitch | 0) < ($pitch_start | 0)) {
      HEAP8[$prev + 16 | 0] = 2;
      HEAP8[$p + 16 | 0] = $env2;
     } else {
      HEAP8[$prev + 16 | 0] = 0;
     }
     HEAP32[$prev + 12 >> 2] = $length_mod;
     HEAP8[$prev + 20 | 0] = HEAP8[$p + 20 | 0] | 0;
     do {
      if ((HEAPU8[$prev + 17 | 0] | 0) != 3) {
       if ((HEAPU8[$prev + 20 | 0] | 0) <= 18) {
        break;
       }
       HEAP8[$prev + 20 | 0] = 18;
      }
     } while (0);
    }
    $1129 = $next | 0;
    HEAP16[$1129 >> 1] = HEAPU16[$1129 >> 1] & -2;
    do {
     if ((HEAPU8[$next + 17 | 0] | 0) == 8) {
      if ((HEAPU8[$next2 + 17 | 0] | 0) == 2) {
       break;
      }
      $1147 = $next | 0;
      HEAP16[$1147 >> 1] = HEAPU16[$1147 >> 1] | 1;
     }
    } while (0);
    if ((HEAPU8[$next + 17 | 0] | 0) == 3) {
     $1160 = $next | 0;
     HEAP16[$1160 >> 1] = HEAPU16[$1160 >> 1] | 1;
     if ((HEAPU8[$next2 + 17 | 0] | 0) == 2) {
      $1172 = $next | 0;
      HEAP16[$1172 >> 1] = HEAPU16[$1172 >> 1] & -2;
     }
     if ((HEAPU8[$next2 + 17 | 0] | 0) != 2) {
      if ((HEAP32[HEAP32[$next + 8 >> 2] >> 2] | 0) == 12146) {
       $1192 = $next | 0;
       HEAP16[$1192 >> 1] = HEAPU16[$1192 >> 1] & -2;
      }
     }
    }
    do {
     if (($min_drop | 0) > 0) {
      if (((HEAPU8[$p + 23 | 0] | 0) - (HEAPU8[$p + 22 | 0] | 0) | 0) >= ($min_drop | 0)) {
       break;
      }
      $pitch1 = (HEAPU8[$p + 23 | 0] | 0) - $min_drop | 0;
      if (($pitch1 | 0) < 0) {
       $pitch1 = 0;
      }
      HEAP8[$p + 22 | 0] = $pitch1;
     }
    } while (0);
    $last_pitch = (HEAPU8[$p + 22 | 0] | 0) + ((Math_imul((HEAPU8[$p + 23 | 0] | 0) - (HEAPU8[$p + 22 | 0] | 0) | 0, HEAPU8[(HEAP32[6312 + (HEAPU8[$p + 16 | 0] << 2) >> 2] | 0) + 127 | 0] | 0) | 0) / 256 | 0) | 0;
    $pre_sonorant = 0;
    $pre_voiced = 0;
    break;
   }
  default:
   {}
  }
  $ix = $ix + 1 | 0;
 }
 STACKTOP = sp;
 return;
}
function _getopt_internal($nargc, $nargv, $options, $long_options, $idx, $flags) {
 $nargc = $nargc | 0;
 $nargv = $nargv | 0;
 $options = $options | 0;
 $long_options = $long_options | 0;
 $idx = $idx | 0;
 $flags = $flags | 0;
 var $3 = 0, $_pre110 = 0, $6 = 0, $10 = 0, $11 = 0, $14 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $_flags = 0, $_0119 = 0, $_0120 = 0, $_060 = 0, $_pr = 0, $31 = 0, $32 = 0, $33 = 0, $37 = 0, $40 = 0, $42 = 0, $44 = 0, $45 = 0, $46 = 0, $c_07_i_i = 0, $_06_i_i = 0, $48 = 0, $_0_lcssa_i_i = 0, $51 = 0, $54 = 0, $59 = 0, $pos_025_us_i = 0, $j_024_us_i = 0, $pos_1_us_i = 0, $61 = 0, $62 = 0, $63 = 0, $i_026_us_i = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $77 = 0, $78 = 0, $82 = 0, $83 = 0, $98 = 0, $102 = 0, $105 = 0, $106 = 0, $107 = 0, $c_07_i_i63 = 0, $_06_i_i64 = 0, $109 = 0, $_0_lcssa_i_i66 = 0, $112 = 0, $115 = 0, $120 = 0, $pos_025_us_i69 = 0, $j_024_us_i70 = 0, $pos_1_us_i72 = 0, $122 = 0, $123 = 0, $124 = 0, $i_026_us_i73 = 0, $126 = 0, $127 = 0, $_pr_pre_pre = 0, $128 = 0, $129 = 0, $130 = 0, $_pr_pre = 0, $134 = 0, $135 = 0, $136 = 0, $138 = 0, $142 = 0, $143 = 0, $153 = 0, $156 = 0, $157 = 0, $158 = 0, $c_07_i_i77 = 0, $_06_i_i78 = 0, $160 = 0, $_0_lcssa_i_i80 = 0, $163 = 0, $166 = 0, $171 = 0, $pos_025_us_i83 = 0, $j_024_us_i84 = 0, $pos_1_us_i86 = 0, $173 = 0, $174 = 0, $175 = 0, $i_026_us_i87 = 0, $177 = 0, $178 = 0, $179 = 0, $180 = 0, $181 = 0, $186 = 0, $187 = 0, $188 = 0, $194 = 0, $short_too_0 = 0, $205 = 0, $209 = 0, $210 = 0, $211 = 0, $212 = 0, $217 = 0, $236 = 0, $243 = 0, $260 = 0, $278 = 0, $_059 = 0, label = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 if (($options | 0) == 0) {
  $_059 = -1;
  STACKTOP = sp;
  return $_059 | 0;
 }
 $3 = HEAP32[1340] | 0;
 if (($3 | 0) == 0) {
  HEAP32[19452] = 1;
  HEAP32[1340] = 1;
  $11 = 1;
  $10 = 1;
  label = 5;
 } else {
  $_pre110 = HEAP32[19452] | 0;
  $6 = HEAP32[1568] | 0;
  if (($6 | 0) == -1 | ($_pre110 | 0) != 0) {
   $11 = $_pre110;
   $10 = $3;
   label = 5;
  } else {
   $18 = $6;
   $17 = $_pre110;
   $16 = $3;
  }
 }
 if ((label | 0) == 5) {
  $14 = (_getenv(9568) | 0) != 0 | 0;
  HEAP32[1568] = $14;
  $18 = $14;
  $17 = $11;
  $16 = $10;
 }
 $19 = HEAP8[$options] | 0;
 if ($19 << 24 >> 24 == 45) {
  $_0119 = $flags | 2;
  label = 9;
 } else {
  $_flags = ($18 | 0) != 0 | $19 << 24 >> 24 == 43 ? $flags & -2 : $flags;
  if ($19 << 24 >> 24 == 43) {
   $_0119 = $_flags;
   label = 9;
  } else {
   $_060 = $options;
   $_0120 = $_flags;
  }
 }
 if ((label | 0) == 9) {
  $_060 = $options + 1 | 0;
  $_0120 = $_0119;
 }
 HEAP32[19548] = 0;
 if (($17 | 0) == 0) {
  $32 = $16;
  label = 13;
 } else {
  HEAP32[1346] = -1;
  HEAP32[1344] = -1;
  $31 = $16;
  $_pr = $17;
  label = 12;
 }
 while (1) {
  if ((label | 0) == 13) {
   label = 0;
   $33 = HEAP32[1224] | 0;
   if ((HEAP8[$33] | 0) == 0) {
    $37 = $32;
   } else {
    $187 = $33;
    $186 = $32;
    break;
   }
  } else if ((label | 0) == 12) {
   label = 0;
   if (($_pr | 0) == 0) {
    $32 = $31;
    label = 13;
    continue;
   } else {
    $37 = $31;
   }
  }
  HEAP32[19452] = 0;
  if (($37 | 0) >= ($nargc | 0)) {
   label = 15;
   break;
  }
  $77 = $nargv + ($37 << 2) | 0;
  $78 = HEAP32[$77 >> 2] | 0;
  HEAP32[1224] = $78;
  if ((HEAP8[$78] | 0) == 45) {
   $82 = $78 + 1 | 0;
   $83 = HEAP8[$82] | 0;
   if ($83 << 24 >> 24 != 0) {
    label = 47;
    break;
   }
   if ((_strchr($_060 | 0, 45) | 0) != 0) {
    label = 47;
    break;
   }
  }
  HEAP32[1224] = 90688;
  if (($_0120 & 2 | 0) != 0) {
   label = 32;
   break;
  }
  if (($_0120 & 1 | 0) == 0) {
   $_059 = -1;
   label = 116;
   break;
  }
  $98 = HEAP32[1344] | 0;
  do {
   if (($98 | 0) == -1) {
    HEAP32[1344] = $37;
    $134 = $37;
    $_pr_pre = 0;
   } else {
    $102 = HEAP32[1346] | 0;
    if (($102 | 0) == -1) {
     $134 = $37;
     $_pr_pre = 0;
     break;
    }
    $105 = $102 - $98 | 0;
    $106 = $37 - $102 | 0;
    $107 = ($105 | 0) % ($106 | 0) | 0;
    if (($107 | 0) == 0) {
     $_0_lcssa_i_i66 = $106;
    } else {
     $_06_i_i64 = $106;
     $c_07_i_i63 = $107;
     while (1) {
      $109 = ($_06_i_i64 | 0) % ($c_07_i_i63 | 0) | 0;
      if (($109 | 0) == 0) {
       $_0_lcssa_i_i66 = $c_07_i_i63;
       break;
      } else {
       $_06_i_i64 = $c_07_i_i63;
       $c_07_i_i63 = $109;
      }
     }
    }
    $112 = ($37 - $98 | 0) / ($_0_lcssa_i_i66 | 0) | 0;
    do {
     if (($_0_lcssa_i_i66 | 0) > 0) {
      $115 = -$105 | 0;
      if (($112 | 0) > 0) {
       $i_026_us_i73 = 0;
      } else {
       $130 = $37;
       $129 = $102;
       $128 = $98;
       $_pr_pre_pre = 0;
       break;
      }
      do {
       $126 = $i_026_us_i73 + $102 | 0;
       $127 = $nargv + ($126 << 2) | 0;
       $j_024_us_i70 = 0;
       $pos_025_us_i69 = $126;
       $120 = HEAP32[$127 >> 2] | 0;
       while (1) {
        $pos_1_us_i72 = (($pos_025_us_i69 | 0) < ($102 | 0) ? $106 : $115) + $pos_025_us_i69 | 0;
        $122 = $nargv + ($pos_1_us_i72 << 2) | 0;
        $123 = HEAP32[$122 >> 2] | 0;
        HEAP32[$122 >> 2] = $120;
        HEAP32[$127 >> 2] = $123;
        $124 = $j_024_us_i70 + 1 | 0;
        if (($124 | 0) < ($112 | 0)) {
         $j_024_us_i70 = $124;
         $pos_025_us_i69 = $pos_1_us_i72;
         $120 = $123;
        } else {
         break;
        }
       }
       $i_026_us_i73 = $i_026_us_i73 + 1 | 0;
      } while (($i_026_us_i73 | 0) < ($_0_lcssa_i_i66 | 0));
      $130 = HEAP32[1340] | 0;
      $129 = HEAP32[1346] | 0;
      $128 = HEAP32[1344] | 0;
      $_pr_pre_pre = HEAP32[19452] | 0;
     } else {
      $130 = $37;
      $129 = $102;
      $128 = $98;
      $_pr_pre_pre = 0;
     }
    } while (0);
    HEAP32[1344] = $130 - $129 + $128;
    HEAP32[1346] = -1;
    $134 = $130;
    $_pr_pre = $_pr_pre_pre;
   }
  } while (0);
  $135 = $134 + 1 | 0;
  HEAP32[1340] = $135;
  $31 = $135;
  $_pr = $_pr_pre;
  label = 12;
 }
 do {
  if ((label | 0) == 47) {
   $136 = HEAP32[1344] | 0;
   $138 = HEAP32[1346] | 0;
   if (($136 | 0) != -1 & ($138 | 0) == -1) {
    HEAP32[1346] = $37;
    $143 = HEAP8[$82] | 0;
    $142 = $37;
   } else {
    $143 = $83;
    $142 = $138;
   }
   if ($143 << 24 >> 24 == 0) {
    $187 = $78;
    $186 = $37;
    break;
   }
   HEAP32[1224] = $82;
   if ((HEAP8[$82] | 0) != 45) {
    $187 = $82;
    $186 = $37;
    break;
   }
   if ((HEAP8[$78 + 2 | 0] | 0) != 0) {
    $187 = $82;
    $186 = $37;
    break;
   }
   $153 = $37 + 1 | 0;
   HEAP32[1340] = $153;
   HEAP32[1224] = 90688;
   if (($142 | 0) != -1) {
    $156 = $142 - $136 | 0;
    $157 = $153 - $142 | 0;
    $158 = ($156 | 0) % ($157 | 0) | 0;
    if (($158 | 0) == 0) {
     $_0_lcssa_i_i80 = $157;
    } else {
     $_06_i_i78 = $157;
     $c_07_i_i77 = $158;
     while (1) {
      $160 = ($_06_i_i78 | 0) % ($c_07_i_i77 | 0) | 0;
      if (($160 | 0) == 0) {
       $_0_lcssa_i_i80 = $c_07_i_i77;
       break;
      } else {
       $_06_i_i78 = $c_07_i_i77;
       $c_07_i_i77 = $160;
      }
     }
    }
    $163 = ($153 - $136 | 0) / ($_0_lcssa_i_i80 | 0) | 0;
    do {
     if (($_0_lcssa_i_i80 | 0) > 0) {
      $166 = -$156 | 0;
      if (($163 | 0) > 0) {
       $i_026_us_i87 = 0;
      } else {
       $181 = $142;
       $180 = $136;
       $179 = $153;
       break;
      }
      do {
       $177 = $i_026_us_i87 + $142 | 0;
       $178 = $nargv + ($177 << 2) | 0;
       $j_024_us_i84 = 0;
       $pos_025_us_i83 = $177;
       $171 = HEAP32[$178 >> 2] | 0;
       while (1) {
        $pos_1_us_i86 = (($pos_025_us_i83 | 0) < ($142 | 0) ? $157 : $166) + $pos_025_us_i83 | 0;
        $173 = $nargv + ($pos_1_us_i86 << 2) | 0;
        $174 = HEAP32[$173 >> 2] | 0;
        HEAP32[$173 >> 2] = $171;
        HEAP32[$178 >> 2] = $174;
        $175 = $j_024_us_i84 + 1 | 0;
        if (($175 | 0) < ($163 | 0)) {
         $j_024_us_i84 = $175;
         $pos_025_us_i83 = $pos_1_us_i86;
         $171 = $174;
        } else {
         break;
        }
       }
       $i_026_us_i87 = $i_026_us_i87 + 1 | 0;
      } while (($i_026_us_i87 | 0) < ($_0_lcssa_i_i80 | 0));
      $181 = HEAP32[1346] | 0;
      $180 = HEAP32[1344] | 0;
      $179 = HEAP32[1340] | 0;
     } else {
      $181 = $142;
      $180 = $136;
      $179 = $153;
     }
    } while (0);
    HEAP32[1340] = $180 - $181 + $179;
   }
   HEAP32[1346] = -1;
   HEAP32[1344] = -1;
   $_059 = -1;
   STACKTOP = sp;
   return $_059 | 0;
  } else if ((label | 0) == 15) {
   HEAP32[1224] = 90688;
   $40 = HEAP32[1346] | 0;
   $42 = HEAP32[1344] | 0;
   do {
    if (($40 | 0) == -1) {
     if (($42 | 0) == -1) {
      break;
     }
     HEAP32[1340] = $42;
    } else {
     $44 = $40 - $42 | 0;
     $45 = $37 - $40 | 0;
     $46 = ($44 | 0) % ($45 | 0) | 0;
     if (($46 | 0) == 0) {
      $_0_lcssa_i_i = $45;
     } else {
      $_06_i_i = $45;
      $c_07_i_i = $46;
      while (1) {
       $48 = ($_06_i_i | 0) % ($c_07_i_i | 0) | 0;
       if (($48 | 0) == 0) {
        $_0_lcssa_i_i = $c_07_i_i;
        break;
       } else {
        $_06_i_i = $c_07_i_i;
        $c_07_i_i = $48;
       }
      }
     }
     $51 = ($37 - $42 | 0) / ($_0_lcssa_i_i | 0) | 0;
     do {
      if (($_0_lcssa_i_i | 0) > 0) {
       $54 = -$44 | 0;
       if (($51 | 0) > 0) {
        $i_026_us_i = 0;
       } else {
        $69 = $40;
        $68 = $42;
        $67 = $37;
        break;
       }
       do {
        $65 = $i_026_us_i + $40 | 0;
        $66 = $nargv + ($65 << 2) | 0;
        $j_024_us_i = 0;
        $pos_025_us_i = $65;
        $59 = HEAP32[$66 >> 2] | 0;
        while (1) {
         $pos_1_us_i = (($pos_025_us_i | 0) < ($40 | 0) ? $45 : $54) + $pos_025_us_i | 0;
         $61 = $nargv + ($pos_1_us_i << 2) | 0;
         $62 = HEAP32[$61 >> 2] | 0;
         HEAP32[$61 >> 2] = $59;
         HEAP32[$66 >> 2] = $62;
         $63 = $j_024_us_i + 1 | 0;
         if (($63 | 0) < ($51 | 0)) {
          $j_024_us_i = $63;
          $pos_025_us_i = $pos_1_us_i;
          $59 = $62;
         } else {
          break;
         }
        }
        $i_026_us_i = $i_026_us_i + 1 | 0;
       } while (($i_026_us_i | 0) < ($_0_lcssa_i_i | 0));
       $69 = HEAP32[1346] | 0;
       $68 = HEAP32[1344] | 0;
       $67 = HEAP32[1340] | 0;
      } else {
       $69 = $40;
       $68 = $42;
       $67 = $37;
      }
     } while (0);
     HEAP32[1340] = $68 - $69 + $67;
    }
   } while (0);
   HEAP32[1346] = -1;
   HEAP32[1344] = -1;
   $_059 = -1;
   STACKTOP = sp;
   return $_059 | 0;
  } else if ((label | 0) == 32) {
   HEAP32[1340] = $37 + 1;
   HEAP32[19548] = HEAP32[$77 >> 2];
   $_059 = 1;
   STACKTOP = sp;
   return $_059 | 0;
  } else if ((label | 0) == 116) {
   STACKTOP = sp;
   return $_059 | 0;
  }
 } while (0);
 $188 = ($long_options | 0) != 0;
 L97 : do {
  if ($188) {
   if (($187 | 0) == (HEAP32[$nargv + ($186 << 2) >> 2] | 0)) {
    $209 = $187;
    break;
   }
   $194 = HEAP8[$187] | 0;
   do {
    if ($194 << 24 >> 24 == 45) {
     HEAP32[1224] = $187 + 1;
     $short_too_0 = 0;
    } else {
     if (($_0120 & 4 | 0) == 0) {
      $209 = $187;
      break L97;
     }
     if ($194 << 24 >> 24 == 58) {
      $short_too_0 = 0;
      break;
     }
     $short_too_0 = (_strchr($_060 | 0, $194 << 24 >> 24 | 0) | 0) != 0 | 0;
    }
   } while (0);
   $205 = _parse_long_options($nargv, $_060, $long_options, $idx, $short_too_0) | 0;
   if (($205 | 0) == -1) {
    $209 = HEAP32[1224] | 0;
    break;
   }
   HEAP32[1224] = 90688;
   $_059 = $205;
   STACKTOP = sp;
   return $_059 | 0;
  } else {
   $209 = $187;
  }
 } while (0);
 $210 = $209 + 1 | 0;
 HEAP32[1224] = $210;
 $211 = HEAP8[$209] | 0;
 $212 = $211 << 24 >> 24;
 if (($211 << 24 >> 24 | 0) == 58) {
  label = 78;
 } else if (($211 << 24 >> 24 | 0) == 45) {
  if ((HEAP8[$210] | 0) == 0) {
   label = 75;
  }
 } else {
  label = 75;
 }
 do {
  if ((label | 0) == 75) {
   $217 = _strchr($_060 | 0, $212 | 0) | 0;
   if (($217 | 0) == 0) {
    if ($211 << 24 >> 24 != 45) {
     label = 78;
     break;
    }
    if ((HEAP8[$210] | 0) == 0) {
     $_059 = -1;
    } else {
     break;
    }
    STACKTOP = sp;
    return $_059 | 0;
   }
   $236 = HEAP8[$217 + 1 | 0] | 0;
   if ($188 & $211 << 24 >> 24 == 87 & $236 << 24 >> 24 == 59) {
    do {
     if ((HEAP8[$210] | 0) == 0) {
      $243 = (HEAP32[1340] | 0) + 1 | 0;
      HEAP32[1340] = $243;
      if (($243 | 0) < ($nargc | 0)) {
       HEAP32[1224] = HEAP32[$nargv + ($243 << 2) >> 2];
       break;
      }
      HEAP32[1224] = 90688;
      do {
       if ((HEAP32[1342] | 0) != 0) {
        if ((HEAP8[$_060] | 0) == 58) {
         break;
        }
        __warnx(4808, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $212, tempVarArgs) | 0);
        STACKTOP = tempVarArgs;
       }
      } while (0);
      HEAP32[1336] = $212;
      $_059 = (HEAP8[$_060] | 0) == 58 ? 58 : 63;
      STACKTOP = sp;
      return $_059 | 0;
     }
    } while (0);
    $260 = _parse_long_options($nargv, $_060, $long_options, $idx, 0) | 0;
    HEAP32[1224] = 90688;
    $_059 = $260;
    STACKTOP = sp;
    return $_059 | 0;
   }
   if ($236 << 24 >> 24 != 58) {
    if ((HEAP8[$210] | 0) != 0) {
     $_059 = $212;
     STACKTOP = sp;
     return $_059 | 0;
    }
    HEAP32[1340] = (HEAP32[1340] | 0) + 1;
    $_059 = $212;
    STACKTOP = sp;
    return $_059 | 0;
   }
   HEAP32[19548] = 0;
   do {
    if ((HEAP8[$210] | 0) == 0) {
     if ((HEAP8[$217 + 2 | 0] | 0) == 58) {
      break;
     }
     $278 = (HEAP32[1340] | 0) + 1 | 0;
     HEAP32[1340] = $278;
     if (($278 | 0) < ($nargc | 0)) {
      HEAP32[19548] = HEAP32[$nargv + ($278 << 2) >> 2];
      break;
     }
     HEAP32[1224] = 90688;
     do {
      if ((HEAP32[1342] | 0) != 0) {
       if ((HEAP8[$_060] | 0) == 58) {
        break;
       }
       __warnx(4808, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $212, tempVarArgs) | 0);
       STACKTOP = tempVarArgs;
      }
     } while (0);
     HEAP32[1336] = $212;
     $_059 = (HEAP8[$_060] | 0) == 58 ? 58 : 63;
     STACKTOP = sp;
     return $_059 | 0;
    } else {
     HEAP32[19548] = $210;
    }
   } while (0);
   HEAP32[1224] = 90688;
   HEAP32[1340] = (HEAP32[1340] | 0) + 1;
   $_059 = $212;
   STACKTOP = sp;
   return $_059 | 0;
  }
 } while (0);
 do {
  if ((label | 0) == 78) {
   if ((HEAP8[$210] | 0) != 0) {
    break;
   }
   HEAP32[1340] = (HEAP32[1340] | 0) + 1;
  }
 } while (0);
 do {
  if ((HEAP32[1342] | 0) != 0) {
   if ((HEAP8[$_060] | 0) == 58) {
    break;
   }
   __warnx(6248, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $212, tempVarArgs) | 0);
   STACKTOP = tempVarArgs;
  }
 } while (0);
 HEAP32[1336] = $212;
 $_059 = 63;
 STACKTOP = sp;
 return $_059 | 0;
}
function _free($mem) {
 $mem = $mem | 0;
 var $3 = 0, $4 = 0, $5 = 0, $10 = 0, $11 = 0, $14 = 0, $15 = 0, $16 = 0, $21 = 0, $_sum232 = 0, $24 = 0, $25 = 0, $26 = 0, $32 = 0, $37 = 0, $40 = 0, $43 = 0, $64 = 0, $_pre_phi306 = 0, $69 = 0, $72 = 0, $75 = 0, $80 = 0, $84 = 0, $88 = 0, $94 = 0, $95 = 0, $99 = 0, $100 = 0, $RP_0 = 0, $R_0 = 0, $102 = 0, $103 = 0, $106 = 0, $107 = 0, $R_1 = 0, $118 = 0, $120 = 0, $134 = 0, $151 = 0, $164 = 0, $177 = 0, $psize_0 = 0, $p_0 = 0, $189 = 0, $193 = 0, $194 = 0, $204 = 0, $215 = 0, $222 = 0, $223 = 0, $228 = 0, $231 = 0, $234 = 0, $257 = 0, $_pre_phi304 = 0, $262 = 0, $265 = 0, $268 = 0, $273 = 0, $278 = 0, $282 = 0, $288 = 0, $289 = 0, $293 = 0, $294 = 0, $RP9_0 = 0, $R7_0 = 0, $296 = 0, $297 = 0, $300 = 0, $301 = 0, $R7_1 = 0, $313 = 0, $315 = 0, $329 = 0, $346 = 0, $359 = 0, $psize_1 = 0, $385 = 0, $388 = 0, $390 = 0, $391 = 0, $392 = 0, $398 = 0, $399 = 0, $_pre_phi = 0, $F16_0 = 0, $409 = 0, $410 = 0, $417 = 0, $418 = 0, $421 = 0, $423 = 0, $426 = 0, $431 = 0, $I18_0 = 0, $438 = 0, $442 = 0, $443 = 0, $458 = 0, $T_0 = 0, $K19_0 = 0, $467 = 0, $468 = 0, $481 = 0, $482 = 0, $484 = 0, $496 = 0, $sp_0_in_i = 0, $sp_0_i = 0, label = 0;
 if (($mem | 0) == 0) {
  return;
 }
 $3 = $mem - 8 | 0;
 $4 = $3;
 $5 = HEAP32[22680] | 0;
 if ($3 >>> 0 < $5 >>> 0) {
  _abort();
 }
 $10 = HEAP32[$mem - 4 >> 2] | 0;
 $11 = $10 & 3;
 if (($11 | 0) == 1) {
  _abort();
 }
 $14 = $10 & -8;
 $15 = $mem + ($14 - 8) | 0;
 $16 = $15;
 L10 : do {
  if (($10 & 1 | 0) == 0) {
   $21 = HEAP32[$3 >> 2] | 0;
   if (($11 | 0) == 0) {
    return;
   }
   $_sum232 = -8 - $21 | 0;
   $24 = $mem + $_sum232 | 0;
   $25 = $24;
   $26 = $21 + $14 | 0;
   if ($24 >>> 0 < $5 >>> 0) {
    _abort();
   }
   if (($25 | 0) == (HEAP32[22681] | 0)) {
    $177 = $mem + ($14 - 4) | 0;
    if ((HEAP32[$177 >> 2] & 3 | 0) != 3) {
     $p_0 = $25;
     $psize_0 = $26;
     break;
    }
    HEAP32[22678] = $26;
    HEAP32[$177 >> 2] = HEAP32[$177 >> 2] & -2;
    HEAP32[$mem + ($_sum232 + 4) >> 2] = $26 | 1;
    HEAP32[$15 >> 2] = $26;
    return;
   }
   $32 = $21 >>> 3;
   if ($21 >>> 0 < 256 >>> 0) {
    $37 = HEAP32[$mem + ($_sum232 + 8) >> 2] | 0;
    $40 = HEAP32[$mem + ($_sum232 + 12) >> 2] | 0;
    $43 = 90744 + ($32 << 1 << 2) | 0;
    do {
     if (($37 | 0) != ($43 | 0)) {
      if ($37 >>> 0 < $5 >>> 0) {
       _abort();
      }
      if ((HEAP32[$37 + 12 >> 2] | 0) == ($25 | 0)) {
       break;
      }
      _abort();
     }
    } while (0);
    if (($40 | 0) == ($37 | 0)) {
     HEAP32[22676] = HEAP32[22676] & ~(1 << $32);
     $p_0 = $25;
     $psize_0 = $26;
     break;
    }
    do {
     if (($40 | 0) == ($43 | 0)) {
      $_pre_phi306 = $40 + 8 | 0;
     } else {
      if ($40 >>> 0 < $5 >>> 0) {
       _abort();
      }
      $64 = $40 + 8 | 0;
      if ((HEAP32[$64 >> 2] | 0) == ($25 | 0)) {
       $_pre_phi306 = $64;
       break;
      }
      _abort();
     }
    } while (0);
    HEAP32[$37 + 12 >> 2] = $40;
    HEAP32[$_pre_phi306 >> 2] = $37;
    $p_0 = $25;
    $psize_0 = $26;
    break;
   }
   $69 = $24;
   $72 = HEAP32[$mem + ($_sum232 + 24) >> 2] | 0;
   $75 = HEAP32[$mem + ($_sum232 + 12) >> 2] | 0;
   do {
    if (($75 | 0) == ($69 | 0)) {
     $94 = $mem + ($_sum232 + 20) | 0;
     $95 = HEAP32[$94 >> 2] | 0;
     if (($95 | 0) == 0) {
      $99 = $mem + ($_sum232 + 16) | 0;
      $100 = HEAP32[$99 >> 2] | 0;
      if (($100 | 0) == 0) {
       $R_1 = 0;
       break;
      } else {
       $R_0 = $100;
       $RP_0 = $99;
      }
     } else {
      $R_0 = $95;
      $RP_0 = $94;
     }
     while (1) {
      $102 = $R_0 + 20 | 0;
      $103 = HEAP32[$102 >> 2] | 0;
      if (($103 | 0) != 0) {
       $R_0 = $103;
       $RP_0 = $102;
       continue;
      }
      $106 = $R_0 + 16 | 0;
      $107 = HEAP32[$106 >> 2] | 0;
      if (($107 | 0) == 0) {
       break;
      } else {
       $R_0 = $107;
       $RP_0 = $106;
      }
     }
     if ($RP_0 >>> 0 < $5 >>> 0) {
      _abort();
     } else {
      HEAP32[$RP_0 >> 2] = 0;
      $R_1 = $R_0;
      break;
     }
    } else {
     $80 = HEAP32[$mem + ($_sum232 + 8) >> 2] | 0;
     if ($80 >>> 0 < $5 >>> 0) {
      _abort();
     }
     $84 = $80 + 12 | 0;
     if ((HEAP32[$84 >> 2] | 0) != ($69 | 0)) {
      _abort();
     }
     $88 = $75 + 8 | 0;
     if ((HEAP32[$88 >> 2] | 0) == ($69 | 0)) {
      HEAP32[$84 >> 2] = $75;
      HEAP32[$88 >> 2] = $80;
      $R_1 = $75;
      break;
     } else {
      _abort();
     }
    }
   } while (0);
   if (($72 | 0) == 0) {
    $p_0 = $25;
    $psize_0 = $26;
    break;
   }
   $118 = $mem + ($_sum232 + 28) | 0;
   $120 = 91008 + (HEAP32[$118 >> 2] << 2) | 0;
   do {
    if (($69 | 0) == (HEAP32[$120 >> 2] | 0)) {
     HEAP32[$120 >> 2] = $R_1;
     if (($R_1 | 0) != 0) {
      break;
     }
     HEAP32[22677] = HEAP32[22677] & ~(1 << HEAP32[$118 >> 2]);
     $p_0 = $25;
     $psize_0 = $26;
     break L10;
    } else {
     if ($72 >>> 0 < (HEAP32[22680] | 0) >>> 0) {
      _abort();
     }
     $134 = $72 + 16 | 0;
     if ((HEAP32[$134 >> 2] | 0) == ($69 | 0)) {
      HEAP32[$134 >> 2] = $R_1;
     } else {
      HEAP32[$72 + 20 >> 2] = $R_1;
     }
     if (($R_1 | 0) == 0) {
      $p_0 = $25;
      $psize_0 = $26;
      break L10;
     }
    }
   } while (0);
   if ($R_1 >>> 0 < (HEAP32[22680] | 0) >>> 0) {
    _abort();
   }
   HEAP32[$R_1 + 24 >> 2] = $72;
   $151 = HEAP32[$mem + ($_sum232 + 16) >> 2] | 0;
   do {
    if (($151 | 0) != 0) {
     if ($151 >>> 0 < (HEAP32[22680] | 0) >>> 0) {
      _abort();
     } else {
      HEAP32[$R_1 + 16 >> 2] = $151;
      HEAP32[$151 + 24 >> 2] = $R_1;
      break;
     }
    }
   } while (0);
   $164 = HEAP32[$mem + ($_sum232 + 20) >> 2] | 0;
   if (($164 | 0) == 0) {
    $p_0 = $25;
    $psize_0 = $26;
    break;
   }
   if ($164 >>> 0 < (HEAP32[22680] | 0) >>> 0) {
    _abort();
   } else {
    HEAP32[$R_1 + 20 >> 2] = $164;
    HEAP32[$164 + 24 >> 2] = $R_1;
    $p_0 = $25;
    $psize_0 = $26;
    break;
   }
  } else {
   $p_0 = $4;
   $psize_0 = $14;
  }
 } while (0);
 $189 = $p_0;
 if ($189 >>> 0 >= $15 >>> 0) {
  _abort();
 }
 $193 = $mem + ($14 - 4) | 0;
 $194 = HEAP32[$193 >> 2] | 0;
 if (($194 & 1 | 0) == 0) {
  _abort();
 }
 do {
  if (($194 & 2 | 0) == 0) {
   if (($16 | 0) == (HEAP32[22682] | 0)) {
    $204 = (HEAP32[22679] | 0) + $psize_0 | 0;
    HEAP32[22679] = $204;
    HEAP32[22682] = $p_0;
    HEAP32[$p_0 + 4 >> 2] = $204 | 1;
    if (($p_0 | 0) != (HEAP32[22681] | 0)) {
     return;
    }
    HEAP32[22681] = 0;
    HEAP32[22678] = 0;
    return;
   }
   if (($16 | 0) == (HEAP32[22681] | 0)) {
    $215 = (HEAP32[22678] | 0) + $psize_0 | 0;
    HEAP32[22678] = $215;
    HEAP32[22681] = $p_0;
    HEAP32[$p_0 + 4 >> 2] = $215 | 1;
    HEAP32[$189 + $215 >> 2] = $215;
    return;
   }
   $222 = ($194 & -8) + $psize_0 | 0;
   $223 = $194 >>> 3;
   L113 : do {
    if ($194 >>> 0 < 256 >>> 0) {
     $228 = HEAP32[$mem + $14 >> 2] | 0;
     $231 = HEAP32[$mem + ($14 | 4) >> 2] | 0;
     $234 = 90744 + ($223 << 1 << 2) | 0;
     do {
      if (($228 | 0) != ($234 | 0)) {
       if ($228 >>> 0 < (HEAP32[22680] | 0) >>> 0) {
        _abort();
       }
       if ((HEAP32[$228 + 12 >> 2] | 0) == ($16 | 0)) {
        break;
       }
       _abort();
      }
     } while (0);
     if (($231 | 0) == ($228 | 0)) {
      HEAP32[22676] = HEAP32[22676] & ~(1 << $223);
      break;
     }
     do {
      if (($231 | 0) == ($234 | 0)) {
       $_pre_phi304 = $231 + 8 | 0;
      } else {
       if ($231 >>> 0 < (HEAP32[22680] | 0) >>> 0) {
        _abort();
       }
       $257 = $231 + 8 | 0;
       if ((HEAP32[$257 >> 2] | 0) == ($16 | 0)) {
        $_pre_phi304 = $257;
        break;
       }
       _abort();
      }
     } while (0);
     HEAP32[$228 + 12 >> 2] = $231;
     HEAP32[$_pre_phi304 >> 2] = $228;
    } else {
     $262 = $15;
     $265 = HEAP32[$mem + ($14 + 16) >> 2] | 0;
     $268 = HEAP32[$mem + ($14 | 4) >> 2] | 0;
     do {
      if (($268 | 0) == ($262 | 0)) {
       $288 = $mem + ($14 + 12) | 0;
       $289 = HEAP32[$288 >> 2] | 0;
       if (($289 | 0) == 0) {
        $293 = $mem + ($14 + 8) | 0;
        $294 = HEAP32[$293 >> 2] | 0;
        if (($294 | 0) == 0) {
         $R7_1 = 0;
         break;
        } else {
         $R7_0 = $294;
         $RP9_0 = $293;
        }
       } else {
        $R7_0 = $289;
        $RP9_0 = $288;
       }
       while (1) {
        $296 = $R7_0 + 20 | 0;
        $297 = HEAP32[$296 >> 2] | 0;
        if (($297 | 0) != 0) {
         $R7_0 = $297;
         $RP9_0 = $296;
         continue;
        }
        $300 = $R7_0 + 16 | 0;
        $301 = HEAP32[$300 >> 2] | 0;
        if (($301 | 0) == 0) {
         break;
        } else {
         $R7_0 = $301;
         $RP9_0 = $300;
        }
       }
       if ($RP9_0 >>> 0 < (HEAP32[22680] | 0) >>> 0) {
        _abort();
       } else {
        HEAP32[$RP9_0 >> 2] = 0;
        $R7_1 = $R7_0;
        break;
       }
      } else {
       $273 = HEAP32[$mem + $14 >> 2] | 0;
       if ($273 >>> 0 < (HEAP32[22680] | 0) >>> 0) {
        _abort();
       }
       $278 = $273 + 12 | 0;
       if ((HEAP32[$278 >> 2] | 0) != ($262 | 0)) {
        _abort();
       }
       $282 = $268 + 8 | 0;
       if ((HEAP32[$282 >> 2] | 0) == ($262 | 0)) {
        HEAP32[$278 >> 2] = $268;
        HEAP32[$282 >> 2] = $273;
        $R7_1 = $268;
        break;
       } else {
        _abort();
       }
      }
     } while (0);
     if (($265 | 0) == 0) {
      break;
     }
     $313 = $mem + ($14 + 20) | 0;
     $315 = 91008 + (HEAP32[$313 >> 2] << 2) | 0;
     do {
      if (($262 | 0) == (HEAP32[$315 >> 2] | 0)) {
       HEAP32[$315 >> 2] = $R7_1;
       if (($R7_1 | 0) != 0) {
        break;
       }
       HEAP32[22677] = HEAP32[22677] & ~(1 << HEAP32[$313 >> 2]);
       break L113;
      } else {
       if ($265 >>> 0 < (HEAP32[22680] | 0) >>> 0) {
        _abort();
       }
       $329 = $265 + 16 | 0;
       if ((HEAP32[$329 >> 2] | 0) == ($262 | 0)) {
        HEAP32[$329 >> 2] = $R7_1;
       } else {
        HEAP32[$265 + 20 >> 2] = $R7_1;
       }
       if (($R7_1 | 0) == 0) {
        break L113;
       }
      }
     } while (0);
     if ($R7_1 >>> 0 < (HEAP32[22680] | 0) >>> 0) {
      _abort();
     }
     HEAP32[$R7_1 + 24 >> 2] = $265;
     $346 = HEAP32[$mem + ($14 + 8) >> 2] | 0;
     do {
      if (($346 | 0) != 0) {
       if ($346 >>> 0 < (HEAP32[22680] | 0) >>> 0) {
        _abort();
       } else {
        HEAP32[$R7_1 + 16 >> 2] = $346;
        HEAP32[$346 + 24 >> 2] = $R7_1;
        break;
       }
      }
     } while (0);
     $359 = HEAP32[$mem + ($14 + 12) >> 2] | 0;
     if (($359 | 0) == 0) {
      break;
     }
     if ($359 >>> 0 < (HEAP32[22680] | 0) >>> 0) {
      _abort();
     } else {
      HEAP32[$R7_1 + 20 >> 2] = $359;
      HEAP32[$359 + 24 >> 2] = $R7_1;
      break;
     }
    }
   } while (0);
   HEAP32[$p_0 + 4 >> 2] = $222 | 1;
   HEAP32[$189 + $222 >> 2] = $222;
   if (($p_0 | 0) != (HEAP32[22681] | 0)) {
    $psize_1 = $222;
    break;
   }
   HEAP32[22678] = $222;
   return;
  } else {
   HEAP32[$193 >> 2] = $194 & -2;
   HEAP32[$p_0 + 4 >> 2] = $psize_0 | 1;
   HEAP32[$189 + $psize_0 >> 2] = $psize_0;
   $psize_1 = $psize_0;
  }
 } while (0);
 $385 = $psize_1 >>> 3;
 if ($psize_1 >>> 0 < 256 >>> 0) {
  $388 = $385 << 1;
  $390 = 90744 + ($388 << 2) | 0;
  $391 = HEAP32[22676] | 0;
  $392 = 1 << $385;
  do {
   if (($391 & $392 | 0) == 0) {
    HEAP32[22676] = $391 | $392;
    $F16_0 = $390;
    $_pre_phi = 90744 + ($388 + 2 << 2) | 0;
   } else {
    $398 = 90744 + ($388 + 2 << 2) | 0;
    $399 = HEAP32[$398 >> 2] | 0;
    if ($399 >>> 0 >= (HEAP32[22680] | 0) >>> 0) {
     $F16_0 = $399;
     $_pre_phi = $398;
     break;
    }
    _abort();
   }
  } while (0);
  HEAP32[$_pre_phi >> 2] = $p_0;
  HEAP32[$F16_0 + 12 >> 2] = $p_0;
  HEAP32[$p_0 + 8 >> 2] = $F16_0;
  HEAP32[$p_0 + 12 >> 2] = $390;
  return;
 }
 $409 = $p_0;
 $410 = $psize_1 >>> 8;
 do {
  if (($410 | 0) == 0) {
   $I18_0 = 0;
  } else {
   if ($psize_1 >>> 0 > 16777215 >>> 0) {
    $I18_0 = 31;
    break;
   }
   $417 = ($410 + 1048320 | 0) >>> 16 & 8;
   $418 = $410 << $417;
   $421 = ($418 + 520192 | 0) >>> 16 & 4;
   $423 = $418 << $421;
   $426 = ($423 + 245760 | 0) >>> 16 & 2;
   $431 = 14 - ($421 | $417 | $426) + ($423 << $426 >>> 15) | 0;
   $I18_0 = $psize_1 >>> (($431 + 7 | 0) >>> 0) & 1 | $431 << 1;
  }
 } while (0);
 $438 = 91008 + ($I18_0 << 2) | 0;
 HEAP32[$p_0 + 28 >> 2] = $I18_0;
 HEAP32[$p_0 + 20 >> 2] = 0;
 HEAP32[$p_0 + 16 >> 2] = 0;
 $442 = HEAP32[22677] | 0;
 $443 = 1 << $I18_0;
 do {
  if (($442 & $443 | 0) == 0) {
   HEAP32[22677] = $442 | $443;
   HEAP32[$438 >> 2] = $409;
   HEAP32[$p_0 + 24 >> 2] = $438;
   HEAP32[$p_0 + 12 >> 2] = $p_0;
   HEAP32[$p_0 + 8 >> 2] = $p_0;
  } else {
   if (($I18_0 | 0) == 31) {
    $458 = 0;
   } else {
    $458 = 25 - ($I18_0 >>> 1) | 0;
   }
   $K19_0 = $psize_1 << $458;
   $T_0 = HEAP32[$438 >> 2] | 0;
   while (1) {
    if ((HEAP32[$T_0 + 4 >> 2] & -8 | 0) == ($psize_1 | 0)) {
     break;
    }
    $467 = $T_0 + 16 + ($K19_0 >>> 31 << 2) | 0;
    $468 = HEAP32[$467 >> 2] | 0;
    if (($468 | 0) == 0) {
     label = 129;
     break;
    } else {
     $K19_0 = $K19_0 << 1;
     $T_0 = $468;
    }
   }
   if ((label | 0) == 129) {
    if ($467 >>> 0 < (HEAP32[22680] | 0) >>> 0) {
     _abort();
    } else {
     HEAP32[$467 >> 2] = $409;
     HEAP32[$p_0 + 24 >> 2] = $T_0;
     HEAP32[$p_0 + 12 >> 2] = $p_0;
     HEAP32[$p_0 + 8 >> 2] = $p_0;
     break;
    }
   }
   $481 = $T_0 + 8 | 0;
   $482 = HEAP32[$481 >> 2] | 0;
   $484 = HEAP32[22680] | 0;
   if ($T_0 >>> 0 < $484 >>> 0) {
    _abort();
   }
   if ($482 >>> 0 < $484 >>> 0) {
    _abort();
   } else {
    HEAP32[$482 + 12 >> 2] = $409;
    HEAP32[$481 >> 2] = $409;
    HEAP32[$p_0 + 8 >> 2] = $482;
    HEAP32[$p_0 + 12 >> 2] = $T_0;
    HEAP32[$p_0 + 24 >> 2] = 0;
    break;
   }
  }
 } while (0);
 $496 = (HEAP32[22684] | 0) - 1 | 0;
 HEAP32[22684] = $496;
 if (($496 | 0) == 0) {
  $sp_0_in_i = 91160;
 } else {
  return;
 }
 while (1) {
  $sp_0_i = HEAP32[$sp_0_in_i >> 2] | 0;
  if (($sp_0_i | 0) == 0) {
   break;
  } else {
   $sp_0_in_i = $sp_0_i + 8 | 0;
  }
 }
 HEAP32[22684] = -1;
 return;
}
function __ZL14ProcessSsmlTagPwPcPiii($xml_buf, $outbuf, $outix, $n_outbuf, $self_closing) {
 $xml_buf = $xml_buf | 0;
 $outbuf = $outbuf | 0;
 $outix = $outix | 0;
 $n_outbuf = $n_outbuf | 0;
 $self_closing = $self_closing | 0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $ix = 0, $index = 0, $c = 0, $tag_type = 0, $value = 0, $value3 = 0, $voice_change_flag = 0, $px = 0, $attr1 = 0, $attr2 = 0, $attr3 = 0, $terminator = 0, $param_type = 0, $tag_name = 0, $buf = 0, $sp = 0, $ssml_sp = 0, $fname = 0, $14 = 0, $44 = 0, $47 = 0, $48 = 0, $57 = 0, $60 = 0, $61 = 0, $123 = 0, $140 = 0, $223 = 0, $224 = 0, $243 = 0, $244 = 0, $248 = 0, $249 = 0, $255 = 0, $267 = 0, $268 = 0, $276 = 0, $288 = 0, $301 = 0, $302 = 0, $311 = 0, $351 = 0, $352 = 0, $361 = 0, $383 = 0, $384 = 0, $410 = 0, $424 = 0, $433 = 0, $438 = 0, $459 = 0, $466 = 0, $499 = 0, $520 = 0, $603 = 0, label = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 376 | 0;
 $tag_name = sp | 0;
 $buf = sp + 40 | 0;
 $fname = sp + 120 | 0;
 $2 = $xml_buf;
 $3 = $outbuf;
 $4 = $outix;
 $5 = $n_outbuf;
 $6 = $self_closing;
 $ix = 0;
 while (1) {
  if ($ix >>> 0 >= 39 >>> 0) {
   break;
  }
  $14 = HEAP32[$2 + ($ix << 2) >> 2] | 0;
  $c = $14;
  if (($14 | 0) == 0) {
   label = 5;
   break;
  }
  if ((_iswspace($c) | 0) != 0) {
   label = 5;
   break;
  }
  HEAP8[$tag_name + $ix | 0] = _tolower(($c & 255) << 24 >> 24 | 0) | 0;
  $ix = $ix + 1 | 0;
 }
 if ((label | 0) == 5) {}
 HEAP8[$tag_name + $ix | 0] = 0;
 $px = $2 + ($ix << 2) | 0;
 if ((HEAP8[$tag_name | 0] | 0) == 47) {
  $44 = __Z10LookupMnemP8MNEM_TABPKc(24472, $tag_name + 1 | 0) | 0;
  $tag_type = $44;
  if (($44 | 0) != 16) {
   $47 = $4;
   $48 = HEAP32[$47 >> 2] | 0;
   HEAP32[$47 >> 2] = $48 + 1;
   HEAP8[$3 + $48 | 0] = 32;
  }
  $tag_type = $tag_type + 32 | 0;
 } else {
  $57 = __Z10LookupMnemP8MNEM_TABPKc(24472, $tag_name | 0) | 0;
  $tag_type = $57;
  if (($57 | 0) != 16) {
   $60 = $4;
   $61 = HEAP32[$60 >> 2] | 0;
   HEAP32[$60 >> 2] = $61 + 1;
   HEAP8[$3 + $61 | 0] = 32;
  }
  do {
   if (($6 | 0) != 0) {
    if ((HEAP8[25680 + $tag_type | 0] | 0) == 0) {
     break;
    }
    $1 = 0;
    $603 = $1;
    STACKTOP = sp;
    return $603 | 0;
   }
  } while (0);
 }
 $voice_change_flag = 0;
 $terminator = 16384;
 $ssml_sp = 123744 + (((HEAP32[28538] | 0) - 1 | 0) * 76 | 0) | 0;
 L25 : do {
  switch ($tag_type | 0) {
  case 36:
   {
    if ((HEAP32[31316] | 0) == 36) {
     HEAP8[$3 + (HEAP32[$4 >> 2] | 0) | 0] = 0;
     __ZL14ReplaceKeyNamePciPi($3, HEAP32[28846] | 0, $4) | 0;
    }
    $243 = $4;
    $244 = HEAP32[$243 >> 2] | 0;
    HEAP32[$243 >> 2] = $244 + 1;
    HEAP8[$3 + $244 | 0] = 1;
    $248 = $4;
    $249 = HEAP32[$248 >> 2] | 0;
    HEAP32[$248 >> 2] = $249 + 1;
    HEAP8[$3 + $249 | 0] = 89;
    HEAP32[31316] = 0;
    break;
   }
  case 3:
   {
    $sp = __ZL14PushParamStacki($tag_type) | 0;
    $param_type = 1;
    while (1) {
     if (($param_type | 0) > 4) {
      break;
     }
     $123 = __ZL16GetSsmlAttributePwPKc($px, HEAP32[20136 + ($param_type << 2) >> 2] | 0) | 0;
     $attr1 = $123;
     if (($123 | 0) != 0) {
      __ZL19SetProsodyParameteriPwP11PARAM_STACK($param_type, $attr1, $sp);
     }
     $param_type = $param_type + 1 | 0;
    }
    __ZL17ProcessParamStackPcPi($3, $4);
    break;
   }
  case 38:
   {
    if ((HEAP32[$ssml_sp >> 2] | 0) == 6) {
     $voice_change_flag = __ZL18GetVoiceAttributesPwi($px, $tag_type) | 0;
    }
    $1 = $voice_change_flag + 524328 | 0;
    $603 = $1;
    STACKTOP = sp;
    return $603 | 0;
   }
  case 39:
   {
    do {
     if ((HEAP32[$ssml_sp >> 2] | 0) != 6) {
      if ((HEAP32[$ssml_sp >> 2] | 0) == 7) {
       break;
      }
      $1 = 524358;
      $603 = $1;
      STACKTOP = sp;
      return $603 | 0;
     }
    } while (0);
    $1 = (__ZL18GetVoiceAttributesPwi($px, $tag_type) | 0) + 524358 | 0;
    $603 = $1;
    STACKTOP = sp;
    return $603 | 0;
   }
  case 12:
   {
    $sp = __ZL14PushParamStacki($tag_type) | 0;
    $value = 3;
    $140 = __ZL16GetSsmlAttributePwPKc($px, 10264) | 0;
    $attr1 = $140;
    if (($140 | 0) != 0) {
     $value = __ZL10attrlookupPKwPK8MNEM_TAB($attr1, 20048) | 0;
    }
    if ((HEAP32[(HEAP32[9112] | 0) + 244 >> 2] | 0) == 1) {
     HEAP32[$sp + 20 >> 2] = HEAPU8[19960 + $value | 0] | 0;
     HEAP32[$sp + 12 >> 2] = HEAPU8[19976 + $value | 0] | 0;
    } else {
     HEAP32[$sp + 12 >> 2] = HEAPU8[19968 + $value | 0] | 0;
     HEAP32[$sp + 52 >> 2] = $value;
    }
    __ZL17ProcessParamStackPcPi($3, $4);
    break;
   }
  case 10:
   {
    $sp = __ZL14PushParamStacki($tag_type) | 0;
    $attr1 = __ZL16GetSsmlAttributePwPKc($px, 10536) | 0;
    $attr2 = __ZL16GetSsmlAttributePwPKc($px, 10408) | 0;
    if ((__ZL7attrcmpPKwPKc($attr1, 10360) | 0) == 0) {
     $value = __ZL10attrlookupPKwPK8MNEM_TAB($attr2, 20184) | 0;
     HEAP32[$sp + 24 >> 2] = $value;
    } else {
     if ((__ZL7attrcmpPKwPKc($attr1, 10304) | 0) == 0) {
      $value = __ZL10attrlookupPKwPK8MNEM_TAB($attr2, 20096) | 0;
      HEAP32[$sp + 28 >> 2] = $value;
     }
    }
    __ZL17ProcessParamStackPcPi($3, $4);
    break;
   }
  case 43:
   {
    __ZL13PopParamStackiPcPi($tag_type, $3, $4);
    HEAP32[32078] = 0;
    $1 = 16384;
    $603 = $1;
    STACKTOP = sp;
    return $603 | 0;
   }
  case 13:
   {
    $value = 21;
    $terminator = 16384;
    $410 = __ZL16GetSsmlAttributePwPKc($px, 9464) | 0;
    $attr1 = $410;
    if (($410 | 0) != 0) {
     $value = __ZL10attrlookupPKwPK8MNEM_TAB($attr1, 20216) | 0;
     if (($value | 0) < 3) {
      _sprintf($3 + (HEAP32[$4 >> 2] | 0) | 0, 9416, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = 1, HEAP32[tempVarArgs + 8 >> 2] = $value, tempVarArgs) | 0) | 0;
      STACKTOP = tempVarArgs;
      $424 = $4;
      HEAP32[$424 >> 2] = (HEAP32[$424 >> 2] | 0) + 3;
      $terminator = 0;
     }
     $value = HEAP32[20160 + ($value << 2) >> 2] | 0;
    }
    $433 = __ZL16GetSsmlAttributePwPKc($px, 9352) | 0;
    $attr2 = $433;
    if (($433 | 0) != 0) {
     $438 = (__ZL10attrnumberPKwii($attr2, 0, 1) | 0) * 25 | 0;
     $value = ($438 | 0) / (HEAP32[9114] | 0) | 0;
     if (($terminator | 0) == 0) {
      $terminator = 16384;
     }
    }
    if (($terminator | 0) == 0) {
     break L25;
    }
    if (($value | 0) > 4095) {
     $value = 4095;
    }
    $1 = $terminator + $value | 0;
    $603 = $1;
    STACKTOP = sp;
    return $603 | 0;
   }
  case 9:
   {
    $255 = __ZL16GetSsmlAttributePwPKc($px, 9952) | 0;
    $attr1 = $255;
    if (($255 | 0) != 0) {
     HEAP32[28870] = 1;
     $267 = __ZL13attrcopy_utf8PcPKwi($3 + (HEAP32[$4 >> 2] | 0) | 0, $attr1, $5 - (HEAP32[$4 >> 2] | 0) | 0) | 0;
     $268 = $4;
     HEAP32[$268 >> 2] = (HEAP32[$268 >> 2] | 0) + $267;
    }
    break;
   }
  case 34:
   {
    while (1) {
     if ((HEAP32[28538] | 0) > 1) {
      $520 = (HEAP32[123744 + (((HEAP32[28538] | 0) - 1 | 0) * 76 | 0) >> 2] | 0) != 2;
     } else {
      $520 = 0;
     }
     if (!$520) {
      break;
     }
     HEAP32[28538] = (HEAP32[28538] | 0) - 1;
    }
    $terminator = 0;
    $1 = $terminator + (__ZL18GetVoiceAttributesPwi($px, $tag_type) | 0) | 0;
    $603 = $1;
    STACKTOP = sp;
    return $603 | 0;
   }
  case 14:
   {
    HEAP32[28870] = 1;
    break;
   }
  case 41:
  case 46:
   {
    HEAP32[28870] = 0;
    break;
   }
  case 5:
   {
    $276 = __ZL16GetSsmlAttributePwPKc($px, 9904) | 0;
    $attr1 = $276;
    if (($276 | 0) != 0) {
     __ZL13attrcopy_utf8PcPKwi($buf | 0, $attr1, 80) | 0;
     if ((_strcmp(37824, $buf | 0) | 0) == 0) {
      HEAP32[28396] = 1;
      HEAP8[37824] = 0;
      $1 = 16384;
      $603 = $1;
      STACKTOP = sp;
      return $603 | 0;
     }
     $288 = __Z11AddNameDataPKci($buf | 0, 0) | 0;
     $index = $288;
     if (($288 | 0) >= 0) {
      _sprintf($buf | 0, 9752, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = 1, HEAP32[tempVarArgs + 8 >> 2] = $index, tempVarArgs) | 0) | 0;
      STACKTOP = tempVarArgs;
      _strcpy($3 + (HEAP32[$4 >> 2] | 0) | 0, $buf | 0) | 0;
      $301 = _strlen($buf | 0) | 0;
      $302 = $4;
      HEAP32[$302 >> 2] = (HEAP32[$302 >> 2] | 0) + $301;
     }
    }
    break;
   }
  case 2:
   {
    if ((__ZL18GetVoiceAttributesPwi($px, $tag_type) | 0) == 0) {
     $1 = 0;
     $603 = $1;
     STACKTOP = sp;
     return $603 | 0;
    } else {
     $1 = 147456;
     $603 = $1;
     STACKTOP = sp;
     return $603 | 0;
    }
    break;
   }
  case 33:
   {
    while (1) {
     if ((HEAP32[28538] | 0) > 1) {
      $499 = (HEAP32[123744 + (((HEAP32[28538] | 0) - 1 | 0) * 76 | 0) >> 2] | 0) != 1;
     } else {
      $499 = 0;
     }
     if (!$499) {
      break;
     }
     HEAP32[28538] = (HEAP32[28538] | 0) - 1;
    }
    $1 = (__ZL18GetVoiceAttributesPwi($px, $tag_type) | 0) + 524328 | 0;
    $603 = $1;
    STACKTOP = sp;
    return $603 | 0;
   }
  case 42:
  case 35:
  case 44:
   {
    __ZL13PopParamStackiPcPi($tag_type, $3, $4);
    break;
   }
  case 4:
   {
    $attr1 = __ZL16GetSsmlAttributePwPKc($px, 10160) | 0;
    $attr2 = __ZL16GetSsmlAttributePwPKc($px, 10120) | 0;
    $attr3 = __ZL16GetSsmlAttributePwPKc($px, 10072) | 0;
    $value = __ZL10attrlookupPKwPK8MNEM_TAB($attr1, 2e4) | 0;
    if ((__ZL10attrlookupPKwPK8MNEM_TAB($attr2, 19984) | 0) == 1) {
     $value = 19;
    }
    $value3 = __ZL10attrnumberPKwii($attr3, 0, 0) | 0;
    if (($value | 0) == 64) {
     if (($value3 | 0) <= 1) {
      $value = 193;
     } else {
      $value = $value3 + 64 | 0;
     }
    }
    _sprintf($buf | 0, 1e4, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = 1, HEAP32[tempVarArgs + 8 >> 2] = $value, tempVarArgs) | 0) | 0;
    STACKTOP = tempVarArgs;
    _strcpy($3 + (HEAP32[$4 >> 2] | 0) | 0, $buf | 0) | 0;
    $223 = _strlen($buf | 0) | 0;
    $224 = $4;
    HEAP32[$224 >> 2] = (HEAP32[$224 >> 2] | 0) + $223;
    HEAP32[28846] = HEAP32[$4 >> 2];
    HEAP32[31316] = $value;
    break;
   }
  case 15:
  case 47:
   {
    $1 = 262174;
    $603 = $1;
    STACKTOP = sp;
    return $603 | 0;
   }
  case 6:
   {
    if ((HEAP32[$ssml_sp >> 2] | 0) == 6) {
     $voice_change_flag = __ZL18GetVoiceAttributesPwi($px, 38) | 0;
    }
    $voice_change_flag = $voice_change_flag | (__ZL18GetVoiceAttributesPwi($px, $tag_type) | 0);
    $1 = $voice_change_flag + 524358 | 0;
    $603 = $1;
    STACKTOP = sp;
    return $603 | 0;
   }
  case 7:
   {
    if ((HEAP32[$ssml_sp >> 2] | 0) == 6) {
     $voice_change_flag = __ZL18GetVoiceAttributesPwi($px, 38) | 0;
    }
    if ((HEAP32[$ssml_sp >> 2] | 0) == 7) {
     $voice_change_flag = $voice_change_flag | (__ZL18GetVoiceAttributesPwi($px, 39) | 0);
    }
    $voice_change_flag = $voice_change_flag | (__ZL18GetVoiceAttributesPwi($px, $tag_type) | 0);
    $1 = $voice_change_flag + 524358 | 0;
    $603 = $1;
    STACKTOP = sp;
    return $603 | 0;
   }
  case 1:
   {
    $459 = __ZL16GetSsmlAttributePwPKc($px, 9304) | 0;
    $attr1 = $459;
    if (($459 | 0) != 0) {
     __ZL13attrcopy_utf8PcPKwi($buf | 0, $attr1, 80) | 0;
     $466 = __Z11AddNameDataPKci($buf | 0, 0) | 0;
     $index = $466;
     if (($466 | 0) >= 0) {
      HEAP32[6230] = (HEAP32[19552] | 0) + $index;
     }
    }
    if ((__ZL18GetVoiceAttributesPwi($px, $tag_type) | 0) == 0) {
     $1 = 0;
     $603 = $1;
     STACKTOP = sp;
     return $603 | 0;
    } else {
     $1 = 147456;
     $603 = $1;
     STACKTOP = sp;
     return $603 | 0;
    }
    break;
   }
  case 11:
   {
    $sp = __ZL14PushParamStacki($tag_type) | 0;
    $311 = __ZL16GetSsmlAttributePwPKc($px, 9712) | 0;
    $attr1 = $311;
    if (($311 | 0) != 0) {
     __ZL13attrcopy_utf8PcPKwi($buf | 0, $attr1, 80) | 0;
     if ((HEAP32[9106] | 0) == 0) {
      do {
       if ((HEAP32[6230] | 0) != 0) {
        if ((HEAP8[$buf | 0] | 0) == 47) {
         label = 67;
         break;
        }
        _sprintf($fname | 0, 9632, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = HEAP32[6230], HEAP32[tempVarArgs + 8 >> 2] = $buf, tempVarArgs) | 0) | 0;
        STACKTOP = tempVarArgs;
        $index = __ZL14LoadSoundFile2PKc($fname | 0) | 0;
       } else {
        label = 67;
       }
      } while (0);
      if ((label | 0) == 67) {
       $index = __ZL14LoadSoundFile2PKc($buf | 0) | 0;
      }
      if (($index | 0) >= 0) {
       _sprintf($buf | 0, 9600, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = 1, HEAP32[tempVarArgs + 8 >> 2] = $index, tempVarArgs) | 0) | 0;
       STACKTOP = tempVarArgs;
       _strcpy($3 + (HEAP32[$4 >> 2] | 0) | 0, $buf | 0) | 0;
       $351 = _strlen($buf | 0) | 0;
       $352 = $4;
       HEAP32[$352 >> 2] = (HEAP32[$352 >> 2] | 0) + $351;
       HEAP32[$sp + 4 >> 2] = 1;
      }
     } else {
      $361 = __Z11AddNameDataPKci($buf | 0, 0) | 0;
      $index = $361;
      if (($361 | 0) >= 0) {
       if ((FUNCTION_TABLE_iiii[HEAP32[9106] & 1](1, (HEAP32[19552] | 0) + $index | 0, HEAP32[6230] | 0) | 0) == 0) {
        _sprintf($buf | 0, 9520, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = 1, HEAP32[tempVarArgs + 8 >> 2] = $index, tempVarArgs) | 0) | 0;
        STACKTOP = tempVarArgs;
        _strcpy($3 + (HEAP32[$4 >> 2] | 0) | 0, $buf | 0) | 0;
        $383 = _strlen($buf | 0) | 0;
        $384 = $4;
        HEAP32[$384 >> 2] = (HEAP32[$384 >> 2] | 0) + $383;
        HEAP32[$sp + 4 >> 2] = 1;
       }
      }
     }
    }
    __ZL17ProcessParamStackPcPi($3, $4);
    if (($6 | 0) != 0) {
     __ZL13PopParamStackiPcPi($tag_type, $3, $4);
    } else {
     HEAP32[32078] = 1;
    }
    $1 = 16384;
    $603 = $1;
    STACKTOP = sp;
    return $603 | 0;
   }
  default:
   {}
  }
 } while (0);
 $1 = 0;
 $603 = $1;
 STACKTOP = sp;
 return $603 | 0;
}
function _dispose_chunk($p, $psize) {
 $p = $p | 0;
 $psize = $psize | 0;
 var $1 = 0, $2 = 0, $3 = 0, $5 = 0, $10 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $24 = 0, $29 = 0, $32 = 0, $35 = 0, $56 = 0, $_pre_phi63 = 0, $61 = 0, $64 = 0, $67 = 0, $72 = 0, $76 = 0, $80 = 0, $_sum28 = 0, $86 = 0, $87 = 0, $91 = 0, $92 = 0, $RP_0 = 0, $R_0 = 0, $94 = 0, $95 = 0, $98 = 0, $99 = 0, $R_1 = 0, $110 = 0, $112 = 0, $126 = 0, $_sum31 = 0, $143 = 0, $156 = 0, $169 = 0, $_0277 = 0, $_0 = 0, $181 = 0, $185 = 0, $186 = 0, $194 = 0, $205 = 0, $213 = 0, $214 = 0, $219 = 0, $222 = 0, $225 = 0, $246 = 0, $_pre_phi61 = 0, $251 = 0, $254 = 0, $257 = 0, $262 = 0, $266 = 0, $270 = 0, $276 = 0, $277 = 0, $281 = 0, $282 = 0, $RP9_0 = 0, $R7_0 = 0, $284 = 0, $285 = 0, $288 = 0, $289 = 0, $R7_1 = 0, $300 = 0, $302 = 0, $316 = 0, $333 = 0, $346 = 0, $_1 = 0, $374 = 0, $377 = 0, $379 = 0, $380 = 0, $381 = 0, $387 = 0, $388 = 0, $_pre_phi = 0, $F16_0 = 0, $398 = 0, $399 = 0, $406 = 0, $407 = 0, $410 = 0, $412 = 0, $415 = 0, $420 = 0, $I19_0 = 0, $427 = 0, $431 = 0, $432 = 0, $447 = 0, $T_0 = 0, $K20_0 = 0, $456 = 0, $457 = 0, $470 = 0, $471 = 0, $473 = 0, label = 0;
 $1 = $p;
 $2 = $1 + $psize | 0;
 $3 = $2;
 $5 = HEAP32[$p + 4 >> 2] | 0;
 L1 : do {
  if (($5 & 1 | 0) == 0) {
   $10 = HEAP32[$p >> 2] | 0;
   if (($5 & 3 | 0) == 0) {
    return;
   }
   $15 = $1 + (-$10 | 0) | 0;
   $16 = $15;
   $17 = $10 + $psize | 0;
   $18 = HEAP32[22680] | 0;
   if ($15 >>> 0 < $18 >>> 0) {
    _abort();
   }
   if (($16 | 0) == (HEAP32[22681] | 0)) {
    $169 = $1 + ($psize + 4) | 0;
    if ((HEAP32[$169 >> 2] & 3 | 0) != 3) {
     $_0 = $16;
     $_0277 = $17;
     break;
    }
    HEAP32[22678] = $17;
    HEAP32[$169 >> 2] = HEAP32[$169 >> 2] & -2;
    HEAP32[$1 + (4 - $10) >> 2] = $17 | 1;
    HEAP32[$2 >> 2] = $17;
    return;
   }
   $24 = $10 >>> 3;
   if ($10 >>> 0 < 256 >>> 0) {
    $29 = HEAP32[$1 + (8 - $10) >> 2] | 0;
    $32 = HEAP32[$1 + (12 - $10) >> 2] | 0;
    $35 = 90744 + ($24 << 1 << 2) | 0;
    do {
     if (($29 | 0) != ($35 | 0)) {
      if ($29 >>> 0 < $18 >>> 0) {
       _abort();
      }
      if ((HEAP32[$29 + 12 >> 2] | 0) == ($16 | 0)) {
       break;
      }
      _abort();
     }
    } while (0);
    if (($32 | 0) == ($29 | 0)) {
     HEAP32[22676] = HEAP32[22676] & ~(1 << $24);
     $_0 = $16;
     $_0277 = $17;
     break;
    }
    do {
     if (($32 | 0) == ($35 | 0)) {
      $_pre_phi63 = $32 + 8 | 0;
     } else {
      if ($32 >>> 0 < $18 >>> 0) {
       _abort();
      }
      $56 = $32 + 8 | 0;
      if ((HEAP32[$56 >> 2] | 0) == ($16 | 0)) {
       $_pre_phi63 = $56;
       break;
      }
      _abort();
     }
    } while (0);
    HEAP32[$29 + 12 >> 2] = $32;
    HEAP32[$_pre_phi63 >> 2] = $29;
    $_0 = $16;
    $_0277 = $17;
    break;
   }
   $61 = $15;
   $64 = HEAP32[$1 + (24 - $10) >> 2] | 0;
   $67 = HEAP32[$1 + (12 - $10) >> 2] | 0;
   do {
    if (($67 | 0) == ($61 | 0)) {
     $_sum28 = 16 - $10 | 0;
     $86 = $1 + ($_sum28 + 4) | 0;
     $87 = HEAP32[$86 >> 2] | 0;
     if (($87 | 0) == 0) {
      $91 = $1 + $_sum28 | 0;
      $92 = HEAP32[$91 >> 2] | 0;
      if (($92 | 0) == 0) {
       $R_1 = 0;
       break;
      } else {
       $R_0 = $92;
       $RP_0 = $91;
      }
     } else {
      $R_0 = $87;
      $RP_0 = $86;
     }
     while (1) {
      $94 = $R_0 + 20 | 0;
      $95 = HEAP32[$94 >> 2] | 0;
      if (($95 | 0) != 0) {
       $R_0 = $95;
       $RP_0 = $94;
       continue;
      }
      $98 = $R_0 + 16 | 0;
      $99 = HEAP32[$98 >> 2] | 0;
      if (($99 | 0) == 0) {
       break;
      } else {
       $R_0 = $99;
       $RP_0 = $98;
      }
     }
     if ($RP_0 >>> 0 < $18 >>> 0) {
      _abort();
     } else {
      HEAP32[$RP_0 >> 2] = 0;
      $R_1 = $R_0;
      break;
     }
    } else {
     $72 = HEAP32[$1 + (8 - $10) >> 2] | 0;
     if ($72 >>> 0 < $18 >>> 0) {
      _abort();
     }
     $76 = $72 + 12 | 0;
     if ((HEAP32[$76 >> 2] | 0) != ($61 | 0)) {
      _abort();
     }
     $80 = $67 + 8 | 0;
     if ((HEAP32[$80 >> 2] | 0) == ($61 | 0)) {
      HEAP32[$76 >> 2] = $67;
      HEAP32[$80 >> 2] = $72;
      $R_1 = $67;
      break;
     } else {
      _abort();
     }
    }
   } while (0);
   if (($64 | 0) == 0) {
    $_0 = $16;
    $_0277 = $17;
    break;
   }
   $110 = $1 + (28 - $10) | 0;
   $112 = 91008 + (HEAP32[$110 >> 2] << 2) | 0;
   do {
    if (($61 | 0) == (HEAP32[$112 >> 2] | 0)) {
     HEAP32[$112 >> 2] = $R_1;
     if (($R_1 | 0) != 0) {
      break;
     }
     HEAP32[22677] = HEAP32[22677] & ~(1 << HEAP32[$110 >> 2]);
     $_0 = $16;
     $_0277 = $17;
     break L1;
    } else {
     if ($64 >>> 0 < (HEAP32[22680] | 0) >>> 0) {
      _abort();
     }
     $126 = $64 + 16 | 0;
     if ((HEAP32[$126 >> 2] | 0) == ($61 | 0)) {
      HEAP32[$126 >> 2] = $R_1;
     } else {
      HEAP32[$64 + 20 >> 2] = $R_1;
     }
     if (($R_1 | 0) == 0) {
      $_0 = $16;
      $_0277 = $17;
      break L1;
     }
    }
   } while (0);
   if ($R_1 >>> 0 < (HEAP32[22680] | 0) >>> 0) {
    _abort();
   }
   HEAP32[$R_1 + 24 >> 2] = $64;
   $_sum31 = 16 - $10 | 0;
   $143 = HEAP32[$1 + $_sum31 >> 2] | 0;
   do {
    if (($143 | 0) != 0) {
     if ($143 >>> 0 < (HEAP32[22680] | 0) >>> 0) {
      _abort();
     } else {
      HEAP32[$R_1 + 16 >> 2] = $143;
      HEAP32[$143 + 24 >> 2] = $R_1;
      break;
     }
    }
   } while (0);
   $156 = HEAP32[$1 + ($_sum31 + 4) >> 2] | 0;
   if (($156 | 0) == 0) {
    $_0 = $16;
    $_0277 = $17;
    break;
   }
   if ($156 >>> 0 < (HEAP32[22680] | 0) >>> 0) {
    _abort();
   } else {
    HEAP32[$R_1 + 20 >> 2] = $156;
    HEAP32[$156 + 24 >> 2] = $R_1;
    $_0 = $16;
    $_0277 = $17;
    break;
   }
  } else {
   $_0 = $p;
   $_0277 = $psize;
  }
 } while (0);
 $181 = HEAP32[22680] | 0;
 if ($2 >>> 0 < $181 >>> 0) {
  _abort();
 }
 $185 = $1 + ($psize + 4) | 0;
 $186 = HEAP32[$185 >> 2] | 0;
 do {
  if (($186 & 2 | 0) == 0) {
   if (($3 | 0) == (HEAP32[22682] | 0)) {
    $194 = (HEAP32[22679] | 0) + $_0277 | 0;
    HEAP32[22679] = $194;
    HEAP32[22682] = $_0;
    HEAP32[$_0 + 4 >> 2] = $194 | 1;
    if (($_0 | 0) != (HEAP32[22681] | 0)) {
     return;
    }
    HEAP32[22681] = 0;
    HEAP32[22678] = 0;
    return;
   }
   if (($3 | 0) == (HEAP32[22681] | 0)) {
    $205 = (HEAP32[22678] | 0) + $_0277 | 0;
    HEAP32[22678] = $205;
    HEAP32[22681] = $_0;
    HEAP32[$_0 + 4 >> 2] = $205 | 1;
    HEAP32[$_0 + $205 >> 2] = $205;
    return;
   }
   $213 = ($186 & -8) + $_0277 | 0;
   $214 = $186 >>> 3;
   L100 : do {
    if ($186 >>> 0 < 256 >>> 0) {
     $219 = HEAP32[$1 + ($psize + 8) >> 2] | 0;
     $222 = HEAP32[$1 + ($psize + 12) >> 2] | 0;
     $225 = 90744 + ($214 << 1 << 2) | 0;
     do {
      if (($219 | 0) != ($225 | 0)) {
       if ($219 >>> 0 < $181 >>> 0) {
        _abort();
       }
       if ((HEAP32[$219 + 12 >> 2] | 0) == ($3 | 0)) {
        break;
       }
       _abort();
      }
     } while (0);
     if (($222 | 0) == ($219 | 0)) {
      HEAP32[22676] = HEAP32[22676] & ~(1 << $214);
      break;
     }
     do {
      if (($222 | 0) == ($225 | 0)) {
       $_pre_phi61 = $222 + 8 | 0;
      } else {
       if ($222 >>> 0 < $181 >>> 0) {
        _abort();
       }
       $246 = $222 + 8 | 0;
       if ((HEAP32[$246 >> 2] | 0) == ($3 | 0)) {
        $_pre_phi61 = $246;
        break;
       }
       _abort();
      }
     } while (0);
     HEAP32[$219 + 12 >> 2] = $222;
     HEAP32[$_pre_phi61 >> 2] = $219;
    } else {
     $251 = $2;
     $254 = HEAP32[$1 + ($psize + 24) >> 2] | 0;
     $257 = HEAP32[$1 + ($psize + 12) >> 2] | 0;
     do {
      if (($257 | 0) == ($251 | 0)) {
       $276 = $1 + ($psize + 20) | 0;
       $277 = HEAP32[$276 >> 2] | 0;
       if (($277 | 0) == 0) {
        $281 = $1 + ($psize + 16) | 0;
        $282 = HEAP32[$281 >> 2] | 0;
        if (($282 | 0) == 0) {
         $R7_1 = 0;
         break;
        } else {
         $R7_0 = $282;
         $RP9_0 = $281;
        }
       } else {
        $R7_0 = $277;
        $RP9_0 = $276;
       }
       while (1) {
        $284 = $R7_0 + 20 | 0;
        $285 = HEAP32[$284 >> 2] | 0;
        if (($285 | 0) != 0) {
         $R7_0 = $285;
         $RP9_0 = $284;
         continue;
        }
        $288 = $R7_0 + 16 | 0;
        $289 = HEAP32[$288 >> 2] | 0;
        if (($289 | 0) == 0) {
         break;
        } else {
         $R7_0 = $289;
         $RP9_0 = $288;
        }
       }
       if ($RP9_0 >>> 0 < $181 >>> 0) {
        _abort();
       } else {
        HEAP32[$RP9_0 >> 2] = 0;
        $R7_1 = $R7_0;
        break;
       }
      } else {
       $262 = HEAP32[$1 + ($psize + 8) >> 2] | 0;
       if ($262 >>> 0 < $181 >>> 0) {
        _abort();
       }
       $266 = $262 + 12 | 0;
       if ((HEAP32[$266 >> 2] | 0) != ($251 | 0)) {
        _abort();
       }
       $270 = $257 + 8 | 0;
       if ((HEAP32[$270 >> 2] | 0) == ($251 | 0)) {
        HEAP32[$266 >> 2] = $257;
        HEAP32[$270 >> 2] = $262;
        $R7_1 = $257;
        break;
       } else {
        _abort();
       }
      }
     } while (0);
     if (($254 | 0) == 0) {
      break;
     }
     $300 = $1 + ($psize + 28) | 0;
     $302 = 91008 + (HEAP32[$300 >> 2] << 2) | 0;
     do {
      if (($251 | 0) == (HEAP32[$302 >> 2] | 0)) {
       HEAP32[$302 >> 2] = $R7_1;
       if (($R7_1 | 0) != 0) {
        break;
       }
       HEAP32[22677] = HEAP32[22677] & ~(1 << HEAP32[$300 >> 2]);
       break L100;
      } else {
       if ($254 >>> 0 < (HEAP32[22680] | 0) >>> 0) {
        _abort();
       }
       $316 = $254 + 16 | 0;
       if ((HEAP32[$316 >> 2] | 0) == ($251 | 0)) {
        HEAP32[$316 >> 2] = $R7_1;
       } else {
        HEAP32[$254 + 20 >> 2] = $R7_1;
       }
       if (($R7_1 | 0) == 0) {
        break L100;
       }
      }
     } while (0);
     if ($R7_1 >>> 0 < (HEAP32[22680] | 0) >>> 0) {
      _abort();
     }
     HEAP32[$R7_1 + 24 >> 2] = $254;
     $333 = HEAP32[$1 + ($psize + 16) >> 2] | 0;
     do {
      if (($333 | 0) != 0) {
       if ($333 >>> 0 < (HEAP32[22680] | 0) >>> 0) {
        _abort();
       } else {
        HEAP32[$R7_1 + 16 >> 2] = $333;
        HEAP32[$333 + 24 >> 2] = $R7_1;
        break;
       }
      }
     } while (0);
     $346 = HEAP32[$1 + ($psize + 20) >> 2] | 0;
     if (($346 | 0) == 0) {
      break;
     }
     if ($346 >>> 0 < (HEAP32[22680] | 0) >>> 0) {
      _abort();
     } else {
      HEAP32[$R7_1 + 20 >> 2] = $346;
      HEAP32[$346 + 24 >> 2] = $R7_1;
      break;
     }
    }
   } while (0);
   HEAP32[$_0 + 4 >> 2] = $213 | 1;
   HEAP32[$_0 + $213 >> 2] = $213;
   if (($_0 | 0) != (HEAP32[22681] | 0)) {
    $_1 = $213;
    break;
   }
   HEAP32[22678] = $213;
   return;
  } else {
   HEAP32[$185 >> 2] = $186 & -2;
   HEAP32[$_0 + 4 >> 2] = $_0277 | 1;
   HEAP32[$_0 + $_0277 >> 2] = $_0277;
   $_1 = $_0277;
  }
 } while (0);
 $374 = $_1 >>> 3;
 if ($_1 >>> 0 < 256 >>> 0) {
  $377 = $374 << 1;
  $379 = 90744 + ($377 << 2) | 0;
  $380 = HEAP32[22676] | 0;
  $381 = 1 << $374;
  do {
   if (($380 & $381 | 0) == 0) {
    HEAP32[22676] = $380 | $381;
    $F16_0 = $379;
    $_pre_phi = 90744 + ($377 + 2 << 2) | 0;
   } else {
    $387 = 90744 + ($377 + 2 << 2) | 0;
    $388 = HEAP32[$387 >> 2] | 0;
    if ($388 >>> 0 >= (HEAP32[22680] | 0) >>> 0) {
     $F16_0 = $388;
     $_pre_phi = $387;
     break;
    }
    _abort();
   }
  } while (0);
  HEAP32[$_pre_phi >> 2] = $_0;
  HEAP32[$F16_0 + 12 >> 2] = $_0;
  HEAP32[$_0 + 8 >> 2] = $F16_0;
  HEAP32[$_0 + 12 >> 2] = $379;
  return;
 }
 $398 = $_0;
 $399 = $_1 >>> 8;
 do {
  if (($399 | 0) == 0) {
   $I19_0 = 0;
  } else {
   if ($_1 >>> 0 > 16777215 >>> 0) {
    $I19_0 = 31;
    break;
   }
   $406 = ($399 + 1048320 | 0) >>> 16 & 8;
   $407 = $399 << $406;
   $410 = ($407 + 520192 | 0) >>> 16 & 4;
   $412 = $407 << $410;
   $415 = ($412 + 245760 | 0) >>> 16 & 2;
   $420 = 14 - ($410 | $406 | $415) + ($412 << $415 >>> 15) | 0;
   $I19_0 = $_1 >>> (($420 + 7 | 0) >>> 0) & 1 | $420 << 1;
  }
 } while (0);
 $427 = 91008 + ($I19_0 << 2) | 0;
 HEAP32[$_0 + 28 >> 2] = $I19_0;
 HEAP32[$_0 + 20 >> 2] = 0;
 HEAP32[$_0 + 16 >> 2] = 0;
 $431 = HEAP32[22677] | 0;
 $432 = 1 << $I19_0;
 if (($431 & $432 | 0) == 0) {
  HEAP32[22677] = $431 | $432;
  HEAP32[$427 >> 2] = $398;
  HEAP32[$_0 + 24 >> 2] = $427;
  HEAP32[$_0 + 12 >> 2] = $_0;
  HEAP32[$_0 + 8 >> 2] = $_0;
  return;
 }
 if (($I19_0 | 0) == 31) {
  $447 = 0;
 } else {
  $447 = 25 - ($I19_0 >>> 1) | 0;
 }
 $K20_0 = $_1 << $447;
 $T_0 = HEAP32[$427 >> 2] | 0;
 while (1) {
  if ((HEAP32[$T_0 + 4 >> 2] & -8 | 0) == ($_1 | 0)) {
   break;
  }
  $456 = $T_0 + 16 + ($K20_0 >>> 31 << 2) | 0;
  $457 = HEAP32[$456 >> 2] | 0;
  if (($457 | 0) == 0) {
   label = 126;
   break;
  } else {
   $K20_0 = $K20_0 << 1;
   $T_0 = $457;
  }
 }
 if ((label | 0) == 126) {
  if ($456 >>> 0 < (HEAP32[22680] | 0) >>> 0) {
   _abort();
  }
  HEAP32[$456 >> 2] = $398;
  HEAP32[$_0 + 24 >> 2] = $T_0;
  HEAP32[$_0 + 12 >> 2] = $_0;
  HEAP32[$_0 + 8 >> 2] = $_0;
  return;
 }
 $470 = $T_0 + 8 | 0;
 $471 = HEAP32[$470 >> 2] | 0;
 $473 = HEAP32[22680] | 0;
 if ($T_0 >>> 0 < $473 >>> 0) {
  _abort();
 }
 if ($471 >>> 0 < $473 >>> 0) {
  _abort();
 }
 HEAP32[$471 + 12 >> 2] = $398;
 HEAP32[$470 >> 2] = $398;
 HEAP32[$_0 + 8 >> 2] = $471;
 HEAP32[$_0 + 12 >> 2] = $T_0;
 HEAP32[$_0 + 24 >> 2] = 0;
 return;
}
function __ZL10LookupNum2P10TranslatoriiiPc($tr, $value, $thousandplex, $control, $ph_out) {
 $tr = $tr | 0;
 $value = $value | 0;
 $thousandplex = $thousandplex | 0;
 $control = $control | 0;
 $ph_out = $ph_out | 0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $found = 0, $ix = 0, $units = 0, $tens = 0, $is_ordinal = 0, $used_and = 0, $found_ordinal = 0, $next_phtype = 0, $ord_type = 0, $string = 0, $ph_ordinal = 0, $ph_tens = 0, $ph_digits = 0, $ph_and = 0, $48 = 0, $76 = 0, $306 = 0, $483 = 0, $498 = 0, $606 = 0, label = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 168 | 0;
 $string = sp | 0;
 $ph_ordinal = sp + 16 | 0;
 $ph_tens = sp + 40 | 0;
 $ph_digits = sp + 96 | 0;
 $ph_and = sp + 152 | 0;
 $1 = $tr;
 $2 = $value;
 $3 = $thousandplex;
 $4 = $control;
 $5 = $ph_out;
 $used_and = 0;
 $found_ordinal = 0;
 $ord_type = 111;
 $units = ($2 | 0) % 10 | 0;
 $tens = ($2 | 0) / 10 | 0;
 $found = 0;
 HEAP8[$ph_ordinal | 0] = 0;
 HEAP8[$ph_tens | 0] = 0;
 HEAP8[$ph_digits | 0] = 0;
 HEAP8[$ph_and | 0] = 0;
 if (($4 & 32 | 0) != 0) {
  $ord_type = 113;
 }
 $is_ordinal = $4 & 1;
 do {
  if (($4 & 2 | 0) != 0) {
   if ((HEAP32[28458] | 0) != 2) {
    label = 6;
    break;
   }
   _strcpy($5 | 0, HEAP32[28592] | 0) | 0;
  } else {
   label = 6;
  }
 } while (0);
 if ((label | 0) == 6) {
  if ((HEAP8[HEAP32[28592] | 0] | 0) == 0) {
   if (($4 & 8 | 0) != 0) {
    _sprintf($string | 0, 14776, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $2, tempVarArgs) | 0) | 0;
    STACKTOP = tempVarArgs;
    $48 = __Z6LookupP10TranslatorPKcPc($1, $string | 0, $ph_digits | 0) | 0;
    $found = $48;
    if (($48 | 0) == 0) {
     _sprintf($string | 0, 14688, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $2, tempVarArgs) | 0) | 0;
     STACKTOP = tempVarArgs;
     $found = __Z6LookupP10TranslatorPKcPc($1, $string | 0, $ph_digits | 0) | 0;
    }
   } else {
    if (($is_ordinal | 0) != 0) {
     _strcpy($ph_ordinal | 0, 115400) | 0;
     if (($4 & 4 | 0) != 0) {
      _sprintf($string | 0, 14544, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = $2, HEAP32[tempVarArgs + 8 >> 2] = $ord_type, tempVarArgs) | 0) | 0;
      STACKTOP = tempVarArgs;
      $76 = __Z6LookupP10TranslatorPKcPc($1, $string | 0, $ph_digits | 0) | 0;
      $found = $76;
      if (($76 | 0) != 0) {
       if ((HEAP8[114136] | 0) != 0) {
        _strcpy($ph_ordinal | 0, 114136) | 0;
       }
      }
     }
     if (($found | 0) == 0) {
      _sprintf($string | 0, 14320, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = $2, HEAP32[tempVarArgs + 8 >> 2] = $ord_type, tempVarArgs) | 0) | 0;
      STACKTOP = tempVarArgs;
      $found = __Z6LookupP10TranslatorPKcPc($1, $string | 0, $ph_digits | 0) | 0;
     }
     $found_ordinal = $found;
    }
   }
   if (($found | 0) == 0) {
    if (($4 & 2 | 0) != 0) {
     if ((HEAP32[28456] & 1 | 0) != 0) {
      _sprintf($string | 0, 14176, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $2, tempVarArgs) | 0) | 0;
      STACKTOP = tempVarArgs;
      $found = __Z6LookupP10TranslatorPKcPc($1, $string | 0, $ph_digits | 0) | 0;
     }
    } else {
     do {
      if ((HEAP32[$1 + 204 >> 2] & 262144 | 0) != 0) {
       if (($3 | 0) > 1) {
        label = 30;
        break;
       }
       _sprintf($string | 0, 14016, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $2, tempVarArgs) | 0) | 0;
       STACKTOP = tempVarArgs;
      } else {
       label = 30;
      }
     } while (0);
     if ((label | 0) == 30) {
      _sprintf($string | 0, 13896, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $2, tempVarArgs) | 0) | 0;
      STACKTOP = tempVarArgs;
     }
     $found = __Z6LookupP10TranslatorPKcPc($1, $string | 0, $ph_digits | 0) | 0;
    }
    if (($found | 0) == 0) {
     do {
      if (($is_ordinal | 0) != 0) {
       if ((HEAP32[$1 + 204 >> 2] & 8192 | 0) == 0) {
        label = 36;
        break;
       }
      } else {
       label = 36;
      }
     } while (0);
     if ((label | 0) == 36) {
      _sprintf($string | 0, 13816, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $2, tempVarArgs) | 0) | 0;
      STACKTOP = tempVarArgs;
      $found = __Z6LookupP10TranslatorPKcPc($1, $string | 0, $ph_digits | 0) | 0;
     }
    }
   }
  }
  do {
   if (($4 & 16 | 0) != 0) {
    if (($2 | 0) >= 10) {
     label = 43;
     break;
    }
    __Z6LookupP10TranslatorPKcPc($1, 16328, $ph_tens | 0) | 0;
   } else {
    label = 43;
   }
  } while (0);
  if ((label | 0) == 43) {
   if (($found | 0) != 0) {
    HEAP8[$ph_tens | 0] = 0;
   } else {
    if (($is_ordinal | 0) != 0) {
     _sprintf($string | 0, 13736, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = $tens, HEAP32[tempVarArgs + 8 >> 2] = $ord_type, tempVarArgs) | 0) | 0;
     STACKTOP = tempVarArgs;
     if ((__Z6LookupP10TranslatorPKcPc($1, $string | 0, $ph_tens | 0) | 0) != 0) {
      $found_ordinal = 1;
      do {
       if (($units | 0) != 0) {
        if ((HEAP32[$1 + 204 >> 2] & 4096 | 0) == 0) {
         break;
        }
        _strcat($ph_tens | 0, 115400) | 0;
       }
      } while (0);
     }
    }
    if (($found_ordinal | 0) == 0) {
     if (($4 & 512 | 0) != 0) {
      _sprintf($string | 0, 13592, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $tens, tempVarArgs) | 0) | 0;
      STACKTOP = tempVarArgs;
     } else {
      _sprintf($string | 0, 13464, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $tens, tempVarArgs) | 0) | 0;
      STACKTOP = tempVarArgs;
     }
     __Z6LookupP10TranslatorPKcPc($1, $string | 0, $ph_tens | 0) | 0;
    }
    do {
     if ((HEAP8[$ph_tens | 0] | 0) == 0) {
      if ((HEAP32[$1 + 200 >> 2] & 1048576 | 0) == 0) {
       break;
      }
      $units = ($2 | 0) % 20 | 0;
      _sprintf($string | 0, 13464, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $tens & 254, tempVarArgs) | 0) | 0;
      STACKTOP = tempVarArgs;
      __Z6LookupP10TranslatorPKcPc($1, $string | 0, $ph_tens | 0) | 0;
     }
    } while (0);
    HEAP8[$ph_digits | 0] = 0;
    if (($units | 0) > 0) {
     $found = 0;
     do {
      if (($4 & 2 | 0) != 0) {
       if ((HEAP8[HEAP32[28592] | 0] | 0) == 0) {
        label = 64;
        break;
       }
       _strcpy($ph_digits | 0, HEAP32[28592] | 0) | 0;
       $found_ordinal = 1;
       HEAP8[$ph_ordinal | 0] = 0;
      } else {
       label = 64;
      }
     } while (0);
     if ((label | 0) == 64) {
      if (($4 & 8 | 0) != 0) {
       _sprintf($string | 0, 14688, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $units, tempVarArgs) | 0) | 0;
       STACKTOP = tempVarArgs;
       $found = __Z6LookupP10TranslatorPKcPc($1, $string | 0, $ph_digits | 0) | 0;
      }
      do {
       if (($is_ordinal | 0) != 0) {
        if ((HEAP32[$1 + 200 >> 2] & 16 | 0) != 0) {
         break;
        }
        _sprintf($string | 0, 14320, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = $units, HEAP32[tempVarArgs + 8 >> 2] = $ord_type, tempVarArgs) | 0) | 0;
        STACKTOP = tempVarArgs;
        $306 = __Z6LookupP10TranslatorPKcPc($1, $string | 0, $ph_digits | 0) | 0;
        $found = $306;
        if (($306 | 0) != 0) {
         $found_ordinal = 1;
        }
       }
      } while (0);
      if (($found | 0) == 0) {
       do {
        if ((HEAP32[28456] & 1 | 0) != 0) {
         if (($4 & 2 | 0) == 0) {
          label = 75;
          break;
         }
         _sprintf($string | 0, 14176, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $units, tempVarArgs) | 0) | 0;
         STACKTOP = tempVarArgs;
         $found = __Z6LookupP10TranslatorPKcPc($1, $string | 0, $ph_digits | 0) | 0;
        } else {
         label = 75;
        }
       } while (0);
       if ((label | 0) == 75) {
        if (($4 & 2 | 0) == 0) {
         label = 77;
        } else {
         if ((HEAP32[$1 + 200 >> 2] & 16 | 0) != 0) {
          label = 77;
         }
        }
        if ((label | 0) == 77) {
         do {
          if ((HEAP32[$1 + 204 >> 2] & 262144 | 0) != 0) {
           if (($3 | 0) > 1) {
            label = 80;
            break;
           }
           _sprintf($string | 0, 14016, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $units, tempVarArgs) | 0) | 0;
           STACKTOP = tempVarArgs;
          } else {
           label = 80;
          }
         } while (0);
         if ((label | 0) == 80) {
          _sprintf($string | 0, 13896, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $units, tempVarArgs) | 0) | 0;
          STACKTOP = tempVarArgs;
         }
         $found = __Z6LookupP10TranslatorPKcPc($1, $string | 0, $ph_digits | 0) | 0;
        }
       }
      }
      if (($found | 0) == 0) {
       _sprintf($string | 0, 13816, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $units, tempVarArgs) | 0) | 0;
       STACKTOP = tempVarArgs;
       __Z6LookupP10TranslatorPKcPc($1, $string | 0, $ph_digits | 0) | 0;
      }
     }
    }
   }
  }
  do {
   if (($is_ordinal | 0) != 0) {
    if (($found_ordinal | 0) != 0) {
     break;
    }
    if ((HEAP8[$ph_ordinal | 0] | 0) != 0) {
     break;
    }
    do {
     if (($2 | 0) >= 20) {
      if ((($2 | 0) % 10 | 0 | 0) != 0) {
       if ((HEAP32[$1 + 200 >> 2] & 16 | 0) == 0) {
        break;
       }
      }
      __Z6LookupP10TranslatorPKcPc($1, 11104, $ph_ordinal | 0) | 0;
     }
    } while (0);
    if ((HEAP8[$ph_ordinal | 0] | 0) == 0) {
     __Z6LookupP10TranslatorPKcPc($1, 10976, $ph_ordinal | 0) | 0;
    }
   }
  } while (0);
  do {
   if ((HEAP32[$1 + 200 >> 2] & 48 | 0) != 0) {
    if ((HEAP8[$ph_tens | 0] | 0) == 0) {
     label = 110;
     break;
    }
    if ((HEAP8[$ph_digits | 0] | 0) == 0) {
     label = 110;
     break;
    }
    __Z6LookupP10TranslatorPKcPc($1, 10904, $ph_and | 0) | 0;
    do {
     if (($is_ordinal | 0) != 0) {
      if ((HEAP32[$1 + 204 >> 2] & 2048 | 0) == 0) {
       break;
      }
      HEAP8[$ph_and | 0] = 0;
     }
    } while (0);
    if ((HEAP32[$1 + 200 >> 2] & 16 | 0) != 0) {
     _sprintf($5 | 0, 10824, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 32 | 0, HEAP32[tempVarArgs >> 2] = $ph_digits, HEAP32[tempVarArgs + 8 >> 2] = $ph_and, HEAP32[tempVarArgs + 16 >> 2] = $ph_tens, HEAP32[tempVarArgs + 24 >> 2] = $ph_ordinal, tempVarArgs) | 0) | 0;
     STACKTOP = tempVarArgs;
    } else {
     _sprintf($5 | 0, 10824, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 32 | 0, HEAP32[tempVarArgs >> 2] = $ph_tens, HEAP32[tempVarArgs + 8 >> 2] = $ph_and, HEAP32[tempVarArgs + 16 >> 2] = $ph_digits, HEAP32[tempVarArgs + 24 >> 2] = $ph_ordinal, tempVarArgs) | 0) | 0;
     STACKTOP = tempVarArgs;
    }
    $used_and = 1;
   } else {
    label = 110;
   }
  } while (0);
  if ((label | 0) == 110) {
   if ((HEAP32[$1 + 200 >> 2] & 512 | 0) != 0) {
    $483 = (_strlen($ph_tens | 0) | 0) - 1 | 0;
    $ix = $483;
    do {
     if (($483 | 0) >= 0) {
      if ((HEAP8[$ph_digits | 0] | 0) == 0) {
       break;
      }
      $498 = HEAPU8[(HEAP32[43256 + (HEAP8[$ph_digits | 0] << 2) >> 2] | 0) + 11 | 0] | 0;
      $next_phtype = $498;
      if (($498 | 0) == 1) {
       $next_phtype = HEAPU8[(HEAP32[43256 + (HEAP8[$ph_digits + 1 | 0] << 2) >> 2] | 0) + 11 | 0] | 0;
      }
      do {
       if ((HEAPU8[(HEAP32[43256 + (HEAP8[$ph_tens + $ix | 0] << 2) >> 2] | 0) + 11 | 0] | 0) == 2) {
        if (($next_phtype | 0) != 2) {
         break;
        }
        HEAP8[$ph_tens + $ix | 0] = 0;
       }
      } while (0);
     }
    } while (0);
   }
   _sprintf($5 | 0, 10760, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 24 | 0, HEAP32[tempVarArgs >> 2] = $ph_tens, HEAP32[tempVarArgs + 8 >> 2] = $ph_digits, HEAP32[tempVarArgs + 16 >> 2] = $ph_ordinal, tempVarArgs) | 0) | 0;
   STACKTOP = tempVarArgs;
  }
 }
 if ((HEAP32[$1 + 200 >> 2] & 268435456 | 0) != 0) {
  $found = 0;
  $ix = 0;
  while (1) {
   if (($ix | 0) >= (_strlen($5 | 0) | 0)) {
    break;
   }
   if ((HEAP8[$5 + $ix | 0] | 0) == 6) {
    if (($found | 0) != 0) {
     HEAP8[$5 + $ix | 0] = 5;
    } else {
     $found = 1;
    }
   }
   $ix = $ix + 1 | 0;
  }
  $606 = $used_and;
  STACKTOP = sp;
  return $606 | 0;
 }
 if ((HEAP32[$1 + 200 >> 2] & 256 | 0) != 0) {
  $found = 0;
  $ix = (_strlen($5 | 0) | 0) - 1 | 0;
  while (1) {
   if (($ix | 0) < 0) {
    break;
   }
   if ((HEAP8[$5 + $ix | 0] | 0) == 6) {
    if (($found | 0) != 0) {
     HEAP8[$5 + $ix | 0] = 5;
    } else {
     $found = 1;
    }
   }
   $ix = $ix - 1 | 0;
  }
 }
 $606 = $used_and;
 STACKTOP = sp;
 return $606 | 0;
}
function __Z14TranslateRulesP10TranslatorPcS1_iS1_iPj($tr, $p_start, $phonemes, $ph_size, $end_phonemes, $word_flags, $dict_flags) {
 $tr = $tr | 0;
 $p_start = $p_start | 0;
 $phonemes = $phonemes | 0;
 $ph_size = $ph_size | 0;
 $end_phonemes = $end_phonemes | 0;
 $word_flags = $word_flags | 0;
 $dict_flags = $dict_flags | 0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $c = 0, $c12 = 0, $wc = 0, $wc_bytes = 0, $p2 = 0, $found = 0, $g = 0, $g1 = 0, $n = 0, $letter = 0, $any_alpha = 0, $ix = 0, $digit_count = 0, $p = 0, $alphabet = 0, $dict_flags0 = 0, $match1 = 0, $match2 = 0, $ph_buf = 0, $word_copy = 0, $wordbuf = 0, $ix1 = 0, $string = 0, $buf = 0, $31 = 0, $53 = 0, $64 = 0, $101 = 0, $109 = 0, $153 = 0, $171 = 0, $248 = 0, $268 = 0, $269 = 0, $387 = 0, $413 = 0, $423 = 0, $427 = 0, $453 = 0, $478 = 0, $491 = 0, $529 = 0, $592 = 0, $627 = 0, $662 = 0, label = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 432 | 0;
 $wc = sp | 0;
 $p2 = sp + 8 | 0;
 $letter = sp + 16 | 0;
 $p = sp + 24 | 0;
 $match1 = sp + 32 | 0;
 $match2 = sp + 48 | 0;
 $ph_buf = sp + 64 | 0;
 $word_copy = sp + 104 | 0;
 $wordbuf = sp + 264 | 0;
 $string = sp + 384 | 0;
 $buf = sp + 392 | 0;
 $2 = $tr;
 $3 = $p_start;
 $4 = $phonemes;
 $5 = $ph_size;
 $6 = $end_phonemes;
 $7 = $word_flags;
 $8 = $dict_flags;
 HEAP32[$wc >> 2] = 0;
 $any_alpha = 0;
 $digit_count = 0;
 $dict_flags0 = 0;
 if ((HEAP32[$2 + 804 >> 2] | 0) == 0) {
  $1 = 0;
  $662 = $1;
  STACKTOP = sp;
  return $662 | 0;
 }
 if (($8 | 0) != 0) {
  $dict_flags0 = HEAP32[$8 >> 2] | 0;
 }
 $ix = 0;
 while (1) {
  if (($ix | 0) >= 159) {
   break;
  }
  $c = HEAP8[$3 + $ix | 0] | 0;
  $31 = $ix;
  $ix = $31 + 1 | 0;
  HEAP8[$word_copy + $31 | 0] = $c;
  if (($c & 255 | 0) == 0) {
   label = 8;
   break;
  }
 }
 if ((label | 0) == 8) {}
 HEAP8[$word_copy + $ix | 0] = 0;
 do {
  if ((HEAP32[19530] | 0) == 2) {
   if (($7 & 268435456 | 0) != 0) {
    break;
   }
   $ix1 = 0;
   while (1) {
    $53 = HEAP8[$3 + $ix1 | 0] | 0;
    $c = $53;
    do {
     if (($53 & 255 | 0) != 32) {
      if (($c & 255 | 0) == 0) {
       $64 = 0;
       break;
      }
      $64 = $ix1 >>> 0 < 119 >>> 0;
     } else {
      $64 = 0;
     }
    } while (0);
    if (!$64) {
     break;
    }
    HEAP8[$wordbuf + $ix1 | 0] = $c;
    $ix1 = $ix1 + 1 | 0;
   }
   HEAP8[$wordbuf + $ix1 | 0] = 0;
   if (($7 & -2147483648 | 0) != 0) {
    _fprintf(HEAP32[19596] | 0, 17440, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $wordbuf, tempVarArgs) | 0) | 0;
    STACKTOP = tempVarArgs;
   } else {
    _fprintf(HEAP32[19596] | 0, 17008, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $wordbuf, tempVarArgs) | 0) | 0;
    STACKTOP = tempVarArgs;
   }
  }
 } while (0);
 HEAP32[$p >> 2] = $3;
 HEAP32[$2 + 8328 >> 2] = 0;
 HEAP32[$2 + 8332 >> 2] = 0;
 if (($6 | 0) != 0) {
  HEAP8[$6 | 0] = 0;
 }
 L35 : while (1) {
  $101 = HEAP8[HEAP32[$p >> 2] | 0] | 0;
  $c = $101;
  if (($101 & 255 | 0) != 32) {
   $109 = ($c & 255 | 0) != 0;
  } else {
   $109 = 0;
  }
  if (!$109) {
   break;
  }
  $wc_bytes = __Z7utf8_inPiPKc($wc, HEAP32[$p >> 2] | 0) | 0;
  if ((__Z7IsAlphaj(HEAP32[$wc >> 2] | 0) | 0) != 0) {
   $any_alpha = $any_alpha + 1 | 0;
  }
  $n = HEAPU8[$2 + 7788 + ($c & 255) | 0] | 0;
  do {
   if ((__Z7IsDigitj(HEAP32[$wc >> 2] | 0) | 0) != 0) {
    if ((HEAP8[$2 + 270 | 0] | 0) != 0) {
     if (($any_alpha | 0) != 0) {
      break;
     }
    }
    HEAP8[$string | 0] = 95;
    _memcpy($string + 1 | 0, HEAP32[$p >> 2] | 0, $wc_bytes) | 0;
    HEAP8[$string + ($wc_bytes + 1) | 0] = 0;
    __Z6LookupP10TranslatorPKcPc($2, $string | 0, $buf | 0) | 0;
    $153 = $digit_count + 1 | 0;
    $digit_count = $153;
    if ($153 >>> 0 >= 2 >>> 0) {
     _strcat($buf | 0, 23424) | 0;
     $digit_count = 0;
    }
    __Z14AppendPhonemesP10TranslatorPciPKc($2, $4, $5, $buf | 0);
    HEAP32[$p >> 2] = (HEAP32[$p >> 2] | 0) + $wc_bytes;
    continue L35;
   }
  } while (0);
  $digit_count = 0;
  $found = 0;
  $171 = (HEAP32[$wc >> 2] | 0) - (HEAP32[$2 + 720 >> 2] | 0) | 0;
  $ix = $171;
  do {
   if (($171 | 0) >= 0) {
    if (($ix | 0) >= 128) {
     break;
    }
    if ((HEAP32[$2 + 6312 + ($ix << 2) >> 2] | 0) != 0) {
     __ZL9MatchRuleP10TranslatorPPcS1_iS1_P11MatchRecordii($2, $p, $3, $wc_bytes, HEAP32[$2 + 6312 + ($ix << 2) >> 2] | 0, $match1, $7, $dict_flags0);
     $found = 1;
    }
   }
  } while (0);
  do {
   if (($found | 0) == 0) {
    if (($n | 0) <= 0) {
     break;
    }
    $c12 = ($c & 255) + (HEAPU8[(HEAP32[$p >> 2] | 0) + 1 | 0] << 8) | 0;
    $g1 = HEAPU8[$2 + 8044 + ($c & 255) | 0] | 0;
    $g = $g1;
    while (1) {
     if (($g | 0) >= ($g1 + $n | 0)) {
      break;
     }
     if ((HEAP32[$2 + 7304 + ($g << 2) >> 2] | 0) == ($c12 | 0)) {
      $found = 1;
      HEAP32[$p2 >> 2] = HEAP32[$p >> 2];
      __ZL9MatchRuleP10TranslatorPPcS1_iS1_P11MatchRecordii($2, $p2, $3, 2, HEAP32[$2 + 6824 + ($g << 2) >> 2] | 0, $match2, $7, $dict_flags0);
      if ((HEAP32[$match2 >> 2] | 0) > 0) {
       $248 = $match2 | 0;
       HEAP32[$248 >> 2] = (HEAP32[$248 >> 2] | 0) + 35;
      }
      __ZL9MatchRuleP10TranslatorPPcS1_iS1_P11MatchRecordii($2, $p, $3, 1, HEAP32[$2 + 5288 + (($c & 255) << 2) >> 2] | 0, $match1, $7, $dict_flags0);
      if ((HEAP32[$match2 >> 2] | 0) >= (HEAP32[$match1 >> 2] | 0)) {
       $268 = $match1;
       $269 = $match2;
       HEAP32[$268 >> 2] = HEAP32[$269 >> 2];
       HEAP32[$268 + 4 >> 2] = HEAP32[$269 + 4 >> 2];
       HEAP32[$268 + 8 >> 2] = HEAP32[$269 + 8 >> 2];
       HEAP32[$268 + 12 >> 2] = HEAP32[$269 + 12 >> 2];
       HEAP32[$p >> 2] = HEAP32[$p2 >> 2];
      }
     }
     $g = $g + 1 | 0;
    }
   }
  } while (0);
  if (($found | 0) == 0) {
   if ((HEAP32[$2 + 5288 + (($c & 255) << 2) >> 2] | 0) != 0) {
    __ZL9MatchRuleP10TranslatorPPcS1_iS1_P11MatchRecordii($2, $p, $3, 1, HEAP32[$2 + 5288 + (($c & 255) << 2) >> 2] | 0, $match1, $7, $dict_flags0);
   } else {
    __ZL9MatchRuleP10TranslatorPPcS1_iS1_P11MatchRecordii($2, $p, $3, 0, HEAP32[$2 + 5288 >> 2] | 0, $match1, $7, $dict_flags0);
    do {
     if ((HEAP32[$match1 >> 2] | 0) == 0) {
      if ((HEAP32[19464] & 16 | 0) != 0) {
       break;
      }
      $n = (__Z7utf8_inPiPKc($letter, (HEAP32[$p >> 2] | 0) - 1 | 0) | 0) - 1 | 0;
      if ((HEAP32[$2 + 720 >> 2] | 0) > 0) {
       if ((HEAP32[$letter >> 2] | 0) <= 577) {
        if ((__Z9iswalpha2i(HEAP32[$letter >> 2] | 0) | 0) != 0) {
         label = 63;
         break L35;
        }
       }
      }
      if ((HEAP32[$letter >> 2] | 0) == 57384) {
       if ((HEAP32[9546] | 0) < (HEAP32[$2 + 172 >> 2] | 0)) {
        HEAP32[9546] = HEAP32[$2 + 172 >> 2];
       }
      }
      if ((__Z9IsBracketi(HEAP32[$letter >> 2] | 0) | 0) != 0) {
       if ((HEAP32[9546] | 0) < (HEAP32[$2 + 88 >> 2] | 0)) {
        HEAP32[9546] = HEAP32[$2 + 88 >> 2];
       }
      }
      L104 : do {
       if ((HEAP32[$letter >> 2] | 0) >= 192) {
        if ((HEAP32[$letter >> 2] | 0) >= 606) {
         break;
        }
        $387 = HEAPU8[28688 + ((HEAP32[$letter >> 2] | 0) - 192) | 0] | 0;
        $ix = $387;
        if (($387 | 0) == 0) {
         break;
        }
        do {
         if ((HEAP8[(HEAP32[$p >> 2] | 0) - 2 | 0] | 0) == 32) {
          if ((HEAP8[(HEAP32[$p >> 2] | 0) + $n | 0] | 0) != 32) {
           break;
          }
          break L104;
         }
        } while (0);
        HEAP32[$p2 >> 2] = (HEAP32[$p >> 2] | 0) - 1;
        HEAP8[(HEAP32[$p >> 2] | 0) - 1 | 0] = $ix;
        while (1) {
         $413 = HEAP8[(HEAP32[$p >> 2] | 0) + $n | 0] | 0;
         HEAP8[HEAP32[$p >> 2] | 0] = $413;
         if (($413 << 24 >> 24 | 0) == 32) {
          break;
         }
         HEAP32[$p >> 2] = (HEAP32[$p >> 2] | 0) + 1;
        }
        while (1) {
         $423 = $n;
         $n = $423 - 1 | 0;
         if (($423 | 0) <= 0) {
          break;
         }
         $427 = HEAP32[$p >> 2] | 0;
         HEAP32[$p >> 2] = $427 + 1;
         HEAP8[$427] = 32;
        }
        do {
         if ((HEAP32[$2 + 28 >> 2] | 0) != 0) {
          if ((__Z11lookupwcharPKti(29656, HEAP32[$letter >> 2] | 0) | 0) <= 0) {
           break;
          }
          HEAP32[$p >> 2] = HEAP32[$p2 >> 2];
          continue L35;
         }
        } while (0);
        HEAP8[$4 | 0] = 0;
        HEAP32[$p >> 2] = $3;
        HEAP32[$2 + 8328 >> 2] = 0;
        HEAP32[$2 + 8332 >> 2] = 0;
        continue L35;
       }
      } while (0);
      $453 = __Z16AlphabetFromChari(HEAP32[$letter >> 2] | 0) | 0;
      $alphabet = $453;
      do {
       if (($453 | 0) != 0) {
        if ((HEAP32[$alphabet + 4 >> 2] | 0) == (HEAP32[$2 + 720 >> 2] | 0)) {
         break;
        }
        if ((HEAP32[$2 + 300 >> 2] | 0) == (HEAP32[$alphabet + 4 >> 2] | 0)) {
         label = 92;
         break L35;
        }
        if ((HEAP32[$alphabet + 16 >> 2] & 4 | 0) != 0) {
         label = 94;
         break L35;
        }
       }
      } while (0);
     }
    } while (0);
   }
   if ((HEAP32[$match1 >> 2] | 0) == 0) {
    do {
     if ((HEAP32[$wc >> 2] | 0) >= 768) {
      if ((HEAP32[$wc >> 2] | 0) > 879) {
       label = 102;
       break;
      }
     } else {
      label = 102;
     }
    } while (0);
    if ((label | 0) == 102) {
     label = 0;
     if ((__Z7IsAlphaj(HEAP32[$wc >> 2] | 0) | 0) != 0) {
      if (($any_alpha | 0) > 1) {
       label = 105;
       break;
      }
      if ((HEAP8[(HEAP32[$p >> 2] | 0) + ($wc_bytes - 1) | 0] | 0) > 32) {
       label = 105;
       break;
      }
     } else {
      __Z12LookupLetterP10TranslatorjiPci($2, HEAP32[$wc >> 2] | 0, -1, $ph_buf | 0, 0);
      if ((HEAP8[$ph_buf | 0] | 0) != 0) {
       HEAP32[$match1 + 4 >> 2] = $ph_buf;
       HEAP32[$match1 >> 2] = 1;
      }
     }
    }
    HEAP32[$p >> 2] = (HEAP32[$p >> 2] | 0) + ($wc_bytes - 1);
   } else {
    HEAP32[$2 + 400 >> 2] = 0;
   }
  }
  if ((HEAP32[$match1 + 4 >> 2] | 0) == 0) {
   HEAP32[$match1 + 4 >> 2] = 90696;
  }
  if ((HEAP32[$match1 >> 2] | 0) > 0) {
   if (($7 & -2147483648 | 0) != 0) {
    label = 121;
    break;
   }
   if ((HEAP8[HEAP32[$match1 + 4 >> 2] | 0] | 0) == 21) {
    if (($7 & 4096 | 0) == 0) {
     label = 124;
     break;
    }
   }
   $592 = $match1 + 8 | 0;
   HEAP32[$592 >> 2] = HEAP32[$592 >> 2] & -32769;
   do {
    if ((HEAP32[$match1 + 8 >> 2] | 0) != 0) {
     if (($6 | 0) == 0) {
      break;
     }
     if ((HEAP32[$match1 + 8 >> 2] & 1024 | 0) == 0) {
      label = 130;
      break L35;
     }
     if (($7 & 536870912 | 0) == 0) {
      label = 130;
      break L35;
     }
    }
   } while (0);
   if ((HEAP32[$match1 + 12 >> 2] | 0) != 0) {
    HEAP8[HEAP32[$match1 + 12 >> 2] | 0] = 69;
   }
   __Z14AppendPhonemesP10TranslatorPciPKc($2, $4, $5, HEAP32[$match1 + 4 >> 2] | 0);
  }
 }
 if ((label | 0) == 63) {
  _sprintf($4 | 0, 16848, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = 21, HEAP32[tempVarArgs + 8 >> 2] = $2 + 288, tempVarArgs) | 0) | 0;
  STACKTOP = tempVarArgs;
  $1 = 0;
  $662 = $1;
  STACKTOP = sp;
  return $662 | 0;
 } else if ((label | 0) == 105) {
  HEAP8[$4 | 0] = 0;
  if (($8 | 0) != 0) {
   $529 = $8 | 0;
   HEAP32[$529 >> 2] = HEAP32[$529 >> 2] | 4096;
  }
 } else if ((label | 0) == 121) {
  $1 = HEAP32[$match1 + 8 >> 2] | 1;
  $662 = $1;
  STACKTOP = sp;
  return $662 | 0;
 } else if ((label | 0) == 124) {
  _strcpy($4 | 0, HEAP32[$match1 + 4 >> 2] | 0) | 0;
  $1 = 0;
  $662 = $1;
  STACKTOP = sp;
  return $662 | 0;
 } else if ((label | 0) == 130) {
  do {
   if ((HEAP32[$match1 + 8 >> 2] & 1024 | 0) != 0) {
    if ((HEAP32[$match1 + 8 >> 2] & 127 | 0) != 0) {
     break;
    }
    $627 = $match1 + 8 | 0;
    HEAP32[$627 >> 2] = HEAP32[$627 >> 2] | (HEAP32[$p >> 2] | 0) - $3;
   }
  } while (0);
  _strcpy($6 | 0, HEAP32[$match1 + 4 >> 2] | 0) | 0;
  _memcpy($3 | 0, $word_copy | 0, _strlen($word_copy | 0) | 0) | 0;
  $1 = HEAP32[$match1 + 8 >> 2] | 0;
  $662 = $1;
  STACKTOP = sp;
  return $662 | 0;
 } else if ((label | 0) == 92) {
  $478 = __Z13WordToString2j(HEAP32[$2 + 304 >> 2] | 0) | 0;
  _sprintf($4 | 0, 16848, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = 21, HEAP32[tempVarArgs + 8 >> 2] = $478, tempVarArgs) | 0) | 0;
  STACKTOP = tempVarArgs;
  $1 = 0;
  $662 = $1;
  STACKTOP = sp;
  return $662 | 0;
 } else if ((label | 0) == 94) {
  $491 = __Z13WordToString2j(HEAP32[$alphabet + 12 >> 2] | 0) | 0;
  _sprintf($4 | 0, 16848, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = 21, HEAP32[tempVarArgs + 8 >> 2] = $491, tempVarArgs) | 0) | 0;
  STACKTOP = tempVarArgs;
  $1 = 0;
  $662 = $1;
  STACKTOP = sp;
  return $662 | 0;
 }
 _memcpy($3 | 0, $word_copy | 0, _strlen($word_copy | 0) | 0) | 0;
 $1 = 0;
 $662 = $1;
 STACKTOP = sp;
 return $662 | 0;
}
function __Z15TranslateLetterP10TranslatorPcS1_i($tr, $word, $phonemes, $control) {
 $tr = $tr | 0;
 $word = $word | 0;
 $phonemes = $phonemes | 0;
 $control = $control | 0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $n_bytes = 0, $letter = 0, $len = 0, $ix = 0, $c = 0, $p2 = 0, $pbuf = 0, $modifier = 0, $alphabet = 0, $al_offset = 0, $al_flags = 0, $language = 0, $phontab_1 = 0, $speak_letter_number = 0, $capital = 0, $ph_buf = 0, $ph_buf2 = 0, $ph_alphabet = 0, $hexbuf = 0, $p3 = 0, $code = 0, $hangul_buf = 0, $52 = 0, $64 = 0, $133 = 0, $143 = 0, $309 = 0, $319 = 0, $486 = 0, $511 = 0, $588 = 0, label = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 312 | 0;
 $letter = sp | 0;
 $capital = sp + 8 | 0;
 $ph_buf = sp + 40 | 0;
 $ph_buf2 = sp + 120 | 0;
 $ph_alphabet = sp + 200 | 0;
 $hexbuf = sp + 280 | 0;
 $hangul_buf = sp + 296 | 0;
 $2 = $tr;
 $3 = $word;
 $4 = $phonemes;
 $5 = $control;
 HEAP8[$ph_buf | 0] = 0;
 HEAP8[$ph_alphabet | 0] = 0;
 HEAP8[$capital | 0] = 0;
 $phontab_1 = HEAP32[(HEAP32[9112] | 0) + 404 >> 2] | 0;
 $n_bytes = __Z7utf8_inPiPKc($letter, $3) | 0;
 if ((HEAP32[$letter >> 2] & 1048320 | 0) == 57344) {
  HEAP32[$letter >> 2] = HEAP32[$letter >> 2] & 255;
 }
 if (($5 & 2 | 0) != 0) {
  if ((__Z9iswupper2i(HEAP32[$letter >> 2] | 0) | 0) != 0) {
   __Z6LookupP10TranslatorPKcPc($2, 9456, $capital | 0) | 0;
  }
 }
 HEAP32[$letter >> 2] = __Z9towlower2j(HEAP32[$letter >> 2] | 0) | 0;
 __Z12LookupLetterP10TranslatorjiPci($2, HEAP32[$letter >> 2] | 0, HEAP8[$3 + $n_bytes | 0] | 0, $ph_buf | 0, $5 & 1);
 if ((HEAP8[$ph_buf | 0] | 0) == 0) {
  $52 = __Z13IsSuperscripti(HEAP32[$letter >> 2] | 0) | 0;
  $c = $52;
  if (($52 | 0) != 0) {
   HEAP32[$letter >> 2] = $c & 16383;
   do {
    if (($5 & 4 | 0) != 0) {
     $64 = HEAP32[24056 + ($c >> 14 << 2) >> 2] | 0;
     $modifier = $64;
     if (($64 | 0) == 0) {
      break;
     }
     __Z6LookupP10TranslatorPKcPc($2, $modifier, $capital | 0) | 0;
     if ((HEAP8[$capital | 0] | 0) == 0) {
      HEAP8[$capital + 2 | 0] = __Z14SetTranslator2PKc(14184) | 0;
      __Z6LookupP10TranslatorPKcPc(HEAP32[9110] | 0, $modifier, $capital + 3 | 0) | 0;
      if ((HEAP8[$capital + 3 | 0] | 0) != 0) {
       HEAP8[$capital | 0] = 9;
       HEAP8[$capital + 1 | 0] = 21;
       $len = _strlen($capital + 3 | 0) | 0;
       HEAP8[$capital + ($len + 3) | 0] = 21;
       HEAP8[$capital + ($len + 4) | 0] = $phontab_1;
       HEAP8[$capital + ($len + 5) | 0] = 0;
      }
     }
    }
   } while (0);
  }
  __Z12LookupLetterP10TranslatorjiPci($2, HEAP32[$letter >> 2] | 0, HEAP8[$3 + $n_bytes | 0] | 0, $ph_buf | 0, $5 & 1);
 }
 if ((HEAP8[$ph_buf | 0] | 0) == 21) {
  _strcpy($4 | 0, $ph_buf | 0) | 0;
  $1 = 0;
  $588 = $1;
  STACKTOP = sp;
  return $588 | 0;
 }
 do {
  if ((HEAP8[$ph_buf | 0] | 0) == 0) {
   $133 = __Z14NonAsciiNumberi(HEAP32[$letter >> 2] | 0) | 0;
   if (($133 | 0) <= 0) {
    break;
   }
   __Z12LookupLetterP10TranslatorjiPci($2, $133, 0, $ph_buf | 0, $5 & 1);
  }
 } while (0);
 $al_offset = 0;
 $al_flags = 0;
 $143 = __Z16AlphabetFromChari(HEAP32[$letter >> 2] | 0) | 0;
 $alphabet = $143;
 if (($143 | 0) != 0) {
  $al_offset = HEAP32[$alphabet + 4 >> 2] | 0;
  $al_flags = HEAP32[$alphabet + 16 >> 2] | 0;
 }
 if (($alphabet | 0) != (HEAP32[22648] | 0)) {
  HEAP32[22648] = $alphabet;
  do {
   if (($alphabet | 0) != 0) {
    if (($al_flags & 1 | 0) != 0) {
     break;
    }
    if (($al_offset | 0) == (HEAP32[(HEAP32[9112] | 0) + 720 >> 2] | 0)) {
     break;
    }
    do {
     if (($al_flags & 1 | 0) != 0) {
      label = 32;
     } else {
      if (($al_offset | 0) == (HEAP32[(HEAP32[9112] | 0) + 300 >> 2] | 0)) {
       label = 32;
       break;
      }
      if (($al_offset | 0) == (HEAP32[(HEAP32[9112] | 0) + 296 >> 2] | 0)) {
       label = 32;
       break;
      }
      HEAP8[$ph_buf2 | 0] = 0;
      if ((__Z6LookupP10TranslatorPKcPc(HEAP32[9112] | 0, HEAP32[$alphabet >> 2] | 0, $ph_alphabet | 0) | 0) == 0) {
       HEAP8[$ph_alphabet + 2 | 0] = __Z14SetTranslator2PKc(14184) | 0;
       __Z6LookupP10TranslatorPKcPc(HEAP32[9110] | 0, HEAP32[$alphabet >> 2] | 0, $ph_buf2 | 0) | 0;
      } else {
       if ((HEAP32[9112] | 0) != ($2 | 0)) {
        $phontab_1 = HEAP32[$2 + 404 >> 2] | 0;
        _strcpy($ph_buf2 | 0, $ph_alphabet | 0) | 0;
        HEAP8[$ph_alphabet + 2 | 0] = HEAP32[(HEAP32[9112] | 0) + 404 >> 2];
       }
      }
      if ((HEAP8[$ph_buf2 | 0] | 0) != 0) {
       HEAP8[$ph_alphabet | 0] = 9;
       HEAP8[$ph_alphabet + 1 | 0] = 21;
       _strcpy($ph_alphabet + 3 | 0, $ph_buf2 | 0) | 0;
       $len = (_strlen($ph_buf2 | 0) | 0) + 3 | 0;
       HEAP8[$ph_alphabet + $len | 0] = 21;
       HEAP8[$ph_alphabet + ($len + 1) | 0] = $phontab_1;
       HEAP8[$ph_alphabet + ($len + 2) | 0] = 0;
      }
     }
    } while (0);
    if ((label | 0) == 32) {}
   }
  } while (0);
 }
 if ((HEAP8[$ph_buf | 0] | 0) == 0) {
  do {
   if (($al_offset | 0) != 0) {
    if (($al_offset | 0) != (HEAP32[(HEAP32[9112] | 0) + 300 >> 2] | 0)) {
     label = 47;
     break;
    }
    $language = HEAP32[(HEAP32[9112] | 0) + 304 >> 2] | 0;
   } else {
    label = 47;
   }
  } while (0);
  if ((label | 0) == 47) {
   do {
    if (($alphabet | 0) != 0) {
     if ((HEAP32[$alphabet + 12 >> 2] | 0) == 0) {
      label = 51;
      break;
     }
     if (($al_flags & 2 | 0) != 0) {
      label = 51;
      break;
     }
     $language = HEAP32[$alphabet + 12 >> 2] | 0;
    } else {
     label = 51;
    }
   } while (0);
   if ((label | 0) == 51) {
    $language = 25966;
   }
  }
  if (($language | 0) != (HEAP32[$2 + 324 >> 2] | 0)) {
   label = 55;
  } else {
   if (($language | 0) == 27503) {
    label = 55;
   }
  }
  if ((label | 0) == 55) {
   HEAP8[$ph_buf + 2 | 0] = __Z14SetTranslator2PKc(__Z13WordToString2j($language) | 0) | 0;
   if ((HEAP32[9110] | 0) != 0) {
    $309 = (HEAP32[$letter >> 2] | 0) - 44032 | 0;
    $code = $309;
    do {
     if (($309 | 0) >= 0) {
      if ((HEAP32[$letter >> 2] | 0) > 55215) {
       label = 61;
       break;
      }
      HEAP8[$hangul_buf | 0] = 32;
      $p3 = $hangul_buf + 1 | 0;
      $319 = (($code | 0) / 28 | 0 | 0) / 21 | 0;
      if (($319 | 0) != 11) {
       $p3 = $p3 + (__Z8utf8_outjPc($319 + 4352 | 0, $p3) | 0) | 0;
      }
      __Z8utf8_outjPc(((($code | 0) / 28 | 0 | 0) % 21 | 0) + 4449 | 0, $p3) | 0;
      __Z8utf8_outjPc((($code | 0) % 28 | 0) + 4519 | 0, $p3 + 3 | 0) | 0;
      HEAP8[$p3 + 6 | 0] = 32;
      HEAP8[$p3 + 7 | 0] = 0;
      HEAP8[$ph_buf + 3 | 0] = 0;
      __Z14TranslateRulesP10TranslatorPcS1_iS1_iPj(HEAP32[9110] | 0, $hangul_buf + 1 | 0, $ph_buf + 3 | 0, 77, 0, 0, 0) | 0;
      __Z13SetWordStressP10TranslatorPcPjii(HEAP32[9110] | 0, $ph_buf + 3 | 0, 0, -1, 0);
     } else {
      label = 61;
     }
    } while (0);
    if ((label | 0) == 61) {
     __Z12LookupLetterP10TranslatorjiPci(HEAP32[9110] | 0, HEAP32[$letter >> 2] | 0, HEAP8[$3 + $n_bytes | 0] | 0, $ph_buf + 3 | 0, $5 & 1);
    }
    if ((HEAP8[$ph_buf + 3 | 0] | 0) == 21) {
     HEAP8[$ph_buf + 2 | 0] = __Z14SetTranslator2PKc($ph_buf + 4 | 0) | 0;
     __Z12LookupLetterP10TranslatorjiPci(HEAP32[9110] | 0, HEAP32[$letter >> 2] | 0, HEAP8[$3 + $n_bytes | 0] | 0, $ph_buf + 3 | 0, $5 & 1);
    }
    __Z18SelectPhonemeTablei(HEAP32[(HEAP32[144] | 0) + 60 >> 2] | 0);
    if ((HEAP8[$ph_buf + 3 | 0] | 0) != 0) {
     HEAP8[$ph_buf | 0] = 9;
     HEAP8[$ph_buf + 1 | 0] = 21;
     $len = (_strlen($ph_buf + 3 | 0) | 0) + 3 | 0;
     HEAP8[$ph_buf + $len | 0] = 21;
     HEAP8[$ph_buf + ($len + 1) | 0] = HEAP32[$2 + 404 >> 2];
     HEAP8[$ph_buf + ($len + 2) | 0] = 0;
    }
   }
  }
 }
 if ((HEAP8[$ph_buf | 0] | 0) == 0) {
  if ((HEAP8[$ph_buf | 0] | 0) == 0) {
   $speak_letter_number = 1;
   if (($al_flags & 16 | 0) == 0) {
    if ((__Z9iswalpha2i(HEAP32[$letter >> 2] | 0) | 0) != 0) {
     __Z6LookupP10TranslatorPKcPc(HEAP32[9112] | 0, 8928, $ph_buf | 0) | 0;
    }
    do {
     if ((HEAP8[$ph_buf | 0] | 0) == 0) {
      if ((_iswspace(HEAP32[$letter >> 2] | 0) | 0) != 0) {
       break;
      }
      __Z6LookupP10TranslatorPKcPc(HEAP32[9112] | 0, 8440, $ph_buf | 0) | 0;
     }
    } while (0);
    if ((HEAP8[$ph_buf | 0] | 0) == 0) {
     __Z14EncodePhonemesPKcPcPi(7944, $ph_buf | 0, 0) | 0;
    }
   }
   do {
    if (($5 & 4 | 0) == 0) {
     if (($al_flags & 8 | 0) == 0) {
      break;
     }
     $speak_letter_number = 0;
    }
   } while (0);
   if (($speak_letter_number | 0) != 0) {
    if (($al_offset | 0) == 10240) {
     $p2 = $hexbuf | 0;
     $ix = 0;
     while (1) {
      if (($ix | 0) >= 8) {
       break;
      }
      if ((HEAP32[$letter >> 2] & 1 << $ix | 0) != 0) {
       $486 = $p2;
       $p2 = $486 + 1 | 0;
       HEAP8[$486] = $ix + 49;
      }
      $ix = $ix + 1 | 0;
     }
     HEAP8[$p2] = 0;
    } else {
     _sprintf($hexbuf | 0, 18376, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = HEAP32[$letter >> 2], tempVarArgs) | 0) | 0;
     STACKTOP = tempVarArgs;
    }
    $pbuf = $ph_buf | 0;
    $p2 = $hexbuf | 0;
    while (1) {
     if ((HEAP8[$p2] | 0) == 0) {
      break;
     }
     $pbuf = $pbuf + (_strlen($pbuf | 0) | 0) | 0;
     $511 = $pbuf;
     $pbuf = $511 + 1 | 0;
     HEAP8[$511] = 23;
     __Z12LookupLetterP10TranslatorjiPci(HEAP32[9112] | 0, HEAP8[$p2] | 0, 0, $pbuf, 1);
     if ((HEAP8[$pbuf | 0] | 0) == 0) {
      label = 97;
     } else {
      if ((HEAP8[$pbuf | 0] | 0) == 21) {
       label = 97;
      }
     }
     do {
      if ((label | 0) == 97) {
       label = 0;
       if ((HEAP8[$p2] | 0) < 97) {
        break;
       }
       __Z14EncodePhonemesPKcPcPi(HEAP32[30776 + ((HEAP8[$p2] | 0) - 97 << 2) >> 2] | 0, $pbuf, 0) | 0;
      }
     } while (0);
     $p2 = $p2 + 1 | 0;
    }
    _strcat($pbuf | 0, 23384) | 0;
   }
  }
 }
 $len = _strlen($4 | 0) | 0;
 if ((HEAP32[$2 + 240 >> 2] & 2 | 0) != 0) {
  _sprintf($ph_buf2 | 0, 17840, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 32 | 0, HEAP32[tempVarArgs >> 2] = 255, HEAP32[tempVarArgs + 8 >> 2] = $ph_alphabet, HEAP32[tempVarArgs + 16 >> 2] = $ph_buf, HEAP32[tempVarArgs + 24 >> 2] = $capital, tempVarArgs) | 0) | 0;
  STACKTOP = tempVarArgs;
 } else {
  _sprintf($ph_buf2 | 0, 17840, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 32 | 0, HEAP32[tempVarArgs >> 2] = 255, HEAP32[tempVarArgs + 8 >> 2] = $ph_alphabet, HEAP32[tempVarArgs + 16 >> 2] = $capital, HEAP32[tempVarArgs + 24 >> 2] = $ph_buf, tempVarArgs) | 0) | 0;
  STACKTOP = tempVarArgs;
 }
 if (($len + (_strlen($ph_buf2 | 0) | 0) | 0) >>> 0 < 200 >>> 0) {
  _strcpy($4 + $len | 0, $ph_buf2 | 0) | 0;
 }
 $1 = $n_bytes;
 $588 = $1;
 STACKTOP = sp;
 return $588 | 0;
}
function _main($argc, $argv) {
 $argc = $argc | 0;
 $argv = $argv | 0;
 var $1 = 0, $2 = 0, $3 = 0, $f_text = 0, $p_text = 0, $data_path = 0, $option_index = 0, $c = 0, $value = 0, $speed = 0, $ix = 0, $optarg2 = 0, $amp = 0, $wordgap = 0, $flag_stdin = 0, $flag_compile = 0, $pitch_adjustment = 0, $voice_select = 0, $filename = 0, $voicename = 0, $extn = 0, $19 = 0, $33 = 0, $94 = 0, $99 = 0, $124 = 0, $339 = 0, label = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 280 | 0;
 $option_index = sp | 0;
 $value = sp + 8 | 0;
 $voice_select = sp + 16 | 0;
 $filename = sp + 40 | 0;
 $voicename = sp + 240 | 0;
 $1 = 0;
 $2 = $argc;
 $3 = $argv;
 $f_text = 0;
 $p_text = 0;
 $data_path = 0;
 HEAP32[$option_index >> 2] = 0;
 $speed = 175;
 $amp = 100;
 $wordgap = 0;
 $flag_stdin = 0;
 $flag_compile = 0;
 $pitch_adjustment = 50;
 HEAP8[$voicename | 0] = 0;
 HEAP8[78288] = 0;
 HEAP8[36208] = 0;
 HEAP8[$filename | 0] = 0;
 HEAP32[19542] = 0;
 HEAP32[19530] = 0;
 HEAP32[19456] = 0;
 HEAP32[19454] = 0;
 HEAP32[19544] = 1;
 HEAP32[19534] = 1;
 HEAP32[19538] = 0;
 HEAP32[19596] = HEAP32[_stdout >> 2];
 L1 : while (1) {
  $c = _getopt_long($2, $3, 15936, 21352, $option_index) | 0;
  if (($c | 0) == -1) {
   label = 3;
   break;
  }
  $optarg2 = HEAP32[19548] | 0;
  switch ($c | 0) {
  case 98:
   {
    HEAP32[19538] = 2;
    $19 = _sscanf($optarg2 | 0, 15856, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $value, tempVarArgs) | 0) | 0;
    STACKTOP = tempVarArgs;
    do {
     if (($19 | 0) == 1) {
      if ((HEAP32[$value >> 2] | 0) > 4) {
       break;
      }
      HEAP32[19538] = HEAP32[$value >> 2];
     }
    } while (0);
    break;
   }
  case 104:
   {
    label = 9;
    break L1;
    break;
   }
  case 107:
   {
    HEAP32[19546] = _atoi($optarg2 | 0) | 0;
    break;
   }
  case 120:
   {
    HEAP32[19530] = 1;
    break;
   }
  case 88:
   {
    HEAP32[19530] = 2;
    break;
   }
  case 109:
   {
    HEAP32[19462] = 1;
    break;
   }
  case 112:
   {
    $pitch_adjustment = _atoi($optarg2 | 0) | 0;
    if (($pitch_adjustment | 0) > 99) {
     $pitch_adjustment = 99;
    }
    break;
   }
  case 113:
   {
    HEAP32[9544] = 1;
    break;
   }
  case 102:
   {
    __Z8strncpy0PcPKci($filename | 0, $optarg2, 200);
    break;
   }
  case 108:
   {
    HEAP32[$value >> 2] = 0;
    HEAP32[$value >> 2] = _atoi($optarg2 | 0) | 0;
    HEAP32[19542] = HEAP32[$value >> 2];
    break;
   }
  case 97:
   {
    $amp = _atoi($optarg2 | 0) | 0;
    break;
   }
  case 115:
   {
    $speed = _atoi($optarg2 | 0) | 0;
    break;
   }
  case 103:
   {
    $wordgap = _atoi($optarg2 | 0) | 0;
    break;
   }
  case 118:
   {
    __Z8strncpy0PcPKci($voicename | 0, $optarg2, 40);
    break;
   }
  case 119:
   {
    HEAP32[19456] = 1;
    __Z8strncpy0PcPKci(36208, $optarg2, 200);
    break;
   }
  case 122:
   {
    HEAP32[19544] = 0;
    break;
   }
  case 256:
   {
    $flag_stdin = 1;
    break;
   }
  case 261:
   {
    HEAP32[19456] = 1;
    _strcpy(36208, 17528) | 0;
    break;
   }
  case 257:
  case 258:
   {
    if (($optarg2 | 0) != 0) {
     __Z8strncpy0PcPKci($voicename | 0, $optarg2, 40);
    }
    $flag_compile = $c;
    break;
   }
  case 259:
   {
    HEAP32[19468] = 1;
    if (($optarg2 | 0) != 0) {
     $ix = 0;
     while (1) {
      if (($ix | 0) < 60) {
       $94 = HEAP8[$optarg2 + $ix | 0] | 0;
       HEAP32[77880 + ($ix << 2) >> 2] = $94;
       $99 = ($94 | 0) != 0;
      } else {
       $99 = 0;
      }
      if (!$99) {
       break;
      }
      $ix = $ix + 1 | 0;
     }
     HEAP32[19529] = 0;
     HEAP32[19468] = 2;
    }
    break;
   }
  case 260:
   {
    label = 39;
    break L1;
    break;
   }
  case 262:
   {
    if (($optarg2 | 0) == 0) {
     HEAP32[9492] = 30;
    } else {
     HEAP32[9492] = _atoi($optarg2 | 0) | 0;
    }
    break;
   }
  case 263:
   {
    $data_path = $optarg2;
    break;
   }
  case 264:
   {
    $124 = _fopen($optarg2 | 0, 15536) | 0;
    HEAP32[19596] = $124;
    if (($124 | 0) == 0) {
     _fprintf(HEAP32[_stderr >> 2] | 0, 15400, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $optarg2, tempVarArgs) | 0) | 0;
     STACKTOP = tempVarArgs;
     HEAP32[19596] = HEAP32[_stderr >> 2];
    }
    break;
   }
  case 265:
   {
    HEAP32[19540] = 16;
    break;
   }
  case 266:
   {
    HEAP32[19530] = 3;
    if (($optarg2 | 0) != 0) {
     HEAP32[$value >> 2] = -1;
     _sscanf($optarg2 | 0, 15856, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $value, tempVarArgs) | 0) | 0;
     STACKTOP = tempVarArgs;
     if ((HEAP32[$value >> 2] | 0) < 0) {
      label = 52;
     } else {
      if ((HEAP32[$value >> 2] | 0) > 3) {
       label = 52;
      }
     }
     if ((label | 0) == 52) {
      label = 0;
      _fprintf(HEAP32[_stderr >> 2] | 0, 15232, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 7 & -8, HEAP32[tempVarArgs >> 2] = 0, tempVarArgs) | 0) | 0;
      STACKTOP = tempVarArgs;
      HEAP32[$value >> 2] = 0;
     }
     HEAP32[19530] = (HEAP32[19530] | 0) + (HEAP32[$value >> 2] | 0);
    }
    break;
   }
  case 267:
   {
    label = 55;
    break L1;
    break;
   }
  default:
   {
    label = 56;
    break L1;
   }
  }
 }
 if ((label | 0) == 3) {
  __ZL9init_pathPcS_(HEAP32[$3 >> 2] | 0, $data_path);
  __ZL10initialisev() | 0;
  if ((HEAP8[$voicename | 0] | 0) == 0) {
   _strcpy($voicename | 0, 15008) | 0;
  }
  do {
   if ((__Z14SetVoiceByNamePKc($voicename | 0) | 0) != 0) {
    _memset($voice_select | 0, 0, 24) | 0;
    HEAP32[$voice_select + 4 >> 2] = $voicename;
    if ((__Z20SetVoiceByPropertiesP12espeak_VOICE($voice_select) | 0) != 0) {
     _fprintf(HEAP32[_stderr >> 2] | 0, 14896, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = HEAP32[5336], HEAP32[tempVarArgs + 8 >> 2] = $voicename, tempVarArgs) | 0) | 0;
     STACKTOP = tempVarArgs;
     _exit(2);
     return 0;
    } else {
     break;
    }
   }
  } while (0);
  if (($flag_compile | 0) != 0) {
   __Z17CompileDictionaryPKcS0_P8_IO_FILEPci(0, 90512, 0, 0, $flag_compile & 1) | 0;
   _exit(0);
   return 0;
  }
  __Z12SetParameteriii(1, $speed, 0);
  __Z12SetParameteriii(2, $amp, 0);
  __Z12SetParameteriii(6, HEAP32[19546] | 0, 0);
  __Z12SetParameteriii(5, HEAP32[19468] | 0, 0);
  __Z12SetParameteriii(7, $wordgap, 0);
  if (($pitch_adjustment | 0) != 50) {
   __Z12SetParameteriii(3, $pitch_adjustment, 0);
  }
  __Z13DoVoiceChangeP7voice_t(HEAP32[144] | 0);
  if ((HEAP8[$filename | 0] | 0) == 0) {
   do {
    if ((HEAP32[1340] | 0) < ($2 | 0)) {
     if (($flag_stdin | 0) != 0) {
      label = 72;
      break;
     }
     $p_text = HEAP32[$3 + (HEAP32[1340] << 2) >> 2] | 0;
    } else {
     label = 72;
    }
   } while (0);
   if ((label | 0) == 72) {
    $f_text = HEAP32[_stdin >> 2] | 0;
    if (($flag_stdin | 0) == 0) {
     HEAP32[19542] = -1;
    }
   }
  } else {
   $f_text = _fopen($filename | 0, 14808) | 0;
  }
  do {
   if (($f_text | 0) == 0) {
    if (($p_text | 0) != 0) {
     break;
    }
    _fprintf(HEAP32[_stderr >> 2] | 0, 14720, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = HEAP32[5336], HEAP32[tempVarArgs + 8 >> 2] = $filename, tempVarArgs) | 0) | 0;
    STACKTOP = tempVarArgs;
    _exit(1);
    return 0;
   }
  } while (0);
  do {
   if ((HEAP32[19456] | 0) != 0) {
    label = 82;
   } else {
    if ((HEAP32[9544] | 0) != 0) {
     label = 82;
     break;
    }
    __Z16WavegenInitSoundv() | 0;
    __Z8InitTexti(0);
    __Z15SpeakNextClauseP8_IO_FILEPKvi($f_text, $p_text, 0) | 0;
    if ((HEAP32[19466] | 0) == 0) {
     _fprintf(HEAP32[_stderr >> 2] | 0, 14392, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 7 & -8, HEAP32[tempVarArgs >> 2] = 0, tempVarArgs) | 0) | 0;
     STACKTOP = tempVarArgs;
     break;
    }
    do {
    } while ((__Z15SpeakNextClauseP8_IO_FILEPKvi(0, 0, 1) | 0) != 0);
    $1 = 0;
    $339 = $1;
    STACKTOP = sp;
    return $339 | 0;
   }
  } while (0);
  if ((label | 0) == 82) {
   if ((HEAP32[9544] | 0) != 0) {
    __ZL12OpenWaveFilePKci(0, HEAP32[9496] | 0) | 0;
    HEAP32[19456] = 1;
   } else {
    HEAP32[9492] = (Math_imul(HEAP32[9496] | 0, HEAP32[9492] | 0) | 0) * 60 | 0;
    do {
     if ((HEAP32[9492] | 0) != 0) {
      $extn = _strrchr(36208, 46) | 0;
      do {
       if (($extn | 0) != 0) {
        if ((36208 + (_strlen(36208) | 0) - $extn | 0) > 4) {
         break;
        }
        _strcpy(78368, $extn | 0) | 0;
        HEAP8[$extn] = 0;
       }
      } while (0);
     } else {
      if ((__ZL12OpenWaveFilePKci(36208, HEAP32[9496] | 0) | 0) != 0) {
       _fprintf(HEAP32[_stderr >> 2] | 0, 14608, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = 36208, tempVarArgs) | 0) | 0;
       STACKTOP = tempVarArgs;
       _exit(3);
       return 0;
      } else {
       break;
      }
     }
    } while (0);
   }
   __Z8InitTexti(0);
   __Z15SpeakNextClauseP8_IO_FILEPKvi($f_text, $p_text, 0) | 0;
   $ix = 1;
   while (1) {
    if ((__ZL11WavegenFilev() | 0) != 0) {
     if (($ix | 0) == 0) {
      break;
     }
    }
    if ((__Z8GenerateP12PHONEME_LISTPii(44280, 78248, 1) | 0) == 0) {
     $ix = __Z15SpeakNextClauseP8_IO_FILEPKvi(0, 0, 1) | 0;
    }
   }
   __ZL13CloseWaveFilev();
  }
  do {
   if ((HEAP32[19596] | 0) != (HEAP32[_stdout >> 2] | 0)) {
    if ((HEAP32[19596] | 0) == (HEAP32[_stderr >> 2] | 0)) {
     break;
    }
    _fclose(HEAP32[19596] | 0) | 0;
   }
  } while (0);
  $1 = 0;
  $339 = $1;
  STACKTOP = sp;
  return $339 | 0;
 } else if ((label | 0) == 9) {
  __ZL9init_pathPcS_(HEAP32[$3 >> 2] | 0, $data_path);
  $33 = HEAP32[6018] | 0;
  _printf(15672, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 24 | 0, HEAP32[tempVarArgs >> 2] = HEAP32[146], HEAP32[tempVarArgs + 8 >> 2] = 76328, HEAP32[tempVarArgs + 16 >> 2] = $33, tempVarArgs) | 0) | 0;
  STACKTOP = tempVarArgs;
  _exit(0);
  return 0;
 } else if ((label | 0) == 39) {
  __ZL9init_pathPcS_(HEAP32[$3 >> 2] | 0, $data_path);
  __Z13DisplayVoicesP8_IO_FILEPc(HEAP32[_stdout >> 2] | 0, $optarg2);
  _exit(0);
  return 0;
 } else if ((label | 0) == 55) {
  __ZL9init_pathPcS_(HEAP32[$3 >> 2] | 0, $data_path);
  _printf(15120, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = HEAP32[146], HEAP32[tempVarArgs + 8 >> 2] = 76328, tempVarArgs) | 0) | 0;
  STACKTOP = tempVarArgs;
  _exit(0);
  return 0;
 } else if ((label | 0) == 56) {
  _exit(0);
  return 0;
 }
 return 0;
}
function __ZL11LookupDict2P10TranslatorPKcS2_PcPjiP8WORD_TAB($tr, $word, $word2, $phonetic, $flags, $end_flags, $wtab) {
 $tr = $tr | 0;
 $word = $word | 0;
 $word2 = $word2 | 0;
 $phonetic = $phonetic | 0;
 $flags = $flags | 0;
 $end_flags = $end_flags | 0;
 $wtab = $wtab | 0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $p = 0, $next = 0, $phoneme_len = 0, $wlen = 0, $flag = 0, $dictionary_flags = 0, $dictionary_flags2 = 0, $condition_failed = 0, $n_chars = 0, $no_phonemes = 0, $skipwords = 0, $ix = 0, $c = 0, $word_end = 0, $word1 = 0, $wflags = 0, $lookup_symbol = 0, $word_buf = 0, $dict_flags_buf = 0, $ph_decoded = 0, $textmode = 0, $117 = 0, $486 = 0, $561 = 0, $568 = 0, label = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 456 | 0;
 $c = sp | 0;
 $word_buf = sp + 8 | 0;
 $dict_flags_buf = sp + 176 | 0;
 $ph_decoded = sp + 256 | 0;
 $2 = $tr;
 $3 = $word;
 $4 = $word2;
 $5 = $phonetic;
 $6 = $flags;
 $7 = $end_flags;
 $8 = $wtab;
 $condition_failed = 0;
 $wflags = 0;
 if (($8 | 0) != 0) {
  $wflags = HEAP32[$8 >> 2] | 0;
 }
 $lookup_symbol = HEAP32[$6 + 4 >> 2] & 1073741824;
 $word1 = $3;
 if ((HEAP32[$2 + 332 >> 2] | 0) > 0) {
  __Z8strncpy0PcPKci($word_buf | 0, $3, 160);
  $wlen = __Z17TransposeAlphabetP10TranslatorPc($2, $word_buf | 0) | 0;
  $3 = $word_buf | 0;
 } else {
  $wlen = _strlen($3 | 0) | 0;
 }
 $p = HEAP32[$2 + 812 + ((__Z14HashDictionaryPKc($3) | 0) << 2) >> 2] | 0;
 if (($p | 0) == 0) {
  if (($6 | 0) != 0) {
   HEAP32[$6 >> 2] = 0;
  }
  $1 = 0;
  $568 = $1;
  STACKTOP = sp;
  return $568 | 0;
 }
 L15 : while (1) {
  if ((HEAP8[$p] | 0) == 0) {
   label = 148;
   break;
  }
  $next = $p + (HEAP8[$p | 0] | 0) | 0;
  do {
   if ((HEAP8[$p + 1 | 0] & 127 | 0) == ($wlen | 0)) {
    if ((_memcmp($3 | 0, $p + 2 | 0, $wlen & 63 | 0) | 0) != 0) {
     break;
    }
    $word_end = $4;
    $dictionary_flags = 0;
    $dictionary_flags2 = 0;
    $no_phonemes = HEAP8[$p + 1 | 0] & 128;
    $p = $p + ((HEAP8[$p + 1 | 0] & 63) + 2) | 0;
    if (($no_phonemes | 0) != 0) {
     HEAP8[$5 | 0] = 0;
     $phoneme_len = 0;
    } else {
     _strcpy($5 | 0, $p | 0) | 0;
     $phoneme_len = _strlen($p | 0) | 0;
     $p = $p + ($phoneme_len + 1) | 0;
    }
    while (1) {
     if ($p >>> 0 >= $next >>> 0) {
      break;
     }
     $117 = $p;
     $p = $117 + 1 | 0;
     $flag = HEAP8[$117] | 0;
     if (($flag & 255 | 0) >= 100) {
      if (($flag & 255 | 0) >= 132) {
       if ((HEAP32[$2 + 440 >> 2] & 1 << ($flag & 255) - 132 | 0) != 0) {
        $condition_failed = 1;
       }
      } else {
       if ((HEAP32[$2 + 440 >> 2] & 1 << ($flag & 255) - 100 | 0) == 0) {
        $condition_failed = 1;
       }
      }
     } else {
      if (($flag & 255 | 0) > 80) {
       $n_chars = $next - $p | 0;
       $skipwords = ($flag & 255) - 80 | 0;
       if (($8 | 0) != 0) {
        $ix = 0;
        while (1) {
         if (($ix | 0) > ($skipwords | 0)) {
          break;
         }
         if ((HEAP32[$8 + ($ix * 12 | 0) >> 2] & 3072 | 0) != 0) {
          $condition_failed = 1;
         }
         $ix = $ix + 1 | 0;
        }
       }
       if ((_memcmp($4 | 0, $p | 0, $n_chars | 0) | 0) != 0) {
        $condition_failed = 1;
       }
       if (($condition_failed | 0) != 0) {
        label = 41;
        break;
       }
       $dictionary_flags = $dictionary_flags | 128;
       HEAP32[22626] = $skipwords;
       $p = $next;
       $word_end = $4 + $n_chars | 0;
      } else {
       if (($flag & 255 | 0) > 64) {
        $dictionary_flags = $dictionary_flags & -16 | $flag & 15;
        if (($flag & 12 | 0) == 12) {
         $dictionary_flags = $dictionary_flags | 512;
        }
       } else {
        if (($flag & 255 | 0) >= 32) {
         $dictionary_flags2 = $dictionary_flags2 | 1 << ($flag & 255) - 32;
        } else {
         $dictionary_flags = $dictionary_flags | 1 << ($flag & 255);
        }
       }
      }
     }
    }
    if ((label | 0) == 41) {
     label = 0;
     $p = $next;
    }
    if (($condition_failed | 0) != 0) {
     $condition_failed = 0;
     continue L15;
    }
    do {
     if (($7 & 4 | 0) == 0) {
      if (($dictionary_flags2 & 65536 | 0) != 0) {
       continue L15;
      } else {
       break;
      }
     }
    } while (0);
    do {
     if (($7 & 1024 | 0) != 0) {
      if (($dictionary_flags2 & 49152 | 0) == 0) {
       break;
      }
      continue L15;
     }
    } while (0);
    if (($7 & 4 | 0) != 0) {
     if (($dictionary_flags2 & 16384 | 0) != 0) {
      continue L15;
     }
     do {
      if (($dictionary_flags2 & 32768 | 0) != 0) {
       if (($7 & 8 | 0) != 0) {
        break;
       }
       continue L15;
      }
     } while (0);
    }
    do {
     if (($dictionary_flags2 & 4096 | 0) != 0) {
      if (($wflags & 16384 | 0) != 0) {
       break;
      } else {
       continue L15;
      }
     }
    } while (0);
    do {
     if (($dictionary_flags2 & 512 | 0) != 0) {
      if (($wflags & 2 | 0) != 0) {
       break;
      } else {
       continue L15;
      }
     }
    } while (0);
    do {
     if (($dictionary_flags2 & 1024 | 0) != 0) {
      if (($wflags & 1 | 0) != 0) {
       break;
      } else {
       continue L15;
      }
     }
    } while (0);
    do {
     if (($dictionary_flags & 33554432 | 0) != 0) {
      if (($wflags & 65536 | 0) != 0) {
       break;
      } else {
       continue L15;
      }
     }
    } while (0);
    do {
     if (($dictionary_flags2 & 131072 | 0) != 0) {
      if ($word_end >>> 0 >= (HEAP32[(HEAP32[9112] | 0) + 8324 >> 2] | 0) >>> 0) {
       break;
      }
      if (($lookup_symbol | 0) != 0) {
       break;
      }
      continue L15;
     }
    } while (0);
    do {
     if (($dictionary_flags2 & 262144 | 0) != 0) {
      if ((HEAP32[$8 >> 2] & 512 | 0) != 0) {
       break;
      }
      continue L15;
     }
    } while (0);
    do {
     if (($dictionary_flags2 & 8192 | 0) != 0) {
      if ((HEAP32[(HEAP32[9112] | 0) + 8360 >> 2] & 524288 | 0) != 0) {
       break;
      }
      continue L15;
     }
    } while (0);
    if (($dictionary_flags2 & 16 | 0) != 0) {
     do {
      if ((HEAP32[$2 + 8304 >> 2] | 0) == 0) {
       if ((HEAP32[$2 + 8312 >> 2] | 0) != 0) {
        if (($7 & 8 | 0) != 0) {
         break;
        }
       }
       continue L15;
      }
     } while (0);
     do {
      if ((HEAP32[$2 + 324 >> 2] | 0) == 25966) {
       if ((HEAP32[$2 + 8352 >> 2] & 1048576 | 0) == 0) {
        break;
       }
       if (($7 & 8 | 0) == 0) {
        break;
       }
       continue L15;
      }
     } while (0);
    }
    do {
     if (($dictionary_flags2 & 64 | 0) != 0) {
      if ((HEAP32[$2 + 8308 >> 2] | 0) != 0) {
       break;
      } else {
       continue L15;
      }
     }
    } while (0);
    L156 : do {
     if (($dictionary_flags2 & 32 | 0) != 0) {
      do {
       if ((HEAP32[$2 + 8316 >> 2] | 0) != 0) {
        if (($7 & 2048 | 0) != 0) {
         break;
        }
        break L156;
       }
      } while (0);
      continue L15;
     }
    } while (0);
    do {
     if (($dictionary_flags2 & 524288 | 0) != 0) {
      if (($2 | 0) != (HEAP32[9112] | 0)) {
       continue L15;
      } else {
       break;
      }
     }
    } while (0);
    if (($dictionary_flags & 65536 | 0) == 0) {
     break L15;
    }
    if ((HEAP32[$2 + 324 >> 2] | 0) != 26741) {
     label = 124;
     break L15;
    }
    if ((HEAP32[$2 + 8352 >> 2] & 32768 | 0) != 0) {
     label = 124;
     break L15;
    }
    continue L15;
   }
  } while (0);
  $p = $next;
 }
 if ((label | 0) == 124) {} else if ((label | 0) == 148) {
  $1 = 0;
  $568 = $1;
  STACKTOP = sp;
  return $568 | 0;
 }
 if (($6 | 0) != 0) {
  HEAP32[$6 >> 2] = $dictionary_flags | 1073741824;
  HEAP32[$6 + 4 >> 2] = $dictionary_flags2;
 }
 if (($phoneme_len | 0) == 0) {
  if ((HEAP32[19530] | 0) == 2) {
   __Z22print_dictionary_flagsPjPci($6, $dict_flags_buf | 0, 80);
   _fprintf(HEAP32[19596] | 0, 14880, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = $word1, HEAP32[tempVarArgs + 8 >> 2] = $dict_flags_buf, tempVarArgs) | 0) | 0;
   STACKTOP = tempVarArgs;
  }
  $1 = 0;
  $568 = $1;
  STACKTOP = sp;
  return $568 | 0;
 }
 if (($6 | 0) != 0) {
  $486 = $6 | 0;
  HEAP32[$486 >> 2] = HEAP32[$486 >> 2] | -2147483648;
 }
 if ((HEAP32[19530] | 0) == 2) {
  __Z14DecodePhonemesPKcPc($5, $ph_decoded | 0);
  if (($dictionary_flags & 536870912 | 0) == 0) {
   $textmode = 0;
  } else {
   $textmode = 1;
  }
  if (($textmode | 0) == (HEAP8[(HEAP32[9112] | 0) + 272 | 0] | 0)) {
   do {
    if (($dictionary_flags & 128 | 0) != 0) {
     if (($8 | 0) == 0) {
      label = 141;
      break;
     }
     _memcpy($word_buf | 0, $4 | 0, $word_end - $4 | 0) | 0;
     HEAP8[$word_buf + ($word_end - $4 - 1) | 0] = 0;
     _fprintf(HEAP32[19596] | 0, 14792, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = $word1, HEAP32[tempVarArgs + 8 >> 2] = $word_buf, tempVarArgs) | 0) | 0;
     STACKTOP = tempVarArgs;
    } else {
     label = 141;
    }
   } while (0);
   if ((label | 0) == 141) {
    _fprintf(HEAP32[19596] | 0, 14704, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $word1, tempVarArgs) | 0) | 0;
    STACKTOP = tempVarArgs;
   }
   __Z22print_dictionary_flagsPjPci($6, $dict_flags_buf | 0, 80);
   _fprintf(HEAP32[19596] | 0, 14592, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = $ph_decoded, HEAP32[tempVarArgs + 8 >> 2] = $dict_flags_buf, tempVarArgs) | 0) | 0;
   STACKTOP = tempVarArgs;
  }
 }
 $ix = __Z7utf8_inPiPKc($c, $3) | 0;
 do {
  if ((HEAP8[$3 + $ix | 0] | 0) == 0) {
   if ((__Z7IsAlphaj(HEAP32[$c >> 2] | 0) | 0) != 0) {
    break;
   }
   $561 = $6 | 0;
   HEAP32[$561 >> 2] = HEAP32[$561 >> 2] | 134217728;
  }
 } while (0);
 $1 = $word_end;
 $568 = $1;
 STACKTOP = sp;
 return $568 | 0;
}
function __ZL10LookupNum3P10TranslatoriPciii($tr, $value, $ph_out, $suppress_null, $thousandplex, $control) {
 $tr = $tr | 0;
 $value = $value | 0;
 $ph_out = $ph_out | 0;
 $suppress_null = $suppress_null | 0;
 $thousandplex = $thousandplex | 0;
 $control = $control | 0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $found = 0, $hundreds = 0, $tensunits = 0, $x = 0, $ix = 0, $exact = 0, $ordinal = 0, $tplex = 0, $say_zero_hundred = 0, $say_one_hundred = 0, $string = 0, $buf1 = 0, $buf2 = 0, $ph_100 = 0, $ph_10T = 0, $ph_digits = 0, $ph_thousands = 0, $ph_hundred_and = 0, $ph_thousand_and = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, label = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 416 | 0;
 $string = sp | 0;
 $buf1 = sp + 16 | 0;
 $buf2 = sp + 120 | 0;
 $ph_100 = sp + 224 | 0;
 $ph_10T = sp + 248 | 0;
 $ph_digits = sp + 272 | 0;
 $ph_thousands = sp + 328 | 0;
 $ph_hundred_and = sp + 384 | 0;
 $ph_thousand_and = sp + 400 | 0;
 $1 = $tr;
 $2 = $value;
 $3 = $ph_out;
 $4 = $suppress_null;
 $5 = $thousandplex;
 $6 = $control;
 $say_zero_hundred = 0;
 $ordinal = $6 & 34;
 $hundreds = ($2 | 0) / 100 | 0;
 $tensunits = ($2 | 0) % 100 | 0;
 HEAP8[$buf1 | 0] = 0;
 HEAP8[$ph_thousands | 0] = 0;
 HEAP8[$ph_thousand_and | 0] = 0;
 do {
  if ((HEAP32[$1 + 200 >> 2] & 4194304 | 0) != 0) {
   if (($6 & 1 | 0) == 0) {
    if (($hundreds | 0) < 10) {
     break;
    }
   }
   $say_zero_hundred = 1;
  }
 } while (0);
 if (($hundreds | 0) > 0) {
  label = 7;
 } else {
  if (($say_zero_hundred | 0) != 0) {
   label = 7;
  }
 }
 if ((label | 0) == 7) {
  $found = 0;
  do {
   if (($ordinal | 0) != 0) {
    if (($tensunits | 0) != 0) {
     break;
    }
    $found = __Z6LookupP10TranslatorPKcPc($1, 10664, $ph_100 | 0) | 0;
   }
  } while (0);
  if (($found | 0) == 0) {
   if (($tensunits | 0) == 0) {
    $found = __Z6LookupP10TranslatorPKcPc($1, 10608, $ph_100 | 0) | 0;
   }
   if (($found | 0) == 0) {
    __Z6LookupP10TranslatorPKcPc($1, 10528, $ph_100 | 0) | 0;
   }
  }
  do {
   if ((HEAP32[$1 + 200 >> 2] & 2048 | 0) != 0) {
    if (($hundreds | 0) != 19) {
     label = 19;
     break;
    }
   } else {
    label = 19;
   }
  } while (0);
  if ((label | 0) == 19) {
   if (($hundreds | 0) >= 10) {
    HEAP8[$ph_digits | 0] = 0;
    $exact = 0;
    if ((($2 | 0) % 1e3 | 0 | 0) == 0) {
     $exact = 1;
    }
    $tplex = $5 + 1 | 0;
    if ((HEAP32[$1 + 204 >> 2] & 16384 | 0) != 0) {
     $tplex = 0;
    }
    if ((__ZL15LookupThousandsP10TranslatoriiiPc($1, ($hundreds | 0) / 10 | 0, $tplex, $exact | $ordinal, $ph_10T | 0) | 0) == 0) {
     $x = 0;
     if ((HEAP32[$1 + 204 >> 2] & 1 << $tplex | 0) != 0) {
      $x = 8;
     }
     if ((HEAP32[$1 + 324 >> 2] | 0) == 28012) {
      $x = 520;
     }
     __ZL10LookupNum2P10TranslatoriiiPc($1, ($hundreds | 0) / 10 | 0, $5, $x, $ph_digits | 0) | 0;
    }
    if ((HEAP32[$1 + 204 >> 2] & 512 | 0) != 0) {
     _sprintf($ph_thousands | 0, 10392, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 32 | 0, HEAP32[tempVarArgs >> 2] = $ph_10T, HEAP32[tempVarArgs + 8 >> 2] = 15, HEAP32[tempVarArgs + 16 >> 2] = $ph_digits, HEAP32[tempVarArgs + 24 >> 2] = 15, tempVarArgs) | 0) | 0;
     STACKTOP = tempVarArgs;
    } else {
     _sprintf($ph_thousands | 0, 10392, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 32 | 0, HEAP32[tempVarArgs >> 2] = $ph_digits, HEAP32[tempVarArgs + 8 >> 2] = 15, HEAP32[tempVarArgs + 16 >> 2] = $ph_10T, HEAP32[tempVarArgs + 24 >> 2] = 15, tempVarArgs) | 0) | 0;
     STACKTOP = tempVarArgs;
    }
    $hundreds = ($hundreds | 0) % 10 | 0;
    do {
     if (($hundreds | 0) == 0) {
      if (($say_zero_hundred | 0) != 0) {
       break;
      }
      HEAP8[$ph_100 | 0] = 0;
     }
    } while (0);
    $4 = 1;
    $6 = $6 | 1;
   }
  }
  HEAP8[$ph_digits | 0] = 0;
  if (($hundreds | 0) > 0) {
   label = 40;
  } else {
   if (($say_zero_hundred | 0) != 0) {
    label = 40;
   }
  }
  if ((label | 0) == 40) {
   do {
    if ((HEAP32[$1 + 200 >> 2] & 262144 | 0) != 0) {
     if (($6 & 1 | 0) == 0) {
      if ((HEAP8[$ph_thousands | 0] | 0) == 0) {
       break;
      }
     }
     __Z6LookupP10TranslatorPKcPc($1, 10904, $ph_thousand_and | 0) | 0;
    }
   } while (0);
   $4 = 1;
   $found = 0;
   do {
    if (($ordinal | 0) != 0) {
     if (($tensunits | 0) != 0) {
      if ((HEAP32[$1 + 204 >> 2] & 4096 | 0) == 0) {
       break;
      }
     }
     _sprintf($string | 0, 10352, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $hundreds, tempVarArgs) | 0) | 0;
     STACKTOP = tempVarArgs;
     $found = __Z6LookupP10TranslatorPKcPc($1, $string | 0, $ph_digits | 0) | 0;
     do {
      if ((HEAP32[$1 + 204 >> 2] & 4096 | 0) != 0) {
       if (($tensunits | 0) <= 0) {
        break;
       }
       _strcat($ph_digits | 0, 115400) | 0;
      }
     } while (0);
    }
   } while (0);
   do {
    if (($hundreds | 0) == 0) {
     if (($say_zero_hundred | 0) == 0) {
      label = 54;
      break;
     }
     __Z6LookupP10TranslatorPKcPc($1, 16328, $ph_digits | 0) | 0;
    } else {
     label = 54;
    }
   } while (0);
   if ((label | 0) == 54) {
    do {
     if (($hundreds | 0) == 1) {
      if ((HEAP32[$1 + 204 >> 2] & 131072 | 0) == 0) {
       label = 58;
       break;
      }
      if (($6 & 1 | 0) != 0) {
       label = 58;
       break;
      }
     } else {
      label = 58;
     }
    } while (0);
    if ((label | 0) == 58) {
     do {
      if (($found | 0) == 0) {
       if (($tensunits | 0) != 0) {
        break;
       }
       _sprintf($string | 0, 10296, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $hundreds, tempVarArgs) | 0) | 0;
       STACKTOP = tempVarArgs;
       $found = __Z6LookupP10TranslatorPKcPc($1, $string | 0, $ph_digits | 0) | 0;
      }
     } while (0);
     if (($found | 0) == 0) {
      _sprintf($string | 0, 10208, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $hundreds, tempVarArgs) | 0) | 0;
      STACKTOP = tempVarArgs;
      $found = __Z6LookupP10TranslatorPKcPc($1, $string | 0, $ph_digits | 0) | 0;
     }
    }
    if (($found | 0) != 0) {
     HEAP8[$ph_100 | 0] = 0;
    } else {
     $say_one_hundred = 1;
     if (($hundreds | 0) == 1) {
      if ((HEAP32[$1 + 200 >> 2] & 1024 | 0) != 0) {
       $say_one_hundred = 0;
      }
     }
     if (($say_one_hundred | 0) != 0) {
      __ZL10LookupNum2P10TranslatoriiiPc($1, $hundreds, $5, 0, $ph_digits | 0) | 0;
     }
    }
   }
  }
  _sprintf($buf1 | 0, 10824, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 32 | 0, HEAP32[tempVarArgs >> 2] = $ph_thousands, HEAP32[tempVarArgs + 8 >> 2] = $ph_thousand_and, HEAP32[tempVarArgs + 16 >> 2] = $ph_digits, HEAP32[tempVarArgs + 24 >> 2] = $ph_100, tempVarArgs) | 0) | 0;
  STACKTOP = tempVarArgs;
 }
 HEAP8[$ph_hundred_and | 0] = 0;
 if (($tensunits | 0) > 0) {
  do {
   if (($6 & 2 | 0) != 0) {
    if ((HEAP32[$1 + 204 >> 2] & 4096 | 0) == 0) {
     label = 80;
     break;
    }
   } else {
    label = 80;
   }
  } while (0);
  if ((label | 0) == 80) {
   do {
    if (($2 | 0) > 100) {
     label = 83;
    } else {
     if (($6 & 1 | 0) == 0) {
      break;
     }
     if (($5 | 0) == 0) {
      label = 83;
     }
    }
   } while (0);
   if ((label | 0) == 83) {
    do {
     if ((HEAP32[$1 + 200 >> 2] & 64 | 0) != 0) {
      label = 86;
     } else {
      if ((HEAP32[$1 + 200 >> 2] & 8388608 | 0) == 0) {
       break;
      }
      if (($tensunits | 0) < 10) {
       label = 86;
      }
     }
    } while (0);
    if ((label | 0) == 86) {
     __Z6LookupP10TranslatorPKcPc($1, 10904, $ph_hundred_and | 0) | 0;
    }
   }
   do {
    if ((HEAP32[$1 + 200 >> 2] & 524288 | 0) != 0) {
     if (($hundreds | 0) != 0) {
      break;
     }
     if (($6 & 1 | 0) == 0) {
      if ((HEAP8[$ph_thousands | 0] | 0) == 0) {
       break;
      }
     }
     __Z6LookupP10TranslatorPKcPc($1, 10904, $ph_hundred_and | 0) | 0;
    }
   } while (0);
  }
 }
 HEAP8[$buf2 | 0] = 0;
 do {
  if (($tensunits | 0) == 0) {
   if (($4 | 0) == 0) {
    break;
   }
   if ((HEAP8[115400] | 0) != 0) {
    $ix = _strlen($buf1 | 0) | 0;
    do {
     if (($ix | 0) > 0) {
      if ((HEAP8[$buf1 + ($ix - 1) | 0] | 0) != 10) {
       break;
      }
      HEAP8[$buf1 + ($ix - 1) | 0] = 0;
     }
    } while (0);
    _strcpy($buf2 | 0, 115400) | 0;
   }
   $482 = $3;
   $483 = $buf1 | 0;
   $484 = $ph_hundred_and | 0;
   $485 = $buf2 | 0;
   $486 = _sprintf($482 | 0, 10144, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 32 | 0, HEAP32[tempVarArgs >> 2] = $483, HEAP32[tempVarArgs + 8 >> 2] = $484, HEAP32[tempVarArgs + 16 >> 2] = 15, HEAP32[tempVarArgs + 24 >> 2] = $485, tempVarArgs) | 0) | 0;
   STACKTOP = tempVarArgs;
   STACKTOP = sp;
   return 0;
  }
 } while (0);
 $x = 0;
 if (($5 | 0) == 0) {
  $x = 2;
  if (($ordinal | 0) != 0) {
   $x = 3;
  }
  do {
   if (($2 | 0) < 100) {
    if (($6 & 1 | 0) != 0) {
     break;
    }
    $x = $x | 4;
   }
  } while (0);
  if (($ordinal & 32 | 0) != 0) {
   $x = $x | 32;
  }
 } else {
  if ((HEAP32[$1 + 204 >> 2] & 1 << $5 | 0) != 0) {
   $x = 8;
  }
 }
 do {
  if ((HEAP32[$1 + 324 >> 2] | 0) == 28012) {
   if (($5 | 0) != 1) {
    break;
   }
   $x = $x | 520;
  }
 } while (0);
 if ((__ZL10LookupNum2P10TranslatoriiiPc($1, $tensunits, $5, $x | $6 & 256, $buf2 | 0) | 0) != 0) {
  if ((HEAP32[$1 + 200 >> 2] & 128 | 0) != 0) {
   HEAP8[$ph_hundred_and | 0] = 0;
  }
 }
 $482 = $3;
 $483 = $buf1 | 0;
 $484 = $ph_hundred_and | 0;
 $485 = $buf2 | 0;
 $486 = _sprintf($482 | 0, 10144, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 32 | 0, HEAP32[tempVarArgs >> 2] = $483, HEAP32[tempVarArgs + 8 >> 2] = $484, HEAP32[tempVarArgs + 16 >> 2] = 15, HEAP32[tempVarArgs + 24 >> 2] = $485, tempVarArgs) | 0) | 0;
 STACKTOP = tempVarArgs;
 STACKTOP = sp;
 return 0;
}
function __ZL12compile_linePcS_Pi($linebuf, $dict_line, $hash) {
 $linebuf = $linebuf | 0;
 $dict_line = $dict_line | 0;
 $hash = $hash | 0;
 var $1 = 0, $3 = 0, $4 = 0, $c = 0, $p = 0, $word = 0, $phonetic = 0, $ix = 0, $step = 0, $n_flag_codes = 0, $flagnum = 0, $flag_offset = 0, $length = 0, $multiple_words = 0, $multiple_numeric_hyphen = 0, $multiple_string = 0, $multiple_string_end = 0, $len_word = 0, $len_phonetic = 0, $text_not_phonemes = 0, $wc = 0, $all_upper_case = 0, $mnemptr = 0, $flag_codes = 0, $encoded_ph = 0, $bad_phoneme_str = 0, $bad_phoneme = 0, $c2 = 0, $65 = 0, $85 = 0, $114 = 0, $176 = 0, $191 = 0, $312 = 0, $326 = 0, $342 = 0, $347 = 0, $389 = 0, $425 = 0, $483 = 0, $495 = 0, $516 = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 336 | 0;
 $wc = sp | 0;
 $flag_codes = sp + 8 | 0;
 $encoded_ph = sp + 112 | 0;
 $bad_phoneme_str = sp + 312 | 0;
 $bad_phoneme = sp + 320 | 0;
 $c2 = sp + 328 | 0;
 $3 = $dict_line;
 $4 = $hash;
 $n_flag_codes = 0;
 $multiple_words = 0;
 $multiple_numeric_hyphen = 0;
 $multiple_string = 0;
 $multiple_string_end = 0;
 $text_not_phonemes = 0;
 $word = 91408;
 $phonetic = 91408;
 $p = $linebuf;
 $step = 0;
 $c = 0;
 while (1) {
  if (($c & 255 | 0) == 10) {
   break;
  }
  $c = HEAP8[$p] | 0;
  do {
   if (($c & 255 | 0) == 63) {
    if (($step | 0) != 0) {
     break;
    }
    $flag_offset = 100;
    $p = $p + 1 | 0;
    if ((HEAP8[$p] | 0) == 33) {
     $flag_offset = 132;
     $p = $p + 1 | 0;
    }
    $ix = 0;
    if ((__Z9IsDigit09j(HEAP8[$p] | 0) | 0) != 0) {
     $ix = $ix + ((HEAP8[$p] | 0) - 48) | 0;
     $p = $p + 1 | 0;
    }
    if ((__Z9IsDigit09j(HEAP8[$p] | 0) | 0) != 0) {
     $ix = ($ix * 10 | 0) + ((HEAP8[$p] | 0) - 48) | 0;
     $p = $p + 1 | 0;
    }
    $65 = $n_flag_codes;
    $n_flag_codes = $65 + 1 | 0;
    HEAP8[$flag_codes + $65 | 0] = $ix + $flag_offset;
    $c = HEAP8[$p] | 0;
   }
  } while (0);
  do {
   if (($c & 255 | 0) == 36) {
    if ((_isalnum(HEAP8[$p + 1 | 0] | 0) | 0) == 0) {
     break;
    }
    $mnemptr = $p;
    while (1) {
     $85 = HEAP8[$p] | 0;
     $c = $85;
     if (!((__Z8isspace2j($85 & 255) | 0) != 0 ^ 1)) {
      break;
     }
     $p = $p + 1 | 0;
    }
    HEAP8[$p] = 0;
    $flagnum = __Z10LookupMnemP8MNEM_TABPKc(5584, $mnemptr) | 0;
    if (($flagnum | 0) > 0) {
     if (($flagnum | 0) == 200) {
      HEAP32[26644] = 1;
     } else {
      if (($flagnum | 0) == 201) {
       HEAP32[26644] = 0;
      } else {
       if (($flagnum | 0) == 29) {
        $text_not_phonemes = 1;
       } else {
        $114 = $n_flag_codes;
        $n_flag_codes = $114 + 1 | 0;
        HEAP8[$flag_codes + $114 | 0] = $flagnum;
       }
      }
     }
    } else {
     _fprintf(HEAP32[28344] | 0, 17472, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = HEAP32[26930], HEAP32[tempVarArgs + 8 >> 2] = $mnemptr, tempVarArgs) | 0) | 0;
     STACKTOP = tempVarArgs;
     HEAP32[30922] = (HEAP32[30922] | 0) + 1;
    }
   }
  } while (0);
  do {
   if (($c & 255 | 0) == 47) {
    if ((HEAP8[$p + 1 | 0] | 0) != 47) {
     break;
    }
    if (($multiple_words | 0) != 0) {
     break;
    }
    $c = 10;
   }
  } while (0);
  switch ($step | 0) {
  case 1:
   {
    do {
     if (($c & 255 | 0) == 45) {
      if (($multiple_words | 0) == 0) {
       break;
      }
      if ((__Z9IsDigit09j(HEAP8[$word | 0] | 0) | 0) != 0) {
       $multiple_numeric_hyphen = 1;
      }
      $176 = $n_flag_codes;
      $n_flag_codes = $176 + 1 | 0;
      HEAP8[$flag_codes + $176 | 0] = 44;
      $c = 32;
     }
    } while (0);
    if ((__Z8isspace2j($c & 255) | 0) != 0) {
     HEAP8[$p | 0] = 0;
     if (($multiple_words | 0) != 0) {
      $191 = $p + 1 | 0;
      $multiple_string_end = $191;
      $multiple_string = $191;
      $step = 2;
     } else {
      $step = 3;
     }
    } else {
     if (($c & 255 | 0) == 41) {
      if (($multiple_words | 0) != 0) {
       HEAP8[$p | 0] = 0;
       $multiple_words = 0;
       $step = 3;
      } else {
       if ((HEAP8[$word | 0] | 0) != 95) {
        _fprintf(HEAP32[28344] | 0, 17392, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = HEAP32[26930], tempVarArgs) | 0) | 0;
        STACKTOP = tempVarArgs;
        HEAP32[30922] = (HEAP32[30922] | 0) + 1;
        $step = 3;
       }
      }
     }
    }
    break;
   }
  case 3:
   {
    if ((__Z8isspace2j($c & 255) | 0) == 0) {
     $phonetic = $p;
     $step = 4;
    }
    break;
   }
  case 4:
   {
    if ((__Z8isspace2j($c & 255) | 0) != 0) {
     HEAP8[$p | 0] = 0;
     $step = 5;
    }
    break;
   }
  case 0:
   {
    if (($c & 255 | 0) == 40) {
     $multiple_words = 1;
     $word = $p + 1 | 0;
     $step = 1;
    } else {
     if ((__Z8isspace2j($c & 255) | 0) == 0) {
      $word = $p;
      $step = 1;
     }
    }
    break;
   }
  case 2:
   {
    if ((__Z8isspace2j($c & 255) | 0) != 0) {
     $multiple_words = $multiple_words + 1 | 0;
    } else {
     if (($c & 255 | 0) == 41) {
      HEAP8[$p | 0] = 32;
      $multiple_string_end = $p + 1 | 0;
      $step = 3;
     }
    }
    break;
   }
  case 5:
   {
    break;
   }
  default:
   {}
  }
  $p = $p + 1 | 0;
 }
 if ((HEAP8[$word | 0] | 0) == 0) {
  $1 = 0;
  $516 = $1;
  STACKTOP = sp;
  return $516 | 0;
 }
 if ((HEAP32[26644] | 0) != 0) {
  $text_not_phonemes = 1;
 }
 if (($text_not_phonemes | 0) != 0) {
  if ((HEAP8[$word | 0] | 0) == 95) {
   _strcat($phonetic | 0, 17376) | 0;
   __Z13TranslateWordP10TranslatorPciP8WORD_TABS1_(HEAP32[9112] | 0, $phonetic, 0, 0, 0) | 0;
   $text_not_phonemes = 0;
   __Z8strncpy0PcPKci($encoded_ph | 0, 33176, 156);
   do {
    if ((HEAP8[33176] | 0) == 0) {
     if ((HEAP32[28362] | 0) >= 3) {
      break;
     }
     HEAP32[28362] = (HEAP32[28362] | 0) + 1;
     _fprintf(HEAP32[28344] | 0, 17320, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = HEAP32[26930], tempVarArgs) | 0) | 0;
     STACKTOP = tempVarArgs;
    }
   } while (0);
  } else {
   __Z8strncpy0PcPKci($encoded_ph | 0, $phonetic, 156);
  }
 } else {
  __Z14EncodePhonemesPKcPcPi($phonetic, $encoded_ph | 0, $bad_phoneme) | 0;
  if ((_strchr($encoded_ph | 0, 21) | 0) != 0) {
   $312 = $n_flag_codes;
   $n_flag_codes = $312 + 1 | 0;
   HEAP8[$flag_codes + $312 | 0] = 47;
  }
  if ((HEAP32[$bad_phoneme >> 2] | 0) != 0) {
   HEAP8[$bad_phoneme_str + (__Z8utf8_outjPc(HEAP32[$bad_phoneme >> 2] | 0, $bad_phoneme_str | 0) | 0) | 0] = 0;
   $326 = HEAP32[$bad_phoneme >> 2] | 0;
   _fprintf(HEAP32[28344] | 0, 17248, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 40 | 0, HEAP32[tempVarArgs >> 2] = HEAP32[26930], HEAP32[tempVarArgs + 8 >> 2] = $bad_phoneme_str, HEAP32[tempVarArgs + 16 >> 2] = $326, HEAP32[tempVarArgs + 24 >> 2] = $word, HEAP32[tempVarArgs + 32 >> 2] = $phonetic, tempVarArgs) | 0) | 0;
   STACKTOP = tempVarArgs;
   HEAP32[30922] = (HEAP32[30922] | 0) + 1;
  }
 }
 if (($text_not_phonemes | 0) != (HEAP8[(HEAP32[9112] | 0) + 272 | 0] | 0)) {
  $342 = $n_flag_codes;
  $n_flag_codes = $342 + 1 | 0;
  HEAP8[$flag_codes + $342 | 0] = 29;
 }
 $347 = _sscanf($word | 0, 17224, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $wc, tempVarArgs) | 0) | 0;
 STACKTOP = tempVarArgs;
 if (($347 | 0) == 1) {
  $ix = __Z8utf8_outjPc(HEAP32[$wc >> 2] | 0, $word) | 0;
  HEAP8[$word + $ix | 0] = 0;
 } else {
  if ((HEAP8[$word | 0] | 0) != 95) {
   $all_upper_case = 1;
   $p = $word;
   $p = $word;
   while (1) {
    $ix = __Z7utf8_inPiPKc($c2, $p) | 0;
    if ((HEAP32[$c2 >> 2] | 0) == 0) {
     break;
    }
    if ((__Z9iswupper2i(HEAP32[$c2 >> 2] | 0) | 0) != 0) {
     __Z8utf8_outjPc(__Z9towlower2j(HEAP32[$c2 >> 2] | 0) | 0, $p) | 0;
    } else {
     $all_upper_case = 0;
    }
    $p = $p + $ix | 0;
   }
   if (($all_upper_case | 0) != 0) {
    $389 = $n_flag_codes;
    $n_flag_codes = $389 + 1 | 0;
    HEAP8[$flag_codes + $389 | 0] = 42;
   }
  }
 }
 $len_word = _strlen($word | 0) | 0;
 if ((HEAP32[(HEAP32[9112] | 0) + 332 >> 2] | 0) > 0) {
  $len_word = __Z17TransposeAlphabetP10TranslatorPc(HEAP32[9112] | 0, $word) | 0;
 }
 HEAP32[$4 >> 2] = __Z14HashDictionaryPKc($word) | 0;
 $len_phonetic = _strlen($encoded_ph | 0) | 0;
 HEAP8[$3 + 1 | 0] = $len_word;
 $len_word = $len_word & 63;
 _memcpy($3 + 2 | 0, $word | 0, $len_word) | 0;
 if (($len_phonetic | 0) == 0) {
  $425 = $3 + 1 | 0;
  HEAP8[$425] = HEAP8[$425] | 128;
  $length = $len_word + 2 | 0;
 } else {
  $length = $len_word + $len_phonetic + 3 | 0;
  _strcpy($3 + ($len_word + 2) | 0, $encoded_ph | 0) | 0;
 }
 $ix = 0;
 while (1) {
  if ($ix >>> 0 >= $n_flag_codes >>> 0) {
   break;
  }
  HEAP8[$3 + ($ix + $length) | 0] = HEAP8[$flag_codes + $ix | 0] | 0;
  $ix = $ix + 1 | 0;
 }
 $length = $length + $n_flag_codes | 0;
 do {
  if (($multiple_string | 0) != 0) {
   if (($multiple_words | 0) <= 0) {
    break;
   }
   if (($multiple_words | 0) > 10) {
    _fprintf(HEAP32[28344] | 0, 17128, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = HEAP32[26930], HEAP32[tempVarArgs + 8 >> 2] = $multiple_words, tempVarArgs) | 0) | 0;
    STACKTOP = tempVarArgs;
    HEAP32[30922] = (HEAP32[30922] | 0) + 1;
   } else {
    $483 = $length;
    $length = $483 + 1 | 0;
    HEAP8[$3 + $483 | 0] = $multiple_words + 80;
    $ix = $multiple_string_end - $multiple_string | 0;
    if (($multiple_numeric_hyphen | 0) != 0) {
     $495 = $length;
     $length = $495 + 1 | 0;
     HEAP8[$3 + $495 | 0] = 32;
    }
    _memcpy($3 + $length | 0, $multiple_string | 0, $ix) | 0;
    $length = $length + $ix | 0;
   }
  }
 } while (0);
 HEAP8[$3 | 0] = $length;
 $1 = $length;
 $516 = $1;
 STACKTOP = sp;
 return $516 | 0;
}
function __Z15MbrolaTranslateP12PHONEME_LISTiiP8_IO_FILE($plist, $n_phonemes, $resume, $f_mbrola) {
 $plist = $plist | 0;
 $n_phonemes = $n_phonemes | 0;
 $resume = $resume | 0;
 $f_mbrola = $f_mbrola | 0;
 var $1 = 0, $2 = 0, $3 = 0, $5 = 0, $name = 0, $len = 0, $len1 = 0, $ph = 0, $ph_next = 0, $ph_prev = 0, $p = 0, $next = 0, $phdata = 0, $fmtp = 0, $pause = 0, $released = 0, $name2 = 0, $control = 0, $done = 0, $len_percent = 0, $final_pitch = 0, $ptr = 0, $mbr_buf = 0, $phoneme_name = 0, $pitch1 = 0, $res = 0, $83 = 0, $88 = 0, $89 = 0, $90 = 0, $164 = 0, $165 = 0, $229 = 0, $230 = 0, $255 = 0, $275 = 0, $280 = 0, $308 = 0, $437 = 0, $438 = 0, $448 = 0, $461 = 0, $462 = 0, $511 = 0, label = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 360 | 0;
 $phdata = sp | 0;
 $fmtp = sp + 152 | 0;
 $name2 = sp + 200 | 0;
 $control = sp + 208 | 0;
 $len_percent = sp + 216 | 0;
 $mbr_buf = sp + 224 | 0;
 $phoneme_name = sp + 344 | 0;
 $2 = $plist;
 $3 = $n_phonemes;
 $5 = $f_mbrola;
 $pause = 0;
 if (($resume | 0) == 0) {
  HEAP32[26024] = 1;
  HEAP32[26026] = 0;
  HEAP32[26028] = 0;
 }
 while (1) {
  if ((HEAP32[26024] | 0) >= ($3 | 0)) {
   label = 70;
   break;
  }
  if ((__Z9WcmdqFreev() | 0) < 25) {
   label = 6;
   break;
  }
  $ptr = $mbr_buf | 0;
  $p = $2 + ((HEAP32[26024] | 0) * 24 | 0) | 0;
  $next = $2 + (((HEAP32[26024] | 0) + 1 | 0) * 24 | 0) | 0;
  $ph = HEAP32[$p + 8 >> 2] | 0;
  $ph_prev = HEAP32[$2 + (((HEAP32[26024] | 0) - 1 | 0) * 24 | 0) + 8 >> 2] | 0;
  $ph_next = HEAP32[$2 + (((HEAP32[26024] | 0) + 1 | 0) * 24 | 0) + 8 >> 2] | 0;
  if ((HEAP16[$p >> 1] & 2 | 0) != 0) {
   __Z10DoEmbeddedPii(104104, HEAPU16[$p + 4 >> 1] | 0);
  }
  if ((HEAP8[$p + 21 | 0] & 4 | 0) != 0) {
   __Z8DoMarkeriiii(2, (HEAP16[$p + 4 >> 1] & 2047) + (HEAP32[22658] | 0) | 0, 0, HEAP32[22652] | 0);
  }
  if ((HEAP8[$p + 21 | 0] & 1 | 0) != 0) {
   $83 = (HEAP16[$p + 4 >> 1] & 2047) + (HEAP32[22658] | 0) | 0;
   $88 = HEAPU16[$p + 4 >> 1] >> 11;
   $89 = HEAP32[22656] | 0;
   $90 = HEAP32[26028] | 0;
   HEAP32[26028] = $90 + 1;
   __Z8DoMarkeriiii(1, $83, $88, $89 + $90 | 0);
  }
  $name = __ZL10GetMbrNameP12PHONEME_LISTP11PHONEME_TABS2_S2_PiS3_S3_($p, $ph, $ph_prev, $ph_next, $name2, $len_percent, $control) | 0;
  if ((HEAP32[$control >> 2] & 1 | 0) != 0) {
   HEAP32[26024] = (HEAP32[26024] | 0) + 1;
  }
  if (($name | 0) == 0) {
   HEAP32[26024] = (HEAP32[26024] | 0) + 1;
   continue;
  }
  do {
   if ((HEAPU8[$ph + 11 | 0] | 0) == 0) {
    if (($name | 0) != (HEAP32[$ph >> 2] | 0)) {
     label = 22;
     break;
    }
    $name = 95;
    $len = ((Math_imul(HEAP32[$p + 12 >> 2] | 0, HEAP32[9114] | 0) | 0) >>> 0) / 256 | 0;
    if (($len | 0) == 0) {
     $len = 1;
    }
   } else {
    label = 22;
   }
  } while (0);
  if ((label | 0) == 22) {
   label = 0;
   $len = ((HEAP32[9117] | 0) * 80 | 0 | 0) / 256 | 0;
  }
  if ((HEAPU8[$ph + 10 | 0] | 0) != 15) {
   __Z15WritePhMnemonicPcP11PHONEME_TABP12PHONEME_LISTiPi($phoneme_name | 0, HEAP32[$p + 8 >> 2] | 0, $p, HEAP32[19536] & 2, 0) | 0;
   __Z15DoPhonemeMarkeriiiPc(7, (HEAP16[$p + 4 >> 1] & 2047) + (HEAP32[22658] | 0) | 0, 0, $phoneme_name | 0);
  }
  $164 = __Z12WordToStringj($name) | 0;
  $165 = _sprintf($ptr | 0, 9408, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $164, tempVarArgs) | 0) | 0;
  STACKTOP = tempVarArgs;
  $ptr = $ptr + $165 | 0;
  if ((HEAP32[$name2 >> 2] | 0) == 95) {
   $pause = HEAP32[$len_percent >> 2] | 0;
   HEAP32[$name2 >> 2] = 0;
  }
  $done = 0;
  $final_pitch = 90648;
  switch (HEAPU8[$ph + 11 | 0] | 0) {
  case 5:
   {
    $len = ((HEAP32[9117] | 0) * 80 | 0 | 0) / 256 | 0;
    break;
   }
  case 6:
   {
    $len = 0;
    __Z16InterpretPhonemeP10TranslatoriP12PHONEME_LISTP12PHONEME_DATAP12WORD_PH_DATA(0, 0, $p, $phdata, 0);
    if ((HEAP16[$p >> 1] & 8 | 0) != 0) {
     $len = __Z9DoSample3P12PHONEME_DATAii($phdata, HEAP32[$p + 12 >> 2] | 0, -1) | 0;
    }
    $len = $len + (__Z9DoSample3P12PHONEME_DATAii($phdata, HEAP32[$p + 12 >> 2] | 0, -1) | 0) | 0;
    $len = ($len * 1e3 | 0 | 0) / (HEAP32[9496] | 0) | 0;
    break;
   }
  case 3:
   {
    if ((HEAPU8[$next + 17 | 0] | 0) == 0) {
     $len = $len + 50 | 0;
     $final_pitch = __ZL10WritePitchiiiii(HEAPU8[$p + 16 | 0] | 0, HEAPU8[$p + 22 | 0] | 0, HEAPU8[$p + 23 | 0] | 0, 0, 1) | 0;
    }
    break;
   }
  case 4:
   {
    $released = 0;
    if ((HEAPU8[$next + 17 | 0] | 0) == 2) {
     $released = 1;
    }
    do {
     if ((HEAPU8[$next + 17 | 0] | 0) == 3) {
      if ((HEAP8[$next + 21 | 0] | 0) != 0) {
       break;
      }
      $released = 1;
     }
    } while (0);
    if (($released | 0) == 0) {
     $308 = $p | 0;
     HEAP16[$308 >> 1] = HEAPU16[$308 >> 1] | 8192;
    }
    __Z16InterpretPhonemeP10TranslatoriP12PHONEME_LISTP12PHONEME_DATAP12WORD_PH_DATA(0, 0, $p, $phdata, 0);
    $len = __Z9DoSample3P12PHONEME_DATAii($phdata, 0, -1) | 0;
    $len = ($len * 1e3 | 0 | 0) / (HEAP32[9496] | 0) | 0;
    $len = $len + (__Z11PauseLengthii(HEAPU8[$p + 18 | 0] | 0, 1) | 0) | 0;
    break;
   }
  case 8:
   {
    if ((HEAPU8[$next + 17 | 0] | 0) != 2) {
     _memset($fmtp | 0, 0, 48) | 0;
     __Z16InterpretPhonemeP10TranslatoriP12PHONEME_LISTP12PHONEME_DATAP12WORD_PH_DATA(0, 0, $p, $phdata, 0);
     HEAP32[$fmtp + 8 >> 2] = HEAP32[$phdata + 68 >> 2];
     $len = __Z8DoSpect2P11PHONEME_TABiP10FMT_PARAMSP12PHONEME_LISTi(HEAP32[$p + 8 >> 2] | 0, 0, $fmtp, $p, -1) | 0;
     $len = ($len * 1e3 | 0 | 0) / (HEAP32[9496] | 0) | 0;
     if ((HEAPU8[$next + 17 | 0] | 0) == 0) {
      $len = $len + 50 | 0;
     }
     $final_pitch = __ZL10WritePitchiiiii(HEAPU8[$p + 16 | 0] | 0, HEAPU8[$p + 22 | 0] | 0, HEAPU8[$p + 23 | 0] | 0, 0, 1) | 0;
    }
    break;
   }
  case 2:
   {
    $len = HEAPU8[$ph + 14 | 0] | 0;
    if ((HEAP16[$p >> 1] & 8 | 0) != 0) {
     $len = $len + (HEAPU8[(HEAP32[10826] | 0) + 14 | 0] | 0) | 0;
    }
    if ((HEAPU8[$ph_next + 11 | 0] | 0) == 0) {
     $len = $len + 50 | 0;
    }
    $len = ((Math_imul($len, HEAP32[$p + 12 >> 2] | 0) | 0) >>> 0) / 256 | 0;
    if ((HEAP32[$name2 >> 2] | 0) == 0) {
     $229 = __ZL10WritePitchiiiii(HEAPU8[$p + 16 | 0] | 0, HEAPU8[$p + 22 | 0] | 0, HEAPU8[$p + 23 | 0] | 0, 0, 0) | 0;
     $230 = _sprintf($ptr | 0, 8400, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = $len, HEAP32[tempVarArgs + 8 >> 2] = $229, tempVarArgs) | 0) | 0;
     STACKTOP = tempVarArgs;
     $ptr = $ptr + $230 | 0;
    } else {
     $pitch1 = __ZL10WritePitchiiiii(HEAPU8[$p + 16 | 0] | 0, HEAPU8[$p + 22 | 0] | 0, HEAPU8[$p + 23 | 0] | 0, HEAP32[$len_percent >> 2] | 0, 0) | 0;
     $len1 = (Math_imul($len, HEAP32[$len_percent >> 2] | 0) | 0) / 100 | 0;
     $255 = _sprintf($ptr | 0, 8400, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = $len1, HEAP32[tempVarArgs + 8 >> 2] = $pitch1, tempVarArgs) | 0) | 0;
     STACKTOP = tempVarArgs;
     $ptr = $ptr + $255 | 0;
     $pitch1 = __ZL10WritePitchiiiii(HEAPU8[$p + 16 | 0] | 0, HEAPU8[$p + 22 | 0] | 0, HEAPU8[$p + 23 | 0] | 0, -(HEAP32[$len_percent >> 2] | 0) | 0, 0) | 0;
     $275 = __Z12WordToStringj(HEAP32[$name2 >> 2] | 0) | 0;
     $280 = _sprintf($ptr | 0, 7896, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 24 | 0, HEAP32[tempVarArgs >> 2] = $275, HEAP32[tempVarArgs + 8 >> 2] = $len - $len1, HEAP32[tempVarArgs + 16 >> 2] = $pitch1, tempVarArgs) | 0) | 0;
     STACKTOP = tempVarArgs;
     $ptr = $ptr + $280 | 0;
    }
    $done = 1;
    break;
   }
  default:
   {}
  }
  if (($done | 0) == 0) {
   if ((HEAP32[$name2 >> 2] | 0) != 0) {
    $len1 = (Math_imul($len, HEAP32[$len_percent >> 2] | 0) | 0) / 100 | 0;
    $437 = __Z12WordToStringj(HEAP32[$name2 >> 2] | 0) | 0;
    $438 = _sprintf($ptr | 0, 18336, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = $len1, HEAP32[tempVarArgs + 8 >> 2] = $437, tempVarArgs) | 0) | 0;
    STACKTOP = tempVarArgs;
    $ptr = $ptr + $438 | 0;
    $len = $len - $len1 | 0;
   }
   $448 = _sprintf($ptr | 0, 17776, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = $len, HEAP32[tempVarArgs + 8 >> 2] = $final_pitch, tempVarArgs) | 0) | 0;
   STACKTOP = tempVarArgs;
   $ptr = $ptr + $448 | 0;
  }
  if (($pause | 0) != 0) {
   $len = $len + (__Z11PauseLengthii($pause, 0) | 0) | 0;
   $461 = __Z11PauseLengthii($pause, 0) | 0;
   $462 = _sprintf($ptr | 0, 17304, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $461, tempVarArgs) | 0) | 0;
   STACKTOP = tempVarArgs;
   $ptr = $ptr + $462 | 0;
   $pause = 0;
  }
  if (($5 | 0) != 0) {
   _fwrite($mbr_buf | 0, 1, $ptr - $mbr_buf | 0, $5 | 0) | 0;
  } else {
   $res = _write_MBR($mbr_buf | 0) | 0;
   if (($res | 0) < 0) {
    label = 65;
    break;
   }
   if (($res | 0) == 0) {
    label = 67;
    break;
   }
   HEAP32[33456 + (HEAP32[8360] << 4) >> 2] = 13;
   HEAP32[33460 + (HEAP32[8360] << 4) >> 2] = $len;
   __Z8WcmdqIncv();
  }
  HEAP32[26024] = (HEAP32[26024] | 0) + 1;
 }
 if ((label | 0) == 65) {
  $1 = 0;
  $511 = $1;
  STACKTOP = sp;
  return $511 | 0;
 } else if ((label | 0) == 67) {
  $1 = 1;
  $511 = $1;
  STACKTOP = sp;
  return $511 | 0;
 } else if ((label | 0) == 70) {
  if (($5 | 0) == 0) {
   _flush_MBR() | 0;
   HEAP32[33456 + (HEAP32[8360] << 4) >> 2] = 13;
   HEAP32[33460 + (HEAP32[8360] << 4) >> 2] = 500;
   __Z8WcmdqIncv();
  }
  $1 = 0;
  $511 = $1;
  STACKTOP = sp;
  return $511 | 0;
 } else if ((label | 0) == 6) {
  $1 = 1;
  $511 = $1;
  STACKTOP = sp;
  return $511 | 0;
 }
 return 0;
}
function __ZL16copy_rule_stringPcPi($string, $state_out) {
 $string = $string | 0;
 $state_out = $state_out | 0;
 var $1 = 0, $2 = 0, $output = 0, $p = 0, $ix = 0, $len = 0, $c = 0, $c2 = 0, $sxflags = 0, $value = 0, $literal = 0, $hexdigit_input = 0, $state = 0, $mr = 0, $22 = 0, $31 = 0, $68 = 0, $130 = 0, $137 = 0, $175 = 0, $180 = 0, $205 = 0, $213 = 0, $219 = 0, $274 = 0, $279 = 0, $318 = 0, $323 = 0, $343 = 0, $348 = 0, $350 = 0, $359 = 0, $416 = 0, $423 = 0, $434 = 0, label = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 $1 = $string;
 $2 = $state_out;
 $hexdigit_input = 0;
 $state = HEAP32[$2 >> 2] | 0;
 if ((HEAP8[$1 | 0] | 0) == 0) {
  STACKTOP = sp;
  return;
 }
 $output = HEAP32[19832 + ($state << 2) >> 2] | 0;
 if (($state | 0) == 4) {
  $len = _strlen(113888) | 0;
  if (($len | 0) > 0) {
   $22 = $len;
   $len = $22 + 1 | 0;
   HEAP8[113888 + $22 | 0] = 32;
  }
  $output = 113888 + $len | 0;
 }
 $sxflags = 8421376;
 $p = $1;
 $ix = 0;
 do {
  $literal = 0;
  $31 = $p;
  $p = $31 + 1 | 0;
  $c = HEAP8[$31] | 0;
  do {
   if (($c << 24 >> 24 | 0) == 48) {
    if ((HEAP8[$p | 0] | 0) != 120) {
     break;
    }
    if ((__Z10isHexDigiti(HEAP8[$p + 1 | 0] | 0) | 0) < 0) {
     break;
    }
    if ((__Z10isHexDigiti(HEAP8[$p + 2 | 0] | 0) | 0) < 0) {
     break;
    }
    $hexdigit_input = 1;
    $c = HEAP8[$p + 1 | 0] | 0;
    $p = $p + 2 | 0;
   }
  } while (0);
  if (($c << 24 >> 24 | 0) == 92) {
   $68 = $p;
   $p = $68 + 1 | 0;
   $c = HEAP8[$68] | 0;
   do {
    if (($c << 24 >> 24 | 0) >= 48) {
     if (($c << 24 >> 24 | 0) > 51) {
      break;
     }
     if ((HEAP8[$p | 0] | 0) < 48) {
      break;
     }
     if ((HEAP8[$p | 0] | 0) > 55) {
      break;
     }
     if ((HEAP8[$p + 1 | 0] | 0) < 48) {
      break;
     }
     if ((HEAP8[$p + 1 | 0] | 0) > 55) {
      break;
     }
     $c = (($c << 24 >> 24) - 48 << 6) + ((HEAP8[$p | 0] | 0) - 48 << 3) + ((HEAP8[$p + 1 | 0] | 0) - 48) & 255;
     $p = $p + 2 | 0;
    }
   } while (0);
   $literal = 1;
  }
  if (($hexdigit_input | 0) != 0) {
   $130 = __Z10isHexDigiti($c << 24 >> 24) | 0;
   $c2 = $130;
   do {
    if (($130 | 0) >= 0) {
     $137 = __Z10isHexDigiti(HEAP8[$p | 0] | 0) | 0;
     if (($137 | 0) < 0) {
      label = 26;
      break;
     }
     $c = ($c2 << 4) + $137 & 255;
     $literal = 1;
     $p = $p + 1 | 0;
    } else {
     label = 26;
    }
   } while (0);
   if ((label | 0) == 26) {
    label = 0;
    $hexdigit_input = 0;
   }
  }
  if (($state | 0) == 1) {
   label = 30;
  } else {
   if (($state | 0) == 3) {
    label = 30;
   }
  }
  if ((label | 0) == 30) {
   label = 0;
   if (($literal | 0) == 0) {
    switch ($c << 24 >> 24 | 0) {
    case 68:
     {
      $c = 15;
      break;
     }
    case 75:
     {
      $c = 25;
      break;
     }
    case 78:
     {
      $c = 24;
      break;
     }
    case 86:
     {
      $c = 26;
      break;
     }
    case 65:
    case 66:
    case 67:
    case 72:
    case 70:
    case 71:
     {
      label = 34;
      break;
     }
    case 87:
     {
      $c = 31;
      break;
     }
    case 88:
     {
      $c = 29;
      break;
     }
    case 74:
     {
      $c = 23;
      break;
     }
    case 76:
     {
      $213 = $p;
      $p = $213 + 1 | 0;
      $c = (HEAP8[$213] | 0) - 48 & 255;
      $219 = $p;
      $p = $219 + 1 | 0;
      $value = (HEAP8[$219] | 0) - 48 | 0;
      $c = (($c << 24 >> 24) * 10 | 0) + $value & 255;
      do {
       if (($value | 0) < 0) {
        label = 55;
       } else {
        if (($value | 0) > 9) {
         label = 55;
         break;
        }
        do {
         if (($c << 24 >> 24 | 0) <= 0) {
          label = 59;
         } else {
          if (($c << 24 >> 24 | 0) >= 95) {
           label = 59;
           break;
          }
          if ((HEAP8[113488 + ($c << 24 >> 24) | 0] | 0) == 0) {
           label = 59;
          }
         }
        } while (0);
        if ((label | 0) == 59) {
         label = 0;
         _fprintf(HEAP32[28344] | 0, 17968, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = HEAP32[26930], HEAP32[tempVarArgs + 8 >> 2] = $c << 24 >> 24, tempVarArgs) | 0) | 0;
         STACKTOP = tempVarArgs;
         HEAP32[30922] = (HEAP32[30922] | 0) + 1;
        }
       }
      } while (0);
      if ((label | 0) == 55) {
       label = 0;
       $c = 0;
       _fprintf(HEAP32[28344] | 0, 18016, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = HEAP32[26930], tempVarArgs) | 0) | 0;
       STACKTOP = tempVarArgs;
       HEAP32[30922] = (HEAP32[30922] | 0) + 1;
      }
      $c = ($c << 24 >> 24) + 65 & 255;
      if (($state | 0) == 1) {
       $274 = $ix;
       $ix = $274 + 1 | 0;
       HEAP8[$output + $274 | 0] = $c;
       $c = 18;
      } else {
       $279 = $ix;
       $ix = $279 + 1 | 0;
       HEAP8[$output + $279 | 0] = 18;
      }
      break;
     }
    case 95:
     {
      $c = 32;
      break;
     }
    case 89:
     {
      $c = 73;
      label = 34;
      break;
     }
    case 36:
     {
      $value = 0;
      $mr = 5440;
      while (1) {
       if ((HEAP32[$mr >> 2] | 0) == 0) {
        break;
       }
       $len = _strlen(HEAP32[$mr >> 2] | 0) | 0;
       if ((_memcmp($p | 0, HEAP32[$mr >> 2] | 0, $len | 0) | 0) == 0) {
        label = 68;
        break;
       }
       $mr = $mr + 8 | 0;
      }
      if ((label | 0) == 68) {
       label = 0;
       $value = HEAP32[$mr + 4 >> 2] | 0;
       $p = $p + $len | 0;
      }
      if (($state | 0) == 1) {
       $318 = $ix;
       $ix = $318 + 1 | 0;
       HEAP8[$output + $318 | 0] = $value;
       $c = 28;
      } else {
       $323 = $ix;
       $ix = $323 + 1 | 0;
       HEAP8[$output + $323 | 0] = 28;
       $c = $value & 255;
      }
      if (($value | 0) == 0) {
       _fprintf(HEAP32[28344] | 0, 17920, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = HEAP32[26930], tempVarArgs) | 0) | 0;
       STACKTOP = tempVarArgs;
       HEAP32[30922] = (HEAP32[30922] | 0) + 1;
      }
      break;
     }
    case 90:
     {
      $c = 16;
      break;
     }
    case 43:
     {
      $c = 12;
      break;
     }
    case 64:
     {
      $c = 21;
      break;
     }
    case 38:
     {
      $c = 10;
      break;
     }
    case 37:
     {
      $c = 11;
      break;
     }
    case 35:
     {
      $c = 13;
      break;
     }
    case 33:
     {
      $c = 19;
      break;
     }
    case 84:
     {
      $205 = $ix;
      $ix = $205 + 1 | 0;
      HEAP8[$output + $205 | 0] = 28;
      $c = 17;
      break;
     }
    case 80:
     {
      $sxflags = $sxflags | 1024;
      label = 77;
      break;
     }
    case 83:
     {
      label = 77;
      break;
     }
    default:
     {}
    }
    if ((label | 0) == 34) {
     label = 0;
     if (($state | 0) == 1) {
      $175 = $ix;
      $ix = $175 + 1 | 0;
      HEAP8[$output + $175 | 0] = (HEAP8[19856 + (($c << 24 >> 24) - 65) | 0] | 0) + 65;
      $c = 17;
     } else {
      $180 = $ix;
      $ix = $180 + 1 | 0;
      HEAP8[$output + $180 | 0] = 17;
      $c = (HEAP8[19856 + (($c << 24 >> 24) - 65) | 0] | 0) + 65 & 255;
     }
    } else if ((label | 0) == 77) {
     label = 0;
     $343 = $ix;
     $ix = $343 + 1 | 0;
     HEAP8[$output + $343 | 0] = 14;
     $value = 0;
     while (1) {
      $348 = $p;
      $p = $348 + 1 | 0;
      $350 = HEAP8[$348] | 0;
      $c = $350;
      if ((__Z8isspace2j($350 << 24 >> 24) | 0) != 0) {
       $359 = 0;
      } else {
       $359 = ($c << 24 >> 24 | 0) != 0;
      }
      if (!$359) {
       break;
      }
      switch ($c << 24 >> 24 | 0) {
      case 101:
       {
        $sxflags = $sxflags | 256;
        break;
       }
      case 105:
       {
        $sxflags = $sxflags | 512;
        break;
       }
      case 112:
       {
        $sxflags = $sxflags | 1024;
        break;
       }
      case 118:
       {
        $sxflags = $sxflags | 2048;
        break;
       }
      case 100:
       {
        $sxflags = $sxflags | 4096;
        break;
       }
      case 102:
       {
        $sxflags = $sxflags | 8192;
        break;
       }
      case 113:
       {
        $sxflags = $sxflags | 16384;
        break;
       }
      case 116:
       {
        $sxflags = $sxflags | 65536;
        break;
       }
      case 98:
       {
        $sxflags = $sxflags | 131072;
        break;
       }
      case 97:
       {
        $sxflags = $sxflags | 262144;
        break;
       }
      case 109:
       {
        $sxflags = $sxflags | 524288;
        break;
       }
      default:
       {
        if ((__Z9IsDigit09j($c << 24 >> 24) | 0) != 0) {
         $value = ($value * 10 | 0) + (($c << 24 >> 24) - 48) | 0;
        }
       }
      }
     }
     $p = $p - 1 | 0;
     $416 = $ix;
     $ix = $416 + 1 | 0;
     HEAP8[$output + $416 | 0] = $sxflags >> 16;
     $423 = $ix;
     $ix = $423 + 1 | 0;
     HEAP8[$output + $423 | 0] = $sxflags >> 8;
     $c = ($value | 128) & 255;
    }
   }
  }
  $434 = $ix;
  $ix = $434 + 1 | 0;
  HEAP8[$output + $434 | 0] = $c;
 } while (($c << 24 >> 24 | 0) != 0);
 HEAP32[$2 >> 2] = HEAP32[19872 + ($state << 2) >> 2];
 STACKTOP = sp;
 return;
}
function ___udivmoddi4($a$0, $a$1, $b$0, $b$1, $rem) {
 $a$0 = $a$0 | 0;
 $a$1 = $a$1 | 0;
 $b$0 = $b$0 | 0;
 $b$1 = $b$1 | 0;
 $rem = $rem | 0;
 var $n_sroa_0_0_extract_trunc = 0, $n_sroa_1_4_extract_shift$0 = 0, $n_sroa_1_4_extract_trunc = 0, $d_sroa_0_0_extract_trunc = 0, $d_sroa_1_4_extract_shift$0 = 0, $d_sroa_1_4_extract_trunc = 0, $4 = 0, $17 = 0, $37 = 0, $51 = 0, $57 = 0, $58 = 0, $66 = 0, $78 = 0, $88 = 0, $89 = 0, $91 = 0, $92 = 0, $95 = 0, $105 = 0, $119 = 0, $125 = 0, $126 = 0, $130 = 0, $q_sroa_1_1_ph = 0, $q_sroa_0_1_ph = 0, $r_sroa_1_1_ph = 0, $r_sroa_0_1_ph = 0, $sr_1_ph = 0, $d_sroa_0_0_insert_insert99$0 = 0, $d_sroa_0_0_insert_insert99$1 = 0, $137$0 = 0, $137$1 = 0, $carry_0203 = 0, $sr_1202 = 0, $r_sroa_0_1201 = 0, $r_sroa_1_1200 = 0, $q_sroa_0_1199 = 0, $q_sroa_1_1198 = 0, $147 = 0, $149 = 0, $r_sroa_0_0_insert_insert42$0 = 0, $r_sroa_0_0_insert_insert42$1 = 0, $150$1 = 0, $151$0 = 0, $152 = 0, $r_sroa_0_0_extract_trunc = 0, $r_sroa_1_4_extract_trunc = 0, $155 = 0, $carry_0_lcssa$0 = 0, $carry_0_lcssa$1 = 0, $r_sroa_0_1_lcssa = 0, $r_sroa_1_1_lcssa = 0, $q_sroa_0_1_lcssa = 0, $q_sroa_1_1_lcssa = 0, $q_sroa_0_0_insert_ext75$0 = 0, $q_sroa_0_0_insert_ext75$1 = 0, $_0$0 = 0, $_0$1 = 0;
 $n_sroa_0_0_extract_trunc = $a$0;
 $n_sroa_1_4_extract_shift$0 = $a$1;
 $n_sroa_1_4_extract_trunc = $n_sroa_1_4_extract_shift$0;
 $d_sroa_0_0_extract_trunc = $b$0;
 $d_sroa_1_4_extract_shift$0 = $b$1;
 $d_sroa_1_4_extract_trunc = $d_sroa_1_4_extract_shift$0;
 if (($n_sroa_1_4_extract_trunc | 0) == 0) {
  $4 = ($rem | 0) != 0;
  if (($d_sroa_1_4_extract_trunc | 0) == 0) {
   if ($4) {
    HEAP32[$rem >> 2] = ($n_sroa_0_0_extract_trunc >>> 0) % ($d_sroa_0_0_extract_trunc >>> 0);
    HEAP32[$rem + 4 >> 2] = 0;
   }
   $_0$1 = 0;
   $_0$0 = ($n_sroa_0_0_extract_trunc >>> 0) / ($d_sroa_0_0_extract_trunc >>> 0) >>> 0;
   return (tempRet0 = $_0$1, $_0$0) | 0;
  } else {
   if (!$4) {
    $_0$1 = 0;
    $_0$0 = 0;
    return (tempRet0 = $_0$1, $_0$0) | 0;
   }
   HEAP32[$rem >> 2] = $a$0 | 0;
   HEAP32[$rem + 4 >> 2] = $a$1 & 0;
   $_0$1 = 0;
   $_0$0 = 0;
   return (tempRet0 = $_0$1, $_0$0) | 0;
  }
 }
 $17 = ($d_sroa_1_4_extract_trunc | 0) == 0;
 do {
  if (($d_sroa_0_0_extract_trunc | 0) == 0) {
   if ($17) {
    if (($rem | 0) != 0) {
     HEAP32[$rem >> 2] = ($n_sroa_1_4_extract_trunc >>> 0) % ($d_sroa_0_0_extract_trunc >>> 0);
     HEAP32[$rem + 4 >> 2] = 0;
    }
    $_0$1 = 0;
    $_0$0 = ($n_sroa_1_4_extract_trunc >>> 0) / ($d_sroa_0_0_extract_trunc >>> 0) >>> 0;
    return (tempRet0 = $_0$1, $_0$0) | 0;
   }
   if (($n_sroa_0_0_extract_trunc | 0) == 0) {
    if (($rem | 0) != 0) {
     HEAP32[$rem >> 2] = 0;
     HEAP32[$rem + 4 >> 2] = ($n_sroa_1_4_extract_trunc >>> 0) % ($d_sroa_1_4_extract_trunc >>> 0);
    }
    $_0$1 = 0;
    $_0$0 = ($n_sroa_1_4_extract_trunc >>> 0) / ($d_sroa_1_4_extract_trunc >>> 0) >>> 0;
    return (tempRet0 = $_0$1, $_0$0) | 0;
   }
   $37 = $d_sroa_1_4_extract_trunc - 1 | 0;
   if (($37 & $d_sroa_1_4_extract_trunc | 0) == 0) {
    if (($rem | 0) != 0) {
     HEAP32[$rem >> 2] = $a$0 | 0;
     HEAP32[$rem + 4 >> 2] = $37 & $n_sroa_1_4_extract_trunc | $a$1 & 0;
    }
    $_0$1 = 0;
    $_0$0 = $n_sroa_1_4_extract_trunc >>> ((_llvm_cttz_i32($d_sroa_1_4_extract_trunc | 0) | 0) >>> 0);
    return (tempRet0 = $_0$1, $_0$0) | 0;
   }
   $51 = (_llvm_ctlz_i32($d_sroa_1_4_extract_trunc | 0) | 0) - (_llvm_ctlz_i32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
   if ($51 >>> 0 <= 30) {
    $57 = $51 + 1 | 0;
    $58 = 31 - $51 | 0;
    $sr_1_ph = $57;
    $r_sroa_0_1_ph = $n_sroa_1_4_extract_trunc << $58 | $n_sroa_0_0_extract_trunc >>> ($57 >>> 0);
    $r_sroa_1_1_ph = $n_sroa_1_4_extract_trunc >>> ($57 >>> 0);
    $q_sroa_0_1_ph = 0;
    $q_sroa_1_1_ph = $n_sroa_0_0_extract_trunc << $58;
    break;
   }
   if (($rem | 0) == 0) {
    $_0$1 = 0;
    $_0$0 = 0;
    return (tempRet0 = $_0$1, $_0$0) | 0;
   }
   HEAP32[$rem >> 2] = $a$0 | 0;
   HEAP32[$rem + 4 >> 2] = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
   $_0$1 = 0;
   $_0$0 = 0;
   return (tempRet0 = $_0$1, $_0$0) | 0;
  } else {
   if (!$17) {
    $119 = (_llvm_ctlz_i32($d_sroa_1_4_extract_trunc | 0) | 0) - (_llvm_ctlz_i32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
    if ($119 >>> 0 <= 31) {
     $125 = $119 + 1 | 0;
     $126 = 31 - $119 | 0;
     $130 = $119 - 31 >> 31;
     $sr_1_ph = $125;
     $r_sroa_0_1_ph = $n_sroa_0_0_extract_trunc >>> ($125 >>> 0) & $130 | $n_sroa_1_4_extract_trunc << $126;
     $r_sroa_1_1_ph = $n_sroa_1_4_extract_trunc >>> ($125 >>> 0) & $130;
     $q_sroa_0_1_ph = 0;
     $q_sroa_1_1_ph = $n_sroa_0_0_extract_trunc << $126;
     break;
    }
    if (($rem | 0) == 0) {
     $_0$1 = 0;
     $_0$0 = 0;
     return (tempRet0 = $_0$1, $_0$0) | 0;
    }
    HEAP32[$rem >> 2] = $a$0 | 0;
    HEAP32[$rem + 4 >> 2] = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
    $_0$1 = 0;
    $_0$0 = 0;
    return (tempRet0 = $_0$1, $_0$0) | 0;
   }
   $66 = $d_sroa_0_0_extract_trunc - 1 | 0;
   if (($66 & $d_sroa_0_0_extract_trunc | 0) != 0) {
    $88 = (_llvm_ctlz_i32($d_sroa_0_0_extract_trunc | 0) | 0) + 33 - (_llvm_ctlz_i32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
    $89 = 64 - $88 | 0;
    $91 = 32 - $88 | 0;
    $92 = $91 >> 31;
    $95 = $88 - 32 | 0;
    $105 = $95 >> 31;
    $sr_1_ph = $88;
    $r_sroa_0_1_ph = $91 - 1 >> 31 & $n_sroa_1_4_extract_trunc >>> ($95 >>> 0) | ($n_sroa_1_4_extract_trunc << $91 | $n_sroa_0_0_extract_trunc >>> ($88 >>> 0)) & $105;
    $r_sroa_1_1_ph = $105 & $n_sroa_1_4_extract_trunc >>> ($88 >>> 0);
    $q_sroa_0_1_ph = $n_sroa_0_0_extract_trunc << $89 & $92;
    $q_sroa_1_1_ph = ($n_sroa_1_4_extract_trunc << $89 | $n_sroa_0_0_extract_trunc >>> ($95 >>> 0)) & $92 | $n_sroa_0_0_extract_trunc << $91 & $88 - 33 >> 31;
    break;
   }
   if (($rem | 0) != 0) {
    HEAP32[$rem >> 2] = $66 & $n_sroa_0_0_extract_trunc;
    HEAP32[$rem + 4 >> 2] = 0;
   }
   if (($d_sroa_0_0_extract_trunc | 0) == 1) {
    $_0$1 = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
    $_0$0 = $a$0 | 0 | 0;
    return (tempRet0 = $_0$1, $_0$0) | 0;
   } else {
    $78 = _llvm_cttz_i32($d_sroa_0_0_extract_trunc | 0) | 0;
    $_0$1 = $n_sroa_1_4_extract_trunc >>> ($78 >>> 0) | 0;
    $_0$0 = $n_sroa_1_4_extract_trunc << 32 - $78 | $n_sroa_0_0_extract_trunc >>> ($78 >>> 0) | 0;
    return (tempRet0 = $_0$1, $_0$0) | 0;
   }
  }
 } while (0);
 if (($sr_1_ph | 0) == 0) {
  $q_sroa_1_1_lcssa = $q_sroa_1_1_ph;
  $q_sroa_0_1_lcssa = $q_sroa_0_1_ph;
  $r_sroa_1_1_lcssa = $r_sroa_1_1_ph;
  $r_sroa_0_1_lcssa = $r_sroa_0_1_ph;
  $carry_0_lcssa$1 = 0;
  $carry_0_lcssa$0 = 0;
 } else {
  $d_sroa_0_0_insert_insert99$0 = $b$0 | 0 | 0;
  $d_sroa_0_0_insert_insert99$1 = $d_sroa_1_4_extract_shift$0 | $b$1 & 0;
  $137$0 = _i64Add($d_sroa_0_0_insert_insert99$0, $d_sroa_0_0_insert_insert99$1, -1, -1) | 0;
  $137$1 = tempRet0;
  $q_sroa_1_1198 = $q_sroa_1_1_ph;
  $q_sroa_0_1199 = $q_sroa_0_1_ph;
  $r_sroa_1_1200 = $r_sroa_1_1_ph;
  $r_sroa_0_1201 = $r_sroa_0_1_ph;
  $sr_1202 = $sr_1_ph;
  $carry_0203 = 0;
  while (1) {
   $147 = $q_sroa_0_1199 >>> 31 | $q_sroa_1_1198 << 1;
   $149 = $carry_0203 | $q_sroa_0_1199 << 1;
   $r_sroa_0_0_insert_insert42$0 = $r_sroa_0_1201 << 1 | $q_sroa_1_1198 >>> 31 | 0;
   $r_sroa_0_0_insert_insert42$1 = $r_sroa_0_1201 >>> 31 | $r_sroa_1_1200 << 1 | 0;
   _i64Subtract($137$0, $137$1, $r_sroa_0_0_insert_insert42$0, $r_sroa_0_0_insert_insert42$1) | 0;
   $150$1 = tempRet0;
   $151$0 = $150$1 >> 31 | (($150$1 | 0) < 0 ? -1 : 0) << 1;
   $152 = $151$0 & 1;
   $r_sroa_0_0_extract_trunc = _i64Subtract($r_sroa_0_0_insert_insert42$0, $r_sroa_0_0_insert_insert42$1, $151$0 & $d_sroa_0_0_insert_insert99$0, ((($150$1 | 0) < 0 ? -1 : 0) >> 31 | (($150$1 | 0) < 0 ? -1 : 0) << 1) & $d_sroa_0_0_insert_insert99$1) | 0;
   $r_sroa_1_4_extract_trunc = tempRet0;
   $155 = $sr_1202 - 1 | 0;
   if (($155 | 0) == 0) {
    break;
   } else {
    $q_sroa_1_1198 = $147;
    $q_sroa_0_1199 = $149;
    $r_sroa_1_1200 = $r_sroa_1_4_extract_trunc;
    $r_sroa_0_1201 = $r_sroa_0_0_extract_trunc;
    $sr_1202 = $155;
    $carry_0203 = $152;
   }
  }
  $q_sroa_1_1_lcssa = $147;
  $q_sroa_0_1_lcssa = $149;
  $r_sroa_1_1_lcssa = $r_sroa_1_4_extract_trunc;
  $r_sroa_0_1_lcssa = $r_sroa_0_0_extract_trunc;
  $carry_0_lcssa$1 = 0;
  $carry_0_lcssa$0 = $152;
 }
 $q_sroa_0_0_insert_ext75$0 = $q_sroa_0_1_lcssa;
 $q_sroa_0_0_insert_ext75$1 = 0;
 if (($rem | 0) != 0) {
  HEAP32[$rem >> 2] = $r_sroa_0_1_lcssa;
  HEAP32[$rem + 4 >> 2] = $r_sroa_1_1_lcssa;
 }
 $_0$1 = ($q_sroa_0_0_insert_ext75$0 | 0) >>> 31 | ($q_sroa_1_1_lcssa | $q_sroa_0_0_insert_ext75$1) << 1 | ($q_sroa_0_0_insert_ext75$1 << 1 | $q_sroa_0_0_insert_ext75$0 >>> 31) & 0 | $carry_0_lcssa$1;
 $_0$0 = ($q_sroa_0_0_insert_ext75$0 << 1 | 0 >>> 31) & -2 | $carry_0_lcssa$0;
 return (tempRet0 = $_0$1, $_0$0) | 0;
}
function __ZL18InterpretConditionP10TranslatoriP12PHONEME_LISTPtP12WORD_PH_DATA($tr, $control, $plist, $p_prog, $worddata) {
 $tr = $tr | 0;
 $control = $control | 0;
 $plist = $plist | 0;
 $p_prog = $p_prog | 0;
 $worddata = $worddata | 0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $which = 0, $ix = 0, $data = 0, $instn = 0, $instn2 = 0, $count = 0, $ph = 0, $plist_this = 0, $234 = 0, $279 = 0, $308 = 0, $388 = 0, $452 = 0, $471 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = $tr;
 $3 = $control;
 $4 = $plist;
 $5 = $p_prog;
 $6 = $worddata;
 $instn = HEAP16[$5 >> 1] & 4095;
 $data = $instn & 255;
 $instn2 = $instn >> 8;
 if (($instn2 | 0) >= 14) {
  do {
   if (($instn2 | 0) == 15) {
    $452 = $data;
    if (($452 | 0) == 1) {
     $1 = ($3 & 1 | 0) != 0;
     $471 = $1;
     STACKTOP = sp;
     return $471 | 0;
    } else if (($452 | 0) == 2) {
     $1 = (HEAP32[(HEAP32[144] | 0) + 132 >> 2] | 0) != 0;
     $471 = $1;
     STACKTOP = sp;
     return $471 | 0;
    } else if (($452 | 0) == 3) {
     $1 = (HEAP8[78288] | 0) != 0;
     $471 = $1;
     STACKTOP = sp;
     return $471 | 0;
    } else {
     break;
    }
   }
  } while (0);
  $1 = 0;
  $471 = $1;
  STACKTOP = sp;
  return $471 | 0;
 }
 $plist_this = $4;
 $which = ($instn2 | 0) % 7 | 0;
 if (($which | 0) == 6) {
  $5 = $5 + 2 | 0;
  $which = HEAPU16[$5 >> 1] | 0;
 }
 do {
  if (($which | 0) == 4) {
   if ((HEAP16[$4 + 28 >> 1] | 0) == 0) {
    break;
   }
   $1 = 0;
   $471 = $1;
   STACKTOP = sp;
   return $471 | 0;
  }
 } while (0);
 do {
  if (($which | 0) == 5) {
   if ((HEAP16[$4 + 4 >> 1] | 0) == 0) {
    break;
   }
   $1 = 0;
   $471 = $1;
   STACKTOP = sp;
   return $471 | 0;
  }
 } while (0);
 L34 : do {
  if (($which | 0) == 6) {
   do {
    if ((HEAP16[$4 + 28 >> 1] | 0) == 0) {
     if ((HEAP16[$4 + 52 >> 1] | 0) != 0) {
      break;
     }
     break L34;
    }
   } while (0);
   $1 = 0;
   $471 = $1;
   STACKTOP = sp;
   return $471 | 0;
  }
 } while (0);
 L42 : do {
  switch ($which | 0) {
  case 0:
  case 5:
   {
    $4 = $4 - 24 | 0;
    break;
   }
  case 1:
   {
    break;
   }
  case 2:
  case 4:
   {
    $4 = $4 + 24 | 0;
    break;
   }
  case 3:
  case 6:
   {
    $4 = $4 + 48 | 0;
    break;
   }
  case 7:
   {
    $which = 1;
    while (1) {
     if ((HEAP16[$4 + ($which * 24 | 0) + 4 >> 1] | 0) != 0) {
      label = 24;
      break;
     }
     if ((HEAPU8[(HEAP32[43256 + (HEAPU8[$4 + ($which * 24 | 0) + 2 | 0] << 2) >> 2] | 0) + 11 | 0] | 0) == 2) {
      label = 26;
      break;
     }
     $which = $which + 1 | 0;
    }
    if ((label | 0) == 24) {
     $1 = 0;
     $471 = $1;
     STACKTOP = sp;
     return $471 | 0;
    } else if ((label | 0) == 26) {
     $4 = $4 + ($which * 24 | 0) | 0;
     break L42;
    }
    break;
   }
  case 8:
   {
    do {
     if (($6 | 0) != 0) {
      if ((HEAP32[$6 + 8 >> 2] | 0) == 0) {
       break;
      }
      $4 = $6 | 0;
      break L42;
     }
    } while (0);
    $1 = 0;
    $471 = $1;
    STACKTOP = sp;
    return $471 | 0;
   }
  case 9:
   {
    $ix = 1;
    while (1) {
     if (($ix | 0) > 3) {
      label = 40;
      break;
     }
     if ((HEAP16[$4 + ($ix * 24 | 0) + 4 >> 1] | 0) != 0) {
      break;
     }
     $ix = $ix + 1 | 0;
    }
    if ((label | 0) == 40) {
     $4 = $4 + 72 | 0;
     break L42;
    }
    $1 = 0;
    $471 = $1;
    STACKTOP = sp;
    return $471 | 0;
   }
  case 10:
   {
    do {
     if ((HEAP16[$4 + 4 >> 1] | 0) == 0) {
      if ((HEAP16[$4 - 24 + 4 >> 1] | 0) != 0) {
       break;
      }
      $4 = $4 - 48 | 0;
      break L42;
     }
    } while (0);
    $1 = 0;
    $471 = $1;
    STACKTOP = sp;
    return $471 | 0;
   }
  default:
   {}
  }
 } while (0);
 if (($which | 0) == 0) {
  label = 47;
 } else {
  if (($which | 0) == 5) {
   label = 47;
  }
 }
 if ((label | 0) == 47) {
  if ((HEAPU8[$4 + 2 | 0] | 0) == 1) {
   $4 = $4 - 24 | 0;
  }
 }
 if (($3 & 256 | 0) != 0) {
  HEAP32[$4 + 8 >> 2] = HEAP32[43256 + (HEAPU8[$4 + 2 | 0] << 2) >> 2];
 }
 $ph = HEAP32[$4 + 8 >> 2] | 0;
 if (($instn2 | 0) < 7) {
  if (((HEAP32[HEAP32[43256 + ($data << 2) >> 2] >> 2] | 0) == (HEAP32[$ph >> 2] | 0) | 0) == 1) {
   $1 = 1;
   $471 = $1;
   STACKTOP = sp;
   return $471 | 0;
  }
  do {
   if (($which | 0) == 0) {
    if ((HEAPU8[$ph + 11 | 0] | 0) != 2) {
     break;
    }
    $1 = ($data | 0) == (HEAPU8[$ph + 13 | 0] | 0);
    $471 = $1;
    STACKTOP = sp;
    return $471 | 0;
   }
  } while (0);
  $1 = ($data | 0) == (HEAPU8[$ph + 12 | 0] | 0);
  $471 = $1;
  STACKTOP = sp;
  return $471 | 0;
 }
 $data = $instn & 31;
 $234 = $instn & 224;
 if (($234 | 0) == 0) {
  $1 = (HEAPU8[$ph + 11 | 0] | 0) == ($data | 0);
  $471 = $1;
  STACKTOP = sp;
  return $471 | 0;
 } else if (($234 | 0) == 32) {
  $1 = ((HEAP32[$ph + 4 >> 2] | 0) >>> 16 & 15 | 0) == ($data | 0);
  $471 = $1;
  STACKTOP = sp;
  return $471 | 0;
 } else if (($234 | 0) == 64) {
  $1 = (HEAP32[$ph + 4 >> 2] & 1 << $data | 0) != 0;
  $471 = $1;
  STACKTOP = sp;
  return $471 | 0;
 } else if (($234 | 0) == 128) {
  L113 : do {
   switch ($data | 0) {
   case 15:
    {
     if ((HEAPU16[$4 + 4 >> 1] | 0) != 0) {
      $1 = 0;
      $471 = $1;
      STACKTOP = sp;
      return $471 | 0;
     }
     $count = 0;
     while (1) {
      $4 = $4 - 24 | 0;
      if ((HEAPU8[(HEAP32[$4 + 8 >> 2] | 0) + 11 | 0] | 0) == 2) {
       if ((HEAP32[(HEAP32[$4 + 8 >> 2] | 0) + 4 >> 2] & 268435456 | 0) == 0) {
        label = 100;
        break;
       }
       $count = $count + 1 | 0;
      }
      if ((HEAPU16[$4 + 4 >> 1] | 0) != 0) {
       label = 103;
       break;
      }
     }
     if ((label | 0) == 103) {} else if ((label | 0) == 100) {}
     $1 = ($count | 0) > 0;
     $471 = $1;
     STACKTOP = sp;
     return $471 | 0;
    }
   case 13:
    {
     $1 = (__ZL18CountVowelPositionP12PHONEME_LIST($4) | 0) == 1;
     $471 = $1;
     STACKTOP = sp;
     return $471 | 0;
    }
   case 14:
    {
     $1 = (__ZL18CountVowelPositionP12PHONEME_LIST($4) | 0) == 2;
     $471 = $1;
     STACKTOP = sp;
     return $471 | 0;
    }
   case 12:
    {
     do {
      if ((HEAPU8[$ph + 11 | 0] | 0) == 2) {
       $388 = 1;
      } else {
       if ((HEAPU8[$ph + 11 | 0] | 0) == 3) {
        $388 = 1;
        break;
       }
       $388 = (HEAP32[$ph + 4 >> 2] & 16 | 0) != 0;
      }
     } while (0);
     $1 = $388;
     $471 = $1;
     STACKTOP = sp;
     return $471 | 0;
    }
   case 10:
    {
     $1 = (HEAPU8[$ph + 11 | 0] | 0) != 2;
     $471 = $1;
     STACKTOP = sp;
     return $471 | 0;
    }
   case 11:
    {
     while (1) {
      $4 = $4 + 24 | 0;
      HEAP32[$4 + 8 >> 2] = HEAP32[43256 + (HEAPU8[$4 + 2 | 0] << 2) >> 2];
      if ((HEAPU16[$4 + 4 >> 1] | 0) != 0) {
       label = 84;
       break;
      }
      if ((HEAPU8[(HEAP32[$4 + 8 >> 2] | 0) + 11 | 0] | 0) == 2) {
       label = 86;
       break;
      }
     }
     if ((label | 0) == 84) {
      $1 = 1;
      $471 = $1;
      STACKTOP = sp;
      return $471 | 0;
     } else if ((label | 0) == 86) {
      $1 = 0;
      $471 = $1;
      STACKTOP = sp;
      return $471 | 0;
     }
     break;
    }
   case 0:
   case 1:
   case 2:
   case 3:
   case 4:
    {
     $1 = __ZL15StressConditionP10TranslatorP12PHONEME_LISTii($2, $4, $data, 0) | 0;
     $471 = $1;
     STACKTOP = sp;
     return $471 | 0;
    }
   case 5:
    {
     if ((HEAPU8[$ph + 11 | 0] | 0) == 0) {
      $279 = 1;
     } else {
      $279 = (HEAP16[$plist_this >> 1] & 8192 | 0) != 0;
     }
     $1 = $279;
     $471 = $1;
     STACKTOP = sp;
     return $471 | 0;
    }
   case 6:
    {
     $1 = (HEAPU16[$4 + 4 >> 1] | 0) != 0;
     $471 = $1;
     STACKTOP = sp;
     return $471 | 0;
    }
   case 7:
    {
     $1 = (HEAPU16[$4 + 4 >> 1] | 0) == 0;
     $471 = $1;
     STACKTOP = sp;
     return $471 | 0;
    }
   case 8:
    {
     if ((HEAP16[$4 + 28 >> 1] | 0) != 0) {
      $308 = 1;
     } else {
      $308 = (HEAPU8[(HEAP32[$4 + 32 >> 2] | 0) + 11 | 0] | 0) == 0;
     }
     $1 = $308;
     $471 = $1;
     STACKTOP = sp;
     return $471 | 0;
    }
   case 9:
    {
     if ((HEAPU16[$4 + 4 >> 1] | 0) != 0) {
      $1 = 0;
      $471 = $1;
      STACKTOP = sp;
      return $471 | 0;
     }
     while (1) {
      $4 = $4 - 24 | 0;
      if ((HEAP8[$4 + 3 | 0] & 15 | 0) >= 4) {
       break;
      }
      if ((HEAPU16[$4 + 4 >> 1] | 0) != 0) {
       label = 80;
       break;
      }
     }
     if ((label | 0) == 80) {
      break L113;
     }
     $1 = 1;
     $471 = $1;
     STACKTOP = sp;
     return $471 | 0;
    }
   case 16:
    {
     $1 = (HEAP16[$4 >> 1] & 16 | 0) != 0;
     $471 = $1;
     STACKTOP = sp;
     return $471 | 0;
    }
   default:
    {}
   }
  } while (0);
 }
 $1 = 0;
 $471 = $1;
 STACKTOP = sp;
 return $471 | 0;
}
function __Z16InterpretPhonemeP10TranslatoriP12PHONEME_LISTP12PHONEME_DATAP12WORD_PH_DATA($tr, $control, $plist, $phdata, $worddata) {
 $tr = $tr | 0;
 $control = $control | 0;
 $plist = $plist | 0;
 $phdata = $phdata | 0;
 $worddata = $worddata | 0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $ph = 0, $prog = 0, $instn = 0, $instn2 = 0, $or_flag = 0, $truth = 0, $truth2 = 0, $data = 0, $end_flag = 0, $ix = 0, $param_sc = 0, $n_return = 0, $return_addr = 0, $70 = 0, $114 = 0, $129 = 0, $235 = 0, $261 = 0, $270 = 0, $296 = 0, $315 = 0, $343 = 0, $349 = 0, $426 = 0, $492 = 0, $511 = 0, $514 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $prog = sp | 0;
 $return_addr = sp + 8 | 0;
 $1 = $tr;
 $2 = $control;
 $3 = $plist;
 $4 = $phdata;
 $5 = $worddata;
 $n_return = 0;
 $ph = HEAP32[$3 + 8 >> 2] | 0;
 do {
  if (($5 | 0) != 0) {
   if ((HEAP16[$3 + 4 >> 1] | 0) == 0) {
    break;
   }
   HEAP32[$5 + 8 >> 2] = 0;
  }
 } while (0);
 _memset($4 | 0, 0, 152) | 0;
 HEAP32[$4 + 44 >> 2] = HEAPU8[$ph + 14 | 0] | 0;
 HEAP32[$4 + 40 >> 2] = HEAPU8[$ph + 15 | 0] | 0;
 if ((HEAPU16[$ph + 8 >> 1] | 0) == 0) {
  STACKTOP = sp;
  return;
 }
 $end_flag = 0;
 HEAP32[$prog >> 2] = (HEAP32[17076] | 0) + (HEAPU16[$ph + 8 >> 1] << 1);
 while (1) {
  if (($end_flag | 0) == 1) {
   break;
  }
  $instn = HEAP16[HEAP32[$prog >> 2] >> 1] | 0;
  $instn2 = ($instn & 65535) >> 8 & 15;
  $or_flag = 0;
  L12 : do {
   switch (($instn & 65535) >> 12 | 0) {
   case 9:
    {
     $data = (($instn & 15) << 16) + (HEAPU16[(HEAP32[$prog >> 2] | 0) + 2 >> 1] | 0) | 0;
     HEAP32[$prog >> 2] = (HEAP32[$prog >> 2] | 0) + 2;
     $343 = $instn2;
     if (($343 | 0) == 1) {
      if (($n_return | 0) < 10) {
       $349 = $n_return;
       $n_return = $349 + 1 | 0;
       HEAP32[$return_addr + ($349 << 2) >> 2] = HEAP32[$prog >> 2];
       HEAP32[$prog >> 2] = (HEAP32[17076] | 0) + ($data << 1) - 2;
      }
     } else if (($343 | 0) == 2) {
      HEAP32[$4 + 124 >> 2] = $data;
     } else if (($343 | 0) == 3) {
      HEAP32[$4 + 128 >> 2] = $data;
     }
     break;
    }
   case 0:
    {
     $data = $instn & 255;
     if (($instn2 | 0) == 0) {
      $70 = $data;
      if (($70 | 0) == 1) {
       $end_flag = 1;
      } else if (($70 | 0) == 2) {} else {
       __ZL12InvalidInstnP11PHONEME_TABi($ph, $instn & 65535);
      }
     } else {
      if (($instn2 | 0) == 5) {
       if ((HEAPU8[(HEAP32[43256 + (HEAPU8[$3 + 26 | 0] << 2) >> 2] | 0) + 11 | 0] | 0) == 2) {
        HEAP32[$4 + 20 >> 2] = $data;
       }
      } else {
       if (($instn2 | 0) == 12) {
        if (($data & 128 | 0) != 0) {
         $data = -(256 - $data | 0) | 0;
        }
        $114 = $4 + 44 | 0;
        HEAP32[$114 >> 2] = (HEAP32[$114 >> 2] | 0) + $data;
       } else {
        if (($instn2 | 0) == 13) {
         $ix = 0;
         while (1) {
          if (($ix | 0) < ($data | 0)) {
           $129 = ($ix | 0) < 16;
          } else {
           $129 = 0;
          }
          if (!$129) {
           break;
          }
          HEAP32[$prog >> 2] = (HEAP32[$prog >> 2] | 0) + 2;
          HEAP8[$4 + 132 + $ix | 0] = HEAPU16[HEAP32[$prog >> 2] >> 1] >> 8;
          HEAP8[$4 + 132 + ($ix + 1) | 0] = HEAP16[HEAP32[$prog >> 2] >> 1] & 255;
          $ix = $ix + 2 | 0;
         }
         HEAP8[$4 + 132 + $ix | 0] = 0;
        } else {
         if (($instn2 | 0) < 16) {
          if (($instn2 | 0) == 12) {
           HEAP32[$4 + 8 >> 2] = $data;
          }
          HEAP32[$4 + 4 + ($instn2 << 2) >> 2] = $data;
          do {
           if (($instn2 | 0) == 1) {
            if (($2 & 256 | 0) == 0) {
             break;
            }
            $end_flag = 1;
           }
          } while (0);
         } else {
          __ZL12InvalidInstnP11PHONEME_TABi($ph, $instn & 65535);
         }
        }
       }
      }
     }
     break;
    }
   case 11:
   case 12:
   case 13:
   case 14:
   case 15:
    {
     $instn2 = (($instn & 65535) >> 12) - 11 | 0;
     HEAP32[$4 + 68 + ($instn2 << 2) >> 2] = (($instn & 15) << 18) + (HEAPU16[(HEAP32[$prog >> 2] | 0) + 2 >> 1] << 2);
     $426 = ($instn & 65535) >> 4 & 255;
     HEAP32[$4 + 88 + ($instn2 << 2) >> 2] = $426;
     $param_sc = $426 & 255;
     HEAP32[$prog >> 2] = (HEAP32[$prog >> 2] | 0) + 2;
     if ((HEAPU16[(HEAP32[$prog >> 2] | 0) + 2 >> 1] | 0) != 2) {
      if (($instn2 | 0) < 2) {
       $end_flag = 1;
       if ((HEAPU16[(HEAP32[$prog >> 2] | 0) + 2 >> 1] >> 12 | 0) == 15) {
        $end_flag = 2;
       }
      } else {
       if (($instn2 | 0) == 4) {
        $end_flag = $end_flag - 1 | 0;
       }
      }
      if (($instn2 | 0) == 2) {
       label = 98;
      } else {
       if (($instn2 | 0) == 3) {
        label = 98;
       }
      }
      if ((label | 0) == 98) {
       label = 0;
       HEAP32[$4 + 88 + ($instn2 << 2) >> 2] = $param_sc << 24 >> 24;
      }
     }
     break;
    }
   case 2:
   case 3:
    {
     $or_flag = 0;
     $truth = 1;
     while (1) {
      if (($instn & 57344 | 0) != 8192) {
       break;
      }
      $truth2 = (__ZL18InterpretConditionP10TranslatoriP12PHONEME_LISTPtP12WORD_PH_DATA($1, $2, $3, HEAP32[$prog >> 2] | 0, $5) | 0) & 1;
      $235 = __Z13NumInstnWordsPt(HEAP32[$prog >> 2] | 0) | 0;
      HEAP32[$prog >> 2] = (HEAP32[$prog >> 2] | 0) + ($235 << 1);
      if ((HEAPU16[HEAP32[$prog >> 2] >> 1] | 0) == 3) {
       $truth2 = ($truth2 & 1 ^ 1 | 0) != 0 | 0;
       HEAP32[$prog >> 2] = (HEAP32[$prog >> 2] | 0) + 2;
      }
      if (($or_flag | 0) != 0) {
       if ($truth & 1) {
        $261 = 1;
       } else {
        $261 = $truth2 & 1;
       }
       $truth = $261 & 1;
      } else {
       if ($truth & 1) {
        $270 = $truth2 & 1;
       } else {
        $270 = 0;
       }
       $truth = $270 & 1;
      }
      $or_flag = $instn & 4096;
      $instn = HEAP16[HEAP32[$prog >> 2] >> 1] | 0;
     }
     if (($truth & 1 | 0) == 0) {
      if (($instn & 63488 | 0) == 26624) {
       HEAP32[$prog >> 2] = (HEAP32[$prog >> 2] | 0) + (($instn & 255) << 1);
      } else {
       $296 = __Z13NumInstnWordsPt(HEAP32[$prog >> 2] | 0) | 0;
       HEAP32[$prog >> 2] = (HEAP32[$prog >> 2] | 0) + ($296 << 1);
       if ((HEAP16[HEAP32[$prog >> 2] >> 1] & 65024 | 0) == 24576) {
        HEAP32[$prog >> 2] = (HEAP32[$prog >> 2] | 0) + 2;
       }
      }
     }
     HEAP32[$prog >> 2] = (HEAP32[$prog >> 2] | 0) - 2;
     break;
    }
   case 6:
    {
     $315 = $instn2 >> 1;
     if (($315 | 0) == 0) {
      HEAP32[$prog >> 2] = (HEAP32[$prog >> 2] | 0) + (($instn & 255) - 1 << 1);
     } else if (($315 | 0) == 4) {} else if (($315 | 0) == 5) {
      __ZL17SwitchOnVowelTypeP12PHONEME_LISTP12PHONEME_DATAPPti($3, $4, $prog, 2);
     } else if (($315 | 0) == 6) {
      __ZL17SwitchOnVowelTypeP12PHONEME_LISTP12PHONEME_DATAPPti($3, $4, $prog, 3);
     }
     break;
    }
   case 10:
    {
     if (($instn2 | 0) == 1) {
      $ix = 0;
     } else {
      $ix = 2;
     }
     HEAP32[$4 + 108 + ($ix << 2) >> 2] = ((HEAP16[HEAP32[$prog >> 2] >> 1] & 255) << 16) + (HEAPU16[(HEAP32[$prog >> 2] | 0) + 2 >> 1] | 0);
     HEAP32[$4 + 108 + ($ix + 1 << 2) >> 2] = (HEAPU16[(HEAP32[$prog >> 2] | 0) + 4 >> 1] << 16) + (HEAPU16[(HEAP32[$prog >> 2] | 0) + 6 >> 1] | 0);
     HEAP32[$prog >> 2] = (HEAP32[$prog >> 2] | 0) + 6;
     break;
    }
   case 1:
    {
     if (($1 | 0) == 0) {
      break L12;
     }
     if (($instn2 | 0) < 8) {
      if (((__ZL15StressConditionP10TranslatorP12PHONEME_LISTii($1, $3, $instn2 & 7, 1) | 0) & 1 | 0) == 1) {
       HEAP32[$4 + 8 >> 2] = $instn & 255;
       $end_flag = 1;
      }
     }
     break;
    }
   default:
    {
     __ZL12InvalidInstnP11PHONEME_TABi($ph, $instn & 65535);
    }
   }
  } while (0);
  if ((HEAP32[$ph + 4 >> 2] & 4096 | 0) != 0) {
   $end_flag = 1;
  }
  do {
   if (($end_flag | 0) == 1) {
    if (($n_return | 0) <= 0) {
     break;
    }
    $end_flag = 0;
    $492 = $n_return - 1 | 0;
    $n_return = $492;
    HEAP32[$prog >> 2] = HEAP32[$return_addr + ($492 << 2) >> 2];
   }
  } while (0);
  HEAP32[$prog >> 2] = (HEAP32[$prog >> 2] | 0) + 2;
 }
 if (($5 | 0) == 0) {
  STACKTOP = sp;
  return;
 }
 if ((HEAPU8[$3 + 17 | 0] | 0) != 2) {
  STACKTOP = sp;
  return;
 }
 $511 = $5 | 0;
 $514 = $3 | 0;
 HEAP32[$511 >> 2] = HEAP32[$514 >> 2];
 HEAP32[$511 + 4 >> 2] = HEAP32[$514 + 4 >> 2];
 HEAP32[$511 + 8 >> 2] = HEAP32[$514 + 8 >> 2];
 HEAP32[$511 + 12 >> 2] = HEAP32[$514 + 12 >> 2];
 HEAP32[$511 + 16 >> 2] = HEAP32[$514 + 16 >> 2];
 HEAP32[$511 + 20 >> 2] = HEAP32[$514 + 20 >> 2];
 STACKTOP = sp;
 return;
}
function __Z7Wavegenv() {
 var $1 = 0, $waveph = 0, $theta = 0, $total = 0, $h = 0, $ix = 0, $z = 0, $z1 = 0, $z2 = 0, $ov = 0, $pk = 0, $sample = 0, $modn_amp = 0, $modn_period = 0, $24 = 0, $72 = 0, $79 = 0, $142 = 0, $182 = 0, $397 = 0, $398 = 0, $436 = 0, $492 = 0, $497 = 0, $501 = 0, $514 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 while (1) {
  if ((HEAP32[26834] | 0) == 0) {
   if ((HEAP32[28848] | 0) == (HEAP32[26724] | 0)) {
    label = 4;
    break;
   }
  }
  if ((HEAP32[28848] & 63 | 0) == 0) {
   if ((HEAP32[28848] | 0) == 0) {
    HEAP32[26952] = 0;
    HEAP32[26692] = 108720;
    HEAP32[25656] = __Z16PeaksToHarmspectP15wavegen_peaks_tiPii(112656, HEAP32[8345] << 4, 108720, 0) | 0;
    $24 = Math_imul(HEAP32[8357] | 0, HEAP32[8345] >> 8) | 0;
    HEAP32[25664] = (Math_imul($24, HEAP32[8359] | 0) | 0) / 8e4 | 0;
    HEAP32[25660] = 890 / (HEAP32[8345] >> 12 | 0) | 0;
   } else {
    __ZL17AdvanceParametersv();
   }
   HEAP32[26720] = Math_imul(HEAP32[8345] >> 7, HEAP32[28438] | 0) | 0;
   HEAP32[28518] = (HEAP32[9496] | 0) / (HEAP32[8345] >> 12 | 0) | 0;
   HEAP32[26690] = HEAP32[8345] >> 11;
   HEAP32[25658] = HEAP32[25656];
   HEAP32[26692] = 108720 + ((HEAP32[26952] | 0) * 1600 | 0);
   HEAP32[26952] = HEAP32[26952] ^ 1;
   HEAP32[25656] = __Z16PeaksToHarmspectP15wavegen_peaks_tiPii(112656, HEAP32[8345] << 4, 108720 + ((HEAP32[26952] | 0) * 1600 | 0) | 0, 1) | 0;
   __ZL9SetBreathv();
  } else {
   if ((HEAP32[28848] & 7 | 0) == 0) {
    $h = 1;
    while (1) {
     do {
      if (($h | 0) < 30) {
       if (($h | 0) > (HEAP32[25656] | 0)) {
        $72 = 0;
        break;
       }
       $72 = ($h | 0) <= (HEAP32[25658] | 0);
      } else {
       $72 = 0;
      }
     } while (0);
     if (!$72) {
      break;
     }
     $79 = (HEAP32[26692] | 0) + ($h << 2) | 0;
     HEAP32[$79 >> 2] = (HEAP32[$79 >> 2] | 0) + (HEAP32[107208 + ($h << 2) >> 2] | 0);
     $h = $h + 1 | 0;
    }
    if ((HEAP32[5332] | 0) < 256) {
     HEAP32[5332] = (HEAP32[5332] | 0) + 1;
    }
   }
  }
  HEAP32[28848] = (HEAP32[28848] | 0) + 1;
  if ((HEAP32[26298] | 0) > 0) {
   HEAP32[26298] = (HEAP32[26298] | 0) + (HEAP32[26720] | 0);
   if ((HEAP32[26298] | 0) < 0) {
    HEAP32[27980] = (HEAP32[28440] | 0) - ((HEAP32[28518] | 0) / 2 | 0);
    if ((HEAP32[28848] | 0) > (HEAP32[26724] | 0)) {
     label = 25;
     break;
    }
    HEAP32[25662] = (HEAP32[25662] | 0) + 1;
    $pk = (HEAP32[(HEAP32[8292] | 0) + 104 >> 2] | 0) + 1 | 0;
    while (1) {
     if (($pk | 0) >= 9) {
      break;
     }
     HEAP32[113976 + ($pk << 2) >> 2] = (((HEAP32[112656 + ($pk * 80 | 0) >> 2] | 0) / (HEAP32[8345] << 3 | 0) | 0) + 1 | 0) / 2 | 0;
     $pk = $pk + 1 | 0;
    }
    $142 = Math_imul(HEAP32[8357] | 0, HEAP32[8345] >> 8) | 0;
    HEAP32[25664] = (Math_imul($142, HEAP32[8359] | 0) | 0) / 8e4 | 0;
    if ((HEAP32[28588] | 0) > 0) {
     if ((HEAP32[28588] | 0) == 3) {
      if (((HEAP32[26724] | 0) - (HEAP32[28848] | 0) | 0) < (HEAP32[28518] << 1 | 0)) {
       HEAP32[28588] = 2;
       HEAP32[25664] = (Math_imul(HEAP32[25664] | 0, HEAP32[28468] | 0) | 0) / 256 | 0;
      }
     } else {
      if ((HEAP32[28588] | 0) == 4) {
       HEAP32[28588] = 2;
       HEAP32[25664] = (Math_imul(HEAP32[25664] | 0, HEAP32[28468] | 0) | 0) / 256 | 0;
      } else {
       HEAP32[28588] = (HEAP32[28588] | 0) - 1;
      }
     }
    }
    if ((HEAP32[28520] | 0) != 0) {
     $182 = HEAP32[27982] >> 8;
     $ix = $182;
     if (($182 | 0) > 127) {
      $ix = 127;
     }
     HEAP32[25664] = (Math_imul(HEAP32[25664] | 0, HEAPU8[(HEAP32[28520] | 0) + $ix | 0] | 0) | 0) / 128 | 0;
    }
    $modn_period = 0;
    if ((HEAP32[(HEAP32[144] | 0) + 92 >> 2] | 0) < 8) {
     $modn_period = HEAPU8[28448 + (HEAP32[(HEAP32[144] | 0) + 92 >> 2] << 3) + (HEAP32[28446] | 0) | 0] | 0;
     $modn_amp = $modn_period & 15;
     $modn_period = $modn_period >> 4;
    }
    if (($modn_period | 0) != 0) {
     if (($modn_period | 0) == 15) {
      HEAP32[25664] = (Math_imul(HEAP32[25664] | 0, $modn_amp) | 0) / 16 | 0;
      HEAP32[28446] = 0;
     } else {
      if (((HEAP32[25662] | 0) % ($modn_period | 0) | 0 | 0) == 0) {
       HEAP32[25664] = (Math_imul(HEAP32[25664] | 0, $modn_amp) | 0) / 16 | 0;
      }
     }
    }
   }
  } else {
   HEAP32[26298] = (HEAP32[26298] | 0) + (HEAP32[26720] | 0);
  }
  $waveph = HEAP32[26298] >> 16 & 65535;
  $total = 0;
  HEAP32[27980] = (HEAP32[27980] | 0) + 1;
  do {
   if ((HEAP32[27980] | 0) >= 0) {
    if ((HEAP32[27980] | 0) >= (HEAP32[28522] | 0)) {
     break;
    }
    $pk = (HEAP32[(HEAP32[8292] | 0) + 104 >> 2] | 0) + 1 | 0;
    while (1) {
     if (($pk | 0) >= 9) {
      break;
     }
     $theta = (Math_imul(HEAP32[113976 + ($pk << 2) >> 2] | 0, $waveph & 65535) | 0) & 65535;
     $total = $total + (Math_imul(HEAP16[672 + (($theta & 65535) >> 5 << 1) >> 1] | 0, HEAP32[115416 + ($pk << 2) >> 2] | 0) | 0) | 0;
     $pk = $pk + 1 | 0;
    }
    $total = Math_imul(($total | 0) / (HEAP32[26690] | 0) | 0, HEAPU8[24336 + (HEAP32[27980] | 0) | 0] | 0) | 0;
   }
  } while (0);
  $theta = $waveph;
  $h = 1;
  while (1) {
   if (($h | 0) > (HEAP32[25660] | 0)) {
    break;
   }
   $total = $total + (Math_imul(HEAP16[672 + (($theta & 65535) >> 5 << 1) >> 1] | 0, HEAP32[(HEAP32[26692] | 0) + ($h << 2) >> 2] | 0) | 0) | 0;
   $theta = ($theta & 65535) + ($waveph & 65535) & 65535;
   $h = $h + 1 | 0;
  }
  while (1) {
   if (($h | 0) > (HEAP32[25658] | 0)) {
    break;
   }
   $total = $total - (Math_imul(HEAP16[672 + (($theta & 65535) >> 5 << 1) >> 1] | 0, HEAP32[(HEAP32[26692] | 0) + ($h << 2) >> 2] | 0) | 0) | 0;
   $theta = ($theta & 65535) + ($waveph & 65535) & 65535;
   $h = $h + 1 | 0;
  }
  if ((HEAP32[26836] | 0) != 64) {
   $total = Math_imul($total >> 6, HEAP32[26836] | 0) | 0;
  }
  if ((HEAP32[(HEAP32[8292] | 0) + 292 >> 2] | 0) != 0) {
   $total = $total + (__ZL11ApplyBreathv() | 0) | 0;
  }
  $z2 = 0;
  if ((HEAP32[8354] | 0) < (HEAP32[8351] | 0)) {
   if ((HEAP32[8352] | 0) == 0) {
    $sample = (HEAPU8[(HEAP32[8350] | 0) + ((HEAP32[8354] | 0) + (HEAP32[8356] | 0)) | 0] | 0) + (HEAP8[(HEAP32[8350] | 0) + ((HEAP32[8354] | 0) + (HEAP32[8356] | 0) + 1) | 0] << 8) | 0;
    HEAP32[8354] = (HEAP32[8354] | 0) + 2;
   } else {
    $397 = HEAP32[8356] | 0;
    $398 = HEAP32[8354] | 0;
    HEAP32[8354] = $398 + 1;
    $sample = Math_imul(HEAP8[(HEAP32[8350] | 0) + ($397 + $398) | 0] | 0, HEAP32[8352] | 0) | 0;
   }
   $z2 = (Math_imul($sample, HEAP32[8358] | 0) | 0) >> 10;
   $z2 = (Math_imul($z2, HEAP32[8353] | 0) | 0) / 32 | 0;
   if (((HEAP32[8354] | 0) + (HEAP32[8356] | 0) | 0) >= (HEAP32[8355] | 0)) {
    HEAP32[8356] = (HEAP32[8356] | 0) - (((HEAP32[8355] | 0) * 3 | 0 | 0) / 4 | 0);
   }
  }
  $z1 = $z2 + ((Math_imul($total >> 8, HEAP32[25664] | 0) | 0) >> 13) | 0;
  $436 = HEAP32[19870] | 0;
  HEAP32[19870] = $436 + 1;
  $z1 = $z1 + ((Math_imul(HEAP16[79496 + ($436 << 1) >> 1] | 0, HEAP32[22624] | 0) | 0) >> 8) | 0;
  if ((HEAP32[19870] | 0) >= 5500) {
   HEAP32[19870] = 0;
  }
  $z = (Math_imul($z1, HEAP32[5332] | 0) | 0) >> 8;
  if (($z | 0) >= 32768) {
   $ov = (8388608 / ($z1 | 0) | 0) - 1 | 0;
   if (($ov | 0) < (HEAP32[5332] | 0)) {
    HEAP32[5332] = $ov;
   }
   $z = (Math_imul($z1, HEAP32[5332] | 0) | 0) >> 8;
  } else {
   if (($z | 0) <= -32768) {
    $ov = (-8388608 / ($z1 | 0) | 0) - 1 | 0;
    if (($ov | 0) < (HEAP32[5332] | 0)) {
     HEAP32[5332] = $ov;
    }
    $z = (Math_imul($z1, HEAP32[5332] | 0) | 0) >> 8;
   }
  }
  $492 = HEAP32[19448] | 0;
  HEAP32[19448] = $492 + 1;
  HEAP8[$492] = $z;
  $497 = HEAP32[19448] | 0;
  HEAP32[19448] = $497 + 1;
  HEAP8[$497] = $z >> 8;
  $501 = HEAP32[19872] | 0;
  HEAP32[19872] = $501 + 1;
  HEAP16[79496 + ($501 << 1) >> 1] = $z;
  if ((HEAP32[19872] | 0) >= 5500) {
   HEAP32[19872] = 0;
  }
  if ((HEAP32[19448] | 0) >>> 0 >= (HEAP32[19450] | 0) >>> 0) {
   label = 95;
   break;
  }
 }
 if ((label | 0) == 25) {
  $1 = 0;
  $514 = $1;
  STACKTOP = sp;
  return $514 | 0;
 } else if ((label | 0) == 95) {
  $1 = 1;
  $514 = $1;
  STACKTOP = sp;
  return $514 | 0;
 } else if ((label | 0) == 4) {
  $1 = 0;
  $514 = $1;
  STACKTOP = sp;
  return $514 | 0;
 }
 return 0;
}
function __ZL17compile_dictrulesP8_IO_FILES0_Pc($f_in, $f_out, $fname_temp) {
 $f_in = $f_in | 0;
 $f_out = $f_out | 0;
 $fname_temp = $fname_temp | 0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $prule = 0, $p = 0, $ix = 0, $c = 0, $gp = 0, $f_temp = 0, $n_rules = 0, $count = 0, $different = 0, $wc = 0, $prev_rgroup_name = 0, $char_code = 0, $compile_mode = 0, $buf = 0, $buf1 = 0, $rules = 0, $n_rgroups = 0, $n_groups3 = 0, $rgroup = 0, $replace1 = 0, $replace2 = 0, $p1 = 0, $6 = 0, $20 = 0, $65 = 0, $137 = 0, $151 = 0, $153 = 0, $156 = 0, $162 = 0, $171 = 0, $176 = 0, $190 = 0, $219 = 0, $230 = 0, $308 = 0, $328 = 0, $360 = 0, $405 = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 11896 | 0;
 $c = sp | 0;
 $n_rules = sp + 8 | 0;
 $wc = sp + 16 | 0;
 $char_code = sp + 24 | 0;
 $buf1 = sp + 32 | 0;
 $rules = sp + 536 | 0;
 $rgroup = sp + 8536 | 0;
 $2 = $f_in;
 $3 = $f_out;
 $4 = $fname_temp;
 HEAP32[$n_rules >> 2] = 0;
 $count = 0;
 $compile_mode = 0;
 $n_rgroups = 0;
 $n_groups3 = 0;
 HEAP32[26930] = 0;
 HEAP8[128264] = 0;
 $6 = __ZL9fopen_logPKcS0_($4, 7960) | 0;
 $f_temp = $6;
 if (($6 | 0) == 0) {
  $1 = 1;
  $405 = $1;
  STACKTOP = sp;
  return $405 | 0;
 }
 L5 : while (1) {
  HEAP32[26930] = (HEAP32[26930] | 0) + 1;
  $buf = _fgets($buf1 | 0, 500, $2 | 0) | 0;
  if (($buf | 0) != 0) {
   $20 = _strstr($buf | 0, 7920) | 0;
   $p = $20;
   if (($20 | 0) != 0) {
    HEAP8[$p] = 0;
   }
   if ((HEAP8[$buf | 0] | 0) == 13) {
    $buf = $buf + 1 | 0;
   }
  }
  do {
   if (($buf | 0) != 0) {
    if ((HEAP8[$buf | 0] | 0) == 46) {
     break;
    }
    $219 = $compile_mode;
    if (($219 | 0) == 1) {
     $prule = __ZL12compile_rulePc($buf) | 0;
     do {
      if (($prule | 0) != 0) {
       if ((HEAP32[$n_rules >> 2] | 0) >= 2e3) {
        break;
       }
       $230 = HEAP32[$n_rules >> 2] | 0;
       HEAP32[$n_rules >> 2] = $230 + 1;
       HEAP32[$rules + ($230 << 2) >> 2] = $prule;
      }
     } while (0);
    } else if (($219 | 0) == 2) {
     $p1 = $buf;
     $replace1 = 0;
     $replace2 = 0;
     while (1) {
      if ((__Z8isspace2j(HEAP8[$p1] | 0) | 0) == 0) {
       break;
      }
      $p1 = $p1 + 1 | 0;
     }
     $ix = 0;
     while (1) {
      if ((HEAPU8[$p1] | 0) <= 32) {
       break;
      }
      $p1 = $p1 + (__Z7utf8_inPiPKc($c, $p1) | 0) | 0;
      $replace1 = $replace1 + (HEAP32[$c >> 2] << $ix) | 0;
      $ix = $ix + 16 | 0;
     }
     while (1) {
      if ((__Z8isspace2j(HEAP8[$p1] | 0) | 0) == 0) {
       break;
      }
      $p1 = $p1 + 1 | 0;
     }
     $ix = 0;
     while (1) {
      if ((HEAPU8[$p1] | 0) <= 32) {
       break;
      }
      $p1 = $p1 + (__Z7utf8_inPiPKc($c, $p1) | 0) | 0;
      $replace2 = $replace2 + (HEAP32[$c >> 2] << $ix) | 0;
      $ix = $ix + 16 | 0;
     }
     if (($replace1 | 0) != 0) {
      __Z11Write4BytesP8_IO_FILEi($3, $replace1);
      __Z11Write4BytesP8_IO_FILEi($3, $replace2);
     }
    }
    continue L5;
   }
  } while (0);
  if ((HEAP32[$n_rules >> 2] | 0) > 0) {
   _strcpy($rgroup + ($n_rgroups * 28 | 0) | 0, 128264) | 0;
   HEAP32[$rgroup + ($n_rgroups * 28 | 0) + 24 >> 2] = HEAP32[26694];
   HEAP32[$rgroup + ($n_rgroups * 28 | 0) + 16 >> 2] = _ftell($f_temp | 0) | 0;
   __ZL17output_rule_groupP8_IO_FILEiPPcS1_($f_temp, HEAP32[$n_rules >> 2] | 0, $rules | 0, 128264);
   $65 = _ftell($f_temp | 0) | 0;
   HEAP32[$rgroup + ($n_rgroups * 28 | 0) + 20 >> 2] = $65 - (HEAP32[$rgroup + ($n_rgroups * 28 | 0) + 16 >> 2] | 0);
   $n_rgroups = $n_rgroups + 1 | 0;
   $count = $count + (HEAP32[$n_rules >> 2] | 0) | 0;
  }
  HEAP32[$n_rules >> 2] = 0;
  if (($compile_mode | 0) == 2) {
   _fwrite($n_rules | 0, 1, 4, $3 | 0) | 0;
   $compile_mode = 0;
  }
  if (($buf | 0) == 0) {
   break;
  }
  if ((_memcmp($buf | 0, 7856, 2) | 0) == 0) {
   __ZL19compile_lettergroupPcP8_IO_FILE($buf + 2 | 0, $3) | 0;
   continue;
  }
  if ((_memcmp($buf | 0, 7800, 8) | 0) == 0) {
   $compile_mode = 2;
   _fputc(6, $3 | 0) | 0;
   _fputc(20, $3 | 0) | 0;
   while (1) {
    if (((_ftell($3 | 0) | 0) & 3 | 0) == 0) {
     break;
    }
    _fputc(0, $3 | 0) | 0;
   }
  }
  if ((_memcmp($buf | 0, 7728, 6) | 0) == 0) {
   $compile_mode = 1;
   $p = $buf + 6 | 0;
   while (1) {
    if ((HEAPU8[$p | 0] | 0) == 32) {
     $137 = 1;
    } else {
     $137 = (HEAPU8[$p | 0] | 0) == 9;
    }
    if (!$137) {
     break;
    }
    $p = $p + 1 | 0;
   }
   $ix = 0;
   while (1) {
    if ((HEAPU8[$p] | 0) > 32) {
     $151 = ($ix | 0) < 12;
    } else {
     $151 = 0;
    }
    if (!$151) {
     break;
    }
    $153 = $p;
    $p = $153 + 1 | 0;
    $156 = $ix;
    $ix = $156 + 1 | 0;
    HEAP8[128264 + $156 | 0] = HEAP8[$153] | 0;
   }
   HEAP8[128264 + $ix | 0] = 0;
   HEAP32[26694] = 0;
   $162 = _sscanf(128264, 7672, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $char_code, tempVarArgs) | 0) | 0;
   STACKTOP = tempVarArgs;
   if (($162 | 0) == 1) {
    $p = 128264;
    if ((HEAP32[$char_code >> 2] | 0) >>> 0 > 256 >>> 0) {
     $171 = $p;
     $p = $171 + 1 | 0;
     HEAP8[$171] = (HEAP32[$char_code >> 2] | 0) >>> 8;
    }
    $176 = $p;
    $p = $176 + 1 | 0;
    HEAP8[$176] = HEAP32[$char_code >> 2];
    HEAP8[$p] = 0;
   } else {
    if ((HEAP32[(HEAP32[9112] | 0) + 720 >> 2] | 0) > 0) {
     __Z7utf8_inPiPKc($wc, 128264) | 0;
     $190 = (HEAP32[$wc >> 2] | 0) - (HEAP32[(HEAP32[9112] | 0) + 720 >> 2] | 0) | 0;
     $ix = $190;
     do {
      if (($190 | 0) >= 0) {
       if (($ix | 0) >= 128) {
        break;
       }
       HEAP32[26694] = $ix + 1;
      }
     } while (0);
    }
   }
   do {
    if ((HEAP32[26694] | 0) == 0) {
     if ((_strlen(128264) | 0) >>> 0 <= 2 >>> 0) {
      break;
     }
     if ((__Z7utf8_inPiPKc($c, 128264) | 0) < 2) {
      _fprintf(HEAP32[28344] | 0, 7592, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = HEAP32[26930], tempVarArgs) | 0) | 0;
      STACKTOP = tempVarArgs;
      HEAP32[30922] = (HEAP32[30922] | 0) + 1;
     }
     HEAP8[128266] = 0;
    }
   } while (0);
  }
 }
 _fclose($f_temp | 0) | 0;
 _qsort($rgroup | 0, $n_rgroups | 0, 28, 2);
 $308 = _fopen($4 | 0, 18592) | 0;
 $f_temp = $308;
 if (($308 | 0) == 0) {
  $1 = 2;
  $405 = $1;
  STACKTOP = sp;
  return $405 | 0;
 }
 $prev_rgroup_name = 18552;
 $gp = 0;
 while (1) {
  if (($gp | 0) >= ($n_rgroups | 0)) {
   break;
  }
  _fseek($f_temp | 0, HEAP32[$rgroup + ($gp * 28 | 0) + 16 >> 2] | 0, 0) | 0;
  $328 = _strcmp($rgroup + ($gp * 28 | 0) | 0, $prev_rgroup_name | 0) | 0;
  $different = $328;
  if (($328 | 0) != 0) {
   if (($gp | 0) > 0) {
    _fputc(7, $3 | 0) | 0;
   }
   _fputc(6, $3 | 0) | 0;
   if ((HEAP32[$rgroup + ($gp * 28 | 0) + 24 >> 2] | 0) != 0) {
    $n_groups3 = $n_groups3 + 1 | 0;
    _fputc(1, $3 | 0) | 0;
    _fputc(HEAP32[$rgroup + ($gp * 28 | 0) + 24 >> 2] | 0, $3 | 0) | 0;
   } else {
    $360 = $rgroup + ($gp * 28 | 0) | 0;
    $prev_rgroup_name = $360;
    _fprintf($3 | 0, 8944, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $360, tempVarArgs) | 0) | 0;
    STACKTOP = tempVarArgs;
   }
   _fputc(0, $3 | 0) | 0;
  }
  $ix = HEAP32[$rgroup + ($gp * 28 | 0) + 20 >> 2] | 0;
  while (1) {
   if (($ix | 0) <= 0) {
    break;
   }
   HEAP32[$c >> 2] = _fgetc($f_temp | 0) | 0;
   _fputc(HEAP32[$c >> 2] | 0, $3 | 0) | 0;
   $ix = $ix - 1 | 0;
  }
  if (($different | 0) != 0) {}
  $gp = $gp + 1 | 0;
 }
 _fputc(7, $3 | 0) | 0;
 _fputc(0, $3 | 0) | 0;
 _fclose($f_temp | 0) | 0;
 _remove($4 | 0) | 0;
 _fprintf(HEAP32[28344] | 0, 18464, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 24 | 0, HEAP32[tempVarArgs >> 2] = $count, HEAP32[tempVarArgs + 8 >> 2] = $n_rgroups, HEAP32[tempVarArgs + 16 >> 2] = $n_groups3, tempVarArgs) | 0) | 0;
 STACKTOP = tempVarArgs;
 $1 = 0;
 $405 = $1;
 STACKTOP = sp;
 return $405 | 0;
}
function _try_realloc_chunk($p, $nb) {
 $p = $p | 0;
 $nb = $nb | 0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $10 = 0, $15 = 0, $16 = 0, $34 = 0, $52 = 0, $55 = 0, $69 = 0, $72 = 0, $86 = 0, $94 = 0, $storemerge27 = 0, $storemerge = 0, $103 = 0, $106 = 0, $107 = 0, $112 = 0, $115 = 0, $118 = 0, $139 = 0, $_pre_phi = 0, $144 = 0, $147 = 0, $150 = 0, $155 = 0, $159 = 0, $163 = 0, $169 = 0, $170 = 0, $174 = 0, $175 = 0, $RP_0 = 0, $R_0 = 0, $177 = 0, $178 = 0, $181 = 0, $182 = 0, $R_1 = 0, $193 = 0, $195 = 0, $209 = 0, $226 = 0, $239 = 0, $258 = 0, $272 = 0, $newp_0 = 0;
 $1 = $p + 4 | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 $3 = $2 & -8;
 $4 = $p;
 $5 = $4 + $3 | 0;
 $6 = $5;
 $7 = HEAP32[22680] | 0;
 if ($4 >>> 0 < $7 >>> 0) {
  _abort();
  return 0;
 }
 $10 = $2 & 3;
 if (!(($10 | 0) != 1 & $4 >>> 0 < $5 >>> 0)) {
  _abort();
  return 0;
 }
 $15 = $4 + ($3 | 4) | 0;
 $16 = HEAP32[$15 >> 2] | 0;
 if (($16 & 1 | 0) == 0) {
  _abort();
  return 0;
 }
 if (($10 | 0) == 0) {
  if ($nb >>> 0 < 256 >>> 0) {
   $newp_0 = 0;
   return $newp_0 | 0;
  }
  do {
   if ($3 >>> 0 >= ($nb + 4 | 0) >>> 0) {
    if (($3 - $nb | 0) >>> 0 > HEAP32[19568] << 1 >>> 0) {
     break;
    } else {
     $newp_0 = $p;
    }
    return $newp_0 | 0;
   }
  } while (0);
  $newp_0 = 0;
  return $newp_0 | 0;
 }
 if ($3 >>> 0 >= $nb >>> 0) {
  $34 = $3 - $nb | 0;
  if ($34 >>> 0 <= 15 >>> 0) {
   $newp_0 = $p;
   return $newp_0 | 0;
  }
  HEAP32[$1 >> 2] = $2 & 1 | $nb | 2;
  HEAP32[$4 + ($nb + 4) >> 2] = $34 | 3;
  HEAP32[$15 >> 2] = HEAP32[$15 >> 2] | 1;
  _dispose_chunk($4 + $nb | 0, $34);
  $newp_0 = $p;
  return $newp_0 | 0;
 }
 if (($6 | 0) == (HEAP32[22682] | 0)) {
  $52 = (HEAP32[22679] | 0) + $3 | 0;
  if ($52 >>> 0 <= $nb >>> 0) {
   $newp_0 = 0;
   return $newp_0 | 0;
  }
  $55 = $52 - $nb | 0;
  HEAP32[$1 >> 2] = $2 & 1 | $nb | 2;
  HEAP32[$4 + ($nb + 4) >> 2] = $55 | 1;
  HEAP32[22682] = $4 + $nb;
  HEAP32[22679] = $55;
  $newp_0 = $p;
  return $newp_0 | 0;
 }
 if (($6 | 0) == (HEAP32[22681] | 0)) {
  $69 = (HEAP32[22678] | 0) + $3 | 0;
  if ($69 >>> 0 < $nb >>> 0) {
   $newp_0 = 0;
   return $newp_0 | 0;
  }
  $72 = $69 - $nb | 0;
  if ($72 >>> 0 > 15 >>> 0) {
   HEAP32[$1 >> 2] = $2 & 1 | $nb | 2;
   HEAP32[$4 + ($nb + 4) >> 2] = $72 | 1;
   HEAP32[$4 + $69 >> 2] = $72;
   $86 = $4 + ($69 + 4) | 0;
   HEAP32[$86 >> 2] = HEAP32[$86 >> 2] & -2;
   $storemerge = $4 + $nb | 0;
   $storemerge27 = $72;
  } else {
   HEAP32[$1 >> 2] = $2 & 1 | $69 | 2;
   $94 = $4 + ($69 + 4) | 0;
   HEAP32[$94 >> 2] = HEAP32[$94 >> 2] | 1;
   $storemerge = 0;
   $storemerge27 = 0;
  }
  HEAP32[22678] = $storemerge27;
  HEAP32[22681] = $storemerge;
  $newp_0 = $p;
  return $newp_0 | 0;
 }
 if (($16 & 2 | 0) != 0) {
  $newp_0 = 0;
  return $newp_0 | 0;
 }
 $103 = ($16 & -8) + $3 | 0;
 if ($103 >>> 0 < $nb >>> 0) {
  $newp_0 = 0;
  return $newp_0 | 0;
 }
 $106 = $103 - $nb | 0;
 $107 = $16 >>> 3;
 L52 : do {
  if ($16 >>> 0 < 256 >>> 0) {
   $112 = HEAP32[$4 + ($3 + 8) >> 2] | 0;
   $115 = HEAP32[$4 + ($3 + 12) >> 2] | 0;
   $118 = 90744 + ($107 << 1 << 2) | 0;
   do {
    if (($112 | 0) != ($118 | 0)) {
     if ($112 >>> 0 < $7 >>> 0) {
      _abort();
      return 0;
     }
     if ((HEAP32[$112 + 12 >> 2] | 0) == ($6 | 0)) {
      break;
     }
     _abort();
     return 0;
    }
   } while (0);
   if (($115 | 0) == ($112 | 0)) {
    HEAP32[22676] = HEAP32[22676] & ~(1 << $107);
    break;
   }
   do {
    if (($115 | 0) == ($118 | 0)) {
     $_pre_phi = $115 + 8 | 0;
    } else {
     if ($115 >>> 0 < $7 >>> 0) {
      _abort();
      return 0;
     }
     $139 = $115 + 8 | 0;
     if ((HEAP32[$139 >> 2] | 0) == ($6 | 0)) {
      $_pre_phi = $139;
      break;
     }
     _abort();
     return 0;
    }
   } while (0);
   HEAP32[$112 + 12 >> 2] = $115;
   HEAP32[$_pre_phi >> 2] = $112;
  } else {
   $144 = $5;
   $147 = HEAP32[$4 + ($3 + 24) >> 2] | 0;
   $150 = HEAP32[$4 + ($3 + 12) >> 2] | 0;
   do {
    if (($150 | 0) == ($144 | 0)) {
     $169 = $4 + ($3 + 20) | 0;
     $170 = HEAP32[$169 >> 2] | 0;
     if (($170 | 0) == 0) {
      $174 = $4 + ($3 + 16) | 0;
      $175 = HEAP32[$174 >> 2] | 0;
      if (($175 | 0) == 0) {
       $R_1 = 0;
       break;
      } else {
       $R_0 = $175;
       $RP_0 = $174;
      }
     } else {
      $R_0 = $170;
      $RP_0 = $169;
     }
     while (1) {
      $177 = $R_0 + 20 | 0;
      $178 = HEAP32[$177 >> 2] | 0;
      if (($178 | 0) != 0) {
       $R_0 = $178;
       $RP_0 = $177;
       continue;
      }
      $181 = $R_0 + 16 | 0;
      $182 = HEAP32[$181 >> 2] | 0;
      if (($182 | 0) == 0) {
       break;
      } else {
       $R_0 = $182;
       $RP_0 = $181;
      }
     }
     if ($RP_0 >>> 0 < $7 >>> 0) {
      _abort();
      return 0;
     } else {
      HEAP32[$RP_0 >> 2] = 0;
      $R_1 = $R_0;
      break;
     }
    } else {
     $155 = HEAP32[$4 + ($3 + 8) >> 2] | 0;
     if ($155 >>> 0 < $7 >>> 0) {
      _abort();
      return 0;
     }
     $159 = $155 + 12 | 0;
     if ((HEAP32[$159 >> 2] | 0) != ($144 | 0)) {
      _abort();
      return 0;
     }
     $163 = $150 + 8 | 0;
     if ((HEAP32[$163 >> 2] | 0) == ($144 | 0)) {
      HEAP32[$159 >> 2] = $150;
      HEAP32[$163 >> 2] = $155;
      $R_1 = $150;
      break;
     } else {
      _abort();
      return 0;
     }
    }
   } while (0);
   if (($147 | 0) == 0) {
    break;
   }
   $193 = $4 + ($3 + 28) | 0;
   $195 = 91008 + (HEAP32[$193 >> 2] << 2) | 0;
   do {
    if (($144 | 0) == (HEAP32[$195 >> 2] | 0)) {
     HEAP32[$195 >> 2] = $R_1;
     if (($R_1 | 0) != 0) {
      break;
     }
     HEAP32[22677] = HEAP32[22677] & ~(1 << HEAP32[$193 >> 2]);
     break L52;
    } else {
     if ($147 >>> 0 < (HEAP32[22680] | 0) >>> 0) {
      _abort();
      return 0;
     }
     $209 = $147 + 16 | 0;
     if ((HEAP32[$209 >> 2] | 0) == ($144 | 0)) {
      HEAP32[$209 >> 2] = $R_1;
     } else {
      HEAP32[$147 + 20 >> 2] = $R_1;
     }
     if (($R_1 | 0) == 0) {
      break L52;
     }
    }
   } while (0);
   if ($R_1 >>> 0 < (HEAP32[22680] | 0) >>> 0) {
    _abort();
    return 0;
   }
   HEAP32[$R_1 + 24 >> 2] = $147;
   $226 = HEAP32[$4 + ($3 + 16) >> 2] | 0;
   do {
    if (($226 | 0) != 0) {
     if ($226 >>> 0 < (HEAP32[22680] | 0) >>> 0) {
      _abort();
      return 0;
     } else {
      HEAP32[$R_1 + 16 >> 2] = $226;
      HEAP32[$226 + 24 >> 2] = $R_1;
      break;
     }
    }
   } while (0);
   $239 = HEAP32[$4 + ($3 + 20) >> 2] | 0;
   if (($239 | 0) == 0) {
    break;
   }
   if ($239 >>> 0 < (HEAP32[22680] | 0) >>> 0) {
    _abort();
    return 0;
   } else {
    HEAP32[$R_1 + 20 >> 2] = $239;
    HEAP32[$239 + 24 >> 2] = $R_1;
    break;
   }
  }
 } while (0);
 if ($106 >>> 0 < 16 >>> 0) {
  HEAP32[$1 >> 2] = $103 | HEAP32[$1 >> 2] & 1 | 2;
  $258 = $4 + ($103 | 4) | 0;
  HEAP32[$258 >> 2] = HEAP32[$258 >> 2] | 1;
  $newp_0 = $p;
  return $newp_0 | 0;
 } else {
  HEAP32[$1 >> 2] = HEAP32[$1 >> 2] & 1 | $nb | 2;
  HEAP32[$4 + ($nb + 4) >> 2] = $106 | 3;
  $272 = $4 + ($103 | 4) | 0;
  HEAP32[$272 >> 2] = HEAP32[$272 >> 2] | 1;
  _dispose_chunk($4 + $nb | 0, $106);
  $newp_0 = $p;
  return $newp_0 | 0;
 }
 return 0;
}
function __Z8DoSpect2P11PHONEME_TABiP10FMT_PARAMSP12PHONEME_LISTi($this_ph, $which, $fmt_params, $plist, $modulation) {
 $this_ph = $this_ph | 0;
 $which = $which | 0;
 $fmt_params = $fmt_params | 0;
 $plist = $plist | 0;
 $modulation = $modulation | 0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $n_frames = 0, $frames = 0, $frameix = 0, $frame1 = 0, $frame2 = 0, $fr = 0, $ix = 0, $q = 0, $len = 0, $length_factor = 0, $length_mod = 0, $length_sum = 0, $length_min = 0, $total_len = 0, $wcmd_spect = 0, $frame_lengths = 0, $88 = 0, $117 = 0, $275 = 0, $294 = 0, $451 = 0, $476 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $n_frames = sp | 0;
 $frame_lengths = sp + 8 | 0;
 $2 = $this_ph;
 $3 = $which;
 $4 = $fmt_params;
 $5 = $plist;
 $6 = $modulation;
 $total_len = 0;
 $wcmd_spect = 3;
 if ((HEAP32[$4 + 8 >> 2] | 0) == 0) {
  $1 = 0;
  $476 = $1;
  STACKTOP = sp;
  return $476 | 0;
 }
 $length_mod = HEAP32[$5 + 12 >> 2] | 0;
 if (($length_mod | 0) == 0) {
  $length_mod = 256;
 }
 $length_min = (HEAP32[9496] | 0) / 70 | 0;
 if (($3 | 0) == 2) {
  L10 : do {
   if ((HEAP32[(HEAP32[9112] | 0) + 96 >> 2] | 0) > 0) {
    do {
     if ((HEAPU8[$2 + 14 | 0] | 0) < (HEAP32[(HEAP32[9112] | 0) + 96 >> 2] | 0)) {
      if ((HEAP16[$5 >> 1] & 8 | 0) != 0) {
       break;
      }
      if ((HEAP32[$2 + 4 >> 2] & 2097152 | 0) == 0) {
       break L10;
      }
     }
    } while (0);
    $length_min = $length_min << 1;
   }
  } while (0);
 }
 if (($3 | 0) == 1) {
  do {
   if ((HEAPU8[$2 + 11 | 0] | 0) == 3) {
    label = 16;
   } else {
    if ((HEAPU8[$5 - 24 + 17 | 0] | 0) == 3) {
     label = 16;
     break;
    }
    if ((HEAPU8[$5 - 24 + 17 | 0] | 0) == 8) {
     label = 16;
    }
   }
  } while (0);
  if ((label | 0) == 16) {
   $88 = HEAP32[(HEAP32[9112] | 0) + 52 >> 2] | 0;
   $len = $88;
   if (($length_mod | 0) < ($88 | 0)) {
    $length_mod = $len;
   }
  }
 }
 HEAP32[31348] = 0;
 $frames = __Z11LookupSpectP11PHONEME_TABiP10FMT_PARAMSPiP12PHONEME_LIST($2, $3, $4, $n_frames, $5) | 0;
 if (($frames | 0) == 0) {
  $1 = 0;
  $476 = $1;
  STACKTOP = sp;
  return $476 | 0;
 }
 if ((HEAP32[$4 + 16 >> 2] | 0) != (HEAP32[28512] | 0)) {
  $q = 33456 + (HEAP32[8360] << 4) | 0;
  HEAP32[$q >> 2] = 14;
  $117 = HEAP32[$4 + 16 >> 2] | 0;
  HEAP32[28512] = $117;
  HEAP32[$q + 4 >> 2] = $117;
  __Z8WcmdqIncv();
 }
 $frame1 = HEAP32[$frames + 4 >> 2] | 0;
 if ((HEAP32[(HEAP32[144] | 0) + 132 >> 2] | 0) != 0) {
  $wcmd_spect = 1;
 }
 HEAP32[9044] = HEAP32[$4 + 28 >> 2];
 if ((HEAP32[$4 + 32 >> 2] | 0) == 0) {
  HEAP32[9050] = 32;
 } else {
  HEAP32[9050] = (HEAP32[$4 + 32 >> 2] << 5 | 0) / 100 | 0;
 }
 if ((HEAP32[9044] | 0) == 0) {
  if ((HEAP32[25654] | 0) != 0) {
   $wcmd_spect = 4;
   if ((HEAP32[(HEAP32[144] | 0) + 132 >> 2] | 0) != 0) {
    $wcmd_spect = 2;
   }
   HEAP32[25654] = 0;
  } else {
   $wcmd_spect = 3;
   if ((HEAP32[(HEAP32[144] | 0) + 132 >> 2] | 0) != 0) {
    $wcmd_spect = 1;
   }
  }
 }
 if ((HEAP32[31356] | 0) != 0) {
  if ((HEAPU8[(HEAP32[31356] | 0) + 16 | 0] | 0) < 2) {
   label = 41;
  } else {
   if ((HEAP16[HEAP32[31356] >> 1] & 2 | 0) != 0) {
    label = 41;
   }
  }
  do {
   if ((label | 0) == 41) {
    if ((HEAP16[HEAP32[31356] >> 1] & 16 | 0) != 0) {
     break;
    }
    HEAP32[33468 + (HEAP32[31354] << 4) >> 2] = $frame1;
    if ((HEAP16[HEAP32[31356] >> 1] & 8 | 0) != 0) {
     $fr = __ZL9CopyFrameP7frame_ti($frame1, 1) | 0;
     $ix = 3;
     while (1) {
      if (($ix | 0) >= 8) {
       break;
      }
      if (($ix | 0) < 7) {
       HEAP16[$fr + 2 + ($ix << 1) >> 1] = HEAP16[(HEAP32[31356] | 0) + 2 + ($ix << 1) >> 1] | 0;
      }
      HEAP8[$fr + 18 + $ix | 0] = HEAP8[(HEAP32[31356] | 0) + 18 + $ix | 0] | 0;
      $ix = $ix + 1 | 0;
     }
     HEAP32[33468 + (HEAP32[31354] << 4) >> 2] = $fr;
    }
   }
  } while (0);
 }
 do {
  if ((HEAPU8[$2 + 11 | 0] | 0) == 2) {
   if (($3 | 0) != 2) {
    break;
   }
   __ZL11SmoothSpectv();
   HEAP32[28442] = HEAP32[8360];
  }
 } while (0);
 $length_sum = 0;
 $frameix = 1;
 while (1) {
  if (($frameix | 0) >= (HEAP32[$n_frames >> 2] | 0)) {
   break;
  }
  $length_factor = $length_mod;
  if ((HEAP16[$frames + ($frameix - 1 << 3) + 2 >> 1] & 4 | 0) != 0) {
   $275 = Math_imul($length_mod, 256 - (HEAP32[9118] | 0) | 0) | 0;
   $length_factor = ($275 + (HEAP32[9118] << 8) | 0) / 256 | 0;
  } else {
   if ((HEAP16[$frames + ($frameix - 1 << 3) + 2 >> 1] & 16384 | 0) != 0) {
    $294 = Math_imul($length_mod, 256 - (HEAP32[9119] | 0) | 0) | 0;
    $length_factor = ($294 + (HEAP32[9119] << 8) | 0) / 256 | 0;
   }
  }
  $len = (Math_imul(HEAP16[$frames + ($frameix - 1 << 3) >> 1] | 0, HEAP32[9496] | 0) | 0) / 1e3 | 0;
  $len = (Math_imul($len, $length_factor) | 0) / 256 | 0;
  $length_sum = $length_sum + $len | 0;
  HEAP32[$frame_lengths + ($frameix << 2) >> 2] = $len;
  $frameix = $frameix + 1 | 0;
 }
 do {
  if (($length_sum | 0) > 0) {
   if (($length_sum | 0) >= ($length_min | 0)) {
    break;
   }
   $frameix = 1;
   while (1) {
    if (($frameix | 0) >= (HEAP32[$n_frames >> 2] | 0)) {
     break;
    }
    HEAP32[$frame_lengths + ($frameix << 2) >> 2] = (Math_imul(HEAP32[$frame_lengths + ($frameix << 2) >> 2] | 0, $length_min) | 0) / ($length_sum | 0) | 0;
    $frameix = $frameix + 1 | 0;
   }
  }
 } while (0);
 $frameix = 1;
 while (1) {
  if (($frameix | 0) >= (HEAP32[$n_frames >> 2] | 0)) {
   break;
  }
  $frame2 = HEAP32[$frames + ($frameix << 3) + 4 >> 2] | 0;
  do {
   if ((HEAP32[$4 + 28 >> 2] | 0) != 0) {
    if ((HEAP16[$frame1 >> 1] & 128 | 0) != 0) {
     break;
    }
    HEAP32[9472] = 0;
    __ZL9DoSample2iiiiii(HEAP32[$4 + 28 >> 2] | 0, $3 + 256 | 0, 0, HEAP32[$4 >> 2] | 0, 0, HEAP32[9050] | 0) | 0;
    HEAP32[25654] = 1;
    HEAP32[9044] = 0;
    HEAP32[$4 + 28 >> 2] = 0;
   }
  } while (0);
  if (($6 | 0) >= 0) {
   if ((HEAP16[$frame1 >> 1] & 64 | 0) != 0) {
    $6 = 6;
   }
   do {
    if (($frameix | 0) == ((HEAP32[$n_frames >> 2] | 0) - 1 | 0)) {
     if ((HEAP32[31348] & 3840 | 0) == 0) {
      break;
     }
     $6 = $6 | HEAP32[31348];
    }
   } while (0);
  }
  $len = HEAP32[$frame_lengths + ($frameix << 2) >> 2] | 0;
  HEAP32[28530] = (HEAP32[28530] | 0) + $len;
  HEAP32[32080] = (HEAP32[32080] | 0) + $len;
  if (($len | 0) == 0) {
   HEAP32[31356] = 0;
   $frame1 = $frame2;
  } else {
   HEAP32[31354] = HEAP32[8360];
   if (($6 | 0) >= 0) {
    $q = 33456 + (HEAP32[8360] << 4) | 0;
    HEAP32[$q >> 2] = $wcmd_spect;
    HEAP32[$q + 4 >> 2] = $len + ($6 << 16);
    HEAP32[$q + 8 >> 2] = $frame1;
    HEAP32[$q + 12 >> 2] = $frame2;
    __Z8WcmdqIncv();
   }
   $451 = $frame2;
   $frame1 = $451;
   HEAP32[31356] = $451;
   $total_len = $total_len + $len | 0;
  }
  $frameix = $frameix + 1 | 0;
 }
 do {
  if (($3 | 0) != 1) {
   if ((HEAP32[28512] | 0) == 0) {
    break;
   }
   $q = 33456 + (HEAP32[8360] << 4) | 0;
   HEAP32[$q >> 2] = 14;
   HEAP32[28512] = 0;
   HEAP32[$q + 4 >> 2] = 0;
   __Z8WcmdqIncv();
  }
 } while (0);
 $1 = $total_len;
 $476 = $1;
 STACKTOP = sp;
 return $476 | 0;
}
function __Z11CalcPitchesP10Translatori($tr, $clause_type) {
 $tr = $tr | 0;
 $clause_type = $clause_type | 0;
 var $1 = 0, $2 = 0, $p = 0, $syl = 0, $ix = 0, $x = 0, $st_ix = 0, $n_st = 0, $option = 0, $group_tone = 0, $group_tone_emph = 0, $group_tone_comma = 0, $ph_start = 0, $st_start = 0, $st_clause_end = 0, $count = 0, $n_primary = 0, $count_primary = 0, $ph = 0, $ph_end = 0, $40 = 0, $70 = 0, $192 = 0, $523 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 6e3 | 0;
 $1 = $tr;
 $2 = $clause_type;
 $ph_start = 0;
 $ph_end = HEAP32[19562] | 0;
 HEAP32[28524] = sp;
 $n_st = 0;
 $n_primary = 0;
 $ix = 0;
 while (1) {
  if (($ix | 0) >= ((HEAP32[19562] | 0) - 1 | 0)) {
   break;
  }
  $p = 44280 + ($ix * 24 | 0) | 0;
  if ((HEAP16[$p >> 1] & 4 | 0) != 0) {
   HEAP8[(HEAP32[28524] | 0) + ($n_st * 6 | 0) + 2 | 0] = 0;
   HEAP8[(HEAP32[28524] | 0) + ($n_st * 6 | 0) + 1 | 0] = 0;
   HEAP8[(HEAP32[28524] | 0) + ($n_st * 6 | 0) + 3 | 0] = HEAP8[44297 + (($ix + 1 | 0) * 24 | 0) | 0] | 0;
   $40 = $n_st;
   $n_st = $40 + 1 | 0;
   HEAP8[(HEAP32[28524] | 0) + ($40 * 6 | 0) | 0] = HEAP8[$p + 3 | 0] | 0;
   if ((HEAPU8[$p + 3 | 0] | 0) >= 4) {
    $n_primary = $n_primary + 1 | 0;
   }
  } else {
   do {
    if ((HEAPU8[(HEAP32[$p + 8 >> 2] | 0) + 10 | 0] | 0) == 27) {
     if (($n_st | 0) <= 0) {
      break;
     }
     $70 = (HEAP32[28524] | 0) + (($n_st - 1 | 0) * 6 | 0) + 2 | 0;
     HEAP8[$70] = HEAP8[$70] | 4;
    }
   } while (0);
  }
  $ix = $ix + 1 | 0;
 }
 HEAP8[(HEAP32[28524] | 0) + ($n_st * 6 | 0) | 0] = 0;
 if (($n_st | 0) == 0) {
  STACKTOP = sp;
  return;
 }
 if ((HEAP32[$1 + 244 >> 2] | 0) == 1) {
  __ZL16CalcPitches_ToneP10Translatori($1, $2);
  STACKTOP = sp;
  return;
 }
 $option = HEAP32[$1 + 248 >> 2] | 0;
 if (($option | 0) >= 8) {
  $option = 1;
 }
 if (($option | 0) == 0) {
  $group_tone = HEAPU8[$1 + 252 + $2 | 0] | 0;
  $group_tone_emph = HEAPU8[$1 + 257 | 0] | 0;
  $group_tone_comma = HEAPU8[$1 + 253 | 0] | 0;
 } else {
  $group_tone = HEAPU8[$1 + 756 + ($option * 6 | 0) + $2 | 0] | 0;
  $group_tone_emph = HEAPU8[$1 + 756 + ($option * 6 | 0) + 5 | 0] | 0;
  $group_tone_comma = HEAPU8[$1 + 756 + ($option * 6 | 0) + 1 | 0] | 0;
 }
 if (($2 | 0) == 4) {
  HEAP32[26726] = 1;
 } else {
  HEAP32[26726] = 0;
 }
 $st_start = 0;
 $count_primary = 0;
 $st_ix = 0;
 while (1) {
  if (($st_ix | 0) >= ($n_st | 0)) {
   break;
  }
  $syl = (HEAP32[28524] | 0) + ($st_ix * 6 | 0) | 0;
  if ((HEAP8[$syl | 0] | 0) >= 4) {
   $count_primary = $count_primary + 1 | 0;
  }
  if ((HEAP8[$syl | 0] | 0) == 6) {
   $ix = $st_ix - 1 | 0;
   while (1) {
    if (($ix | 0) >= ($st_start | 0)) {
     $192 = ($ix | 0) >= ($st_ix - 3 | 0);
    } else {
     $192 = 0;
    }
    if (!$192) {
     break;
    }
    if ((HEAP8[(HEAP32[28524] | 0) + ($ix * 6 | 0) | 0] | 0) == 6) {
     label = 35;
     break;
    }
    if ((HEAP8[(HEAP32[28524] | 0) + ($ix * 6 | 0) | 0] | 0) == 4) {
     label = 37;
     break;
    }
    $ix = $ix - 1 | 0;
   }
   if ((label | 0) == 35) {
    label = 0;
   } else if ((label | 0) == 37) {
    label = 0;
    HEAP8[(HEAP32[28524] | 0) + ($ix * 6 | 0) | 0] = 3;
   }
   $ix = $st_ix + 1 | 0;
   while (1) {
    if (($ix | 0) >= ($n_st | 0)) {
     break;
    }
    if ((HEAP8[(HEAP32[28524] | 0) + ($ix * 6 | 0) | 0] | 0) == 4) {
     label = 43;
     break;
    }
    if ((HEAP8[(HEAP32[28524] | 0) + ($ix * 6 | 0) | 0] | 0) == 6) {
     label = 45;
     break;
    }
    $ix = $ix + 1 | 0;
   }
   if ((label | 0) == 43) {
    label = 0;
   } else if ((label | 0) == 45) {
    label = 0;
    HEAP8[(HEAP32[28524] | 0) + ($st_ix * 6 | 0) + 2 | 0] = 2;
    HEAP8[$syl | 0] = 5;
   }
  }
  if ((HEAP8[$syl | 0] | 0) == 6) {
   HEAP8[(HEAP32[28524] | 0) + ($st_ix * 6 | 0) + 2 | 0] = 2;
   $count = 0;
   if (($n_primary - $count_primary | 0) > 1) {
    $count = 1;
   }
   $ix = $st_ix + 1 | 0;
   while (1) {
    if (($ix | 0) >= ($n_st | 0)) {
     break;
    }
    if ((HEAP8[(HEAP32[28524] | 0) + ($ix * 6 | 0) | 0] | 0) > 4) {
     label = 55;
     break;
    }
    if ((HEAP8[(HEAP32[28524] | 0) + ($ix * 6 | 0) | 0] | 0) == 4) {
     $count = $count + 1 | 0;
     if (($count | 0) > 1) {
      label = 58;
      break;
     }
    }
    $ix = $ix + 1 | 0;
   }
   if ((label | 0) == 55) {
    label = 0;
   } else if ((label | 0) == 58) {
    label = 0;
   }
   __ZL18count_pitch_vowelsiii($st_start, $ix, $n_st);
   do {
    if (($ix | 0) < ($n_st | 0)) {
     label = 64;
    } else {
     if (($2 | 0) == 0) {
      label = 64;
      break;
     }
     __ZL12calc_pitchesiiii($option, $st_start, $ix, $group_tone) | 0;
    }
   } while (0);
   if ((label | 0) == 64) {
    label = 0;
    __ZL12calc_pitchesiiii($option, $st_start, $ix, $group_tone) | 0;
    do {
     if (($2 | 0) == 1) {
      label = 66;
     } else {
      if (($2 | 0) == 2) {
       label = 66;
       break;
      }
      $group_tone = HEAPU8[$1 + 252 | 0] | 0;
     }
    } while (0);
    if ((label | 0) == 66) {
     label = 0;
     $group_tone = HEAPU8[$1 + 253 | 0] | 0;
    }
   }
   $st_start = $ix;
  }
  do {
   if (($st_start | 0) < ($st_ix | 0)) {
    if ((HEAP8[$syl + 2 | 0] & 4 | 0) == 0) {
     break;
    }
    $st_clause_end = $st_ix + 1 | 0;
    __ZL18count_pitch_vowelsiii($st_start, $st_clause_end, $st_clause_end);
    __ZL12calc_pitchesiiii($option, $st_start, $st_clause_end, $group_tone_comma) | 0;
    $st_start = $st_clause_end;
   }
  } while (0);
  $st_ix = $st_ix + 1 | 0;
 }
 if (($st_start | 0) < ($st_ix | 0)) {
  __ZL18count_pitch_vowelsiii($st_start, $st_ix, $n_st);
  __ZL12calc_pitchesiiii($option, $st_start, $st_ix, $group_tone) | 0;
 }
 $st_ix = 0;
 $ix = $ph_start;
 while (1) {
  if (($ix | 0) >= ($ph_end | 0)) {
   break;
  }
  $p = 44280 + ($ix * 24 | 0) | 0;
  HEAP8[$p + 3 | 0] = HEAP8[(HEAP32[28524] | 0) + ($st_ix * 6 | 0) | 0] | 0;
  if ((HEAP16[$p >> 1] & 4 | 0) != 0) {
   $syl = (HEAP32[28524] | 0) + ($st_ix * 6 | 0) | 0;
   HEAP8[$p + 22 | 0] = HEAP8[$syl + 4 | 0] | 0;
   HEAP8[$p + 23 | 0] = HEAP8[$syl + 5 | 0] | 0;
   HEAP8[$p + 16 | 0] = 0;
   if ((HEAP8[$syl + 2 | 0] & 1 | 0) != 0) {
    HEAP8[$p + 16 | 0] = 2;
   } else {
    if ((HEAPU8[$p + 3 | 0] | 0) > 5) {
     HEAP8[$p + 16 | 0] = HEAP8[$syl + 1 | 0] | 0;
    }
   }
   if ((HEAPU8[$p + 22 | 0] | 0) > (HEAPU8[$p + 23 | 0] | 0)) {
    $x = HEAPU8[$p + 22 | 0] | 0;
    HEAP8[$p + 22 | 0] = HEAP8[$p + 23 | 0] | 0;
    HEAP8[$p + 23 | 0] = $x;
   }
   if ((HEAP8[$p + 7 | 0] | 0) != 0) {
    $ph = HEAP32[43256 + (HEAPU8[$p + 7 | 0] << 2) >> 2] | 0;
    $x = ((HEAPU8[$p + 22 | 0] | 0) + (HEAPU8[$p + 23 | 0] | 0) | 0) / 2 | 0;
    HEAP8[$p + 23 | 0] = $x + (HEAPU8[$ph + 13 | 0] | 0);
    HEAP8[$p + 22 | 0] = $x + (HEAPU8[$ph + 12 | 0] | 0);
   }
   if ((HEAP8[$syl + 2 | 0] & 2 | 0) != 0) {
    $523 = $p + 3 | 0;
    HEAP8[$523] = HEAPU8[$523] | 8;
   }
   $st_ix = $st_ix + 1 | 0;
  }
  $ix = $ix + 1 | 0;
 }
 STACKTOP = sp;
 return;
}
function __Z11SelectVoiceP12espeak_VOICEPi($voice_select, $found) {
 $voice_select = $voice_select | 0;
 $found = $found | 0;
 var $1 = 0, $3 = 0, $nv = 0, $ix = 0, $ix2 = 0, $j = 0, $n_variants = 0, $variant_number = 0, $gender = 0, $skip = 0, $aged = 0, $variant_name = 0, $p = 0, $p_start = 0, $vp = 0, $vp2 = 0, $voice_select2 = 0, $voices = 0, $voices2 = 0, $5 = 0, $7 = 0, $29 = 0, $87 = 0, $124 = 0, $167 = 0, $182 = 0, $186 = 0, $191 = 0, $195 = 0, $197 = 0, $203 = 0, $219 = 0, $222 = 0, $228 = 0, $230 = 0, $234 = 0, $236 = 0, $242 = 0, $278 = 0, label = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 2072 | 0;
 $voice_select2 = sp | 0;
 $voices = sp + 24 | 0;
 $voices2 = sp + 1024 | 0;
 $3 = $found;
 $aged = 1;
 $vp = 0;
 HEAP32[$3 >> 2] = 1;
 $5 = $voice_select2;
 $7 = $voice_select;
 HEAP32[$5 >> 2] = HEAP32[$7 >> 2];
 HEAP32[$5 + 4 >> 2] = HEAP32[$7 + 4 >> 2];
 HEAP32[$5 + 8 >> 2] = HEAP32[$7 + 8 >> 2];
 HEAP32[$5 + 12 >> 2] = HEAP32[$7 + 12 >> 2];
 HEAP32[$5 + 16 >> 2] = HEAP32[$7 + 16 >> 2];
 HEAP32[$5 + 20 >> 2] = HEAP32[$7 + 20 >> 2];
 if ((HEAP32[28506] | 0) == 0) {
  _espeak_ListVoices(0) | 0;
 }
 if ((HEAP32[$voice_select2 + 4 >> 2] | 0) == 0) {
  label = 5;
 } else {
  if ((HEAP8[HEAP32[$voice_select2 + 4 >> 2] | 0] | 0) == 0) {
   label = 5;
  }
 }
 if ((label | 0) == 5) {
  if ((HEAP32[$voice_select2 >> 2] | 0) == 0) {
   $29 = HEAP32[$voice_select2 + 8 >> 2] | 0;
   HEAP32[$voice_select2 >> 2] = $29;
   if (($29 | 0) == 0) {
    HEAP32[$voice_select2 >> 2] = 9224;
   }
  }
  __Z8strncpy0PcPKci(104512, HEAP32[$voice_select2 >> 2] | 0, 60);
  $variant_name = __ZL23ExtractVoiceVariantNamePcii(104512, 0, 0) | 0;
  $vp = __Z17SelectVoiceByNamePP12espeak_VOICEPKc(114376, 104512) | 0;
  if (($vp | 0) != 0) {
   HEAP32[$voice_select2 + 4 >> 2] = (HEAP32[$vp + 4 >> 2] | 0) + 1;
   do {
    if ((HEAPU8[$voice_select2 + 12 | 0] | 0) == 0) {
     if ((HEAPU8[$voice_select2 + 13 | 0] | 0) != 0) {
      break;
     }
     if ((HEAPU8[$voice_select2 + 14 | 0] | 0) != 0) {
      break;
     }
     if ((HEAP8[$variant_name | 0] | 0) != 0) {
      _sprintf(104456, 10896, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = HEAP32[$vp + 8 >> 2], HEAP32[tempVarArgs + 8 >> 2] = $variant_name, tempVarArgs) | 0) | 0;
      STACKTOP = tempVarArgs;
      $1 = 104456;
      $278 = $1;
      STACKTOP = sp;
      return $278 | 0;
     } else {
      $1 = HEAP32[$vp + 8 >> 2] | 0;
      $278 = $1;
      STACKTOP = sp;
      return $278 | 0;
     }
    }
   } while (0);
  }
 }
 $nv = __ZL14SetVoiceScoresP12espeak_VOICEPS0_i($voice_select2, $voices | 0, 0) | 0;
 if (($nv | 0) == 0) {
  HEAP32[$3 >> 2] = 0;
  $87 = __Z17SelectVoiceByNamePP12espeak_VOICEPKc(114376, 9224) | 0;
  HEAP32[$voices >> 2] = $87;
  if (($87 | 0) != 0) {
   $nv = 1;
  }
 }
 $gender = 0;
 do {
  if ((HEAPU8[$voice_select2 + 12 | 0] | 0) == 2) {
   label = 25;
  } else {
   if ((HEAPU8[$voice_select2 + 13 | 0] | 0) > 0) {
    if ((HEAPU8[$voice_select2 + 13 | 0] | 0) < 13) {
     label = 25;
     break;
    }
   }
   if ((HEAPU8[$voice_select2 + 12 | 0] | 0) == 1) {
    $gender = 1;
   }
  }
 } while (0);
 if ((label | 0) == 25) {
  $gender = 2;
 }
 if ((HEAPU8[$voice_select2 + 13 | 0] | 0) < 60) {
  $aged = 0;
 }
 $124 = HEAP32[600 + ($gender << 2) >> 2] | 0;
 $p_start = $124;
 $p = $124;
 if (($aged | 0) == 0) {
  $p = $p + 1 | 0;
 }
 $n_variants = 0;
 $ix = 0;
 $ix2 = 0;
 while (1) {
  if (($ix | 0) >= ($nv | 0)) {
   break;
  }
  $vp = HEAP32[$voices + ($ix << 2) >> 2] | 0;
  $skip = 0;
  do {
   if (($gender | 0) != 0) {
    if ((HEAPU8[$vp + 12 | 0] | 0) == ($gender | 0)) {
     break;
    }
    $skip = 1;
   }
  } while (0);
  do {
   if (($ix2 | 0) == 0) {
    if (($aged | 0) == 0) {
     break;
    }
    if ((HEAPU8[$vp + 13 | 0] | 0) >= 60) {
     break;
    }
    $skip = 1;
   }
  } while (0);
  if (($skip | 0) == 0) {
   $167 = $ix2;
   $ix2 = $167 + 1 | 0;
   HEAP32[$voices2 + ($167 << 2) >> 2] = $vp;
  }
  $j = 0;
  while (1) {
   if (($j | 0) < (HEAPU8[$vp + 15 | 0] | 0)) {
    $182 = ($n_variants | 0) < 12;
   } else {
    $182 = 0;
   }
   if (!$182) {
    break;
   }
   $186 = HEAP8[$p] | 0;
   $variant_number = $186;
   if (($186 | 0) == 0) {
    $p = $p_start;
    continue;
   } else {
    $191 = $n_variants;
    $n_variants = $191 + 1 | 0;
    $vp2 = 104576 + ($191 * 24 | 0) | 0;
    $195 = $vp2;
    $197 = $vp;
    HEAP32[$195 >> 2] = HEAP32[$197 >> 2];
    HEAP32[$195 + 4 >> 2] = HEAP32[$197 + 4 >> 2];
    HEAP32[$195 + 8 >> 2] = HEAP32[$197 + 8 >> 2];
    HEAP32[$195 + 12 >> 2] = HEAP32[$197 + 12 >> 2];
    HEAP32[$195 + 16 >> 2] = HEAP32[$197 + 16 >> 2];
    HEAP32[$195 + 20 >> 2] = HEAP32[$197 + 20 >> 2];
    HEAP8[$vp2 + 14 | 0] = $variant_number;
    $203 = $ix2;
    $ix2 = $203 + 1 | 0;
    HEAP32[$voices2 + ($203 << 2) >> 2] = $vp2;
    $p = $p + 1 | 0;
    $j = $j + 1 | 0;
    continue;
   }
  }
  $ix = $ix + 1 | 0;
 }
 while (1) {
  do {
   if (($vp | 0) != 0) {
    $219 = $p;
    $p = $219 + 1 | 0;
    $222 = HEAP8[$219] | 0;
    $variant_number = $222;
    if (($222 | 0) == 0) {
     $228 = 0;
     break;
    }
    $228 = ($n_variants | 0) < 12;
   } else {
    $228 = 0;
   }
  } while (0);
  if (!$228) {
   break;
  }
  $230 = $n_variants;
  $n_variants = $230 + 1 | 0;
  $vp2 = 104576 + ($230 * 24 | 0) | 0;
  $234 = $vp2;
  $236 = $vp;
  HEAP32[$234 >> 2] = HEAP32[$236 >> 2];
  HEAP32[$234 + 4 >> 2] = HEAP32[$236 + 4 >> 2];
  HEAP32[$234 + 8 >> 2] = HEAP32[$236 + 8 >> 2];
  HEAP32[$234 + 12 >> 2] = HEAP32[$236 + 12 >> 2];
  HEAP32[$234 + 16 >> 2] = HEAP32[$236 + 16 >> 2];
  HEAP32[$234 + 20 >> 2] = HEAP32[$236 + 20 >> 2];
  HEAP8[$vp2 + 14 | 0] = $variant_number;
  $242 = $ix2;
  $ix2 = $242 + 1 | 0;
  HEAP32[$voices2 + ($242 << 2) >> 2] = $vp2;
 }
 if (($ix2 | 0) == 0) {
  $1 = 0;
  $278 = $1;
  STACKTOP = sp;
  return $278 | 0;
 }
 $vp = HEAP32[$voices2 + (((HEAPU8[$voice_select2 + 14 | 0] | 0) % ($ix2 | 0) | 0) << 2) >> 2] | 0;
 if ((HEAPU8[$vp + 14 | 0] | 0) != 0) {
  $variant_name = __ZL23ExtractVoiceVariantNamePcii(0, HEAPU8[$vp + 14 | 0] | 0, 0) | 0;
  _sprintf(104456, 10896, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = HEAP32[$vp + 8 >> 2], HEAP32[tempVarArgs + 8 >> 2] = $variant_name, tempVarArgs) | 0) | 0;
  STACKTOP = tempVarArgs;
  $1 = 104456;
  $278 = $1;
  STACKTOP = sp;
  return $278 | 0;
 } else {
  $1 = HEAP32[$vp + 8 >> 2] | 0;
  $278 = $1;
  STACKTOP = sp;
  return $278 | 0;
 }
 return 0;
}
function __ZL12start_mbrolaPKc($voice_path) {
 $voice_path = $voice_path | 0;
 var $1 = 0, $2 = 0, $error = 0, $p_stdin = 0, $p_stdout = 0, $p_stderr = 0, $written = 0, $charbuf = 0, $i = 0, $25 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $79 = 0, $88 = 0, $100 = 0, $105 = 0, $110 = 0, $115 = 0, $126 = 0, $144 = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $p_stdin = sp | 0;
 $p_stdout = sp + 8 | 0;
 $p_stderr = sp + 16 | 0;
 $charbuf = sp + 24 | 0;
 $2 = $voice_path;
 if ((HEAP32[26688] | 0) != 0) {
  __ZL3errPKcz(15560, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 7 & -8, HEAP32[tempVarArgs >> 2] = 0, tempVarArgs) | 0);
  STACKTOP = tempVarArgs;
  $1 = -1;
  $144 = $1;
  STACKTOP = sp;
  return $144 | 0;
 }
 $error = __ZL12create_pipesPiS_S_($p_stdin | 0, $p_stdout | 0, $p_stderr | 0) | 0;
 if (($error | 0) != 0) {
  $1 = -1;
  $144 = $1;
  STACKTOP = sp;
  return $144 | 0;
 }
 HEAP32[26928] = _fork() | 0;
 if ((HEAP32[26928] | 0) == -1) {
  $error = HEAP32[(___errno_location() | 0) >> 2] | 0;
  __ZL11close_pipesPiS_S_($p_stdin | 0, $p_stdout | 0, $p_stderr | 0);
  $25 = _strerror($error | 0) | 0;
  __ZL3errPKcz(15456, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $25, tempVarArgs) | 0);
  STACKTOP = tempVarArgs;
  $1 = -1;
  $144 = $1;
  STACKTOP = sp;
  return $144 | 0;
 }
 if ((HEAP32[26928] | 0) != 0) {
  _snprintf($charbuf | 0, 20, 14288, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = HEAP32[26928], tempVarArgs) | 0) | 0;
  STACKTOP = tempVarArgs;
  $88 = _open($charbuf | 0, 0, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 7 & -8, HEAP32[tempVarArgs >> 2] = 0, tempVarArgs) | 0) | 0;
  STACKTOP = tempVarArgs;
  HEAP32[28510] = $88;
  if ((HEAP32[28510] | 0) == -1) {
   $error = HEAP32[(___errno_location() | 0) >> 2] | 0;
   __ZL11close_pipesPiS_S_($p_stdin | 0, $p_stdout | 0, $p_stderr | 0);
   _wait(HEAP32[26928] | 0, 0, 0) | 0;
   HEAP32[26928] = 0;
   $100 = _strerror($error | 0) | 0;
   __ZL3errPKcz(14144, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $100, tempVarArgs) | 0);
   STACKTOP = tempVarArgs;
   $1 = -1;
   $144 = $1;
   STACKTOP = sp;
   return $144 | 0;
  }
  _signal(13, 1) | 0;
  $105 = _fcntl(HEAP32[$p_stdin + 4 >> 2] | 0, 4, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = 2048, tempVarArgs) | 0) | 0;
  STACKTOP = tempVarArgs;
  do {
   if (($105 | 0) != -1) {
    $110 = _fcntl(HEAP32[$p_stdout >> 2] | 0, 4, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = 2048, tempVarArgs) | 0) | 0;
    STACKTOP = tempVarArgs;
    if (($110 | 0) == -1) {
     break;
    }
    $115 = _fcntl(HEAP32[$p_stderr >> 2] | 0, 4, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = 2048, tempVarArgs) | 0) | 0;
    STACKTOP = tempVarArgs;
    if (($115 | 0) == -1) {
     break;
    }
    HEAP32[31352] = HEAP32[$p_stdin + 4 >> 2];
    HEAP32[28582] = HEAP32[$p_stdout >> 2];
    HEAP32[28580] = HEAP32[$p_stderr >> 2];
    _close(HEAP32[$p_stdin >> 2] | 0) | 0;
    _close(HEAP32[$p_stdout + 4 >> 2] | 0) | 0;
    _close(HEAP32[$p_stderr + 4 >> 2] | 0) | 0;
    HEAP32[26688] = 1;
    $1 = 0;
    $144 = $1;
    STACKTOP = sp;
    return $144 | 0;
   }
  } while (0);
  $error = HEAP32[(___errno_location() | 0) >> 2] | 0;
  __ZL11close_pipesPiS_S_($p_stdin | 0, $p_stdout | 0, $p_stderr | 0);
  _wait(HEAP32[26928] | 0, 0, 0) | 0;
  HEAP32[26928] = 0;
  $126 = _strerror($error | 0) | 0;
  __ZL3errPKcz(13984, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $126, tempVarArgs) | 0);
  STACKTOP = tempVarArgs;
  $1 = -1;
  $144 = $1;
  STACKTOP = sp;
  return $144 | 0;
 }
 if ((_dup2(HEAP32[$p_stdin >> 2] | 0, 0) | 0) == -1) {
  $45 = ___errno_location() | 0;
  $46 = HEAP32[$45 >> 2] | 0;
  $47 = _strerror($46 | 0) | 0;
  $48 = _snprintf(114160, 160, 15304, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $47, tempVarArgs) | 0) | 0;
  STACKTOP = tempVarArgs;
  $49 = $p_stderr + 4 | 0;
  $50 = HEAP32[$49 >> 2] | 0;
  $51 = _strlen(114160) | 0;
  $52 = _write($50 | 0, 114160, $51 | 0) | 0;
  $written = $52;
  __exit(1);
  return 0;
 }
 if ((_dup2(HEAP32[$p_stdout + 4 >> 2] | 0, 1) | 0) == -1) {
  $45 = ___errno_location() | 0;
  $46 = HEAP32[$45 >> 2] | 0;
  $47 = _strerror($46 | 0) | 0;
  $48 = _snprintf(114160, 160, 15304, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $47, tempVarArgs) | 0) | 0;
  STACKTOP = tempVarArgs;
  $49 = $p_stderr + 4 | 0;
  $50 = HEAP32[$49 >> 2] | 0;
  $51 = _strlen(114160) | 0;
  $52 = _write($50 | 0, 114160, $51 | 0) | 0;
  $written = $52;
  __exit(1);
  return 0;
 }
 if ((_dup2(HEAP32[$p_stderr + 4 >> 2] | 0, 2) | 0) == -1) {
  $45 = ___errno_location() | 0;
  $46 = HEAP32[$45 >> 2] | 0;
  $47 = _strerror($46 | 0) | 0;
  $48 = _snprintf(114160, 160, 15304, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $47, tempVarArgs) | 0) | 0;
  STACKTOP = tempVarArgs;
  $49 = $p_stderr + 4 | 0;
  $50 = HEAP32[$49 >> 2] | 0;
  $51 = _strlen(114160) | 0;
  $52 = _write($50 | 0, 114160, $51 | 0) | 0;
  $written = $52;
  __exit(1);
  return 0;
 }
 $i = HEAP32[$p_stderr + 4 >> 2] | 0;
 while (1) {
  if (($i | 0) <= 2) {
   break;
  }
  _close($i | 0) | 0;
  $i = $i - 1 | 0;
 }
 _signal(1, 1) | 0;
 _signal(2, 1) | 0;
 _signal(3, 1) | 0;
 _signal(15, 1) | 0;
 _snprintf($charbuf | 0, 20, 15192, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAPF64[tempVarArgs >> 3] = +HEAPF32[7922], tempVarArgs) | 0) | 0;
 STACKTOP = tempVarArgs;
 _execl(15056, 15056, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 56 | 0, HEAP32[tempVarArgs >> 2] = 14952, HEAP32[tempVarArgs + 8 >> 2] = 14848, HEAP32[tempVarArgs + 16 >> 2] = $charbuf, HEAP32[tempVarArgs + 24 >> 2] = $2, HEAP32[tempVarArgs + 32 >> 2] = 14768, HEAP32[tempVarArgs + 40 >> 2] = 14680, HEAP32[tempVarArgs + 48 >> 2] = 0, tempVarArgs) | 0) | 0;
 STACKTOP = tempVarArgs;
 $79 = _strerror(HEAP32[(___errno_location() | 0) >> 2] | 0) | 0;
 _snprintf(114160, 160, 14528, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $79, tempVarArgs) | 0) | 0;
 STACKTOP = tempVarArgs;
 $written = _write(2, 114160, _strlen(114160) | 0) | 0;
 __exit(1);
 return 0;
}
function __ZL12compile_rulePc($input) {
 $input = $input | 0;
 var $1 = 0, $2 = 0, $ix = 0, $c = 0, $wc = 0, $p = 0, $prule = 0, $len = 0, $len_name = 0, $start = 0, $state = 0, $finish = 0, $buf = 0, $output = 0, $bad_phoneme = 0, $bad_phoneme_str = 0, $16 = 0, $53 = 0, $58 = 0, $97 = 0, $181 = 0, $186 = 0, $209 = 0, $222 = 0, $242 = 0, $252 = 0, label = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 264 | 0;
 $wc = sp | 0;
 $state = sp + 8 | 0;
 $buf = sp + 16 | 0;
 $output = sp + 96 | 0;
 $bad_phoneme = sp + 248 | 0;
 $bad_phoneme_str = sp + 256 | 0;
 $2 = $input;
 HEAP32[$state >> 2] = 2;
 $finish = 0;
 HEAP8[$buf | 0] = 0;
 HEAP8[106664] = 0;
 HEAP8[106792] = 0;
 HEAP8[106584] = 0;
 HEAP8[125272] = 0;
 HEAP8[113888] = 0;
 $p = $buf | 0;
 $ix = 0;
 while (1) {
  if (($finish | 0) != 0) {
   break;
  }
  $c = HEAP8[$2 + $ix | 0] | 0;
  $16 = HEAP8[$2 + $ix | 0] | 0;
  $c = $16;
  switch ($16 & 255 | 0) {
  case 41:
   {
    HEAP8[$p] = 0;
    HEAP32[$state >> 2] = 1;
    __ZL16copy_rule_stringPcPi($buf | 0, $state);
    $p = $buf | 0;
    break;
   }
  case 40:
   {
    HEAP8[$p] = 0;
    HEAP32[$state >> 2] = 2;
    __ZL16copy_rule_stringPcPi($buf | 0, $state);
    HEAP32[$state >> 2] = 3;
    $p = $buf | 0;
    if ((HEAP8[$2 + ($ix + 1) | 0] | 0) == 32) {
     _fprintf(HEAP32[28344] | 0, 18400, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = HEAP32[26930], tempVarArgs) | 0) | 0;
     STACKTOP = tempVarArgs;
     HEAP32[30922] = (HEAP32[30922] | 0) + 1;
    }
    break;
   }
  case 10:
  case 13:
  case 0:
   {
    HEAP8[$p] = 0;
    __ZL16copy_rule_stringPcPi($buf | 0, $state);
    $finish = 1;
    break;
   }
  case 9:
  case 32:
   {
    HEAP8[$p] = 0;
    __ZL16copy_rule_stringPcPi($buf | 0, $state);
    $p = $buf | 0;
    break;
   }
  case 63:
   {
    if ((HEAP32[$state >> 2] | 0) == 2) {
     HEAP32[$state >> 2] = 0;
    } else {
     $53 = $p;
     $p = $53 + 1 | 0;
     HEAP8[$53] = $c;
    }
    break;
   }
  default:
   {
    $58 = $p;
    $p = $58 + 1 | 0;
    HEAP8[$58] = $c;
   }
  }
  $ix = $ix + 1 | 0;
 }
 if ((_strcmp(125272, 18352) | 0) == 0) {
  _strcpy(125272, 128264) | 0;
 }
 if ((HEAP8[125272] | 0) == 0) {
  if ((HEAP8[106584] | 0) != 0) {
   _fprintf(HEAP32[28344] | 0, 18296, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = HEAP32[26930], tempVarArgs) | 0) | 0;
   STACKTOP = tempVarArgs;
   HEAP32[30922] = (HEAP32[30922] | 0) + 1;
  }
  $1 = 0;
  $252 = $1;
  STACKTOP = sp;
  return $252 | 0;
 }
 __Z14EncodePhonemesPKcPcPi(113888, $buf | 0, $bad_phoneme) | 0;
 if ((HEAP32[$bad_phoneme >> 2] | 0) != 0) {
  HEAP8[$bad_phoneme_str + (__Z8utf8_outjPc(HEAP32[$bad_phoneme >> 2] | 0, $bad_phoneme_str | 0) | 0) | 0] = 0;
  $97 = HEAP32[$bad_phoneme >> 2] | 0;
  _fprintf(HEAP32[28344] | 0, 18232, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 32 | 0, HEAP32[tempVarArgs >> 2] = HEAP32[26930], HEAP32[tempVarArgs + 8 >> 2] = $bad_phoneme_str, HEAP32[tempVarArgs + 16 >> 2] = $97, HEAP32[tempVarArgs + 24 >> 2] = $2, tempVarArgs) | 0) | 0;
  STACKTOP = tempVarArgs;
  HEAP32[30922] = (HEAP32[30922] | 0) + 1;
 }
 _strcpy($output | 0, $buf | 0) | 0;
 $len = (_strlen($buf | 0) | 0) + 1 | 0;
 $len_name = _strlen(128264) | 0;
 do {
  if (($len_name | 0) > 0) {
   if ((_memcmp(125272, 128264, $len_name | 0) | 0) == 0) {
    break;
   }
   __Z7utf8_inPiPKc($wc, 125272) | 0;
   do {
    if ((HEAP8[128264] | 0) == 57) {
     if ((__Z7IsDigitj(HEAP32[$wc >> 2] | 0) | 0) == 0) {
      label = 30;
      break;
     }
    } else {
     label = 30;
    }
   } while (0);
   if ((label | 0) == 30) {
    _fprintf(HEAP32[28344] | 0, 18152, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 24 | 0, HEAP32[tempVarArgs >> 2] = HEAP32[26930], HEAP32[tempVarArgs + 8 >> 2] = 125272, HEAP32[tempVarArgs + 16 >> 2] = 128264, tempVarArgs) | 0) | 0;
    STACKTOP = tempVarArgs;
    HEAP32[30922] = (HEAP32[30922] | 0) + 1;
   }
  }
 } while (0);
 _strcpy($output + $len | 0, 125272) | 0;
 $len = $len + (_strlen(125272) | 0) | 0;
 if ((HEAP32[32070] | 0) != 0) {
  HEAP8[$output + $len | 0] = 9;
  HEAP8[$output + ($len + 1) | 0] = ((HEAP32[26930] | 0) % 255 | 0) + 1;
  HEAP8[$output + ($len + 2) | 0] = ((HEAP32[26930] | 0) / 255 | 0) + 1;
  $len = $len + 3 | 0;
 }
 if ((HEAP8[106664] | 0) != 0) {
  $ix = -1;
  if ((HEAP8[106664] | 0) == 33) {
   $ix = (_atoi(106665) | 0) + 32 | 0;
  } else {
   $ix = _atoi(106664) | 0;
  }
  do {
   if (($ix | 0) > 0) {
    if (($ix | 0) >= 255) {
     label = 41;
     break;
    }
    $181 = $len;
    $len = $181 + 1 | 0;
    HEAP8[$output + $181 | 0] = 5;
    $186 = $len;
    $len = $186 + 1 | 0;
    HEAP8[$output + $186 | 0] = $ix;
   } else {
    label = 41;
   }
  } while (0);
  if ((label | 0) == 41) {
   _fprintf(HEAP32[28344] | 0, 18088, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = HEAP32[26930], HEAP32[tempVarArgs + 8 >> 2] = $ix, tempVarArgs) | 0) | 0;
   STACKTOP = tempVarArgs;
   HEAP32[30922] = (HEAP32[30922] | 0) + 1;
  }
 }
 if ((HEAP8[106792] | 0) != 0) {
  $start = 0;
  if ((HEAP8[106792] | 0) == 32) {
   $c = 8;
   $start = 1;
  } else {
   $c = 1;
  }
  $209 = $len;
  $len = $209 + 1 | 0;
  HEAP8[$output + $209 | 0] = $c;
  $ix = (_strlen(106792) | 0) - 1 | 0;
  while (1) {
   if (($ix | 0) < ($start | 0)) {
    break;
   }
   $222 = $len;
   $len = $222 + 1 | 0;
   HEAP8[$output + $222 | 0] = HEAP8[106792 + $ix | 0] | 0;
   $ix = $ix - 1 | 0;
  }
 }
 if ((HEAP8[106584] | 0) != 0) {
  _sprintf($output + $len | 0, 18072, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = 2, HEAP32[tempVarArgs + 8 >> 2] = 106584, tempVarArgs) | 0) | 0;
  STACKTOP = tempVarArgs;
  $len = $len + ((_strlen(106584) | 0) + 1) | 0;
 }
 $242 = $len;
 $len = $242 + 1 | 0;
 HEAP8[$output + $242 | 0] = 0;
 $prule = _malloc($len) | 0;
 _memcpy($prule | 0, $output | 0, $len) | 0;
 $1 = $prule;
 $252 = $1;
 STACKTOP = sp;
 return $252 | 0;
}
function __Z10DecodeRulePKciPci($group_chars, $group_length, $rule, $control) {
 $group_chars = $group_chars | 0;
 $group_length = $group_length | 0;
 $rule = $rule | 0;
 $control = $control | 0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $rb = 0, $c = 0, $p = 0, $p_end = 0, $ix = 0, $match_type = 0, $finished = 0, $value = 0, $linenum = 0, $flags = 0, $suffix_char = 0, $condition_num = 0, $at_start = 0, $name = 0, $buf = 0, $buf_pre = 0, $suffix = 0, $31 = 0, $54 = 0, $82 = 0, $136 = 0, $150 = 0, $176 = 0, $188 = 0, $237 = 0, $265 = 0, $274 = 0, $279 = 0, $287 = 0, $292 = 0, $295 = 0, $297 = 0, $315 = 0, label = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 424 | 0;
 $buf = sp | 0;
 $buf_pre = sp + 200 | 0;
 $suffix = sp + 400 | 0;
 $1 = $group_chars;
 $2 = $group_length;
 $3 = $rule;
 $4 = $control;
 $finished = 0;
 $linenum = 0;
 $condition_num = 0;
 $at_start = 0;
 $match_type = 0;
 HEAP8[$buf_pre | 0] = 0;
 $ix = 0;
 while (1) {
  if (($ix | 0) >= ($2 | 0)) {
   break;
  }
  HEAP8[$buf + $ix | 0] = HEAP8[$1 + $ix | 0] | 0;
  $ix = $ix + 1 | 0;
 }
 HEAP8[$buf + $ix | 0] = 0;
 $p = $buf + (_strlen($buf | 0) | 0) | 0;
 while (1) {
  if (!(($finished | 0) != 0 ^ 1)) {
   break;
  }
  $31 = $3;
  $3 = $31 + 1 | 0;
  $rb = HEAP8[$31] | 0;
  if (($rb & 255 | 0) <= 9) {
   switch ($rb & 255 | 0) {
   case 0:
   case 3:
    {
     $finished = 1;
     break;
    }
   case 8:
    {
     $at_start = 1;
     label = 11;
     break;
    }
   case 1:
    {
     label = 11;
     break;
    }
   case 2:
    {
     $match_type = 2;
     HEAP8[$p] = 0;
     _strcat($buf | 0, 8848) | 0;
     $p = $buf + (_strlen($buf | 0) | 0) | 0;
     break;
    }
   case 4:
    {
     break;
    }
   case 5:
    {
     $54 = $3;
     $3 = $54 + 1 | 0;
     $condition_num = HEAP8[$54] | 0;
     break;
    }
   case 9:
    {
     $value = (HEAP8[$3 + 1 | 0] & 255) - 1 | 0;
     $linenum = (HEAP8[$3 | 0] & 255) - 1 + ($value * 255 | 0) | 0;
     $3 = $3 + 2 | 0;
     break;
    }
   default:
    {}
   }
   if ((label | 0) == 11) {
    label = 0;
    $match_type = 1;
    HEAP8[$p] = 0;
    $p = $buf_pre | 0;
   }
   continue;
  }
  if (($rb & 255 | 0) == 28) {
   $82 = $3;
   $3 = $82 + 1 | 0;
   $value = HEAP8[$82] & 255;
   if (($value | 0) != 1) {
    label = 20;
   } else {
    if (($4 & -2147483648 | 0) != 0) {
     label = 20;
    }
   }
   if ((label | 0) == 20) {
    label = 0;
    HEAP8[$p | 0] = 36;
    $name = __Z14LookupMnemNameP8MNEM_TABi(5440, $value) | 0;
    _strcpy($p + 1 | 0, $name | 0) | 0;
    $p = $p + ((_strlen($name | 0) | 0) + 1) | 0;
   }
   $c = 32;
  } else {
   if (($rb & 255 | 0) == 14) {
    $flags = ((HEAP8[$3 | 0] & 127) << 8) + (HEAP8[$3 + 1 | 0] & 127) | 0;
    $suffix_char = 83;
    if (($flags & 4 | 0) != 0) {
     $suffix_char = 80;
    }
    $136 = HEAP8[$3 + 2 | 0] & 127;
    _sprintf($suffix | 0, 8728, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = $suffix_char, HEAP32[tempVarArgs + 8 >> 2] = $136, tempVarArgs) | 0) | 0;
    STACKTOP = tempVarArgs;
    $3 = $3 + 3 | 0;
    $ix = 0;
    while (1) {
     if (($ix | 0) >= 9) {
      break;
     }
     if (($flags & 1 | 0) != 0) {
      $150 = $suffix + (_strlen($suffix | 0) | 0) | 0;
      _sprintf($150 | 0, 8672, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = HEAP8[(HEAP32[5940] | 0) + $ix | 0] | 0, tempVarArgs) | 0) | 0;
      STACKTOP = tempVarArgs;
     }
     $flags = $flags >> 1;
     $ix = $ix + 1 | 0;
    }
    _strcpy($p | 0, $suffix | 0) | 0;
    $p = $p + (_strlen($suffix | 0) | 0) | 0;
    $c = 32;
   } else {
    if (($rb & 255 | 0) == 17) {
     $176 = $3;
     $3 = $176 + 1 | 0;
     $c = HEAP8[23752 + ((HEAP8[$176] | 0) - 65) | 0] | 0;
    } else {
     if (($rb & 255 | 0) == 18) {
      $188 = $3;
      $3 = $188 + 1 | 0;
      $value = (HEAP8[$188] | 0) - 65 | 0;
      HEAP8[$p | 0] = 76;
      HEAP8[$p + 1 | 0] = (($value | 0) / 10 | 0) + 48;
      $c = (($value | 0) % 10 | 0) + 48 & 255;
      if (($match_type | 0) == 1) {
       HEAP8[$p | 0] = $c;
       $c = 76;
      }
      $p = $p + 2 | 0;
     } else {
      if (($rb & 255 | 0) <= 31) {
       $c = HEAP8[23720 + ($rb & 255) | 0] | 0;
      } else {
       if (($rb & 255 | 0) == 32) {
        $c = 95;
       } else {
        $c = $rb;
       }
      }
     }
    }
   }
  }
  $237 = $p;
  $p = $237 + 1 | 0;
  HEAP8[$237] = $c;
 }
 HEAP8[$p] = 0;
 $p = 105112;
 $p_end = $p + 80 - 1 | 0;
 if (($linenum | 0) > 0) {
  _sprintf($p | 0, 8632, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $linenum, tempVarArgs) | 0) | 0;
  STACKTOP = tempVarArgs;
  $p = $p + 7 | 0;
 }
 if (($condition_num | 0) > 0) {
  _sprintf($p | 0, 8576, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $condition_num, tempVarArgs) | 0) | 0;
  STACKTOP = tempVarArgs;
  $p = $p + (_strlen($p | 0) | 0) | 0;
 }
 $265 = _strlen($buf_pre | 0) | 0;
 $ix = $265;
 if (($265 | 0) > 0) {
  label = 55;
 } else {
  if (($at_start | 0) != 0) {
   label = 55;
  }
 }
 if ((label | 0) == 55) {
  if (($at_start | 0) != 0) {
   $274 = $p;
   $p = $274 + 1 | 0;
   HEAP8[$274] = 95;
  }
  while (1) {
   $279 = $ix - 1 | 0;
   $ix = $279;
   if (($279 | 0) >= 0) {
    $287 = $p >>> 0 < ($p_end - 3 | 0) >>> 0;
   } else {
    $287 = 0;
   }
   if (!$287) {
    break;
   }
   $292 = $p;
   $p = $292 + 1 | 0;
   HEAP8[$292] = HEAP8[$buf_pre + $ix | 0] | 0;
  }
  $295 = $p;
  $p = $295 + 1 | 0;
  HEAP8[$295] = 41;
  $297 = $p;
  $p = $297 + 1 | 0;
  HEAP8[$297] = 32;
 }
 HEAP8[$p] = 0;
 HEAP8[$buf + ($p_end - $p) | 0] = 0;
 _strcat($p | 0, $buf | 0) | 0;
 $ix = _strlen(105112) | 0;
 while (1) {
  if (($ix | 0) >= 8) {
   break;
  }
  $315 = $ix;
  $ix = $315 + 1 | 0;
  HEAP8[105112 + $315 | 0] = 32;
 }
 HEAP8[105112 + $ix | 0] = 0;
 STACKTOP = sp;
 return 105112;
}
function __ZL11SmoothSpectv() {
 var $q = 0, $frame = 0, $frame2 = 0, $frame1 = 0, $ix = 0, $len = 0, $pk = 0, $modified = 0, $allowed = 0, $diff = 0, $f1 = 0, $f2 = 0, $f11 = 0, $f22 = 0, $24 = 0, $71 = 0, $120 = 0, $135 = 0, $261 = 0, $299 = 0, $314 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 if ((HEAP32[28454] | 0) == (HEAP32[28526] | 0)) {
  STACKTOP = sp;
  return;
 }
 do {
  if ((HEAP32[28442] | 0) >= 0) {
   if ((HEAP32[28442] | 0) == (HEAP32[28454] | 0)) {
    break;
   }
   $q = 33456 + (HEAP32[28442] << 4) | 0;
   $ix = (HEAP32[28442] | 0) - 1 | 0;
   $24 = HEAP32[$q + 8 >> 2] | 0;
   $frame2 = $24;
   $frame = $24;
   while (1) {
    if (($ix | 0) < 0) {
     $ix = 169;
    }
    $q = 33456 + ($ix << 4) | 0;
    if ((HEAP32[$q >> 2] | 0) == 5) {
     label = 11;
     break;
    }
    if ((HEAP32[$q >> 2] | 0) == 6) {
     label = 11;
     break;
    }
    if ((HEAP32[$q >> 2] | 0) >>> 0 <= 4 >>> 0) {
     $len = HEAP32[$q + 4 >> 2] & 65535;
     $frame1 = HEAP32[$q + 12 >> 2] | 0;
     if (($frame1 | 0) != ($frame | 0)) {
      label = 15;
      break;
     }
     HEAP32[$q + 12 >> 2] = $frame2;
     $frame1 = $frame2;
     $71 = HEAP32[$q + 8 >> 2] | 0;
     $frame2 = $71;
     $frame = $71;
     $modified = 0;
     if ((HEAP16[$frame >> 1] & 16 | 0) != 0) {
      label = 17;
      break;
     }
     if ((HEAP16[$frame >> 1] & 32 | 0) != 0) {
      $len = ($len * 12 | 0 | 0) / 10 | 0;
     }
     $pk = 0;
     while (1) {
      if (($pk | 0) >= 6) {
       break;
      }
      do {
       if ((HEAP16[$frame >> 1] & 8 | 0) != 0) {
        if (($pk | 0) >= 3) {
         label = 25;
         break;
        }
       } else {
        label = 25;
       }
      } while (0);
      if ((label | 0) == 25) {
       label = 0;
       $f1 = HEAP16[$frame1 + 2 + ($pk << 1) >> 1] | 0;
       $f2 = HEAP16[$frame + 2 + ($pk << 1) >> 1] | 0;
       $120 = $f2 - $f1 | 0;
       $diff = $120;
       if (($120 | 0) > 0) {
        $allowed = ($f1 << 1) + $f2 | 0;
       } else {
        $allowed = $f1 + ($f2 << 1) | 0;
       }
       $135 = 78328 + ($pk << 2) | 0;
       $allowed = (Math_imul($allowed, HEAPU8[$135] | HEAPU8[$135 + 1 | 0] << 8 | HEAPU8[$135 + 2 | 0] << 16 | HEAPU8[$135 + 3 | 0] << 24 | 0) | 0) / 3e3 | 0;
       $allowed = (Math_imul($allowed, $len) | 0) / 256 | 0;
       if (($diff | 0) > ($allowed | 0)) {
        if (($modified | 0) == 0) {
         $frame2 = __ZL9CopyFrameP7frame_ti($frame, 0) | 0;
         $modified = 1;
        }
        HEAP16[$frame2 + 2 + ($pk << 1) >> 1] = (HEAP16[$frame1 + 2 + ($pk << 1) >> 1] | 0) + $allowed;
        HEAP32[$q + 8 >> 2] = $frame2;
       } else {
        if (($diff | 0) < (-$allowed | 0)) {
         if (($modified | 0) == 0) {
          $frame2 = __ZL9CopyFrameP7frame_ti($frame, 0) | 0;
          $modified = 1;
         }
         HEAP16[$frame2 + 2 + ($pk << 1) >> 1] = (HEAP16[$frame1 + 2 + ($pk << 1) >> 1] | 0) - $allowed;
         HEAP32[$q + 8 >> 2] = $frame2;
        }
       }
      }
      $pk = $pk + 1 | 0;
     }
    }
    if (($ix | 0) == (HEAP32[28454] | 0)) {
     label = 41;
     break;
    }
    $ix = $ix - 1 | 0;
   }
   if ((label | 0) == 11) {} else if ((label | 0) == 15) {} else if ((label | 0) == 17) {} else if ((label | 0) == 41) {}
   $ix = HEAP32[28442] | 0;
   $frame = 0;
   while (1) {
    $q = 33456 + ($ix << 4) | 0;
    if ((HEAP32[$q >> 2] | 0) == 5) {
     label = 46;
     break;
    }
    if ((HEAP32[$q >> 2] | 0) == 6) {
     label = 46;
     break;
    }
    if ((HEAP32[$q >> 2] | 0) >>> 0 <= 4 >>> 0) {
     $len = HEAP32[$q + 4 >> 2] & 65535;
     $frame1 = HEAP32[$q + 8 >> 2] | 0;
     if (($frame | 0) != 0) {
      if (($frame1 | 0) != ($frame | 0)) {
       label = 51;
       break;
      }
      HEAP32[$q + 8 >> 2] = $frame2;
      $frame1 = $frame2;
     }
     $261 = HEAP32[$q + 12 >> 2] | 0;
     $frame2 = $261;
     $frame = $261;
     $modified = 0;
     if ((HEAP16[$frame1 >> 1] & 16 | 0) != 0) {
      label = 54;
      break;
     }
     if ((HEAP16[$frame1 >> 1] & 32 | 0) != 0) {
      $len = ($len * 6 | 0 | 0) / 5 | 0;
     }
     $pk = 0;
     while (1) {
      if (($pk | 0) >= 6) {
       break;
      }
      $f11 = HEAP16[$frame1 + 2 + ($pk << 1) >> 1] | 0;
      $f22 = HEAP16[$frame + 2 + ($pk << 1) >> 1] | 0;
      $299 = $f22 - $f11 | 0;
      $diff = $299;
      if (($299 | 0) > 0) {
       $allowed = ($f11 << 1) + $f22 | 0;
      } else {
       $allowed = $f11 + ($f22 << 1) | 0;
      }
      $314 = 78328 + ($pk << 2) | 0;
      $allowed = (Math_imul($allowed, HEAPU8[$314] | HEAPU8[$314 + 1 | 0] << 8 | HEAPU8[$314 + 2 | 0] << 16 | HEAPU8[$314 + 3 | 0] << 24 | 0) | 0) / 3e3 | 0;
      $allowed = (Math_imul($allowed, $len) | 0) / 256 | 0;
      if (($diff | 0) > ($allowed | 0)) {
       if (($modified | 0) == 0) {
        $frame2 = __ZL9CopyFrameP7frame_ti($frame, 0) | 0;
        $modified = 1;
       }
       HEAP16[$frame2 + 2 + ($pk << 1) >> 1] = (HEAP16[$frame1 + 2 + ($pk << 1) >> 1] | 0) + $allowed;
       HEAP32[$q + 12 >> 2] = $frame2;
      } else {
       if (($diff | 0) < (-$allowed | 0)) {
        if (($modified | 0) == 0) {
         $frame2 = __ZL9CopyFrameP7frame_ti($frame, 0) | 0;
         $modified = 1;
        }
        HEAP16[$frame2 + 2 + ($pk << 1) >> 1] = (HEAP16[$frame1 + 2 + ($pk << 1) >> 1] | 0) - $allowed;
        HEAP32[$q + 12 >> 2] = $frame2;
       }
      }
      $pk = $pk + 1 | 0;
     }
    }
    $ix = $ix + 1 | 0;
    if (($ix | 0) >= 170) {
     $ix = 0;
    }
    if (($ix | 0) == (HEAP32[28526] | 0)) {
     label = 77;
     break;
    }
   }
   if ((label | 0) == 46) {} else if ((label | 0) == 51) {} else if ((label | 0) == 54) {} else if ((label | 0) == 77) {}
   HEAP32[28454] = HEAP32[28526];
   STACKTOP = sp;
   return;
  }
 } while (0);
 HEAP32[28454] = HEAP32[28526];
 STACKTOP = sp;
 return;
}
function __Z14TranslateRomanP10TranslatorPcS1_P8WORD_TAB($tr, $word, $ph_out, $wtab) {
 $tr = $tr | 0;
 $word = $word | 0;
 $ph_out = $ph_out | 0;
 $wtab = $wtab | 0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $p = 0, $acc = 0, $prev = 0, $value = 0, $subtract = 0, $repeat = 0, $n_digits = 0, $word_start = 0, $num_control = 0, $flags = 0, $ph_roman = 0, $number_chars = 0, $41 = 0, $44 = 0, $49 = 0, $175 = 0, $193 = 0, $236 = 0, $266 = 0, label = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 200 | 0;
 $flags = sp | 0;
 $ph_roman = sp + 8 | 0;
 $number_chars = sp + 40 | 0;
 $2 = $tr;
 $3 = $word;
 $4 = $ph_out;
 $5 = $wtab;
 $repeat = 0;
 $n_digits = 0;
 $num_control = 0;
 $acc = 0;
 $prev = 0;
 $subtract = 32767;
 HEAP8[$4 | 0] = 0;
 HEAP32[$flags >> 2] = 0;
 HEAP32[$flags + 4 >> 2] = 0;
 if ((HEAP32[$2 + 200 >> 2] & 33554432 | 0) != 0) {
  if ((HEAP32[$5 >> 2] & 1 | 0) != 0) {
   label = 3;
  }
 } else {
  label = 3;
 }
 do {
  if ((label | 0) == 3) {
   if ((__Z9IsDigit09j(HEAP8[$3 - 2 | 0] | 0) | 0) != 0) {
    break;
   }
   if ((HEAP8[$3 + 1 | 0] | 0) == 32) {
    $1 = 0;
    $266 = $1;
    STACKTOP = sp;
    return $266 | 0;
   }
   $word_start = $3;
   L10 : while (1) {
    $41 = $3;
    $3 = $41 + 1 | 0;
    $44 = HEAP8[$41] | 0;
    if (($44 | 0) == 32) {
     label = 33;
     break;
    }
    $49 = _strchr(HEAP32[5858] | 0, $44 | 0) | 0;
    if (($49 | 0) == 0) {
     label = 10;
     break;
    }
    $value = HEAP32[23440 + ($49 - (HEAP32[5858] | 0) << 2) >> 2] | 0;
    if (($value | 0) == ($prev | 0)) {
     $repeat = $repeat + 1 | 0;
     if (($repeat | 0) >= 3) {
      label = 13;
      break;
     }
    } else {
     $repeat = 0;
    }
    do {
     if (($prev | 0) > 1) {
      if (($prev | 0) == 10) {
       break;
      }
      if (($prev | 0) == 100) {
       break;
      }
      if (($value | 0) >= ($prev | 0)) {
       label = 20;
       break L10;
      }
     }
    } while (0);
    do {
     if (($prev | 0) != 0) {
      if (($prev | 0) >= ($value | 0)) {
       label = 28;
       break;
      }
      if ((($acc | 0) % 10 | 0 | 0) != 0) {
       label = 26;
       break L10;
      }
      if (($prev * 10 | 0 | 0) < ($value | 0)) {
       label = 26;
       break L10;
      }
      $subtract = $prev;
      $value = $value - $subtract | 0;
     } else {
      label = 28;
     }
    } while (0);
    if ((label | 0) == 28) {
     label = 0;
     if (($value | 0) >= ($subtract | 0)) {
      label = 29;
      break;
     }
     $acc = $acc + $prev | 0;
    }
    $prev = $value;
    $n_digits = $n_digits + 1 | 0;
   }
   if ((label | 0) == 10) {
    $1 = 0;
    $266 = $1;
    STACKTOP = sp;
    return $266 | 0;
   } else if ((label | 0) == 13) {
    $1 = 0;
    $266 = $1;
    STACKTOP = sp;
    return $266 | 0;
   } else if ((label | 0) == 20) {
    $1 = 0;
    $266 = $1;
    STACKTOP = sp;
    return $266 | 0;
   } else if ((label | 0) == 26) {
    $1 = 0;
    $266 = $1;
    STACKTOP = sp;
    return $266 | 0;
   } else if ((label | 0) == 29) {
    $1 = 0;
    $266 = $1;
    STACKTOP = sp;
    return $266 | 0;
   } else if ((label | 0) == 33) {
    if ((__Z9IsDigit09j(HEAP8[$3 | 0] | 0) | 0) != 0) {
     $1 = 0;
     $266 = $1;
     STACKTOP = sp;
     return $266 | 0;
    }
    $acc = $acc + $prev | 0;
    if (($acc | 0) < (HEAP32[$2 + 216 >> 2] | 0)) {
     $1 = 0;
     $266 = $1;
     STACKTOP = sp;
     return $266 | 0;
    }
    if (($acc | 0) > (HEAP32[$2 + 212 >> 2] | 0)) {
     $1 = 0;
     $266 = $1;
     STACKTOP = sp;
     return $266 | 0;
    }
    __Z6LookupP10TranslatorPKcPc($2, 16976, $ph_roman | 0) | 0;
    $p = $4 | 0;
    if ((HEAP32[$2 + 200 >> 2] & 67108864 | 0) == 0) {
     _strcpy($4 | 0, $ph_roman | 0) | 0;
     $p = $4 + (_strlen($ph_roman | 0) | 0) | 0;
    }
    $175 = HEAP32[$2 + 236 >> 2] | 0;
    _sprintf($number_chars | 0, 16800, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = $acc, HEAP32[tempVarArgs + 8 >> 2] = $175, tempVarArgs) | 0) | 0;
    STACKTOP = tempVarArgs;
    if ((HEAP8[$3 | 0] | 0) == 46) {
     $1 = 0;
     $266 = $1;
     STACKTOP = sp;
     return $266 | 0;
    }
    if ((__ZL15CheckDotOrdinalP10TranslatorPcS1_P8WORD_TABi($2, $word_start, $3, $5, 1) | 0) != 0) {
     $193 = $5 | 0;
     HEAP32[$193 >> 2] = HEAP32[$193 >> 2] | 32768;
    }
    if ((HEAP32[$2 + 200 >> 2] & 134217728 | 0) != 0) {
     if ((HEAP32[$2 + 324 >> 2] | 0) == 26741) {
      L73 : do {
       if ((HEAP32[$5 >> 2] & 32768 | 0) == 0) {
        do {
         if ((HEAP32[$5 >> 2] & 16384 | 0) != 0) {
          if ((__ZL11hu_number_ePKcii($3, 0, $acc) | 0) == 0) {
           break;
          }
          $num_control = $num_control | 1;
          break L73;
         }
        } while (0);
        $1 = 0;
        $266 = $1;
        STACKTOP = sp;
        return $266 | 0;
       }
      } while (0);
     } else {
      $236 = $5 | 0;
      HEAP32[$236 >> 2] = HEAP32[$236 >> 2] | 32768;
     }
    }
    HEAP32[$2 + 8352 >> 2] = 0;
    HEAP32[$2 + 8356 >> 2] = 0;
    __Z15TranslateNumberP10TranslatorPcS1_PjP8WORD_TABi($2, $number_chars + 2 | 0, $p, $flags | 0, $5, $num_control) | 0;
    if ((HEAP32[$2 + 200 >> 2] & 67108864 | 0) != 0) {
     _strcat($4 | 0, $ph_roman | 0) | 0;
    }
    $1 = 1;
    $266 = $1;
    STACKTOP = sp;
    return $266 | 0;
   }
  }
 } while (0);
 $1 = 0;
 $266 = $1;
 STACKTOP = sp;
 return $266 | 0;
}
function __Z14LookupDictListP10TranslatorPPcS1_PjiP8WORD_TAB($tr, $wordptr, $ph_out, $flags, $end_flags, $wtab) {
 $tr = $tr | 0;
 $wordptr = $wordptr | 0;
 $ph_out = $ph_out | 0;
 $flags = $flags | 0;
 $end_flags = $end_flags | 0;
 $wtab = $wtab | 0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $length = 0, $found = 0, $word1 = 0, $word2 = 0, $c = 0, $nbytes = 0, $len = 0, $word = 0, $letter = 0, $9 = 0, $12 = 0, $27 = 0, $36 = 0, $51 = 0, $59 = 0, $84 = 0, $94 = 0, $96 = 0, $152 = 0, $269 = 0, $303 = 0, $315 = 0, label = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 168 | 0;
 $word = sp | 0;
 $letter = sp + 160 | 0;
 $2 = $tr;
 $3 = $wordptr;
 $4 = $ph_out;
 $5 = $flags;
 $6 = $end_flags;
 $7 = $wtab;
 $length = 0;
 $9 = HEAP32[$3 >> 2] | 0;
 $word1 = $9;
 $word2 = $9;
 while (1) {
  $12 = __Z11utf8_nbytesPKc($word2) | 0;
  $nbytes = $12;
  if ((HEAP8[$word2 + $12 | 0] | 0) == 32) {
   $27 = (HEAP8[$word2 + ($nbytes + 1) | 0] | 0) == 46;
  } else {
   $27 = 0;
  }
  if (!$27) {
   break;
  }
  _memcpy($word + $length | 0, $word2 | 0, $nbytes) | 0;
  $length = $length + $nbytes | 0;
  $36 = $length;
  $length = $36 + 1 | 0;
  HEAP8[$word + $36 | 0] = 46;
  $word2 = $word2 + ($nbytes + 3) | 0;
 }
 do {
  if (($length | 0) > 0) {
   $nbytes = 0;
   while (1) {
    $51 = HEAP8[$word2 + $nbytes | 0] | 0;
    $c = $51;
    if (($51 & 255 | 0) != 0) {
     $59 = ($c & 255 | 0) != 32;
    } else {
     $59 = 0;
    }
    if (!$59) {
     break;
    }
    $nbytes = $nbytes + 1 | 0;
   }
   _memcpy($word + $length | 0, $word2 | 0, $nbytes) | 0;
   HEAP8[$word + ($length + $nbytes) | 0] = 0;
   $found = __ZL11LookupDict2P10TranslatorPKcS2_PcPjiP8WORD_TAB($2, $word | 0, $word2, $4, $5, $6, $7) | 0;
   if (($found | 0) == 0) {
    break;
   }
   $84 = $5 | 0;
   HEAP32[$84 >> 2] = HEAP32[$84 >> 2] | 128;
   HEAP32[22626] = $length;
   $1 = 1;
   $315 = $1;
   STACKTOP = sp;
   return $315 | 0;
  }
 } while (0);
 $length = 0;
 L22 : while (1) {
  if (($length | 0) >= 159) {
   break;
  }
  $94 = $word1;
  $word1 = $94 + 1 | 0;
  $96 = HEAP8[$94] | 0;
  $c = $96;
  if (($96 & 255 | 0) == 0) {
   label = 19;
   break;
  }
  if (($c & 255 | 0) == 32) {
   label = 19;
   break;
  }
  do {
   if (($c & 255 | 0) == 46) {
    if (($length | 0) <= 0) {
     break;
    }
    if ((__Z9IsDigit09j(HEAP8[$word + ($length - 1) | 0] | 0) | 0) != 0) {
     label = 23;
     break L22;
    }
   }
  } while (0);
  HEAP8[$word + $length | 0] = $c;
  $length = $length + 1 | 0;
 }
 if ((label | 0) == 23) {} else if ((label | 0) == 19) {}
 HEAP8[$word + $length | 0] = 0;
 $found = __ZL11LookupDict2P10TranslatorPKcS2_PcPjiP8WORD_TAB($2, $word | 0, $word1, $4, $5, $6, $7) | 0;
 if ((HEAP32[$5 >> 2] & 134217728 | 0) != 0) {
  if ((_strcmp($4 | 0, $2 + 380 | 0) | 0) == 0) {
   $152 = $2 + 400 | 0;
   HEAP32[$152 >> 2] = (HEAP32[$152 >> 2] | 0) + 1;
   if ((HEAP32[$2 + 400 >> 2] | 0) > 3) {
    HEAP8[$4 | 0] = 0;
   }
  } else {
   __Z8strncpy0PcPKci($2 + 380 | 0, $4, 20);
   HEAP32[$2 + 400 >> 2] = 1;
  }
 } else {
  HEAP32[$2 + 400 >> 2] = 0;
 }
 do {
  if (($found | 0) == 0) {
   if ((HEAP32[$5 + 4 >> 2] & 2048 | 0) == 0) {
    break;
   }
   $word2 = $word | 0;
   if ((HEAP8[$word2] | 0) == 95) {
    $word2 = $word2 + 1 | 0;
   }
   $len = __Z7utf8_inPiPKc($letter, $word2) | 0;
   __Z20LookupAccentedLetterP10TranslatorjPc($2, HEAP32[$letter >> 2] | 0, $4);
   $found = $word2 + $len | 0;
  }
 } while (0);
 if (($found | 0) == 0) {
  HEAP8[$4 | 0] = 0;
  do {
   if (($6 & 16 | 0) != 0) {
    if ((HEAP8[$word + ($length - 1) | 0] | 0) != 101) {
     label = 43;
     break;
    }
    HEAP8[$word + ($length - 1) | 0] = 0;
    $found = __ZL11LookupDict2P10TranslatorPKcS2_PcPjiP8WORD_TAB($2, $word | 0, $word1, $4, $5, $6, $7) | 0;
   } else {
    label = 43;
   }
  } while (0);
  if ((label | 0) == 43) {
   do {
    if (($6 & 4096 | 0) != 0) {
     if ((HEAP8[$word + ($length - 1) | 0] | 0) != (HEAP8[$word + ($length - 2) | 0] | 0)) {
      break;
     }
     HEAP8[$word + ($length - 1) | 0] = 0;
     $found = __ZL11LookupDict2P10TranslatorPKcS2_PcPjiP8WORD_TAB($2, $word | 0, $word1, $4, $5, $6, $7) | 0;
    }
   } while (0);
  }
 }
 if (($found | 0) == 0) {
  HEAP8[$4 | 0] = 0;
  $1 = 0;
  $315 = $1;
  STACKTOP = sp;
  return $315 | 0;
 }
 if ((HEAP8[$2 + 272 | 0] | 0) != 0) {
  $269 = $5;
  HEAP32[$269 >> 2] = HEAP32[$269 >> 2] ^ 536870912;
 }
 if ((HEAP32[$5 >> 2] & 536870912 | 0) == 0) {
  $1 = 1;
  $315 = $1;
  STACKTOP = sp;
  return $315 | 0;
 }
 if (($6 & 2 | 0) != 0) {
  HEAP8[104248] = 0;
  HEAP8[104249] = 32;
  _sprintf(104250, 16672, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $4, tempVarArgs) | 0) | 0;
  STACKTOP = tempVarArgs;
  $word1 = HEAP32[$3 >> 2] | 0;
  HEAP32[$3 >> 2] = 104250;
  if ((HEAP32[19530] | 0) == 2) {
   $len = $found - $word1 | 0;
   _memcpy($word | 0, $word1 | 0, $len) | 0;
   HEAP8[$word + $len | 0] = 0;
   $303 = HEAP32[$3 >> 2] | 0;
   _fprintf(HEAP32[19596] | 0, 16512, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = $word, HEAP32[tempVarArgs + 8 >> 2] = $303, tempVarArgs) | 0) | 0;
   STACKTOP = tempVarArgs;
  }
 } else {}
 HEAP8[$4 | 0] = 0;
 $1 = 0;
 $315 = $1;
 STACKTOP = sp;
 return $315 | 0;
}
function __ZL15LookupThousandsP10TranslatoriiiPc($tr, $value, $thousandplex, $thousands_exact, $ph_out) {
 $tr = $tr | 0;
 $value = $value | 0;
 $thousandplex = $thousandplex | 0;
 $thousands_exact = $thousands_exact | 0;
 $ph_out = $ph_out | 0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $found = 0, $found_value = 0, $string = 0, $ph_of = 0, $ph_thousands = 0, $ph_buf = 0, $93 = 0, $110 = 0, $123 = 0, $137 = 0, $175 = 0, $206 = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $string = sp | 0;
 $ph_of = sp + 16 | 0;
 $ph_thousands = sp + 32 | 0;
 $ph_buf = sp + 72 | 0;
 $2 = $tr;
 $3 = $value;
 $4 = $thousandplex;
 $5 = $thousands_exact;
 $6 = $ph_out;
 $found_value = 0;
 HEAP8[$ph_of | 0] = 0;
 if (($3 | 0) > 0) {
  if (($5 & 1 | 0) != 0) {
   if (($5 & 2 | 0) != 0) {
    _sprintf($string | 0, 10104, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = $3, HEAP32[tempVarArgs + 8 >> 2] = $4, tempVarArgs) | 0) | 0;
    STACKTOP = tempVarArgs;
    $found_value = __Z6LookupP10TranslatorPKcPc($2, $string | 0, $ph_thousands | 0) | 0;
   }
   if (((($found_value | 0) != 0 ^ 1) & 1 & (HEAP32[28456] & 1) | 0) != 0) {
    _sprintf($string | 0, 10056, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = $3, HEAP32[tempVarArgs + 8 >> 2] = $4, tempVarArgs) | 0) | 0;
    STACKTOP = tempVarArgs;
    $found_value = __Z6LookupP10TranslatorPKcPc($2, $string | 0, $ph_thousands | 0) | 0;
   }
   if (($found_value | 0) == 0) {
    _sprintf($string | 0, 9992, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = $3, HEAP32[tempVarArgs + 8 >> 2] = $4, tempVarArgs) | 0) | 0;
    STACKTOP = tempVarArgs;
    $found_value = __Z6LookupP10TranslatorPKcPc($2, $string | 0, $ph_thousands | 0) | 0;
   }
  }
  if (($found_value | 0) == 0) {
   _sprintf($string | 0, 9944, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = $3, HEAP32[tempVarArgs + 8 >> 2] = $4, tempVarArgs) | 0) | 0;
   STACKTOP = tempVarArgs;
   $found_value = __Z6LookupP10TranslatorPKcPc($2, $string | 0, $ph_thousands | 0) | 0;
  }
 }
 if (($found_value | 0) == 0) {
  if ((($3 | 0) % 100 | 0 | 0) >= 20) {
   __Z6LookupP10TranslatorPKcPc($2, 9896, $ph_of | 0) | 0;
  }
  $found = 0;
  if (($5 & 1 | 0) != 0) {
   if (($5 & 2 | 0) != 0) {
    $93 = __ZL9M_Varianti($3) | 0;
    _sprintf($string | 0, 9744, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = $93, HEAP32[tempVarArgs + 8 >> 2] = $4, tempVarArgs) | 0) | 0;
    STACKTOP = tempVarArgs;
    $found = __Z6LookupP10TranslatorPKcPc($2, $string | 0, $ph_thousands | 0) | 0;
   }
   do {
    if (($found | 0) == 0) {
     if ((HEAP32[28456] & 1 | 0) == 0) {
      break;
     }
     $110 = __ZL9M_Varianti($3) | 0;
     _sprintf($string | 0, 9704, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = $110, HEAP32[tempVarArgs + 8 >> 2] = $4, tempVarArgs) | 0) | 0;
     STACKTOP = tempVarArgs;
     $found = __Z6LookupP10TranslatorPKcPc($2, $string | 0, $ph_thousands | 0) | 0;
    }
   } while (0);
   if (($found | 0) == 0) {
    $123 = __ZL9M_Varianti($3) | 0;
    _sprintf($string | 0, 9624, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = $123, HEAP32[tempVarArgs + 8 >> 2] = $4, tempVarArgs) | 0) | 0;
    STACKTOP = tempVarArgs;
    $found = __Z6LookupP10TranslatorPKcPc($2, $string | 0, $ph_thousands | 0) | 0;
   }
  }
  if (($found | 0) == 0) {
   $137 = __ZL9M_Varianti($3) | 0;
   _sprintf($string | 0, 9584, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = $137, HEAP32[tempVarArgs + 8 >> 2] = $4, tempVarArgs) | 0) | 0;
   STACKTOP = tempVarArgs;
   if ((__Z6LookupP10TranslatorPKcPc($2, $string | 0, $ph_thousands | 0) | 0) == 0) {
    if (($4 | 0) > 3) {
     _sprintf($string | 0, 16072, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $4 - 1, tempVarArgs) | 0) | 0;
     STACKTOP = tempVarArgs;
     if ((__Z6LookupP10TranslatorPKcPc($2, $string | 0, $ph_buf | 0) | 0) == 0) {
      __Z6LookupP10TranslatorPKcPc($2, 9512, $ph_thousands | 0) | 0;
      HEAP32[28346] = 3;
     }
    }
    if ((HEAP8[$ph_thousands | 0] | 0) == 0) {
     _sprintf($string | 0, 9448, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $3, tempVarArgs) | 0) | 0;
     STACKTOP = tempVarArgs;
     $175 = __Z6LookupP10TranslatorPKcPc($2, $string | 0, $ph_thousands | 0) | 0;
     $found_value = $175;
     if (($175 | 0) == 0) {
      __Z6LookupP10TranslatorPKcPc($2, 9400, $ph_thousands | 0) | 0;
     }
     HEAP32[28346] = 2;
    }
   }
  }
 }
 _sprintf($6 | 0, 9344, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = $ph_of, HEAP32[tempVarArgs + 8 >> 2] = $ph_thousands, tempVarArgs) | 0) | 0;
 STACKTOP = tempVarArgs;
 do {
  if (($3 | 0) == 1) {
   if (($4 | 0) != 1) {
    break;
   }
   if ((HEAP32[$2 + 200 >> 2] & 2097152 | 0) == 0) {
    break;
   }
   $1 = 1;
   $206 = $1;
   STACKTOP = sp;
   return $206 | 0;
  }
 } while (0);
 $1 = $found_value;
 $206 = $1;
 STACKTOP = sp;
 return $206 | 0;
}
function _parse_long_options($nargv, $options, $long_options, $idx, $short_too) {
 $nargv = $nargv | 0;
 $options = $options | 0;
 $long_options = $long_options | 0;
 $idx = $idx | 0;
 $short_too = $short_too | 0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $has_equal_0 = 0, $current_argv_len_0 = 0, $15 = 0, $19 = 0, $i_065_us = 0, $29 = 0, $match_066 = 0, $i_065 = 0, $match_1 = 0, $45 = 0, $47 = 0, $match_2 = 0, $51 = 0, $52 = 0, $54 = 0, $storemerge62 = 0, $storemerge = 0, $120 = 0, $123 = 0, $_0 = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[1224] | 0;
 $2 = HEAP32[1340] | 0;
 $3 = $2 + 1 | 0;
 HEAP32[1340] = $3;
 $4 = _strchr($1 | 0, 61) | 0;
 if (($4 | 0) == 0) {
  $current_argv_len_0 = _strlen($1 | 0) | 0;
  $has_equal_0 = 0;
 } else {
  $current_argv_len_0 = $4 - $1 | 0;
  $has_equal_0 = $4 + 1 | 0;
 }
 $15 = HEAP32[$long_options >> 2] | 0;
 L5 : do {
  if (($15 | 0) != 0) {
   L7 : do {
    if (($short_too | 0) != 0 & ($current_argv_len_0 | 0) == 1) {
     $i_065_us = 0;
     $19 = $15;
     while (1) {
      if ((HEAP8[$1] | 0) == (HEAP8[$19] | 0)) {
       if ((_strlen($19 | 0) | 0) == 1) {
        $match_2 = $i_065_us;
        break L7;
       }
      }
      $i_065_us = $i_065_us + 1 | 0;
      $19 = HEAP32[$long_options + ($i_065_us << 4) >> 2] | 0;
      if (($19 | 0) == 0) {
       break L5;
      }
     }
    } else {
     $i_065 = 0;
     $match_066 = -1;
     $29 = $15;
     while (1) {
      if ((_strncmp($1 | 0, $29 | 0, $current_argv_len_0 | 0) | 0) == 0) {
       if ((_strlen($29 | 0) | 0) == ($current_argv_len_0 | 0)) {
        $match_2 = $i_065;
        break L7;
       }
       if (($match_066 | 0) == -1) {
        $match_1 = $i_065;
       } else {
        break;
       }
      } else {
       $match_1 = $match_066;
      }
      $45 = $i_065 + 1 | 0;
      $47 = HEAP32[$long_options + ($45 << 4) >> 2] | 0;
      if (($47 | 0) == 0) {
       $match_2 = $match_1;
       break L7;
      } else {
       $i_065 = $45;
       $match_066 = $match_1;
       $29 = $47;
      }
     }
     do {
      if ((HEAP32[1342] | 0) != 0) {
       if ((HEAP8[$options] | 0) == 58) {
        break;
       }
       __warnx(6968, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = $current_argv_len_0, HEAP32[tempVarArgs + 8 >> 2] = $1, tempVarArgs) | 0);
       STACKTOP = tempVarArgs;
      }
     } while (0);
     HEAP32[1336] = 0;
     $_0 = 63;
     STACKTOP = sp;
     return $_0 | 0;
    }
   } while (0);
   if (($match_2 | 0) == -1) {
    break;
   }
   $51 = $long_options + ($match_2 << 4) + 4 | 0;
   $52 = HEAP32[$51 >> 2] | 0;
   $54 = ($has_equal_0 | 0) == 0;
   if (!(($52 | 0) != 0 | $54)) {
    do {
     if ((HEAP32[1342] | 0) != 0) {
      if ((HEAP8[$options] | 0) == 58) {
       break;
      }
      __warnx(5392, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = $current_argv_len_0, HEAP32[tempVarArgs + 8 >> 2] = $1, tempVarArgs) | 0);
      STACKTOP = tempVarArgs;
     }
    } while (0);
    if ((HEAP32[$long_options + ($match_2 << 4) + 8 >> 2] | 0) == 0) {
     $storemerge62 = HEAP32[$long_options + ($match_2 << 4) + 12 >> 2] | 0;
    } else {
     $storemerge62 = 0;
    }
    HEAP32[1336] = $storemerge62;
    $_0 = (HEAP8[$options] | 0) == 58 ? 58 : 63;
    STACKTOP = sp;
    return $_0 | 0;
   }
   do {
    if (($52 - 1 | 0) >>> 0 < 2 >>> 0) {
     if (!$54) {
      HEAP32[19548] = $has_equal_0;
      break;
     }
     if (($52 | 0) != 1) {
      break;
     }
     HEAP32[1340] = $2 + 2;
     HEAP32[19548] = HEAP32[$nargv + ($3 << 2) >> 2];
    }
   } while (0);
   if (!((HEAP32[$51 >> 2] | 0) == 1 & (HEAP32[19548] | 0) == 0)) {
    if (($idx | 0) != 0) {
     HEAP32[$idx >> 2] = $match_2;
    }
    $120 = HEAP32[$long_options + ($match_2 << 4) + 8 >> 2] | 0;
    $123 = HEAP32[$long_options + ($match_2 << 4) + 12 >> 2] | 0;
    if (($120 | 0) == 0) {
     $_0 = $123;
     STACKTOP = sp;
     return $_0 | 0;
    }
    HEAP32[$120 >> 2] = $123;
    $_0 = 0;
    STACKTOP = sp;
    return $_0 | 0;
   }
   do {
    if ((HEAP32[1342] | 0) != 0) {
     if ((HEAP8[$options] | 0) == 58) {
      break;
     }
     __warnx(4768, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $1, tempVarArgs) | 0);
     STACKTOP = tempVarArgs;
    }
   } while (0);
   if ((HEAP32[$long_options + ($match_2 << 4) + 8 >> 2] | 0) == 0) {
    $storemerge = HEAP32[$long_options + ($match_2 << 4) + 12 >> 2] | 0;
   } else {
    $storemerge = 0;
   }
   HEAP32[1336] = $storemerge;
   HEAP32[1340] = (HEAP32[1340] | 0) - 1;
   $_0 = (HEAP8[$options] | 0) == 58 ? 58 : 63;
   STACKTOP = sp;
   return $_0 | 0;
  }
 } while (0);
 if (($short_too | 0) != 0) {
  HEAP32[1340] = $2;
  $_0 = -1;
  STACKTOP = sp;
  return $_0 | 0;
 }
 do {
  if ((HEAP32[1342] | 0) != 0) {
   if ((HEAP8[$options] | 0) == 58) {
    break;
   }
   __warnx(6224, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $1, tempVarArgs) | 0);
   STACKTOP = tempVarArgs;
  }
 } while (0);
 HEAP32[1336] = 0;
 $_0 = 63;
 STACKTOP = sp;
 return $_0 | 0;
}
function __Z14SetSynth_KlattiiP7frame_tS0_P7voice_ti($length, $modn, $fr1, $fr2, $v, $control) {
 $length = $length | 0;
 $modn = $modn | 0;
 $fr1 = $fr1 | 0;
 $fr2 = $fr2 | 0;
 $v = $v | 0;
 $control = $control | 0;
 var $1 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $ix = 0, $next = 0.0, $qix = 0, $cmd = 0, $fr3 = 0, $158 = 0, $205 = 0.0, $239 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = $length;
 $3 = $fr1;
 $4 = $fr2;
 $5 = $v;
 $6 = $control;
 if ((HEAP32[8292] | 0) != 0) {
  do {
   if ((HEAP32[(HEAP32[8292] | 0) + 132 >> 2] | 0) > 0) {
    if ((HEAP32[(HEAP32[8292] | 0) + 132 >> 2] | 0) > 4) {
     break;
    }
    HEAP32[31363] = HEAP32[(HEAP32[8292] | 0) + 132 >> 2];
    HEAP32[31405] = HEAP32[28632 + (HEAP32[31363] << 2) >> 2];
   }
  } while (0);
  HEAP32[31364] = (HEAP32[(HEAP32[8292] | 0) + 88 >> 2] | 0) / 32 | 0;
 }
 HEAP32[26832] = 0;
 if (($6 & 2 | 0) != 0) {
  HEAP32[26832] = 1;
 }
 if (($6 & 1 | 0) != 0) {
  HEAP32[26832] = 1;
  $qix = (HEAP32[8362] | 0) + 1 | 0;
  while (1) {
   if (($qix | 0) >= 170) {
    $qix = 0;
   }
   if (($qix | 0) == (HEAP32[8360] | 0)) {
    label = 13;
    break;
   }
   $cmd = HEAP32[33456 + ($qix << 4) >> 2] | 0;
   if (($cmd | 0) == 1) {
    label = 15;
    break;
   }
   if (($cmd | 0) == 6) {
    label = 24;
    break;
   }
   if (($cmd | 0) == 5) {
    label = 24;
    break;
   }
   $qix = $qix + 1 | 0;
  }
  if ((label | 0) == 13) {} else if ((label | 0) == 15) {
   HEAP32[26832] = 0;
   $fr3 = HEAP32[33464 + ($qix << 4) >> 2] | 0;
   $ix = 1;
   while (1) {
    if (($ix | 0) >= 6) {
     break;
    }
    if ((HEAP16[$fr3 + 2 + ($ix << 1) >> 1] | 0) != (HEAP16[$4 + 2 + ($ix << 1) >> 1] | 0)) {
     label = 18;
     break;
    }
    $ix = $ix + 1 | 0;
   }
   if ((label | 0) == 18) {
    HEAP32[26832] = 2;
   }
  } else if ((label | 0) == 24) {}
 }
 if (($6 & 1 | 0) != 0) {
  $ix = 1;
  while (1) {
   if (($ix | 0) >= 6) {
    break;
   }
   if ((HEAP16[104186 + ($ix << 1) >> 1] | 0) != (HEAP16[$3 + 2 + ($ix << 1) >> 1] | 0)) {
    label = 32;
    break;
   }
   $ix = $ix + 1 | 0;
  }
  if ((label | 0) == 32) {
   __Z10KlattReseti(0);
  }
  _memcpy(104184, $4 | 0, 64) | 0;
 }
 $ix = 0;
 while (1) {
  if (($ix | 0) >= 10) {
   break;
  }
  do {
   if (($ix | 0) >= 5) {
    if ((HEAP16[$3 >> 1] & 1 | 0) != 0) {
     label = 41;
     break;
    }
    HEAP32[108680 + ($ix << 2) >> 2] = 0;
    HEAPF64[107728 + ($ix << 3) >> 3] = 0.0;
    HEAPF64[128184 + ($ix << 3) >> 3] = 0.0;
   } else {
    label = 41;
   }
  } while (0);
  if ((label | 0) == 41) {
   label = 0;
   $158 = HEAPU8[$3 + 39 + $ix | 0] | 0;
   HEAP32[108680 + ($ix << 2) >> 2] = $158;
   HEAPF64[107728 + ($ix << 3) >> 3] = +($158 | 0);
   HEAPF64[128184 + ($ix << 3) >> 3] = +((HEAPU8[$4 + 39 + $ix | 0] | 0) - (HEAP32[108680 + ($ix << 2) >> 2] | 0) << 6 | 0) / +($1 | 0);
  }
  $ix = $ix + 1 | 0;
 }
 HEAP32[26722] = $1;
 $ix = 1;
 while (1) {
  if (($ix | 0) >= 6) {
   break;
  }
  $205 = +(Math_imul(HEAP16[$3 + 2 + ($ix << 1) >> 1] | 0, HEAP16[$5 + 164 + ($ix << 1) >> 1] | 0) | 0) / 256.0;
  HEAPF64[111952 + ($ix * 80 | 0) >> 3] = $205 + +(HEAP16[$5 + 218 + ($ix << 1) >> 1] | 0);
  HEAP32[111936 + ($ix * 80 | 0) >> 2] = ~~+HEAPF64[111952 + ($ix * 80 | 0) >> 3];
  $239 = +(Math_imul(HEAP16[$4 + 2 + ($ix << 1) >> 1] | 0, HEAP16[$5 + 164 + ($ix << 1) >> 1] | 0) | 0) / 256.0;
  $next = $239 + +(HEAP16[$5 + 218 + ($ix << 1) >> 1] | 0);
  HEAPF64[111984 + ($ix * 80 | 0) >> 3] = ($next - +HEAPF64[111952 + ($ix * 80 | 0) >> 3]) * 64.0 / +($1 | 0);
  if (($ix | 0) < 4) {
   HEAPF64[111960 + ($ix * 80 | 0) >> 3] = +(HEAPU8[$3 + 35 + $ix | 0] << 1 | 0);
   HEAP32[111940 + ($ix * 80 | 0) >> 2] = ~~+HEAPF64[111960 + ($ix * 80 | 0) >> 3];
   $next = +(HEAPU8[$4 + 35 + $ix | 0] << 1 | 0);
   HEAPF64[111992 + ($ix * 80 | 0) >> 3] = ($next - +HEAPF64[111960 + ($ix * 80 | 0) >> 3]) * 64.0 / +($1 | 0);
  }
  $ix = $ix + 1 | 0;
 }
 HEAPF64[13994] = +(HEAPU8[$3 + 40 | 0] << 1 | 0);
 if (+HEAPF64[13994] == 0.0) {
  HEAPF64[13994] = +(HEAP32[26741] | 0);
 }
 HEAP32[27984] = ~~+HEAPF64[13994];
 $next = +(HEAPU8[$4 + 40 | 0] << 1 | 0);
 if ($next == 0.0) {
  $next = +(HEAP32[26741] | 0);
 }
 HEAPF64[13998] = ($next - +HEAPF64[13994]) * 64.0 / +($1 | 0);
 HEAPF64[13995] = 89.0;
 HEAP32[27985] = 89;
 HEAPF64[13999] = 0.0;
 if ((HEAP16[$3 >> 1] & 1 | 0) == 0) {
  STACKTOP = sp;
  return;
 }
 $ix = 1;
 while (1) {
  if (($ix | 0) >= 7) {
   break;
  }
  HEAPF64[111976 + ($ix * 80 | 0) >> 3] = +(HEAPU8[$3 + 56 + $ix | 0] << 2 | 0);
  HEAP32[111948 + ($ix * 80 | 0) >> 2] = ~~+HEAPF64[111976 + ($ix * 80 | 0) >> 3];
  $next = +(HEAPU8[$4 + 56 + $ix | 0] << 2 | 0);
  HEAPF64[112008 + ($ix * 80 | 0) >> 3] = ($next - +HEAPF64[111976 + ($ix * 80 | 0) >> 3]) * 64.0 / +($1 | 0);
  HEAPF64[111968 + ($ix * 80 | 0) >> 3] = +((HEAPU8[$3 + 49 + $ix | 0] | 0) >>> 0);
  HEAP32[111944 + ($ix * 80 | 0) >> 2] = ~~+HEAPF64[111968 + ($ix * 80 | 0) >> 3];
  $next = +((HEAPU8[$4 + 49 + $ix | 0] | 0) >>> 0);
  HEAPF64[112e3 + ($ix * 80 | 0) >> 3] = ($next - +HEAPF64[111968 + ($ix * 80 | 0) >> 3]) * 64.0 / +($1 | 0);
  $ix = $ix + 1 | 0;
 }
 STACKTOP = sp;
 return;
}
function __ZL7parwaveP13klatt_frame_t($frame) {
 $frame = $frame | 0;
 var $1 = 0, $2 = 0, $temp = 0.0, $value = 0, $out = 0.0, $n4 = 0, $frics = 0.0, $glotout = 0.0, $aspiration = 0.0, $casc_next_in = 0.0, $par_glotout = 0.0, $ix = 0, $z2 = 0, $sample = 0, $25 = 0, $176 = 0, $211 = 0, $234 = 0, $239 = 0, $243 = 0, $262 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = $frame;
 __ZL7flutterP13klatt_frame_t($2);
 HEAP32[31367] = 0;
 while (1) {
  if ((HEAP32[31367] | 0) >= (HEAP32[31365] | 0)) {
   label = 43;
   break;
  }
  HEAPF64[2344] = +__ZL9gen_noised(+HEAPF64[2344]);
  if ((HEAP32[31366] | 0) > (HEAP32[31370] | 0)) {
   HEAPF64[2344] = +HEAPF64[2344] * .5;
  }
  $frics = +HEAPF64[15696] * +HEAPF64[2344];
  $n4 = 0;
  while (1) {
   if (($n4 | 0) >= 4) {
    break;
   }
   $25 = HEAP32[31363] | 0;
   if (($25 | 0) == 4) {
    HEAPF64[2341] = +__ZL14sampled_sourcei(1);
   } else if (($25 | 0) == 3) {
    HEAPF64[2341] = +__ZL14sampled_sourcei(0);
   } else if (($25 | 0) == 2) {
    HEAPF64[2341] = +__ZL14natural_sourcev();
   } else if (($25 | 0) == 1) {
    HEAPF64[2341] = +__ZL16impulsive_sourcev();
   }
   if ((HEAP32[31366] | 0) >= (HEAP32[31368] | 0)) {
    HEAP32[31366] = 0;
    __ZL21pitch_synch_par_resetP13klatt_frame_t($2);
   }
   HEAPF64[2341] = +__ZL9resonatorP11resonator_td(126776, +HEAPF64[2341]);
   HEAP32[31366] = (HEAP32[31366] | 0) + 1;
   $n4 = $n4 + 1 | 0;
  }
  HEAPF64[2341] = +HEAPF64[2341] * +HEAPF64[15690] + +HEAPF64[2342] * +HEAPF64[15691];
  HEAPF64[2342] = +HEAPF64[2341];
  if ((HEAP32[31366] | 0) < (HEAP32[31369] | 0)) {
   HEAPF64[2341] = +HEAPF64[2341] + +HEAPF64[15697] * +(HEAP32[31371] | 0);
  }
  $glotout = +HEAPF64[15693] * +HEAPF64[2341];
  $par_glotout = +HEAPF64[15694] * +HEAPF64[2341];
  $aspiration = +HEAPF64[15695] * +HEAPF64[2344];
  $glotout = $glotout + $aspiration;
  $par_glotout = $par_glotout + $aspiration;
  $out = 0.0;
  if ((HEAP32[31358] | 0) != 2) {
   $casc_next_in = +__ZL14antiresonator2P11resonator_td(125624, $glotout);
   $casc_next_in = +__ZL9resonatorP11resonator_td(126200, $casc_next_in);
   $casc_next_in = +__ZL9resonatorP11resonator_td(126136, $casc_next_in);
   $casc_next_in = +__ZL9resonatorP11resonator_td(126072, $casc_next_in);
   $casc_next_in = +__ZL9resonatorP11resonator_td(126008, $casc_next_in);
   $casc_next_in = +__ZL10resonator2P11resonator_td(125944, $casc_next_in);
   $casc_next_in = +__ZL10resonator2P11resonator_td(125880, $casc_next_in);
   $casc_next_in = +__ZL10resonator2P11resonator_td(125816, $casc_next_in);
   $casc_next_in = +__ZL10resonator2P11resonator_td(125752, $casc_next_in);
   $out = +__ZL10resonator2P11resonator_td(125688, $casc_next_in);
  }
  HEAPF64[2343] = $par_glotout;
  $out = $out + +__ZL9resonatorP11resonator_td(126328, +HEAPF64[2343]);
  $out = $out + +__ZL9resonatorP11resonator_td(126264, +HEAPF64[2343]);
  HEAPF64[2343] = $frics + $par_glotout - +HEAPF64[2340];
  HEAPF64[2340] = $par_glotout;
  $ix = 12;
  while (1) {
   if (($ix | 0) > 16) {
    break;
   }
   $out = +__ZL9resonatorP11resonator_td(125624 + ($ix << 6) | 0, +HEAPF64[2343]) - $out;
   $ix = $ix + 1 | 0;
  }
  $out = +HEAPF64[15692] * +HEAPF64[2343] - $out;
  $out = +__ZL9resonatorP11resonator_td(126840, $out);
  $temp = +(~~($out * +(HEAP32[8357] | 0) * +HEAPF64[15698]) | 0);
  $z2 = 0;
  if ((HEAP32[8354] | 0) < (HEAP32[8351] | 0)) {
   if ((HEAP32[8352] | 0) == 0) {
    $sample = (HEAPU8[(HEAP32[8350] | 0) + (HEAP32[8354] | 0) | 0] | 0) + (HEAP8[(HEAP32[8350] | 0) + ((HEAP32[8354] | 0) + 1) | 0] << 8) | 0;
    HEAP32[8354] = (HEAP32[8354] | 0) + 2;
   } else {
    $176 = HEAP32[8354] | 0;
    HEAP32[8354] = $176 + 1;
    $sample = Math_imul(HEAP8[(HEAP32[8350] | 0) + $176 | 0] | 0, HEAP32[8352] | 0) | 0;
   }
   $z2 = (Math_imul($sample, HEAP32[8358] | 0) | 0) / 1024 | 0;
   $z2 = (Math_imul($z2, HEAP32[8353] | 0) | 0) / 40 | 0;
   $temp = $temp + +($z2 | 0);
  }
  if ((HEAP32[31404] | 0) > 0) {
   HEAP32[31404] = (HEAP32[31404] | 0) - 1;
   $temp = $temp * +(HEAP32[31404] | 0) / 64.0;
  }
  $211 = HEAP32[19870] | 0;
  HEAP32[19870] = $211 + 1;
  $value = ~~$temp + ((Math_imul(HEAP16[79496 + ($211 << 1) >> 1] | 0, HEAP32[22624] | 0) | 0) >> 8) | 0;
  if ((HEAP32[19870] | 0) >= 5500) {
   HEAP32[19870] = 0;
  }
  if (($value | 0) < -32768) {
   $value = -32768;
  }
  if (($value | 0) > 32767) {
   $value = 32767;
  }
  $234 = HEAP32[19448] | 0;
  HEAP32[19448] = $234 + 1;
  HEAP8[$234] = $value;
  $239 = HEAP32[19448] | 0;
  HEAP32[19448] = $239 + 1;
  HEAP8[$239] = $value >> 8;
  $243 = HEAP32[19872] | 0;
  HEAP32[19872] = $243 + 1;
  HEAP16[79496 + ($243 << 1) >> 1] = $value;
  if ((HEAP32[19872] | 0) >= 5500) {
   HEAP32[19872] = 0;
  }
  HEAP32[28528] = (HEAP32[28528] | 0) + 1;
  if ((HEAP32[19448] | 0) >>> 0 >= (HEAP32[19450] | 0) >>> 0) {
   label = 40;
   break;
  }
  HEAP32[31367] = (HEAP32[31367] | 0) + 1;
 }
 if ((label | 0) == 43) {
  $1 = 0;
  $262 = $1;
  STACKTOP = sp;
  return $262 | 0;
 } else if ((label | 0) == 40) {
  $1 = 1;
  $262 = $1;
  STACKTOP = sp;
  return $262 | 0;
 }
 return 0;
}
function __ZL19AnnouncePunctuationP10TranslatoriPiPcS1_i($tr, $c1, $c2_ptr, $output, $bufix, $end_clause) {
 $tr = $tr | 0;
 $c1 = $c1 | 0;
 $c2_ptr = $c2_ptr | 0;
 $output = $output | 0;
 $bufix = $bufix | 0;
 $end_clause = $end_clause | 0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $punct_count = 0, $punctname = 0, $attributes = 0, $short_pause = 0, $c2 = 0, $len = 0, $bufix1 = 0, $buf = 0, $buf2 = 0, $ph_buf = 0, $12 = 0, $71 = 0, $102 = 0, $160 = 0, $206 = 0, label = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 312 | 0;
 $buf = sp | 0;
 $buf2 = sp + 200 | 0;
 $ph_buf = sp + 280 | 0;
 $2 = $tr;
 $3 = $c1;
 $4 = $c2_ptr;
 $5 = $output;
 $6 = $bufix;
 $7 = $end_clause;
 $punctname = 0;
 $c2 = HEAP32[$4 >> 2] | 0;
 HEAP8[$buf | 0] = 0;
 $12 = __ZL15LookupSoundiconi($3) | 0;
 if (($12 | 0) >= 0) {
  _sprintf($buf | 0, 17e3, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $12, tempVarArgs) | 0) | 0;
  STACKTOP = tempVarArgs;
  __ZL6UngetCi($c2);
 } else {
  do {
   if (($3 | 0) == 46) {
    if (($7 | 0) == 0) {
     break;
    }
    if (($c2 | 0) == 46) {
     break;
    }
    if ((__ZL13LookupSpecialP10TranslatorPKcPc($2, 16840, $ph_buf | 0) | 0) != 0) {
     $punctname = $ph_buf | 0;
    }
   }
  } while (0);
  if (($punctname | 0) == 0) {
   $punctname = __ZL14LookupCharNameP10Translatorii($2, $3, 0) | 0;
  }
  if (($punctname | 0) == 0) {
   $1 = -1;
   $206 = $1;
   STACKTOP = sp;
   return $206 | 0;
  }
  do {
   if ((HEAP32[$6 >> 2] | 0) == 0) {
    label = 16;
   } else {
    if (($7 | 0) == 0) {
     label = 16;
     break;
    }
    if ((HEAP32[$2 + 92 >> 2] & 2 | 0) != 0) {
     label = 16;
     break;
    }
    __ZL6UngetCi($c2);
    if ((HEAP32[19462] | 0) != 0) {
     if (($3 | 0) == 60) {
      label = 40;
     } else {
      if (($3 | 0) == 38) {
       label = 40;
      }
     }
     if ((label | 0) == 40) {
      HEAP32[28370] = $3;
     }
    }
    HEAP32[28844] = $3;
    HEAP8[$buf | 0] = 32;
    HEAP8[$buf + 1 | 0] = 0;
   }
  } while (0);
  if ((label | 0) == 16) {
   $punct_count = 1;
   while (1) {
    if (($c2 | 0) == ($3 | 0)) {
     $71 = ($3 | 0) != 60;
    } else {
     $71 = 0;
    }
    if (!$71) {
     break;
    }
    $punct_count = $punct_count + 1 | 0;
    $c2 = __ZL4GetCv() | 0;
   }
   HEAP32[$4 >> 2] = $c2;
   if (($7 | 0) != 0) {
    __ZL6UngetCi($c2);
   }
   if (($punct_count | 0) == 1) {
    _sprintf($buf | 0, 16664, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $punctname, tempVarArgs) | 0) | 0;
    STACKTOP = tempVarArgs;
   } else {
    if (($punct_count | 0) < 4) {
     HEAP8[$buf | 0] = 0;
     if ((HEAP32[19606] | 0) < 300) {
      _sprintf($buf | 0, 16504, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 7 & -8, HEAP32[tempVarArgs >> 2] = 0, tempVarArgs) | 0) | 0;
      STACKTOP = tempVarArgs;
     }
     while (1) {
      $102 = $punct_count;
      $punct_count = $102 - 1 | 0;
      if (($102 | 0) <= 0) {
       break;
      }
      _sprintf($buf2 | 0, 16664, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $punctname, tempVarArgs) | 0) | 0;
      STACKTOP = tempVarArgs;
      _strcat($buf | 0, $buf2 | 0) | 0;
     }
     if ((HEAP32[19606] | 0) < 300) {
      _sprintf($buf2 | 0, 16336, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 7 & -8, HEAP32[tempVarArgs >> 2] = 0, tempVarArgs) | 0) | 0;
      STACKTOP = tempVarArgs;
      _strcat($buf | 0, $buf2 | 0) | 0;
     }
    } else {
     _sprintf($buf | 0, 16192, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 24 | 0, HEAP32[tempVarArgs >> 2] = $punctname, HEAP32[tempVarArgs + 8 >> 2] = $punct_count, HEAP32[tempVarArgs + 16 >> 2] = $punctname, tempVarArgs) | 0) | 0;
     STACKTOP = tempVarArgs;
    }
   }
  }
 }
 $bufix1 = HEAP32[$6 >> 2] | 0;
 $len = _strlen($buf | 0) | 0;
 _strcpy($5 + (HEAP32[$6 >> 2] | 0) | 0, $buf | 0) | 0;
 $160 = $6;
 HEAP32[$160 >> 2] = (HEAP32[$160 >> 2] | 0) + $len;
 if (($7 | 0) == 0) {
  $1 = -1;
  $206 = $1;
  STACKTOP = sp;
  return $206 | 0;
 }
 if (($3 | 0) == 45) {
  $1 = 16384;
  $206 = $1;
  STACKTOP = sp;
  return $206 | 0;
 }
 $attributes = HEAP32[26640 + ((__Z11lookupwcharPKti(30304, $3) | 0) << 2) >> 2] | 0;
 $short_pause = 262148;
 if (($attributes & 28672 | 0) == 4096) {
  $short_pause = 266244;
 }
 do {
  if (($bufix1 | 0) > 0) {
   if ((HEAP32[$2 + 92 >> 2] & 2 | 0) != 0) {
    break;
   }
   if (($attributes & -32769 | 0) == 266270) {
    $1 = 262148;
    $206 = $1;
    STACKTOP = sp;
    return $206 | 0;
   } else {
    $1 = $short_pause;
    $206 = $1;
    STACKTOP = sp;
    return $206 | 0;
   }
  }
 } while (0);
 if (($attributes & 524288 | 0) != 0) {
  $1 = $attributes;
  $206 = $1;
  STACKTOP = sp;
  return $206 | 0;
 } else {
  $1 = $short_pause;
  $206 = $1;
  STACKTOP = sp;
  return $206 | 0;
 }
 return 0;
}
function __ZL14GetVowelStressP10TranslatorPhPaPiS3_i($tr, $phonemes, $vowel_stress, $vowel_count, $stressed_syllable, $control) {
 $tr = $tr | 0;
 $phonemes = $phonemes | 0;
 $vowel_stress = $vowel_stress | 0;
 $vowel_count = $vowel_count | 0;
 $stressed_syllable = $stressed_syllable | 0;
 $control = $control | 0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $phcode = 0, $ph = 0, $ph_out = 0, $count = 0, $max_stress = 0, $ix = 0, $j = 0, $stress = 0, $primary_posn = 0, $11 = 0, $13 = 0, $20 = 0, $25 = 0, $62 = 0, $197 = 0, $205 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = $tr;
 $2 = $phonemes;
 $3 = $vowel_stress;
 $4 = $vowel_count;
 $5 = $stressed_syllable;
 $6 = $control;
 $ph_out = $2;
 $count = 1;
 $max_stress = -1;
 $stress = -1;
 $primary_posn = 0;
 HEAP8[$3 | 0] = 1;
 L1 : while (1) {
  $11 = $2;
  $2 = $11 + 1 | 0;
  $13 = HEAP8[$11] | 0;
  $phcode = $13;
  if (($13 & 255 | 0) != 0) {
   $20 = ($count | 0) < 99;
  } else {
   $20 = 0;
  }
  if (!$20) {
   break;
  }
  $25 = HEAP32[43256 + (($phcode & 255) << 2) >> 2] | 0;
  $ph = $25;
  if (($25 | 0) == 0) {
   continue;
  }
  do {
   if ((HEAPU8[$ph + 11 | 0] | 0) == 1) {
    if ((HEAPU16[$ph + 8 >> 1] | 0) != 0) {
     break;
    }
    if (($phcode & 255 | 0) == 8) {
     $j = $count - 1 | 0;
     while (1) {
      do {
       if (($j | 0) > 0) {
        if ((HEAP32[$5 >> 2] | 0) != 0) {
         $62 = 0;
         break;
        }
        $62 = (HEAP8[$3 + $j | 0] | 0) < 4;
       } else {
        $62 = 0;
       }
      } while (0);
      if (!$62) {
       break;
      }
      if ((HEAP8[$3 + $j | 0] | 0) != 0) {
       if ((HEAP8[$3 + $j | 0] | 0) != 1) {
        label = 17;
        break;
       }
      }
      $j = $j - 1 | 0;
     }
     if ((label | 0) == 17) {
      label = 0;
      HEAP8[$3 + $j | 0] = 4;
      if (($max_stress | 0) < 4) {
       $max_stress = 4;
       $primary_posn = $j;
      }
      $ix = 1;
      while (1) {
       if (($ix | 0) >= ($j | 0)) {
        break;
       }
       if ((HEAP8[$3 + $ix | 0] | 0) == 4) {
        HEAP8[$3 + $ix | 0] = 3;
       }
       $ix = $ix + 1 | 0;
      }
     }
    } else {
     if ((HEAPU8[$ph + 14 | 0] | 0) < 4) {
      label = 30;
     } else {
      if ((HEAP32[$5 >> 2] | 0) == 0) {
       label = 30;
      }
     }
     if ((label | 0) == 30) {
      label = 0;
      $stress = HEAPU8[$ph + 14 | 0] | 0;
      if (($stress | 0) > ($max_stress | 0)) {
       $max_stress = $stress;
      }
     }
    }
    continue L1;
   }
  } while (0);
  do {
   if ((HEAPU8[$ph + 11 | 0] | 0) == 2) {
    if ((HEAP32[$ph + 4 >> 2] & 1048576 | 0) != 0) {
     label = 45;
     break;
    }
    HEAP8[$3 + $count | 0] = $stress;
    do {
     if (($stress | 0) >= 4) {
      if (($stress | 0) < ($max_stress | 0)) {
       break;
      }
      $primary_posn = $count;
      $max_stress = $stress;
     }
    } while (0);
    do {
     if (($stress | 0) < 0) {
      if (($6 & 1 | 0) == 0) {
       break;
      }
      if ((HEAP32[$ph + 4 >> 2] & 2 | 0) == 0) {
       break;
      }
      HEAP8[$3 + $count | 0] = 1;
     }
    } while (0);
    $count = $count + 1 | 0;
    $stress = -1;
   } else {
    label = 45;
   }
  } while (0);
  if ((label | 0) == 45) {
   label = 0;
   if (($phcode & 255 | 0) == 20) {
    HEAP8[$3 + $count | 0] = $stress;
    do {
     if (($stress | 0) == 0) {
      if (($6 & 1 | 0) == 0) {
       break;
      }
      $197 = $count;
      $count = $197 + 1 | 0;
      HEAP8[$3 + $197 | 0] = 1;
     }
    } while (0);
   }
  }
  $205 = $ph_out;
  $ph_out = $205 + 1 | 0;
  HEAP8[$205] = $phcode;
 }
 HEAP8[$3 + $count | 0] = 1;
 HEAP8[$ph_out] = 0;
 if ((HEAP32[$5 >> 2] | 0) > 0) {
  if ((HEAP32[$5 >> 2] | 0) >= ($count | 0)) {
   HEAP32[$5 >> 2] = $count - 1;
  }
  HEAP8[$3 + (HEAP32[$5 >> 2] | 0) | 0] = 4;
  $max_stress = 4;
  $primary_posn = HEAP32[$5 >> 2] | 0;
 }
 if (($max_stress | 0) != 5) {
  $280 = $primary_posn;
  $281 = $5;
  HEAP32[$281 >> 2] = $280;
  $282 = $count;
  $283 = $4;
  HEAP32[$283 >> 2] = $282;
  $284 = $max_stress;
  STACKTOP = sp;
  return $284 | 0;
 }
 $ix = 1;
 while (1) {
  if (($ix | 0) >= ($count | 0)) {
   break;
  }
  if ((HEAP8[$3 + $ix | 0] | 0) == 4) {
   if ((HEAP32[$1 + 12 >> 2] & 131072 | 0) != 0) {
    HEAP8[$3 + $ix | 0] = 1;
   } else {
    HEAP8[$3 + $ix | 0] = 3;
   }
  }
  if ((HEAP8[$3 + $ix | 0] | 0) == 5) {
   HEAP8[$3 + $ix | 0] = 4;
   $primary_posn = $ix;
  }
  $ix = $ix + 1 | 0;
 }
 $max_stress = 4;
 $280 = $primary_posn;
 $281 = $5;
 HEAP32[$281 >> 2] = $280;
 $282 = $count;
 $283 = $4;
 HEAP32[$283 >> 2] = $282;
 $284 = $max_stress;
 STACKTOP = sp;
 return $284 | 0;
}
function __ZL16CalcPitches_ToneP10Translatori($tr, $clause_tone) {
 $tr = $tr | 0;
 $clause_tone = $clause_tone | 0;
 var $1 = 0, $p = 0, $ix = 0, $count_stressed = 0, $final_stressed = 0, $tone_ph = 0, $pause = 0, $tone_promoted = 0, $tph = 0, $prev_tph = 0, $prevw_tph = 0, $prev_p = 0, $pitch_adjust = 0, $pitch_decrement = 0, $pitch_low = 0, $pitch_high = 0, $64 = 0, $229 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = $tr;
 $count_stressed = 0;
 $final_stressed = 0;
 $pitch_adjust = 0;
 $pitch_decrement = 0;
 $pitch_low = 0;
 $pitch_high = 0;
 $p = 44280;
 $ix = 0;
 while (1) {
  if (($ix | 0) >= (HEAP32[19562] | 0)) {
   break;
  }
  do {
   if ((HEAPU8[$p + 17 | 0] | 0) == 2) {
    if ((HEAPU8[$p + 3 | 0] | 0) < 4) {
     break;
    }
    if (($count_stressed | 0) == 0) {
     $final_stressed = $ix;
    }
    if ((HEAPU8[$p + 3 | 0] | 0) >= 4) {
     $final_stressed = $ix;
     $count_stressed = $count_stressed + 1 | 0;
    }
   }
  } while (0);
  $ix = $ix + 1 | 0;
  $p = $p + 24 | 0;
 }
 HEAP8[44283 + ($final_stressed * 24 | 0) | 0] = 7;
 if ((HEAP32[$1 + 324 >> 2] | 0) == 30313) {
  $p = 44280 + ($final_stressed * 24 | 0) | 0;
  if ((HEAPU8[$p + 7 | 0] | 0) == 0) {
   HEAP8[$p + 7 | 0] = __Z11PhonemeCodej(55) | 0;
  }
 }
 $pause = 1;
 $tone_promoted = 0;
 $p = 44280;
 $prev_p = 44280;
 $64 = HEAP32[10823] | 0;
 $prevw_tph = $64;
 $prev_tph = $64;
 $ix = 0;
 while (1) {
  if (($ix | 0) >= (HEAP32[19562] | 0)) {
   break;
  }
  do {
   if ((HEAPU8[$p + 17 | 0] | 0) == 0) {
    if ((HEAPU8[(HEAP32[$p + 8 >> 2] | 0) + 14 | 0] | 0) <= 50) {
     break;
    }
    $pause = 1;
    $prevw_tph = HEAP32[10823] | 0;
   }
  } while (0);
  if ((HEAP8[$p + 21 | 0] | 0) != 0) {
   $prev_tph = HEAP32[10823] | 0;
  }
  if ((HEAP16[$p >> 1] & 4 | 0) != 0) {
   $tone_ph = HEAPU8[$p + 7 | 0] | 0;
   $tph = HEAP32[43256 + ($tone_ph << 2) >> 2] | 0;
   if ((HEAP32[$1 + 324 >> 2] | 0) == 31336) {
    if (($tone_ph | 0) == 0) {
     do {
      if (($pause | 0) != 0) {
       label = 28;
      } else {
       if (($tone_promoted | 0) != 0) {
        label = 28;
        break;
       }
       $tone_ph = __Z11PhonemeCodej(12593) | 0;
      }
     } while (0);
     if ((label | 0) == 28) {
      label = 0;
      $tone_ph = __Z11PhonemeCodej(13621) | 0;
      $tone_promoted = 1;
     }
     HEAP8[$p + 7 | 0] = $tone_ph;
     $tph = HEAP32[43256 + ($tone_ph << 2) >> 2] | 0;
    } else {
     $tone_promoted = 0;
    }
    if (($ix | 0) == ($final_stressed | 0)) {
     if ((HEAP32[$tph >> 2] | 0) == 13621) {
      label = 35;
     } else {
      if ((HEAP32[$tph >> 2] | 0) == 12597) {
       label = 35;
      }
     }
     if ((label | 0) == 35) {
      label = 0;
      HEAP8[44283 + ($final_stressed * 24 | 0) | 0] = 6;
     }
    }
    if ((HEAP32[$prevw_tph >> 2] | 0) == 3420466) {
     if ((HEAP32[$tph >> 2] | 0) == 3420466) {
      HEAP8[$prev_p + 7 | 0] = __Z11PhonemeCodej(13619) | 0;
     } else {
      HEAP8[$prev_p + 7 | 0] = __Z11PhonemeCodej(12594) | 0;
     }
    }
    do {
     if ((HEAP32[$prev_tph >> 2] | 0) == 12597) {
      if ((HEAP32[$tph >> 2] | 0) != 12597) {
       break;
      }
      HEAP8[$prev_p + 7 | 0] = __Z11PhonemeCodej(13109) | 0;
     }
    } while (0);
    if ((HEAP32[$tph >> 2] | 0) == 12593) {
     if ((HEAP32[$prevw_tph >> 2] | 0) == 13621) {
      HEAP8[$p + 7 | 0] = __Z11PhonemeCodej(12850) | 0;
     }
     if ((HEAP32[$prevw_tph >> 2] | 0) == 13619) {
      HEAP8[$p + 7 | 0] = __Z11PhonemeCodej(13107) | 0;
     }
     if ((HEAP32[$prevw_tph >> 2] | 0) == 3420466) {
      HEAP8[$p + 7 | 0] = __Z11PhonemeCodej(13364) | 0;
     }
     HEAP8[$p + 3 | 0] = 0;
    }
   }
   $prev_p = $p;
   $229 = $tph;
   $prev_tph = $229;
   $prevw_tph = $229;
   $pause = 0;
  }
  $ix = $ix + 1 | 0;
  $p = $p + 24 | 0;
 }
 $p = 44280;
 $ix = 0;
 while (1) {
  if (($ix | 0) >= (HEAP32[19562] | 0)) {
   break;
  }
  if ((HEAP16[$p >> 1] & 4 | 0) != 0) {
   $tone_ph = HEAPU8[$p + 7 | 0] | 0;
   if ((HEAPU8[$p + 3 | 0] | 0) != 0) {
    if (($ix | 0) == ($final_stressed | 0)) {
     $pitch_adjust = $pitch_low;
    } else {
     $pitch_adjust = $pitch_adjust - $pitch_decrement | 0;
     if (($pitch_adjust | 0) <= ($pitch_low | 0)) {
      $pitch_adjust = $pitch_high;
     }
    }
   }
   if (($tone_ph | 0) == 0) {
    $tone_ph = 17;
    HEAP8[$p + 7 | 0] = $tone_ph;
   }
   HEAP8[$p + 22 | 0] = $pitch_adjust + (HEAPU8[(HEAP32[43256 + ($tone_ph << 2) >> 2] | 0) + 12 | 0] | 0);
   HEAP8[$p + 23 | 0] = $pitch_adjust + (HEAPU8[(HEAP32[43256 + ($tone_ph << 2) >> 2] | 0) + 13 | 0] | 0);
  }
  $ix = $ix + 1 | 0;
  $p = $p + 24 | 0;
 }
 STACKTOP = sp;
 return;
}
function __Z26GetTranslatedPhonemeStringi($phoneme_mode) {
 $phoneme_mode = $phoneme_mode | 0;
 var $1 = 0, $2 = 0, $ix = 0, $len = 0, $phon_out_ix = 0, $stress = 0, $c = 0, $p = 0, $buf = 0, $count = 0, $flags = 0, $use_ipa = 0, $use_tie = 0, $separate_phonemes = 0, $phon_buf = 0, $phon_buf2 = 0, $plist = 0, $12 = 0, $42 = 0, $61 = 0, $76 = 0, $232 = 0, $256 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 $c = sp | 0;
 $flags = sp + 8 | 0;
 $phon_buf = sp + 16 | 0;
 $phon_buf2 = sp + 48 | 0;
 $2 = $phoneme_mode;
 $phon_out_ix = 0;
 $separate_phonemes = 0;
 $use_ipa = $2 & 16;
 $use_tie = $2 & 15;
 do {
  if ((HEAP32[28532] | 0) == 0) {
   HEAP32[28492] = 500;
   $12 = _realloc(HEAP32[28532] | 0, HEAP32[28492] | 0) | 0;
   HEAP32[28532] = $12;
   if (($12 | 0) != 0) {
    break;
   }
   HEAP32[28492] = 0;
   $1 = 90696;
   $256 = $1;
   STACKTOP = sp;
   return $256 | 0;
  }
 } while (0);
 if (($use_tie | 0) >= 3) {
  $separate_phonemes = 95;
  $use_tie = 0;
 }
 $ix = 1;
 while (1) {
  if (($ix | 0) >= ((HEAP32[19562] | 0) - 2 | 0)) {
   label = 57;
   break;
  }
  $buf = $phon_buf | 0;
  $plist = 44280 + ($ix * 24 | 0) | 0;
  __Z15WritePhMnemonicPcP11PHONEME_TABP12PHONEME_LISTiPi($phon_buf2 | 0, HEAP32[$plist + 8 >> 2] | 0, $plist, $use_ipa, $flags) | 0;
  if ((HEAP8[$plist + 21 | 0] | 0) != 0) {
   $42 = $buf;
   $buf = $42 + 1 | 0;
   HEAP8[$42] = 32;
  } else {
   do {
    if (($separate_phonemes | 0) != 0) {
     if (($ix | 0) <= 1) {
      break;
     }
     __Z7utf8_inPiPKc($c, $phon_buf2 | 0) | 0;
     if ((HEAP32[$c >> 2] | 0) < 688) {
      label = 15;
     } else {
      if ((HEAP32[$c >> 2] | 0) > 879) {
       label = 15;
      }
     }
     if ((label | 0) == 15) {
      label = 0;
      $61 = $buf;
      $buf = $61 + 1 | 0;
      HEAP8[$61] = $separate_phonemes;
     }
    }
   } while (0);
  }
  if ((HEAP16[$plist >> 1] & 4 | 0) != 0) {
   $76 = HEAPU8[$plist + 3 | 0] | 0;
   $stress = $76;
   if (($76 | 0) > 1) {
    HEAP32[$c >> 2] = 0;
    if (($stress | 0) > 5) {
     $stress = 5;
    }
    if (($use_ipa | 0) != 0) {
     HEAP32[$c >> 2] = 716;
     if (($stress | 0) > 3) {
      HEAP32[$c >> 2] = 712;
     }
    } else {
     HEAP32[$c >> 2] = HEAP8[(HEAP32[5396] | 0) + $stress | 0] | 0;
    }
    if ((HEAP32[$c >> 2] | 0) != 0) {
     $buf = $buf + (__Z8utf8_outjPc(HEAP32[$c >> 2] | 0, $buf) | 0) | 0;
    }
   }
  }
  HEAP32[$flags >> 2] = 0;
  $count = 0;
  $p = $phon_buf2 | 0;
  while (1) {
   if ((HEAP8[$p] | 0) == 0) {
    break;
   }
   $p = $p + (__Z7utf8_inPiPKc($c, $p) | 0) | 0;
   if (($use_tie | 0) > 0) {
    do {
     if (($count | 0) > 0) {
      if ((HEAP32[$flags >> 2] & 1 << $count - 1 | 0) != 0) {
       break;
      }
      if ((HEAP32[$c >> 2] | 0) >= 688) {
       if ((HEAP32[$c >> 2] | 0) <= 879) {
        break;
       }
      }
      if ((__Z9iswalpha2i(HEAP32[$c >> 2] | 0) | 0) == 0) {
       break;
      }
      $buf = $buf + (__Z8utf8_outjPc(HEAP32[21576 + ($use_tie - 1 << 2) >> 2] | 0, $buf) | 0) | 0;
     }
    } while (0);
   }
   $buf = $buf + (__Z8utf8_outjPc(HEAP32[$c >> 2] | 0, $buf) | 0) | 0;
   $count = $count + 1 | 0;
  }
  if ((HEAPU8[(HEAP32[$plist + 8 >> 2] | 0) + 10 | 0] | 0) != 21) {
   if ((HEAP16[$plist >> 1] & 8 | 0) != 0) {
    $buf = __Z15WritePhMnemonicPcP11PHONEME_TABP12PHONEME_LISTiPi($buf, HEAP32[10826] | 0, 0, $use_ipa, 0) | 0;
   }
   do {
    if ((HEAP16[$plist >> 1] & 4 | 0) != 0) {
     if ((HEAPU8[$plist + 17 | 0] | 0) == 2) {
      break;
     }
     $buf = __Z15WritePhMnemonicPcP11PHONEME_TABP12PHONEME_LISTiPi($buf, HEAP32[10834] | 0, 0, $use_ipa, 0) | 0;
    }
   } while (0);
   if ((HEAPU8[$plist + 7 | 0] | 0) > 0) {
    $buf = __Z15WritePhMnemonicPcP11PHONEME_TABP12PHONEME_LISTiPi($buf, HEAP32[43256 + (HEAPU8[$plist + 7 | 0] << 2) >> 2] | 0, 0, $use_ipa, 0) | 0;
   }
  }
  $len = $buf - $phon_buf | 0;
  if (($phon_out_ix + $len | 0) >>> 0 >= (HEAP32[28492] | 0) >>> 0) {
   HEAP32[28492] = $phon_out_ix + $len + 500;
   $232 = _realloc(HEAP32[28532] | 0, HEAP32[28492] | 0) | 0;
   HEAP32[28532] = $232;
   if (($232 | 0) == 0) {
    label = 53;
    break;
   }
  }
  HEAP8[$phon_buf + $len | 0] = 0;
  _strcpy((HEAP32[28532] | 0) + $phon_out_ix | 0, $phon_buf | 0) | 0;
  $phon_out_ix = $phon_out_ix + $len | 0;
  $ix = $ix + 1 | 0;
 }
 if ((label | 0) == 53) {
  HEAP32[28492] = 0;
  $1 = 90696;
  $256 = $1;
  STACKTOP = sp;
  return $256 | 0;
 } else if ((label | 0) == 57) {
  HEAP8[(HEAP32[28532] | 0) + $phon_out_ix | 0] = 0;
  $1 = HEAP32[28532] | 0;
  $256 = $1;
  STACKTOP = sp;
  return $256 | 0;
 }
 return 0;
}
function __Z11LookupSpectP11PHONEME_TABiP10FMT_PARAMSPiP12PHONEME_LIST($this_ph, $which, $fmt_params, $n_frames, $plist) {
 $this_ph = $this_ph | 0;
 $which = $which | 0;
 $fmt_params = $fmt_params | 0;
 $n_frames = $n_frames | 0;
 $plist = $plist | 0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $ix = 0, $nf = 0, $nf1 = 0, $seq_break = 0, $frames = 0, $length1 = 0, $length_std = 0, $length_factor = 0, $seq = 0, $seq2 = 0, $seqk = 0, $seqk2 = 0, $frame = 0, $124 = 0, $359 = 0, $360 = 0, $361 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 8 | 0;
 $nf = sp | 0;
 $1 = $this_ph;
 $2 = $which;
 $3 = $fmt_params;
 $4 = $n_frames;
 $5 = $plist;
 $seq = (HEAP32[17080] | 0) + (HEAP32[$3 + 8 >> 2] | 0) | 0;
 $seqk = $seq;
 HEAP32[$nf >> 2] = HEAPU8[$seq + 2 | 0] | 0;
 if ((HEAP32[$nf >> 2] | 0) >= 25) {
  HEAP32[$nf >> 2] = 24;
 }
 HEAP32[9472] = (HEAP32[$3 + 24 >> 2] | 0) + (HEAP32[$3 + 12 >> 2] | 0);
 $seq_break = 0;
 $ix = 0;
 while (1) {
  if (($ix | 0) >= (HEAP32[$nf >> 2] | 0)) {
   break;
  }
  if ((HEAP16[$seq + 4 >> 1] & 1 | 0) != 0) {
   $frame = $seqk + 4 + ($ix << 6) | 0;
  } else {
   $frame = $seq + 4 + ($ix * 44 | 0) | 0;
  }
  HEAP32[104868 + ($ix << 3) >> 2] = $frame;
  HEAP16[104866 + ($ix << 3) >> 1] = HEAP16[$frame >> 1] | 0;
  HEAP16[104864 + ($ix << 3) >> 1] = HEAPU8[$frame + 16 | 0] | 0;
  if ((HEAP16[$frame >> 1] & 2 | 0) != 0) {
   $seq_break = $ix;
  }
  $ix = $ix + 1 | 0;
 }
 $frames = 104864;
 if (($seq_break | 0) > 0) {
  if (($2 | 0) == 1) {
   HEAP32[$nf >> 2] = $seq_break + 1;
  } else {
   $frames = 104864 + ($seq_break << 3) | 0;
   HEAP32[$nf >> 2] = (HEAP32[$nf >> 2] | 0) - $seq_break;
  }
 }
 do {
  if ((HEAPU8[$1 + 11 | 0] | 0) == 2) {
   if ((HEAP32[$3 + 20 >> 2] | 0) != 0) {
    break;
   }
   if ((HEAP32[$3 + 4 >> 2] | 0) == 0) {
    break;
   }
   $124 = __Z18FormantTransition2P10frameref_tPijjP11PHONEME_TABi($frames, $nf, HEAP32[$3 + 36 >> 2] | 0, HEAP32[$3 + 40 >> 2] | 0, 0, $2) | 0;
   HEAP32[9472] = (HEAP32[9472] | 0) + $124;
  }
 } while (0);
 $length1 = 0;
 $nf1 = (HEAP32[$nf >> 2] | 0) - 1 | 0;
 $ix = 0;
 while (1) {
  if (($ix | 0) >= ($nf1 | 0)) {
   break;
  }
  $length1 = $length1 + (HEAP16[$frames + ($ix << 3) >> 1] | 0) | 0;
  $ix = $ix + 1 | 0;
 }
 if ((HEAP32[$3 + 20 >> 2] | 0) != 0) {
  $seq2 = (HEAP32[17080] | 0) + (HEAP32[$3 + 20 >> 2] | 0) | 0;
  $seqk2 = $seq2;
  HEAP32[$nf >> 2] = (HEAP32[$nf >> 2] | 0) - 1;
  $ix = 0;
  while (1) {
   if (($ix | 0) >= (HEAPU8[$seq2 + 2 | 0] | 0)) {
    break;
   }
   if ((HEAP16[$seq2 + 4 >> 1] & 1 | 0) != 0) {
    $frame = $seqk2 + 4 + ($ix << 6) | 0;
   } else {
    $frame = $seq2 + 4 + ($ix * 44 | 0) | 0;
   }
   HEAP16[$frames + (HEAP32[$nf >> 2] << 3) >> 1] = HEAPU8[$frame + 16 | 0] | 0;
   if (($ix | 0) > 0) {
    HEAP32[$frames + (HEAP32[$nf >> 2] << 3) + 4 >> 2] = $frame;
    HEAP16[$frames + (HEAP32[$nf >> 2] << 3) + 2 >> 1] = HEAP16[$frame >> 1] | 0;
   }
   HEAP32[$nf >> 2] = (HEAP32[$nf >> 2] | 0) + 1;
   $ix = $ix + 1 | 0;
  }
  HEAP32[9044] = 0;
 }
 if (($length1 | 0) <= 0) {
  $359 = HEAP32[$nf >> 2] | 0;
  $360 = $4;
  HEAP32[$360 >> 2] = $359;
  $361 = $frames;
  STACKTOP = sp;
  return $361 | 0;
 }
 if (($2 | 0) == 2) {
  $length_std = (HEAP32[$3 + 44 >> 2] | 0) + (HEAP32[9472] | 0) - 45 | 0;
  if (($length_std | 0) < 10) {
   $length_std = 10;
  }
  if ((HEAP16[$5 >> 1] & 8 | 0) != 0) {
   $length_std = $length_std + (HEAPU8[(HEAP32[10826] | 0) + 14 | 0] << 1) | 0;
  }
  $length_factor = ($length_std << 8 | 0) / ($length1 | 0) | 0;
  $ix = 0;
  while (1) {
   if (($ix | 0) >= ($nf1 | 0)) {
    break;
   }
   HEAP16[$frames + ($ix << 3) >> 1] = (Math_imul(HEAP16[$frames + ($ix << 3) >> 1] | 0, $length_factor) | 0) / 256 | 0;
   $ix = $ix + 1 | 0;
  }
 } else {
  if (($2 | 0) == 1) {
   if ((HEAP32[$3 >> 2] | 0) == 1) {
    if ((HEAP32[$3 + 44 >> 2] | 0) < 130) {
     HEAP16[$frames >> 1] = (Math_imul(HEAP16[$frames >> 1] | 0, HEAP32[$3 + 44 >> 2] | 0) | 0) / 130 | 0;
    }
   }
  } else {
   if ((HEAP32[$3 + 44 >> 2] | 0) > 0) {
    HEAP32[9472] = (HEAP32[9472] | 0) + ((HEAP32[$3 + 44 >> 2] | 0) - $length1);
   }
  }
  if ((HEAP32[9472] | 0) != 0) {
   $length_factor = ($length1 + (HEAP32[9472] | 0) << 8 | 0) / ($length1 | 0) | 0;
   $ix = 0;
   while (1) {
    if (($ix | 0) >= ($nf1 | 0)) {
     break;
    }
    HEAP16[$frames + ($ix << 3) >> 1] = (Math_imul(HEAP16[$frames + ($ix << 3) >> 1] | 0, $length_factor) | 0) / 256 | 0;
    $ix = $ix + 1 | 0;
   }
  }
 }
 $359 = HEAP32[$nf >> 2] | 0;
 $360 = $4;
 HEAP32[$360 >> 2] = $359;
 $361 = $frames;
 STACKTOP = sp;
 return $361 | 0;
}
function __Z12RemoveEndingP10TranslatorPciS1_($tr, $word, $end_type, $word_copy) {
 $tr = $tr | 0;
 $word = $word | 0;
 $end_type = $end_type | 0;
 $word_copy = $word_copy | 0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $i = 0, $word_end = 0, $len_ending = 0, $end_flags = 0, $p = 0, $len = 0, $ending = 0, $39 = 0, $70 = 0, $191 = 0, $220 = 0, $304 = 0, label = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 56 | 0;
 $ending = sp | 0;
 $1 = $tr;
 $2 = $word;
 $3 = $end_type;
 $4 = $word_copy;
 $word_end = $2;
 while (1) {
  if ((HEAP8[$word_end] | 0) == 32) {
   break;
  }
  if ((HEAP8[$word_end] | 0) == 69) {
   HEAP8[$word_end] = 101;
  }
  $word_end = $word_end + 1 | 0;
 }
 $i = $word_end - $2 | 0;
 if (($4 | 0) != 0) {
  _memcpy($4 | 0, $2 | 0, $i) | 0;
  HEAP8[$4 + $i | 0] = 0;
 }
 $39 = $3 & 63;
 $i = $39;
 $len_ending = $39;
 while (1) {
  if (($i | 0) <= 0) {
   break;
  }
  $word_end = $word_end - 1 | 0;
  while (1) {
   if ((HEAP8[$word_end] & 192 | 0) != 128) {
    break;
   }
   $word_end = $word_end - 1 | 0;
   $len_ending = $len_ending + 1 | 0;
  }
  $i = $i - 1 | 0;
 }
 $i = 0;
 while (1) {
  if (($i | 0) < ($len_ending | 0)) {
   $70 = ($i | 0) < 49;
  } else {
   $70 = 0;
  }
  if (!$70) {
   break;
  }
  HEAP8[$ending + $i | 0] = HEAP8[$word_end + $i | 0] | 0;
  HEAP8[$word_end + $i | 0] = 32;
  $i = $i + 1 | 0;
 }
 HEAP8[$ending + $i | 0] = 0;
 $word_end = $word_end - 1 | 0;
 $end_flags = $3 & 65520 | 4;
 if (($3 & 512 | 0) != 0) {
  if ((HEAP8[$word_end | 0] | 0) == 105) {
   HEAP8[$word_end | 0] = 121;
  }
 }
 if (($3 & 256 | 0) != 0) {
  if ((HEAP32[$1 + 324 >> 2] | 0) == 28268) {
   do {
    if ((HEAP8[$word_end | 0] & 128 | 0) == 0) {
     if ((HEAP8[$word_end - 1 | 0] & 128 | 0) != 0) {
      break;
     }
     if ((__Z7IsVowelP10Translatori($1, HEAP8[$word_end - 1 | 0] | 0) | 0) == 0) {
      break;
     }
     if ((__ZL8IsLetterP10Translatorii($1, HEAP8[$word_end | 0] | 0, 2) | 0) == 0) {
      break;
     }
     if ((__Z7IsVowelP10Translatori($1, HEAP8[$word_end - 2 | 0] | 0) | 0) != 0) {
      break;
     }
     HEAP8[$word_end + 1 | 0] = HEAP8[$word_end | 0] | 0;
     HEAP8[$word_end | 0] = HEAP8[$word_end - 1 | 0] | 0;
     HEAP8[$word_end + 2 | 0] = 32;
    }
   } while (0);
  } else {
   if ((HEAP32[$1 + 324 >> 2] | 0) == 25966) {
    do {
     if ((__ZL8IsLetterP10Translatorii($1, HEAP8[$word_end - 1 | 0] | 0, 7) | 0) != 0) {
      if ((__ZL8IsLetterP10Translatorii($1, HEAP8[$word_end | 0] | 0, 1) | 0) == 0) {
       label = 47;
       break;
      }
      $i = 0;
      while (1) {
       $191 = HEAP32[23592 + ($i << 2) >> 2] | 0;
       $p = $191;
       if (($191 | 0) == 0) {
        break;
       }
       $len = _strlen($p | 0) | 0;
       if ((_memcmp($p | 0, $word_end + (1 - $len) | 0, $len | 0) | 0) == 0) {
        label = 41;
        break;
       }
       $i = $i + 1 | 0;
      }
      if ((label | 0) == 41) {}
      if (($p | 0) == 0) {
       $end_flags = $end_flags | 16;
      }
     } else {
      label = 47;
     }
    } while (0);
    if ((label | 0) == 47) {
     $i = 0;
     while (1) {
      $220 = HEAP32[23600 + ($i << 2) >> 2] | 0;
      $p = $220;
      if (($220 | 0) == 0) {
       break;
      }
      $len = _strlen($p | 0) | 0;
      if ((_memcmp($p | 0, $word_end + (1 - $len) | 0, $len | 0) | 0) == 0) {
       label = 50;
       break;
      }
      $i = $i + 1 | 0;
     }
     if ((label | 0) == 50) {
      $end_flags = $end_flags | 16;
     }
    }
   } else {
    if ((HEAP32[$1 + 316 >> 2] | 0) != 0) {
     $end_flags = $end_flags | 16;
    }
   }
  }
  if (($end_flags & 16 | 0) != 0) {
   __Z8utf8_outjPc(HEAP32[$1 + 316 >> 2] | 0, $word_end + 1 | 0) | 0;
   if ((HEAP32[19530] | 0) == 2) {
    _fprintf(HEAP32[19596] | 0, 15224, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 7 & -8, HEAP32[tempVarArgs >> 2] = 0, tempVarArgs) | 0) | 0;
    STACKTOP = tempVarArgs;
   }
  }
 }
 do {
  if (($3 & 2048 | 0) != 0) {
   if ((HEAP32[$1 + 8304 >> 2] | 0) != 0) {
    break;
   }
   HEAP32[$1 + 8304 >> 2] = 1;
  }
 } while (0);
 if ((_strcmp($ending | 0, 15096) | 0) == 0) {
  label = 69;
 } else {
  if ((_strcmp($ending | 0, 14992) | 0) == 0) {
   label = 69;
  }
 }
 if ((label | 0) == 69) {
  $end_flags = $end_flags | 8;
 }
 if ((HEAP8[$ending | 0] | 0) != 39) {
  $304 = $end_flags;
  STACKTOP = sp;
  return $304 | 0;
 }
 $end_flags = $end_flags & -5;
 $304 = $end_flags;
 STACKTOP = sp;
 return $304 | 0;
}
function __Z18FormantTransition2P10frameref_tPijjP11PHONEME_TABi($seq, $n_frames, $data1, $data2, $other_ph, $which) {
 $seq = $seq | 0;
 $n_frames = $n_frames | 0;
 $data1 = $data1 | 0;
 $data2 = $data2 | 0;
 $other_ph = $other_ph | 0;
 $which = $which | 0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $ix = 0, $formant = 0, $next_rms = 0, $len = 0, $rms = 0, $f1 = 0, $f2 = 0, $f2_min = 0, $f2_max = 0, $f3_adj = 0, $f3_amp = 0, $flags = 0, $vcolour = 0, $fr = 0, $85 = 0, $91 = 0, $209 = 0, $210 = 0, $305 = 0, $316 = 0, $335 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = $seq;
 $3 = $n_frames;
 $4 = $data1;
 $5 = $data2;
 $6 = $other_ph;
 $7 = $which;
 $fr = 0;
 if ((HEAP32[$3 >> 2] | 0) < 2) {
  $1 = 0;
  $335 = $1;
  STACKTOP = sp;
  return $335 | 0;
 }
 $len = ($4 & 63) << 1;
 $rms = $4 >>> 6 & 63;
 $flags = $4 >>> 12;
 $f2 = ($5 & 63) * 50 | 0;
 $f2_min = (($5 >>> 6 & 31) - 15 | 0) * 50 | 0;
 $f2_max = (($5 >>> 11 & 31) - 15 | 0) * 50 | 0;
 $f3_adj = (($5 >>> 16 & 31) - 15 | 0) * 50 | 0;
 $f3_amp = ($5 >>> 21 & 31) << 3;
 $f1 = $5 >>> 26 & 7;
 $vcolour = $5 >>> 29;
 do {
  if (($6 | 0) != 0) {
   if ((HEAP32[$6 >> 2] | 0) != 63) {
    break;
   }
   $flags = $flags | 8;
  }
 } while (0);
 if (($7 | 0) == 1) {
  $fr = __ZL9CopyFrameP7frame_ti(HEAP32[$2 + 4 >> 2] | 0, 0) | 0;
  HEAP32[$2 + 4 >> 2] = $fr;
  HEAP16[$2 >> 1] = 50;
  if (($len | 0) > 0) {
   HEAP16[$2 >> 1] = $len;
  }
  $85 = $2 + 2 | 0;
  HEAP16[$85 >> 1] = HEAP16[$85 >> 1] | 16384;
  $91 = $fr | 0;
  HEAP16[$91 >> 1] = HEAP16[$91 >> 1] | 16384;
  $next_rms = HEAPU8[(HEAP32[$2 + 12 >> 2] | 0) + 17 | 0] | 0;
  if ((HEAP32[(HEAP32[144] | 0) + 132 >> 2] | 0) != 0) {
   HEAP8[$fr + 39 | 0] = (HEAPU8[(HEAP32[$2 + 12 >> 2] | 0) + 39 | 0] | 0) - 4;
  }
  if (($f2 | 0) != 0) {
   if (($rms & 32 | 0) != 0) {
    __ZL13set_frame_rmsP7frame_ti($fr, (Math_imul($next_rms, $rms & 31) | 0) / 30 | 0);
   }
   __ZL14AdjustFormantsP7frame_tiiiiiii($fr, $f2, $f2_min, $f2_max, $f1, $f3_adj, $f3_amp, $flags);
   if (($rms & 32 | 0) == 0) {
    __ZL13set_frame_rmsP7frame_ti($fr, $rms << 1);
   }
  } else {
   if (($flags & 8 | 0) != 0) {
    __ZL13set_frame_rmsP7frame_ti($fr, ($next_rms * 24 | 0 | 0) / 32 | 0);
   } else {
    __ZL13set_frame_rmsP7frame_ti($fr, 28);
   }
  }
  if (($flags & 8 | 0) != 0) {
   HEAP32[31348] = ((__ZL14VowelClosenessP7frame_t($fr) | 0) << 8) + 2048;
  }
 } else {
  $rms = $rms << 1;
  if (($f2 | 0) != 0) {
   label = 26;
  } else {
   if (($flags | 0) != 0) {
    label = 26;
   }
  }
  if ((label | 0) == 26) {
   if (($flags & 8 | 0) != 0) {
    $fr = __ZL9CopyFrameP7frame_ti(HEAP32[$2 + ((HEAP32[$3 >> 2] | 0) - 1 << 3) + 4 >> 2] | 0, 0) | 0;
    HEAP32[$2 + ((HEAP32[$3 >> 2] | 0) - 1 << 3) + 4 >> 2] = $fr;
    $rms = 35;
    HEAP32[31348] = ((__ZL14VowelClosenessP7frame_t($fr) | 0) << 8) + 1024;
   } else {
    $209 = $3;
    $210 = HEAP32[$209 >> 2] | 0;
    HEAP32[$209 >> 2] = $210 + 1;
    $fr = __ZL18DuplicateLastFrameP10frameref_tii($2, $210, $len) | 0;
    if (($len | 0) > 36) {
     HEAP32[9472] = (HEAP32[9472] | 0) + ($len - 36);
    }
    if (($f2 | 0) != 0) {
     __ZL14AdjustFormantsP7frame_tiiiiiii($fr, $f2, $f2_min, $f2_max, $f1, $f3_adj, $f3_amp, $flags);
    }
   }
   __ZL13set_frame_rmsP7frame_ti($fr, $rms);
   do {
    if (($vcolour | 0) > 0) {
     if (($vcolour | 0) > 2) {
      break;
     }
     $ix = 0;
     while (1) {
      if (($ix | 0) >= (HEAP32[$3 >> 2] | 0)) {
       break;
      }
      $fr = __ZL9CopyFrameP7frame_ti(HEAP32[$2 + ($ix << 3) + 4 >> 2] | 0, 0) | 0;
      HEAP32[$2 + ($ix << 3) + 4 >> 2] = $fr;
      $formant = 1;
      while (1) {
       if (($formant | 0) > 5) {
        break;
       }
       HEAP16[$fr + 2 + ($formant << 1) >> 1] = (Math_imul(HEAP16[$fr + 2 + ($formant << 1) >> 1] | 0, HEAP16[21592 + (($vcolour - 1 | 0) * 10 | 0) + ($formant - 1 << 1) >> 1] | 0) | 0) / 256 | 0;
       $formant = $formant + 1 | 0;
      }
      $ix = $ix + 1 | 0;
     }
    }
   } while (0);
  }
 }
 if (($fr | 0) != 0) {
  if (($flags & 4 | 0) != 0) {
   $305 = $fr | 0;
   HEAP16[$305 >> 1] = HEAP16[$305 >> 1] | 32;
  }
  if (($flags & 2 | 0) != 0) {
   $316 = $fr | 0;
   HEAP16[$316 >> 1] = HEAP16[$316 >> 1] | 16;
  }
 }
 if (($flags & 64 | 0) != 0) {
  __ZL7DoPauseii(20, 0);
 }
 if (($flags & 16 | 0) != 0) {
  $1 = $len;
  $335 = $1;
  STACKTOP = sp;
  return $335 | 0;
 } else {
  $1 = 0;
  $335 = $1;
  STACKTOP = sp;
  return $335 | 0;
 }
 return 0;
}
function __ZL19receive_from_mbrolaPvj($buffer, $bufsize) {
 $buffer = $buffer | 0;
 $bufsize = $bufsize | 0;
 var $1 = 0, $2 = 0, $3 = 0, $result = 0, $wait = 0, $cursize = 0, $pollfd = 0, $nfds = 0, $idle = 0, $head = 0, $left = 0, $error = 0, $obtained = 0, $43 = 0, $50 = 0, $115 = 0, $123 = 0, $159 = 0, $172 = 0, label = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 24 | 0;
 $pollfd = sp | 0;
 $2 = $buffer;
 $3 = $bufsize;
 $wait = 1;
 $cursize = 0;
 if ((HEAP32[26928] | 0) == 0) {
  $1 = -1;
  $172 = $1;
  STACKTOP = sp;
  return $172 | 0;
 }
 L5 : do {
  $nfds = 0;
  HEAP32[$pollfd >> 2] = HEAP32[28582];
  HEAP16[$pollfd + 4 >> 1] = 1;
  $nfds = $nfds + 1 | 0;
  HEAP32[$pollfd + 8 >> 2] = HEAP32[28580];
  HEAP16[$pollfd + 12 >> 1] = 1;
  $nfds = $nfds + 1 | 0;
  if ((HEAP32[28360] | 0) != 0) {
   HEAP32[$pollfd + 16 >> 2] = HEAP32[31352];
   HEAP16[$pollfd + 20 >> 1] = 4;
   $nfds = $nfds + 1 | 0;
  }
  $idle = __ZL14mbrola_is_idlev() | 0;
  if (($idle | 0) != 0) {
   $43 = 0;
  } else {
   $43 = $wait;
  }
  $result = _poll($pollfd | 0, $nfds | 0, $43 | 0) | 0;
  if (($result | 0) == -1) {
   label = 10;
   break;
  }
  L15 : do {
   if (($result | 0) == 0) {
    if (($idle | 0) != 0) {
     label = 13;
     break L5;
    }
    if (($wait | 0) >= 3750) {
     label = 15;
     break L5;
    }
    $wait = $wait << 2;
   } else {
    $wait = 1;
    if ((HEAP16[$pollfd + 14 >> 1] | 0) != 0) {
     if ((__ZL17mbrola_has_errorsv() | 0) != 0) {
      label = 19;
      break L5;
     }
    }
    do {
     if ((HEAP32[28360] | 0) != 0) {
      if ((HEAP16[$pollfd + 22 >> 1] | 0) == 0) {
       break;
      }
      $head = HEAP32[28360] | 0;
      $left = (HEAP32[$head + 8 >> 2] | 0) - (HEAP32[$head + 4 >> 2] | 0) | 0;
      $result = _write(HEAP32[31352] | 0, $head + 12 + (HEAP32[$head + 4 >> 2] | 0) | 0, $left | 0) | 0;
      if (($result | 0) == -1) {
       label = 23;
       break L5;
      }
      if (($result | 0) != ($left | 0)) {
       $123 = $head + 4 | 0;
       HEAP32[$123 >> 2] = (HEAP32[$123 >> 2] | 0) + $result;
      } else {
       HEAP32[28360] = HEAP32[$head >> 2];
       _free($head);
       if ((HEAP32[28360] | 0) != 0) {
        break L15;
       }
       HEAP32[28358] = 0;
      }
     }
    } while (0);
    if ((HEAP16[$pollfd + 6 >> 1] | 0) != 0) {
     $obtained = _read(HEAP32[28582] | 0, $2 + $cursize | 0, $3 - $cursize | 0) | 0;
     if (($obtained | 0) == -1) {
      label = 36;
      break L5;
     }
     $cursize = $cursize + $obtained | 0;
     HEAP32[26688] = 3;
    }
   }
  } while (0);
 } while ($cursize >>> 0 < $3 >>> 0);
 if ((label | 0) == 19) {
  $1 = -1;
  $172 = $1;
  STACKTOP = sp;
  return $172 | 0;
 } else if ((label | 0) == 10) {
  $50 = _strerror(HEAP32[(___errno_location() | 0) >> 2] | 0) | 0;
  __ZL3errPKcz(16144, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $50, tempVarArgs) | 0);
  STACKTOP = tempVarArgs;
  $1 = -1;
  $172 = $1;
  STACKTOP = sp;
  return $172 | 0;
 } else if ((label | 0) == 13) {
  HEAP32[26688] = 1;
 } else if ((label | 0) == 15) {
  HEAP32[26688] = 4;
  __ZL3errPKcz(15992, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 7 & -8, HEAP32[tempVarArgs >> 2] = 0, tempVarArgs) | 0);
  STACKTOP = tempVarArgs;
 } else if ((label | 0) == 36) {
  $159 = _strerror(HEAP32[(___errno_location() | 0) >> 2] | 0) | 0;
  __ZL3errPKcz(15744, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $159, tempVarArgs) | 0);
  STACKTOP = tempVarArgs;
  $1 = -1;
  $172 = $1;
  STACKTOP = sp;
  return $172 | 0;
 } else if ((label | 0) == 23) {
  $error = HEAP32[(___errno_location() | 0) >> 2] | 0;
  do {
   if (($error | 0) == 32) {
    if ((__ZL17mbrola_has_errorsv() | 0) == 0) {
     break;
    }
    $1 = -1;
    $172 = $1;
    STACKTOP = sp;
    return $172 | 0;
   }
  } while (0);
  $115 = _strerror($error | 0) | 0;
  __ZL3errPKcz(15880, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $115, tempVarArgs) | 0);
  STACKTOP = tempVarArgs;
  $1 = -1;
  $172 = $1;
  STACKTOP = sp;
  return $172 | 0;
 }
 $1 = $cursize;
 $172 = $1;
 STACKTOP = sp;
 return $172 | 0;
}
function __Z12WavegenFill2i($fill_zeros) {
 $fill_zeros = $fill_zeros | 0;
 var $1 = 0, $2 = 0, $q = 0, $length = 0, $result = 0, $marker_type = 0, $30 = 0, $214 = 0, $232 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = $fill_zeros;
 while (1) {
  if ((HEAP32[19448] | 0) >>> 0 >= (HEAP32[19450] | 0) >>> 0) {
   label = 42;
   break;
  }
  if ((__Z9WcmdqUsedv() | 0) <= 0) {
   break;
  }
  $result = 0;
  $q = 33456 + (HEAP32[8362] << 4) | 0;
  $length = HEAP32[$q + 4 >> 2] | 0;
  switch (HEAP32[$q >> 2] & 255 | 0) {
  case 10:
   {
    $marker_type = (HEAP32[$q >> 2] | 0) >>> 8;
    __Z11MarkerEventijiiPh($marker_type, HEAP32[$q + 4 >> 2] | 0, HEAP32[$q + 8 >> 2] | 0, HEAP32[$q + 12 >> 2] | 0, HEAP32[19448] | 0);
    if (($marker_type | 0) == 1) {
     HEAP32[22644] = HEAP32[$q + 4 >> 2] & 16777215;
    }
    break;
   }
  case 9:
   {
    __Z8SetPitchiPhii($length, HEAP32[$q + 8 >> 2] | 0, (HEAP32[$q + 12 >> 2] | 0) >>> 16, HEAP32[$q + 12 >> 2] & 65535);
    break;
   }
  case 5:
   {
    if ((HEAP32[26106] | 0) == 0) {
     HEAP32[26108] = (HEAP32[26108] | 0) - $length;
    }
    HEAP32[8351] = 0;
    HEAP32[8359] = 100;
    __Z10KlattReseti(1);
    $result = __ZL11PlaySilenceii($length, HEAP32[26106] | 0) | 0;
    break;
   }
  case 6:
   {
    HEAP32[26108] = HEAP32[30926];
    HEAP32[8351] = 0;
    __Z10KlattReseti(1);
    $result = __ZL8PlayWaveiiPhii($length, HEAP32[26106] | 0, HEAP32[$q + 8 >> 2] | 0, HEAP32[$q + 12 >> 2] & 255, (HEAP32[$q + 12 >> 2] | 0) >>> 8) | 0;
    break;
   }
  case 7:
   {
    HEAP32[8353] = (HEAP32[$q + 12 >> 2] | 0) >>> 8;
    HEAP32[8352] = HEAP32[$q + 12 >> 2] & 255;
    HEAP32[8351] = $length & 65535;
    HEAP32[8355] = $length >> 16 & 65535;
    if ((HEAP32[8352] | 0) == 0) {
     HEAP32[8351] = HEAP32[8351] << 1;
     HEAP32[8355] = HEAP32[8355] << 1;
    }
    HEAP32[8354] = 0;
    HEAP32[8356] = 0;
    HEAP32[8350] = HEAP32[$q + 8 >> 2];
    break;
   }
  case 4:
   {
    HEAP32[8351] = 0;
    label = 24;
    break;
   }
  case 3:
   {
    label = 24;
    break;
   }
  case 2:
   {
    HEAP32[8351] = 0;
    label = 26;
    break;
   }
  case 1:
   {
    label = 26;
    break;
   }
  case 8:
   {
    __ZL12SetAmplitudeiPhi($length, HEAP32[$q + 8 >> 2] | 0, HEAP32[$q + 12 >> 2] | 0);
    break;
   }
  case 11:
   {
    __Z15WavegenSetVoiceP7voice_t(HEAP32[$q + 8 >> 2] | 0);
    _free(HEAP32[$q + 8 >> 2] | 0);
    break;
   }
  case 12:
   {
    __Z11SetEmbeddedii(HEAP32[$q + 4 >> 2] | 0, HEAP32[$q + 8 >> 2] | 0);
    break;
   }
  case 13:
   {
    $result = __Z10MbrolaFilliii($length, HEAP32[26106] | 0, (Math_imul(HEAP32[6658] | 0, HEAP32[(HEAP32[8292] | 0) + 112 >> 2] | 0) | 0) / 64 | 0) | 0;
    break;
   }
  case 14:
   {
    $214 = HEAP32[$q + 4 >> 2] | 0;
    HEAP32[8359] = $214;
    if (($214 | 0) == 0) {
     HEAP32[8359] = 100;
    }
    break;
   }
  case 15:
   {
    HEAPF64[83] = +((HEAP32[$q + 4 >> 2] | 0) >>> 0 >>> 0) / 1024.0;
    break;
   }
  default:
   {}
  }
  if ((label | 0) == 24) {
   label = 0;
   HEAP32[26108] = HEAP32[30926];
   $result = __ZL8Wavegen2iiiP7frame_tS0_($length & 65535, (HEAP32[$q + 4 >> 2] | 0) >>> 16, HEAP32[26106] | 0, HEAP32[$q + 8 >> 2] | 0, HEAP32[$q + 12 >> 2] | 0) | 0;
  } else if ((label | 0) == 26) {
   label = 0;
   HEAP32[26108] = HEAP32[30926];
   $result = __Z14Wavegen_Klatt2iiiP7frame_tS0_($length & 65535, (HEAP32[$q + 4 >> 2] | 0) >>> 16, HEAP32[26106] | 0, HEAP32[$q + 8 >> 2] | 0, HEAP32[$q + 12 >> 2] | 0) | 0;
  }
  if (($result | 0) == 0) {
   __ZL12WcmdqIncHeadv();
   HEAP32[26106] = 0;
  } else {
   HEAP32[26106] = 1;
  }
 }
 if ((label | 0) == 42) {
  $1 = 0;
  $232 = $1;
  STACKTOP = sp;
  return $232 | 0;
 }
 do {
  if ((HEAP32[26108] | 0) > 0) {
   HEAP32[26106] = __ZL11PlaySilenceii(HEAP32[26108] | 0, HEAP32[26106] | 0) | 0;
   if ((HEAP32[26106] | 0) != 1) {
    break;
   }
   $1 = 0;
   $232 = $1;
   STACKTOP = sp;
   return $232 | 0;
  }
 } while (0);
 if (($2 | 0) != 0) {
  while (1) {
   if ((HEAP32[19448] | 0) >>> 0 >= (HEAP32[19450] | 0) >>> 0) {
    break;
   }
   $30 = HEAP32[19448] | 0;
   HEAP32[19448] = $30 + 1;
   HEAP8[$30] = 0;
  }
 }
 $1 = 1;
 $232 = $1;
 STACKTOP = sp;
 return $232 | 0;
}
function __Z16PeaksToHarmspectP15wavegen_peaks_tiPii($peaks, $pitch, $htab, $control) {
 $peaks = $peaks | 0;
 $pitch = $pitch | 0;
 $htab = $htab | 0;
 $control = $control | 0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $f = 0, $p = 0, $fp = 0, $fhi = 0, $h = 0, $pk = 0, $hmax = 0, $hmax_samplerate = 0, $x = 0, $y = 0, $h2 = 0, $72 = 0, $120 = 0, $121 = 0, $124 = 0, $152 = 0, $153 = 0, $156 = 0, $186 = 0, $189 = 0, $258 = 0, $320 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = $peaks;
 $3 = $pitch;
 $4 = $htab;
 $5 = $control;
 if ((HEAP32[8292] | 0) == 0) {
  $1 = 1;
  $320 = $1;
  STACKTOP = sp;
  return $320 | 0;
 }
 $hmax = ((HEAP32[$2 + ((HEAP32[(HEAP32[8292] | 0) + 104 >> 2] | 0) * 80 | 0) >> 2] | 0) + (HEAP32[$2 + ((HEAP32[(HEAP32[8292] | 0) + 104 >> 2] | 0) * 80 | 0) + 12 >> 2] | 0) | 0) / ($3 | 0) | 0;
 if (($hmax | 0) >= 400) {
  $hmax = 399;
 }
 $hmax_samplerate = ((((HEAP32[9496] | 0) * 19 | 0 | 0) / 40 | 0) << 16 | 0) / ($3 | 0) | 0;
 if (($hmax | 0) > ($hmax_samplerate | 0)) {
  $hmax = $hmax_samplerate;
 }
 $h = 0;
 while (1) {
  if (($h | 0) > ($hmax | 0)) {
   break;
  }
  HEAP32[$4 + ($h << 2) >> 2] = 0;
  $h = $h + 1 | 0;
 }
 $h = 0;
 $pk = 0;
 while (1) {
  if (($pk | 0) > (HEAP32[(HEAP32[8292] | 0) + 104 >> 2] | 0)) {
   break;
  }
  $p = $2 + ($pk * 80 | 0) | 0;
  do {
   if ((HEAP32[$p + 4 >> 2] | 0) == 0) {
    label = 15;
   } else {
    $72 = HEAP32[$p >> 2] | 0;
    $fp = $72;
    if (($72 | 0) == 0) {
     label = 15;
     break;
    }
    $fhi = (HEAP32[$p >> 2] | 0) + (HEAP32[$p + 12 >> 2] | 0) | 0;
    $h = (((HEAP32[$p >> 2] | 0) - (HEAP32[$p + 8 >> 2] | 0) | 0) / ($3 | 0) | 0) + 1 | 0;
    if (($h | 0) <= 0) {
     $h = 1;
    }
    $f = Math_imul($3, $h) | 0;
    while (1) {
     if (($f | 0) >= ($fp | 0)) {
      break;
     }
     $120 = Math_imul(HEAPU8[(HEAP32[26718] | 0) + (($fp - $f | 0) / (HEAP32[$p + 8 >> 2] >> 8 | 0) | 0) | 0] | 0, HEAP32[$p + 4 >> 2] | 0) | 0;
     $121 = $h;
     $h = $121 + 1 | 0;
     $124 = $4 + ($121 << 2) | 0;
     HEAP32[$124 >> 2] = (HEAP32[$124 >> 2] | 0) + $120;
     $f = $f + $3 | 0;
    }
    while (1) {
     if (($f | 0) >= ($fhi | 0)) {
      break;
     }
     $152 = Math_imul(HEAPU8[(HEAP32[26718] | 0) + (($f - $fp | 0) / (HEAP32[$p + 12 >> 2] >> 8 | 0) | 0) | 0] | 0, HEAP32[$p + 4 >> 2] | 0) | 0;
     $153 = $h;
     $h = $153 + 1 | 0;
     $156 = $4 + ($153 << 2) | 0;
     HEAP32[$156 >> 2] = (HEAP32[$156 >> 2] | 0) + $152;
     $f = $f + $3 | 0;
    }
   }
  } while (0);
  if ((label | 0) == 15) {
   label = 0;
  }
  $pk = $pk + 1 | 0;
 }
 $y = (HEAP32[$2 + 84 >> 2] | 0) * 10 | 0;
 $h2 = 65536e3 / ($3 | 0) | 0;
 if (($h2 | 0) > 0) {
  $x = ($y | 0) / ($h2 | 0) | 0;
  $h = 1;
  while (1) {
   if (($y | 0) <= 0) {
    break;
   }
   $186 = $h;
   $h = $186 + 1 | 0;
   $189 = $4 + ($186 << 2) | 0;
   HEAP32[$189 >> 2] = (HEAP32[$189 >> 2] | 0) + $y;
   $y = $y - $x | 0;
  }
 }
 while (1) {
  if (($pk | 0) >= 9) {
   break;
  }
  $x = HEAP32[$2 + ($pk * 80 | 0) + 4 >> 2] >> 14;
  HEAP32[115416 + ($pk << 2) >> 2] = ((Math_imul($x, $x) | 0) * 5 | 0 | 0) / 2 | 0;
  if (($5 | 0) == 0) {
   HEAP32[113976 + ($pk << 2) >> 2] = (HEAP32[$2 + ($pk * 80 | 0) >> 2] | 0) / ($3 | 0) | 0;
  }
  if ((HEAP32[113976 + ($pk << 2) >> 2] | 0) >= ($hmax_samplerate | 0)) {
   HEAP32[115416 + ($pk << 2) >> 2] = 0;
  }
  $pk = $pk + 1 | 0;
 }
 $f = 0;
 $h = 0;
 while (1) {
  if (($h | 0) > ($hmax | 0)) {
   break;
  }
  $x = HEAP32[$4 + ($h << 2) >> 2] >> 15;
  HEAP32[$4 + ($h << 2) >> 2] = (Math_imul($x, $x) | 0) >> 8;
  $258 = $f >> 19;
  if (($258 | 0) < 1e3) {
   HEAP32[$4 + ($h << 2) >> 2] = (Math_imul(HEAP32[$4 + ($h << 2) >> 2] | 0, HEAPU8[(HEAP32[8292] | 0) + 364 + $258 | 0] | 0) | 0) >> 13;
  }
  $h = $h + 1 | 0;
  $f = $f + $3 | 0;
 }
 HEAP32[$4 + 4 >> 2] = (Math_imul(HEAP32[$4 + 4 >> 2] | 0, HEAP32[6714] | 0) | 0) / 8 | 0;
 if (($5 & 1 | 0) != 0) {
  $h = 1;
  while (1) {
   if (($h | 0) >= 30) {
    break;
   }
   HEAP32[107208 + ($h << 2) >> 2] = (HEAP32[$4 + ($h << 2) >> 2] | 0) - (HEAP32[(HEAP32[26692] | 0) + ($h << 2) >> 2] | 0) >> 3;
   $h = $h + 1 | 0;
  }
 }
 $1 = $hmax;
 $320 = $1;
 STACKTOP = sp;
 return $320 | 0;
}
function __ZL17SetHeadIntonationP4TUNEiii($tune, $syl_ix, $end_ix, $control) {
 $tune = $tune | 0;
 $syl_ix = $syl_ix | 0;
 $end_ix = $end_ix | 0;
 $control = $control | 0;
 var $1 = 0, $2 = 0, $3 = 0, $stress = 0, $syl = 0, $ix = 0, $pitch = 0, $increment = 0, $n_steps = 0, $stage = 0, $initial = 0, $overflow_ix = 0, $pitch_range = 0, $pitch_range_abs = 0, $drops = 0, $n_unstressed = 0, $unstressed_ix = 0, $unstressed_inc = 0, $used_onset = 0, $head_final = 0, $secondary = 0, $158 = 0, $257 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = $tune;
 $2 = $syl_ix;
 $3 = $end_ix;
 $pitch = 0;
 $increment = 0;
 $n_steps = 0;
 $overflow_ix = 0;
 $n_unstressed = 0;
 $unstressed_ix = 0;
 $used_onset = 0;
 $head_final = $3;
 $secondary = 2;
 $pitch_range = (HEAPU8[$1 + 32 | 0] | 0) - (HEAPU8[$1 + 31 | 0] | 0) << 8;
 $pitch_range_abs = Math_abs($pitch_range | 0) | 0;
 $drops = 24928;
 $initial = 1;
 $stage = 0;
 if ((HEAPU8[$1 + 30 | 0] | 0) == 255) {
  $stage = 1;
 }
 if ((HEAPU8[$1 + 33 | 0] | 0) != 255) {
  $ix = $3 - 1 | 0;
  while (1) {
   if (($ix | 0) < ($2 | 0)) {
    break;
   }
   if ((HEAP8[(HEAP32[28524] | 0) + ($ix * 6 | 0) | 0] | 0) >= 4) {
    label = 7;
    break;
   }
   $ix = $ix - 1 | 0;
  }
  if ((label | 0) == 7) {
   $head_final = $ix;
  }
 }
 while (1) {
  if (($2 | 0) >= ($3 | 0)) {
   break;
  }
  $syl = (HEAP32[28524] | 0) + ($2 * 6 | 0) | 0;
  $stress = HEAP8[$syl | 0] | 0;
  if (($initial | 0) != 0) {
   label = 15;
  } else {
   if (($stress | 0) >= 4) {
    label = 15;
   }
  }
  if ((label | 0) == 15) {
   label = 0;
   do {
    if (($initial | 0) != 0) {
     label = 17;
    } else {
     if (($stress | 0) == 5) {
      label = 17;
      break;
     }
     if (($2 | 0) == ($head_final | 0)) {
      $pitch = HEAPU8[$1 + 33 | 0] << 8;
      $stage = 2;
     } else {
      if (($used_onset | 0) != 0) {
       $stage = 1;
       $used_onset = 0;
       $pitch = HEAPU8[$1 + 31 | 0] << 8;
       $n_steps = $n_steps + 1 | 0;
      } else {
       if (($n_steps | 0) > 0) {
        $pitch = $pitch + $increment | 0;
       } else {
        $158 = $overflow_ix;
        $overflow_ix = $158 + 1 | 0;
        $pitch = (HEAPU8[$1 + 32 | 0] << 8) + ((Math_imul($pitch_range_abs, HEAP8[$1 + 16 + $158 | 0] | 0) | 0) / 64 | 0) | 0;
        if (($overflow_ix | 0) >= (HEAPU8[$1 + 35 | 0] | 0)) {
         $overflow_ix = 0;
        }
       }
      }
     }
    }
   } while (0);
   if ((label | 0) == 17) {
    label = 0;
    $initial = 0;
    $overflow_ix = 0;
    if ((HEAPU8[$1 + 30 | 0] | 0) == 255) {
     $n_steps = __ZL16count_incrementsiii($2, $head_final, 4) | 0;
     $pitch = HEAPU8[$1 + 31 | 0] << 8;
    } else {
     $n_steps = __ZL16count_incrementsiii($2 + 1 | 0, $head_final, 4) | 0;
     $pitch = HEAPU8[$1 + 30 | 0] << 8;
     $used_onset = 1;
    }
    if (($n_steps | 0) > (HEAPU8[$1 + 34 | 0] | 0)) {
     $n_steps = HEAPU8[$1 + 34 | 0] | 0;
    }
    if (($n_steps | 0) > 1) {
     $increment = ($pitch_range | 0) / ($n_steps - 1 | 0) | 0;
    } else {
     $increment = 0;
    }
   }
   $n_steps = $n_steps - 1 | 0;
  }
  if (($stress | 0) >= 4) {
   $n_unstressed = __ZL15CountUnstressediii($2 + 1 | 0, $3, $secondary) | 0;
   $unstressed_ix = 0;
   HEAP8[$syl | 0] = 6;
   HEAP8[$syl + 1 | 0] = HEAP8[$1 + 26 | 0] | 0;
   __ZL9set_pitchP8SYLLABLEii($syl, $pitch >> 8, HEAPU8[$1 + 27 | 0] | 0);
  } else {
   if (($stress | 0) >= ($secondary | 0)) {
    $n_unstressed = __ZL15CountUnstressediii($2 + 1 | 0, $3, $secondary) | 0;
    $unstressed_ix = 0;
    __ZL9set_pitchP8SYLLABLEii($syl, $pitch >> 8, HEAP32[$drops + ($stress << 2) >> 2] | 0);
   } else {
    if (($n_unstressed | 0) > 1) {
     $unstressed_inc = ((HEAP8[$1 + 39 + $stage | 0] | 0) - (HEAP8[$1 + 36 + $stage | 0] | 0) | 0) / ($n_unstressed - 1 | 0) | 0;
    } else {
     $unstressed_inc = 0;
    }
    $257 = ($pitch >> 8) + (HEAP8[$1 + 36 + $stage | 0] | 0) + (Math_imul($unstressed_inc, $unstressed_ix) | 0) | 0;
    __ZL9set_pitchP8SYLLABLEii($syl, $257, HEAP32[$drops + ($stress << 2) >> 2] | 0);
    $unstressed_ix = $unstressed_ix + 1 | 0;
   }
  }
  $2 = $2 + 1 | 0;
 }
 STACKTOP = sp;
 return $2 | 0;
}
function __ZL10ScoreVoiceP12espeak_VOICEPKciiS0_($voice_spec, $spec_language, $spec_n_parts, $spec_lang_len, $voice) {
 $voice_spec = $voice_spec | 0;
 $spec_language = $spec_language | 0;
 $spec_n_parts = $spec_n_parts | 0;
 $spec_lang_len = $spec_lang_len | 0;
 $voice = $voice | 0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $ix = 0, $p = 0, $c1 = 0, $c2 = 0, $language_priority = 0, $n_parts = 0, $matching = 0, $matching_parts = 0, $score = 0, $x = 0, $ratio = 0, $required_age = 0, $diff = 0, $43 = 0, $56 = 0, $64 = 0, $114 = 0, $123 = 0, $299 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = $voice_spec;
 $3 = $spec_language;
 $4 = $spec_n_parts;
 $5 = $spec_lang_len;
 $6 = $voice;
 $score = 0;
 $p = HEAP32[$6 + 4 >> 2] | 0;
 if (($4 | 0) < 0) {
  if ((_memcmp(HEAP32[$6 + 8 >> 2] | 0, $3 | 0, $5 | 0) | 0) == 0) {
   $1 = 100;
   $299 = $1;
   STACKTOP = sp;
   return $299 | 0;
  } else {
   $1 = 0;
   $299 = $1;
   STACKTOP = sp;
   return $299 | 0;
  }
 }
 if (($4 | 0) == 0) {
  $score = 100;
 } else {
  do {
   if ((HEAP8[$p] | 0) == 0) {
    if ((_strcmp($3 | 0, 10192) | 0) != 0) {
     break;
    }
    $score = 100;
   }
  } while (0);
  while (1) {
   if ((HEAP8[$p] | 0) == 0) {
    break;
   }
   $43 = $p;
   $p = $43 + 1 | 0;
   $language_priority = HEAP8[$43] | 0;
   $matching = 1;
   $matching_parts = 0;
   $n_parts = 1;
   $ix = 0;
   while (1) {
    if (($ix | 0) >= ($5 | 0)) {
     label = 15;
    } else {
     $56 = HEAP8[$3 + $ix | 0] | 0;
     $c1 = $56;
     if (($56 | 0) == 45) {
      label = 15;
     }
    }
    if ((label | 0) == 15) {
     label = 0;
     $c1 = 0;
    }
    $64 = HEAP8[$p + $ix | 0] | 0;
    $c2 = $64;
    if (($64 | 0) == 45) {
     $c2 = 0;
    }
    if (($c1 | 0) != ($c2 | 0)) {
     $matching = 0;
    }
    if ((HEAP8[$p + $ix | 0] | 0) == 45) {
     $n_parts = $n_parts + 1 | 0;
     if (($matching | 0) != 0) {
      $matching_parts = $matching_parts + 1 | 0;
     }
    }
    if ((HEAP8[$p + $ix | 0] | 0) == 0) {
     break;
    }
    $ix = $ix + 1 | 0;
   }
   $p = $p + ($ix + 1) | 0;
   $matching_parts = $matching_parts + $matching | 0;
   if (($matching_parts | 0) == 0) {
    continue;
   }
   $x = 5;
   $114 = $4 - $matching_parts | 0;
   $diff = $114;
   if (($114 | 0) > 0) {
    $x = $x - $diff | 0;
   }
   $123 = $n_parts - $matching_parts | 0;
   $diff = $123;
   if (($123 | 0) > 0) {
    $x = $x - $diff | 0;
   }
   $x = ($x * 100 | 0) - ($language_priority << 1) | 0;
   if (($x | 0) > ($score | 0)) {
    $score = $x;
   }
  }
 }
 if (($score | 0) == 0) {
  $1 = 0;
  $299 = $1;
  STACKTOP = sp;
  return $299 | 0;
 }
 if ((HEAP32[$2 >> 2] | 0) != 0) {
  if ((_strcmp(HEAP32[$2 >> 2] | 0, HEAP32[$6 >> 2] | 0) | 0) == 0) {
   $score = $score + 500 | 0;
  } else {
   if ((_strcmp(HEAP32[$2 >> 2] | 0, HEAP32[$6 + 8 >> 2] | 0) | 0) == 0) {
    $score = $score + 400 | 0;
   }
  }
 }
 if ((HEAPU8[$2 + 12 | 0] | 0) == 1) {
  label = 49;
 } else {
  if ((HEAPU8[$2 + 12 | 0] | 0) == 2) {
   label = 49;
  }
 }
 do {
  if ((label | 0) == 49) {
   if ((HEAPU8[$6 + 12 | 0] | 0) != 1) {
    if ((HEAPU8[$6 + 12 | 0] | 0) != 2) {
     break;
    }
   }
   if ((HEAPU8[$2 + 12 | 0] | 0) == (HEAPU8[$6 + 12 | 0] | 0)) {
    $score = $score + 50 | 0;
   } else {
    $score = $score - 50 | 0;
   }
  }
 } while (0);
 do {
  if ((HEAPU8[$2 + 13 | 0] | 0) <= 12) {
   if ((HEAPU8[$6 + 12 | 0] | 0) != 2) {
    break;
   }
   if ((HEAPU8[$6 + 13 | 0] | 0) <= 12) {
    break;
   }
   $score = $score + 5 | 0;
  }
 } while (0);
 if ((HEAPU8[$6 + 13 | 0] | 0) != 0) {
  if ((HEAPU8[$2 + 13 | 0] | 0) == 0) {
   $required_age = 30;
  } else {
   $required_age = HEAPU8[$2 + 13 | 0] | 0;
  }
  $ratio = ($required_age * 100 | 0 | 0) / (HEAPU8[$6 + 13 | 0] | 0) | 0;
  if (($ratio | 0) < 100) {
   $ratio = 1e4 / ($ratio | 0) | 0;
  }
  $ratio = ($ratio - 100 | 0) / 10 | 0;
  $x = 5 - $ratio | 0;
  if (($x | 0) > 0) {
   $x = 0;
  }
  $score = $score + $x | 0;
  if ((HEAPU8[$2 + 13 | 0] | 0) > 0) {
   $score = $score + 10 | 0;
  }
 }
 if (($score | 0) < 1) {
  $score = 1;
 }
 $1 = $score;
 $299 = $1;
 STACKTOP = sp;
 return $299 | 0;
}
function __ZL10WritePitchiiiii($env, $pitch1, $pitch2, $split, $final) {
 $env = $env | 0;
 $pitch1 = $pitch1 | 0;
 $pitch2 = $pitch2 | 0;
 $split = $split | 0;
 $final = $final | 0;
 var $1 = 0, $4 = 0, $5 = 0, $x = 0, $ix = 0, $pitch_base = 0, $pitch_range = 0, $p2 = 0, $p_end = 0, $pitch_env = 0, $max = 0, $min = 0, $y_max = 0, $y_min = 0, $env100 = 0, $y2 = 0, $y = 0, $env_split = 0, $buf = 0, $96 = 0, $105 = 0, $134 = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 88 | 0;
 $pitch_base = sp | 0;
 $pitch_range = sp + 8 | 0;
 $y = sp + 16 | 0;
 $buf = sp + 32 | 0;
 $1 = $env;
 $4 = $split;
 $5 = $final;
 $max = -1;
 $min = 999;
 $y_max = 0;
 $y_min = 0;
 $env100 = 80;
 HEAP8[91424] = 0;
 $pitch_env = HEAP32[6312 + ($1 << 2) >> 2] | 0;
 __Z9SetPitch2P7voice_tiiPiS1_(HEAP32[144] | 0, $pitch1, $pitch2, $pitch_base, $pitch_range);
 $env_split = ($4 << 7 | 0) / 100 | 0;
 if (($env_split | 0) < 0) {
  $env_split = -$env_split | 0;
 }
 $x = 0;
 while (1) {
  if (($x | 0) >= 128) {
   break;
  }
  if ((HEAPU8[$pitch_env + $x | 0] | 0 | 0) > ($max | 0)) {
   $max = HEAPU8[$pitch_env + $x | 0] | 0;
   $y_max = $x;
  }
  if ((HEAPU8[$pitch_env + $x | 0] | 0 | 0) < ($min | 0)) {
   $min = HEAPU8[$pitch_env + $x | 0] | 0;
   $y_min = $x;
  }
  $x = $x + 1 | 0;
 }
 HEAP32[$y + 8 >> 2] = 64;
 do {
  if (($y_max | 0) > 0) {
   if (($y_max | 0) >= 127) {
    break;
   }
   HEAP32[$y + 8 >> 2] = $y_max;
  }
 } while (0);
 do {
  if (($y_min | 0) > 0) {
   if (($y_min | 0) >= 127) {
    break;
   }
   HEAP32[$y + 8 >> 2] = $y_min;
  }
 } while (0);
 HEAP32[$y + 4 >> 2] = (HEAP32[$y + 8 >> 2] | 0) / 2 | 0;
 HEAP32[$y + 12 >> 2] = (HEAP32[$y + 8 >> 2] | 0) + ((127 - (HEAP32[$y + 8 >> 2] | 0) | 0) / 2 | 0);
 $96 = (Math_imul(HEAPU8[$pitch_env | 0] | 0, HEAP32[$pitch_range >> 2] | 0) | 0) >> 8;
 $105 = (Math_imul(HEAPU8[$pitch_env + 127 | 0] | 0, HEAP32[$pitch_range >> 2] | 0) | 0) >> 8;
 $p_end = $105 + (HEAP32[$pitch_base >> 2] | 0) | 0;
 if (($4 | 0) >= 0) {
  _sprintf($buf | 0, 16968, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = ($96 + (HEAP32[$pitch_base >> 2] | 0) | 0) / 4096 | 0, tempVarArgs) | 0) | 0;
  STACKTOP = tempVarArgs;
  _strcat(91424, $buf | 0) | 0;
 }
 if (($1 | 0) > 1) {
  $ix = 1;
  while (1) {
   if (($ix | 0) >= 4) {
    break;
   }
   $134 = (Math_imul(HEAPU8[$pitch_env + (HEAP32[$y + ($ix << 2) >> 2] | 0) | 0] | 0, HEAP32[$pitch_range >> 2] | 0) | 0) >> 8;
   $p2 = $134 + (HEAP32[$pitch_base >> 2] | 0) | 0;
   if (($4 | 0) > 0) {
    $y2 = (Math_imul(HEAP32[$y + ($ix << 2) >> 2] | 0, $env100) | 0) / ($env_split | 0) | 0;
   } else {
    if (($4 | 0) < 0) {
     $y2 = (Math_imul((HEAP32[$y + ($ix << 2) >> 2] | 0) - $env_split | 0, $env100) | 0) / ($env_split | 0) | 0;
    } else {
     $y2 = (Math_imul(HEAP32[$y + ($ix << 2) >> 2] | 0, $env100) | 0) / 128 | 0;
    }
   }
   do {
    if (($y2 | 0) > 0) {
     if (($y2 | 0) > ($env100 | 0)) {
      break;
     }
     _sprintf($buf | 0, 16792, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = $y2, HEAP32[tempVarArgs + 8 >> 2] = ($p2 | 0) / 4096 | 0, tempVarArgs) | 0) | 0;
     STACKTOP = tempVarArgs;
     _strcat(91424, $buf | 0) | 0;
    }
   } while (0);
   $ix = $ix + 1 | 0;
  }
 }
 $p_end = ($p_end | 0) / 4096 | 0;
 if (($4 | 0) <= 0) {
  _sprintf($buf | 0, 16792, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = $env100, HEAP32[tempVarArgs + 8 >> 2] = $p_end, tempVarArgs) | 0) | 0;
  STACKTOP = tempVarArgs;
  _strcat(91424, $buf | 0) | 0;
 }
 if (($env100 | 0) < 100) {
  _sprintf($buf | 0, 16792, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = 100, HEAP32[tempVarArgs + 8 >> 2] = $p_end, tempVarArgs) | 0) | 0;
  STACKTOP = tempVarArgs;
  _strcat(91424, $buf | 0) | 0;
 }
 _strcat(91424, 16648) | 0;
 if (($5 | 0) == 0) {
  STACKTOP = sp;
  return 91424;
 }
 _sprintf(91424, 16480, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $p_end, tempVarArgs) | 0) | 0;
 STACKTOP = tempVarArgs;
 STACKTOP = sp;
 return 91424;
}
function __Z8SetSynthiiP7frame_tS0_P7voice_t($length, $modn, $fr1, $fr2, $v) {
 $length = $length | 0;
 $modn = $modn | 0;
 $fr1 = $fr1 | 0;
 $fr2 = $fr2 | 0;
 $v = $v | 0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $ix = 0, $next = 0.0, $length2 = 0, $length4 = 0, $qix = 0, $cmd = 0, $119 = 0, $153 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = $length;
 $2 = $modn;
 $3 = $fr1;
 $4 = $fr2;
 $5 = $v;
 HEAP32[30920] = 0;
 HEAP32[26834] = 1;
 HEAP32[28446] = $2 & 255;
 HEAP32[28588] = 0;
 if (($2 & 1024 | 0) != 0) {
  HEAP32[28588] = 3;
  HEAP32[28468] = HEAP32[21312 + (($2 >> 8 & 3) << 2) >> 2];
 }
 if (($2 & 2048 | 0) != 0) {
  HEAP32[28588] = 4;
  HEAP32[28468] = HEAP32[21296 + (($2 >> 8 & 3) << 2) >> 2];
 }
 $qix = (HEAP32[8362] | 0) + 1 | 0;
 while (1) {
  if (($qix | 0) >= 170) {
   $qix = 0;
  }
  if (($qix | 0) == (HEAP32[8360] | 0)) {
   label = 9;
   break;
  }
  $cmd = HEAP32[33456 + ($qix << 4) >> 2] | 0;
  if (($cmd | 0) == 3) {
   label = 11;
   break;
  }
  if (($cmd | 0) == 6) {
   label = 14;
   break;
  }
  if (($cmd | 0) == 5) {
   label = 14;
   break;
  }
  $qix = $qix + 1 | 0;
 }
 if ((label | 0) == 9) {} else if ((label | 0) == 11) {
  HEAP32[26834] = 0;
 } else if ((label | 0) == 14) {}
 $length2 = $1 + 32 & -64;
 if (($length2 | 0) == 0) {
  $length2 = 64;
 }
 HEAP32[28420] = HEAP32[28848];
 HEAP32[26724] = (HEAP32[26724] | 0) + $length2;
 $length4 = ($length2 | 0) / 4 | 0;
 HEAP32[28304] = ((HEAP16[$5 + 178 >> 1] | 0) * 7800 | 0) + (HEAP16[$5 + 232 >> 1] << 8) << 8;
 HEAP32[28324] = ((HEAP16[$5 + 180 >> 1] | 0) * 9e3 | 0) + (HEAP16[$5 + 234 >> 1] << 8) << 8;
 $ix = 0;
 while (1) {
  if (($ix | 0) >= 8) {
   break;
  }
  if (($ix | 0) < 7) {
   $119 = Math_imul(HEAP16[$3 + 2 + ($ix << 1) >> 1] | 0, HEAP16[$5 + 164 + ($ix << 1) >> 1] | 0) | 0;
   HEAPF64[112672 + ($ix * 80 | 0) >> 3] = +($119 + (HEAP16[$5 + 218 + ($ix << 1) >> 1] << 8) << 8 | 0);
   HEAP32[112656 + ($ix * 80 | 0) >> 2] = ~~+HEAPF64[112672 + ($ix * 80 | 0) >> 3];
   $153 = Math_imul(HEAP16[$4 + 2 + ($ix << 1) >> 1] | 0, HEAP16[$5 + 164 + ($ix << 1) >> 1] | 0) | 0;
   $next = +($153 + (HEAP16[$5 + 218 + ($ix << 1) >> 1] << 8) << 8 | 0);
   HEAPF64[112704 + ($ix * 80 | 0) >> 3] = ($next - +HEAPF64[112672 + ($ix * 80 | 0) >> 3]) * 16.0 / +($length4 | 0);
  }
  HEAPF64[112680 + ($ix * 80 | 0) >> 3] = +((Math_imul(HEAPU8[$3 + 18 + $ix | 0] | 0, HEAP16[$5 + 182 + ($ix << 1) >> 1] | 0) | 0) << 6 | 0);
  HEAP32[112660 + ($ix * 80 | 0) >> 2] = ~~+HEAPF64[112680 + ($ix * 80 | 0) >> 3];
  $next = +((Math_imul(HEAPU8[$4 + 18 + $ix | 0] | 0, HEAP16[$5 + 182 + ($ix << 1) >> 1] | 0) | 0) << 6 | 0);
  HEAPF64[112712 + ($ix * 80 | 0) >> 3] = ($next - +HEAPF64[112680 + ($ix * 80 | 0) >> 3]) * 64.0 / +($length2 | 0);
  do {
   if (($ix | 0) <= 5) {
    if (($ix | 0) > (HEAP32[(HEAP32[8292] | 0) + 104 >> 2] | 0)) {
     break;
    }
    HEAPF64[112688 + ($ix * 80 | 0) >> 3] = +((Math_imul(HEAPU8[$3 + 26 + $ix | 0] | 0, HEAP16[$5 + 200 + ($ix << 1) >> 1] | 0) | 0) << 10 | 0);
    HEAP32[112664 + ($ix * 80 | 0) >> 2] = ~~+HEAPF64[112688 + ($ix * 80 | 0) >> 3];
    $next = +((Math_imul(HEAPU8[$4 + 26 + $ix | 0] | 0, HEAP16[$5 + 200 + ($ix << 1) >> 1] | 0) | 0) << 10 | 0);
    HEAPF64[112720 + ($ix * 80 | 0) >> 3] = ($next - +HEAPF64[112688 + ($ix * 80 | 0) >> 3]) * 64.0 / +($length2 | 0);
    if (($ix | 0) < 3) {
     HEAPF64[112696 + ($ix * 80 | 0) >> 3] = +((Math_imul(HEAPU8[$3 + 32 + $ix | 0] | 0, HEAP16[$5 + 200 + ($ix << 1) >> 1] | 0) | 0) << 10 | 0);
     HEAP32[112668 + ($ix * 80 | 0) >> 2] = ~~+HEAPF64[112696 + ($ix * 80 | 0) >> 3];
     $next = +((Math_imul(HEAPU8[$4 + 32 + $ix | 0] | 0, HEAP16[$5 + 200 + ($ix << 1) >> 1] | 0) | 0) << 10 | 0);
     HEAPF64[112728 + ($ix * 80 | 0) >> 3] = ($next - +HEAPF64[112696 + ($ix * 80 | 0) >> 3]) * 64.0 / +($length2 | 0);
    } else {
     HEAP32[112668 + ($ix * 80 | 0) >> 2] = HEAP32[112664 + ($ix * 80 | 0) >> 2];
    }
   }
  } while (0);
  $ix = $ix + 1 | 0;
 }
 STACKTOP = sp;
 return;
}
function __Z17CompileDictionaryPKcS0_P8_IO_FILEPci($dsource, $dict_name, $log, $fname_err, $flags) {
 $dsource = $dsource | 0;
 $dict_name = $dict_name | 0;
 $log = $log | 0;
 $fname_err = $fname_err | 0;
 $flags = $flags | 0;
 var $1 = 0, $2 = 0, $3 = 0, $5 = 0, $f_in = 0, $f_out = 0, $offset_rules = 0, $fname_in = 0, $fname_out = 0, $fname_temp = 0, $path = 0, $27 = 0, $34 = 0, $50 = 0, $118 = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 760 | 0;
 $fname_in = sp | 0;
 $fname_out = sp + 208 | 0;
 $fname_temp = sp + 384 | 0;
 $path = sp + 560 | 0;
 $2 = $dsource;
 $3 = $dict_name;
 $5 = $fname_err;
 $offset_rules = 0;
 HEAP32[30922] = 0;
 HEAP32[28362] = 0;
 _memset(113488, 0, 95) | 0;
 HEAP32[32070] = $flags & 1;
 if (($2 | 0) == 0) {
  $2 = 90656;
 }
 HEAP32[28344] = $log;
 if ((HEAP32[28344] | 0) == 0) {
  HEAP32[28344] = HEAP32[_stderr >> 2];
 }
 _sprintf($path | 0, 8544, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = $2, HEAP32[tempVarArgs + 8 >> 2] = $3, tempVarArgs) | 0) | 0;
 STACKTOP = tempVarArgs;
 _sprintf($fname_in | 0, 8496, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $path, tempVarArgs) | 0) | 0;
 STACKTOP = tempVarArgs;
 $27 = _fopen($fname_in | 0, 8456) | 0;
 $f_in = $27;
 do {
  if (($27 | 0) == 0) {
   _sprintf($fname_in | 0, 8416, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $path, tempVarArgs) | 0) | 0;
   STACKTOP = tempVarArgs;
   $34 = __ZL9fopen_logPKcS0_($fname_in | 0, 8456) | 0;
   $f_in = $34;
   if (($34 | 0) != 0) {
    break;
   }
   if (($5 | 0) != 0) {
    _strcpy($5 | 0, $fname_in | 0) | 0;
   }
   $1 = -1;
   $118 = $1;
   STACKTOP = sp;
   return $118 | 0;
  }
 } while (0);
 _sprintf($fname_out | 0, 8360, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 24 | 0, HEAP32[tempVarArgs >> 2] = 76328, HEAP32[tempVarArgs + 8 >> 2] = 47, HEAP32[tempVarArgs + 16 >> 2] = $3, tempVarArgs) | 0) | 0;
 STACKTOP = tempVarArgs;
 $50 = __ZL9fopen_logPKcS0_($fname_out | 0, 8320) | 0;
 $f_out = $50;
 if (($50 | 0) == 0) {
  if (($5 | 0) != 0) {
   _strcpy($5 | 0, $fname_out | 0) | 0;
  }
  $1 = -1;
  $118 = $1;
  STACKTOP = sp;
  return $118 | 0;
 }
 _sprintf($fname_temp | 0, 8248, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = 76328, HEAP32[tempVarArgs + 8 >> 2] = 47, tempVarArgs) | 0) | 0;
 STACKTOP = tempVarArgs;
 __Z11Write4BytesP8_IO_FILEi($f_out, 1024);
 __Z11Write4BytesP8_IO_FILEi($f_out, $offset_rules);
 __ZL22compile_dictlist_startv();
 _fprintf(HEAP32[28344] | 0, 8176, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = 38200 + ((HEAP32[9548] | 0) * 48 | 0), tempVarArgs) | 0) | 0;
 STACKTOP = tempVarArgs;
 __ZL21compile_dictlist_filePKcS0_($path | 0, 8144) | 0;
 if ((HEAP32[(HEAP32[9112] | 0) + 280 >> 2] | 0) != 0) {
  __ZL21compile_dictlist_filePKcS0_($path | 0, 15288) | 0;
  __ZL21compile_dictlist_filePKcS0_($path | 0, 8104) | 0;
 } else {
  __ZL21compile_dictlist_filePKcS0_($path | 0, 8104) | 0;
  __ZL21compile_dictlist_filePKcS0_($path | 0, 15288) | 0;
 }
 __ZL21compile_dictlist_filePKcS0_($path | 0, 8064) | 0;
 __ZL20compile_dictlist_endP8_IO_FILE($f_out);
 $offset_rules = _ftell($f_out | 0) | 0;
 _fprintf(HEAP32[28344] | 0, 8e3, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $fname_in, tempVarArgs) | 0) | 0;
 STACKTOP = tempVarArgs;
 __ZL17compile_dictrulesP8_IO_FILES0_Pc($f_in, $f_out, $fname_temp | 0) | 0;
 _fclose($f_in | 0) | 0;
 _fseek($f_out | 0, 4, 0) | 0;
 __Z11Write4BytesP8_IO_FILEi($f_out, $offset_rules);
 _fclose($f_out | 0) | 0;
 _fflush(HEAP32[28344] | 0) | 0;
 __Z14LoadDictionaryP10TranslatorPKci(HEAP32[9112] | 0, $3, 0) | 0;
 $1 = HEAP32[30922] | 0;
 $118 = $1;
 STACKTOP = sp;
 return $118 | 0;
}
function __Z15SpeakNextClauseP8_IO_FILEPKvi($f_in, $text_in, $control) {
 $f_in = $f_in | 0;
 $text_in = $text_in | 0;
 $control = $control | 0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $clause_tone = 0, $voice_change = 0, $phon_out = 0, $phoneme_mode = 0, $132 = 0, label = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $clause_tone = sp | 0;
 $voice_change = sp + 8 | 0;
 $2 = $f_in;
 $3 = $text_in;
 $4 = $control;
 if (($4 | 0) == 4) {
  do {
   if ((HEAP32[26022] | 0) == 0) {
    if ((HEAP32[26020] | 0) != 0) {
     break;
    }
    $1 = 0;
    $132 = $1;
    STACKTOP = sp;
    return $132 | 0;
   }
  } while (0);
  $1 = 1;
  $132 = $1;
  STACKTOP = sp;
  return $132 | 0;
 }
 if (($4 | 0) == 2) {
  HEAP32[26696] = 0;
  HEAP32[26020] = 0;
  if ((HEAP32[26022] | 0) != 0) {
   _fclose(HEAP32[26022] | 0) | 0;
   HEAP32[26022] = 0;
  }
  HEAP32[19562] = 0;
  __Z9WcmdqStopv();
  $1 = 0;
  $132 = $1;
  STACKTOP = sp;
  return $132 | 0;
 }
 if (($4 | 0) == 3) {
  if ((HEAP32[27168] | 0) == 0) {
   HEAP32[26696] = 0;
   HEAP32[27168] = 2;
  } else {
   __Z16WavegenOpenSoundv() | 0;
   HEAP32[26696] = 1;
   HEAP32[27168] = 0;
   __Z8GenerateP12PHONEME_LISTPii(44280, 78248, 0) | 0;
  }
  $1 = 0;
  $132 = $1;
  STACKTOP = sp;
  return $132 | 0;
 }
 if (($4 | 0) == 5) {
  HEAP32[19562] = 0;
  __Z9WcmdqStopv();
  $1 = 0;
  $132 = $1;
  STACKTOP = sp;
  return $132 | 0;
 }
 if (($2 | 0) != 0) {
  label = 19;
 } else {
  if (($3 | 0) != 0) {
   label = 19;
  }
 }
 if ((label | 0) == 19) {
  HEAP32[26022] = $2;
  HEAP32[26020] = $3;
  HEAP32[26696] = 1;
  HEAP32[27168] = 0;
 }
 do {
  if ((HEAP32[26022] | 0) == 0) {
   if ((HEAP32[26020] | 0) != 0) {
    break;
   }
   HEAP32[9450] = 0;
   HEAP32[26696] = 0;
   $1 = 0;
   $132 = $1;
   STACKTOP = sp;
   return $132 | 0;
  }
 } while (0);
 do {
  if ((HEAP32[26022] | 0) != 0) {
   if ((_feof(HEAP32[26022] | 0) | 0) == 0) {
    break;
   }
   HEAP32[26696] = 0;
   _fclose(HEAP32[26022] | 0) | 0;
   HEAP32[26022] = 0;
   $1 = 0;
   $132 = $1;
   STACKTOP = sp;
   return $132 | 0;
  }
 } while (0);
 if ((HEAP32[22646] | 0) != (HEAP32[(HEAP32[144] | 0) + 60 >> 2] | 0)) {
  __Z18SelectPhonemeTablei(HEAP32[(HEAP32[144] | 0) + 60 >> 2] | 0);
 }
 HEAP32[26020] = __Z15TranslateClauseP10TranslatorP8_IO_FILEPKvPiPPc(HEAP32[9112] | 0, HEAP32[26022] | 0, HEAP32[26020] | 0, $clause_tone, $voice_change) | 0;
 __Z11CalcPitchesP10Translatori(HEAP32[9112] | 0, HEAP32[$clause_tone >> 2] | 0);
 __Z11CalcLengthsP10Translator(HEAP32[9112] | 0);
 if ((HEAP32[19530] | 0) > 0) {
  label = 30;
 } else {
  if ((HEAP32[17078] | 0) != 0) {
   label = 30;
  }
 }
 if ((label | 0) == 30) {
  $phoneme_mode = 0;
  if ((HEAP32[19530] | 0) >= 3) {
   $phoneme_mode = (HEAP32[19530] | 0) + 16 - 3 | 0;
  }
  $phon_out = __Z26GetTranslatedPhonemeStringi($phoneme_mode) | 0;
  if ((HEAP32[19530] | 0) > 0) {
   _fprintf(HEAP32[19596] | 0, 10288, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $phon_out, tempVarArgs) | 0) | 0;
   STACKTOP = tempVarArgs;
  }
  if ((HEAP32[17078] | 0) != 0) {
   FUNCTION_TABLE_ii[HEAP32[17078] & 1]($phon_out) | 0;
  }
 }
 if ((HEAP32[9450] | 0) != 0) {
  HEAP32[19562] = 0;
  $1 = 1;
  $132 = $1;
  STACKTOP = sp;
  return $132 | 0;
 }
 __Z8GenerateP12PHONEME_LISTPii(44280, 78248, 0) | 0;
 __Z16WavegenOpenSoundv() | 0;
 if ((HEAP32[$voice_change >> 2] | 0) != 0) {
  HEAP32[26686] = __Z16LoadVoiceVariantPKci(HEAP32[$voice_change >> 2] | 0, 0) | 0;
 }
 if ((HEAP32[26686] | 0) != 0) {
  __Z13DoVoiceChangeP7voice_t(HEAP32[144] | 0);
  HEAP32[26686] = 0;
 }
 $1 = 1;
 $132 = $1;
 STACKTOP = sp;
 return $132 | 0;
}
function __Z13Wavegen_Klatti($resume) {
 $resume = $resume | 0;
 var $1 = 0, $pk = 0, $ix = 0, $fade = 0, $72 = 0, $89 = 0, $106 = 0, $123 = 0, $146 = 0, $187 = 0, $199 = 0, $228 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 if (($resume | 0) == 0) {
  HEAP32[28528] = 0;
 }
 while (1) {
  if ((HEAP32[28528] | 0) >= (HEAP32[26722] | 0)) {
   break;
  }
  HEAP32[26730] = ((HEAP32[8345] | 0) * 10 | 0 | 0) / 4096 | 0;
  $ix = 0;
  while (1) {
   if (($ix | 0) >= 6) {
    break;
   }
   HEAP32[106928 + ($ix << 2) >> 2] = HEAP32[111936 + ($ix * 80 | 0) >> 2];
   if (($ix | 0) < 4) {
    HEAP32[106968 + ($ix << 2) >> 2] = HEAP32[111940 + ($ix * 80 | 0) >> 2];
   }
   $ix = $ix + 1 | 0;
  }
  $ix = 1;
  while (1) {
   if (($ix | 0) >= 7) {
    break;
   }
   HEAP32[107008 + ($ix << 2) >> 2] = HEAP32[111944 + ($ix * 80 | 0) >> 2];
   $ix = $ix + 1 | 0;
  }
  HEAP32[26731] = HEAP32[27170];
  HEAP32[26779] = HEAP32[27176];
  HEAP32[26776] = HEAP32[27177];
  HEAP32[26778] = HEAP32[27178];
  HEAP32[26772] = HEAP32[27173];
  HEAP32[26774] = HEAP32[27179];
  HEAP32[26777] = HEAP32[27174];
  HEAP32[26775] = HEAP32[27172];
  HEAP32[26773] = HEAP32[27175];
  $pk = 0;
  while (1) {
   if (($pk | 0) >= 9) {
    break;
   }
   $72 = 111952 + ($pk * 80 | 0) | 0;
   HEAPF64[$72 >> 3] = +HEAPF64[$72 >> 3] + +HEAPF64[111984 + ($pk * 80 | 0) >> 3];
   HEAP32[111936 + ($pk * 80 | 0) >> 2] = ~~+HEAPF64[111952 + ($pk * 80 | 0) >> 3];
   $89 = 111960 + ($pk * 80 | 0) | 0;
   HEAPF64[$89 >> 3] = +HEAPF64[$89 >> 3] + +HEAPF64[111992 + ($pk * 80 | 0) >> 3];
   HEAP32[111940 + ($pk * 80 | 0) >> 2] = ~~+HEAPF64[111960 + ($pk * 80 | 0) >> 3];
   $106 = 111976 + ($pk * 80 | 0) | 0;
   HEAPF64[$106 >> 3] = +HEAPF64[$106 >> 3] + +HEAPF64[112008 + ($pk * 80 | 0) >> 3];
   HEAP32[111948 + ($pk * 80 | 0) >> 2] = ~~+HEAPF64[111976 + ($pk * 80 | 0) >> 3];
   $123 = 111968 + ($pk * 80 | 0) | 0;
   HEAPF64[$123 >> 3] = +HEAPF64[$123 >> 3] + +HEAPF64[112e3 + ($pk * 80 | 0) >> 3];
   HEAP32[111944 + ($pk * 80 | 0) >> 2] = ~~+HEAPF64[111968 + ($pk * 80 | 0) >> 3];
   $pk = $pk + 1 | 0;
  }
  $ix = 0;
  while (1) {
   if (($ix | 0) >= 10) {
    break;
   }
   $146 = 107728 + ($ix << 3) | 0;
   HEAPF64[$146 >> 3] = +HEAPF64[$146 >> 3] + +HEAPF64[128184 + ($ix << 3) >> 3];
   HEAP32[108680 + ($ix << 2) >> 2] = ~~+HEAPF64[107728 + ($ix << 3) >> 3];
   $ix = $ix + 1 | 0;
  }
  $ix = 0;
  while (1) {
   if (($ix | 0) > 6) {
    break;
   }
   HEAP32[107128 + ($ix << 2) >> 2] = HEAP32[111936 + ($ix * 80 | 0) >> 2];
   if (($ix | 0) < 4) {
    HEAP32[107168 + ($ix << 2) >> 2] = HEAP32[111940 + ($ix * 80 | 0) >> 2];
   }
   $ix = $ix + 1 | 0;
  }
  HEAP32[8346] = (HEAP32[8346] | 0) + (HEAP32[8347] | 0);
  $187 = HEAP32[8346] >> 8;
  $ix = $187;
  if (($187 | 0) > 127) {
   $ix = 127;
  }
  $199 = (Math_imul(HEAPU8[(HEAP32[8344] | 0) + $ix | 0] | 0, HEAP32[8349] | 0) | 0) >> 8;
  HEAP32[8345] = $199 + (HEAP32[8348] | 0);
  HEAP32[31365] = (HEAP32[26722] | 0) - (HEAP32[28528] | 0);
  if ((HEAP32[31365] | 0) > 64) {
   HEAP32[31365] = 64;
  }
  __ZL10frame_initP13klatt_frame_t(106920);
  if ((__ZL7parwaveP13klatt_frame_t(106920) | 0) == 1) {
   label = 34;
   break;
  }
 }
 if ((label | 0) == 34) {
  $1 = 1;
  $228 = $1;
  STACKTOP = sp;
  return $228 | 0;
 }
 do {
  if ((HEAP32[26832] | 0) > 0) {
   $fade = 64;
   HEAP32[31404] = $fade;
   HEAP32[26832] = 0;
   HEAP32[28528] = (HEAP32[28528] | 0) - $fade;
   HEAP32[31365] = $fade;
   if ((__ZL7parwaveP13klatt_frame_t(106920) | 0) != 1) {
    break;
   }
   $1 = 1;
   $228 = $1;
   STACKTOP = sp;
   return $228 | 0;
  }
 } while (0);
 $1 = 0;
 $228 = $1;
 STACKTOP = sp;
 return $228 | 0;
}
function __Z8SetSpeedi($control) {
 $control = $control | 0;
 var $1 = 0, $x = 0, $s1 = 0, $wpm = 0, $wpm2 = 0, $wpm_value = 0, $134 = 0, $243 = 0, sp = 0;
 sp = STACKTOP;
 $1 = $control;
 HEAP32[9121] = 0;
 HEAP32[9120] = 450;
 HEAP32[9118] = 110;
 HEAP32[9119] = 100;
 HEAP32[9116] = 5;
 $wpm = HEAP32[19606] | 0;
 if (($1 | 0) == 2) {
  $wpm = HEAP32[19612] | 0;
 }
 $wpm_value = $wpm;
 if ((HEAP32[(HEAP32[144] | 0) + 84 >> 2] | 0) > 0) {
  $wpm = (Math_imul($wpm, HEAP32[(HEAP32[144] | 0) + 84 >> 2] | 0) | 0) / 100 | 0;
 }
 if (($1 & 2 | 0) != 0) {
  __Z12DoSonicSpeedi(1024);
 }
 do {
  if (($wpm_value | 0) <= 450) {
   if (($wpm_value | 0) > (HEAP32[9122] | 0)) {
    if (($wpm | 0) > 350) {
     break;
    }
   }
   if (($wpm | 0) > 450) {
    $wpm = 450;
   }
   if (($wpm | 0) > 360) {
    HEAP32[9121] = ($wpm - 360 | 0) / 8 | 0;
   }
   $wpm2 = $wpm;
   if (($wpm | 0) > 359) {
    $wpm2 = 359;
   }
   if (($wpm | 0) < 80) {
    $wpm2 = 80;
   }
   $x = HEAPU8[29704 + ($wpm2 - 80) | 0] | 0;
   if (($wpm | 0) >= 380) {
    $x = 7;
   }
   if (($wpm | 0) >= 400) {
    $x = 6;
   }
   if (($1 & 1 | 0) != 0) {
    HEAP32[6244] = (Math_imul($x, HEAP32[(HEAP32[144] | 0) + 72 >> 2] | 0) | 0) / 256 | 0;
    HEAP32[6242] = (Math_imul($x, HEAP32[(HEAP32[144] | 0) + 76 >> 2] | 0) | 0) / 256 | 0;
    HEAP32[6240] = (Math_imul($x, HEAP32[(HEAP32[144] | 0) + 80 >> 2] | 0) | 0) / 256 | 0;
    if (($x | 0) <= 7) {
     HEAP32[6244] = $x;
     $134 = $x - 1 | 0;
     HEAP32[6240] = $134;
     HEAP32[6242] = $134;
    }
   }
   if (($1 & 2 | 0) == 0) {
    STACKTOP = sp;
    return;
   }
   if (($wpm | 0) > 350) {
    HEAP32[9118] = 85 - (($wpm - 350 | 0) / 3 | 0);
    HEAP32[9119] = 60 - (($wpm - 350 | 0) / 8 | 0);
   } else {
    if (($wpm | 0) > 250) {
     HEAP32[9118] = 110 - (($wpm - 250 | 0) / 4 | 0);
     HEAP32[9119] = 110 - (($wpm - 250 | 0) / 2 | 0);
    }
   }
   $s1 = (Math_imul($x, HEAP32[(HEAP32[144] | 0) + 72 >> 2] | 0) | 0) / 256 | 0;
   if (($wpm | 0) >= 170) {
    HEAP32[9117] = (($s1 * 150 | 0 | 0) / 128 | 0) + 110;
   } else {
    HEAP32[9117] = (($s1 << 7 | 0) / 130 | 0) + 128;
   }
   if (($wpm | 0) >= 350) {
    HEAP32[9117] = HEAPU8[28336 + ($wpm - 350) | 0] | 0;
   }
   if (($wpm | 0) >= 390) {
    HEAP32[9120] = 450 - (($wpm - 400 | 0) / 2 | 0);
    if (($wpm | 0) > 440) {
     HEAP32[9120] = 420 - ($wpm - 440);
    }
   }
   HEAP32[9120] = (Math_imul(HEAP32[9120] | 0, HEAP32[9494] | 0) | 0) / 22050 | 0;
   HEAP32[9114] = ($s1 << 8 | 0) / 115 | 0;
   HEAP32[9115] = 0;
   if (($wpm | 0) > 430) {
    HEAP32[9114] = 12;
   } else {
    if (($wpm | 0) > 400) {
     HEAP32[9114] = 13;
    } else {
     if (($wpm | 0) > 374) {
      HEAP32[9114] = 14;
     } else {
      if (($wpm | 0) > 350) {
       HEAP32[9114] = HEAPU8[26824 + ($wpm - 350) | 0] | 0;
      }
     }
    }
   }
   if ((HEAP32[9115] | 0) == 0) {
    $243 = HEAP32[9114] | 0;
    HEAP32[9115] = $243;
    if (($243 | 0) < 16) {
     HEAP32[9115] = 16;
    }
   }
   STACKTOP = sp;
   return;
  }
 } while (0);
 $wpm2 = $wpm;
 $wpm = 175;
 $x = 73;
 if (($1 & 1 | 0) != 0) {
  HEAP32[6244] = (Math_imul($x, HEAP32[(HEAP32[144] | 0) + 72 >> 2] | 0) | 0) / 256 | 0;
  HEAP32[6242] = (Math_imul($x, HEAP32[(HEAP32[144] | 0) + 76 >> 2] | 0) | 0) / 256 | 0;
  HEAP32[6240] = (Math_imul($x, HEAP32[(HEAP32[144] | 0) + 80 >> 2] | 0) | 0) / 256 | 0;
 }
 if (($1 & 2 | 0) != 0) {
  __Z12DoSonicSpeedi(~~(+($wpm2 | 0) / +($wpm | 0) * 1024.0));
  HEAP32[9114] = 85;
  HEAP32[9115] = 80;
  HEAP32[9116] = 22;
  HEAP32[9120] = 900;
  HEAP32[9117] = 211;
  HEAP32[9118] = 210;
  HEAP32[9119] = 170;
 }
 STACKTOP = sp;
 return;
}
function _scanexp($f, $pok) {
 $f = $f | 0;
 $pok = $pok | 0;
 var $1 = 0, $2 = 0, $3 = 0, $13 = 0, $15 = 0, $16 = 0, $26 = 0, $c_0 = 0, $neg_0 = 0, $x_042 = 0, $c_141 = 0, $46 = 0, $47 = 0, $c_1_be = 0, $phitmp$0 = 0, $phitmp$1 = 0, $y_0_lcssa$0 = 0, $y_0_lcssa$1 = 0, $c_2_lcssa = 0, $y_037$0 = 0, $y_037$1 = 0, $c_236 = 0, $69 = 0, $c_2_be = 0, $$etemp$2$1 = 0, $81 = 0, $c_3_be = 0, $98 = 0, $_0$0 = 0, $_0$1 = 0, $65$0 = 0, $65$1 = 0, $67$0 = 0, $68$0 = 0, $68$1 = 0, $99$0 = 0;
 $1 = $f + 4 | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 $3 = $f + 100 | 0;
 if ($2 >>> 0 < (HEAP32[$3 >> 2] | 0) >>> 0) {
  HEAP32[$1 >> 2] = $2 + 1;
  $13 = HEAPU8[$2] | 0;
 } else {
  $13 = ___shgetc($f) | 0;
 }
 do {
  if (($13 | 0) == 45 | ($13 | 0) == 43) {
   $15 = ($13 | 0) == 45 | 0;
   $16 = HEAP32[$1 >> 2] | 0;
   if ($16 >>> 0 < (HEAP32[$3 >> 2] | 0) >>> 0) {
    HEAP32[$1 >> 2] = $16 + 1;
    $26 = HEAPU8[$16] | 0;
   } else {
    $26 = ___shgetc($f) | 0;
   }
   if (($26 - 48 | 0) >>> 0 < 10 >>> 0 | ($pok | 0) == 0) {
    $neg_0 = $15;
    $c_0 = $26;
    break;
   }
   if ((HEAP32[$3 >> 2] | 0) == 0) {
    $neg_0 = $15;
    $c_0 = $26;
    break;
   }
   HEAP32[$1 >> 2] = (HEAP32[$1 >> 2] | 0) - 1;
   $neg_0 = $15;
   $c_0 = $26;
  } else {
   $neg_0 = 0;
   $c_0 = $13;
  }
 } while (0);
 if (($c_0 - 48 | 0) >>> 0 > 9 >>> 0) {
  if ((HEAP32[$3 >> 2] | 0) == 0) {
   $_0$1 = -2147483648;
   $_0$0 = 0;
   return (tempRet0 = $_0$1, $_0$0) | 0;
  }
  HEAP32[$1 >> 2] = (HEAP32[$1 >> 2] | 0) - 1;
  $_0$1 = -2147483648;
  $_0$0 = 0;
  return (tempRet0 = $_0$1, $_0$0) | 0;
 } else {
  $c_141 = $c_0;
  $x_042 = 0;
 }
 while (1) {
  $46 = $c_141 - 48 + $x_042 | 0;
  $47 = HEAP32[$1 >> 2] | 0;
  if ($47 >>> 0 < (HEAP32[$3 >> 2] | 0) >>> 0) {
   HEAP32[$1 >> 2] = $47 + 1;
   $c_1_be = HEAPU8[$47] | 0;
  } else {
   $c_1_be = ___shgetc($f) | 0;
  }
  if (!(($c_1_be - 48 | 0) >>> 0 < 10 >>> 0 & ($46 | 0) < 214748364)) {
   break;
  }
  $c_141 = $c_1_be;
  $x_042 = $46 * 10 | 0;
 }
 $phitmp$0 = $46;
 $phitmp$1 = ($46 | 0) < 0 | 0 ? -1 : 0;
 if (($c_1_be - 48 | 0) >>> 0 < 10 >>> 0) {
  $c_236 = $c_1_be;
  $y_037$1 = $phitmp$1;
  $y_037$0 = $phitmp$0;
  while (1) {
   $65$0 = ___muldi3($y_037$0, $y_037$1, 10, 0) | 0;
   $65$1 = tempRet0;
   $67$0 = _i64Add($c_236, ($c_236 | 0) < 0 | 0 ? -1 : 0, -48, -1) | 0;
   $68$0 = _i64Add($67$0, tempRet0, $65$0, $65$1) | 0;
   $68$1 = tempRet0;
   $69 = HEAP32[$1 >> 2] | 0;
   if ($69 >>> 0 < (HEAP32[$3 >> 2] | 0) >>> 0) {
    HEAP32[$1 >> 2] = $69 + 1;
    $c_2_be = HEAPU8[$69] | 0;
   } else {
    $c_2_be = ___shgetc($f) | 0;
   }
   $$etemp$2$1 = 21474836;
   if (($c_2_be - 48 | 0) >>> 0 < 10 >>> 0 & (($68$1 | 0) < ($$etemp$2$1 | 0) | ($68$1 | 0) == ($$etemp$2$1 | 0) & $68$0 >>> 0 < 2061584302 >>> 0)) {
    $c_236 = $c_2_be;
    $y_037$1 = $68$1;
    $y_037$0 = $68$0;
   } else {
    $c_2_lcssa = $c_2_be;
    $y_0_lcssa$1 = $68$1;
    $y_0_lcssa$0 = $68$0;
    break;
   }
  }
 } else {
  $c_2_lcssa = $c_1_be;
  $y_0_lcssa$1 = $phitmp$1;
  $y_0_lcssa$0 = $phitmp$0;
 }
 if (($c_2_lcssa - 48 | 0) >>> 0 < 10 >>> 0) {
  do {
   $81 = HEAP32[$1 >> 2] | 0;
   if ($81 >>> 0 < (HEAP32[$3 >> 2] | 0) >>> 0) {
    HEAP32[$1 >> 2] = $81 + 1;
    $c_3_be = HEAPU8[$81] | 0;
   } else {
    $c_3_be = ___shgetc($f) | 0;
   }
  } while (($c_3_be - 48 | 0) >>> 0 < 10 >>> 0);
 }
 if ((HEAP32[$3 >> 2] | 0) != 0) {
  HEAP32[$1 >> 2] = (HEAP32[$1 >> 2] | 0) - 1;
 }
 $98 = ($neg_0 | 0) != 0;
 $99$0 = _i64Subtract(0, 0, $y_0_lcssa$0, $y_0_lcssa$1) | 0;
 $_0$1 = $98 ? tempRet0 : $y_0_lcssa$1;
 $_0$0 = $98 ? $99$0 : $y_0_lcssa$0;
 return (tempRet0 = $_0$1, $_0$0) | 0;
}
function __Z20LookupAccentedLetterP10TranslatorjPc($tr, $letter, $ph_buf) {
 $tr = $tr | 0;
 $letter = $letter | 0;
 $ph_buf = $ph_buf | 0;
 var $1 = 0, $2 = 0, $3 = 0, $accent_data = 0, $accent1 = 0, $accent2 = 0, $basic_letter = 0, $letter2 = 0, $ph_letter1 = 0, $ph_letter2 = 0, $ph_accent1 = 0, $ph_accent2 = 0, label = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 $ph_letter1 = sp | 0;
 $ph_letter2 = sp + 32 | 0;
 $ph_accent1 = sp + 64 | 0;
 $ph_accent2 = sp + 96 | 0;
 $1 = $tr;
 $2 = $letter;
 $3 = $ph_buf;
 $accent_data = 0;
 $accent1 = 0;
 $accent2 = 0;
 $letter2 = 0;
 HEAP8[$ph_accent2 | 0] = 0;
 do {
  if ($2 >>> 0 >= 224 >>> 0) {
   if ($2 >>> 0 >= 383 >>> 0) {
    label = 4;
    break;
   }
   $accent_data = HEAPU16[26168 + ($2 - 224 << 1) >> 1] | 0;
  } else {
   label = 4;
  }
 } while (0);
 if ((label | 0) == 4) {
  do {
   if ($2 >>> 0 >= 592 >>> 0) {
    if ($2 >>> 0 > 680 >>> 0) {
     break;
    }
    $accent_data = HEAPU16[25984 + ($2 - 592 << 1) >> 1] | 0;
   }
  } while (0);
 }
 if (($accent_data | 0) == 0) {
  STACKTOP = sp;
  return;
 }
 $basic_letter = ($accent_data & 63) + 59 | 0;
 if (($basic_letter | 0) < 97) {
  $basic_letter = HEAP16[29368 + ($basic_letter - 59 << 1) >> 1] | 0;
 }
 if (($accent_data & 32768 | 0) != 0) {
  $letter2 = $accent_data >> 6 & 63;
  $letter2 = $letter2 + 59 | 0;
  $accent2 = $accent_data >> 12 & 7;
 } else {
  $accent1 = $accent_data >> 6 & 31;
  $accent2 = $accent_data >> 11 & 15;
 }
 if ((__Z6LookupP10TranslatorPKcPc($1, HEAP32[30936 + ($accent1 << 3) >> 2] | 0, $ph_accent1 | 0) | 0) != 0) {
  if ((__ZL13LookupLetter2P10TranslatorjPc($1, $basic_letter, $ph_letter1 | 0) | 0) != 0) {
   if (($accent2 | 0) != 0) {
    if ((__Z6LookupP10TranslatorPKcPc($1, HEAP32[30936 + ($accent2 << 3) >> 2] | 0, $ph_accent2 | 0) | 0) == 0) {}
    if ((HEAP32[30940 + ($accent2 << 3) >> 2] & 1 | 0) != 0) {
     _strcpy($3 | 0, $ph_accent2 | 0) | 0;
     $3 = $3 + (_strlen($3 | 0) | 0) | 0;
     HEAP8[$ph_accent2 | 0] = 0;
    }
   }
   if (($letter2 | 0) != 0) {
    __ZL13LookupLetter2P10TranslatorjPc($1, $letter2, $ph_letter2 | 0) | 0;
    _sprintf($3 | 0, 14304, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 48 | 0, HEAP32[tempVarArgs >> 2] = $ph_accent1, HEAP32[tempVarArgs + 8 >> 2] = 23, HEAP32[tempVarArgs + 16 >> 2] = $ph_letter1, HEAP32[tempVarArgs + 24 >> 2] = 6, HEAP32[tempVarArgs + 32 >> 2] = $ph_letter2, HEAP32[tempVarArgs + 40 >> 2] = $ph_accent2, tempVarArgs) | 0) | 0;
    STACKTOP = tempVarArgs;
   } else {
    if (($accent1 | 0) == 0) {
     _strcpy($3 | 0, $ph_letter1 | 0) | 0;
    } else {
     do {
      if ((HEAP32[$1 + 240 >> 2] & 1 | 0) != 0) {
       label = 28;
      } else {
       if ((HEAP32[30940 + ($accent1 << 3) >> 2] & 1 | 0) != 0) {
        label = 28;
        break;
       }
       _sprintf($3 | 0, 15496, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 40 | 0, HEAP32[tempVarArgs >> 2] = 4, HEAP32[tempVarArgs + 8 >> 2] = $ph_letter1, HEAP32[tempVarArgs + 16 >> 2] = 23, HEAP32[tempVarArgs + 24 >> 2] = $ph_accent1, HEAP32[tempVarArgs + 32 >> 2] = 23, tempVarArgs) | 0) | 0;
       STACKTOP = tempVarArgs;
      }
     } while (0);
     if ((label | 0) == 28) {
      _sprintf($3 | 0, 16984, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 32 | 0, HEAP32[tempVarArgs >> 2] = $ph_accent1, HEAP32[tempVarArgs + 8 >> 2] = 23, HEAP32[tempVarArgs + 16 >> 2] = 6, HEAP32[tempVarArgs + 24 >> 2] = $ph_letter1, tempVarArgs) | 0) | 0;
      STACKTOP = tempVarArgs;
     }
    }
   }
  }
 }
 STACKTOP = sp;
 return;
}
function __Z14EncodePhonemesPKcPcPi($p, $outptr, $bad_phoneme) {
 $p = $p | 0;
 $outptr = $outptr | 0;
 $bad_phoneme = $bad_phoneme | 0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $ix = 0, $c = 0, $count = 0, $max = 0, $max_ph = 0, $consumed = 0, $mnemonic_word = 0, $p_lang = 0, $22 = 0, $32 = 0, $39 = 0, $77 = 0, $93 = 0, $134 = 0, $150 = 0, $158 = 0, $167 = 0, $175 = 0, $191 = 0, $200 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = $p;
 $3 = $outptr;
 $4 = $bad_phoneme;
 if (($4 | 0) != 0) {
  HEAP32[$4 >> 2] = 0;
 }
 while (1) {
  if ((_isspace(HEAP8[$2] | 0) | 0) == 0) {
   break;
  }
  $2 = $2 + 1 | 0;
 }
 while (1) {
  $22 = HEAP8[$2] | 0;
  $c = $22;
  if (($22 & 255 | 0) != 0) {
   $32 = (_isspace($c & 255 | 0) | 0) != 0 ^ 1;
  } else {
   $32 = 0;
  }
  if (!$32) {
   label = 53;
   break;
  }
  $consumed = 0;
  do {
   if (($c & 255 | 0) == 124) {
    $39 = HEAP8[$2 + 1 | 0] | 0;
    $c = $39;
    if (($39 & 255 | 0) != 124) {
     $2 = $2 + 1 | 0;
     break;
    }
    label = 15;
   } else {
    label = 15;
   }
  } while (0);
  if ((label | 0) == 15) {
   label = 0;
   $max = -1;
   $max_ph = 0;
   $ix = 1;
   while (1) {
    if (($ix | 0) >= (HEAP32[19560] | 0)) {
     break;
    }
    do {
     if ((HEAP32[43256 + ($ix << 2) >> 2] | 0) == 0) {} else {
      if ((HEAPU8[(HEAP32[43256 + ($ix << 2) >> 2] | 0) + 11 | 0] | 0) == 15) {
       break;
      }
      $count = 0;
      $mnemonic_word = HEAP32[HEAP32[43256 + ($ix << 2) >> 2] >> 2] | 0;
      while (1) {
       $77 = HEAP8[$2 + $count | 0] | 0;
       $c = $77;
       do {
        if (($77 & 255 | 0) > 32) {
         if (($count | 0) >= 4) {
          $93 = 0;
          break;
         }
         $93 = ($c & 255 | 0) == ($mnemonic_word >>> ($count << 3 >>> 0) & 255 | 0);
        } else {
         $93 = 0;
        }
       } while (0);
       if (!$93) {
        break;
       }
       $count = $count + 1 | 0;
      }
      do {
       if (($count | 0) > ($max | 0)) {
        if (($count | 0) != 4) {
         if (($mnemonic_word >>> ($count << 3 >>> 0) & 255 | 0) != 0) {
          break;
         }
        }
        $max = $count;
        $max_ph = HEAPU8[(HEAP32[43256 + ($ix << 2) >> 2] | 0) + 10 | 0] | 0;
       }
      } while (0);
     }
    } while (0);
    $ix = $ix + 1 | 0;
   }
   if (($max_ph | 0) == 0) {
    label = 34;
    break;
   }
   if (($max | 0) <= 0) {
    $max = 1;
   }
   $2 = $2 + ($consumed + $max) | 0;
   $150 = $3;
   $3 = $150 + 1 | 0;
   HEAP8[$150] = $max_ph;
   if (($max_ph | 0) == 21) {
    $p_lang = $3;
    while (1) {
     $158 = HEAP8[$2] | 0;
     $c = $158;
     if ((_isspace($158 & 255 | 0) | 0) != 0) {
      $167 = 0;
     } else {
      $167 = ($c & 255 | 0) != 0;
     }
     if (!$167) {
      break;
     }
     $2 = $2 + 1 | 0;
     $175 = $3;
     $3 = $175 + 1 | 0;
     HEAP8[$175] = _tolower($c & 255 | 0) | 0;
    }
    HEAP8[$3] = 0;
    if (($c & 255 | 0) == 0) {
     if ((_strcmp($p_lang | 0, 9592) | 0) == 0) {
      label = 47;
      break;
     }
    } else {
     $191 = $3;
     $3 = $191 + 1 | 0;
     HEAP8[$191] = 124;
    }
   }
  }
 }
 if ((label | 0) == 53) {
  HEAP8[$3] = 0;
  $1 = $2;
  $200 = $1;
  STACKTOP = sp;
  return $200 | 0;
 } else if ((label | 0) == 47) {
  HEAP8[$p_lang] = 0;
  $1 = $2;
  $200 = $1;
  STACKTOP = sp;
  return $200 | 0;
 } else if ((label | 0) == 34) {
  if (($4 | 0) != 0) {
   __Z7utf8_inPiPKc($4, $2) | 0;
  }
  $134 = $3;
  $3 = $134 + 1 | 0;
  HEAP8[$134] = 0;
  $1 = $2 + 1 | 0;
  $200 = $1;
  STACKTOP = sp;
  return $200 | 0;
 }
 return 0;
}
function __ZL13ReadVoiceFileP8_IO_FILEPKcS2_($f_in, $fname, $leafname) {
 $f_in = $f_in | 0;
 $fname = $fname | 0;
 $leafname = $leafname | 0;
 var $1 = 0, $2 = 0, $3 = 0, $linebuf = 0, $vname = 0, $vgender = 0, $vlanguage = 0, $languages = 0, $len = 0, $langix = 0, $n_languages = 0, $p = 0, $voice_data = 0, $priority = 0, $age = 0, $n_variants = 0, $gender = 0, $83 = 0, $96 = 0, $164 = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 688 | 0;
 $linebuf = sp | 0;
 $vname = sp + 120 | 0;
 $vgender = sp + 200 | 0;
 $vlanguage = sp + 280 | 0;
 $languages = sp + 360 | 0;
 $priority = sp + 664 | 0;
 $age = sp + 672 | 0;
 $n_variants = sp + 680 | 0;
 $2 = $f_in;
 $3 = $fname;
 $langix = 0;
 $n_languages = 0;
 HEAP32[$n_variants >> 2] = 4;
 HEAP8[$vname | 0] = 0;
 HEAP8[$vgender | 0] = 0;
 HEAP32[$age >> 2] = 0;
 while (1) {
  if ((__ZL11fgets_stripPciP8_IO_FILE($linebuf | 0, 120, $2) | 0) == 0) {
   break;
  }
  if ((_memcmp($linebuf | 0, 10384, 4) | 0) == 0) {
   $p = $linebuf + 4 | 0;
   while (1) {
    if ((_isspace(HEAP8[$p] | 0) | 0) == 0) {
     break;
    }
    $p = $p + 1 | 0;
   }
   __Z8strncpy0PcPKci($vname | 0, $p, 80);
  } else {
   if ((_memcmp($linebuf | 0, 10336, 8) | 0) == 0) {
    HEAP32[$priority >> 2] = 5;
    HEAP8[$vlanguage | 0] = 0;
    _sscanf($linebuf + 8 | 0, 15976, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = $vlanguage, HEAP32[tempVarArgs + 8 >> 2] = $priority, tempVarArgs) | 0) | 0;
    STACKTOP = tempVarArgs;
    $len = (_strlen($vlanguage | 0) | 0) + 2 | 0;
    if ($len >>> 0 < (300 - $langix - 1 | 0) >>> 0) {
     HEAP8[$languages + $langix | 0] = HEAP32[$priority >> 2];
     _strcpy($languages + ($langix + 1) | 0, $vlanguage | 0) | 0;
     $langix = $langix + $len | 0;
     $n_languages = $n_languages + 1 | 0;
    }
   } else {
    if ((_memcmp($linebuf | 0, 10280, 6) | 0) == 0) {
     _sscanf($linebuf + 6 | 0, 15976, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = $vgender, HEAP32[tempVarArgs + 8 >> 2] = $age, tempVarArgs) | 0) | 0;
     STACKTOP = tempVarArgs;
    } else {
     if ((_memcmp($linebuf | 0, 10192, 8) | 0) == 0) {
      _sscanf($linebuf + 8 | 0, 14744, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $n_variants, tempVarArgs) | 0) | 0;
      STACKTOP = tempVarArgs;
     }
    }
   }
  }
 }
 $83 = $langix;
 $langix = $83 + 1 | 0;
 HEAP8[$languages + $83 | 0] = 0;
 $gender = __Z10LookupMnemP8MNEM_TABPKc(6280, $vgender | 0) | 0;
 if (($n_languages | 0) == 0) {
  $1 = 0;
  $164 = $1;
  STACKTOP = sp;
  return $164 | 0;
 }
 $96 = $langix + 24 + (_strlen($3 | 0) | 0) | 0;
 $p = _calloc($96 + (_strlen($vname | 0) | 0) + 3 | 0, 1) | 0;
 $voice_data = $p;
 $p = $p + 24 | 0;
 _memcpy($p | 0, $languages | 0, $langix) | 0;
 HEAP32[$voice_data + 4 >> 2] = $p;
 _strcpy($p + $langix | 0, $3 | 0) | 0;
 HEAP32[$voice_data + 8 >> 2] = $p + $langix;
 HEAP32[$voice_data >> 2] = $p + $langix;
 if ((HEAP8[$vname | 0] | 0) != 0) {
  $langix = $langix + ((_strlen($3 | 0) | 0) + 1) | 0;
  _strcpy($p + $langix | 0, $vname | 0) | 0;
  HEAP32[$voice_data >> 2] = $p + $langix;
 }
 HEAP8[$voice_data + 13 | 0] = HEAP32[$age >> 2];
 HEAP8[$voice_data + 12 | 0] = $gender;
 HEAP8[$voice_data + 14 | 0] = 0;
 HEAP8[$voice_data + 15 | 0] = HEAP32[$n_variants >> 2];
 $1 = $voice_data;
 $164 = $1;
 STACKTOP = sp;
 return $164 | 0;
}
function __ZL18calc_pitch_segmentiiP9TONE_HEADP12TONE_NUCLEUSii($ix, $end_ix, $th, $tn, $min_stress, $continuing) {
 $ix = $ix | 0;
 $end_ix = $end_ix | 0;
 $th = $th | 0;
 $tn = $tn | 0;
 $min_stress = $min_stress | 0;
 $continuing = $continuing | 0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $stress = 0, $pitch = 0, $increment = 0, $n_primary = 0, $n_steps = 0, $initial = 0, $overflow = 0, $n_overflow = 0, $pitch_range = 0, $pitch_range_abs = 0, $drops = 0, $overflow_tab = 0, $syl = 0, $69 = 0, $110 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = $ix;
 $2 = $end_ix;
 $3 = $th;
 $4 = $tn;
 $5 = $min_stress;
 $pitch = 0;
 $increment = 0;
 $n_primary = 0;
 $n_steps = 0;
 $overflow = 0;
 $drops = HEAP32[$3 + 4 >> 2] | 0;
 $pitch_range = (HEAPU8[$3 + 3 | 0] | 0) - (HEAPU8[$3 + 2 | 0] | 0) << 8;
 $pitch_range_abs = Math_abs($pitch_range | 0) | 0;
 if (($continuing | 0) != 0) {
  $initial = 0;
  $overflow = 0;
  $n_overflow = 5;
  $overflow_tab = 19648;
  $increment = ($pitch_range | 0) / ((HEAPU8[$3 + 8 | 0] | 0) - 1 | 0) | 0;
 } else {
  $n_overflow = HEAPU8[$3 + 10 | 0] | 0;
  $overflow_tab = HEAP32[$3 + 12 >> 2] | 0;
  $initial = 1;
 }
 while (1) {
  if (($1 | 0) >= ($2 | 0)) {
   break;
  }
  $syl = (HEAP32[28524] | 0) + ($1 * 6 | 0) | 0;
  $stress = HEAP8[$syl | 0] | 0;
  if (($initial | 0) != 0) {
   label = 8;
  } else {
   if (($stress | 0) >= ($5 | 0)) {
    label = 8;
   }
  }
  if ((label | 0) == 8) {
   label = 0;
   do {
    if (($initial | 0) != 0) {
     label = 10;
    } else {
     if (($stress | 0) == 5) {
      label = 10;
      break;
     }
     if (($n_steps | 0) > 0) {
      $pitch = $pitch + $increment | 0;
     } else {
      $110 = $overflow;
      $overflow = $110 + 1 | 0;
      $pitch = (HEAPU8[$3 + 3 | 0] << 8) + ((Math_imul($pitch_range_abs, HEAP8[$overflow_tab + $110 | 0] | 0) | 0) / 64 | 0) | 0;
      if (($overflow | 0) >= ($n_overflow | 0)) {
       $overflow = 0;
       $overflow_tab = HEAP32[$3 + 12 >> 2] | 0;
      }
     }
    }
   } while (0);
   if ((label | 0) == 10) {
    label = 0;
    $initial = 0;
    $overflow = 0;
    $69 = __ZL16count_incrementsiii($1, $2, $5) | 0;
    $n_primary = $69;
    $n_steps = $69;
    if (($n_steps | 0) > (HEAPU8[$3 + 8 | 0] | 0)) {
     $n_steps = HEAPU8[$3 + 8 | 0] | 0;
    }
    if (($n_steps | 0) > 1) {
     $increment = ($pitch_range | 0) / ($n_steps - 1 | 0) | 0;
    } else {
     $increment = 0;
    }
    $pitch = HEAPU8[$3 + 2 | 0] << 8;
   }
   $n_steps = $n_steps - 1 | 0;
   $n_primary = $n_primary - 1 | 0;
   do {
    if ((HEAP32[$4 + 8 >> 2] | 0) != 0) {
     if (($n_primary | 0) >= 2) {
      break;
     }
     $pitch = HEAP16[(HEAP32[$4 + 8 >> 2] | 0) + ($n_primary << 1) >> 1] << 8;
    }
   } while (0);
  }
  if (($stress | 0) >= 4) {
   HEAP8[$syl | 0] = 6;
   __ZL9set_pitchP8SYLLABLEii($syl, $pitch >> 8, HEAP32[$drops + ($stress << 2) >> 2] | 0);
  } else {
   if (($stress | 0) >= 3) {
    __ZL9set_pitchP8SYLLABLEii($syl, $pitch >> 8, HEAP32[$drops + ($stress << 2) >> 2] | 0);
   } else {
    if ((HEAP8[(HEAP32[28524] | 0) + (($1 - 1 | 0) * 6 | 0) | 0] & 63 | 0) >= 3) {
     __ZL9set_pitchP8SYLLABLEii($syl, ($pitch >> 8) - (HEAP8[$3 + 9 | 0] | 0) | 0, HEAP32[$drops + ($stress << 2) >> 2] | 0);
    } else {
     __ZL9set_pitchP8SYLLABLEii($syl, $pitch >> 8, HEAP32[$drops + ($stress << 2) >> 2] | 0);
    }
   }
  }
  $1 = $1 + 1 | 0;
 }
 STACKTOP = sp;
 return $1 | 0;
}
function __Z14LoadDictionaryP10TranslatorPKci($tr, $name, $no_error) {
 $tr = $tr | 0;
 $name = $name | 0;
 $no_error = $no_error | 0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $hash = 0, $p = 0, $pw = 0, $length = 0, $f = 0, $size = 0, $fname = 0, $83 = 0, $88 = 0, $116 = 0, $145 = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 184 | 0;
 $fname = sp | 0;
 $2 = $tr;
 $3 = $name;
 $4 = $no_error;
 _strcpy(90512, $3 | 0) | 0;
 _strcpy($2 + 340 | 0, $3 | 0) | 0;
 _sprintf($fname | 0, 17048, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 24 | 0, HEAP32[tempVarArgs >> 2] = 76328, HEAP32[tempVarArgs + 8 >> 2] = 47, HEAP32[tempVarArgs + 16 >> 2] = $3, tempVarArgs) | 0) | 0;
 STACKTOP = tempVarArgs;
 $size = __Z13GetFileLengthPKc($fname | 0) | 0;
 if ((HEAP32[$2 + 808 >> 2] | 0) != 0) {
  __Z4FreePv(HEAP32[$2 + 808 >> 2] | 0);
  HEAP32[$2 + 808 >> 2] = 0;
 }
 $f = _fopen($fname | 0, 17864) | 0;
 do {
  if (($f | 0) != 0) {
   if ($size >>> 0 <= 0 >>> 0) {
    break;
   }
   HEAP32[$2 + 808 >> 2] = __Z5Alloci($size) | 0;
   $size = _fread(HEAP32[$2 + 808 >> 2] | 0, 1, $size | 0, $f | 0) | 0;
   _fclose($f | 0) | 0;
   $pw = HEAP32[$2 + 808 >> 2] | 0;
   $length = __Z13Reverse4Bytesi(HEAP32[$pw + 4 >> 2] | 0) | 0;
   if ($size >>> 0 <= 1032 >>> 0) {
    _fprintf(HEAP32[_stderr >> 2] | 0, 14552, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $fname, tempVarArgs) | 0) | 0;
    STACKTOP = tempVarArgs;
    $1 = 2;
    $145 = $1;
    STACKTOP = sp;
    return $145 | 0;
   }
   do {
    if ((__Z13Reverse4Bytesi(HEAP32[$pw >> 2] | 0) | 0) == 1024) {
     if (($length | 0) <= 0) {
      break;
     }
     if (($length | 0) > 134217728) {
      break;
     }
     HEAP32[$2 + 804 >> 2] = (HEAP32[$2 + 808 >> 2] | 0) + $length;
     __ZL10InitGroupsP10Translator($2);
     $p = (HEAP32[$2 + 808 >> 2] | 0) + 8 | 0;
     $hash = 0;
     while (1) {
      if (($hash | 0) >= 1024) {
       break;
      }
      HEAP32[$2 + 812 + ($hash << 2) >> 2] = $p;
      while (1) {
       $116 = HEAP8[$p] | 0;
       $length = $116;
       if (($116 | 0) == 0) {
        break;
       }
       $p = $p + $length | 0;
      }
      $p = $p + 1 | 0;
      $hash = $hash + 1 | 0;
     }
     do {
      if ((HEAP32[$2 + 444 >> 2] | 0) > 0) {
       if ($size >>> 0 >= (HEAP32[$2 + 444 >> 2] | 0) >>> 0) {
        break;
       }
       _fprintf(HEAP32[_stderr >> 2] | 0, 10216, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $3, tempVarArgs) | 0) | 0;
       STACKTOP = tempVarArgs;
      }
     } while (0);
     $1 = 0;
     $145 = $1;
     STACKTOP = sp;
     return $145 | 0;
    }
   } while (0);
   $83 = HEAP32[_stderr >> 2] | 0;
   $88 = __Z13Reverse4Bytesi(HEAP32[$pw >> 2] | 0) | 0;
   _fprintf($83 | 0, 10984, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 24 | 0, HEAP32[tempVarArgs >> 2] = $fname, HEAP32[tempVarArgs + 8 >> 2] = $88, HEAP32[tempVarArgs + 16 >> 2] = $length, tempVarArgs) | 0) | 0;
   STACKTOP = tempVarArgs;
   $1 = 2;
   $145 = $1;
   STACKTOP = sp;
   return $145 | 0;
  }
 } while (0);
 if (($4 | 0) == 0) {
  _fprintf(HEAP32[_stderr >> 2] | 0, 15784, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $fname, tempVarArgs) | 0) | 0;
  STACKTOP = tempVarArgs;
 }
 $1 = 1;
 $145 = $1;
 STACKTOP = sp;
 return $145 | 0;
}
function __ZL9DoSample2iiiiii($index, $which, $std_length, $control, $length_mod, $amp) {
 $index = $index | 0;
 $which = $which | 0;
 $std_length = $std_length | 0;
 $control = $control | 0;
 $length_mod = $length_mod | 0;
 $amp = $amp | 0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $length = 0, $wav_length = 0, $wav_scale = 0, $min_length = 0, $x = 0, $len4 = 0, $q = 0, $p = 0, $257 = 0, sp = 0;
 sp = STACKTOP;
 $2 = $index;
 $3 = $which;
 $4 = $std_length;
 $5 = $control;
 $6 = $length_mod;
 $7 = $amp;
 $2 = $2 & 8388607;
 $p = (HEAP32[9046] | 0) + $2 | 0;
 $wav_scale = HEAPU8[$p + 2 | 0] | 0;
 $wav_length = (HEAPU8[$p + 1 | 0] | 0) << 8;
 $wav_length = $wav_length + (HEAPU8[$p | 0] | 0) | 0;
 if (($wav_length | 0) == 0) {
  $1 = 0;
  $257 = $1;
  STACKTOP = sp;
  return $257 | 0;
 }
 $min_length = HEAP32[9120] | 0;
 if (($wav_scale | 0) == 0) {
  $min_length = $min_length << 1;
 } else {}
 if (($4 | 0) > 0) {
  $4 = (Math_imul($4, HEAP32[9496] | 0) | 0) / 1e3 | 0;
  if (($wav_scale | 0) == 0) {
   $4 = $4 << 1;
  }
  $x = (Math_imul($min_length, $4) | 0) / ($wav_length | 0) | 0;
  if (($x | 0) > ($min_length | 0)) {
   $min_length = $x;
  }
 } else {
  $4 = $wav_length;
 }
 if (($6 | 0) > 0) {
  $4 = (Math_imul($4, $6) | 0) / 256 | 0;
 }
 $length = (Math_imul($4, HEAP32[9117] | 0) | 0) / 256 | 0;
 if (($5 & 4 | 0) != 0) {
  if (($length | 0) > ($4 | 0)) {
   $length = $4;
  } else {}
 }
 if (($length | 0) < ($min_length | 0)) {
  $length = $min_length;
 }
 if (($wav_scale | 0) == 0) {
  $length = ($length | 0) / 2 | 0;
  $wav_length = ($wav_length | 0) / 2 | 0;
 }
 if (($7 | 0) < 0) {
  $1 = $length;
  $257 = $1;
  STACKTOP = sp;
  return $257 | 0;
 }
 $len4 = ($wav_length | 0) / 4 | 0;
 $2 = $2 + 4 | 0;
 if (($3 & 256 | 0) != 0) {
  HEAP32[31354] = HEAP32[8360];
  $q = 33456 + (HEAP32[8360] << 4) | 0;
  HEAP32[$q >> 2] = 7;
  HEAP32[$q + 4 >> 2] = $length | $wav_length << 16;
  HEAP32[$q + 8 >> 2] = (HEAP32[9046] | 0) + $2;
  HEAP32[$q + 12 >> 2] = $wav_scale + ($7 << 8);
  __Z8WcmdqIncv();
  $1 = $length;
  $257 = $1;
  STACKTOP = sp;
  return $257 | 0;
 }
 if (($length | 0) > ($wav_length | 0)) {
  $x = $len4 * 3 | 0;
  $length = $length - $x | 0;
 } else {
  $x = $length;
  $length = 0;
 }
 HEAP32[31354] = HEAP32[8360];
 $q = 33456 + (HEAP32[8360] << 4) | 0;
 HEAP32[$q >> 2] = 6;
 HEAP32[$q + 4 >> 2] = $x;
 HEAP32[$q + 8 >> 2] = (HEAP32[9046] | 0) + $2;
 HEAP32[$q + 12 >> 2] = $wav_scale + ($7 << 8);
 __Z8WcmdqIncv();
 while (1) {
  if (($length | 0) <= ($len4 * 3 | 0 | 0)) {
   break;
  }
  $x = $len4;
  if (($wav_scale | 0) == 0) {
   $x = $x << 1;
  }
  HEAP32[31354] = HEAP32[8360];
  $q = 33456 + (HEAP32[8360] << 4) | 0;
  HEAP32[$q >> 2] = 6;
  HEAP32[$q + 4 >> 2] = $len4 << 1;
  HEAP32[$q + 8 >> 2] = (HEAP32[9046] | 0) + ($2 + $x);
  HEAP32[$q + 12 >> 2] = $wav_scale + ($7 << 8);
  __Z8WcmdqIncv();
  $length = $length - ($len4 << 1) | 0;
 }
 if (($length | 0) > 0) {
  $x = $wav_length - $length | 0;
  if (($wav_scale | 0) == 0) {
   $x = $x << 1;
  }
  HEAP32[31354] = HEAP32[8360];
  $q = 33456 + (HEAP32[8360] << 4) | 0;
  HEAP32[$q >> 2] = 6;
  HEAP32[$q + 4 >> 2] = $length;
  HEAP32[$q + 8 >> 2] = (HEAP32[9046] | 0) + ($2 + $x);
  HEAP32[$q + 12 >> 2] = $wav_scale + ($7 << 8);
  __Z8WcmdqIncv();
 }
 $1 = $length;
 $257 = $1;
 STACKTOP = sp;
 return $257 | 0;
}
function __ZL10GetMbrNameP12PHONEME_LISTP11PHONEME_TABS2_S2_PiS3_S3_($plist, $ph, $ph_prev, $ph_next, $name2, $split, $control) {
 $plist = $plist | 0;
 $ph = $ph | 0;
 $ph_prev = $ph_prev | 0;
 $ph_next = $ph_next | 0;
 $name2 = $name2 | 0;
 $split = $split | 0;
 $control = $control | 0;
 var $1 = 0, $2 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $pr = 0, $other_ph = 0, $found = 0, $193 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = $plist;
 $4 = $ph_prev;
 $5 = $ph_next;
 $6 = $name2;
 $7 = $split;
 $8 = $control;
 $found = 0;
 HEAP32[$6 >> 2] = 0;
 HEAP32[$7 >> 2] = 0;
 HEAP32[$8 >> 2] = 0;
 HEAP32[22870] = HEAP32[$ph >> 2];
 $pr = HEAP32[31350] | 0;
 while (1) {
  if ((HEAP32[$pr >> 2] | 0) == 0) {
   break;
  }
  if ((HEAP32[22870] | 0) == (HEAP32[$pr >> 2] | 0)) {
   if ((HEAP32[$pr + 4 >> 2] | 0) == 0) {
    $found = 1;
   } else {
    do {
     if ((HEAP32[$pr + 4 >> 2] | 0) == 58) {
      if ((HEAP16[$2 >> 1] & 8 | 0) == 0) {
       label = 9;
       break;
      }
      $found = 1;
     } else {
      label = 9;
     }
    } while (0);
    if ((label | 0) == 9) {
     label = 0;
     if ((HEAP32[$pr + 20 >> 2] & 2 | 0) != 0) {
      $other_ph = $4;
     } else {
      do {
       if ((HEAP32[$pr + 20 >> 2] & 8 | 0) != 0) {
        if ((HEAP8[$2 + 45 | 0] | 0) == 0) {
         label = 14;
         break;
        }
        $other_ph = HEAP32[10814] | 0;
       } else {
        label = 14;
       }
      } while (0);
      if ((label | 0) == 14) {
       label = 0;
       $other_ph = $5;
      }
     }
     do {
      if ((HEAP32[$pr + 4 >> 2] | 0) == (HEAP32[$other_ph >> 2] | 0)) {
       label = 21;
      } else {
       if ((HEAP32[$pr + 4 >> 2] | 0) == 2) {
        if ((HEAPU8[$other_ph + 11 | 0] | 0) == 2) {
         label = 21;
         break;
        }
       }
       if ((HEAP32[$pr + 4 >> 2] | 0) != 95) {
        break;
       }
       if ((HEAPU8[$other_ph + 11 | 0] | 0) == 0) {
        label = 21;
       }
      }
     } while (0);
     if ((label | 0) == 21) {
      label = 0;
      $found = 1;
     }
    }
   }
   do {
    if ((HEAP32[$pr + 20 >> 2] & 4 | 0) != 0) {
     if ((HEAPU8[$2 + 21 | 0] | 0) != 0) {
      break;
     }
     $found = 0;
    }
   } while (0);
   do {
    if ((HEAP32[$pr + 20 >> 2] & 64 | 0) != 0) {
     if ((HEAPU8[$2 + 45 | 0] | 0) != 0) {
      break;
     }
     $found = 0;
    }
   } while (0);
   do {
    if ((HEAP32[$pr + 20 >> 2] & 32 | 0) != 0) {
     if ((HEAPU8[$2 + 3 | 0] | 0) >= (HEAPU8[$2 + 6 | 0] | 0)) {
      break;
     }
     $found = 0;
    }
   } while (0);
   if (($found | 0) != 0) {
    label = 34;
    break;
   }
  }
  $pr = $pr + 24 | 0;
 }
 do {
  if ((label | 0) == 34) {
   HEAP32[$6 >> 2] = HEAP32[$pr + 12 >> 2];
   HEAP32[$7 >> 2] = HEAP32[$pr + 16 >> 2];
   HEAP32[$8 >> 2] = HEAP32[$pr + 20 >> 2];
   if ((HEAP32[$pr + 20 >> 2] & 16 | 0) == 0) {
    HEAP32[22870] = HEAP32[$pr + 8 >> 2];
    break;
   }
   HEAP32[28448] = HEAP32[$pr + 8 >> 2];
   $1 = 0;
   $193 = $1;
   STACKTOP = sp;
   return $193 | 0;
  }
 } while (0);
 if ((HEAP32[28448] | 0) != 0) {
  HEAP32[22870] = HEAP32[22870] << 8 | HEAP32[28448] & 255;
 }
 HEAP32[28448] = 0;
 $1 = HEAP32[22870] | 0;
 $193 = $1;
 STACKTOP = sp;
 return $193 | 0;
}
function __ZL14LookupCharNameP10Translatorii($tr, $c, $only) {
 $tr = $tr | 0;
 $c = $c | 0;
 $only = $only | 0;
 var $1 = 0, $3 = 0, $flags = 0, $single_letter = 0, $phonemes = 0, $phonemes2 = 0, $lang_name = 0, $string = 0, $104 = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 168 | 0;
 $flags = sp | 0;
 $single_letter = sp + 8 | 0;
 $phonemes = sp + 32 | 0;
 $phonemes2 = sp + 96 | 0;
 $string = sp + 160 | 0;
 $1 = $tr;
 $3 = $only;
 $lang_name = 0;
 HEAP8[91336] = 0;
 HEAP32[$flags >> 2] = 0;
 HEAP32[$flags + 4 >> 2] = 0;
 HEAP8[$single_letter | 0] = 0;
 HEAP8[$single_letter + 1 | 0] = 95;
 HEAP8[$single_letter + ((__Z8utf8_outjPc($c, $single_letter + 2 | 0) | 0) + 2) | 0] = 0;
 if (($3 | 0) != 0) {
  HEAP32[$string >> 2] = $single_letter + 2;
  __Z14LookupDictListP10TranslatorPPcS1_PjiP8WORD_TAB($1, $string, $phonemes | 0, $flags | 0, 0, 0) | 0;
 } else {
  HEAP32[$string >> 2] = $single_letter + 1;
  if ((__Z14LookupDictListP10TranslatorPPcS1_PjiP8WORD_TAB($1, $string, $phonemes | 0, $flags | 0, 0, 0) | 0) == 0) {
   HEAP32[$string >> 2] = $single_letter + 2;
   if ((__Z14LookupDictListP10TranslatorPPcS1_PjiP8WORD_TAB($1, $string, $phonemes | 0, $flags | 0, 0, 0) | 0) == 0) {
    HEAP8[$single_letter + 1 | 0] = 32;
    __Z14TranslateRulesP10TranslatorPcS1_iS1_iPj($1, $single_letter + 2 | 0, $phonemes | 0, 60, 0, 0, 0) | 0;
   }
  }
 }
 do {
  if (($3 | 0) == 0) {
   if ((HEAP8[$phonemes | 0] | 0) != 0) {
    if ((HEAP8[$phonemes | 0] | 0) != 21) {
     break;
    }
   }
   if ((HEAP32[$1 + 324 >> 2] | 0) == 25966) {
    break;
   }
   __Z14SetTranslator2PKc(8024) | 0;
   HEAP32[$string >> 2] = $single_letter + 1;
   HEAP8[$single_letter + 1 | 0] = 95;
   if ((__Z14LookupDictListP10TranslatorPPcS1_PjiP8WORD_TAB(HEAP32[9110] | 0, $string, $phonemes | 0, $flags | 0, 0, 0) | 0) == 0) {
    HEAP32[$string >> 2] = $single_letter + 2;
    __Z14LookupDictListP10TranslatorPPcS1_PjiP8WORD_TAB(HEAP32[9110] | 0, $string, $phonemes | 0, $flags | 0, 0, 0) | 0;
   }
   if ((HEAP8[$phonemes | 0] | 0) != 0) {
    $lang_name = 8024;
   } else {
    __Z18SelectPhonemeTablei(HEAP32[(HEAP32[144] | 0) + 60 >> 2] | 0);
   }
  }
 } while (0);
 if ((HEAP8[$phonemes | 0] | 0) == 0) {
  if (($3 | 0) == 0) {
   _strcpy(91336, 17416) | 0;
  }
  STACKTOP = sp;
  return 91336;
 }
 if (($lang_name | 0) != 0) {
  __Z13SetWordStressP10TranslatorPcPjii(HEAP32[9110] | 0, $phonemes | 0, $flags | 0, -1, 0);
  __Z14DecodePhonemesPKcPc($phonemes | 0, $phonemes2 | 0);
  $104 = __Z13WordToString2j(HEAP32[$1 + 324 >> 2] | 0) | 0;
  _sprintf(91336, 18496, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 24 | 0, HEAP32[tempVarArgs >> 2] = 8024, HEAP32[tempVarArgs + 8 >> 2] = $phonemes2, HEAP32[tempVarArgs + 16 >> 2] = $104, tempVarArgs) | 0) | 0;
  STACKTOP = tempVarArgs;
  __Z18SelectPhonemeTablei(HEAP32[(HEAP32[144] | 0) + 60 >> 2] | 0);
 } else {
  __Z13SetWordStressP10TranslatorPcPjii($1, $phonemes | 0, $flags | 0, -1, 0);
  __Z14DecodePhonemesPKcPc($phonemes | 0, $phonemes2 | 0);
  _sprintf(91336, 17952, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $phonemes2, tempVarArgs) | 0) | 0;
  STACKTOP = tempVarArgs;
 }
 STACKTOP = sp;
 return 91336;
}
function __Z15WritePhMnemonicPcP11PHONEME_TABP12PHONEME_LISTiPi($phon_out, $ph, $plist, $use_ipa, $flags) {
 $phon_out = $phon_out | 0;
 $ph = $ph | 0;
 $plist = $plist | 0;
 $use_ipa = $use_ipa | 0;
 $flags = $flags | 0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $c = 0, $mnem = 0, $len = 0, $first = 0, $ix = 0, $p = 0, $phdata = 0, $105 = 0, $165 = 0, $180 = 0, label = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 152 | 0;
 $phdata = sp | 0;
 $2 = $phon_out;
 $3 = $ph;
 $4 = $plist;
 $5 = $use_ipa;
 $6 = $flags;
 $ix = 0;
 if ((HEAPU8[$3 + 10 | 0] | 0) == 15) {
  HEAP8[$2 | 0] = 0;
  $1 = $2;
  $180 = $1;
  STACKTOP = sp;
  return $180 | 0;
 }
 if ((HEAPU8[$3 + 10 | 0] | 0) == 21) {
  $p = 38200 + ((HEAPU8[$4 + 7 | 0] | 0) * 48 | 0) | 0;
  _sprintf($2 | 0, 8048, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $p, tempVarArgs) | 0) | 0;
  STACKTOP = tempVarArgs;
  $1 = $2 + (_strlen($2 | 0) | 0) | 0;
  $180 = $1;
  STACKTOP = sp;
  return $180 | 0;
 }
 do {
  if (($5 | 0) != 0) {
   HEAP8[$phdata + 132 | 0] = 0;
   if (($4 | 0) == 0) {
    __Z17InterpretPhoneme2iP12PHONEME_DATA(HEAPU8[$3 + 10 | 0] | 0, $phdata);
   } else {
    __Z16InterpretPhonemeP10TranslatoriP12PHONEME_LISTP12PHONEME_DATAP12WORD_PH_DATA(0, 0, $4, $phdata, 0);
   }
   $p = $phdata + 132 | 0;
   if ((HEAP8[$p] | 0) == 32) {
    HEAP8[$2] = 0;
    $1 = $2;
    $180 = $1;
    STACKTOP = sp;
    return $180 | 0;
   }
   do {
    if ((HEAP8[$p] | 0) != 0) {
     if ((HEAP8[$p] & 255 | 0) >= 32) {
      break;
     }
     if (($6 | 0) != 0) {
      HEAP32[$6 >> 2] = HEAP8[$p] | 0;
     }
     $p = $p + 1 | 0;
    }
   } while (0);
   $len = _strlen($p | 0) | 0;
   if (($len | 0) <= 0) {
    break;
   }
   _strcpy($2 | 0, $p | 0) | 0;
   $2 = $2 + $len | 0;
   HEAP8[$2] = 0;
   $1 = $2;
   $180 = $1;
   STACKTOP = sp;
   return $180 | 0;
  }
 } while (0);
 $first = 1;
 $mnem = HEAP32[$3 >> 2] | 0;
 L31 : while (1) {
  $105 = $mnem & 255;
  $c = $105;
  if (($105 | 0) == 0) {
   break;
  }
  if (($c | 0) == 47) {
   if ((HEAP32[19532] | 0) == 0) {
    label = 23;
    break;
   }
  }
  L37 : do {
   if (($5 | 0) != 0) {
    if (($first | 0) != 0) {
     if (($c | 0) == 95) {
      label = 27;
      break L31;
     }
    }
    if (($c | 0) == 35) {
     if ((HEAPU8[$3 + 11 | 0] | 0) == 2) {
      label = 30;
      break L31;
     }
    }
    do {
     if (($first | 0) == 0) {
      if ((__Z9IsDigit09j($c) | 0) == 0) {
       break;
      }
      break L37;
     }
    } while (0);
    do {
     if (($c | 0) >= 32) {
      if (($c | 0) >= 128) {
       break;
      }
      $c = HEAPU16[6032 + ($c - 32 << 1) >> 1] | 0;
     }
    } while (0);
    $ix = $ix + (__Z8utf8_outjPc($c, $2 + $ix | 0) | 0) | 0;
    label = 39;
   } else {
    $165 = $ix;
    $ix = $165 + 1 | 0;
    HEAP8[$2 + $165 | 0] = $c;
    label = 39;
   }
  } while (0);
  if ((label | 0) == 39) {
   label = 0;
   $first = 0;
  }
  $mnem = $mnem >> 8;
 }
 if ((label | 0) == 27) {} else if ((label | 0) == 30) {} else if ((label | 0) == 23) {}
 $2 = $2 + $ix | 0;
 HEAP8[$2] = 0;
 $1 = $2;
 $180 = $1;
 STACKTOP = sp;
 return $180 | 0;
}
function __ZL19compile_lettergroupPcP8_IO_FILE($input, $f_out) {
 $input = $input | 0;
 $f_out = $f_out | 0;
 var $1 = 0, $3 = 0, $p = 0, $p_start = 0, $group = 0, $ix = 0, $n_items = 0, $length = 0, $max_length = 0, $items = 0, $item_length = 0, $91 = 0, $111 = 0, $126 = 0, $163 = 0, label = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1e3 | 0;
 $items = sp | 0;
 $item_length = sp + 800 | 0;
 $3 = $f_out;
 $max_length = 0;
 $p = $input;
 do {
  if ((__Z9IsDigit09j(HEAP8[$p | 0] | 0) | 0) != 0) {
   if ((__Z9IsDigit09j(HEAP8[$p + 1 | 0] | 0) | 0) == 0) {
    break;
   }
   $group = _atoi($p | 0) | 0;
   if (($group | 0) >= 95) {
    _fprintf(HEAP32[28344] | 0, 17792, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = HEAP32[26930], HEAP32[tempVarArgs + 8 >> 2] = 94, tempVarArgs) | 0) | 0;
    STACKTOP = tempVarArgs;
    HEAP32[30922] = (HEAP32[30922] | 0) + 1;
    $1 = 1;
    $163 = $1;
    STACKTOP = sp;
    return $163 | 0;
   }
   while (1) {
    if (!((__Z8isspace2j(HEAP8[$p] | 0) | 0) != 0 ^ 1)) {
     break;
    }
    $p = $p + 1 | 0;
   }
   _fputc(6, $3 | 0) | 0;
   _fputc(18, $3 | 0) | 0;
   _fputc($group + 65 | 0, $3 | 0) | 0;
   if ((HEAP8[113488 + $group | 0] | 0) != 0) {
    _fprintf(HEAP32[28344] | 0, 17720, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = HEAP32[26930], HEAP32[tempVarArgs + 8 >> 2] = $group, tempVarArgs) | 0) | 0;
    STACKTOP = tempVarArgs;
    HEAP32[30922] = (HEAP32[30922] | 0) + 1;
   }
   HEAP8[113488 + $group | 0] = 1;
   $n_items = 0;
   while (1) {
    if (($n_items | 0) >= 200) {
     break;
    }
    while (1) {
     if ((__Z8isspace2j(HEAP8[$p] | 0) | 0) == 0) {
      break;
     }
     $p = $p + 1 | 0;
    }
    if ((HEAP8[$p] | 0) == 0) {
     label = 17;
     break;
    }
    $91 = $p;
    $p_start = $91;
    HEAP32[$items + ($n_items << 2) >> 2] = $91;
    while (1) {
     if ((HEAP8[$p] & 255 | 0) <= 32) {
      break;
     }
     if ((HEAP8[$p] | 0) == 95) {
      HEAP8[$p] = 32;
     }
     $p = $p + 1 | 0;
    }
    $111 = $p;
    $p = $111 + 1 | 0;
    HEAP8[$111] = 0;
    $length = $p - $p_start | 0;
    if (($length | 0) > ($max_length | 0)) {
     $max_length = $length;
    }
    $126 = $n_items;
    $n_items = $126 + 1 | 0;
    HEAP8[$item_length + $126 | 0] = $length;
   }
   if ((label | 0) == 17) {}
   while (1) {
    if (($max_length | 0) <= 1) {
     break;
    }
    $ix = 0;
    while (1) {
     if (($ix | 0) >= ($n_items | 0)) {
      break;
     }
     if ((HEAP8[$item_length + $ix | 0] | 0) == ($max_length | 0)) {
      _fwrite(HEAP32[$items + ($ix << 2) >> 2] | 0, 1, $max_length | 0, $3 | 0) | 0;
     }
     $ix = $ix + 1 | 0;
    }
    $max_length = $max_length - 1 | 0;
   }
   _fputc(7, $3 | 0) | 0;
   $1 = 0;
   $163 = $1;
   STACKTOP = sp;
   return $163 | 0;
  }
 } while (0);
 _fprintf(HEAP32[28344] | 0, 17872, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = HEAP32[26930], tempVarArgs) | 0) | 0;
 STACKTOP = tempVarArgs;
 HEAP32[30922] = (HEAP32[30922] | 0) + 1;
 $1 = 1;
 $163 = $1;
 STACKTOP = sp;
 return $163 | 0;
}
function __ZL18SubstitutePhonemesP10TranslatorP12PHONEME_LIST($tr, $plist_out) {
 $tr = $tr | 0;
 $plist_out = $plist_out | 0;
 var $2 = 0, $ix = 0, $k = 0, $replace_flags = 0, $n_plist_out = 0, $word_end = 0, $plist2 = 0, $next = 0, $11 = 0, $146 = 0, $148 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = $plist_out;
 $n_plist_out = 0;
 $next = 0;
 $ix = 0;
 while (1) {
  if (($ix | 0) < (HEAP32[19564] | 0)) {
   $11 = ($n_plist_out | 0) < 1e3;
  } else {
   $11 = 0;
  }
  if (!$11) {
   break;
  }
  $plist2 = 68328 + ($ix << 3) | 0;
  do {
   if ((HEAP16[$plist2 >> 1] & 32 | 0) != 0) {
    label = 33;
   } else {
    if (($ix | 0) < ((HEAP32[19564] | 0) - 1 | 0)) {
     $next = HEAP32[43256 + (HEAPU8[68330 + ($ix + 1 << 3) | 0] << 2) >> 2] | 0;
    }
    $word_end = 0;
    do {
     if ((HEAP16[$plist2 + 12 >> 1] | 0) != 0) {
      label = 11;
     } else {
      if (($next | 0) == 0) {
       break;
      }
      if ((HEAPU8[$next + 11 | 0] | 0) == 0) {
       label = 11;
      }
     }
    } while (0);
    if ((label | 0) == 11) {
     label = 0;
     $word_end = 1;
    }
    $k = 0;
    L18 : while (1) {
     if (($k | 0) >= (HEAP32[19556] | 0)) {
      break;
     }
     L21 : do {
      if ((HEAPU8[$plist2 + 2 | 0] | 0) == (HEAPU8[37992 + ($k * 3 | 0) | 0] | 0)) {
       $replace_flags = HEAP8[37994 + ($k * 3 | 0) | 0] | 0;
       do {
        if (($replace_flags & 1 | 0) != 0) {
         if (($word_end | 0) != 0) {
          break;
         }
         break L21;
        }
       } while (0);
       do {
        if (($replace_flags & 2 | 0) != 0) {
         if ((HEAP8[$plist2 + 3 | 0] & 7 | 0) <= 3) {
          break;
         }
         break L21;
        }
       } while (0);
       if (($replace_flags & 4 | 0) == 0) {
        label = 24;
        break L18;
       }
       if ((HEAPU16[$plist2 + 4 >> 1] | 0) != 0) {
        label = 24;
        break L18;
       }
      } else {}
     } while (0);
     $k = $k + 1 | 0;
    }
    if ((label | 0) == 24) {
     label = 0;
     HEAP8[$plist2 + 2 | 0] = HEAP8[37993 + ($k * 3 | 0) | 0] | 0;
     do {
      if ((HEAPU8[$plist2 + 3 | 0] | 0) > 1) {
       if ((HEAP32[(HEAP32[43256 + (HEAPU8[$plist2 + 2 | 0] << 2) >> 2] | 0) + 4 >> 2] & 2 | 0) == 0) {
        break;
       }
       HEAP8[$plist2 + 3 | 0] = 0;
      }
     } while (0);
    }
    if ((HEAPU8[$plist2 + 2 | 0] | 0) == 0) {
     break;
    } else {
     label = 33;
     break;
    }
   }
  } while (0);
  if ((label | 0) == 33) {
   label = 0;
   $146 = $2 + ($n_plist_out * 24 | 0) | 0;
   $148 = $plist2;
   HEAP16[$146 >> 1] = HEAP16[$148 >> 1] | 0;
   HEAP16[$146 + 2 >> 1] = HEAP16[$148 + 2 >> 1] | 0;
   HEAP16[$146 + 4 >> 1] = HEAP16[$148 + 4 >> 1] | 0;
   HEAP16[$146 + 6 >> 1] = HEAP16[$148 + 6 >> 1] | 0;
   HEAP32[$2 + ($n_plist_out * 24 | 0) + 8 >> 2] = HEAP32[43256 + (HEAPU8[$plist2 + 2 | 0] << 2) >> 2];
   HEAP8[$2 + ($n_plist_out * 24 | 0) + 17 | 0] = HEAP8[(HEAP32[$2 + ($n_plist_out * 24 | 0) + 8 >> 2] | 0) + 11 | 0] | 0;
   $n_plist_out = $n_plist_out + 1 | 0;
  }
  $ix = $ix + 1 | 0;
 }
 STACKTOP = sp;
 return $n_plist_out | 0;
}
function __Z14UnpronouncableP10TranslatorPci($tr, $word, $posn) {
 $tr = $tr | 0;
 $word = $word | 0;
 $posn = $posn | 0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $c = 0, $c1 = 0, $vowel_posn = 0, $index = 0, $count = 0, $17 = 0, $39 = 0, $144 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 8 | 0;
 $c = sp | 0;
 $2 = $tr;
 $3 = $word;
 $4 = $posn;
 $c1 = 0;
 $vowel_posn = 9;
 __Z7utf8_inPiPKc($c, $3) | 0;
 do {
  if ((HEAP32[$2 + 720 >> 2] | 0) > 0) {
   if ((HEAP32[$c >> 2] | 0) >= 577) {
    break;
   }
   $1 = 0;
   $144 = $1;
   STACKTOP = sp;
   return $144 | 0;
  }
 } while (0);
 $17 = __Z16AlphabetFromChari(HEAP32[$c >> 2] | 0) | 0;
 do {
  if (($17 | 0) != 0) {
   if ((HEAP32[$17 + 4 >> 2] | 0) == (HEAP32[$2 + 720 >> 2] | 0)) {
    break;
   }
   $1 = 0;
   $144 = $1;
   STACKTOP = sp;
   return $144 | 0;
  }
 } while (0);
 if ((HEAP32[$2 + 44 >> 2] | 0) == 1) {
  $1 = 0;
  $144 = $1;
  STACKTOP = sp;
  return $144 | 0;
 }
 $39 = HEAP8[$3] | 0;
 HEAP32[$c >> 2] = $39;
 do {
  if (($39 | 0) != 32) {
   if ((HEAP32[$c >> 2] | 0) == 0) {
    break;
   }
   if ((HEAP32[$c >> 2] | 0) == 39) {
    break;
   }
   $index = 0;
   $count = 0;
   while (1) {
    $index = $index + (__Z7utf8_inPiPKc($c, $3 + $index | 0) | 0) | 0;
    if ((HEAP32[$c >> 2] | 0) == 0) {
     label = 16;
     break;
    }
    if ((HEAP32[$c >> 2] | 0) == 32) {
     label = 16;
     break;
    }
    if ((HEAP32[$c >> 2] | 0) == 39) {
     if (($count | 0) > 1) {
      label = 20;
      break;
     }
     if (($4 | 0) > 0) {
      label = 20;
      break;
     }
    }
    if (($count | 0) == 0) {
     $c1 = HEAP32[$c >> 2] | 0;
    }
    do {
     if ((HEAP32[$c >> 2] | 0) == 39) {
      if ((HEAP32[$2 + 44 >> 2] | 0) != 3) {
       label = 26;
       break;
      }
     } else {
      label = 26;
     }
    } while (0);
    if ((label | 0) == 26) {
     label = 0;
     $count = $count + 1 | 0;
    }
    if ((__Z7IsVowelP10Translatori($2, HEAP32[$c >> 2] | 0) | 0) != 0) {
     label = 28;
     break;
    }
    if ((HEAP32[$c >> 2] | 0) != 39) {
     if ((__Z9iswalpha2i(HEAP32[$c >> 2] | 0) | 0) == 0) {
      label = 31;
      break;
     }
    }
   }
   if ((label | 0) == 28) {
    $vowel_posn = $count;
   } else if ((label | 0) == 20) {} else if ((label | 0) == 31) {
    $1 = 0;
    $144 = $1;
    STACKTOP = sp;
    return $144 | 0;
   } else if ((label | 0) == 16) {}
   do {
    if (($vowel_posn | 0) > 2) {
     if ((HEAP32[$2 + 44 >> 2] | 0) != 2) {
      break;
     }
     $1 = __ZL15Unpronouncable2P10TranslatorPc($2, $3) | 0;
     $144 = $1;
     STACKTOP = sp;
     return $144 | 0;
    }
   } while (0);
   if (($c1 | 0) == (HEAP32[$2 + 44 >> 2] | 0)) {
    $vowel_posn = $vowel_posn - 1 | 0;
   }
   if (($vowel_posn | 0) > ((HEAP8[$2 + 268 | 0] | 0) + 1 | 0)) {
    $1 = 1;
    $144 = $1;
    STACKTOP = sp;
    return $144 | 0;
   } else {
    $1 = 0;
    $144 = $1;
    STACKTOP = sp;
    return $144 | 0;
   }
  }
 } while (0);
 $1 = 0;
 $144 = $1;
 STACKTOP = sp;
 return $144 | 0;
}
function __Z13DisplayVoicesP8_IO_FILEPc($f_out, $language) {
 $f_out = $f_out | 0;
 $language = $language | 0;
 var $1 = 0, $2 = 0, $ix = 0, $p = 0, $len = 0, $count = 0, $c = 0, $j = 0, $v = 0, $lang_name = 0, $age_buf = 0, $buf = 0, $voices = 0, $voice_select = 0, $27 = 0, $73 = 0, $78 = 0, $102 = 0, $106 = 0, $114 = 0, label = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 120 | 0;
 $age_buf = sp | 0;
 $buf = sp + 16 | 0;
 $voice_select = sp + 96 | 0;
 $1 = $f_out;
 $2 = $language;
 do {
  if (($2 | 0) != 0) {
   if ((HEAP8[$2 | 0] | 0) == 0) {
    label = 4;
    break;
   }
   HEAP32[$voice_select + 4 >> 2] = $2;
   HEAP8[$voice_select + 13 | 0] = 0;
   HEAP8[$voice_select + 12 | 0] = 0;
   HEAP32[$voice_select >> 2] = 0;
   $voices = _espeak_ListVoices($voice_select) | 0;
  } else {
   label = 4;
  }
 } while (0);
 if ((label | 0) == 4) {
  $voices = _espeak_ListVoices(0) | 0;
 }
 _fprintf($1 | 0, 18608, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 7 & -8, HEAP32[tempVarArgs >> 2] = 0, tempVarArgs) | 0) | 0;
 STACKTOP = tempVarArgs;
 $ix = 0;
 while (1) {
  $27 = HEAP32[$voices + ($ix << 2) >> 2] | 0;
  $v = $27;
  if (($27 | 0) == 0) {
   break;
  }
  $count = 0;
  $p = HEAP32[$v + 4 >> 2] | 0;
  while (1) {
   if ((HEAP8[$p] | 0) == 0) {
    break;
   }
   $len = _strlen($p + 1 | 0) | 0;
   $lang_name = $p + 1 | 0;
   if ((HEAPU8[$v + 13 | 0] | 0) == 0) {
    _strcpy($age_buf | 0, 15968) | 0;
   } else {
    _sprintf($age_buf | 0, 14736, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = HEAPU8[$v + 13 | 0] | 0, tempVarArgs) | 0) | 0;
    STACKTOP = tempVarArgs;
   }
   if (($count | 0) == 0) {
    $j = 0;
    while (1) {
     if ($j >>> 0 >= 80 >>> 0) {
      break;
     }
     $73 = HEAP8[(HEAP32[$v >> 2] | 0) + $j | 0] | 0;
     $c = $73;
     if (($73 | 0) == 32) {
      $c = 95;
     }
     $78 = $c & 255;
     HEAP8[$buf + $j | 0] = $78;
     if (($78 << 24 >> 24 | 0) == 0) {
      label = 18;
      break;
     }
     $j = $j + 1 | 0;
    }
    if ((label | 0) == 18) {
     label = 0;
    }
    $102 = HEAP8[23584 + (HEAPU8[$v + 12 | 0] | 0) | 0] | 0;
    $106 = HEAP32[$v + 8 >> 2] | 0;
    _fprintf($1 | 0, 13376, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 48 | 0, HEAP32[tempVarArgs >> 2] = HEAP8[$p | 0] | 0, HEAP32[tempVarArgs + 8 >> 2] = $lang_name, HEAP32[tempVarArgs + 16 >> 2] = $age_buf, HEAP32[tempVarArgs + 24 >> 2] = $102, HEAP32[tempVarArgs + 32 >> 2] = $buf, HEAP32[tempVarArgs + 40 >> 2] = $106, tempVarArgs) | 0) | 0;
    STACKTOP = tempVarArgs;
   } else {
    $114 = HEAP8[$p | 0] | 0;
    _fprintf($1 | 0, 10328, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = $lang_name, HEAP32[tempVarArgs + 8 >> 2] = $114, tempVarArgs) | 0) | 0;
    STACKTOP = tempVarArgs;
   }
   $count = $count + 1 | 0;
   $p = $p + ($len + 2) | 0;
  }
  _fputc(10, $1 | 0) | 0;
  $ix = $ix + 1 | 0;
 }
 STACKTOP = sp;
 return;
}
function __ZL4GetCv() {
 var $1 = 0, $c = 0, $c1 = 0, $c2 = 0, $cbuf = 0, $ix = 0, $n_bytes = 0, $2 = 0, $56 = 0, $69 = 0, $134 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $cbuf = sp | 0;
 $2 = HEAP32[30932] | 0;
 $c1 = $2;
 if (($2 | 0) != 0) {
  HEAP32[30932] = 0;
  $1 = $c1;
  $134 = $1;
  STACKTOP = sp;
  return $134 | 0;
 }
 if ((HEAP32[22804] | 0) != 0) {
  $c1 = HEAP32[22804] | 0;
  HEAP32[22804] = 0;
 } else {
  $c1 = __ZL8GetC_getv() | 0;
 }
 do {
  if ((HEAP32[19538] | 0) != 3) {
   if ((HEAP32[19538] | 0) == 4) {
    break;
   }
   do {
    if ((HEAP32[19538] | 0) < 2) {
     if (($c1 & 128 | 0) == 0) {
      break;
     }
     $n_bytes = 0;
     do {
      if (($c1 & 224 | 0) == 192) {
       if (($c1 & 30 | 0) == 0) {
        label = 14;
        break;
       }
       $n_bytes = 1;
      } else {
       label = 14;
      }
     } while (0);
     if ((label | 0) == 14) {
      if (($c1 & 240 | 0) == 224) {
       $n_bytes = 2;
      } else {
       do {
        if (($c1 & 248 | 0) == 240) {
         if (($c1 & 15 | 0) > 4) {
          break;
         }
         $n_bytes = 3;
        }
       } while (0);
      }
     }
     $56 = $n_bytes;
     $ix = $56;
     do {
      if (($56 | 0) > 0) {
       $c = $c1 & (HEAPU8[18936 + $ix | 0] | 0);
       while (1) {
        if (($ix | 0) <= 0) {
         break;
        }
        $69 = __ZL8GetC_getv() | 0;
        HEAP32[$cbuf + ($ix << 2) >> 2] = $69;
        $c2 = $69;
        if (($69 | 0) == 0) {
         label = 25;
         break;
        }
        if (($c2 & 192 | 0) != 128) {
         label = 29;
         break;
        }
        $c = ($c << 6) + ($c2 & 63) | 0;
        $ix = $ix - 1 | 0;
       }
       if ((label | 0) == 25) {
        if ((HEAP32[19538] | 0) == 0) {
         HEAP32[19538] = 2;
        }
        __ZL10GetC_ungeti(32);
       } else if ((label | 0) == 29) {
        do {
         if (($n_bytes | 0) == 2) {
          if (($ix | 0) != 1) {
           break;
          }
          HEAP32[22804] = HEAP32[$cbuf + 8 >> 2];
         }
        } while (0);
        __ZL10GetC_ungeti($c2);
       }
       if (($ix | 0) != 0) {
        break;
       }
       HEAP32[22654] = (HEAP32[22654] | 0) + 1;
       $1 = $c;
       $134 = $1;
       STACKTOP = sp;
       return $134 | 0;
      }
     } while (0);
     do {
      if ((HEAP32[19538] | 0) == 0) {
       if ((__Z3Eofv() | 0) != 0) {
        break;
       }
       HEAP32[19538] = 2;
      }
     } while (0);
    }
   } while (0);
   HEAP32[22654] = (HEAP32[22654] | 0) + 1;
   if (($c1 | 0) >= 160) {
    $1 = HEAPU16[(HEAP32[(HEAP32[9112] | 0) + 448 >> 2] | 0) + ($c1 - 160 << 1) >> 1] | 0;
    $134 = $1;
    STACKTOP = sp;
    return $134 | 0;
   } else {
    $1 = $c1;
    $134 = $1;
    STACKTOP = sp;
    return $134 | 0;
   }
  }
 } while (0);
 HEAP32[22654] = (HEAP32[22654] | 0) + 1;
 $1 = $c1;
 $134 = $1;
 STACKTOP = sp;
 return $134 | 0;
}
function __Z15LoadMbrolaTablePKcS0_i($mbrola_voice, $phtrans, $srate) {
 $mbrola_voice = $mbrola_voice | 0;
 $phtrans = $phtrans | 0;
 $srate = $srate | 0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $size = 0, $ix = 0, $pw = 0, $f_in = 0, $path = 0, $49 = 0, $57 = 0, $74 = 0, $100 = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176 | 0;
 $path = sp | 0;
 $2 = $mbrola_voice;
 $3 = $phtrans;
 $4 = $srate;
 HEAP8[78288] = 0;
 HEAP32[19578] = 0;
 HEAP32[28448] = 0;
 if (($2 | 0) == 0) {
  HEAP32[9496] = HEAP32[9494];
  __Z12SetParameteriii(14, 0, 0);
  $1 = 0;
  $100 = $1;
  STACKTOP = sp;
  return $100 | 0;
 }
 _sprintf($path | 0, 10864, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = 76328, HEAP32[tempVarArgs + 8 >> 2] = $2, tempVarArgs) | 0) | 0;
 STACKTOP = tempVarArgs;
 if ((__Z13GetFileLengthPKc($path | 0) | 0) <= 0) {
  _sprintf($path | 0, 16816, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $2, tempVarArgs) | 0) | 0;
  STACKTOP = tempVarArgs;
  if ((__Z13GetFileLengthPKc($path | 0) | 0) <= 0) {
   _sprintf($path | 0, 15360, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = $2, HEAP32[tempVarArgs + 8 >> 2] = $2, tempVarArgs) | 0) | 0;
   STACKTOP = tempVarArgs;
   if ((__Z13GetFileLengthPKc($path | 0) | 0) <= 0) {
    _sprintf($path | 0, 14024, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $2, tempVarArgs) | 0) | 0;
    STACKTOP = tempVarArgs;
   }
  }
 }
 _close_MBR();
 if ((_init_MBR($path | 0) | 0) != 0) {
  $1 = 2;
  $100 = $1;
  STACKTOP = sp;
  return $100 | 0;
 }
 _setNoError_MBR(1);
 _sprintf($path | 0, 10768, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = 76328, HEAP32[tempVarArgs + 8 >> 2] = $3, tempVarArgs) | 0) | 0;
 STACKTOP = tempVarArgs;
 $size = __Z13GetFileLengthPKc($path | 0) | 0;
 $49 = _fopen($path | 0, 10064) | 0;
 $f_in = $49;
 if (($49 | 0) == 0) {
  _close_MBR();
  $1 = 2;
  $100 = $1;
  STACKTOP = sp;
  return $100 | 0;
 }
 $57 = _realloc(HEAP32[31350] | 0, $size) | 0;
 HEAP32[31350] = $57;
 if (($57 | 0) == 0) {
  _fclose($f_in | 0) | 0;
  _close_MBR();
  $1 = -1;
  $100 = $1;
  STACKTOP = sp;
  return $100 | 0;
 }
 HEAP32[28460] = __Z10Read4BytesP8_IO_FILE($f_in) | 0;
 $pw = HEAP32[31350] | 0;
 $ix = 4;
 while (1) {
  if (($ix | 0) >= ($size | 0)) {
   break;
  }
  $74 = $pw;
  $pw = $74 + 4 | 0;
  HEAP32[$74 >> 2] = __Z10Read4BytesP8_IO_FILE($f_in) | 0;
  $ix = $ix + 4 | 0;
 }
 $size = _fread(HEAP32[31350] | 0, 1, $size | 0, $f_in | 0) | 0;
 _fclose($f_in | 0) | 0;
 _setVolumeRatio_MBR(+(HEAP32[28460] & 255 | 0) / 16.0);
 HEAP32[9496] = $4;
 if (($4 | 0) == 22050) {
  __Z12SetParameteriii(14, 0, 0);
 } else {
  __Z12SetParameteriii(14, 1, 0);
 }
 _strcpy(78288, $2 | 0) | 0;
 HEAP32[19578] = 1e3;
 $1 = 0;
 $100 = $1;
 STACKTOP = sp;
 return $100 | 0;
}
function __ZL14VoiceFromStackv() {
 var $1 = 0, $ix = 0, $p = 0, $sp = 0, $v_id = 0, $voice_name_specified = 0, $voice_found = 0, $voice_select = 0, $language = 0, $buf = 0, $58 = 0, $157 = 0, label = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 152 | 0;
 $voice_found = sp | 0;
 $voice_select = sp + 8 | 0;
 $language = sp + 32 | 0;
 $buf = sp + 72 | 0;
 _strcpy(91288, 123760) | 0;
 _strcpy($language | 0, 123800) | 0;
 HEAP8[$voice_select + 13 | 0] = HEAP32[30939];
 HEAP8[$voice_select + 12 | 0] = HEAP32[30938];
 HEAP8[$voice_select + 14 | 0] = HEAP32[30937];
 HEAP32[$voice_select + 8 >> 2] = 0;
 $ix = 0;
 while (1) {
  if (($ix | 0) >= (HEAP32[28538] | 0)) {
   break;
  }
  $sp = 123744 + ($ix * 76 | 0) | 0;
  $voice_name_specified = 0;
  do {
   if ((HEAP8[$sp + 16 | 0] | 0) != 0) {
    if ((__Z17SelectVoiceByNamePP12espeak_VOICEPKc(0, $sp + 16 | 0) | 0) == 0) {
     break;
    }
    $voice_name_specified = 1;
    _strcpy(91288, $sp + 16 | 0) | 0;
    HEAP8[$language | 0] = 0;
    HEAP8[$voice_select + 12 | 0] = 0;
    HEAP8[$voice_select + 13 | 0] = 0;
    HEAP8[$voice_select + 14 | 0] = 0;
   }
  } while (0);
  if ((HEAP8[$sp + 56 | 0] | 0) != 0) {
   _strcpy($language | 0, $sp + 56 | 0) | 0;
   $p = HEAP32[32073] | 0;
   while (1) {
    $58 = $p;
    $p = $58 + 1 | 0;
    if ((HEAP8[$58] | 0) == 0) {
     break;
    }
    if ((_strcmp($p | 0, $language | 0) | 0) == 0) {
     label = 10;
     break;
    }
    $p = $p + ((_strlen($p | 0) | 0) + 1) | 0;
   }
   if ((label | 0) == 10) {
    label = 0;
    _strcpy($language | 0, (HEAP32[32073] | 0) + 1 | 0) | 0;
   }
   if (($voice_name_specified | 0) == 0) {
    HEAP8[91288] = 0;
   }
  }
  if ((HEAP32[$sp + 8 >> 2] | 0) != 0) {
   HEAP8[$voice_select + 12 | 0] = HEAP32[$sp + 8 >> 2];
  }
  if ((HEAP32[$sp + 12 >> 2] | 0) != 0) {
   HEAP8[$voice_select + 13 | 0] = HEAP32[$sp + 12 >> 2];
  }
  if ((HEAP32[$sp + 4 >> 2] | 0) != 0) {
   HEAP8[$voice_select + 14 | 0] = HEAP32[$sp + 4 >> 2];
  }
  $ix = $ix + 1 | 0;
 }
 HEAP32[$voice_select >> 2] = 91288;
 HEAP32[$voice_select + 4 >> 2] = $language;
 $v_id = __Z11SelectVoiceP12espeak_VOICEPi($voice_select, $voice_found) | 0;
 if (($v_id | 0) == 0) {
  $1 = 8896;
  $157 = $1;
  STACKTOP = sp;
  return $157 | 0;
 }
 do {
  if ((_strchr($v_id | 0, 43) | 0) == 0) {
   if ((HEAPU8[$voice_select + 12 | 0] | 0) != 0) {
    if ((HEAPU8[$voice_select + 12 | 0] | 0) != (HEAPU8[128300] | 0)) {
     break;
    }
   }
   if ((HEAP8[113392] | 0) == 0) {
    break;
   }
   _sprintf($buf | 0, 8832, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = $v_id, HEAP32[tempVarArgs + 8 >> 2] = 113392, tempVarArgs) | 0) | 0;
   STACKTOP = tempVarArgs;
   __Z8strncpy0PcPKci(91288, $buf | 0, 40);
   $1 = 91288;
   $157 = $1;
   STACKTOP = sp;
   return $157 | 0;
  }
 } while (0);
 $1 = $v_id;
 $157 = $1;
 STACKTOP = sp;
 return $157 | 0;
}
function __ZL15findPitchPeriodP17sonicStreamStructPs($stream, $samples) {
 $stream = $stream | 0;
 $samples = $samples | 0;
 var $1 = 0, $2 = 0, $minPeriod = 0, $maxPeriod = 0, $sampleRate = 0, $minDiff = 0, $maxDiff = 0, $retPeriod = 0, $skip = 0, $period = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $120 = 0, $121 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $minDiff = sp | 0;
 $maxDiff = sp + 8 | 0;
 $1 = $stream;
 $2 = $samples;
 $minPeriod = HEAP32[$1 + 56 >> 2] | 0;
 $maxPeriod = HEAP32[$1 + 60 >> 2] | 0;
 $sampleRate = HEAP32[$1 + 72 >> 2] | 0;
 $skip = 1;
 if (($sampleRate | 0) > 4e3) {
  $skip = ($sampleRate | 0) / 4e3 | 0;
 }
 do {
  if ((HEAP32[$1 + 28 >> 2] | 0) == 1) {
   if (($skip | 0) != 1) {
    label = 6;
    break;
   }
   $period = __ZL22findPitchPeriodInRangePsiiPiS0_($2, $minPeriod, $maxPeriod, $minDiff, $maxDiff) | 0;
  } else {
   label = 6;
  }
 } while (0);
 if ((label | 0) == 6) {
  __ZL15downSampleInputP17sonicStreamStructPsi($1, $2, $skip);
  $period = __ZL22findPitchPeriodInRangePsiiPiS0_(HEAP32[$1 + 12 >> 2] | 0, ($minPeriod | 0) / ($skip | 0) | 0, ($maxPeriod | 0) / ($skip | 0) | 0, $minDiff, $maxDiff) | 0;
  if (($skip | 0) != 1) {
   $period = Math_imul($period, $skip) | 0;
   $minPeriod = $period - ($skip << 2) | 0;
   $maxPeriod = $period + ($skip << 2) | 0;
   if (($minPeriod | 0) < (HEAP32[$1 + 56 >> 2] | 0)) {
    $minPeriod = HEAP32[$1 + 56 >> 2] | 0;
   }
   if (($maxPeriod | 0) > (HEAP32[$1 + 60 >> 2] | 0)) {
    $maxPeriod = HEAP32[$1 + 60 >> 2] | 0;
   }
   if ((HEAP32[$1 + 28 >> 2] | 0) == 1) {
    $period = __ZL22findPitchPeriodInRangePsiiPiS0_($2, $minPeriod, $maxPeriod, $minDiff, $maxDiff) | 0;
   } else {
    __ZL15downSampleInputP17sonicStreamStructPsi($1, $2, 1);
    $period = __ZL22findPitchPeriodInRangePsiiPiS0_(HEAP32[$1 + 12 >> 2] | 0, $minPeriod, $maxPeriod, $minDiff, $maxDiff) | 0;
   }
  }
 }
 if ((__ZL16prevPeriodBetterP17sonicStreamStructiii($1, $period, HEAP32[$minDiff >> 2] | 0, HEAP32[$maxDiff >> 2] | 0) | 0) != 0) {
  $retPeriod = HEAP32[$1 + 76 >> 2] | 0;
  $112 = HEAP32[$minDiff >> 2] | 0;
  $113 = $1;
  $114 = $113 + 84 | 0;
  HEAP32[$114 >> 2] = $112;
  $115 = HEAP32[$maxDiff >> 2] | 0;
  $116 = $1;
  $117 = $116 + 80 | 0;
  HEAP32[$117 >> 2] = $115;
  $118 = $period;
  $119 = $1;
  $120 = $119 + 76 | 0;
  HEAP32[$120 >> 2] = $118;
  $121 = $retPeriod;
  STACKTOP = sp;
  return $121 | 0;
 } else {
  $retPeriod = $period;
  $112 = HEAP32[$minDiff >> 2] | 0;
  $113 = $1;
  $114 = $113 + 84 | 0;
  HEAP32[$114 >> 2] = $112;
  $115 = HEAP32[$maxDiff >> 2] | 0;
  $116 = $1;
  $117 = $116 + 80 | 0;
  HEAP32[$117 >> 2] = $115;
  $118 = $period;
  $119 = $1;
  $120 = $119 + 76 | 0;
  HEAP32[$120 >> 2] = $118;
  $121 = $retPeriod;
  STACKTOP = sp;
  return $121 | 0;
 }
 return 0;
}
function __Z17TransposeAlphabetP10TranslatorPc($tr, $text) {
 $tr = $tr | 0;
 $text = $text | 0;
 var $1 = 0, $2 = 0, $3 = 0, $c = 0, $c2 = 0, $ix = 0, $offset = 0, $min = 0, $max = 0, $map = 0, $p = 0, $p2 = 0, $all_alpha = 0, $bits = 0, $acc = 0, $pairs_start = 0, $pairs_list = 0, $bufix = 0, $buf = 0, $45 = 0, $64 = 0, $80 = 0, $90 = 0, $93 = 0, $98 = 0, $151 = 0, $163 = 0, $181 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176 | 0;
 $c = sp | 0;
 $buf = sp + 8 | 0;
 $2 = $tr;
 $3 = $text;
 $p = $3;
 $all_alpha = 1;
 $offset = (HEAP32[$2 + 332 >> 2] | 0) - 1 | 0;
 $min = HEAP32[$2 + 332 >> 2] | 0;
 $max = HEAP32[$2 + 328 >> 2] | 0;
 $map = HEAP32[$2 + 336 >> 2] | 0;
 $pairs_start = $max - $min + 2 | 0;
 $bufix = 0;
 do {
  $p = $p + (__Z7utf8_inPiPKc($c, $p) | 0) | 0;
  if ((HEAP32[$c >> 2] | 0) != 0) {
   if ((HEAP32[$c >> 2] | 0) < ($min | 0)) {
    label = 12;
    break;
   }
   if ((HEAP32[$c >> 2] | 0) > ($max | 0)) {
    label = 12;
    break;
   }
   if (($map | 0) == 0) {
    $45 = $bufix;
    $bufix = $45 + 1 | 0;
    HEAP8[$buf + $45 | 0] = (HEAP32[$c >> 2] | 0) - $offset;
   } else {
    if ((HEAP8[$map + ((HEAP32[$c >> 2] | 0) - $min) | 0] | 0) <= 0) {
     label = 9;
     break;
    }
    $64 = $bufix;
    $bufix = $64 + 1 | 0;
    HEAP8[$buf + $64 | 0] = HEAP8[$map + ((HEAP32[$c >> 2] | 0) - $min) | 0] | 0;
   }
  }
  if ((HEAP32[$c >> 2] | 0) != 0) {
   $80 = ($bufix | 0) < 160;
  } else {
   $80 = 0;
  }
 } while ($80);
 if ((label | 0) == 9) {
  $all_alpha = 0;
 } else if ((label | 0) == 12) {
  $all_alpha = 0;
 }
 HEAP8[$buf + $bufix | 0] = 0;
 if (($all_alpha | 0) == 0) {
  $1 = _strlen($3 | 0) | 0;
  $181 = $1;
  STACKTOP = sp;
  return $181 | 0;
 }
 $acc = 0;
 $bits = 0;
 $p = $buf | 0;
 $p2 = $buf | 0;
 while (1) {
  $90 = $p;
  $p = $90 + 1 | 0;
  $93 = HEAP8[$90] | 0;
  HEAP32[$c >> 2] = $93;
  if (($93 | 0) == 0) {
   break;
  }
  $98 = HEAP32[$2 + 8300 >> 2] | 0;
  $pairs_list = $98;
  if (($98 | 0) != 0) {
   $c2 = (HEAP32[$c >> 2] | 0) + (HEAP8[$p] << 8) | 0;
   $ix = 0;
   while (1) {
    if (($c2 | 0) < (HEAP16[$pairs_list + ($ix << 1) >> 1] | 0)) {
     break;
    }
    if (($c2 | 0) == (HEAP16[$pairs_list + ($ix << 1) >> 1] | 0)) {
     label = 25;
     break;
    }
    $ix = $ix + 1 | 0;
   }
   if ((label | 0) == 25) {
    label = 0;
    HEAP32[$c >> 2] = $ix + $pairs_start;
    $p = $p + 1 | 0;
   }
  }
  $acc = ($acc << 6) + (HEAP32[$c >> 2] & 63) | 0;
  $bits = $bits + 6 | 0;
  if (($bits | 0) >= 8) {
   $bits = $bits - 8 | 0;
   $151 = $p2;
   $p2 = $151 + 1 | 0;
   HEAP8[$151] = $acc >> $bits;
  }
 }
 if (($bits | 0) > 0) {
  $163 = $p2;
  $p2 = $163 + 1 | 0;
  HEAP8[$163] = $acc << 8 - $bits;
 }
 HEAP8[$p2] = 0;
 $ix = $p2 - $buf | 0;
 _memcpy($3 | 0, $buf | 0, $ix) | 0;
 $1 = $ix | 64;
 $181 = $1;
 STACKTOP = sp;
 return $181 | 0;
}
function __ZL13LoadSoundFilePKci($fname, $index) {
 $fname = $fname | 0;
 $index = $index | 0;
 var $1 = 0, $2 = 0, $3 = 0, $f = 0, $p = 0, $length = 0, $fname_temp = 0, $fname2 = 0, $ix = 0, $header = 0, $command = 0, $28 = 0, $65 = 0, $72 = 0, $103 = 0, $131 = 0, label = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 808 | 0;
 $fname_temp = sp | 0;
 $fname2 = sp + 104 | 0;
 $header = sp + 320 | 0;
 $command = sp + 336 | 0;
 $2 = $fname;
 $3 = $index;
 if (($2 | 0) == 0) {
  $2 = HEAP32[36532 + ($3 << 4) >> 2] | 0;
 }
 if (($2 | 0) == 0) {
  $1 = 1;
  $131 = $1;
  STACKTOP = sp;
  return $131 | 0;
 }
 if ((HEAP8[$2 | 0] | 0) != 47) {
  _sprintf($fname2 | 0, 16080, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 32 | 0, HEAP32[tempVarArgs >> 2] = 76328, HEAP32[tempVarArgs + 8 >> 2] = 47, HEAP32[tempVarArgs + 16 >> 2] = 47, HEAP32[tempVarArgs + 24 >> 2] = $2, tempVarArgs) | 0) | 0;
  STACKTOP = tempVarArgs;
  $2 = $fname2 | 0;
 }
 $f = 0;
 $28 = _fopen($2 | 0, 15920) | 0;
 $f = $28;
 if (($28 | 0) != 0) {
  _fseek($f | 0, 20, 0) | 0;
  $ix = 0;
  while (1) {
   if (($ix | 0) >= 3) {
    break;
   }
   HEAP32[$header + ($ix << 2) >> 2] = __Z10Read4BytesP8_IO_FILE($f) | 0;
   $ix = $ix + 1 | 0;
  }
  do {
   if ((HEAP32[$header >> 2] | 0) != 65537) {
    label = 15;
   } else {
    if ((HEAP32[$header + 4 >> 2] | 0) != (HEAP32[9496] | 0)) {
     label = 15;
     break;
    }
    if ((HEAP32[$header + 8 >> 2] | 0) != (HEAP32[9496] << 1 | 0)) {
     label = 15;
    }
   }
  } while (0);
  if ((label | 0) == 15) {
   _fclose($f | 0) | 0;
   $f = 0;
   _strcpy($fname_temp | 0, 15824) | 0;
   $65 = _mkstemp($fname_temp | 0) | 0;
   if (($65 | 0) >= 0) {
    _close($65 | 0) | 0;
    $72 = HEAP32[9496] | 0;
    _sprintf($command | 0, 15632, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 24 | 0, HEAP32[tempVarArgs >> 2] = $2, HEAP32[tempVarArgs + 8 >> 2] = $72, HEAP32[tempVarArgs + 16 >> 2] = $fname_temp, tempVarArgs) | 0) | 0;
    STACKTOP = tempVarArgs;
    if ((_system($command | 0) | 0) == 0) {
     $2 = $fname_temp | 0;
    }
   }
  }
 }
 do {
  if (($f | 0) == 0) {
   $f = _fopen($2 | 0, 15920) | 0;
   if (($f | 0) != 0) {
    break;
   }
   $1 = 3;
   $131 = $1;
   STACKTOP = sp;
   return $131 | 0;
  }
 } while (0);
 $length = __Z13GetFileLengthPKc($2) | 0;
 _fseek($f | 0, 0, 0) | 0;
 $103 = _realloc(HEAP32[36528 + ($3 << 4) >> 2] | 0, $length) | 0;
 $p = $103;
 if (($103 | 0) == 0) {
  _fclose($f | 0) | 0;
  $1 = 4;
  $131 = $1;
  STACKTOP = sp;
  return $131 | 0;
 } else {
  $length = _fread($p | 0, 1, $length | 0, $f | 0) | 0;
  _fclose($f | 0) | 0;
  _remove($fname_temp | 0) | 0;
  HEAP32[36524 + ($3 << 4) >> 2] = (HEAP32[$p + 40 >> 2] | 0) / 2 | 0;
  HEAP32[36528 + ($3 << 4) >> 2] = $p;
  $1 = 0;
  $131 = $1;
  STACKTOP = sp;
  return $131 | 0;
 }
 return 0;
}
function __Z24ChangeEquivalentPhonemesP10TranslatoriPc($tr, $lang2, $phonemes) {
 $tr = $tr | 0;
 $lang2 = $lang2 | 0;
 $phonemes = $phonemes | 0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $len = 0, $phon = 0, $p = 0, $pb = 0, $eqlist = 0, $p_out = 0, $p_in = 0, $remove_stress = 0, $phonbuf = 0, $10 = 0, $68 = 0, $76 = 0, $78 = 0, $127 = 0, $154 = 0, label = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 200 | 0;
 $phonbuf = sp | 0;
 $2 = $tr;
 $3 = $lang2;
 $4 = $phonemes;
 $remove_stress = 0;
 $10 = HEAP32[38244 + ((HEAP32[$2 + 404 >> 2] | 0) * 48 | 0) >> 2] | 0;
 if (($10 | 0) == 0) {
  $1 = 0;
  $154 = $1;
  STACKTOP = sp;
  return $154 | 0;
 }
 $pb = (HEAP32[17080] | 0) + $10 | 0;
 while (1) {
  if ((HEAPU8[$pb | 0] | 0) == 0) {
   label = 5;
   break;
  }
  if ((HEAPU8[$pb | 0] | 0) == ($3 | 0)) {
   break;
  }
  $len = (HEAPU8[$pb + 2 | 0] << 8) + (HEAPU8[$pb + 3 | 0] | 0) | 0;
  $pb = $pb + ($len << 2) | 0;
 }
 if ((label | 0) == 5) {
  $1 = 0;
  $154 = $1;
  STACKTOP = sp;
  return $154 | 0;
 }
 $remove_stress = HEAPU8[$pb + 1 | 0] | 0;
 if ((HEAP32[19530] | 0) == 2) {
  __Z14DecodePhonemesPKcPc($4, $phonbuf | 0);
  $68 = 38200 + ((HEAP32[$2 + 404 >> 2] | 0) * 48 | 0) | 0;
  _fprintf(HEAP32[19596] | 0, 9680, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 24 | 0, HEAP32[tempVarArgs >> 2] = 38200 + ($3 * 48 | 0), HEAP32[tempVarArgs + 8 >> 2] = $phonbuf, HEAP32[tempVarArgs + 16 >> 2] = $68, tempVarArgs) | 0) | 0;
  STACKTOP = tempVarArgs;
 }
 $p_in = $4;
 $eqlist = $pb + 8 | 0;
 $p_out = $phonbuf | 0;
 L17 : while (1) {
  $76 = $p_in;
  $p_in = $76 + 1 | 0;
  $78 = HEAP8[$76] | 0;
  $phon = $78;
  if (($78 << 24 >> 24 | 0) == 0) {
   break;
  }
  do {
   if (($remove_stress | 0) != 0) {
    if (($phon << 24 >> 24 & 255 | 0) >= 8) {
     break;
    }
    continue L17;
   }
  } while (0);
  $p = $eqlist;
  while (1) {
   if ((HEAP8[$p] | 0) == 0) {
    break;
   }
   $len = _strlen($p + 1 | 0) | 0;
   if ((HEAP8[$p] | 0) == ($phon << 24 >> 24 | 0)) {
    label = 19;
    break;
   }
   $p = $p + ($len + 2) | 0;
  }
  if ((label | 0) == 19) {
   label = 0;
   _strcpy($p_out | 0, $p + 1 | 0) | 0;
   $p_out = $p_out + $len | 0;
  }
  if ((HEAP8[$p] | 0) == 0) {
   $127 = $p_out;
   $p_out = $127 + 1 | 0;
   HEAP8[$127] = $phon;
  }
 }
 HEAP8[$p_out] = 0;
 if (($remove_stress | 0) != 0) {
  __Z13SetWordStressP10TranslatorPcPjii($2, $phonbuf | 0, 0, -1, 0);
 }
 _strcpy($4 | 0, $phonbuf | 0) | 0;
 if ((HEAP32[19530] | 0) == 2) {
  __Z18SelectPhonemeTablei(HEAP32[$2 + 404 >> 2] | 0);
  __Z14DecodePhonemesPKcPc($4, $phonbuf | 0);
  _fprintf(HEAP32[19596] | 0, 16544, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $phonbuf, tempVarArgs) | 0) | 0;
  STACKTOP = tempVarArgs;
 }
 $1 = 1;
 $154 = $1;
 STACKTOP = sp;
 return $154 | 0;
}
function __ZL21compile_dictlist_filePKcS0_($path, $filename) {
 $path = $path | 0;
 $filename = $filename | 0;
 var $1 = 0, $2 = 0, $3 = 0, $length = 0, $hash = 0, $p = 0, $count = 0, $f_in = 0, $buf = 0, $fname = 0, $dict_line = 0, $9 = 0, $17 = 0, $41 = 0, $59 = 0, $62 = 0, $79 = 0, label = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 544 | 0;
 $hash = sp | 0;
 $buf = sp + 8 | 0;
 $fname = sp + 208 | 0;
 $dict_line = sp + 416 | 0;
 $2 = $path;
 $3 = $filename;
 $count = 0;
 HEAP32[26644] = 0;
 _sprintf($fname | 0, 17616, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = $2, HEAP32[tempVarArgs + 8 >> 2] = $3, tempVarArgs) | 0) | 0;
 STACKTOP = tempVarArgs;
 $9 = _fopen($fname | 0, 8456) | 0;
 $f_in = $9;
 do {
  if (($9 | 0) == 0) {
   _sprintf($fname | 0, 17584, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = $2, HEAP32[tempVarArgs + 8 >> 2] = $3, tempVarArgs) | 0) | 0;
   STACKTOP = tempVarArgs;
   $17 = _fopen($fname | 0, 8456) | 0;
   $f_in = $17;
   if (($17 | 0) != 0) {
    break;
   }
   $1 = -1;
   $79 = $1;
   STACKTOP = sp;
   return $79 | 0;
  }
 } while (0);
 _fprintf(HEAP32[28344] | 0, 8e3, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $fname, tempVarArgs) | 0) | 0;
 STACKTOP = tempVarArgs;
 HEAP32[26930] = 0;
 while (1) {
  if ((_fgets($buf | 0, 200, $f_in | 0) | 0) == 0) {
   break;
  }
  HEAP32[26930] = (HEAP32[26930] | 0) + 1;
  $length = __ZL12compile_linePcS_Pi($buf | 0, $dict_line | 0, $hash) | 0;
  if (($length | 0) == 0) {
   continue;
  }
  $41 = 115488 + (HEAP32[$hash >> 2] << 2) | 0;
  HEAP32[$41 >> 2] = (HEAP32[$41 >> 2] | 0) + 1;
  $p = _malloc($length + 4 | 0) | 0;
  if (($p | 0) == 0) {
   label = 10;
   break;
  }
  $59 = $p;
  $62 = 119584 + (HEAP32[$hash >> 2] << 2) | 0;
  HEAP8[$59] = HEAP8[$62] | 0;
  HEAP8[$59 + 1 | 0] = HEAP8[$62 + 1 | 0] | 0;
  HEAP8[$59 + 2 | 0] = HEAP8[$62 + 2 | 0] | 0;
  HEAP8[$59 + 3 | 0] = HEAP8[$62 + 3 | 0] | 0;
  HEAP32[119584 + (HEAP32[$hash >> 2] << 2) >> 2] = $p;
  _memcpy($p + 4 | 0, $dict_line | 0, $length) | 0;
  $count = $count + 1 | 0;
 }
 if ((label | 0) == 10) {
  if ((HEAP32[28344] | 0) != 0) {
   _fprintf(HEAP32[28344] | 0, 17544, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 7 & -8, HEAP32[tempVarArgs >> 2] = 0, tempVarArgs) | 0) | 0;
   STACKTOP = tempVarArgs;
   HEAP32[30922] = (HEAP32[30922] | 0) + 1;
  }
 }
 _fprintf(HEAP32[28344] | 0, 17512, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $count, tempVarArgs) | 0) | 0;
 STACKTOP = tempVarArgs;
 _fclose($f_in | 0) | 0;
 $1 = 0;
 $79 = $1;
 STACKTOP = sp;
 return $79 | 0;
}
function __Z17SetSpellingStressP10TranslatorPcii($tr, $phonemes, $control, $n_chars) {
 $tr = $tr | 0;
 $phonemes = $phonemes | 0;
 $control = $control | 0;
 $n_chars = $n_chars | 0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $ix = 0, $c = 0, $n_stress = 0, $prev = 0, $count = 0, $buf = 0, $10 = 0, $22 = 0, $36 = 0, $104 = 0, $106 = 0, $115 = 0, $118 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 200 | 0;
 $buf = sp | 0;
 $1 = $tr;
 $2 = $phonemes;
 $3 = $control;
 $4 = $n_chars;
 $n_stress = 0;
 $prev = 0;
 $ix = 0;
 while (1) {
  $10 = HEAP8[$2 + $ix | 0] | 0;
  $c = $10;
  if (($10 | 0) == 0) {
   break;
  }
  do {
   if (($c | 0) == 6) {
    if (($prev | 0) == 21) {
     break;
    }
    $n_stress = $n_stress + 1 | 0;
   }
  } while (0);
  $22 = $c;
  $prev = $22;
  HEAP8[$buf + $ix | 0] = $22;
  $ix = $ix + 1 | 0;
 }
 HEAP8[$buf + $ix | 0] = 0;
 $count = 0;
 $prev = 0;
 $ix = 0;
 while (1) {
  $36 = HEAPU8[$buf + $ix | 0] | 0;
  $c = $36;
  if (($36 | 0) == 0) {
   break;
  }
  do {
   if (($c | 0) == 6) {
    if (($4 | 0) <= 1) {
     label = 24;
     break;
    }
    if (($prev | 0) == 21) {
     label = 24;
     break;
    }
    $count = $count + 1 | 0;
    if ((HEAP8[$1 + 269 | 0] | 0) == 1) {
     if (($count | 0) > 1) {
      $c = 5;
     }
    } else {
     if (($count | 0) != ($n_stress | 0)) {
      if ((($count | 0) % 3 | 0 | 0) != 0) {
       label = 20;
      } else {
       if (($count | 0) == ($n_stress - 1 | 0)) {
        label = 20;
       }
      }
      if ((label | 0) == 20) {
       label = 0;
       $c = 5;
      }
     }
    }
    label = 36;
   } else {
    label = 24;
   }
  } while (0);
  L32 : do {
   if ((label | 0) == 24) {
    label = 0;
    L34 : do {
     if (($c | 0) == 255) {
      do {
       if (($3 | 0) >= 2) {
        if (($ix | 0) == 0) {
         break;
        }
        if (($3 | 0) == 4) {
         $c = 9;
        }
        do {
         if ((($count | 0) % 3 | 0 | 0) == 0) {
          label = 32;
         } else {
          if (($3 | 0) > 2) {
           label = 32;
           break;
          }
          $c = 23;
         }
        } while (0);
        if ((label | 0) == 32) {
         label = 0;
         $c = 11;
        }
        break L34;
       }
      } while (0);
      break L32;
     }
    } while (0);
    label = 36;
   }
  } while (0);
  if ((label | 0) == 36) {
   label = 0;
   $104 = $c;
   $prev = $104;
   $106 = $2;
   $2 = $106 + 1 | 0;
   HEAP8[$106] = $104;
  }
  $ix = $ix + 1 | 0;
 }
 if (($3 | 0) < 2) {
  $118 = $2;
  HEAP8[$118] = 0;
  STACKTOP = sp;
  return;
 }
 $115 = $2;
 $2 = $115 + 1 | 0;
 HEAP8[$115] = 11;
 $118 = $2;
 HEAP8[$118] = 0;
 STACKTOP = sp;
 return;
}
function __ZL17AdvanceParametersv() {
 var $x = 0, $ix = 0, $5 = 0, $63 = 0, $80 = 0, $87 = 0, $103 = 0, $123 = 0, $160 = 0, $178 = 0, $185 = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[8346] = (HEAP32[8346] | 0) + (HEAP32[8347] | 0);
 $5 = HEAP32[8346] >> 8;
 $ix = $5;
 if (($5 | 0) > 127) {
  $ix = 127;
 }
 $x = Math_imul(HEAPU8[(HEAP32[8344] | 0) + $ix | 0] | 0, HEAP32[8349] | 0) | 0;
 HEAP32[8345] = ($x >> 8) + (HEAP32[8348] | 0);
 HEAP32[27982] = (HEAP32[27982] | 0) + (HEAP32[26956] | 0);
 if ((HEAP32[22818] | 0) >= 23552) {
  HEAP32[22818] = 0;
 }
 $x = Math_imul((HEAPU8[31304 + (HEAP32[22818] >> 6) | 0] | 0) - 128 | 0, HEAP32[7700] | 0) | 0;
 HEAP32[22818] = (HEAP32[22818] | 0) + (HEAP32[30928] | 0);
 HEAP32[8345] = (HEAP32[8345] | 0) + $x;
 if ((HEAP32[8345] | 0) < 102400) {
  HEAP32[8345] = 102400;
 }
 if ((HEAP32[28848] | 0) == (HEAP32[28420] | 0)) {
  STACKTOP = sp;
  return;
 }
 $ix = 0;
 while (1) {
  if (($ix | 0) > (HEAP32[(HEAP32[8292] | 0) + 104 >> 2] | 0)) {
   break;
  }
  $63 = 112672 + ($ix * 80 | 0) | 0;
  HEAPF64[$63 >> 3] = +HEAPF64[$63 >> 3] + +HEAPF64[112704 + ($ix * 80 | 0) >> 3];
  HEAP32[112656 + ($ix * 80 | 0) >> 2] = ~~+HEAPF64[112672 + ($ix * 80 | 0) >> 3];
  $80 = 112680 + ($ix * 80 | 0) | 0;
  HEAPF64[$80 >> 3] = +HEAPF64[$80 >> 3] + +HEAPF64[112712 + ($ix * 80 | 0) >> 3];
  $87 = ~~+HEAPF64[112680 + ($ix * 80 | 0) >> 3];
  HEAP32[112660 + ($ix * 80 | 0) >> 2] = $87;
  if (($87 | 0) < 0) {
   HEAP32[112660 + ($ix * 80 | 0) >> 2] = 0;
  }
  $103 = 112688 + ($ix * 80 | 0) | 0;
  HEAPF64[$103 >> 3] = +HEAPF64[$103 >> 3] + +HEAPF64[112720 + ($ix * 80 | 0) >> 3];
  HEAP32[112664 + ($ix * 80 | 0) >> 2] = ~~+HEAPF64[112688 + ($ix * 80 | 0) >> 3];
  if (($ix | 0) < 3) {
   $123 = 112696 + ($ix * 80 | 0) | 0;
   HEAPF64[$123 >> 3] = +HEAPF64[$123 >> 3] + +HEAPF64[112728 + ($ix * 80 | 0) >> 3];
   HEAP32[112668 + ($ix * 80 | 0) >> 2] = ~~+HEAPF64[112696 + ($ix * 80 | 0) >> 3];
  } else {
   HEAP32[112668 + ($ix * 80 | 0) >> 2] = HEAP32[112664 + ($ix * 80 | 0) >> 2];
  }
  $ix = $ix + 1 | 0;
 }
 while (1) {
  if (($ix | 0) >= 8) {
   break;
  }
  if (($ix | 0) < 7) {
   $160 = 112672 + ($ix * 80 | 0) | 0;
   HEAPF64[$160 >> 3] = +HEAPF64[$160 >> 3] + +HEAPF64[112704 + ($ix * 80 | 0) >> 3];
   HEAP32[112656 + ($ix * 80 | 0) >> 2] = ~~+HEAPF64[112672 + ($ix * 80 | 0) >> 3];
  }
  $178 = 112680 + ($ix * 80 | 0) | 0;
  HEAPF64[$178 >> 3] = +HEAPF64[$178 >> 3] + +HEAPF64[112712 + ($ix * 80 | 0) >> 3];
  $185 = ~~+HEAPF64[112680 + ($ix * 80 | 0) >> 3];
  HEAP32[112660 + ($ix * 80 | 0) >> 2] = $185;
  if (($185 | 0) < 0) {
   HEAP32[112660 + ($ix * 80 | 0) >> 2] = 0;
  }
  $ix = $ix + 1 | 0;
 }
 STACKTOP = sp;
 return;
}
function __ZL14SetVoiceScoresP12espeak_VOICEPS0_i($voice_select, $voices, $control) {
 $voice_select = $voice_select | 0;
 $voices = $voices | 0;
 $control = $control | 0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $ix = 0, $nv = 0, $n_parts = 0, $lang_len = 0, $vp = 0, $language = 0, $buf = 0, $30 = 0, $40 = 0, $74 = 0, $107 = 0, $111 = 0, $135 = 0, label = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 320 | 0;
 $language = sp | 0;
 $buf = sp + 80 | 0;
 $2 = $voice_select;
 $3 = $voices;
 $4 = $control;
 $n_parts = 0;
 $lang_len = 0;
 do {
  if ((HEAP32[$2 + 4 >> 2] | 0) != 0) {
   if ((HEAP8[HEAP32[$2 + 4 >> 2] | 0] | 0) == 0) {
    break;
   }
   $n_parts = 1;
   $lang_len = _strlen(HEAP32[$2 + 4 >> 2] | 0) | 0;
   $ix = 0;
   while (1) {
    if (($ix | 0) <= ($lang_len | 0)) {
     $30 = $ix >>> 0 < 80 >>> 0;
    } else {
     $30 = 0;
    }
    if (!$30) {
     break;
    }
    $40 = (_tolower(HEAP8[(HEAP32[$2 + 4 >> 2] | 0) + $ix | 0] | 0) | 0) & 255;
    HEAP8[$language + $ix | 0] = $40;
    if (($40 << 24 >> 24 | 0) == 45) {
     $n_parts = $n_parts + 1 | 0;
    }
    $ix = $ix + 1 | 0;
   }
  }
 } while (0);
 do {
  if (($n_parts | 0) == 1) {
   if (($4 & 1 | 0) == 0) {
    break;
   }
   if ((_strcmp($language | 0, 10136) | 0) == 0) {
    HEAP8[$language + 2 | 0] = 0;
    $lang_len = 2;
   }
   _sprintf($buf | 0, 10088, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = 76328, HEAP32[tempVarArgs + 8 >> 2] = $language, tempVarArgs) | 0) | 0;
   STACKTOP = tempVarArgs;
   if ((__Z13GetFileLengthPKc($buf | 0) | 0) == -2) {
    $74 = $lang_len;
    $lang_len = $74 + 1 | 0;
    HEAP8[$language + $74 | 0] = 47;
    HEAP8[$language + $lang_len | 0] = 0;
    $n_parts = -1;
   }
  }
 } while (0);
 $nv = 0;
 $ix = 0;
 while (1) {
  if (($ix | 0) >= (HEAP32[28506] | 0)) {
   break;
  }
  $vp = HEAP32[114376 + ($ix << 2) >> 2] | 0;
  do {
   if (($4 & 1 | 0) == 0) {
    if ((_memcmp(HEAP32[$vp + 8 >> 2] | 0, 10656, 3) | 0) != 0) {
     label = 24;
     break;
    }
   } else {
    label = 24;
   }
  } while (0);
  if ((label | 0) == 24) {
   label = 0;
   $107 = __ZL10ScoreVoiceP12espeak_VOICEPKciiS0_($2, $language | 0, $n_parts, $lang_len, HEAP32[114376 + ($ix << 2) >> 2] | 0) | 0;
   if (($107 | 0) > 0) {
    $111 = $nv;
    $nv = $111 + 1 | 0;
    HEAP32[$3 + ($111 << 2) >> 2] = $vp;
    HEAP32[$vp + 16 >> 2] = $107;
   }
  }
  $ix = $ix + 1 | 0;
 }
 HEAP32[$3 + ($nv << 2) >> 2] = 0;
 if (($nv | 0) == 0) {
  $1 = 0;
  $135 = $1;
  STACKTOP = sp;
  return $135 | 0;
 } else {
  _qsort($3 | 0, $nv | 0, 4, 8);
  $1 = $nv;
  $135 = $1;
  STACKTOP = sp;
  return $135 | 0;
 }
 return 0;
}
function __ZL10frame_initP13klatt_frame_t($frame) {
 $frame = $frame | 0;
 var $1 = 0, $amp_par = 0, $Gain0_tmp = 0, $ix = 0, $48 = 0.0, $68 = 0.0, $198 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 56 | 0;
 $amp_par = sp | 0;
 $1 = $frame;
 HEAP32[31403] = (HEAP32[$1 >> 2] | 0) / 10 | 0;
 HEAP32[$1 + 204 >> 2] = (HEAP32[$1 + 4 >> 2] | 0) - 7;
 if ((HEAP32[$1 + 204 >> 2] | 0) < 0) {
  HEAP32[$1 + 204 >> 2] = 0;
 }
 HEAPF64[15695] = +__ZL7DBtoLINl(HEAP32[$1 + 168 >> 2] | 0) * .05;
 HEAPF64[15696] = +__ZL7DBtoLINl(HEAP32[$1 + 184 >> 2] | 0) * .25;
 HEAPF64[15694] = +__ZL7DBtoLINl(HEAP32[$1 + 196 >> 2] | 0);
 HEAPF64[15692] = +__ZL7DBtoLINl(HEAP32[$1 + 192 >> 2] | 0) * .05;
 $ix = 0;
 while (1) {
  if (($ix | 0) > 6) {
   break;
  }
  $48 = +__ZL7DBtoLINl(HEAP32[$1 + 88 + ($ix << 2) >> 2] | 0);
  HEAPF64[$amp_par + ($ix << 3) >> 3] = $48 * +HEAPF64[21112 + ($ix << 3) >> 3];
  $ix = $ix + 1 | 0;
 }
 $Gain0_tmp = (HEAP32[$1 + 200 >> 2] | 0) - 3 | 0;
 if (($Gain0_tmp | 0) <= 0) {
  $Gain0_tmp = 57;
 }
 $68 = +__ZL7DBtoLINl($Gain0_tmp);
 HEAPF64[15698] = $68 / +(HEAP32[31405] | 0);
 $ix = 1;
 while (1) {
  if (($ix | 0) > 9) {
   break;
  }
  __ZL6setabcllP11resonator_t(HEAP32[$1 + 8 + ($ix << 2) >> 2] | 0, HEAP32[$1 + 48 + ($ix << 2) >> 2] | 0, 125624 + ($ix << 6) | 0);
  if (($ix | 0) <= 5) {
   __ZL6setabcllP11resonator_t(HEAP32[$1 + 208 + ($ix << 2) >> 2] | 0, HEAP32[$1 + 248 + ($ix << 2) >> 2] | 0, 126904 + ($ix << 6) | 0);
   HEAPF64[125664 + ($ix << 6) >> 3] = (+HEAPF64[126904 + ($ix << 6) >> 3] - +HEAPF64[125624 + ($ix << 6) >> 3]) / 64.0;
   HEAPF64[125672 + ($ix << 6) >> 3] = (+HEAPF64[126912 + ($ix << 6) >> 3] - +HEAPF64[125632 + ($ix << 6) >> 3]) / 64.0;
   HEAPF64[125680 + ($ix << 6) >> 3] = (+HEAPF64[126920 + ($ix << 6) >> 3] - +HEAPF64[125640 + ($ix << 6) >> 3]) / 64.0;
  }
  $ix = $ix + 1 | 0;
 }
 __ZL10setzeroabcllP11resonator_t(HEAP32[$1 + 8 >> 2] | 0, HEAP32[$1 + 48 >> 2] | 0, 125624);
 __ZL10setzeroabcllP11resonator_t(HEAP32[$1 + 208 >> 2] | 0, HEAP32[$1 + 248 >> 2] | 0, 126904);
 HEAPF64[15708] = (+HEAPF64[15863] - +HEAPF64[15703]) / 64.0;
 HEAPF64[15709] = (+HEAPF64[15864] - +HEAPF64[15704]) / 64.0;
 HEAPF64[15710] = (+HEAPF64[15865] - +HEAPF64[15705]) / 64.0;
 $ix = 0;
 while (1) {
  if (($ix | 0) > 6) {
   break;
  }
  __ZL6setabcllP11resonator_t(HEAP32[$1 + 8 + ($ix << 2) >> 2] | 0, HEAP32[$1 + 128 + ($ix << 2) >> 2] | 0, 125624 + ($ix + 10 << 6) | 0);
  $198 = 125624 + ($ix + 10 << 6) | 0;
  HEAPF64[$198 >> 3] = +HEAPF64[$198 >> 3] * +HEAPF64[$amp_par + ($ix << 3) >> 3];
  $ix = $ix + 1 | 0;
 }
 __ZL6setabcllP11resonator_t(0, (HEAP32[31360] | 0) / 2 | 0, 126840);
 STACKTOP = sp;
 return;
}
function __ZL15CheckDotOrdinalP10TranslatorPcS1_P8WORD_TABi($tr, $word, $word_end, $wtab, $roman) {
 $tr = $tr | 0;
 $word = $word | 0;
 $word_end = $word_end | 0;
 $wtab = $wtab | 0;
 $roman = $roman | 0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $ordinal = 0, $c2 = 0, $nextflags = 0, $160 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 8 | 0;
 $c2 = sp | 0;
 $1 = $tr;
 $2 = $word;
 $3 = $word_end;
 $4 = $wtab;
 $5 = $roman;
 $ordinal = 0;
 if ((HEAP32[$1 + 200 >> 2] & 65536 | 0) == 0) {
  $160 = $ordinal;
  STACKTOP = sp;
  return $160 | 0;
 }
 do {
  if ((HEAP8[$3 | 0] | 0) != 46) {
   if ((HEAP32[$4 >> 2] & 65536 | 0) != 0) {
    break;
   }
   $160 = $ordinal;
   STACKTOP = sp;
   return $160 | 0;
  }
 } while (0);
 if ((HEAP32[$4 + 12 >> 2] & 256 | 0) != 0) {
  $160 = $ordinal;
  STACKTOP = sp;
  return $160 | 0;
 }
 if (($5 | 0) != 0) {
  label = 7;
 } else {
  if ((HEAP32[$4 + 12 >> 2] & 2 | 0) == 0) {
   label = 7;
  }
 }
 if ((label | 0) == 7) {
  if ((HEAP8[$3 | 0] | 0) == 46) {
   __Z7utf8_inPiPKc($c2, $3 + 2 | 0) | 0;
  } else {
   __Z7utf8_inPiPKc($c2, $3 | 0) | 0;
  }
  L19 : do {
   if ((HEAP8[$3 | 0] | 0) != 0) {
    if ((HEAP8[$3 + 1 | 0] | 0) == 0) {
     break;
    }
    do {
     if ((HEAP32[$c2 >> 2] | 0) != 0) {
      if ((HEAP32[$4 >> 2] & 131072 | 0) != 0) {
       break;
      }
      if ((__Z7IsAlphaj(HEAP32[$c2 >> 2] | 0) | 0) == 0) {
       break L19;
      }
     }
    } while (0);
    $ordinal = 2;
    if ((HEAP8[$3 | 0] | 0) == 46) {
     HEAP8[$3 | 0] = 32;
    }
    do {
     if (($5 | 0) == 0) {
      if ((HEAP32[$1 + 324 >> 2] | 0) != 26741) {
       break;
      }
      $nextflags = 0;
      if ((__Z7IsAlphaj(HEAP32[$c2 >> 2] | 0) | 0) != 0) {
       $nextflags = __Z13TranslateWordP10TranslatorPciP8WORD_TABS1_($1, $3 + 2 | 0, 0, 0, 0) | 0;
      }
      L35 : do {
       if ((HEAP32[$1 + 8352 >> 2] & 32768 | 0) != 0) {
        do {
         if ((HEAP32[$c2 >> 2] | 0) != 0) {
          if ((HEAP32[$4 >> 2] & 131072 | 0) != 0) {
           break;
          }
          if ((_iswdigit(HEAP32[$c2 >> 2] | 0) | 0) == 0) {
           break L35;
          }
         }
        } while (0);
        $ordinal = 0;
       }
      } while (0);
      if (($nextflags & 32768 | 0) != 0) {
       $ordinal = 0;
      }
      if (($nextflags & 131072 | 0) != 0) {
       if ((HEAP8[$2 - 2 | 0] | 0) == 45) {
        $ordinal = 0;
       }
       if ((HEAP32[$1 + 8352 >> 2] & 163840 | 0) != 0) {
        $ordinal = 34;
       }
      }
     }
    } while (0);
   }
  } while (0);
 }
 $160 = $ordinal;
 STACKTOP = sp;
 return $160 | 0;
}
function __ZL13NewTranslatorv() {
 var $1 = 0, $tr = 0, $ix = 0, $170 = 0, $173 = 0, sp = 0;
 sp = STACKTOP;
 $tr = __Z5Alloci(8364) | 0;
 if (($tr | 0) == 0) {
  $1 = 0;
  $173 = $1;
  STACKTOP = sp;
  return $173 | 0;
 }
 HEAP32[$tr + 448 >> 2] = HEAP32[1723];
 HEAP8[90512] = 0;
 HEAP8[$tr + 340 | 0] = 0;
 HEAP32[$tr + 440 >> 2] = 0;
 HEAP32[$tr + 444 >> 2] = 0;
 HEAP32[$tr + 804 >> 2] = 0;
 HEAP32[$tr + 808 >> 2] = 0;
 HEAP32[$tr + 332 >> 2] = 96;
 HEAP32[$tr + 328 >> 2] = 383;
 HEAP32[$tr + 336 >> 2] = 20736;
 HEAP32[$tr + 8300 >> 2] = 0;
 HEAP32[$tr + 720 >> 2] = 0;
 _memset($tr + 464 | 0, 0, 256) | 0;
 _memset($tr + 724 | 0, 0, 32) | 0;
 __ZL13SetLetterBitsP10TranslatoriPKc($tr, 0, 13872);
 __ZL13SetLetterBitsP10TranslatoriPKc($tr, 1, 13776);
 __ZL13SetLetterBitsP10TranslatoriPKc($tr, 2, 13680);
 __ZL13SetLetterBitsP10TranslatoriPKc($tr, 3, 13584);
 __ZL13SetLetterBitsP10TranslatoriPKc($tr, 4, 13448);
 __ZL13SetLetterBitsP10TranslatoriPKc($tr, 5, 11088);
 __ZL13SetLetterBitsP10TranslatoriPKc($tr, 6, 10968);
 __ZL13SetLetterBitsP10TranslatoriPKc($tr, 7, 15040);
 HEAP32[$tr + 452 >> 2] = 91400;
 HEAP32[$tr + 456 >> 2] = 21040;
 HEAP32[$tr + 460 >> 2] = 25704;
 $ix = 0;
 while (1) {
  if (($ix | 0) >= 8) {
   break;
  }
  HEAP8[$tr + 408 + $ix | 0] = HEAP8[21056 + $ix | 0] | 0;
  HEAP8[$tr + 416 + $ix | 0] = (HEAPU8[21056 + $ix | 0] | 0) - 1;
  HEAP16[$tr + 424 + ($ix << 1) >> 1] = HEAP16[21024 + ($ix << 1) >> 1] | 0;
  $ix = $ix + 1 | 0;
 }
 _memset($tr | 0, 0, 324) | 0;
 HEAP32[$tr + 308 >> 2] = 500;
 HEAP32[$tr + 312 >> 2] = 20;
 HEAP32[$tr + 8 >> 2] = 2;
 HEAP32[$tr + 16 >> 2] = 1;
 HEAP32[$tr + 20 >> 2] = 3;
 HEAP32[$tr + 52 >> 2] = 95;
 HEAP32[$tr + 96 >> 2] = 95;
 HEAP32[$tr + 60 >> 2] = 19;
 HEAP32[$tr + 44 >> 2] = 115;
 HEAP32[$tr + 88 >> 2] = 4;
 HEAP32[$tr + 172 >> 2] = 2;
 HEAP8[$tr + 268 | 0] = 3;
 HEAP32[$tr + 284 >> 2] = 0;
 HEAP8[$tr + 288 | 0] = 0;
 HEAP32[$tr + 304 >> 2] = 25966;
 HEAP32[$tr + 236 >> 2] = 90672;
 __Z13SetLengthModsP10Translatori($tr, 201);
 HEAP32[$tr + 260 >> 2] = 100;
 HEAP32[$tr + 212 >> 2] = 49;
 HEAP32[$tr + 216 >> 2] = 2;
 HEAP32[$tr + 220 >> 2] = 44;
 HEAP32[$tr + 224 >> 2] = 46;
 HEAP32[$tr + 208 >> 2] = 1227133512;
 HEAP32[$tr + 228 >> 2] = 14;
 _memcpy($tr + 756 | 0, 4848, 48) | 0;
 $170 = $tr + 252 | 0;
 HEAP8[$170] = HEAP8[21048] | 0;
 HEAP8[$170 + 1 | 0] = HEAP8[21049] | 0;
 HEAP8[$170 + 2 | 0] = HEAP8[21050] | 0;
 HEAP8[$170 + 3 | 0] = HEAP8[21051] | 0;
 HEAP8[$170 + 4 | 0] = HEAP8[21052] | 0;
 HEAP8[$170 + 5 | 0] = HEAP8[21053] | 0;
 $1 = $tr;
 $173 = $1;
 STACKTOP = sp;
 return $173 | 0;
}
function __ZL10InitGroupsP10Translator($tr) {
 $tr = $tr | 0;
 var $1 = 0, $ix = 0, $p = 0, $p_name = 0, $pw = 0, $c = 0, $c2 = 0, $len = 0, $51 = 0, $176 = 0, $193 = 0, $194 = 0, label = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 $1 = $tr;
 HEAP32[$1 + 7784 >> 2] = 0;
 $ix = 0;
 while (1) {
  if (($ix | 0) >= 256) {
   break;
  }
  HEAP32[$1 + 5288 + ($ix << 2) >> 2] = 0;
  HEAP8[$1 + 7788 + $ix | 0] = 0;
  HEAP8[$1 + 8044 + $ix | 0] = -1;
  $ix = $ix + 1 | 0;
 }
 _memset($1 + 4908 | 0, 0, 380) | 0;
 _memset($1 + 6312 | 0, 0, 512) | 0;
 $p = HEAP32[$1 + 804 >> 2] | 0;
 while (1) {
  if ((HEAP8[$p] | 0) == 0) {
   label = 36;
   break;
  }
  if ((HEAP8[$p] | 0) != 6) {
   break;
  }
  $p = $p + 1 | 0;
  if ((HEAP8[$p | 0] | 0) == 20) {
   $pw = $p + 4 & -4;
   HEAP32[$1 + 284 >> 2] = $pw;
   while (1) {
    if ((HEAP32[$pw >> 2] | 0) == 0) {
     break;
    }
    $pw = $pw + 8 | 0;
   }
   $p = $pw + 4 | 0;
   continue;
  }
  if ((HEAP8[$p | 0] | 0) == 18) {
   $ix = (HEAP8[$p + 1 | 0] | 0) - 65 | 0;
   $p = $p + 2 | 0;
   do {
    if (($ix | 0) >= 0) {
     if (($ix | 0) >= 95) {
      break;
     }
     HEAP32[$1 + 4908 + ($ix << 2) >> 2] = $p;
    }
   } while (0);
  } else {
   $len = _strlen($p | 0) | 0;
   $p_name = $p;
   $c = HEAP8[$p_name | 0] | 0;
   $c2 = HEAP8[$p_name + 1 | 0] | 0;
   $p = $p + ($len + 1) | 0;
   if (($len | 0) == 1) {
    HEAP32[$1 + 5288 + (($c & 255) << 2) >> 2] = $p;
   } else {
    if (($len | 0) == 0) {
     HEAP32[$1 + 5288 >> 2] = $p;
    } else {
     if (($c & 255 | 0) == 1) {
      HEAP32[$1 + 6312 + (($c2 & 255) - 1 << 2) >> 2] = $p;
     } else {
      if ((HEAPU8[$1 + 8044 + ($c & 255) | 0] | 0) == 255) {
       HEAP8[$1 + 8044 + ($c & 255) | 0] = HEAP32[$1 + 7784 >> 2];
      }
      $176 = $1 + 7788 + ($c & 255) | 0;
      HEAP8[$176] = (HEAP8[$176] | 0) + 1;
      HEAP32[$1 + 6824 + (HEAP32[$1 + 7784 >> 2] << 2) >> 2] = $p;
      $193 = $1 + 7784 | 0;
      $194 = HEAP32[$193 >> 2] | 0;
      HEAP32[$193 >> 2] = $194 + 1;
      HEAP32[$1 + 7304 + ($194 << 2) >> 2] = ($c & 255) + (($c2 & 255) << 8);
     }
    }
   }
  }
  while (1) {
   if ((HEAP8[$p] | 0) == 7) {
    break;
   }
   $p = $p + ((_strlen($p | 0) | 0) + 1) | 0;
  }
  $p = $p + 1 | 0;
 }
 if ((label | 0) == 36) {
  STACKTOP = sp;
  return;
 }
 $51 = $p - (HEAP32[$1 + 804 >> 2] | 0) | 0;
 _fprintf(HEAP32[_stderr >> 2] | 0, 14072, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = 90512, HEAP32[tempVarArgs + 8 >> 2] = $51, tempVarArgs) | 0) | 0;
 STACKTOP = tempVarArgs;
 STACKTOP = sp;
 return;
}
function __Z12LookupLetterP10TranslatorjiPci($tr, $letter, $next_byte, $ph_buf1, $control) {
 $tr = $tr | 0;
 $letter = $letter | 0;
 $next_byte = $next_byte | 0;
 $ph_buf1 = $ph_buf1 | 0;
 $control = $control | 0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $len = 0, $dict_flags = 0, $ph_buf3 = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $dict_flags = sp | 0;
 $ph_buf3 = sp + 8 | 0;
 $1 = $tr;
 $2 = $letter;
 $3 = $next_byte;
 $4 = $ph_buf1;
 $5 = $control;
 HEAP8[$4 | 0] = 0;
 $len = __Z8utf8_outjPc($2, 104442) | 0;
 HEAP8[$len + 104442 | 0] = 32;
 if (($3 | 0) == -1) {
  if ((__Z6LookupP10TranslatorPKcPc($1, 104442, $4) | 0) != 0) {
   STACKTOP = sp;
   return;
  }
  HEAP8[104441] = 95;
  if ((__Z6LookupP10TranslatorPKcPc($1, 104441, $ph_buf3 | 0) | 0) != 0) {
   STACKTOP = sp;
   return;
  }
  if ((HEAP32[$1 + 324 >> 2] | 0) == 25966) {
   STACKTOP = sp;
   return;
  }
  __Z14SetTranslator2PKc(14184) | 0;
  if ((__Z6LookupP10TranslatorPKcPc(HEAP32[9110] | 0, 104442, $ph_buf3 | 0) | 0) != 0) {
   _sprintf($4 | 0, 10840, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = 21, tempVarArgs) | 0) | 0;
   STACKTOP = tempVarArgs;
  }
  __Z18SelectPhonemeTablei(HEAP32[(HEAP32[144] | 0) + 60 >> 2] | 0);
  STACKTOP = sp;
  return;
 }
 do {
  if ($2 >>> 0 > 32 >>> 0) {
   if ((_iswspace($2) | 0) != 0) {
    break;
   }
   if (($3 | 0) != 32) {
    $3 = 31;
   }
   HEAP8[$len + 104443 | 0] = $3;
   HEAP8[104441] = 95;
   HEAP32[$dict_flags + 4 >> 2] = 0;
   if ((__Z6LookupP10TranslatorPKcPc($1, 104441, $ph_buf3 | 0) | 0) == 0) {
    HEAP8[104441] = 32;
    if ((__Z6LookupP10TranslatorPKcPc($1, 104442, $ph_buf3 | 0) | 0) == 0) {
     __Z14TranslateRulesP10TranslatorPcS1_iS1_iPj($1, 104442, $ph_buf3 | 0, 40, 0, 268435456, 0) | 0;
    }
   }
   if ((HEAP8[$ph_buf3 | 0] | 0) == 0) {
    __Z20LookupAccentedLetterP10TranslatorjPc($1, $2, $ph_buf3 | 0);
   }
   _strcpy($4 | 0, $ph_buf3 | 0) | 0;
   do {
    if ((HEAP8[$4 | 0] | 0) != 0) {
     if ((HEAP8[$4 | 0] | 0) == 21) {
      break;
     }
     HEAP32[$dict_flags >> 2] = 0;
     HEAP32[$dict_flags + 4 >> 2] = 0;
     __Z13SetWordStressP10TranslatorPcPjii($1, $4, $dict_flags | 0, -1, $5 & 1);
     STACKTOP = sp;
     return;
    }
   } while (0);
   STACKTOP = sp;
   return;
  }
 } while (0);
 _sprintf(104441, 10112, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $2, tempVarArgs) | 0) | 0;
 STACKTOP = tempVarArgs;
 __Z6LookupP10TranslatorPKcPc($1, 104441, $4) | 0;
 STACKTOP = sp;
 return;
}
function __Z10LoadConfigv() {
 var $buf = 0, $f = 0, $ix = 0, $c1 = 0, $p = 0, $string = 0, $18 = 0, $40 = 0, $66 = 0, $86 = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 384 | 0;
 $buf = sp | 0;
 $c1 = sp + 176 | 0;
 $string = sp + 184 | 0;
 HEAP32[19580] = 0;
 $ix = 0;
 while (1) {
  if (($ix | 0) >= 4) {
   break;
  }
  HEAP32[36532 + ($ix << 4) >> 2] = 0;
  HEAP32[36528 + ($ix << 4) >> 2] = 0;
  $ix = $ix + 1 | 0;
 }
 _sprintf($buf | 0, 9392, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 24 | 0, HEAP32[tempVarArgs >> 2] = 76328, HEAP32[tempVarArgs + 8 >> 2] = 47, HEAP32[tempVarArgs + 16 >> 2] = 8880, tempVarArgs) | 0) | 0;
 STACKTOP = tempVarArgs;
 $18 = _fopen($buf | 0, 8384) | 0;
 $f = $18;
 if (($18 | 0) == 0) {
  STACKTOP = sp;
  return;
 }
 while (1) {
  if ((_fgets($buf | 0, 170, $f | 0) | 0) == 0) {
   break;
  }
  if ((HEAP8[$buf | 0] | 0) == 47) {
   continue;
  }
  if ((_memcmp($buf | 0, 7880, 3) | 0) == 0) {
   $40 = _sscanf($buf + 4 | 0, 18328, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = 78320, HEAP32[tempVarArgs + 8 >> 2] = $string, tempVarArgs) | 0) | 0;
   STACKTOP = tempVarArgs;
   if (($40 | 0) == 2) {
    HEAP32[19598] = _fopen($string | 0, 17768) | 0;
   }
  } else {
   if ((_memcmp($buf | 0, 17296, 4) | 0) == 0) {
    __Z14ReadTonePointsPcPi($buf + 5 | 0, 616);
   } else {
    if ((_memcmp($buf | 0, 16952, 9) | 0) == 0) {
     _sscanf($buf + 10 | 0, 16784, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = 5352, tempVarArgs) | 0) | 0;
     STACKTOP = tempVarArgs;
    } else {
     if ((_memcmp($buf | 0, 16632, 9) | 0) == 0) {
      $66 = _sscanf($buf + 10 | 0, 16472, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = $c1, HEAP32[tempVarArgs + 8 >> 2] = $string, tempVarArgs) | 0) | 0;
      STACKTOP = tempVarArgs;
      $ix = $66;
      if (($ix | 0) == 2) {
       HEAP32[36520 + (HEAP32[1358] << 4) >> 2] = HEAP8[$c1] | 0;
       $p = __Z5Alloci((_strlen($string | 0) | 0) + 1 | 0) | 0;
       _strcpy($p | 0, $string | 0) | 0;
       HEAP32[36532 + (HEAP32[1358] << 4) >> 2] = $p;
       $86 = HEAP32[1358] | 0;
       HEAP32[1358] = $86 + 1;
       HEAP32[36524 + ($86 << 4) >> 2] = 0;
      }
     }
    }
   }
  }
 }
 _fclose($f | 0) | 0;
 STACKTOP = sp;
 return;
}
function __ZL11adjustPitchP17sonicStreamStructi($stream, $originalNumOutputSamples) {
 $stream = $stream | 0;
 $originalNumOutputSamples = $originalNumOutputSamples | 0;
 var $1 = 0, $2 = 0, $3 = 0, $pitch = 0.0, $numChannels = 0, $period = 0, $newPeriod = 0, $position = 0, $out = 0, $rampDown = 0, $rampUp = 0, $116 = 0, $126 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = $stream;
 $3 = $originalNumOutputSamples;
 $pitch = +HEAPF32[$2 + 24 >> 2];
 $numChannels = HEAP32[$2 + 28 >> 2] | 0;
 $position = 0;
 if ((HEAP32[$2 + 48 >> 2] | 0) == ($3 | 0)) {
  $1 = 1;
  $126 = $1;
  STACKTOP = sp;
  return $126 | 0;
 }
 if ((__ZL27moveNewSamplesToPitchBufferP17sonicStreamStructi($2, $3) | 0) == 0) {
  $1 = 0;
  $126 = $1;
  STACKTOP = sp;
  return $126 | 0;
 }
 while (1) {
  if (((HEAP32[$2 + 52 >> 2] | 0) - $position | 0) < (HEAP32[$2 + 64 >> 2] | 0)) {
   label = 13;
   break;
  }
  $period = __ZL15findPitchPeriodP17sonicStreamStructPs($2, (HEAP32[$2 + 8 >> 2] | 0) + ((Math_imul($position, $numChannels) | 0) << 1) | 0) | 0;
  $newPeriod = ~~(+($period | 0) / $pitch);
  if ((__ZL27enlargeOutputBufferIfNeededP17sonicStreamStructi($2, $newPeriod) | 0) == 0) {
   label = 8;
   break;
  }
  $out = (HEAP32[$2 + 4 >> 2] | 0) + ((Math_imul(HEAP32[$2 + 48 >> 2] | 0, $numChannels) | 0) << 1) | 0;
  if ($pitch >= 1.0) {
   $rampDown = (HEAP32[$2 + 8 >> 2] | 0) + ((Math_imul($position, $numChannels) | 0) << 1) | 0;
   $rampUp = (HEAP32[$2 + 8 >> 2] | 0) + ((Math_imul($position + $period - $newPeriod | 0, $numChannels) | 0) << 1) | 0;
   __ZL10overlapAddiiPsS_S_($newPeriod, $numChannels, $out, $rampDown, $rampUp);
  } else {
   $rampDown = (HEAP32[$2 + 8 >> 2] | 0) + ((Math_imul($position, $numChannels) | 0) << 1) | 0;
   $rampUp = (HEAP32[$2 + 8 >> 2] | 0) + ((Math_imul($position, $numChannels) | 0) << 1) | 0;
   __ZL24overlapAddWithSeparationiiiPsS_S_($period, $numChannels, $newPeriod - $period | 0, $out, $rampDown, $rampUp);
  }
  $116 = $2 + 48 | 0;
  HEAP32[$116 >> 2] = (HEAP32[$116 >> 2] | 0) + $newPeriod;
  $position = $position + $period | 0;
 }
 if ((label | 0) == 8) {
  $1 = 0;
  $126 = $1;
  STACKTOP = sp;
  return $126 | 0;
 } else if ((label | 0) == 13) {
  __ZL18removePitchSamplesP17sonicStreamStructi($2, $position);
  $1 = 1;
  $126 = $1;
  STACKTOP = sp;
  return $126 | 0;
 }
 return 0;
}
function __ZL13TranslateCharP10TranslatorPcijjPiS2_($tr, $ptr, $prev_in, $c, $next_in, $insert, $wordflags) {
 $tr = $tr | 0;
 $ptr = $ptr | 0;
 $prev_in = $prev_in | 0;
 $c = $c | 0;
 $next_in = $next_in | 0;
 $insert = $insert | 0;
 $wordflags = $wordflags | 0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $code = 0, $initial = 0, $medial = 0, $final = 0, $next2 = 0, $10 = 0, $50 = 0, $65 = 0, $109 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 8 | 0;
 $next2 = sp | 0;
 $2 = $tr;
 $3 = $ptr;
 $4 = $prev_in;
 $5 = $c;
 $6 = $next_in;
 $7 = $insert;
 $8 = $wordflags;
 $10 = $5 - 44032 | 0;
 $code = $10;
 do {
  if (($10 | 0) >= 0) {
   if ($5 >>> 0 > 55215 >>> 0) {
    break;
   }
   $initial = (($code | 0) / 28 | 0 | 0) / 21 | 0;
   $medial = (($code | 0) / 28 | 0 | 0) % 21 | 0;
   $final = ($code | 0) % 28 | 0;
   if (($initial | 0) == 11) {
    $5 = $medial + 4449 | 0;
    if (($final | 0) > 0) {
     HEAP32[$7 >> 2] = $final + 4519;
    }
   } else {
    $5 = $initial + 4352 | 0;
    HEAP32[$7 >> 2] = ($medial * 28 | 0) + 6468 + $final + 44032;
   }
   $1 = $5;
   $109 = $1;
   STACKTOP = sp;
   return $109 | 0;
  }
 } while (0);
 $50 = $5 - 12592 | 0;
 $code = $50;
 do {
  if (($50 | 0) >= 0) {
   if (($code | 0) >= 52) {
    break;
   }
   $1 = (HEAPU8[20680 + $code | 0] | 0) + 4352 | 0;
   $109 = $1;
   STACKTOP = sp;
   return $109 | 0;
  }
 } while (0);
 $65 = HEAP32[$2 + 324 >> 2] | 0;
 if (($65 | 0) == 24934 | ($65 | 0) == 28268) {
  if ((__Z9iswalpha2i($4) | 0) == 0) {
   __Z7utf8_inPiPKc($next2, $3 + 1 | 0) | 0;
   L23 : do {
    if (($5 | 0) == 39) {
     if ((__Z7IsSpacej(HEAP32[$next2 >> 2] | 0) | 0) == 0) {
      break;
     }
     do {
      if (($6 | 0) == 110) {
       if ((HEAP32[$2 + 324 >> 2] | 0) != 24934) {
        break;
       }
       HEAP8[$3 | 0] = 32;
       $1 = 601;
       $109 = $1;
       STACKTOP = sp;
       return $109 | 0;
      }
     } while (0);
     do {
      if (($6 | 0) != 110) {
       if (($6 | 0) == 116) {
        break;
       }
       break L23;
      }
     } while (0);
     $1 = 601;
     $109 = $1;
     STACKTOP = sp;
     return $109 | 0;
    }
   } while (0);
  }
 }
 $1 = __ZL14SubstituteCharP10TranslatorjjPiS1_($2, $5, $6, $7, $8) | 0;
 $109 = $1;
 STACKTOP = sp;
 return $109 | 0;
}
function __Z10LoadPhDataPi($srate) {
 $srate = $srate | 0;
 var $1 = 0, $2 = 0, $ix = 0, $n_phonemes = 0, $version = 0, $result = 0, $length = 0, $rate = 0, $p = 0, $4 = 0, $11 = 0, $16 = 0, $23 = 0, $138 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 8 | 0;
 $length = sp | 0;
 $2 = $srate;
 $result = 1;
 $4 = __ZL10ReadPhFilePvPKcPi(HEAP32[28424] | 0, 16744, 0) | 0;
 HEAP32[28424] = $4;
 if (($4 | 0) == 0) {
  $1 = -1;
  $138 = $1;
  STACKTOP = sp;
  return $138 | 0;
 }
 $11 = __ZL10ReadPhFilePvPKcPi(HEAP32[17076] | 0, 15320, 0) | 0;
 HEAP32[17076] = $11;
 if (($11 | 0) == 0) {
  $1 = -1;
  $138 = $1;
  STACKTOP = sp;
  return $138 | 0;
 }
 $16 = __ZL10ReadPhFilePvPKcPi(HEAP32[17080] | 0, 14e3, 0) | 0;
 HEAP32[17080] = $16;
 if (($16 | 0) == 0) {
  $1 = -1;
  $138 = $1;
  STACKTOP = sp;
  return $138 | 0;
 }
 $23 = __ZL10ReadPhFilePvPKcPi(HEAP32[9108] | 0, 10744, $length) | 0;
 HEAP32[9108] = $23;
 if (($23 | 0) == 0) {
  $1 = -1;
  $138 = $1;
  STACKTOP = sp;
  return $138 | 0;
 }
 HEAP32[9046] = HEAP32[17080];
 HEAP32[19554] = ((HEAP32[$length >> 2] | 0) >>> 0) / 68 | 0;
 $version = 0;
 $rate = 0;
 $ix = 0;
 while (1) {
  if (($ix | 0) >= 4) {
   break;
  }
  $version = $version + ((HEAPU8[(HEAP32[9046] | 0) + $ix | 0] | 0) << ($ix << 3)) | 0;
  $rate = $rate + ((HEAPU8[(HEAP32[9046] | 0) + ($ix + 4) | 0] | 0) << ($ix << 3)) | 0;
  $ix = $ix + 1 | 0;
 }
 if (($version | 0) != 83969) {
  $result = $version;
 }
 $p = HEAP32[28424] | 0;
 HEAP32[19558] = HEAPU8[$p | 0] | 0;
 $p = $p + 4 | 0;
 $ix = 0;
 while (1) {
  if (($ix | 0) >= (HEAP32[19558] | 0)) {
   break;
  }
  $n_phonemes = HEAPU8[$p | 0] | 0;
  HEAP32[38236 + ($ix * 48 | 0) >> 2] = HEAPU8[$p | 0] | 0;
  HEAP32[38240 + ($ix * 48 | 0) >> 2] = HEAPU8[$p + 1 | 0] | 0;
  HEAP32[38244 + ($ix * 48 | 0) >> 2] = __Z13Reverse4Bytesi(HEAP32[$p + 4 >> 2] | 0) | 0;
  $p = $p + 8 | 0;
  _memcpy(38200 + ($ix * 48 | 0) | 0, $p | 0, 32) | 0;
  $p = $p + 32 | 0;
  HEAP32[38232 + ($ix * 48 | 0) >> 2] = $p;
  $p = $p + ($n_phonemes << 4) | 0;
  $ix = $ix + 1 | 0;
 }
 if ((HEAP32[9548] | 0) >= (HEAP32[19558] | 0)) {
  HEAP32[9548] = 0;
 }
 if (($2 | 0) != 0) {
  HEAP32[$2 >> 2] = $rate;
 }
 $1 = $result;
 $138 = $1;
 STACKTOP = sp;
 return $138 | 0;
}
function __ZL12calc_pitchesiiii($control, $start, $end, $tune_number) {
 $control = $control | 0;
 $start = $start | 0;
 $end = $end | 0;
 $tune_number = $tune_number | 0;
 var $1 = 0, $3 = 0, $4 = 0, $5 = 0, $ix = 0, $th = 0, $tn = 0, $drop = 0, $continuing = 0, $64 = 0, $86 = 0, $109 = 0, $150 = 0, sp = 0;
 sp = STACKTOP;
 $3 = $start;
 $4 = $end;
 $5 = $tune_number;
 $continuing = 0;
 if (($control | 0) == 0) {
  $1 = __ZL13calc_pitches2iii($3, $4, $5) | 0;
  $150 = $1;
  STACKTOP = sp;
  return $150 | 0;
 }
 if (($3 | 0) > 0) {
  $continuing = 1;
 }
 $th = 27536 + ($5 << 4) | 0;
 $tn = 25776 + ($5 << 4) | 0;
 $ix = $3;
 __ZL16SetPitchGradientiiii($ix, $ix + (HEAP32[31338] | 0) | 0, HEAPU8[$th | 0] | 0, HEAPU8[$th + 1 | 0] | 0);
 $ix = $ix + (HEAP32[31338] | 0) | 0;
 if ((HEAP32[19458] & 512 | 0) != 0) {
  HEAP32[26642] = HEAP32[30934];
 }
 $ix = __ZL18calc_pitch_segmentiiP9TONE_HEADP12TONE_NUCLEUSii($ix, HEAP32[26642] | 0, $th, $tn, 4, $continuing) | 0;
 if ((HEAP32[26726] | 0) != 0) {
  $1 = 0;
  $150 = $1;
  STACKTOP = sp;
  return $150 | 0;
 }
 if ((HEAP8[$tn + 14 | 0] & 1 | 0) != 0) {
  $64 = (HEAP32[28524] | 0) + ($ix * 6 | 0) + 2 | 0;
  HEAP8[$64] = HEAP8[$64] | 2;
 }
 if ((HEAP32[28864] | 0) == 0) {
  HEAP32[28452] = HEAPU8[$tn | 0] | 0;
  $drop = (HEAPU8[$tn + 1 | 0] | 0) - (HEAPU8[$tn + 2 | 0] | 0) | 0;
  $86 = $ix;
  $ix = $86 + 1 | 0;
  __ZL9set_pitchP8SYLLABLEii((HEAP32[28524] | 0) + ($86 * 6 | 0) | 0, HEAPU8[$tn + 2 | 0] | 0, $drop);
 } else {
  HEAP32[28452] = HEAPU8[$tn + 3 | 0] | 0;
  $drop = (HEAPU8[$tn + 4 | 0] | 0) - (HEAPU8[$tn + 5 | 0] | 0) | 0;
  $109 = $ix;
  $ix = $109 + 1 | 0;
  __ZL9set_pitchP8SYLLABLEii((HEAP32[28524] | 0) + ($109 * 6 | 0) | 0, HEAPU8[$tn + 5 | 0] | 0, $drop);
 }
 HEAP8[(HEAP32[28524] | 0) + ((HEAP32[26642] | 0) * 6 | 0) + 1 | 0] = HEAP32[28452];
 if ((HEAP8[(HEAP32[28524] | 0) + ((HEAP32[26642] | 0) * 6 | 0) | 0] | 0) == 4) {
  HEAP8[(HEAP32[28524] | 0) + ((HEAP32[26642] | 0) * 6 | 0) | 0] = 6;
 }
 __ZL16SetPitchGradientiiii($ix, $4, HEAPU8[$tn + 12 | 0] | 0, HEAPU8[$tn + 13 | 0] | 0);
 $1 = HEAP32[28452] | 0;
 $150 = $1;
 STACKTOP = sp;
 return $150 | 0;
}
function __Z7IsAlphaj($c) {
 $c = $c | 0;
 var $1 = 0, $2 = 0, sp = 0;
 sp = STACKTOP;
 $2 = $c;
 L1 : do {
  if ((__Z9iswalpha2i($2) | 0) != 0) {
   $1 = 1;
  } else {
   if ($2 >>> 0 < 768 >>> 0) {
    $1 = 0;
    break;
   }
   do {
    if ($2 >>> 0 >= 2305 >>> 0) {
     if ($2 >>> 0 > 3575 >>> 0) {
      break;
     }
     if (($2 & 127) >>> 0 < 100 >>> 0) {
      $1 = 1;
      break L1;
     }
     if ((__Z11lookupwcharPKti(21336, $2) | 0) != 0) {
      $1 = 1;
      break L1;
     }
     do {
      if ($2 >>> 0 >= 3450 >>> 0) {
       if ($2 >>> 0 > 3455 >>> 0) {
        break;
       }
       $1 = 1;
       break L1;
      }
     } while (0);
     $1 = 0;
     break L1;
    }
   } while (0);
   do {
    if ($2 >>> 0 >= 1456 >>> 0) {
     if ($2 >>> 0 > 1474 >>> 0) {
      break;
     }
     $1 = 1;
     break L1;
    }
   } while (0);
   if (($2 | 0) == 1541) {
    $1 = 1;
    break;
   }
   do {
    if (($2 | 0) != 1648) {
     if ($2 >>> 0 >= 1611 >>> 0) {
      if ($2 >>> 0 <= 1630 >>> 0) {
       break;
      }
     }
     do {
      if ($2 >>> 0 >= 768 >>> 0) {
       if ($2 >>> 0 > 879 >>> 0) {
        break;
       }
       $1 = 1;
       break L1;
      }
     } while (0);
     do {
      if ($2 >>> 0 >= 1920 >>> 0) {
       if ($2 >>> 0 > 1969 >>> 0) {
        break;
       }
       $1 = 1;
       break L1;
      }
     } while (0);
     do {
      if ($2 >>> 0 >= 3904 >>> 0) {
       if ($2 >>> 0 > 4028 >>> 0) {
        break;
       }
       $1 = 1;
       break L1;
      }
     } while (0);
     do {
      if ($2 >>> 0 >= 4352 >>> 0) {
       if ($2 >>> 0 > 4607 >>> 0) {
        break;
       }
       $1 = 1;
       break L1;
      }
     } while (0);
     do {
      if ($2 >>> 0 >= 10240 >>> 0) {
       if ($2 >>> 0 > 10495 >>> 0) {
        break;
       }
       $1 = 1;
       break L1;
      }
     } while (0);
     do {
      if ($2 >>> 0 > 12352 >>> 0) {
       if ($2 >>> 0 > 42752 >>> 0) {
        break;
       }
       $1 = 1;
       break L1;
      }
     } while (0);
     $1 = 0;
     break L1;
    }
   } while (0);
   $1 = 1;
  }
 } while (0);
 STACKTOP = sp;
 return $1 | 0;
}
function __ZL14AdjustFormantsP7frame_tiiiiiii($fr, $target, $min, $max, $f1_adj, $f3_adj, $hf_reduce, $flags) {
 $fr = $fr | 0;
 $target = $target | 0;
 $min = $min | 0;
 $max = $max | 0;
 $f1_adj = $f1_adj | 0;
 $f3_adj = $f3_adj | 0;
 $hf_reduce = $hf_reduce | 0;
 $flags = $flags | 0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $x = 0, $38 = 0, $46 = 0, $61 = 0, $69 = 0, $94 = 0, $120 = 0, $128 = 0, $154 = 0, $162 = 0, $168 = 0, $169 = 0, sp = 0;
 sp = STACKTOP;
 $1 = $fr;
 $2 = $target;
 $3 = $min;
 $4 = $max;
 $5 = $f1_adj;
 $6 = $f3_adj;
 $7 = $hf_reduce;
 $2 = (Math_imul($2, HEAP32[(HEAP32[144] | 0) + 116 >> 2] | 0) | 0) / 256 | 0;
 $x = ($2 - (HEAP16[$1 + 6 >> 1] | 0) | 0) / 2 | 0;
 if (($x | 0) > ($4 | 0)) {
  $x = $4;
 }
 if (($x | 0) < ($3 | 0)) {
  $x = $3;
 }
 $38 = $1 + 6 | 0;
 HEAP16[$38 >> 1] = (HEAP16[$38 >> 1] | 0) + $x;
 $46 = $1 + 8 | 0;
 HEAP16[$46 >> 1] = (HEAP16[$46 >> 1] | 0) + $6;
 if (($flags & 32 | 0) != 0) {
  $6 = -$6 | 0;
 }
 $61 = $1 + 10 | 0;
 HEAP16[$61 >> 1] = (HEAP16[$61 >> 1] | 0) + $6;
 $69 = $1 + 12 | 0;
 HEAP16[$69 >> 1] = (HEAP16[$69 >> 1] | 0) + $6;
 if (($5 | 0) == 1) {
  $x = 235 - (HEAP16[$1 + 4 >> 1] | 0) | 0;
  if (($x | 0) < -100) {
   $x = -100;
  }
  if (($x | 0) > -60) {
   $x = -60;
  }
  $94 = $1 + 4 | 0;
  HEAP16[$94 >> 1] = (HEAP16[$94 >> 1] | 0) + $x;
 }
 if (($5 | 0) == 2) {
  $x = 235 - (HEAP16[$1 + 4 >> 1] | 0) | 0;
  if (($x | 0) < -300) {
   $x = -300;
  }
  if (($x | 0) > -150) {
   $x = -150;
  }
  $120 = $1 + 4 | 0;
  HEAP16[$120 >> 1] = (HEAP16[$120 >> 1] | 0) + $x;
  $128 = $1 + 2 | 0;
  HEAP16[$128 >> 1] = (HEAP16[$128 >> 1] | 0) + $x;
 }
 if (($5 | 0) != 3) {
  $168 = $1;
  $169 = $7;
  __ZL18formants_reduce_hfP7frame_ti($168, $169);
  STACKTOP = sp;
  return;
 }
 $x = 100 - (HEAP16[$1 + 4 >> 1] | 0) | 0;
 if (($x | 0) < -400) {
  $x = -400;
 }
 if (($x | 0) > -300) {
  $x = -400;
 }
 $154 = $1 + 4 | 0;
 HEAP16[$154 >> 1] = (HEAP16[$154 >> 1] | 0) + $x;
 $162 = $1 + 2 | 0;
 HEAP16[$162 >> 1] = (HEAP16[$162 >> 1] | 0) + $x;
 $168 = $1;
 $169 = $7;
 __ZL18formants_reduce_hfP7frame_ti($168, $169);
 STACKTOP = sp;
 return;
}
function __ZL17mbrola_has_errorsv() {
 var $1 = 0, $result = 0, $buffer = 0, $buf_ptr = 0, $lf = 0, $24 = 0, $36 = 0, $71 = 0, label = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 256 | 0;
 $buffer = sp | 0;
 $buf_ptr = $buffer | 0;
 L1 : while (1) {
  $result = _read(HEAP32[28580] | 0, $buf_ptr | 0, 256 - ($buf_ptr - $buffer) - 1 | 0) | 0;
  if (($result | 0) == -1) {
   label = 3;
   break;
  }
  if (($result | 0) == 0) {
   label = 7;
   break;
  }
  HEAP8[$buf_ptr + $result | 0] = 0;
  while (1) {
   $36 = _strchr($buf_ptr | 0, 10) | 0;
   $lf = $36;
   if (($36 | 0) == 0) {
    break;
   }
   do {
    if ((_strncmp($buf_ptr | 0, 8272, 18) | 0) == 0) {
     label = 12;
    } else {
     if ((_strncmp($buf_ptr | 0, 7752, 18) | 0) == 0) {
      label = 12;
      break;
     }
     HEAP8[$lf] = 0;
     __ZL3logPKcz(18200, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $buf_ptr, tempVarArgs) | 0);
     STACKTOP = tempVarArgs;
     if (($lf | 0) == ($buf_ptr + ($result - 1) | 0)) {
      label = 14;
      break L1;
     }
    }
   } while (0);
   if ((label | 0) == 12) {
    label = 0;
   }
   $buf_ptr = $lf + 1 | 0;
  }
  _memmove($buffer | 0, $buf_ptr | 0, $result | 0) | 0;
  $buf_ptr = $buffer + $result | 0;
 }
 if ((label | 0) == 7) {
  $1 = __ZL11mbrola_diedv() | 0;
  $71 = $1;
  STACKTOP = sp;
  return $71 | 0;
 } else if ((label | 0) == 14) {
  _snprintf(114160, 160, 9288, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $buf_ptr, tempVarArgs) | 0) | 0;
  STACKTOP = tempVarArgs;
  $1 = 0;
  $71 = $1;
  STACKTOP = sp;
  return $71 | 0;
 } else if ((label | 0) == 3) {
  if ((HEAP32[(___errno_location() | 0) >> 2] | 0) == 11) {
   $1 = 0;
   $71 = $1;
   STACKTOP = sp;
   return $71 | 0;
  } else {
   $24 = _strerror(HEAP32[(___errno_location() | 0) >> 2] | 0) | 0;
   __ZL3errPKcz(8752, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $24, tempVarArgs) | 0);
   STACKTOP = tempVarArgs;
   $1 = -1;
   $71 = $1;
   STACKTOP = sp;
   return $71 | 0;
  }
 }
 return 0;
}
function __ZL21pitch_synch_par_resetP13klatt_frame_t($frame) {
 $frame = $frame | 0;
 var $1 = 0, $temp = 0, $temp1 = 0.0, sp = 0;
 sp = STACKTOP;
 $1 = $frame;
 if ((HEAP32[$1 >> 2] | 0) > 0) {
  HEAP32[31368] = ((HEAP32[31360] | 0) * 40 | 0 | 0) / (HEAP32[$1 >> 2] | 0) | 0;
  HEAPF64[15693] = +__ZL7DBtoLINl(HEAP32[$1 + 204 >> 2] | 0);
  HEAP32[31370] = HEAP32[31368];
  if ((HEAP32[$1 + 204 >> 2] | 0) > 0) {
   HEAP32[31370] = HEAP32[31370] >> 1;
  }
  HEAPF64[15697] = +__ZL7DBtoLINl(HEAP32[$1 + 176 >> 2] | 0) * .1;
  HEAP32[31369] = HEAP32[$1 + 172 >> 2] << 2;
  do {
   if ((HEAP32[31363] | 0) == 1) {
    if ((HEAP32[31369] | 0) <= 263) {
     break;
    }
    HEAP32[31369] = 263;
   }
  } while (0);
  if ((HEAP32[31369] | 0) >= ((HEAP32[31368] | 0) - 1 | 0)) {
   HEAP32[31369] = (HEAP32[31368] | 0) - 2;
  }
  if ((HEAP32[31369] | 0) < 40) {
   HEAP32[31369] = 40;
  }
  HEAPF64[15687] = +(HEAP16[18944 + ((HEAP32[31369] | 0) - 40 << 1) >> 1] | 0);
  HEAPF64[15686] = +HEAPF64[15687] * +(HEAP32[31369] | 0) * .333;
  $temp = (HEAP32[31360] | 0) / (HEAP32[31369] | 0) | 0;
  __ZL6setabcllP11resonator_t(0, $temp, 126712);
  $temp1 = +(HEAP32[31369] | 0) * .00833;
  HEAPF64[15839] = +HEAPF64[15839] * $temp1 * $temp1;
  $temp = (HEAP32[31368] | 0) - (HEAP32[31369] | 0) | 0;
  if ((HEAP32[$1 + 188 >> 2] | 0) > ($temp | 0)) {
   HEAP32[$1 + 188 >> 2] = $temp;
  }
  if ((HEAP32[22816] | 0) >= 0) {
   HEAP32[22816] = HEAP32[$1 + 188 >> 2];
  } else {
   HEAP32[22816] = -(HEAP32[$1 + 188 >> 2] | 0);
  }
  HEAP32[31368] = (HEAP32[31368] | 0) + (HEAP32[22816] | 0);
  HEAP32[22816] = -(HEAP32[22816] | 0);
 } else {
  HEAP32[31368] = 4;
  HEAPF64[15693] = 0.0;
  HEAP32[31370] = HEAP32[31368];
  HEAPF64[15697] = 0.0;
  HEAPF64[15686] = 0.0;
  HEAPF64[15687] = 0.0;
 }
 do {
  if ((HEAP32[31368] | 0) == 4) {
   if ((HEAP32[31367] | 0) == 0) {
    break;
   }
   STACKTOP = sp;
   return;
  }
 } while (0);
 HEAPF64[15691] = +(HEAP32[$1 + 180 >> 2] | 0) * .033;
 if (+HEAPF64[15691] > 0.0) {
  HEAPF64[15690] = 1.0 - +HEAPF64[15691];
 } else {
  HEAPF64[15690] = 1.0;
 }
 STACKTOP = sp;
 return;
}
function __Z16ChangeWordStressP10TranslatorPci($tr, $word, $new_stress) {
 $tr = $tr | 0;
 $word = $word | 0;
 $new_stress = $new_stress | 0;
 var $2 = 0, $3 = 0, $ix = 0, $p = 0, $max_stress = 0, $vowel_count = 0, $stressed_syllable = 0, $phonetic = 0, $vowel_stress = 0, $103 = 0, $109 = 0, $112 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 320 | 0;
 $vowel_count = sp | 0;
 $stressed_syllable = sp + 8 | 0;
 $phonetic = sp + 16 | 0;
 $vowel_stress = sp + 216 | 0;
 $2 = $word;
 $3 = $new_stress;
 HEAP32[$stressed_syllable >> 2] = 0;
 _strcpy($phonetic | 0, $2 | 0) | 0;
 $max_stress = __ZL14GetVowelStressP10TranslatorPhPaPiS3_i($tr, $phonetic | 0, $vowel_stress | 0, $vowel_count, $stressed_syllable, 0) | 0;
 if (($3 | 0) >= 4) {
  $ix = 1;
  while (1) {
   if (($ix | 0) >= (HEAP32[$vowel_count >> 2] | 0)) {
    break;
   }
   if ((HEAP8[$vowel_stress + $ix | 0] | 0) >= ($max_stress | 0)) {
    label = 5;
    break;
   }
   $ix = $ix + 1 | 0;
  }
  if ((label | 0) == 5) {
   HEAP8[$vowel_stress + $ix | 0] = $3;
  }
 } else {
  $ix = 1;
  while (1) {
   if (($ix | 0) >= (HEAP32[$vowel_count >> 2] | 0)) {
    break;
   }
   if ((HEAP8[$vowel_stress + $ix | 0] | 0) > ($3 | 0)) {
    HEAP8[$vowel_stress + $ix | 0] = $3;
   }
   $ix = $ix + 1 | 0;
  }
 }
 $ix = 1;
 $p = $phonetic | 0;
 while (1) {
  if ((HEAPU8[$p] | 0) == 0) {
   break;
  }
  do {
   if ((HEAPU8[(HEAP32[43256 + (HEAPU8[$p] << 2) >> 2] | 0) + 11 | 0] | 0) == 2) {
    if ((HEAP32[(HEAP32[43256 + (HEAPU8[$p] << 2) >> 2] | 0) + 4 >> 2] & 1048576 | 0) != 0) {
     break;
    }
    if ((HEAP8[$vowel_stress + $ix | 0] | 0) == 0) {
     label = 22;
    } else {
     if ((HEAP8[$vowel_stress + $ix | 0] | 0) > 1) {
      label = 22;
     }
    }
    if ((label | 0) == 22) {
     label = 0;
     $103 = $2;
     $2 = $103 + 1 | 0;
     HEAP8[$103] = HEAP8[27744 + (HEAPU8[$vowel_stress + $ix | 0] | 0) | 0] | 0;
    }
    $ix = $ix + 1 | 0;
   }
  } while (0);
  $109 = $p;
  $p = $109 + 1 | 0;
  $112 = $2;
  $2 = $112 + 1 | 0;
  HEAP8[$112] = HEAP8[$109] | 0;
 }
 HEAP8[$2] = 0;
 STACKTOP = sp;
 return;
}
function __ZL14SubstituteCharP10TranslatorjjPiS1_($tr, $c, $next_in, $insert, $wordflags) {
 $tr = $tr | 0;
 $c = $c | 0;
 $next_in = $next_in | 0;
 $insert = $insert | 0;
 $wordflags = $wordflags | 0;
 var $1 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $ix = 0, $word = 0, $new_c = 0, $c2 = 0, $c_lower = 0, $upper_case = 0, $replace_chars = 0, $18 = 0, $23 = 0, $34 = 0, $101 = 0, $106 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = $c;
 $4 = $next_in;
 $5 = $insert;
 $6 = $wordflags;
 $upper_case = 0;
 if ((HEAP32[22832] | 0) != 0) {
  HEAP32[22832] = 0;
  $1 = 8;
  $106 = $1;
  STACKTOP = sp;
  return $106 | 0;
 }
 if (($3 | 0) == 0) {
  $1 = 0;
  $106 = $1;
  STACKTOP = sp;
  return $106 | 0;
 }
 $18 = HEAP32[$tr + 284 >> 2] | 0;
 $replace_chars = $18;
 if (($18 | 0) == 0) {
  $1 = $3;
  $106 = $1;
  STACKTOP = sp;
  return $106 | 0;
 }
 $23 = $3;
 $c_lower = $23;
 if ((__Z9iswupper2i($23) | 0) != 0) {
  $c_lower = __Z9towlower2j($3) | 0;
  $upper_case = 1;
 }
 $new_c = 0;
 $ix = 0;
 while (1) {
  $34 = HEAP32[$replace_chars + ($ix << 2) >> 2] | 0;
  $word = $34;
  if (($34 | 0) == 0) {
   break;
  }
  if (($c_lower | 0) == ($word & 65535 | 0)) {
   if (($word >>> 16 | 0) == 0) {
    label = 13;
    break;
   }
   if (($word >>> 16 | 0) == (__Z9towlower2j($4) | 0)) {
    label = 15;
    break;
   }
  }
  $ix = $ix + 2 | 0;
 }
 if ((label | 0) == 13) {
  $new_c = HEAP32[$replace_chars + ($ix + 1 << 2) >> 2] | 0;
 } else if ((label | 0) == 15) {
  $new_c = HEAP32[$replace_chars + ($ix + 1 << 2) >> 2] | 0;
  HEAP32[22832] = 1;
 }
 if (($new_c | 0) == 0) {
  $1 = $3;
  $106 = $1;
  STACKTOP = sp;
  return $106 | 0;
 }
 if (($new_c & -2097152 | 0) != 0) {
  $c2 = $new_c >>> 16;
  do {
   if (($upper_case | 0) != 0) {
    if ((__Z9iswupper2i($4) | 0) == 0) {
     break;
    }
    $c2 = __Z9towupper2j($c2) | 0;
   }
  } while (0);
  HEAP32[$5 >> 2] = $c2;
  $new_c = $new_c & 65535;
 }
 if (($upper_case | 0) != 0) {
  $new_c = __Z9towupper2j($new_c) | 0;
 }
 $101 = $6;
 HEAP32[$101 >> 2] = HEAP32[$101 >> 2] | 2097152;
 $1 = $new_c;
 $106 = $1;
 STACKTOP = sp;
 return $106 | 0;
}
function __Z12SetParameteriii($parameter, $value, $relative) {
 $parameter = $parameter | 0;
 $value = $value | 0;
 $relative = $relative | 0;
 var $1 = 0, $2 = 0, $new_value = 0, $default_value = 0, $24 = 0, $27 = 0, sp = 0;
 sp = STACKTOP;
 $1 = $parameter;
 $2 = $value;
 $new_value = $2;
 if (($relative | 0) != 0) {
  if (($1 | 0) < 5) {
   $default_value = HEAP32[5280 + ($1 << 2) >> 2] | 0;
   $new_value = $default_value + ((Math_imul($default_value, $2) | 0) / 100 | 0) | 0;
  }
 }
 $24 = 76492 + ($1 << 2) | 0;
 tempBigInt = $new_value;
 HEAP8[$24] = tempBigInt;
 tempBigInt = tempBigInt >> 8;
 HEAP8[$24 + 1 | 0] = tempBigInt;
 tempBigInt = tempBigInt >> 8;
 HEAP8[$24 + 2 | 0] = tempBigInt;
 tempBigInt = tempBigInt >> 8;
 HEAP8[$24 + 3 | 0] = tempBigInt;
 $27 = 37896 + ($1 << 2) | 0;
 tempBigInt = $new_value;
 HEAP8[$27] = tempBigInt;
 tempBigInt = tempBigInt >> 8;
 HEAP8[$27 + 1 | 0] = tempBigInt;
 tempBigInt = tempBigInt >> 8;
 HEAP8[$27 + 2 | 0] = tempBigInt;
 tempBigInt = tempBigInt >> 8;
 HEAP8[$27 + 3 | 0] = tempBigInt;
 switch ($1 | 0) {
 case 1:
  {
   HEAP32[19606] = $new_value;
   HEAP32[19612] = $new_value;
   __Z8SetSpeedi(3);
   STACKTOP = sp;
   return;
  }
 case 2:
  {
   HEAP32[19607] = $new_value;
   __Z12GetAmplitudev() | 0;
   STACKTOP = sp;
   return;
  }
 case 3:
  {
   if (($new_value | 0) > 99) {
    $new_value = 99;
   }
   if (($new_value | 0) < 0) {
    $new_value = 0;
   }
   HEAP32[19605] = $new_value;
   STACKTOP = sp;
   return;
  }
 case 4:
  {
   if (($new_value | 0) > 99) {
    $new_value = 99;
   }
   HEAP32[19608] = $new_value;
   STACKTOP = sp;
   return;
  }
 case 13:
  {
   HEAP32[19542] = $new_value;
   STACKTOP = sp;
   return;
  }
 case 7:
  {
   HEAP32[19454] = $new_value;
   STACKTOP = sp;
   return;
  }
 case 9:
  {
   if (($new_value & 255 | 0) != 0) {
    HEAP32[(HEAP32[9112] | 0) + 248 >> 2] = $new_value & 255;
   }
   HEAP32[19458] = $new_value;
   STACKTOP = sp;
   return;
  }
 default:
  {
   STACKTOP = sp;
   return;
  }
 }
}
function __ZL8PlayWaveiiPhii($length, $resume, $data, $scale, $amp) {
 $length = $length | 0;
 $resume = $resume | 0;
 $data = $data | 0;
 $scale = $scale | 0;
 $amp = $amp | 0;
 var $1 = 0, $4 = 0, $5 = 0, $6 = 0, $value = 0, $13 = 0, $37 = 0, $57 = 0, $95 = 0, $109 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = $data;
 $5 = $scale;
 $6 = $amp;
 if (($resume | 0) == 0) {
  HEAP32[22798] = $length;
  HEAP32[22800] = 0;
 }
 HEAP32[26724] = 0;
 HEAP32[28848] = 0;
 while (1) {
  $13 = HEAP32[22798] | 0;
  HEAP32[22798] = $13 - 1;
  if (($13 | 0) <= 0) {
   label = 20;
   break;
  }
  if (($5 | 0) == 0) {
   $value = (HEAPU8[$4 + (HEAP32[22800] | 0) | 0] | 0) + (HEAP8[$4 + ((HEAP32[22800] | 0) + 1) | 0] << 8) | 0;
   HEAP32[22800] = (HEAP32[22800] | 0) + 2;
  } else {
   $37 = HEAP32[22800] | 0;
   HEAP32[22800] = $37 + 1;
   $value = Math_imul(HEAP8[$4 + $37 | 0] | 0, $5) | 0;
  }
  $value = Math_imul($value, Math_imul(HEAP32[7424] | 0, HEAP32[6658] | 0) | 0) | 0;
  $value = $value >> 10;
  $value = (Math_imul($value, $6) | 0) / 32 | 0;
  $57 = HEAP32[19870] | 0;
  HEAP32[19870] = $57 + 1;
  $value = $value + ((Math_imul(HEAP16[79496 + ($57 << 1) >> 1] | 0, HEAP32[22624] | 0) | 0) >> 8) | 0;
  if (($value | 0) > 32767) {
   $value = 32768;
  } else {
   if (($value | 0) < -32768) {
    $value = -32768;
   }
  }
  if ((HEAP32[19870] | 0) >= 5500) {
   HEAP32[19870] = 0;
  }
  HEAP8[HEAP32[19448] | 0] = $value;
  HEAP8[(HEAP32[19448] | 0) + 1 | 0] = $value >> 8;
  HEAP32[19448] = (HEAP32[19448] | 0) + 2;
  $95 = HEAP32[19872] | 0;
  HEAP32[19872] = $95 + 1;
  HEAP16[79496 + ($95 << 1) >> 1] = ($value * 3 | 0 | 0) / 4 | 0;
  if ((HEAP32[19872] | 0) >= 5500) {
   HEAP32[19872] = 0;
  }
  if ((HEAP32[19448] | 0) >>> 0 >= (HEAP32[19450] | 0) >>> 0) {
   label = 18;
   break;
  }
 }
 if ((label | 0) == 18) {
  $1 = 1;
  $109 = $1;
  STACKTOP = sp;
  return $109 | 0;
 } else if ((label | 0) == 20) {
  $1 = 0;
  $109 = $1;
  STACKTOP = sp;
  return $109 | 0;
 }
 return 0;
}
function __ZL17ProcessParamStackPcPi($outbuf, $outix) {
 $outbuf = $outbuf | 0;
 $outix = $outix | 0;
 var $1 = 0, $2 = 0, $param = 0, $ix = 0, $value = 0, $buf = 0, $new_parameters = 0, $53 = 0, $72 = 0, $87 = 0, $88 = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 88 | 0;
 $buf = sp | 0;
 $new_parameters = sp + 24 | 0;
 $1 = $outbuf;
 $2 = $outix;
 $param = 0;
 while (1) {
  if (($param | 0) >= 15) {
   break;
  }
  HEAP32[$new_parameters + ($param << 2) >> 2] = -1;
  $param = $param + 1 | 0;
 }
 $ix = 0;
 while (1) {
  if (($ix | 0) >= (HEAP32[28508] | 0)) {
   break;
  }
  $param = 0;
  while (1) {
   if (($param | 0) >= 15) {
    break;
   }
   if ((HEAP32[76492 + ($ix << 6) + ($param << 2) >> 2] | 0) >= 0) {
    HEAP32[$new_parameters + ($param << 2) >> 2] = HEAP32[76492 + ($ix << 6) + ($param << 2) >> 2];
   }
   $param = $param + 1 | 0;
  }
  $ix = $ix + 1 | 0;
 }
 $param = 0;
 while (1) {
  if (($param | 0) >= 15) {
   break;
  }
  $53 = HEAP32[$new_parameters + ($param << 2) >> 2] | 0;
  $value = $53;
  if (($53 | 0) != (HEAP32[113616 + ($param << 2) >> 2] | 0)) {
   HEAP8[$buf | 0] = 0;
   switch ($param | 0) {
   case 5:
    {
     HEAP32[19468] = $value - 1;
     break;
    }
   case 6:
    {
     HEAP32[19546] = $value;
     break;
    }
   case 1:
   case 2:
   case 3:
   case 4:
   case 12:
    {
     $72 = HEAP8[19784 + $param | 0] | 0;
     _sprintf($buf | 0, 7952, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 24 | 0, HEAP32[tempVarArgs >> 2] = 1, HEAP32[tempVarArgs + 8 >> 2] = $value, HEAP32[tempVarArgs + 16 >> 2] = $72, tempVarArgs) | 0) | 0;
     STACKTOP = tempVarArgs;
     break;
    }
   default:
    {}
   }
   HEAP32[113616 + ($param << 2) >> 2] = HEAP32[$new_parameters + ($param << 2) >> 2];
   _strcpy($1 + (HEAP32[$2 >> 2] | 0) | 0, $buf | 0) | 0;
   $87 = _strlen($buf | 0) | 0;
   $88 = $2;
   HEAP32[$88 >> 2] = (HEAP32[$88 >> 2] | 0) + $87;
  }
  $param = $param + 1 | 0;
 }
 STACKTOP = sp;
 return;
}
function __Z17SelectVoiceByNamePP12espeak_VOICEPKc($voices, $name2) {
 $voices = $voices | 0;
 $name2 = $name2 | 0;
 var $1 = 0, $2 = 0, $3 = 0, $ix = 0, $match_fname = 0, $match_fname2 = 0, $match_name = 0, $id = 0, $variant_name = 0, $last_part_len = 0, $last_part = 0, $name = 0, $16 = 0, $97 = 0, label = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 88 | 0;
 $last_part = sp | 0;
 $name = sp + 48 | 0;
 $2 = $voices;
 $3 = $name2;
 $match_fname = -1;
 $match_fname2 = -1;
 $match_name = -1;
 if (($2 | 0) == 0) {
  if ((HEAP32[28506] | 0) == 0) {
   _espeak_ListVoices(0) | 0;
  }
  $2 = 114376;
 }
 __Z8strncpy0PcPKci($name | 0, $3, 40);
 $16 = _strchr($name | 0, 43) | 0;
 $variant_name = $16;
 if (($16 | 0) != 0) {
  HEAP8[$variant_name] = 0;
  $variant_name = $variant_name + 1 | 0;
 }
 _sprintf($last_part | 0, 10960, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = 47, HEAP32[tempVarArgs + 8 >> 2] = $name, tempVarArgs) | 0) | 0;
 STACKTOP = tempVarArgs;
 $last_part_len = _strlen($last_part | 0) | 0;
 $ix = 0;
 while (1) {
  if ((HEAP32[$2 + ($ix << 2) >> 2] | 0) == 0) {
   break;
  }
  if ((_strcmp($name | 0, HEAP32[HEAP32[$2 + ($ix << 2) >> 2] >> 2] | 0) | 0) == 0) {
   label = 10;
   break;
  }
  $id = HEAP32[(HEAP32[$2 + ($ix << 2) >> 2] | 0) + 8 >> 2] | 0;
  if ((_strcmp($name | 0, $id | 0) | 0) == 0) {
   $match_fname = $ix;
  } else {
   if ((_strcmp($last_part | 0, $id + ((_strlen($id | 0) | 0) - $last_part_len) | 0) | 0) == 0) {
    $match_fname2 = $ix;
   }
  }
  $ix = $ix + 1 | 0;
 }
 if ((label | 0) == 10) {
  $match_name = $ix;
 }
 if (($match_name | 0) < 0) {
  $match_name = $match_fname;
  if (($match_name | 0) < 0) {
   $match_name = $match_fname2;
  }
 }
 if (($match_name | 0) < 0) {
  $1 = 0;
  $97 = $1;
  STACKTOP = sp;
  return $97 | 0;
 } else {
  $1 = HEAP32[$2 + ($match_name << 2) >> 2] | 0;
  $97 = $1;
  STACKTOP = sp;
  return $97 | 0;
 }
 return 0;
}
function __ZL17CheckDottedAbbrevPcP8WORD_TAB($word1, $wtab) {
 $word1 = $word1 | 0;
 $wtab = $wtab | 0;
 var $1 = 0, $wc = 0, $count = 0, $nbytes = 0, $ok = 0, $ix = 0, $word = 0, $wbuf = 0, $word_buf = 0, $75 = 0, $113 = 0, $122 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 88 | 0;
 $wc = sp | 0;
 $word_buf = sp + 8 | 0;
 $1 = $word1;
 $count = 0;
 $word = $1;
 $wbuf = $word_buf | 0;
 $ix = 0;
 while (1) {
  $ok = 0;
  $nbytes = __Z7utf8_inPiPKc($wc, $word) | 0;
  do {
   if ((HEAP8[$word + $nbytes | 0] | 0) == 32) {
    if ((__Z7IsAlphaj(HEAP32[$wc >> 2] | 0) | 0) == 0) {
     break;
    }
    if ((HEAP8[$word + ($nbytes + 1) | 0] | 0) == 46) {
     if ((HEAP8[$word + ($nbytes + 2) | 0] | 0) == 32) {
      $ok = 1;
     } else {
      if ((HEAP8[$word + ($nbytes + 2) | 0] | 0) == 39) {
       $nbytes = $nbytes + 2 | 0;
       $ok = 2;
      }
     }
    } else {
     do {
      if (($count | 0) > 0) {
       if ((HEAP8[$word + $nbytes | 0] | 0) != 32) {
        break;
       }
       $ok = 2;
      }
     } while (0);
    }
   }
  } while (0);
  if (($ok | 0) == 0) {
   label = 17;
   break;
  }
  $ix = 0;
  while (1) {
   if (($ix | 0) >= ($nbytes | 0)) {
    break;
   }
   $75 = $wbuf;
   $wbuf = $75 + 1 | 0;
   HEAP8[$75] = HEAP8[$word + $ix | 0] | 0;
   $ix = $ix + 1 | 0;
  }
  $count = $count + 1 | 0;
  if (($ok | 0) == 2) {
   label = 23;
   break;
  }
  $word = $word + ($nbytes + 3) | 0;
 }
 if ((label | 0) == 17) {} else if ((label | 0) == 23) {
  $word = $word + $nbytes | 0;
 }
 if (($count | 0) <= 1) {
  $122 = $count;
  STACKTOP = sp;
  return $122 | 0;
 }
 $ix = $wbuf - $word_buf | 0;
 _memcpy($1 | 0, $word_buf | 0, $ix) | 0;
 while (1) {
  if (($1 + $ix | 0) >>> 0 >= $word >>> 0) {
   break;
  }
  $113 = $ix;
  $ix = $113 + 1 | 0;
  HEAP8[$1 + $113 | 0] = 32;
 }
 HEAP32[22626] = $count - 1 << 1;
 $122 = $count;
 STACKTOP = sp;
 return $122 | 0;
}
function __Z10VoiceReseti($tone_only) {
 $tone_only = $tone_only | 0;
 var $1 = 0, $pk = 0, sp = 0;
 sp = STACKTOP;
 $1 = $tone_only;
 HEAP32[(HEAP32[144] | 0) + 64 >> 2] = 290816;
 HEAP32[(HEAP32[144] | 0) + 68 >> 2] = 4104;
 HEAP32[(HEAP32[144] | 0) + 116 >> 2] = 256;
 HEAP32[(HEAP32[144] | 0) + 84 >> 2] = 100;
 HEAP32[(HEAP32[144] | 0) + 96 >> 2] = 0;
 HEAP32[(HEAP32[144] | 0) + 100 >> 2] = 0;
 HEAP32[(HEAP32[144] | 0) + 88 >> 2] = 64;
 HEAP32[(HEAP32[144] | 0) + 104 >> 2] = 5;
 HEAP32[(HEAP32[144] | 0) + 108 >> 2] = 0;
 HEAP32[(HEAP32[144] | 0) + 112 >> 2] = 64;
 HEAP32[(HEAP32[144] | 0) + 120 >> 2] = 90;
 HEAP32[(HEAP32[144] | 0) + 124 >> 2] = 100;
 HEAP32[(HEAP32[144] | 0) + 128 >> 2] = HEAP32[9494];
 _memset((HEAP32[144] | 0) + 132 | 0, 0, 32) | 0;
 HEAP32[9122] = 450;
 HEAP32[9123] = 800;
 HEAP32[9124] = 175;
 HEAP32[(HEAP32[144] | 0) + 92 >> 2] = 2;
 __Z10InitBreathv();
 $pk = 0;
 while (1) {
  if (($pk | 0) >= 9) {
   break;
  }
  HEAP16[(HEAP32[144] | 0) + 164 + ($pk << 1) >> 1] = 256;
  HEAP16[(HEAP32[144] | 0) + 182 + ($pk << 1) >> 1] = (HEAPU8[23640 + $pk | 0] | 0) << 1;
  HEAP16[(HEAP32[144] | 0) + 200 + ($pk << 1) >> 1] = (HEAPU8[23656 + $pk | 0] | 0) << 1;
  HEAP32[(HEAP32[144] | 0) + 292 + ($pk << 2) >> 2] = 0;
  HEAP32[(HEAP32[144] | 0) + 328 + ($pk << 2) >> 2] = HEAP32[23672 + ($pk << 2) >> 2];
  HEAP16[(HEAP32[144] | 0) + 218 + ($pk << 1) >> 1] = 0;
  HEAP32[78328 + ($pk << 2) >> 2] = ((HEAP32[26488 + ($pk << 2) >> 2] | 0) * 22050 | 0 | 0) / (HEAP32[9496] | 0) | 0;
  $pk = $pk + 1 | 0;
 }
 __ZL13SetToneAdjustP7voice_tPi(HEAP32[144] | 0, 616);
 HEAP32[(HEAP32[144] | 0) + 72 >> 2] = 256;
 HEAP32[(HEAP32[144] | 0) + 76 >> 2] = 238;
 HEAP32[(HEAP32[144] | 0) + 80 >> 2] = 232;
 if (($1 | 0) != 0) {
  STACKTOP = sp;
  return;
 }
 HEAP32[19556] = 0;
 HEAP32[19466] = 0;
 __Z15LoadMbrolaTablePKcS0_i(0, 0, 0) | 0;
 STACKTOP = sp;
 return;
}
function __Z14SetTranslator2PKc($new_language) {
 $new_language = $new_language | 0;
 var $1 = 0, $new_phoneme_tab = 0, $new_phtab_name = 0, $bitmap = 0, $dialect = 0, $6 = 0, $29 = 0, $88 = 0, sp = 0;
 sp = STACKTOP;
 $1 = $new_language;
 $dialect = 0;
 $new_phtab_name = $1;
 $6 = HEAP32[(HEAP32[9112] | 0) + 320 >> 2] | 0;
 $bitmap = $6;
 if (($6 | 0) != 0) {
  do {
   if (($bitmap & 2 | 0) != 0) {
    if ((_strcmp($1 | 0, 10632) | 0) != 0) {
     break;
    }
    $new_phtab_name = 8312;
    $dialect = 1;
   }
  } while (0);
  do {
   if (($bitmap & 4 | 0) != 0) {
    if ((_strcmp($1 | 0, 7792) | 0) != 0) {
     break;
    }
    $new_phtab_name = 18224;
    $dialect = 2;
   }
  } while (0);
 }
 $29 = __Z22SelectPhonemeTableNamePKc($new_phtab_name) | 0;
 $new_phoneme_tab = $29;
 if (($29 | 0) >= 0) {
  do {
   if ((HEAP32[9110] | 0) != 0) {
    if ((_strcmp($1 | 0, 113456) | 0) == 0) {
     break;
    }
    __Z16DeleteTranslatorP10Translator(HEAP32[9110] | 0);
    HEAP32[9110] = 0;
   }
  } while (0);
  if ((HEAP32[9110] | 0) == 0) {
   HEAP32[9110] = __Z16SelectTranslatorPKc($1) | 0;
   _strcpy(113456, $1 | 0) | 0;
   if ((__Z14LoadDictionaryP10TranslatorPKci(HEAP32[9110] | 0, (HEAP32[9110] | 0) + 340 | 0, 0) | 0) != 0) {
    __Z18SelectPhonemeTablei(HEAP32[(HEAP32[144] | 0) + 60 >> 2] | 0);
    $new_phoneme_tab = -1;
    HEAP8[113456] = 0;
   } else {
    if (($dialect | 0) == 1) {
     HEAP32[(HEAP32[9110] | 0) + 440 >> 2] = 72;
     HEAP32[(HEAP32[9110] | 0) + 72 >> 2] = 1;
    }
    if (($dialect | 0) == 2) {
     HEAP32[(HEAP32[9110] | 0) + 440 >> 2] = 4;
    }
   }
   HEAP32[(HEAP32[9110] | 0) + 404 >> 2] = $new_phoneme_tab;
  }
 }
 if ((HEAP32[9110] | 0) == 0) {
  $88 = $new_phoneme_tab;
  STACKTOP = sp;
  return $88 | 0;
 }
 HEAP8[(HEAP32[9110] | 0) + 380 | 0] = 0;
 $88 = $new_phoneme_tab;
 STACKTOP = sp;
 return $88 | 0;
}
function __ZL18GetVoiceAttributesPwi($pw, $tag_type) {
 $pw = $pw | 0;
 $tag_type = $tag_type | 0;
 var $1 = 0, $2 = 0, $3 = 0, $lang = 0, $gender = 0, $name = 0, $age = 0, $variant = 0, $value = 0, $new_voice_id = 0, $ssml_sp = 0, $37 = 0, $51 = 0, $81 = 0, sp = 0;
 sp = STACKTOP;
 $2 = $pw;
 $3 = $tag_type;
 if (($3 & 32 | 0) != 0) {
  if ((HEAP32[28538] | 0) > 1) {
   HEAP32[28538] = (HEAP32[28538] | 0) - 1;
  }
 } else {
  $lang = __ZL16GetSsmlAttributePwPKc($2, 9080) | 0;
  if (($3 | 0) != 2) {
   $name = 0;
   $variant = 0;
   $age = 0;
   $gender = 0;
  } else {
   $name = __ZL16GetSsmlAttributePwPKc($2, 9904) | 0;
   $variant = __ZL16GetSsmlAttributePwPKc($2, 9032) | 0;
   $age = __ZL16GetSsmlAttributePwPKc($2, 8976) | 0;
   $gender = __ZL16GetSsmlAttributePwPKc($2, 8936) | 0;
  }
  do {
   if (($3 | 0) != 2) {
    if (($lang | 0) != 0) {
     break;
    }
    $1 = 0;
    $81 = $1;
    STACKTOP = sp;
    return $81 | 0;
   }
  } while (0);
  $37 = HEAP32[28538] | 0;
  HEAP32[28538] = $37 + 1;
  $ssml_sp = 123744 + ($37 * 76 | 0) | 0;
  __ZL13attrcopy_utf8PcPKwi($ssml_sp + 56 | 0, $lang, 20) | 0;
  __ZL13attrcopy_utf8PcPKwi($ssml_sp + 16 | 0, $name, 40) | 0;
  $51 = __ZL10attrnumberPKwii($variant, 1, 0) | 0;
  $value = $51;
  if (($51 | 0) > 0) {
   $value = $value - 1 | 0;
  }
  HEAP32[$ssml_sp + 4 >> 2] = $value;
  HEAP32[$ssml_sp + 12 >> 2] = __ZL10attrnumberPKwii($age, 0, 0) | 0;
  HEAP32[$ssml_sp + 8 >> 2] = __ZL10attrlookupPKwPK8MNEM_TAB($gender, 19744) | 0;
  HEAP32[$ssml_sp >> 2] = $3;
 }
 $new_voice_id = __ZL14VoiceFromStackv() | 0;
 if ((_strcmp($new_voice_id | 0, 113712) | 0) != 0) {
  _strcpy(113712, $new_voice_id | 0) | 0;
  $1 = 131072;
  $81 = $1;
  STACKTOP = sp;
  return $81 | 0;
 } else {
  $1 = 0;
  $81 = $1;
  STACKTOP = sp;
  return $81 | 0;
 }
 return 0;
}
function __ZL9M_Varianti($value) {
 $value = $value | 0;
 var $1 = 0, $2 = 0, $teens = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = $value;
 $teens = 0;
 do {
  if ((($2 | 0) % 100 | 0 | 0) > 10) {
   if ((($2 | 0) % 100 | 0 | 0) >= 20) {
    break;
   }
   $teens = 1;
  }
 } while (0);
 L5 : do {
  switch (HEAP32[(HEAP32[9112] | 0) + 204 >> 2] >> 6 & 7 | 0) {
  case 3:
   {
    do {
     if (($teens | 0) == 0) {
      if ((($2 | 0) % 10 | 0 | 0) < 2) {
       break;
      }
      if ((($2 | 0) % 10 | 0 | 0) > 4) {
       break;
      }
      $1 = 9232;
      break L5;
     }
    } while (0);
    label = 32;
    break;
   }
  case 1:
   {
    do {
     if (($teens | 0) == 0) {
      if ((($2 | 0) % 10 | 0 | 0) != 1) {
       break;
      }
      $1 = 9296;
      break L5;
     }
    } while (0);
    label = 32;
    break;
   }
  case 2:
   {
    do {
     if (($2 | 0) >= 2) {
      if (($2 | 0) > 4) {
       break;
      }
      $1 = 9232;
      break L5;
     }
    } while (0);
    label = 32;
    break;
   }
  case 4:
   {
    do {
     if (($teens | 0) != 1) {
      if ((($2 | 0) % 10 | 0 | 0) == 0) {
       break;
      }
      if ((($2 | 0) % 10 | 0 | 0) == 1) {
       $1 = 9232;
       break L5;
      } else {
       label = 32;
       break L5;
      }
     }
    } while (0);
    $1 = 9184;
    break;
   }
  case 5:
   {
    if (($teens | 0) == 0) {
     if ((($2 | 0) % 10 | 0 | 0) == 1) {
      $1 = 9296;
      break L5;
     }
     do {
      if ((($2 | 0) % 10 | 0 | 0) >= 2) {
       if ((($2 | 0) % 10 | 0 | 0) > 4) {
        break;
       }
       $1 = 9232;
       break L5;
      }
     } while (0);
    }
    label = 32;
    break;
   }
  default:
   {
    label = 32;
   }
  }
 } while (0);
 if ((label | 0) == 32) {
  $1 = 9144;
 }
 STACKTOP = sp;
 return $1 | 0;
}
function __Z14DecodePhonemesPKcPc($inptr, $outptr) {
 $inptr = $inptr | 0;
 $outptr = $outptr | 0;
 var $1 = 0, $2 = 0, $phcode = 0, $mnem = 0, $ph = 0, $6 = 0, $8 = 0, $20 = 0, $55 = 0, $65 = 0, $70 = 0, $86 = 0, $89 = 0, label = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 $1 = $inptr;
 $2 = $outptr;
 _sprintf($2 | 0, 8528, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 7 & -8, HEAP32[tempVarArgs >> 2] = 0, tempVarArgs) | 0) | 0;
 STACKTOP = tempVarArgs;
 while (1) {
  $6 = $1;
  $1 = $6 + 1 | 0;
  $8 = HEAP8[$6] | 0;
  $phcode = $8;
  if (($8 & 255 | 0) <= 0) {
   break;
  }
  if (($phcode & 255 | 0) == 255) {
   continue;
  }
  $20 = HEAP32[43256 + (($phcode & 255) << 2) >> 2] | 0;
  $ph = $20;
  if (($20 | 0) == 0) {
   continue;
  }
  do {
   if ((HEAPU8[$ph + 11 | 0] | 0) == 1) {
    if ((HEAPU8[$ph + 14 | 0] | 0) > 4) {
     label = 13;
     break;
    }
    if ((HEAPU16[$ph + 8 >> 1] | 0) != 0) {
     label = 13;
     break;
    }
    if ((HEAPU8[$ph + 14 | 0] | 0) > 1) {
     $55 = $2;
     $2 = $55 + 1 | 0;
     HEAP8[$55] = HEAP8[(HEAP32[5868] | 0) + (HEAPU8[$ph + 14 | 0] | 0) | 0] | 0;
    }
   } else {
    label = 13;
   }
  } while (0);
  if ((label | 0) == 13) {
   label = 0;
   $mnem = HEAP32[$ph >> 2] | 0;
   while (1) {
    $65 = $mnem & 255;
    if (($65 & 255 | 0) == 0) {
     break;
    }
    $70 = $2;
    $2 = $70 + 1 | 0;
    HEAP8[$70] = $65;
    $mnem = $mnem >>> 8;
   }
   if (($phcode & 255 | 0) == 21) {
    while (1) {
     if ((_isalpha(HEAP8[$1] | 0) | 0) == 0) {
      break;
     }
     $86 = $1;
     $1 = $86 + 1 | 0;
     $89 = $2;
     $2 = $89 + 1 | 0;
     HEAP8[$89] = HEAP8[$86] | 0;
    }
   }
  }
 }
 HEAP8[$2] = 0;
 STACKTOP = sp;
 return;
}
function __Z10DoEmbeddedPii($embix, $sourceix) {
 $embix = $embix | 0;
 $sourceix = $sourceix | 0;
 var $1 = 0, $2 = 0, $word = 0, $value = 0, $command = 0, $6 = 0, $16 = 0, $20 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = $embix;
 $2 = $sourceix;
 while (1) {
  $6 = 78480 + (HEAP32[$1 >> 2] << 2) | 0;
  $word = HEAPU8[$6] | HEAPU8[$6 + 1 | 0] << 8 | HEAPU8[$6 + 2 | 0] << 16 | HEAPU8[$6 + 3 | 0] << 24 | 0;
  $value = $word >>> 8;
  $command = $word & 127;
  if (($command | 0) == 0) {
   break;
  }
  $16 = $1;
  HEAP32[$16 >> 2] = (HEAP32[$16 >> 2] | 0) + 1;
  $20 = $command & 31;
  if (($20 | 0) == 2) {
   __Z11SetEmbeddedii(($command & 96) + 8 | 0, $value);
   __Z8SetSpeedi(2);
  } else if (($20 | 0) == 7) {
   if (($value | 0) < (HEAP32[1358] | 0)) {
    if ((HEAP32[36524 + ($value << 4) >> 2] | 0) != 0) {
     __ZL7DoPauseii(10, 0);
     HEAP32[33456 + (HEAP32[8360] << 4) >> 2] = 6;
     HEAP32[33460 + (HEAP32[8360] << 4) >> 2] = HEAP32[36524 + ($value << 4) >> 2];
     HEAP32[33464 + (HEAP32[8360] << 4) >> 2] = (HEAP32[36528 + ($value << 4) >> 2] | 0) + 44;
     HEAP32[33468 + (HEAP32[8360] << 4) >> 2] = 5376;
     __Z8WcmdqIncv();
    }
   }
  } else if (($20 | 0) == 10) {
   __Z8DoMarkeriiii(3, ($2 & 2047) + (HEAP32[22658] | 0) | 0, 0, $value);
  } else if (($20 | 0) == 11) {
   __Z8DoMarkeriiii(4, (HEAP32[22654] | 0) + 1 | 0, 0, $value);
  } else {
   __ZL7DoPauseii(10, 0);
   HEAP32[33456 + (HEAP32[8360] << 4) >> 2] = 12;
   HEAP32[33460 + (HEAP32[8360] << 4) >> 2] = $command;
   HEAP32[33464 + (HEAP32[8360] << 4) >> 2] = $value;
   __Z8WcmdqIncv();
  }
  if (($word & 128 | 0) != 0) {
   label = 17;
   break;
  }
 }
 if ((label | 0) == 17) {
  STACKTOP = sp;
  return;
 }
 STACKTOP = sp;
 return;
}
function __ZL15StressConditionP10TranslatorP12PHONEME_LISTii($tr, $plist, $condition, $control) {
 $tr = $tr | 0;
 $plist = $plist | 0;
 $condition = $condition | 0;
 $control = $control | 0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $stress_level = 0, $pl = 0, $109 = 0, sp = 0;
 sp = STACKTOP;
 $2 = $tr;
 $3 = $plist;
 $4 = $condition;
 $5 = $control;
 do {
  if ((HEAPU8[(HEAP32[43256 + ((HEAPU8[$3 + 2 | 0] | 0) << 2) >> 2] | 0) + 11 | 0] | 0 | 0) == 2) {
   $pl = $3;
  } else {
   if ((HEAPU8[(HEAP32[43256 + ((HEAPU8[$3 + 26 | 0] | 0) << 2) >> 2] | 0) + 11 | 0] | 0 | 0) == 2) {
    $pl = $3 + 24 | 0;
    break;
   } else {
    $1 = 0;
    $109 = $1;
    STACKTOP = sp;
    return $109 | 0;
   }
  }
 } while (0);
 $stress_level = HEAP8[$pl + 3 | 0] & 15;
 if (($2 | 0) != 0) {
  do {
   if (($5 & 1 | 0) != 0) {
    if ((HEAP16[$3 >> 1] & 16 | 0) == 0) {
     break;
    }
    if ((HEAP32[$2 + 64 >> 2] & 1 | 0) != 0) {
     break;
    }
    $1 = 0;
    $109 = $1;
    STACKTOP = sp;
    return $109 | 0;
   }
  } while (0);
  do {
   if ((HEAP32[$2 + 64 >> 2] & 2 | 0) != 0) {
    if (($stress_level | 0) < (HEAPU8[$pl + 6 | 0] | 0 | 0)) {
     break;
    }
    $stress_level = 4;
   }
  } while (0);
 }
 if (($4 | 0) == 4) {
  $1 = ($stress_level | 0) >= (HEAPU8[$pl + 6 | 0] | 0 | 0);
  $109 = $1;
  STACKTOP = sp;
  return $109 | 0;
 }
 do {
  if (($4 | 0) == 3) {
   if (($stress_level | 0) <= 3) {
    break;
   }
   $1 = 1;
   $109 = $1;
   STACKTOP = sp;
   return $109 | 0;
  } else {
   if (($stress_level | 0) >= (HEAP32[19896 + ($4 << 2) >> 2] | 0)) {
    break;
   }
   $1 = 1;
   $109 = $1;
   STACKTOP = sp;
   return $109 | 0;
  }
 } while (0);
 $1 = 0;
 $109 = $1;
 STACKTOP = sp;
 return $109 | 0;
}
function __Z22print_dictionary_flagsPjPci($flags, $buf, $buf_len) {
 $flags = $flags | 0;
 $buf = $buf | 0;
 $buf_len = $buf_len | 0;
 var $1 = 0, $2 = 0, $3 = 0, $ix = 0, $name = 0, $len = 0, $total = 0, $9 = 0, $15 = 0, label = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 $1 = $flags;
 $2 = $buf;
 $3 = $buf_len;
 $total = 0;
 HEAP8[$2 | 0] = 0;
 $9 = HEAP32[$1 >> 2] & 15;
 if (($9 | 0) != 0) {
  $15 = __Z14LookupMnemNameP8MNEM_TABi(5584, $9 + 64 | 0) | 0;
  _sprintf($2 | 0, 8944, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $15, tempVarArgs) | 0) | 0;
  STACKTOP = tempVarArgs;
  $total = _strlen($2 | 0) | 0;
  $2 = $2 + $total | 0;
 }
 $ix = 8;
 while (1) {
  if (($ix | 0) >= 64) {
   break;
  }
  if (($ix | 0) < 30) {
   if ((HEAP32[$1 >> 2] & 1 << $ix | 0) != 0) {
    label = 9;
   } else {
    label = 7;
   }
  } else {
   label = 7;
  }
  do {
   if ((label | 0) == 7) {
    label = 0;
    if (($ix | 0) < 32) {
     label = 12;
     break;
    }
    if ((HEAP32[$1 + 4 >> 2] & 1 << $ix - 32 | 0) != 0) {
     label = 9;
    } else {
     label = 12;
    }
   }
  } while (0);
  do {
   if ((label | 0) == 9) {
    label = 0;
    $name = __Z14LookupMnemNameP8MNEM_TABi(5584, $ix) | 0;
    $len = (_strlen($name | 0) | 0) + 1 | 0;
    $total = $total + $len | 0;
    if (($total | 0) >= ($3 | 0)) {
     break;
    } else {
     _sprintf($2 | 0, 8904, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $name, tempVarArgs) | 0) | 0;
     STACKTOP = tempVarArgs;
     $2 = $2 + $len | 0;
     label = 12;
     break;
    }
   }
  } while (0);
  if ((label | 0) == 12) {
   label = 0;
  }
  $ix = $ix + 1 | 0;
 }
 STACKTOP = sp;
 return;
}
function __ZL15EmbeddedCommandPj($source_index_out) {
 $source_index_out = $source_index_out | 0;
 var $1 = 0, $2 = 0, $commands = 0, $value = 0, $sign = 0, $c = 0, $cmd = 0, $source_index = 0, $45 = 0, $56 = 0, $93 = 0, $99 = 0, sp = 0;
 sp = STACKTOP;
 $2 = $source_index_out;
 $commands = 16408;
 $value = -1;
 $sign = 0;
 $source_index = HEAP32[$2 >> 2] | 0;
 $c = HEAP8[107832 + $source_index | 0] | 0;
 if (($c & 255 | 0) == 43) {
  $sign = 64;
  $source_index = $source_index + 1 | 0;
 } else {
  if (($c & 255 | 0) == 45) {
   $sign = 96;
   $source_index = $source_index + 1 | 0;
  }
 }
 if ((__Z9IsDigit09j(HEAP8[107832 + $source_index | 0] | 0) | 0) != 0) {
  $value = _atoi(107832 + $source_index | 0) | 0;
  while (1) {
   if ((__Z9IsDigit09j(HEAP8[107832 + $source_index | 0] | 0) | 0) == 0) {
    break;
   }
   $source_index = $source_index + 1 | 0;
  }
 }
 $45 = $source_index;
 $source_index = $45 + 1 | 0;
 $c = HEAP8[107832 + $45 | 0] | 0;
 if ((HEAP32[30924] | 0) >= 248) {
  $1 = 0;
  $99 = $1;
  STACKTOP = sp;
  return $99 | 0;
 }
 $56 = __Z8strchr_wPKci($commands, $c & 255) | 0;
 if (($56 | 0) == 0) {
  $1 = 0;
  $99 = $1;
  STACKTOP = sp;
  return $99 | 0;
 }
 $cmd = $56 - $commands + 1 | 0;
 if (($value | 0) == -1) {
  $value = HEAP32[6776 + ($cmd << 2) >> 2] | 0;
  $sign = 0;
 }
 if (($cmd | 0) == 9) {
  HEAP32[28504] = $value;
  HEAP32[28400] = 0;
 }
 if (($cmd | 0) == 13) {
  if (($value | 0) >= 3) {
   HEAP32[28470] = 2048;
  } else {
   HEAP32[28470] = 0;
  }
 }
 $93 = HEAP32[30924] | 0;
 HEAP32[30924] = $93 + 1;
 HEAP32[78480 + ($93 << 2) >> 2] = $cmd + $sign + ($value << 8);
 HEAP32[$2 >> 2] = $source_index;
 $1 = 1;
 $99 = $1;
 STACKTOP = sp;
 return $99 | 0;
}
function __ZL11mbrola_diedv() {
 var $pid = 0, $status = 0, $len = 0, $msg = 0, $msgbuf = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 88 | 0;
 $status = sp | 0;
 $msgbuf = sp + 8 | 0;
 $pid = _wait(HEAP32[26928] | 0, $status | 0, 1) | 0;
 if (($pid | 0) != 0) {
  if (($pid | 0) != (HEAP32[26928] | 0)) {
   $msg = 17176;
  } else {
   HEAP32[26928] = 0;
   if (((HEAP32[$status >> 2] & 65535) - 1 | 0) >>> 0 < 255 >>> 0) {
    _snprintf($msgbuf | 0, 80, 16880, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = HEAP32[$status >> 2] & 127, tempVarArgs) | 0) | 0;
    STACKTOP = tempVarArgs;
    $msg = $msgbuf | 0;
   } else {
    if ((HEAP32[$status >> 2] & 127 | 0) != 0) {
     $msg = 16576;
    } else {
     _snprintf($msgbuf | 0, 80, 16712, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = (HEAP32[$status >> 2] & 65280) >> 8, tempVarArgs) | 0) | 0;
     STACKTOP = tempVarArgs;
     $msg = $msgbuf | 0;
    }
   }
  }
 } else {
  $msg = 17632;
 }
 __ZL3logPKcz(16384, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $msg, tempVarArgs) | 0);
 STACKTOP = tempVarArgs;
 $len = _strlen(114160) | 0;
 if (($len | 0) != 0) {
  _snprintf(114160 + $len | 0, 160 - $len | 0, 16248, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $msg, tempVarArgs) | 0) | 0;
  STACKTOP = tempVarArgs;
  STACKTOP = sp;
  return -1 | 0;
 } else {
  _snprintf(114160, 160, 9288, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $msg, tempVarArgs) | 0) | 0;
  STACKTOP = tempVarArgs;
  STACKTOP = sp;
  return -1 | 0;
 }
 return 0;
}
function __ZL13calc_pitches2iii($start, $end, $tune_number) {
 $start = $start | 0;
 $end = $end | 0;
 $tune_number = $tune_number | 0;
 var $1 = 0, $ix = 0, $tune = 0, $drop = 0, $54 = 0, $77 = 0, $118 = 0, sp = 0;
 sp = STACKTOP;
 $tune = (HEAP32[9108] | 0) + ($tune_number * 68 | 0) | 0;
 $ix = $start;
 __ZL16SetPitchGradientiiii($ix, $ix + (HEAP32[31338] | 0) | 0, HEAPU8[$tune + 24 | 0] | 0, HEAPU8[$tune + 25 | 0] | 0);
 $ix = $ix + (HEAP32[31338] | 0) | 0;
 if ((HEAP32[19458] & 512 | 0) != 0) {
  HEAP32[26642] = HEAP32[30934];
 }
 $ix = __ZL17SetHeadIntonationP4TUNEiii($tune, $ix, HEAP32[26642] | 0, 0) | 0;
 if ((HEAP32[26726] | 0) != 0) {
  $1 = 0;
  $118 = $1;
  STACKTOP = sp;
  return $118 | 0;
 }
 if ((HEAP32[28864] | 0) == 0) {
  HEAP32[28452] = HEAPU8[$tune + 42 | 0] | 0;
  $drop = (HEAPU8[$tune + 43 | 0] | 0) - (HEAPU8[$tune + 44 | 0] | 0) | 0;
  $54 = $ix;
  $ix = $54 + 1 | 0;
  __ZL9set_pitchP8SYLLABLEii((HEAP32[28524] | 0) + ($54 * 6 | 0) | 0, HEAPU8[$tune + 44 | 0] | 0, $drop);
 } else {
  HEAP32[28452] = HEAPU8[$tune + 45 | 0] | 0;
  $drop = (HEAPU8[$tune + 46 | 0] | 0) - (HEAPU8[$tune + 47 | 0] | 0) | 0;
  $77 = $ix;
  $ix = $77 + 1 | 0;
  __ZL9set_pitchP8SYLLABLEii((HEAP32[28524] | 0) + ($77 * 6 | 0) | 0, HEAPU8[$tune + 47 | 0] | 0, $drop);
 }
 HEAP8[(HEAP32[28524] | 0) + ((HEAP32[26642] | 0) * 6 | 0) + 1 | 0] = HEAP32[28452];
 if ((HEAP8[(HEAP32[28524] | 0) + ((HEAP32[26642] | 0) * 6 | 0) | 0] | 0) == 4) {
  HEAP8[(HEAP32[28524] | 0) + ((HEAP32[26642] | 0) * 6 | 0) | 0] = 6;
 }
 __ZL16SetPitchGradientiiii($ix, $end, HEAPU8[$tune + 48 | 0] | 0, HEAPU8[$tune + 49 | 0] | 0);
 $1 = HEAP32[28452] | 0;
 $118 = $1;
 STACKTOP = sp;
 return $118 | 0;
}
function __ZL17output_rule_groupP8_IO_FILEiPPcS1_($f_out, $n_rules, $rules, $name) {
 $f_out = $f_out | 0;
 $n_rules = $n_rules | 0;
 $rules = $rules | 0;
 $name = $name | 0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $ix = 0, $len1 = 0, $len2 = 0, $len_name = 0, $p = 0, $p2 = 0, $common = 0, $nextchar_count = 0, $40 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 512 | 0;
 $nextchar_count = sp | 0;
 $1 = $f_out;
 $2 = $n_rules;
 $3 = $rules;
 $4 = $name;
 _memset($nextchar_count | 0, 0, 512) | 0;
 $len_name = _strlen($4 | 0) | 0;
 $common = 90656;
 _qsort($3 | 0, $2 | 0, 4, 4);
 if ((_strcmp($4 | 0, 17696) | 0) == 0) {
  $len_name = 0;
 }
 $ix = 0;
 while (1) {
  if (($ix | 0) >= ($2 | 0)) {
   break;
  }
  $p = HEAP32[$3 + ($ix << 2) >> 2] | 0;
  $len1 = (_strlen($p | 0) | 0) + 1 | 0;
  $p2 = $p + $len1 + $len_name | 0;
  $len2 = _strlen($p2 | 0) | 0;
  $40 = $nextchar_count + (HEAPU8[$p2 | 0] << 1) | 0;
  HEAP16[$40 >> 1] = (HEAP16[$40 >> 1] | 0) + 1;
  do {
   if ((HEAP8[$common | 0] | 0) != 0) {
    if ((_strcmp($p | 0, $common | 0) | 0) != 0) {
     label = 8;
     break;
    }
    _fwrite($p2 | 0, $len2 | 0, 1, $1 | 0) | 0;
    _fputc(0, $1 | 0) | 0;
   } else {
    label = 8;
   }
  } while (0);
  if ((label | 0) == 8) {
   label = 0;
   do {
    if (($ix | 0) < ($2 - 1 | 0)) {
     if ((_strcmp($p | 0, HEAP32[$3 + ($ix + 1 << 2) >> 2] | 0) | 0) != 0) {
      break;
     }
     $common = HEAP32[$3 + ($ix << 2) >> 2] | 0;
     _fputc(4, $1 | 0) | 0;
    }
   } while (0);
   _fwrite($p2 | 0, $len2 | 0, 1, $1 | 0) | 0;
   _fputc(3, $1 | 0) | 0;
   _fwrite($p | 0, $len1 | 0, 1, $1 | 0) | 0;
  }
  $ix = $ix + 1 | 0;
 }
 STACKTOP = sp;
 return;
}
function __Z14SetVoiceByNamePKc($name) {
 $name = $name | 0;
 var $1 = 0, $2 = 0, $ix = 0, $voice_selector = 0, $variant_name = 0, $11 = 0, $49 = 0, $76 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 24 | 0;
 $voice_selector = sp | 0;
 $2 = $name;
 __Z8strncpy0PcPKci(104120, $2, 60);
 $variant_name = __ZL23ExtractVoiceVariantNamePcii(104120, 0, 1) | 0;
 $ix = 0;
 while (1) {
  $11 = (_tolower(HEAP8[104120 + $ix | 0] | 0) | 0) & 255;
  HEAP8[104120 + $ix | 0] = $11;
  if (($11 << 24 >> 24 | 0) == 0) {
   break;
  }
  $ix = $ix + 1 | 0;
 }
 _memset($voice_selector | 0, 0, 24) | 0;
 HEAP32[$voice_selector >> 2] = $2;
 if ((__Z9LoadVoicePKci(104120, 1) | 0) != 0) {
  if ((HEAP8[$variant_name | 0] | 0) != 0) {
   __Z9LoadVoicePKci($variant_name, 2) | 0;
  }
  __Z13DoVoiceChangeP7voice_t(HEAP32[144] | 0);
  HEAP32[$voice_selector + 4 >> 2] = (HEAP32[144] | 0) + 40;
  __Z13SetVoiceStackP12espeak_VOICEPKc($voice_selector, $variant_name);
  $1 = 0;
  $76 = $1;
  STACKTOP = sp;
  return $76 | 0;
 }
 if ((HEAP32[28506] | 0) == 0) {
  _espeak_ListVoices(0) | 0;
 }
 $49 = __Z17SelectVoiceByNamePP12espeak_VOICEPKc(114376, 104120) | 0;
 do {
  if (($49 | 0) != 0) {
   if ((__Z9LoadVoicePKci(HEAP32[$49 + 8 >> 2] | 0, 0) | 0) == 0) {
    break;
   }
   if ((HEAP8[$variant_name | 0] | 0) != 0) {
    __Z9LoadVoicePKci($variant_name, 2) | 0;
   }
   __Z13DoVoiceChangeP7voice_t(HEAP32[144] | 0);
   HEAP32[$voice_selector + 4 >> 2] = (HEAP32[144] | 0) + 40;
   __Z13SetVoiceStackP12espeak_VOICEPKc($voice_selector, $variant_name);
   $1 = 0;
   $76 = $1;
   STACKTOP = sp;
   return $76 | 0;
  }
 } while (0);
 $1 = -1;
 $76 = $1;
 STACKTOP = sp;
 return $76 | 0;
}
function _init_MBR($voice_path) {
 $voice_path = $voice_path | 0;
 var $1 = 0, $2 = 0, $result = 0, $wavhdr = 0, $61 = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $wavhdr = sp | 0;
 $2 = $voice_path;
 if ((__ZL12start_mbrolaPKc($2) | 0) != 0) {
  $1 = -1;
  $61 = $1;
  STACKTOP = sp;
  return $61 | 0;
 }
 $result = __ZL14send_to_mbrolaPKc(9360) | 0;
 if (($result | 0) != 2) {
  __ZL11stop_mbrolav();
  $1 = -1;
  $61 = $1;
  STACKTOP = sp;
  return $61 | 0;
 }
 $result = __ZL19receive_from_mbrolaPvj($wavhdr | 0, 45) | 0;
 if (($result | 0) != 44) {
  if (($result | 0) >= 0) {
   __ZL3errPKcz(16432, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 7 & -8, HEAP32[tempVarArgs >> 2] = 0, tempVarArgs) | 0);
   STACKTOP = tempVarArgs;
  }
  __ZL11stop_mbrolav();
  $1 = -1;
  $61 = $1;
  STACKTOP = sp;
  return $61 | 0;
 }
 do {
  if ((_memcmp($wavhdr | 0, 15072, 4) | 0) == 0) {
   if ((_memcmp($wavhdr + 8 | 0, 13800, 8) | 0) != 0) {
    break;
   }
   HEAP32[28464] = (HEAPU8[$wavhdr + 24 | 0] | 0) + ((HEAPU8[$wavhdr + 25 | 0] | 0) << 8) + ((HEAPU8[$wavhdr + 26 | 0] | 0) << 16) + ((HEAPU8[$wavhdr + 27 | 0] | 0) << 24);
   if ((HEAP32[28462] | 0) != ($2 | 0)) {
    _free(HEAP32[28462] | 0);
    HEAP32[28462] = _strdup($2 | 0) | 0;
   }
   $1 = 0;
   $61 = $1;
   STACKTOP = sp;
   return $61 | 0;
  }
 } while (0);
 __ZL3errPKcz(10568, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 7 & -8, HEAP32[tempVarArgs >> 2] = 0, tempVarArgs) | 0);
 STACKTOP = tempVarArgs;
 __ZL11stop_mbrolav();
 $1 = -1;
 $61 = $1;
 STACKTOP = sp;
 return $61 | 0;
}
function _sonicCreateStream($sampleRate, $numChannels) {
 $sampleRate = $sampleRate | 0;
 $numChannels = $numChannels | 0;
 var $1 = 0, $2 = 0, $3 = 0, $stream = 0, $maxPeriod = 0, $maxRequired = 0, $95 = 0, sp = 0;
 sp = STACKTOP;
 $2 = $sampleRate;
 $3 = $numChannels;
 $stream = _calloc(1, 88) | 0;
 $maxPeriod = ($2 | 0) / 65 | 0;
 $maxRequired = $maxPeriod << 1;
 if (($stream | 0) == 0) {
  $1 = 0;
  $95 = $1;
  STACKTOP = sp;
  return $95 | 0;
 }
 HEAP32[$stream + 32 >> 2] = $maxRequired;
 HEAP32[$stream >> 2] = _calloc($maxRequired, $3 << 1) | 0;
 if ((HEAP32[$stream >> 2] | 0) == 0) {
  _sonicDestroyStream($stream);
  $1 = 0;
  $95 = $1;
  STACKTOP = sp;
  return $95 | 0;
 }
 HEAP32[$stream + 40 >> 2] = $maxRequired;
 HEAP32[$stream + 4 >> 2] = _calloc($maxRequired, $3 << 1) | 0;
 if ((HEAP32[$stream + 4 >> 2] | 0) == 0) {
  _sonicDestroyStream($stream);
  $1 = 0;
  $95 = $1;
  STACKTOP = sp;
  return $95 | 0;
 }
 HEAP32[$stream + 36 >> 2] = $maxRequired;
 HEAP32[$stream + 8 >> 2] = _calloc($maxRequired, $3 << 1) | 0;
 if ((HEAP32[$stream + 8 >> 2] | 0) == 0) {
  _sonicDestroyStream($stream);
  $1 = 0;
  $95 = $1;
  STACKTOP = sp;
  return $95 | 0;
 } else {
  HEAP32[$stream + 12 >> 2] = _calloc($maxRequired, 2) | 0;
  HEAPF32[$stream + 16 >> 2] = 1.0;
  HEAPF32[$stream + 24 >> 2] = 1.0;
  HEAPF32[$stream + 20 >> 2] = 1.0;
  HEAP32[$stream + 72 >> 2] = $2;
  HEAP32[$stream + 28 >> 2] = $3;
  HEAP32[$stream + 56 >> 2] = ($2 | 0) / 400 | 0;
  HEAP32[$stream + 60 >> 2] = $maxPeriod;
  HEAP32[$stream + 64 >> 2] = $maxRequired;
  $1 = $stream;
  $95 = $1;
  STACKTOP = sp;
  return $95 | 0;
 }
 return 0;
}
function __ZL11changeSpeedP17sonicStreamStructf($stream, $speed) {
 $stream = $stream | 0;
 $speed = +$speed;
 var $1 = 0, $2 = 0, $3 = 0.0, $samples = 0, $numSamples = 0, $position = 0, $period = 0, $newSamples = 0, $maxRequired = 0, $81 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = $stream;
 $3 = $speed;
 $numSamples = HEAP32[$2 + 44 >> 2] | 0;
 $position = 0;
 $maxRequired = HEAP32[$2 + 64 >> 2] | 0;
 if ((HEAP32[$2 + 44 >> 2] | 0) < ($maxRequired | 0)) {
  $1 = 1;
  $81 = $1;
  STACKTOP = sp;
  return $81 | 0;
 }
 while (1) {
  if ((HEAP32[$2 + 68 >> 2] | 0) > 0) {
   $newSamples = __ZL17copyInputToOutputP17sonicStreamStructi($2, $position) | 0;
   $position = $position + $newSamples | 0;
  } else {
   $samples = (HEAP32[$2 >> 2] | 0) + ((Math_imul($position, HEAP32[$2 + 28 >> 2] | 0) | 0) << 1) | 0;
   $period = __ZL15findPitchPeriodP17sonicStreamStructPs($2, $samples) | 0;
   if ($3 > 1.0) {
    $newSamples = __ZL15skipPitchPeriodP17sonicStreamStructPsfi($2, $samples, $3, $period) | 0;
    $position = $position + ($period + $newSamples) | 0;
   } else {
    $newSamples = __ZL17insertPitchPeriodP17sonicStreamStructPsfi($2, $samples, $3, $period) | 0;
    $position = $position + $newSamples | 0;
   }
  }
  if (($newSamples | 0) == 0) {
   label = 11;
   break;
  }
  if (($position + $maxRequired | 0) > ($numSamples | 0)) {
   label = 14;
   break;
  }
 }
 if ((label | 0) == 14) {
  __ZL18removeInputSamplesP17sonicStreamStructi($2, $position);
  $1 = 1;
  $81 = $1;
  STACKTOP = sp;
  return $81 | 0;
 } else if ((label | 0) == 11) {
  $1 = 0;
  $81 = $1;
  STACKTOP = sp;
  return $81 | 0;
 }
 return 0;
}
function __ZL23ExtractVoiceVariantNamePcii($vname, $variant_num, $add_dir) {
 $vname = $vname | 0;
 $variant_num = $variant_num | 0;
 $add_dir = $add_dir | 0;
 var $1 = 0, $2 = 0, $p = 0, $variant_prefix = 0, $15 = 0, $18 = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 8 | 0;
 $variant_prefix = sp | 0;
 $1 = $vname;
 $2 = $variant_num;
 HEAP8[91224] = 0;
 _sprintf($variant_prefix | 0, 10024, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = 47, tempVarArgs) | 0) | 0;
 STACKTOP = tempVarArgs;
 if (($add_dir | 0) == 0) {
  HEAP8[$variant_prefix | 0] = 0;
 }
 if (($1 | 0) != 0) {
  $15 = _strchr($1 | 0, 43) | 0;
  $p = $15;
  if (($15 | 0) != 0) {
   $2 = 0;
   $18 = $p;
   $p = $18 + 1 | 0;
   HEAP8[$18] = 0;
   if ((__Z9IsDigit09j(HEAP8[$p] | 0) | 0) != 0) {
    $2 = _atoi($p | 0) | 0;
   } else {
    _sprintf(91224, 8216, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = $variant_prefix, HEAP32[tempVarArgs + 8 >> 2] = $p, tempVarArgs) | 0) | 0;
    STACKTOP = tempVarArgs;
   }
  }
 }
 if (($2 | 0) <= 0) {
  STACKTOP = sp;
  return 91224;
 }
 if (($2 | 0) < 10) {
  _sprintf(91224, 9984, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = $variant_prefix, HEAP32[tempVarArgs + 8 >> 2] = $2, tempVarArgs) | 0) | 0;
  STACKTOP = tempVarArgs;
 } else {
  _sprintf(91224, 9928, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = $variant_prefix, HEAP32[tempVarArgs + 8 >> 2] = $2 - 10, tempVarArgs) | 0) | 0;
  STACKTOP = tempVarArgs;
 }
 STACKTOP = sp;
 return 91224;
}
function _espeak_ListVoices($voice_spec) {
 $voice_spec = $voice_spec | 0;
 var $1 = 0, $path_voices = 0, $ix = 0, $j = 0, $v = 0, $28 = 0, $59 = 0, $72 = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176 | 0;
 $path_voices = sp | 0;
 $1 = $voice_spec;
 __Z13FreeVoiceListv();
 _sprintf($path_voices | 0, 10728, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = 76328, HEAP32[tempVarArgs + 8 >> 2] = 47, tempVarArgs) | 0) | 0;
 STACKTOP = tempVarArgs;
 HEAP32[28450] = (_strlen($path_voices | 0) | 0) + 1;
 __ZL9GetVoicesPKc($path_voices | 0);
 HEAP32[114376 + (HEAP32[28506] << 2) >> 2] = 0;
 HEAP32[25666] = _realloc(HEAP32[25666] | 0, (HEAP32[28506] | 0) + 1 << 2) | 0;
 _qsort(114376, HEAP32[28506] | 0, 4, 6);
 if (($1 | 0) != 0) {
  __ZL14SetVoiceScoresP12espeak_VOICEPS0_i($1, HEAP32[25666] | 0, 1) | 0;
  $72 = HEAP32[25666] | 0;
  STACKTOP = sp;
  return $72 | 0;
 }
 $j = 0;
 $ix = 0;
 while (1) {
  $28 = HEAP32[114376 + ($ix << 2) >> 2] | 0;
  $v = $28;
  if (($28 | 0) == 0) {
   break;
  }
  do {
   if ((HEAP8[HEAP32[$v + 4 >> 2] | 0] | 0) != 0) {
    if ((_strcmp((HEAP32[$v + 4 >> 2] | 0) + 1 | 0, 15864) | 0) == 0) {
     break;
    }
    if ((_memcmp(HEAP32[$v + 8 >> 2] | 0, 10656, 3) | 0) == 0) {
     break;
    }
    if ((_memcmp(HEAP32[$v + 8 >> 2] | 0, 10560, 5) | 0) == 0) {
     break;
    }
    $59 = $j;
    $j = $59 + 1 | 0;
    HEAP32[(HEAP32[25666] | 0) + ($59 << 2) >> 2] = $v;
   }
  } while (0);
  $ix = $ix + 1 | 0;
 }
 HEAP32[(HEAP32[25666] | 0) + ($j << 2) >> 2] = 0;
 $72 = HEAP32[25666] | 0;
 STACKTOP = sp;
 return $72 | 0;
}
function ___strtok_r($s, $delim, $lasts, $skip_leading_delim) {
 $s = $s | 0;
 $delim = $delim | 0;
 $lasts = $lasts | 0;
 $skip_leading_delim = $skip_leading_delim | 0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $spanp = 0, $c = 0, $sc = 0, $tok = 0, $10 = 0, $15 = 0, $21 = 0, $24 = 0, $51 = 0, $57 = 0, $60 = 0, $80 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = $s;
 $3 = $delim;
 $4 = $lasts;
 $5 = $skip_leading_delim;
 do {
  if (($2 | 0) == 0) {
   $10 = HEAP32[$4 >> 2] | 0;
   $2 = $10;
   if (($10 | 0) != 0) {
    break;
   }
   $1 = 0;
   $80 = $1;
   STACKTOP = sp;
   return $80 | 0;
  }
 } while (0);
 L6 : while (1) {
  $15 = $2;
  $2 = $15 + 1 | 0;
  $c = HEAP8[$15] | 0;
  $spanp = $3;
  do {
   $21 = $spanp;
   $spanp = $21 + 1 | 0;
   $24 = HEAP8[$21] | 0;
   $sc = $24;
   if (($24 | 0) == 0) {
    break L6;
   }
  } while (($c | 0) != ($sc | 0));
  if (($5 | 0) == 0) {
   label = 10;
   break;
  }
 }
 if ((label | 0) == 10) {
  HEAP32[$4 >> 2] = $2;
  HEAP8[$2 - 1 | 0] = 0;
  $1 = $2 - 1 | 0;
  $80 = $1;
  STACKTOP = sp;
  return $80 | 0;
 }
 if (($c | 0) == 0) {
  HEAP32[$4 >> 2] = 0;
  $1 = 0;
  $80 = $1;
  STACKTOP = sp;
  return $80 | 0;
 }
 $tok = $2 - 1 | 0;
 L22 : while (1) {
  $51 = $2;
  $2 = $51 + 1 | 0;
  $c = HEAP8[$51] | 0;
  $spanp = $3;
  do {
   $57 = $spanp;
   $spanp = $57 + 1 | 0;
   $60 = HEAP8[$57] | 0;
   $sc = $60;
   if (($60 | 0) == ($c | 0)) {
    break L22;
   }
  } while (($sc | 0) != 0);
 }
 if (($c | 0) == 0) {
  $2 = 0;
 } else {
  HEAP8[$2 - 1 | 0] = 0;
 }
 HEAP32[$4 >> 2] = $2;
 $1 = $tok;
 $80 = $1;
 STACKTOP = sp;
 return $80 | 0;
}
function __ZL18attr_prosody_valueiPKwPi($param_type, $pw, $value_out) {
 $param_type = $param_type | 0;
 $pw = $pw | 0;
 $value_out = $value_out | 0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $sign = 0, $tail = 0, $value = 0.0, $101 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 8 | 0;
 $tail = sp | 0;
 $2 = $param_type;
 $3 = $pw;
 $4 = $value_out;
 $sign = 0;
 while (1) {
  if ((_iswspace(HEAP32[$3 >> 2] | 0) | 0) == 0) {
   break;
  }
  $3 = $3 + 4 | 0;
 }
 if ((HEAP32[$3 >> 2] | 0) == 43) {
  $3 = $3 + 4 | 0;
  $sign = 1;
 }
 if ((HEAP32[$3 >> 2] | 0) == 45) {
  $3 = $3 + 4 | 0;
  $sign = -1;
 }
 $value = +_wcstod($3, $tail);
 if ((HEAP32[$tail >> 2] | 0) == ($3 | 0)) {
  HEAP32[$4 >> 2] = 100;
  $1 = 2;
  $101 = $1;
  STACKTOP = sp;
  return $101 | 0;
 }
 if ((HEAP32[HEAP32[$tail >> 2] >> 2] | 0) == 37) {
  if (($sign | 0) != 0) {
   $value = +($sign | 0) * $value + 100.0;
  }
  HEAP32[$4 >> 2] = ~~$value;
  $1 = 2;
  $101 = $1;
  STACKTOP = sp;
  return $101 | 0;
 }
 do {
  if ((HEAP32[HEAP32[$tail >> 2] >> 2] | 0) == 115) {
   if ((HEAP32[(HEAP32[$tail >> 2] | 0) + 4 >> 2] | 0) != 116) {
    break;
   }
   HEAP32[$4 >> 2] = ~~(+Math_pow(+2.0, +($value * +($sign | 0) / 12.0)) * 100.0);
   $1 = 2;
   $101 = $1;
   STACKTOP = sp;
   return $101 | 0;
  }
 } while (0);
 if (($2 | 0) != 1) {
  HEAP32[$4 >> 2] = ~~$value;
  $1 = $sign;
  $101 = $1;
  STACKTOP = sp;
  return $101 | 0;
 }
 if (($sign | 0) == 0) {
  HEAP32[$4 >> 2] = ~~($value * 100.0);
 } else {
  HEAP32[$4 >> 2] = ~~(+($sign | 0) * $value * 100.0) + 100;
 }
 $1 = 2;
 $101 = $1;
 STACKTOP = sp;
 return $101 | 0;
}
function __ZL22findPitchPeriodInRangePsiiPiS0_($samples, $minPeriod, $maxPeriod, $retMinDiff, $retMaxDiff) {
 $samples = $samples | 0;
 $minPeriod = $minPeriod | 0;
 $maxPeriod = $maxPeriod | 0;
 $retMinDiff = $retMinDiff | 0;
 $retMaxDiff = $retMaxDiff | 0;
 var $1 = 0, $3 = 0, $4 = 0, $5 = 0, $period = 0, $bestPeriod = 0, $s = 0, $p = 0, $sVal = 0, $pVal = 0, $diff = 0, $minDiff = 0, $maxDiff = 0, $i = 0, $21 = 0, $24 = 0, $47 = 0, sp = 0;
 sp = STACKTOP;
 $1 = $samples;
 $3 = $maxPeriod;
 $4 = $retMinDiff;
 $5 = $retMaxDiff;
 $bestPeriod = 0;
 $minDiff = 1;
 $maxDiff = 0;
 $period = $minPeriod;
 while (1) {
  if (($period | 0) > ($3 | 0)) {
   break;
  }
  $diff = 0;
  $s = $1;
  $p = $1 + ($period << 1) | 0;
  $i = 0;
  while (1) {
   if (($i | 0) >= ($period | 0)) {
    break;
   }
   $21 = $s;
   $s = $21 + 2 | 0;
   $sVal = HEAP16[$21 >> 1] | 0;
   $24 = $p;
   $p = $24 + 2 | 0;
   $pVal = HEAP16[$24 >> 1] | 0;
   if (($sVal << 16 >> 16 | 0) >= ($pVal << 16 >> 16 | 0)) {
    $47 = ($sVal << 16 >> 16) - ($pVal << 16 >> 16) & 65535;
   } else {
    $47 = ($pVal << 16 >> 16) - ($sVal << 16 >> 16) & 65535;
   }
   $diff = $diff + ($47 & 65535) | 0;
   $i = $i + 1 | 0;
  }
  if ((Math_imul($diff, $bestPeriod) | 0) >>> 0 < (Math_imul($minDiff, $period) | 0) >>> 0) {
   $minDiff = $diff;
   $bestPeriod = $period;
  }
  if ((Math_imul($diff, $bestPeriod) | 0) >>> 0 > (Math_imul($maxDiff, $period) | 0) >>> 0) {
   $maxDiff = $diff;
  }
  $period = $period + 1 | 0;
 }
 HEAP32[$4 >> 2] = $minDiff;
 HEAP32[$5 >> 2] = $maxDiff;
 STACKTOP = sp;
 return $bestPeriod | 0;
}
function __ZL12VoiceFormantPc($p) {
 $p = $p | 0;
 var $formant = 0, $freq = 0, $height = 0, $width = 0, $freqadd = 0, $3 = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 40 | 0;
 $formant = sp | 0;
 $freq = sp + 8 | 0;
 $height = sp + 16 | 0;
 $width = sp + 24 | 0;
 $freqadd = sp + 32 | 0;
 HEAP32[$freq >> 2] = 100;
 HEAP32[$height >> 2] = 100;
 HEAP32[$width >> 2] = 100;
 HEAP32[$freqadd >> 2] = 0;
 $3 = _sscanf($p | 0, 9432, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 40 | 0, HEAP32[tempVarArgs >> 2] = $formant, HEAP32[tempVarArgs + 8 >> 2] = $freq, HEAP32[tempVarArgs + 16 >> 2] = $height, HEAP32[tempVarArgs + 24 >> 2] = $width, HEAP32[tempVarArgs + 32 >> 2] = $freqadd, tempVarArgs) | 0) | 0;
 STACKTOP = tempVarArgs;
 if (($3 | 0) < 2) {
  STACKTOP = sp;
  return;
 }
 do {
  if ((HEAP32[$formant >> 2] | 0) >= 0) {
   if ((HEAP32[$formant >> 2] | 0) > 8) {
    break;
   }
   if ((HEAP32[$freq >> 2] | 0) >= 0) {
    HEAP16[(HEAP32[144] | 0) + 164 + (HEAP32[$formant >> 2] << 1) >> 1] = ~~(+(HEAP32[$freq >> 2] | 0) * 2.56001);
   }
   if ((HEAP32[$height >> 2] | 0) >= 0) {
    HEAP16[(HEAP32[144] | 0) + 182 + (HEAP32[$formant >> 2] << 1) >> 1] = ~~(+(HEAP32[$height >> 2] | 0) * 2.56001);
   }
   if ((HEAP32[$width >> 2] | 0) >= 0) {
    HEAP16[(HEAP32[144] | 0) + 200 + (HEAP32[$formant >> 2] << 1) >> 1] = ~~(+(HEAP32[$width >> 2] | 0) * 2.56001);
   }
   HEAP16[(HEAP32[144] | 0) + 218 + (HEAP32[$formant >> 2] << 1) >> 1] = HEAP32[$freqadd >> 2];
   STACKTOP = sp;
   return;
  }
 } while (0);
 STACKTOP = sp;
 return;
}
function __ZL10initialisev() {
 var $param = 0, $result = 0, $srate = 0, $10 = 0, $21 = 0, $34 = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 8 | 0;
 $srate = sp | 0;
 HEAP32[$srate >> 2] = 22050;
 if ((_setlocale(0, 13920) | 0) == 0) {
  if ((_setlocale(0, 13832) | 0) == 0) {
   _setlocale(0, 90680) | 0;
  }
 }
 $10 = __Z10LoadPhDataPi($srate) | 0;
 $result = $10;
 if (($10 | 0) != 1) {
  if (($result | 0) == -1) {
   _fprintf(HEAP32[_stderr >> 2] | 0, 13608, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 7 & -8, HEAP32[tempVarArgs >> 2] = 0, tempVarArgs) | 0) | 0;
   STACKTOP = tempVarArgs;
   _exit(1);
   return 0;
  }
  $21 = HEAP32[148] | 0;
  _fprintf(HEAP32[_stderr >> 2] | 0, 13480, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 24 | 0, HEAP32[tempVarArgs >> 2] = $result, HEAP32[tempVarArgs + 8 >> 2] = $21, HEAP32[tempVarArgs + 16 >> 2] = 76328, tempVarArgs) | 0) | 0;
  STACKTOP = tempVarArgs;
 }
 __Z11WavegenInitii(HEAP32[$srate >> 2] | 0, 0);
 __Z10LoadConfigv();
 __Z13SetVoiceStackP12espeak_VOICEPKc(0, 90680);
 __Z14SynthesizeInitv();
 $param = 0;
 while (1) {
  if (($param | 0) >= 15) {
   break;
  }
  $34 = 76492 + ($param << 2) | 0;
  tempBigInt = HEAP32[5280 + ($param << 2) >> 2] | 0;
  HEAP8[$34] = tempBigInt;
  tempBigInt = tempBigInt >> 8;
  HEAP8[$34 + 1 | 0] = tempBigInt;
  tempBigInt = tempBigInt >> 8;
  HEAP8[$34 + 2 | 0] = tempBigInt;
  tempBigInt = tempBigInt >> 8;
  HEAP8[$34 + 3 | 0] = tempBigInt;
  $param = $param + 1 | 0;
 }
 STACKTOP = sp;
 return 0;
}
function __ZL11WavegenFilev() {
 var $1 = 0, $finished = 0, $wav_outbuf = 0, $fname = 0, $2 = 0, $16 = 0, $59 = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1240 | 0;
 $wav_outbuf = sp | 0;
 $fname = sp + 1024 | 0;
 $2 = $wav_outbuf | 0;
 HEAP32[19446] = $2;
 HEAP32[19448] = $2;
 HEAP32[19450] = $wav_outbuf + 1024;
 $finished = __Z11WavegenFilli(0) | 0;
 if ((HEAP32[9544] | 0) != 0) {
  $1 = $finished;
  $59 = $1;
  STACKTOP = sp;
  return $59 | 0;
 }
 do {
  if ((HEAP32[19594] | 0) == 0) {
   $16 = (HEAP32[9048] | 0) + 1 | 0;
   HEAP32[9048] = $16;
   _sprintf($fname | 0, 14208, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 24 | 0, HEAP32[tempVarArgs >> 2] = 36208, HEAP32[tempVarArgs + 8 >> 2] = $16, HEAP32[tempVarArgs + 16 >> 2] = 78368, tempVarArgs) | 0) | 0;
   STACKTOP = tempVarArgs;
   if ((__ZL12OpenWaveFilePKci($fname | 0, HEAP32[9496] | 0) | 0) == 0) {
    break;
   }
   $1 = 1;
   $59 = $1;
   STACKTOP = sp;
   return $59 | 0;
  }
 } while (0);
 if ((HEAP32[19600] | 0) != 0) {
  HEAP32[19600] = 0;
  do {
   if ((HEAP32[9492] | 0) >>> 0 > 0 >>> 0) {
    if ((HEAP32[9490] | 0) >>> 0 <= (HEAP32[9492] | 0) >>> 0) {
     break;
    }
    __ZL13CloseWaveFilev();
    HEAP32[9490] = 0;
   }
  } while (0);
 }
 if ((HEAP32[19594] | 0) != 0) {
  HEAP32[9490] = (HEAP32[9490] | 0) + (((HEAP32[19448] | 0) - $wav_outbuf | 0) / 2 | 0);
  _fwrite($wav_outbuf | 0, 1, (HEAP32[19448] | 0) - $wav_outbuf | 0, HEAP32[19594] | 0) | 0;
 }
 $1 = $finished;
 $59 = $1;
 STACKTOP = sp;
 return $59 | 0;
}
function __ZL18count_pitch_vowelsiii($start, $end, $clause_end) {
 $start = $start | 0;
 $end = $end | 0;
 $clause_end = $clause_end | 0;
 var $1 = 0, $2 = 0, $3 = 0, $ix = 0, $stress = 0, $max_stress = 0, $max_stress_posn = 0, $max_stress_posn2 = 0, $61 = 0, sp = 0;
 sp = STACKTOP;
 $1 = $start;
 $2 = $end;
 $3 = $clause_end;
 $max_stress = 0;
 $max_stress_posn = 0;
 $max_stress_posn2 = 0;
 HEAP32[31338] = -1;
 HEAP32[28866] = 0;
 HEAP32[28864] = 0;
 HEAP32[28584] = -1;
 $ix = $1;
 while (1) {
  if (($ix | 0) >= ($2 | 0)) {
   break;
  }
  $stress = HEAP8[(HEAP32[28524] | 0) + ($ix * 6 | 0) | 0] | 0;
  if (($stress | 0) >= ($max_stress | 0)) {
   if (($stress | 0) > ($max_stress | 0)) {
    $max_stress_posn2 = $ix;
   } else {
    $max_stress_posn2 = $max_stress_posn;
   }
   $max_stress_posn = $ix;
   $max_stress = $stress;
  }
  if (($stress | 0) >= 4) {
   if ((HEAP32[31338] | 0) < 0) {
    HEAP32[31338] = $ix - $1;
   }
   HEAP32[28584] = $ix;
  }
  $ix = $ix + 1 | 0;
 }
 if ((HEAP32[31338] | 0) < 0) {
  HEAP32[31338] = $2;
 }
 HEAP32[28864] = $2 - $max_stress_posn - 1;
 HEAP32[26642] = $max_stress_posn;
 HEAP32[30934] = $max_stress_posn2;
 if ((HEAP32[26726] | 0) != 0) {
  $61 = $2;
  HEAP32[30934] = $61;
  HEAP32[26642] = $61;
  STACKTOP = sp;
  return;
 }
 if ((HEAP32[28584] | 0) >= 0) {
  if (($2 | 0) == ($3 | 0)) {
   HEAP8[(HEAP32[28524] | 0) + ((HEAP32[28584] | 0) * 6 | 0) | 0] = 7;
  }
 } else {
  HEAP8[(HEAP32[28524] | 0) + ((HEAP32[26642] | 0) * 6 | 0) | 0] = 7;
 }
 STACKTOP = sp;
 return;
}
function __ZL8GetC_getv() {
 var $1 = 0, $c = 0, $c2 = 0, $40 = 0, $71 = 0, $79 = 0, sp = 0;
 sp = STACKTOP;
 if ((HEAP32[26954] | 0) != 0) {
  $c = _fgetc(HEAP32[26954] | 0) | 0;
  if ((_feof(HEAP32[26954] | 0) | 0) != 0) {
   $c = 32;
  }
  if ((HEAP32[19538] | 0) == 4) {
   $c2 = _fgetc(HEAP32[26954] | 0) | 0;
   if ((_feof(HEAP32[26954] | 0) | 0) != 0) {
    $c2 = 0;
   }
   $c = $c + ($c2 << 8) | 0;
  }
  $1 = $c;
  $79 = $1;
  STACKTOP = sp;
  return $79 | 0;
 }
 do {
  if ((HEAP32[19538] | 0) == 3) {
   if ((HEAP32[HEAP32[19442] >> 2] | 0) == 0) {
    HEAP32[28590] = 1;
    $1 = 0;
    $79 = $1;
    STACKTOP = sp;
    return $79 | 0;
   }
   if ((HEAP32[28590] | 0) != 0) {
    break;
   }
   $40 = HEAP32[19442] | 0;
   HEAP32[19442] = $40 + 4;
   $1 = HEAP32[$40 >> 2] | 0;
   $79 = $1;
   STACKTOP = sp;
   return $79 | 0;
  } else {
   if ((HEAPU8[HEAP32[19444] | 0] | 0 | 0) == 0) {
    HEAP32[28590] = 1;
    $1 = 0;
    $79 = $1;
    STACKTOP = sp;
    return $79 | 0;
   }
   if ((HEAP32[28590] | 0) != 0) {
    break;
   }
   if ((HEAP32[19538] | 0) == 4) {
    $c = (HEAPU8[HEAP32[19444] | 0] | 0) + ((HEAPU8[(HEAP32[19444] | 0) + 1 | 0] | 0) << 8) | 0;
    HEAP32[19444] = (HEAP32[19444] | 0) + 2;
    $1 = $c;
    $79 = $1;
    STACKTOP = sp;
    return $79 | 0;
   } else {
    $71 = HEAP32[19444] | 0;
    HEAP32[19444] = $71 + 1;
    $1 = HEAP8[$71] & 255;
    $79 = $1;
    STACKTOP = sp;
    return $79 | 0;
   }
  }
 } while (0);
 $1 = 0;
 $79 = $1;
 STACKTOP = sp;
 return $79 | 0;
}
function __ZL9GetVoicesPKc($path) {
 $path = $path | 0;
 var $1 = 0, $f_voice = 0, $voice_data = 0, $ftype = 0, $fname = 0, $dir = 0, $ent = 0, $3 = 0, $9 = 0, $41 = 0, $59 = 0, label = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 264 | 0;
 $fname = sp | 0;
 $1 = $path;
 $3 = _opendir($1 | 0) | 0;
 $dir = $3;
 if (($3 | 0) == 0) {
  STACKTOP = sp;
  return;
 }
 while (1) {
  $9 = _readdir($dir | 0) | 0;
  $ent = $9;
  if (($9 | 0) == 0) {
   break;
  }
  if ((HEAP32[28506] | 0) >= 248) {
   label = 6;
   break;
  }
  if ((HEAP8[$ent + 11 | 0] | 0) == 46) {
   continue;
  }
  _sprintf($fname | 0, 10424, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 24 | 0, HEAP32[tempVarArgs >> 2] = $1, HEAP32[tempVarArgs + 8 >> 2] = 47, HEAP32[tempVarArgs + 16 >> 2] = $ent + 11, tempVarArgs) | 0) | 0;
  STACKTOP = tempVarArgs;
  $ftype = __Z13GetFileLengthPKc($fname | 0) | 0;
  if (($ftype | 0) == -2) {
   __ZL9GetVoicesPKc($fname | 0);
  } else {
   if (($ftype | 0) > 0) {
    $41 = _fopen($fname | 0, 16368) | 0;
    $f_voice = $41;
    if (($41 | 0) == 0) {
     continue;
    }
    $voice_data = __ZL13ReadVoiceFileP8_IO_FILEPKcS2_($f_voice, $fname + (HEAP32[28450] | 0) | 0, $ent + 11 | 0) | 0;
    _fclose($f_voice | 0) | 0;
    if (($voice_data | 0) != 0) {
     $59 = HEAP32[28506] | 0;
     HEAP32[28506] = $59 + 1;
     HEAP32[114376 + ($59 << 2) >> 2] = $voice_data;
    }
   }
  }
 }
 if ((label | 0) == 6) {}
 _closedir($dir | 0) | 0;
 STACKTOP = sp;
 return;
}
function __ZL14send_to_mbrolaPKc($cmd) {
 $cmd = $cmd | 0;
 var $1 = 0, $2 = 0, $result = 0, $len = 0, $error = 0, $data = 0, $30 = 0, $80 = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 $2 = $cmd;
 if ((HEAP32[26928] | 0) == 0) {
  $1 = -1;
  $80 = $1;
  STACKTOP = sp;
  return $80 | 0;
 }
 $len = _strlen($2 | 0) | 0;
 $result = _write(HEAP32[31352] | 0, $2 | 0, $len | 0) | 0;
 if (($result | 0) == -1) {
  $error = HEAP32[(___errno_location() | 0) >> 2] | 0;
  do {
   if (($error | 0) == 32) {
    if ((__ZL17mbrola_has_errorsv() | 0) == 0) {
     break;
    }
    $1 = -1;
    $80 = $1;
    STACKTOP = sp;
    return $80 | 0;
   }
  } while (0);
  if (($error | 0) != 11) {
   $30 = _strerror($error | 0) | 0;
   __ZL3errPKcz(15880, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $30, tempVarArgs) | 0);
   STACKTOP = tempVarArgs;
   $1 = -1;
   $80 = $1;
   STACKTOP = sp;
   return $80 | 0;
  }
  $result = 0;
 }
 if (($result | 0) != ($len | 0)) {
  $data = _malloc($len + 16 - $result | 0) | 0;
  if (($data | 0) != 0) {
   HEAP32[$data >> 2] = 0;
   HEAP32[$data + 4 >> 2] = 0;
   HEAP32[$data + 8 >> 2] = $len - $result;
   _memcpy($data + 12 | 0, $2 + $result | 0, $len - $result | 0) | 0;
   $result = $len;
   if ((HEAP32[28360] | 0) != 0) {
    HEAP32[HEAP32[28358] >> 2] = $data;
   } else {
    HEAP32[28360] = $data;
   }
   HEAP32[28358] = $data;
  }
 }
 $1 = $result;
 $80 = $1;
 STACKTOP = sp;
 return $80 | 0;
}
function __Z14AppendPhonemesP10TranslatorPciPKc($tr, $string, $size, $ph) {
 $tr = $tr | 0;
 $string = $string | 0;
 $size = $size | 0;
 $ph = $ph | 0;
 var $1 = 0, $2 = 0, $4 = 0, $p = 0, $c = 0, $unstress_mark = 0, $6 = 0, $17 = 0, $19 = 0, $71 = 0, $76 = 0, sp = 0;
 sp = STACKTOP;
 $1 = $tr;
 $2 = $string;
 $4 = $ph;
 $6 = _strlen($4 | 0) | 0;
 if (($6 + (_strlen($2 | 0) | 0) | 0) >= ($size | 0)) {
  STACKTOP = sp;
  return;
 }
 $unstress_mark = 0;
 $p = $4;
 while (1) {
  $17 = $p;
  $p = $17 + 1 | 0;
  $19 = HEAP8[$17] | 0;
  $c = $19;
  if (($19 & 255 | 0) == 0) {
   break;
  }
  if (($c & 255 | 0) >= (HEAP32[19560] | 0)) {
   continue;
  }
  if ((HEAPU8[(HEAP32[43256 + (($c & 255) << 2) >> 2] | 0) + 11 | 0] | 0 | 0) == 1) {
   if ((HEAPU8[(HEAP32[43256 + (($c & 255) << 2) >> 2] | 0) + 14 | 0] | 0 | 0) < 4) {
    $unstress_mark = 1;
   }
  } else {
   if ((HEAPU8[(HEAP32[43256 + (($c & 255) << 2) >> 2] | 0) + 11 | 0] | 0 | 0) == 2) {
    do {
     if ((HEAP32[(HEAP32[43256 + (($c & 255) << 2) >> 2] | 0) + 4 >> 2] & 2 | 0) == 0) {
      if (($unstress_mark | 0) != 0) {
       break;
      }
      $71 = $1 + 8332 | 0;
      HEAP32[$71 >> 2] = (HEAP32[$71 >> 2] | 0) + 1;
     }
    } while (0);
    $unstress_mark = 0;
    $76 = $1 + 8328 | 0;
    HEAP32[$76 >> 2] = (HEAP32[$76 >> 2] | 0) + 1;
   }
  }
 }
 if (($2 | 0) == 0) {
  STACKTOP = sp;
  return;
 }
 _strcat($2 | 0, $4 | 0) | 0;
 STACKTOP = sp;
 return;
}
function __ZL10ReadPhFilePvPKcPi($ptr, $fname, $size) {
 $ptr = $ptr | 0;
 $fname = $fname | 0;
 $size = $size | 0;
 var $1 = 0, $2 = 0, $4 = 0, $f_in = 0, $p = 0, $length = 0, $buf = 0, $11 = 0, $24 = 0, $50 = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 200 | 0;
 $buf = sp | 0;
 $2 = $ptr;
 $4 = $size;
 _sprintf($buf | 0, 9392, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 24 | 0, HEAP32[tempVarArgs >> 2] = 76328, HEAP32[tempVarArgs + 8 >> 2] = 47, HEAP32[tempVarArgs + 16 >> 2] = $fname, tempVarArgs) | 0) | 0;
 STACKTOP = tempVarArgs;
 $length = __Z13GetFileLengthPKc($buf | 0) | 0;
 $11 = _fopen($buf | 0, 16176) | 0;
 $f_in = $11;
 if (($11 | 0) == 0) {
  _fprintf(HEAP32[_stderr >> 2] | 0, 16040, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $buf, tempVarArgs) | 0) | 0;
  STACKTOP = tempVarArgs;
  $1 = 0;
  $50 = $1;
  STACKTOP = sp;
  return $50 | 0;
 }
 if (($2 | 0) != 0) {
  __Z4FreePv($2);
 }
 $24 = __Z5Alloci($length) | 0;
 $p = $24;
 if (($24 | 0) == 0) {
  _fclose($f_in | 0) | 0;
  $1 = 0;
  $50 = $1;
  STACKTOP = sp;
  return $50 | 0;
 }
 if ((_fread($p | 0, 1, $length | 0, $f_in | 0) | 0) != ($length | 0)) {
  _fclose($f_in | 0) | 0;
  $1 = 0;
  $50 = $1;
  STACKTOP = sp;
  return $50 | 0;
 }
 _fclose($f_in | 0) | 0;
 if (($4 | 0) != 0) {
  HEAP32[$4 >> 2] = $length;
 }
 $1 = $p;
 $50 = $1;
 STACKTOP = sp;
 return $50 | 0;
}
function _sonicFlushStream($stream) {
 $stream = $stream | 0;
 var $1 = 0, $2 = 0, $maxRequired = 0, $numSamples = 0, $numOutputSamples = 0, $expectedSamples = 0, $41 = 0, $83 = 0, sp = 0;
 sp = STACKTOP;
 $2 = $stream;
 $maxRequired = HEAP32[$2 + 64 >> 2] | 0;
 $numSamples = HEAP32[$2 + 44 >> 2] | 0;
 if (($numSamples | 0) == 0) {
  $1 = 1;
  $83 = $1;
  STACKTOP = sp;
  return $83 | 0;
 }
 do {
  if (($numSamples | 0) >= ($maxRequired | 0)) {
   if ((_sonicWriteShortToStream($2, 0, 0) | 0) != 0) {
    break;
   }
   $1 = 0;
   $83 = $1;
   STACKTOP = sp;
   return $83 | 0;
  }
 } while (0);
 $numSamples = HEAP32[$2 + 44 >> 2] | 0;
 if (($numSamples | 0) == 0) {
  $1 = 1;
  $83 = $1;
  STACKTOP = sp;
  return $83 | 0;
 }
 $41 = (HEAP32[$2 >> 2] | 0) + ((Math_imul($numSamples, HEAP32[$2 + 28 >> 2] | 0) | 0) << 1) | 0;
 _memset($41 | 0, 0, Math_imul($maxRequired - $numSamples << 1, HEAP32[$2 + 28 >> 2] | 0) | 0) | 0;
 HEAP32[$2 + 44 >> 2] = $maxRequired;
 $numOutputSamples = HEAP32[$2 + 48 >> 2] | 0;
 if ((_sonicWriteShortToStream($2, 0, 0) | 0) == 0) {
  $1 = 0;
  $83 = $1;
  STACKTOP = sp;
  return $83 | 0;
 }
 $expectedSamples = ~~(+($numSamples | 0) * +HEAPF32[$2 + 16 >> 2] + .5);
 if ((HEAP32[$2 + 48 >> 2] | 0) > ($numOutputSamples + $expectedSamples | 0)) {
  HEAP32[$2 + 48 >> 2] = $numOutputSamples + $expectedSamples;
 }
 $1 = 1;
 $83 = $1;
 STACKTOP = sp;
 return $83 | 0;
}
function __ZL18processStreamInputP17sonicStreamStruct($stream) {
 $stream = $stream | 0;
 var $1 = 0, $2 = 0, $originalNumOutputSamples = 0, $speed = 0.0, $64 = 0, $73 = 0, $79 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = $stream;
 $originalNumOutputSamples = HEAP32[$2 + 48 >> 2] | 0;
 $speed = +HEAPF32[$2 + 16 >> 2] / +HEAPF32[$2 + 24 >> 2];
 do {
  if ($speed > 1.00001) {
   label = 3;
  } else {
   if ($speed < .99999) {
    label = 3;
    break;
   }
   if ((__ZL12copyToOutputP17sonicStreamStructPsi($2, HEAP32[$2 >> 2] | 0, HEAP32[$2 + 44 >> 2] | 0) | 0) != 0) {
    HEAP32[$2 + 44 >> 2] = 0;
    break;
   }
   $1 = 0;
   $79 = $1;
   STACKTOP = sp;
   return $79 | 0;
  }
 } while (0);
 if ((label | 0) == 3) {
  __ZL11changeSpeedP17sonicStreamStructf($2, $speed) | 0;
 }
 do {
  if (+HEAPF32[$2 + 24 >> 2] != 1.0) {
   if ((__ZL11adjustPitchP17sonicStreamStructi($2, $originalNumOutputSamples) | 0) != 0) {
    break;
   }
   $1 = 0;
   $79 = $1;
   STACKTOP = sp;
   return $79 | 0;
  }
 } while (0);
 if (+HEAPF32[$2 + 20 >> 2] != 1.0) {
  $64 = (HEAP32[$2 + 4 >> 2] | 0) + ((Math_imul($originalNumOutputSamples, HEAP32[$2 + 28 >> 2] | 0) | 0) << 1) | 0;
  $73 = Math_imul((HEAP32[$2 + 48 >> 2] | 0) - $originalNumOutputSamples | 0, HEAP32[$2 + 28 >> 2] | 0) | 0;
  __ZL12scaleSamplesPsif($64, $73, +HEAPF32[$2 + 20 >> 2]);
 }
 $1 = 1;
 $79 = $1;
 STACKTOP = sp;
 return $79 | 0;
}
function __Z11WavegenInitii($rate, $wavemult_fact) {
 $rate = $rate | 0;
 $wavemult_fact = $wavemult_fact | 0;
 var $1 = 0, $2 = 0, $ix = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 $1 = $rate;
 $2 = $wavemult_fact;
 if (($2 | 0) == 0) {
  $2 = 60;
 }
 HEAP32[8292] = 0;
 $7 = $1;
 HEAP32[9494] = $7;
 HEAP32[9496] = $7;
 HEAP32[28438] = 134217728 / (HEAP32[9496] | 0) | 0;
 HEAP32[30928] = (HEAP32[9496] << 6 | 0) / ($1 | 0) | 0;
 HEAP32[28848] = 0;
 HEAP32[26724] = 0;
 HEAP32[26298] = 2147483647;
 HEAP32[26728] = 0;
 HEAP32[8357] = 32;
 HEAP32[8359] = 100;
 $ix = 0;
 while (1) {
  if (($ix | 0) >= 15) {
   break;
  }
  HEAP32[78416 + ($ix << 2) >> 2] = HEAP32[6776 + ($ix << 2) >> 2];
  $ix = $ix + 1 | 0;
 }
 HEAP32[28522] = (Math_imul(HEAP32[9496] | 0, $2) | 0) / 12800 | 0;
 if ((HEAP32[28522] | 0) > 128) {
  HEAP32[28522] = 128;
 }
 HEAP32[28440] = (HEAP32[28522] | 0) / 2 | 0;
 if ((HEAP32[9496] | 0) == 22050) {
  __ZL17WavegenInitPkDatai(1);
  __ZL17WavegenInitPkDatai(0);
  HEAP32[26718] = 23784;
  __Z9KlattInitv();
  STACKTOP = sp;
  return;
 }
 $ix = 0;
 while (1) {
  if (($ix | 0) >= (HEAP32[28522] | 0)) {
   break;
  }
  HEAP8[24336 + $ix | 0] = ~~((1.0 - +Math_cos(6.283185307 * +($ix | 0) / +(HEAP32[28522] | 0))) * 127.0);
  $ix = $ix + 1 | 0;
 }
 __ZL17WavegenInitPkDatai(1);
 __ZL17WavegenInitPkDatai(0);
 HEAP32[26718] = 23784;
 __Z9KlattInitv();
 STACKTOP = sp;
 return;
}
function __ZL24overlapAddWithSeparationiiiPsS_S_($numSamples, $numChannels, $separation, $out, $rampDown, $rampUp) {
 $numSamples = $numSamples | 0;
 $numChannels = $numChannels | 0;
 $separation = $separation | 0;
 $out = $out | 0;
 $rampDown = $rampDown | 0;
 $rampUp = $rampUp | 0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $o = 0, $u = 0, $d = 0, $i = 0, $t = 0, $57 = 0, sp = 0;
 sp = STACKTOP;
 $1 = $numSamples;
 $2 = $numChannels;
 $3 = $separation;
 $4 = $out;
 $5 = $rampDown;
 $6 = $rampUp;
 $i = 0;
 while (1) {
  if (($i | 0) >= ($2 | 0)) {
   break;
  }
  $o = $4 + ($i << 1) | 0;
  $u = $6 + ($i << 1) | 0;
  $d = $5 + ($i << 1) | 0;
  $t = 0;
  while (1) {
   if (($t | 0) >= ($1 + $3 | 0)) {
    break;
   }
   if (($t | 0) < ($3 | 0)) {
    HEAP16[$o >> 1] = (Math_imul(HEAP16[$d >> 1] | 0, $1 - $t | 0) | 0) / ($1 | 0) | 0;
    $d = $d + ($2 << 1) | 0;
   } else {
    if (($t | 0) < ($1 | 0)) {
     $57 = Math_imul(HEAP16[$d >> 1] | 0, $1 - $t | 0) | 0;
     HEAP16[$o >> 1] = ($57 + (Math_imul(HEAP16[$u >> 1] | 0, $t - $3 | 0) | 0) | 0) / ($1 | 0) | 0;
     $d = $d + ($2 << 1) | 0;
     $u = $u + ($2 << 1) | 0;
    } else {
     HEAP16[$o >> 1] = (Math_imul(HEAP16[$u >> 1] | 0, $t - $3 | 0) | 0) / ($1 | 0) | 0;
     $u = $u + ($2 << 1) | 0;
    }
   }
   $o = $o + ($2 << 1) | 0;
   $t = $t + 1 | 0;
  }
  $i = $i + 1 | 0;
 }
 STACKTOP = sp;
 return;
}
function __ZL11PlaySilenceii($length, $resume) {
 $length = $length | 0;
 $resume = $resume | 0;
 var $1 = 0, $2 = 0, $value = 0, $14 = 0, $18 = 0, $32 = 0, $37 = 0, $41 = 0, $55 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = $length;
 $value = 0;
 HEAP32[26724] = 0;
 HEAP32[28848] = 0;
 HEAP32[26298] = 2147483647;
 if (($2 | 0) == 0) {
  $1 = 0;
  $55 = $1;
  STACKTOP = sp;
  return $55 | 0;
 }
 if (($resume | 0) == 0) {
  HEAP32[22854] = $2;
 }
 while (1) {
  $14 = HEAP32[22854] | 0;
  HEAP32[22854] = $14 - 1;
  if (($14 | 0) <= 0) {
   label = 14;
   break;
  }
  $18 = HEAP32[19870] | 0;
  HEAP32[19870] = $18 + 1;
  $value = (Math_imul(HEAP16[79496 + ($18 << 1) >> 1] | 0, HEAP32[22624] | 0) | 0) >> 8;
  if ((HEAP32[19870] | 0) >= 5500) {
   HEAP32[19870] = 0;
  }
  $32 = HEAP32[19448] | 0;
  HEAP32[19448] = $32 + 1;
  HEAP8[$32] = $value;
  $37 = HEAP32[19448] | 0;
  HEAP32[19448] = $37 + 1;
  HEAP8[$37] = $value >> 8;
  $41 = HEAP32[19872] | 0;
  HEAP32[19872] = $41 + 1;
  HEAP16[79496 + ($41 << 1) >> 1] = $value;
  if ((HEAP32[19872] | 0) >= 5500) {
   HEAP32[19872] = 0;
  }
  if ((HEAP32[19448] | 0) >>> 0 >= (HEAP32[19450] | 0) >>> 0) {
   label = 12;
   break;
  }
 }
 if ((label | 0) == 12) {
  $1 = 1;
  $55 = $1;
  STACKTOP = sp;
  return $55 | 0;
 } else if ((label | 0) == 14) {
  $1 = 0;
  $55 = $1;
  STACKTOP = sp;
  return $55 | 0;
 }
 return 0;
}
function __Z13NumInstnWordsPt($prog) {
 $prog = $prog | 0;
 var $1 = 0, $2 = 0, $instn = 0, $instn2 = 0, $instn_type = 0, $n = 0, $type2 = 0, $11 = 0, $16 = 0, $43 = 0, sp = 0;
 sp = STACKTOP;
 $2 = $prog;
 $instn = HEAPU16[$2 >> 1] | 0;
 $instn_type = $instn >> 12;
 $11 = HEAP8[23568 + $instn_type | 0] | 0;
 $n = $11;
 L1 : do {
  if (($11 | 0) > 0) {
   $1 = $n;
  } else {
   $16 = $instn_type;
   if (($16 | 0) == 0) {
    if ((($instn & 3840) >> 8 | 0) == 13) {
     $n = (($instn & 255) + 1 | 0) / 2 | 0;
     $1 = $n + 1 | 0;
     break;
    } else {
     $1 = 1;
     break;
    }
   } else if (($16 | 0) == 2 | ($16 | 0) == 3) {
    $43 = $instn & 3840;
    $n = $43;
    do {
     if (($43 | 0) != 1536) {
      if (($n | 0) == 3328) {
       break;
      }
      $1 = 1;
      break L1;
     }
    } while (0);
    $1 = 2;
    break;
   } else if (($16 | 0) == 6) {
    $type2 = ($instn & 3840) >> 9;
    do {
     if (($type2 | 0) != 5) {
      if (($type2 | 0) == 6) {
       break;
      }
      $1 = 1;
      break L1;
     }
    } while (0);
    $1 = 12;
    break;
   } else {
    $instn2 = HEAPU16[$2 + 4 >> 1] | 0;
    if (($instn2 >> 12 | 0) == 15) {
     $1 = 4;
     break;
    }
    if (($instn2 | 0) == 2) {
     $1 = 3;
     break;
    } else {
     $1 = 2;
     break;
    }
   }
  }
 } while (0);
 STACKTOP = sp;
 return $1 | 0;
}
function __ZL17insertPitchPeriodP17sonicStreamStructPsfi($stream, $samples, $speed, $period) {
 $stream = $stream | 0;
 $samples = $samples | 0;
 $speed = +$speed;
 $period = $period | 0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0.0, $5 = 0, $newSamples = 0, $out = 0, $numChannels = 0, $84 = 0, $89 = 0, sp = 0;
 sp = STACKTOP;
 $2 = $stream;
 $3 = $samples;
 $4 = $speed;
 $5 = $period;
 $numChannels = HEAP32[$2 + 28 >> 2] | 0;
 if ($4 < .5) {
  $newSamples = ~~(+($5 | 0) * $4 / (1.0 - $4));
 } else {
  $newSamples = $5;
  HEAP32[$2 + 68 >> 2] = ~~(+($5 | 0) * (2.0 * $4 - 1.0) / (1.0 - $4));
 }
 if ((__ZL27enlargeOutputBufferIfNeededP17sonicStreamStructi($2, $5 + $newSamples | 0) | 0) != 0) {
  $out = (HEAP32[$2 + 4 >> 2] | 0) + ((Math_imul(HEAP32[$2 + 48 >> 2] | 0, $numChannels) | 0) << 1) | 0;
  _memcpy($out | 0, $3 | 0, Math_imul($5 << 1, $numChannels) | 0) | 0;
  $out = (HEAP32[$2 + 4 >> 2] | 0) + ((Math_imul((HEAP32[$2 + 48 >> 2] | 0) + $5 | 0, $numChannels) | 0) << 1) | 0;
  __ZL10overlapAddiiPsS_S_($newSamples, $numChannels, $out, $3 + ((Math_imul($5, $numChannels) | 0) << 1) | 0, $3);
  $84 = $2 + 48 | 0;
  HEAP32[$84 >> 2] = (HEAP32[$84 >> 2] | 0) + ($5 + $newSamples);
  $1 = $newSamples;
  $89 = $1;
  STACKTOP = sp;
  return $89 | 0;
 } else {
  $1 = 0;
  $89 = $1;
  STACKTOP = sp;
  return $89 | 0;
 }
 return 0;
}
function __ZL17SwitchOnVowelTypeP12PHONEME_LISTP12PHONEME_DATAPPti($plist, $phdata, $p_prog, $instn_type) {
 $plist = $plist | 0;
 $phdata = $phdata | 0;
 $p_prog = $p_prog | 0;
 $instn_type = $instn_type | 0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $prog = 0, $voweltype = 0, $9 = 0, $71 = 0, $72 = 0, $73 = 0, sp = 0;
 sp = STACKTOP;
 $1 = $plist;
 $2 = $phdata;
 $3 = $p_prog;
 $4 = $instn_type;
 if (($4 | 0) == 2) {
  $9 = $2 | 0;
  HEAP32[$9 >> 2] = HEAP32[$9 >> 2] | 2;
  $voweltype = HEAPU8[(HEAP32[$1 + 32 >> 2] | 0) + 12 | 0] | 0;
 } else {
  $voweltype = HEAPU8[(HEAP32[$1 - 24 + 8 >> 2] | 0) + 13 | 0] | 0;
 }
 $voweltype = $voweltype - 28 | 0;
 if (($voweltype | 0) < 0) {
  $71 = $3;
  $72 = HEAP32[$71 >> 2] | 0;
  $73 = $72 + 24 | 0;
  HEAP32[$71 >> 2] = $73;
  STACKTOP = sp;
  return;
 }
 if (($voweltype | 0) >= 6) {
  $71 = $3;
  $72 = HEAP32[$71 >> 2] | 0;
  $73 = $72 + 24 | 0;
  HEAP32[$71 >> 2] = $73;
  STACKTOP = sp;
  return;
 }
 $prog = (HEAP32[$3 >> 2] | 0) + ($voweltype << 1 << 1) | 0;
 HEAP32[$2 + 68 + ($4 << 2) >> 2] = ((HEAP16[$prog + 2 >> 1] & 15) << 16) + (HEAPU16[$prog + 4 >> 1] | 0) << 2;
 HEAP32[$2 + 88 + ($4 << 2) >> 2] = ((HEAPU16[$prog + 2 >> 1] | 0) >> 4 & 255) << 24 >> 24;
 $71 = $3;
 $72 = HEAP32[$71 >> 2] | 0;
 $73 = $72 + 24 | 0;
 HEAP32[$71 >> 2] = $73;
 STACKTOP = sp;
 return;
}
function __ZL8IsLetterP10Translatorii($tr, $letter, $group) {
 $tr = $tr | 0;
 $letter = $letter | 0;
 $group = $group | 0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $letter2 = 0, $36 = 0, sp = 0;
 sp = STACKTOP;
 $2 = $tr;
 $3 = $letter;
 $4 = $group;
 L1 : do {
  if ((HEAP32[$2 + 724 + ($4 << 2) >> 2] | 0) != 0) {
   if ((_wcschr(HEAP32[$2 + 724 + ($4 << 2) >> 2] | 0, $3) | 0) != 0) {
    $1 = 1;
    break;
   } else {
    $1 = 0;
    break;
   }
  } else {
   if (($4 | 0) > 7) {
    $1 = 0;
    break;
   }
   L10 : do {
    if ((HEAP32[$2 + 720 >> 2] | 0) > 0) {
     $36 = $3 - (HEAP32[$2 + 720 >> 2] | 0) | 0;
     $letter2 = $36;
     do {
      if (($36 | 0) > 0) {
       if (($letter2 | 0) >= 256) {
        break;
       }
       $3 = $letter2;
       break L10;
      }
     } while (0);
     $1 = 0;
     break L1;
    } else {
     do {
      if (($3 | 0) >= 192) {
       if (($3 | 0) >= 606) {
        break;
       }
       $1 = (HEAPU8[$2 + 464 + (HEAPU8[28688 + ($3 - 192) | 0] | 0) | 0] | 0) & 1 << $4;
       break L1;
      }
     } while (0);
    }
   } while (0);
   do {
    if (($3 | 0) >= 0) {
     if (($3 | 0) >= 256) {
      break;
     }
     $1 = (HEAPU8[$2 + 464 + $3 | 0] | 0) & 1 << $4;
     break L1;
    }
   } while (0);
   $1 = 0;
  }
 } while (0);
 STACKTOP = sp;
 return $1 | 0;
}
function __ZL27moveNewSamplesToPitchBufferP17sonicStreamStructi($stream, $originalNumOutputSamples) {
 $stream = $stream | 0;
 $originalNumOutputSamples = $originalNumOutputSamples | 0;
 var $1 = 0, $2 = 0, $3 = 0, $numSamples = 0, $numChannels = 0, $29 = 0, $62 = 0, $80 = 0, $84 = 0, sp = 0;
 sp = STACKTOP;
 $2 = $stream;
 $3 = $originalNumOutputSamples;
 $numSamples = (HEAP32[$2 + 48 >> 2] | 0) - $3 | 0;
 $numChannels = HEAP32[$2 + 28 >> 2] | 0;
 do {
  if (((HEAP32[$2 + 52 >> 2] | 0) + $numSamples | 0) > (HEAP32[$2 + 36 >> 2] | 0)) {
   $29 = $2 + 36 | 0;
   HEAP32[$29 >> 2] = (HEAP32[$29 >> 2] | 0) + ((HEAP32[$2 + 36 >> 2] >> 1) + $numSamples);
   HEAP32[$2 + 8 >> 2] = _realloc(HEAP32[$2 + 8 >> 2] | 0, Math_imul(HEAP32[$2 + 36 >> 2] << 1, $numChannels) | 0) | 0;
   if ((HEAP32[$2 + 8 >> 2] | 0) != 0) {
    break;
   }
   $1 = 0;
   $84 = $1;
   STACKTOP = sp;
   return $84 | 0;
  }
 } while (0);
 $62 = (HEAP32[$2 + 8 >> 2] | 0) + ((Math_imul(HEAP32[$2 + 52 >> 2] | 0, $numChannels) | 0) << 1) | 0;
 _memcpy($62 | 0, (HEAP32[$2 + 4 >> 2] | 0) + ((Math_imul($3, $numChannels) | 0) << 1) | 0, Math_imul($numSamples << 1, $numChannels) | 0) | 0;
 HEAP32[$2 + 48 >> 2] = $3;
 $80 = $2 + 52 | 0;
 HEAP32[$80 >> 2] = (HEAP32[$80 >> 2] | 0) + $numSamples;
 $1 = 1;
 $84 = $1;
 STACKTOP = sp;
 return $84 | 0;
}
function __Z10MbrolaFilliii($length, $resume, $amplitude) {
 $length = $length | 0;
 $resume = $resume | 0;
 $amplitude = $amplitude | 0;
 var $1 = 0, $4 = 0, $req_samples = 0, $result = 0, $ix = 0, $value = 0, $86 = 0, sp = 0;
 sp = STACKTOP;
 $4 = $amplitude;
 if (($resume | 0) == 0) {
  HEAP32[26276] = (Math_imul(HEAP32[9496] | 0, $length) | 0) / 1e3 | 0;
 }
 $req_samples = ((HEAP32[19450] | 0) - (HEAP32[19448] | 0) | 0) / 2 | 0;
 if (($req_samples | 0) > (HEAP32[26276] | 0)) {
  $req_samples = HEAP32[26276] | 0;
 }
 $result = _read_MBR(HEAP32[19448] | 0, $req_samples) | 0;
 if (($result | 0) <= 0) {
  $1 = 0;
  $86 = $1;
  STACKTOP = sp;
  return $86 | 0;
 }
 $ix = 0;
 while (1) {
  if (($ix | 0) >= ($result | 0)) {
   break;
  }
  $value = Math_imul(((HEAPU8[HEAP32[19448] | 0] | 0) + ((HEAPU8[(HEAP32[19448] | 0) + 1 | 0] | 0) << 8) & 65535) << 16 >> 16, $4) | 0;
  $value = ($value | 0) / 40 | 0;
  if (($value | 0) > 32767) {
   $value = 32767;
  }
  if (($value | 0) < -32768) {
   $value = 32768;
  }
  HEAP8[HEAP32[19448] | 0] = $value;
  HEAP8[(HEAP32[19448] | 0) + 1 | 0] = $value >> 8;
  HEAP32[19448] = (HEAP32[19448] | 0) + 2;
  $ix = $ix + 1 | 0;
 }
 HEAP32[26276] = (HEAP32[26276] | 0) - $result;
 $1 = (HEAP32[26276] | 0) != 0 ? 1 : 0;
 $86 = $1;
 STACKTOP = sp;
 return $86 | 0;
}
function __ZL16SetPitchGradientiiii($start_ix, $end_ix, $start_pitch, $end_pitch) {
 $start_ix = $start_ix | 0;
 $end_ix = $end_ix | 0;
 $start_pitch = $start_pitch | 0;
 $end_pitch = $end_pitch | 0;
 var $1 = 0, $2 = 0, $3 = 0, $ix = 0, $stress = 0, $pitch = 0, $increment = 0, $n_increments = 0, $drop = 0, $syl = 0, sp = 0;
 sp = STACKTOP;
 $1 = $start_ix;
 $2 = $end_ix;
 $3 = $start_pitch;
 $increment = $end_pitch - $3 << 8;
 $n_increments = $2 - $1 | 0;
 if (($n_increments | 0) <= 0) {
  STACKTOP = sp;
  return;
 }
 if (($n_increments | 0) > 1) {
  $increment = ($increment | 0) / ($n_increments | 0) | 0;
 }
 $pitch = $3 << 8;
 $ix = $1;
 while (1) {
  if (($ix | 0) >= ($2 | 0)) {
   break;
  }
  $syl = (HEAP32[28524] | 0) + ($ix * 6 | 0) | 0;
  $stress = HEAP8[$syl | 0] | 0;
  if (($increment | 0) > 0) {
   __ZL9set_pitchP8SYLLABLEii($syl, $pitch >> 8, -($increment >> 8) | 0);
   $pitch = $pitch + $increment | 0;
  } else {
   $drop = -($increment >> 8) | 0;
   if (($drop | 0) < (HEAP32[24800 + ($stress << 2) >> 2] | 0)) {
    $drop = HEAP32[24800 + ($stress << 2) >> 2] | 0;
   }
   $pitch = $pitch + $increment | 0;
   if (($drop | 0) > 18) {
    $drop = 18;
   }
   __ZL9set_pitchP8SYLLABLEii($syl, $pitch >> 8, $drop);
  }
  $ix = $ix + 1 | 0;
 }
 STACKTOP = sp;
 return;
}
function __ZL18PhonemeReplacementiPc($type, $p) {
 $type = $type | 0;
 $p = $p | 0;
 var $flags = 0, $phon_string1 = 0, $phon_string2 = 0, $8 = 0, $17 = 0, $28 = 0, $33 = 0, $34 = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 40 | 0;
 $flags = sp | 0;
 $phon_string1 = sp + 8 | 0;
 $phon_string2 = sp + 24 | 0;
 HEAP32[$flags >> 2] = 0;
 _strcpy($phon_string2 | 0, 15168) | 0;
 $8 = _sscanf($p | 0, 9552, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 24 | 0, HEAP32[tempVarArgs >> 2] = $flags, HEAP32[tempVarArgs + 8 >> 2] = $phon_string1, HEAP32[tempVarArgs + 16 >> 2] = $phon_string2, tempVarArgs) | 0) | 0;
 STACKTOP = tempVarArgs;
 do {
  if (($8 | 0) >= 2) {
   if ((HEAP32[19556] | 0) >= 60) {
    break;
   }
   $17 = __Z19LookupPhonemeStringPKc($phon_string1 | 0) | 0;
   if (($17 | 0) == 0) {
    STACKTOP = sp;
    return;
   } else {
    HEAP8[37992 + ((HEAP32[19556] | 0) * 3 | 0) | 0] = $17;
    $28 = (__Z19LookupPhonemeStringPKc($phon_string2 | 0) | 0) & 255;
    HEAP8[37993 + ((HEAP32[19556] | 0) * 3 | 0) | 0] = $28;
    $33 = HEAP32[$flags >> 2] & 255;
    $34 = HEAP32[19556] | 0;
    HEAP32[19556] = $34 + 1;
    HEAP8[37994 + ($34 * 3 | 0) | 0] = $33;
    STACKTOP = sp;
    return;
   }
  }
 } while (0);
 STACKTOP = sp;
 return;
}
function ___shgetc($f) {
 $f = $f | 0;
 var $1 = 0, $2 = 0, $9 = 0, $14 = 0, $_pre = 0, $18 = 0, $25 = 0, $_pre27 = 0, $36 = 0, $41 = 0, $_0 = 0, label = 0;
 $1 = $f + 104 | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 if (($2 | 0) == 0) {
  label = 3;
 } else {
  if ((HEAP32[$f + 108 >> 2] | 0) < ($2 | 0)) {
   label = 3;
  }
 }
 do {
  if ((label | 0) == 3) {
   $9 = ___uflow($f) | 0;
   if (($9 | 0) < 0) {
    break;
   }
   $14 = HEAP32[$1 >> 2] | 0;
   $_pre = HEAP32[$f + 8 >> 2] | 0;
   do {
    if (($14 | 0) == 0) {
     label = 8;
    } else {
     $18 = HEAP32[$f + 4 >> 2] | 0;
     $25 = $14 - (HEAP32[$f + 108 >> 2] | 0) - 1 | 0;
     if (($_pre - $18 | 0) <= ($25 | 0)) {
      label = 8;
      break;
     }
     HEAP32[$f + 100 >> 2] = $18 + $25;
    }
   } while (0);
   if ((label | 0) == 8) {
    HEAP32[$f + 100 >> 2] = $_pre;
   }
   $_pre27 = HEAP32[$f + 4 >> 2] | 0;
   if (($_pre | 0) != 0) {
    $36 = $f + 108 | 0;
    HEAP32[$36 >> 2] = $_pre + 1 - $_pre27 + (HEAP32[$36 >> 2] | 0);
   }
   $41 = $_pre27 - 1 | 0;
   if ((HEAPU8[$41] | 0 | 0) == ($9 | 0)) {
    $_0 = $9;
    return $_0 | 0;
   }
   HEAP8[$41] = $9;
   $_0 = $9;
   return $_0 | 0;
  }
 } while (0);
 HEAP32[$f + 100 >> 2] = 0;
 $_0 = -1;
 return $_0 | 0;
}
function __Z11SetEmbeddedii($control, $value) {
 $control = $control | 0;
 $value = $value | 0;
 var $1 = 0, $2 = 0, $sign = 0, $command = 0, $28 = 0, $30 = 0, sp = 0;
 sp = STACKTOP;
 $1 = $control;
 $2 = $value;
 $sign = 0;
 $command = $1 & 31;
 if (($1 & 96 | 0) == 96) {
  $sign = -1;
 } else {
  if (($1 & 96 | 0) == 64) {
   $sign = 1;
  }
 }
 if (($command | 0) < 15) {
  if (($sign | 0) == 0) {
   HEAP32[78416 + ($command << 2) >> 2] = $2;
  } else {
   $28 = Math_imul($2, $sign) | 0;
   $30 = 78416 + ($command << 2) | 0;
   HEAP32[$30 >> 2] = (HEAP32[$30 >> 2] | 0) + $28;
  }
  HEAP32[78416 + ($command << 2) >> 2] = __ZL13SetWithRange0ii(HEAP32[78416 + ($command << 2) >> 2] | 0, HEAP32[30240 + ($command << 2) >> 2] | 0) | 0;
 }
 switch ($command | 0) {
 case 6:
  {
   __ZL14WavegenSetEchov();
   break;
  }
 case 1:
  {
   break;
  }
 case 3:
  {
   HEAP32[6658] = __Z12GetAmplitudev() | 0;
   STACKTOP = sp;
   return;
  }
 case 13:
  {
   HEAP32[6658] = __Z12GetAmplitudev() | 0;
   STACKTOP = sp;
   return;
  }
 case 5:
  {
   __ZL14WavegenSetEchov();
   STACKTOP = sp;
   return;
  }
 default:
  {
   STACKTOP = sp;
   return;
  }
 }
 __ZL16SetPitchFormantsv();
 STACKTOP = sp;
 return;
}
function __Z22ApplySpecialAttribute2P10TranslatorPci($tr, $phonemes, $dict_flags) {
 $tr = $tr | 0;
 $phonemes = $phonemes | 0;
 $dict_flags = $dict_flags | 0;
 var $2 = 0, $3 = 0, $ix = 0, $len = 0, $p = 0, $37 = 0, $47 = 0, $58 = 0, $68 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = $phonemes;
 $3 = $dict_flags;
 $len = _strlen($2 | 0) | 0;
 if ((HEAP32[$tr + 84 >> 2] & 2 | 0) == 0) {
  STACKTOP = sp;
  return;
 }
 $ix = 0;
 while (1) {
  if (($ix | 0) >= ($len - 1 | 0)) {
   break;
  }
  if ((HEAP8[$2 + $ix | 0] | 0) == 6) {
   label = 5;
   break;
  }
  $ix = $ix + 1 | 0;
 }
 if ((label | 0) == 5) {
  $p = $2 + ($ix + 1) | 0;
  if (($3 & 65536 | 0) != 0) {
   $37 = HEAP8[$p] | 0;
   if (($37 | 0) == (__Z11PhonemeCodej(69) | 0)) {
    HEAP8[$p] = __Z11PhonemeCodej(101) | 0;
   }
   $47 = HEAP8[$p] | 0;
   if (($47 | 0) == (__Z11PhonemeCodej(79) | 0)) {
    HEAP8[$p] = __Z11PhonemeCodej(111) | 0;
   }
  } else {
   $58 = HEAP8[$p] | 0;
   if (($58 | 0) == (__Z11PhonemeCodej(101) | 0)) {
    HEAP8[$p] = __Z11PhonemeCodej(69) | 0;
   }
   $68 = HEAP8[$p] | 0;
   if (($68 | 0) == (__Z11PhonemeCodej(111) | 0)) {
    HEAP8[$p] = __Z11PhonemeCodej(79) | 0;
   }
  }
 }
 STACKTOP = sp;
 return;
}
function __ZL13IsLetterGroupP10TranslatorPcii($tr, $word, $group, $pre) {
 $tr = $tr | 0;
 $word = $word | 0;
 $group = $group | 0;
 $pre = $pre | 0;
 var $1 = 0, $3 = 0, $5 = 0, $p = 0, $w = 0, $len = 0, $48 = 0, $72 = 0, $81 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = $word;
 $5 = $pre;
 $len = 0;
 $p = HEAP32[$tr + 4908 + ($group << 2) >> 2] | 0;
 if (($p | 0) == 0) {
  $1 = 0;
  $81 = $1;
  STACKTOP = sp;
  return $81 | 0;
 }
 while (1) {
  if ((HEAP8[$p] | 0) == 7) {
   label = 21;
   break;
  }
  if (($5 | 0) != 0) {
   $len = _strlen($p | 0) | 0;
   $w = $3 + (-$len | 0) + 1 | 0;
  } else {
   $w = $3;
  }
  while (1) {
   if ((HEAP8[$p] | 0) == (HEAP8[$w] | 0)) {
    $48 = (HEAP8[$w] | 0) != 0;
   } else {
    $48 = 0;
   }
   if (!$48) {
    break;
   }
   $w = $w + 1 | 0;
   $p = $p + 1 | 0;
  }
  if ((HEAP8[$p] | 0) == 0) {
   break;
  }
  do {
   $72 = $p;
   $p = $72 + 1 | 0;
  } while ((HEAP8[$72] | 0) != 0);
 }
 if ((label | 0) == 21) {
  $1 = 0;
  $81 = $1;
  STACKTOP = sp;
  return $81 | 0;
 }
 if (($5 | 0) != 0) {
  $1 = $len;
  $81 = $1;
  STACKTOP = sp;
  return $81 | 0;
 } else {
  $1 = $w - $3 | 0;
  $81 = $1;
  STACKTOP = sp;
  return $81 | 0;
 }
 return 0;
}
function __Z15UpperCaseInWordP10TranslatorPci($tr, $word, $c) {
 $tr = $tr | 0;
 $word = $word | 0;
 $c = $c | 0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $ix = 0, $len = 0, $p = 0, $13 = 0, $68 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = $tr;
 $3 = $word;
 $4 = $c;
 do {
  if ((HEAP32[$2 + 324 >> 2] | 0) == 26465) {
   $ix = 0;
   L3 : while (1) {
    $13 = HEAP32[24872 + ($ix << 2) >> 2] | 0;
    $p = $13;
    if (($13 | 0) == 0) {
     label = 4;
     break;
    }
    $len = _strlen($p | 0) | 0;
    do {
     if ((HEAP8[$3 + (-$len | 0) | 0] | 0) == 32) {
      if ((_memcmp($3 + ((-$len | 0) + 1) | 0, $p | 0, $len - 1 | 0) | 0) != 0) {
       break;
      }
      if (($4 | 0) == (HEAP8[$p + ($len - 1) | 0] | 0)) {
       label = 10;
       break L3;
      }
      if ((HEAP8[$p + ($len - 1) | 0] | 0) == 65) {
       if ((__Z7IsVowelP10Translatori($2, $4) | 0) != 0) {
        label = 10;
        break L3;
       }
      }
     }
    } while (0);
    $ix = $ix + 1 | 0;
   }
   if ((label | 0) == 10) {
    $1 = 1;
    $68 = $1;
    STACKTOP = sp;
    return $68 | 0;
   } else if ((label | 0) == 4) {
    break;
   }
  }
 } while (0);
 $1 = 0;
 $68 = $1;
 STACKTOP = sp;
 return $68 | 0;
}
function __Z8utf8_in2PiPKci($c, $buf, $backwards) {
 $c = $c | 0;
 $buf = $buf | 0;
 $backwards = $backwards | 0;
 var $1 = 0, $2 = 0, $3 = 0, $c1 = 0, $n_bytes = 0, $ix = 0, $21 = 0, $24 = 0, $58 = 0, $69 = 0, $70 = 0, $71 = 0, $72 = 0, sp = 0;
 sp = STACKTOP;
 $1 = $c;
 $2 = $buf;
 $3 = $backwards;
 while (1) {
  if ((HEAP8[$2] & 192 | 0) != 128) {
   break;
  }
  if (($3 | 0) != 0) {
   $2 = $2 - 1 | 0;
  } else {
   $2 = $2 + 1 | 0;
  }
 }
 $n_bytes = 0;
 $21 = $2;
 $2 = $21 + 1 | 0;
 $24 = HEAP8[$21] | 0;
 $c1 = $24;
 if (($24 & 128 | 0) == 0) {
  $69 = $c1;
  $70 = $1;
  HEAP32[$70 >> 2] = $69;
  $71 = $n_bytes;
  $72 = $71 + 1 | 0;
  STACKTOP = sp;
  return $72 | 0;
 }
 if (($c1 & 224 | 0) == 192) {
  $n_bytes = 1;
 } else {
  if (($c1 & 240 | 0) == 224) {
   $n_bytes = 2;
  } else {
   if (($c1 & 248 | 0) == 240) {
    $n_bytes = 3;
   }
  }
 }
 $c1 = $c1 & HEAPU8[21288 + $n_bytes | 0];
 $ix = 0;
 while (1) {
  if (($ix | 0) >= ($n_bytes | 0)) {
   break;
  }
  $58 = $2;
  $2 = $58 + 1 | 0;
  $c1 = ($c1 << 6) + (HEAP8[$58] & 63) | 0;
  $ix = $ix + 1 | 0;
 }
 $69 = $c1;
 $70 = $1;
 HEAP32[$70 >> 2] = $69;
 $71 = $n_bytes;
 $72 = $71 + 1 | 0;
 STACKTOP = sp;
 return $72 | 0;
}
function __ZL22SpeakIndividualLettersP10TranslatorPcS1_i($tr, $word, $phonemes, $spell_word) {
 $tr = $tr | 0;
 $word = $word | 0;
 $phonemes = $phonemes | 0;
 $spell_word = $spell_word | 0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $posn = 0, $capitals = 0, $non_initial = 0, $27 = 0, $56 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = $tr;
 $3 = $word;
 $4 = $phonemes;
 $5 = $spell_word;
 $posn = 0;
 $capitals = 0;
 $non_initial = 0;
 if (($5 | 0) > 2) {
  $capitals = 2;
 }
 if (($5 | 0) > 1) {
  $capitals = $capitals | 4;
 }
 while (1) {
  if ((HEAP8[$3] | 0) != 32) {
   $27 = (HEAP8[$3] | 0) != 0;
  } else {
   $27 = 0;
  }
  if (!$27) {
   label = 12;
   break;
  }
  $3 = $3 + (__Z15TranslateLetterP10TranslatorPcS1_i($2, $3, $4, $capitals | $non_initial) | 0) | 0;
  $posn = $posn + 1 | 0;
  $non_initial = 1;
  if ((HEAP8[$4 | 0] | 0) == 21) {
   label = 10;
   break;
  }
 }
 if ((label | 0) == 12) {
  __Z17SetSpellingStressP10TranslatorPcii($2, $4, $5, $posn);
  $1 = $3;
  $56 = $1;
  STACKTOP = sp;
  return $56 | 0;
 } else if ((label | 0) == 10) {
  _strcpy(33176, $4 | 0) | 0;
  $1 = 0;
  $56 = $1;
  STACKTOP = sp;
  return $56 | 0;
 }
 return 0;
}
function __Z9KlattInitv() {
 var $ix = 0, sp = 0;
 sp = STACKTOP;
 $ix = 0;
 while (1) {
  if (($ix | 0) >= 256) {
   break;
  }
  $ix = $ix + 1 | 0;
 }
 HEAP32[28528] = 0;
 HEAP32[31358] = 1;
 HEAP32[31360] = 22050;
 HEAP32[31363] = 1;
 HEAP32[31405] = HEAP32[28632 + (HEAP32[31363] << 2) >> 2];
 HEAP32[31402] = 27752;
 HEAP32[31398] = 100;
 HEAPF64[15700] = 3.0;
 HEAP32[31365] = ((HEAP32[31360] | 0) * 10 | 0 | 0) / 1e3 | 0;
 HEAP32[31359] = 0;
 HEAP32[31364] = 20;
 __Z10KlattReseti(2);
 $ix = 0;
 while (1) {
  if (($ix | 0) > 9) {
   break;
  }
  HEAP32[106928 + ($ix << 2) >> 2] = HEAP16[21256 + ($ix << 1) >> 1] | 0;
  HEAP32[106968 + ($ix << 2) >> 2] = HEAP16[21184 + ($ix << 1) >> 1] | 0;
  HEAP32[107008 + ($ix << 2) >> 2] = HEAP16[21208 + ($ix << 1) >> 1] | 0;
  HEAP32[107048 + ($ix << 2) >> 2] = HEAP16[21232 + ($ix << 1) >> 1] | 0;
  $ix = $ix + 1 | 0;
 }
 HEAP32[26792] = HEAP16[10592] | 0;
 HEAP32[26730] = 1e3;
 HEAP32[26731] = 59;
 HEAP32[26772] = 0;
 HEAP32[26773] = 40;
 HEAP32[26774] = 0;
 HEAP32[26775] = 0;
 HEAP32[26776] = 50;
 HEAP32[26777] = 0;
 HEAP32[26778] = 0;
 HEAP32[26779] = 0;
 HEAP32[26780] = 62;
 STACKTOP = sp;
 return;
}
function __ZL16GetSsmlAttributePwPKc($pw, $name) {
 $pw = $pw | 0;
 $name = $name | 0;
 var $1 = 0, $2 = 0, $3 = 0, $ix = 0, $79 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = $pw;
 $3 = $name;
 while (1) {
  if ((HEAP32[$2 >> 2] | 0) == 0) {
   label = 22;
   break;
  }
  if ((_iswspace(HEAP32[$2 - 4 >> 2] | 0) | 0) != 0) {
   $ix = 0;
   while (1) {
    if ((HEAP32[$2 >> 2] | 0) != (HEAP8[$3 + $ix | 0] | 0)) {
     break;
    }
    $2 = $2 + 4 | 0;
    $ix = $ix + 1 | 0;
   }
   if ((HEAP8[$3 + $ix | 0] | 0) == 0) {
    break;
   }
  }
  $2 = $2 + 4 | 0;
 }
 if ((label | 0) == 22) {
  $1 = 0;
  $79 = $1;
  STACKTOP = sp;
  return $79 | 0;
 }
 while (1) {
  if ((_iswspace(HEAP32[$2 >> 2] | 0) | 0) == 0) {
   break;
  }
  $2 = $2 + 4 | 0;
 }
 if ((HEAP32[$2 >> 2] | 0) == 61) {
  $2 = $2 + 4 | 0;
 }
 while (1) {
  if ((_iswspace(HEAP32[$2 >> 2] | 0) | 0) == 0) {
   break;
  }
  $2 = $2 + 4 | 0;
 }
 do {
  if ((HEAP32[$2 >> 2] | 0) != 34) {
   if ((HEAP32[$2 >> 2] | 0) == 39) {
    break;
   }
   $1 = 91280;
   $79 = $1;
   STACKTOP = sp;
   return $79 | 0;
  }
 } while (0);
 $1 = $2 + 4 | 0;
 $79 = $1;
 STACKTOP = sp;
 return $79 | 0;
}
function __ZL13SetToneAdjustP7voice_tPi($voice, $tone_pts) {
 $voice = $voice | 0;
 $tone_pts = $tone_pts | 0;
 var $1 = 0, $2 = 0, $ix = 0, $pt = 0, $y = 0, $freq1 = 0, $freq2 = 0, $height1 = 0, $height2 = 0, $rate = 0.0, sp = 0;
 sp = STACKTOP;
 $1 = $voice;
 $2 = $tone_pts;
 $freq1 = 0;
 $height1 = HEAP32[$2 + 4 >> 2] | 0;
 $pt = 0;
 while (1) {
  if (($pt | 0) >= 12) {
   break;
  }
  if ((HEAP32[$2 + ($pt << 2) >> 2] | 0) == -1) {
   HEAP32[$2 + ($pt << 2) >> 2] = 8e3;
   if (($pt | 0) > 0) {
    HEAP32[$2 + ($pt + 1 << 2) >> 2] = HEAP32[$2 + ($pt - 1 << 2) >> 2];
   }
  }
  $freq2 = (HEAP32[$2 + ($pt << 2) >> 2] | 0) / 8 | 0;
  $height2 = HEAP32[$2 + ($pt + 1 << 2) >> 2] | 0;
  if (($freq2 - $freq1 | 0) > 0) {
   $rate = +($height2 - $height1 | 0) / +($freq2 - $freq1 | 0);
   $ix = $freq1;
   while (1) {
    if (($ix | 0) >= ($freq2 | 0)) {
     break;
    }
    $y = $height1 + ~~($rate * +($ix - $freq1 | 0)) | 0;
    if (($y | 0) > 255) {
     $y = 255;
    }
    HEAP8[$1 + 364 + $ix | 0] = $y;
    $ix = $ix + 1 | 0;
   }
  }
  $freq1 = $freq2;
  $height1 = $height2;
  $pt = $pt + 2 | 0;
 }
 STACKTOP = sp;
 return;
}
function __Z9SetPitch2P7voice_tiiPiS1_($voice, $pitch1, $pitch2, $pitch_base, $pitch_range) {
 $voice = $voice | 0;
 $pitch1 = $pitch1 | 0;
 $pitch2 = $pitch2 | 0;
 $pitch_base = $pitch_base | 0;
 $pitch_range = $pitch_range | 0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $x = 0, $base = 0, $range = 0, $pitch_value = 0, $14 = 0, $60 = 0;
 $1 = $voice;
 $2 = $pitch1;
 $3 = $pitch2;
 $4 = $pitch_base;
 if (($2 | 0) > ($3 | 0)) {
  $x = $2;
  $2 = $3;
  $3 = $x;
 }
 $14 = HEAP32[19605] | 0;
 $pitch_value = $14;
 if (($14 | 0) > 101) {
  $pitch_value = 101;
 }
 $pitch_value = $pitch_value - (HEAP32[19610] | 0) | 0;
 if (($pitch_value | 0) < 0) {
  $pitch_value = 0;
 }
 $base = (Math_imul(HEAP32[$1 + 64 >> 2] | 0, HEAPU8[5168 + $pitch_value | 0] | 0) | 0) / 128 | 0;
 $range = (Math_imul(HEAP32[$1 + 68 >> 2] | 0, HEAP32[19608] | 0) | 0) / 50 | 0;
 $base = $base - (($range - (HEAP32[$1 + 68 >> 2] | 0) | 0) * 18 | 0) | 0;
 HEAP32[$4 >> 2] = $base + ((Math_imul($2, $range) | 0) / 2 | 0);
 $60 = $base + ((Math_imul($3, $range) | 0) / 2 | 0) | 0;
 HEAP32[$pitch_range >> 2] = $60 - (HEAP32[$4 >> 2] | 0);
 STACKTOP = STACKTOP;
 return;
}
function __ZL15skipPitchPeriodP17sonicStreamStructPsfi($stream, $samples, $speed, $period) {
 $stream = $stream | 0;
 $samples = $samples | 0;
 $speed = +$speed;
 $period = $period | 0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0.0, $5 = 0, $newSamples = 0, $numChannels = 0, $61 = 0, $66 = 0, sp = 0;
 sp = STACKTOP;
 $2 = $stream;
 $3 = $samples;
 $4 = $speed;
 $5 = $period;
 $numChannels = HEAP32[$2 + 28 >> 2] | 0;
 if ($4 >= 2.0) {
  $newSamples = ~~(+($5 | 0) / ($4 - 1.0));
 } else {
  if ($4 > 1.0) {
   $newSamples = $5;
   HEAP32[$2 + 68 >> 2] = ~~(+($5 | 0) * (2.0 - $4) / ($4 - 1.0));
  }
 }
 if ((__ZL27enlargeOutputBufferIfNeededP17sonicStreamStructi($2, $newSamples) | 0) != 0) {
  __ZL10overlapAddiiPsS_S_($newSamples, $numChannels, (HEAP32[$2 + 4 >> 2] | 0) + ((Math_imul(HEAP32[$2 + 48 >> 2] | 0, $numChannels) | 0) << 1) | 0, $3, $3 + ((Math_imul($5, $numChannels) | 0) << 1) | 0);
  $61 = $2 + 48 | 0;
  HEAP32[$61 >> 2] = (HEAP32[$61 >> 2] | 0) + $newSamples;
  $1 = $newSamples;
  $66 = $1;
  STACKTOP = sp;
  return $66 | 0;
 } else {
  $1 = 0;
  $66 = $1;
  STACKTOP = sp;
  return $66 | 0;
 }
 return 0;
}
function __ZL11hu_number_ePKcii($word, $thousandplex, $value) {
 $word = $word | 0;
 $thousandplex = $thousandplex | 0;
 $value = $value | 0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $58 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = $word;
 $3 = $thousandplex;
 $4 = $value;
 do {
  if ((HEAP8[$2 | 0] | 0) != 97) {
   if ((HEAP8[$2 | 0] | 0) == 101) {
    break;
   }
   $1 = 0;
   $58 = $1;
   STACKTOP = sp;
   return $58 | 0;
  }
 } while (0);
 do {
  if ((HEAP8[$2 + 1 | 0] | 0) != 32) {
   if ((HEAP8[$2 + 1 | 0] | 0) == 122) {
    break;
   }
   if ((HEAP8[$2 + 1 | 0] | 0) == 116) {
    if ((HEAP8[$2 + 2 | 0] | 0) == 116) {
     break;
    }
   }
   if (($3 | 0) == 1) {
    label = 10;
   } else {
    if ((($4 | 0) % 1e3 | 0 | 0) == 0) {
     label = 10;
    }
   }
   do {
    if ((label | 0) == 10) {
     if ((HEAP8[$2 + 1 | 0] | 0) != 108) {
      break;
     }
     $1 = 0;
     $58 = $1;
     STACKTOP = sp;
     return $58 | 0;
    }
   } while (0);
   $1 = 1;
   $58 = $1;
   STACKTOP = sp;
   return $58 | 0;
  }
 } while (0);
 $1 = 0;
 $58 = $1;
 STACKTOP = sp;
 return $58 | 0;
}
function __ZL13LookupSpecialP10TranslatorPKcPc($tr, $string, $text_out) {
 $tr = $tr | 0;
 $string = $string | 0;
 $text_out = $text_out | 0;
 var $1 = 0, $2 = 0, $4 = 0, $flags = 0, $phonemes = 0, $phonemes2 = 0, $string1 = 0, $25 = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 $flags = sp | 0;
 $phonemes = sp + 8 | 0;
 $phonemes2 = sp + 64 | 0;
 $string1 = sp + 120 | 0;
 $2 = $tr;
 $4 = $text_out;
 HEAP32[$string1 >> 2] = $string;
 HEAP32[$flags + 4 >> 2] = 0;
 HEAP32[$flags >> 2] = 0;
 if ((__Z14LookupDictListP10TranslatorPPcS1_PjiP8WORD_TAB($2, $string1, $phonemes | 0, $flags | 0, 0, 0) | 0) != 0) {
  __Z13SetWordStressP10TranslatorPcPjii($2, $phonemes | 0, $flags | 0, -1, 0);
  __Z14DecodePhonemesPKcPc($phonemes | 0, $phonemes2 | 0);
  _sprintf($4 | 0, 15512, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $phonemes2, tempVarArgs) | 0) | 0;
  STACKTOP = tempVarArgs;
  $1 = $4;
  $25 = $1;
  STACKTOP = sp;
  return $25 | 0;
 } else {
  $1 = 0;
  $25 = $1;
  STACKTOP = sp;
  return $25 | 0;
 }
 return 0;
}
function __ZL19SetProsodyParameteriPwP11PARAM_STACK($param_type, $attr1, $sp) {
 $param_type = $param_type | 0;
 $attr1 = $attr1 | 0;
 $sp = $sp | 0;
 var $1 = 0, $2 = 0, $3 = 0, $value = 0, $sign = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 8 | 0;
 $value = sp | 0;
 $1 = $param_type;
 $2 = $attr1;
 $3 = $sp;
 $8 = __ZL10attrlookupPKwPK8MNEM_TAB($2, HEAP32[19392 + ($1 << 2) >> 2] | 0) | 0;
 HEAP32[$value >> 2] = $8;
 if (($8 | 0) >= 0) {
  HEAP32[$3 + 4 + ($1 << 2) >> 2] = (Math_imul(HEAP32[76492 + ($1 << 2) >> 2] | 0, HEAP32[$value >> 2] | 0) | 0) / 100 | 0;
  STACKTOP = sp;
  return;
 }
 $sign = __ZL18attr_prosody_valueiPKwPi($1, $2, $value) | 0;
 if (($sign | 0) == 0) {
  HEAP32[$3 + 4 + ($1 << 2) >> 2] = HEAP32[$value >> 2];
 } else {
  if (($sign | 0) == 2) {
   HEAP32[$3 + 4 + ($1 << 2) >> 2] = (Math_imul(HEAP32[113616 + ($1 << 2) >> 2] | 0, HEAP32[$value >> 2] | 0) | 0) / 100 | 0;
  } else {
   HEAP32[$3 + 4 + ($1 << 2) >> 2] = (HEAP32[113616 + ($1 << 2) >> 2] | 0) + (Math_imul(HEAP32[$value >> 2] | 0, $sign) | 0);
  }
 }
 STACKTOP = sp;
 return;
}
function __ZL13LookupLetter2P10TranslatorjPc($tr, $letter, $ph_buf) {
 $tr = $tr | 0;
 $letter = $letter | 0;
 $ph_buf = $ph_buf | 0;
 var $1 = 0, $3 = 0, $len = 0, $single_letter = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $single_letter = sp | 0;
 $1 = $tr;
 $3 = $ph_buf;
 HEAP8[$single_letter | 0] = 0;
 HEAP8[$single_letter + 1 | 0] = 95;
 $len = __Z8utf8_outjPc($letter, $single_letter + 2 | 0) | 0;
 HEAP8[$single_letter + ($len + 2) | 0] = 32;
 HEAP8[$single_letter + ($len + 3) | 0] = 0;
 if ((__Z6LookupP10TranslatorPKcPc($1, $single_letter + 1 | 0, $3) | 0) != 0) {
  $34 = $3;
  $35 = $34 | 0;
  $36 = HEAP8[$35] | 0;
  $37 = $36 << 24 >> 24;
  STACKTOP = sp;
  return $37 | 0;
 }
 HEAP8[$single_letter + 1 | 0] = 32;
 if ((__Z6LookupP10TranslatorPKcPc($1, $single_letter + 2 | 0, $3) | 0) == 0) {
  __Z14TranslateRulesP10TranslatorPcS1_iS1_iPj($1, $single_letter + 2 | 0, $3, 20, 0, 0, 0) | 0;
 }
 $34 = $3;
 $35 = $34 | 0;
 $36 = HEAP8[$35] | 0;
 $37 = $36 << 24 >> 24;
 STACKTOP = sp;
 return $37 | 0;
}
function __ZL9init_pathPcS_($argv0, $path_specified) {
 $argv0 = $argv0 | 0;
 $path_specified = $path_specified | 0;
 var $2 = 0, $9 = 0, $19 = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 $2 = $path_specified;
 if (($2 | 0) != 0) {
  _sprintf(76328, 11032, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $2, tempVarArgs) | 0) | 0;
  STACKTOP = tempVarArgs;
  STACKTOP = sp;
  return;
 }
 $9 = _getenv(10920) | 0;
 do {
  if (($9 | 0) != 0) {
   _snprintf(76328, 160, 11032, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $9, tempVarArgs) | 0) | 0;
   STACKTOP = tempVarArgs;
   if ((__Z13GetFileLengthPKc(76328) | 0) != -2) {
    break;
   }
   STACKTOP = sp;
   return;
  }
 } while (0);
 $19 = _getenv(10880) | 0;
 _snprintf(76328, 160, 11032, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $19, tempVarArgs) | 0) | 0;
 STACKTOP = tempVarArgs;
 if ((_access(76328, 4) | 0) == 0) {
  STACKTOP = sp;
  return;
 }
 _strcpy(76328, 10792) | 0;
 STACKTOP = sp;
 return;
}
function __Z9towlower2j($c) {
 $c = $c | 0;
 var $1 = 0, $2 = 0, $x = 0, $ix = 0, $30 = 0, $67 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = $c;
 if (($2 | 0) == 73) {
  if ((HEAP8[(HEAP32[9112] | 0) + 273 | 0] | 0) != 0) {
   $2 = 305;
  }
 }
 if ($2 >>> 0 < 128 >>> 0) {
  $1 = _tolower($2 | 0) | 0;
  $67 = $1;
  STACKTOP = sp;
  return $67 | 0;
 }
 if ($2 >>> 0 > 591 >>> 0) {
  $1 = _towlower($2) | 0;
  $67 = $1;
  STACKTOP = sp;
  return $67 | 0;
 }
 $30 = HEAPU8[112 + ($2 - 128) | 0] | 0;
 $x = $30;
 if (($30 | 0) >= 254) {
  $1 = $2;
  $67 = $1;
  STACKTOP = sp;
  return $67 | 0;
 }
 do {
  if (($x | 0) == 253) {
   $ix = 0;
   while (1) {
    if ((HEAP16[72 + ($ix << 1) >> 1] | 0) == 0) {
     label = 18;
     break;
    }
    if ((HEAP16[72 + ($ix << 1) >> 1] | 0) == ($2 | 0)) {
     break;
    }
    $ix = $ix + 2 | 0;
   }
   if ((label | 0) == 18) {
    break;
   }
   $1 = HEAP16[72 + ($ix + 1 << 1) >> 1] | 0;
   $67 = $1;
   STACKTOP = sp;
   return $67 | 0;
  }
 } while (0);
 $1 = $2 + $x | 0;
 $67 = $1;
 STACKTOP = sp;
 return $67 | 0;
}
function __ZL12create_pipesPiS_S_($p1, $p2, $p3) {
 $p1 = $p1 | 0;
 $p2 = $p2 | 0;
 $p3 = $p3 | 0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $error = 0, $46 = 0, $48 = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 $2 = $p1;
 $3 = $p2;
 $4 = $p3;
 if ((_pipe($2 | 0) | 0) != -1) {
  do {
   if ((_pipe($3 | 0) | 0) != -1) {
    if ((_pipe($4 | 0) | 0) != -1) {
     $1 = 0;
     $48 = $1;
     STACKTOP = sp;
     return $48 | 0;
    } else {
     $error = HEAP32[(___errno_location() | 0) >> 2] | 0;
     _close(HEAP32[$3 >> 2] | 0) | 0;
     _close(HEAP32[$3 + 4 >> 2] | 0) | 0;
     break;
    }
   } else {
    $error = HEAP32[(___errno_location() | 0) >> 2] | 0;
   }
  } while (0);
  _close(HEAP32[$2 >> 2] | 0) | 0;
  _close(HEAP32[$2 + 4 >> 2] | 0) | 0;
 } else {
  $error = HEAP32[(___errno_location() | 0) >> 2] | 0;
 }
 $46 = _strerror($error | 0) | 0;
 __ZL3errPKcz(13880, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $46, tempVarArgs) | 0);
 STACKTOP = tempVarArgs;
 $1 = -1;
 $48 = $1;
 STACKTOP = sp;
 return $48 | 0;
}
function __ZL14LoadSoundFile2PKc($fname) {
 $fname = $fname | 0;
 var $1 = 0, $2 = 0, $ix = 0, $43 = 0, $47 = 0, $59 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = $fname;
 $ix = 0;
 while (1) {
  if (($ix | 0) >= (HEAP32[1358] | 0)) {
   break;
  }
  if ((HEAP32[36532 + ($ix << 4) >> 2] | 0) != 0) {
   if ((_strcmp($2 | 0, HEAP32[36532 + ($ix << 4) >> 2] | 0) | 0) == 0) {
    label = 5;
    break;
   }
  }
  $ix = $ix + 1 | 0;
 }
 if ((label | 0) == 5) {
  $1 = $ix;
  $59 = $1;
  STACKTOP = sp;
  return $59 | 0;
 }
 HEAP32[5068] = (HEAP32[5068] | 0) + 1;
 if ((HEAP32[5068] | 0) >= 4) {
  HEAP32[5068] = 0;
 }
 if ((__ZL13LoadSoundFilePKci($2, HEAP32[5068] | 0) | 0) != 0) {
  $1 = -1;
  $59 = $1;
  STACKTOP = sp;
  return $59 | 0;
 } else {
  $43 = HEAP32[36532 + ($ix << 4) >> 2] | 0;
  $47 = _realloc($43, (_strlen($2 | 0) | 0) + 1 | 0) | 0;
  HEAP32[36532 + (HEAP32[5068] << 4) >> 2] = $47;
  _strcpy(HEAP32[36532 + (HEAP32[5068] << 4) >> 2] | 0, $2 | 0) | 0;
  $1 = HEAP32[5068] | 0;
  $59 = $1;
  STACKTOP = sp;
  return $59 | 0;
 }
 return 0;
}
function _reset_MBR() {
 var $1 = 0, $result = 0, $success = 0, $dummybuf = 0, $46 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 4096 | 0;
 $dummybuf = sp | 0;
 $success = 1;
 if ((HEAP32[26688] | 0) == 1) {
  $1 = 1;
  $46 = $1;
  STACKTOP = sp;
  return $46 | 0;
 }
 if ((HEAP32[26928] | 0) == 0) {
  $1 = 0;
  $46 = $1;
  STACKTOP = sp;
  return $46 | 0;
 }
 if ((_kill(HEAP32[26928] | 0, 10) | 0) == -1) {
  $success = 0;
 }
 __ZL17free_pending_datav();
 $result = _write(HEAP32[31352] | 0, 9936, 3) | 0;
 if (($result | 0) != 3) {
  $success = 0;
 }
 do {
  $result = _read(HEAP32[28582] | 0, $dummybuf | 0, 4096) | 0;
 } while (($result | 0) > 0);
 if (($result | 0) != -1) {
  label = 14;
 } else {
  if ((HEAP32[(___errno_location() | 0) >> 2] | 0) != 11) {
   label = 14;
  }
 }
 if ((label | 0) == 14) {
  $success = 0;
 }
 do {
  if ((__ZL17mbrola_has_errorsv() | 0) == 0) {
   if (($success | 0) == 0) {
    break;
   }
   HEAP32[26688] = 1;
  }
 } while (0);
 $1 = $success;
 $46 = $1;
 STACKTOP = sp;
 return $46 | 0;
}
function _sonicReadShortFromStream($stream, $samples, $maxSamples) {
 $stream = $stream | 0;
 $samples = $samples | 0;
 $maxSamples = $maxSamples | 0;
 var $1 = 0, $2 = 0, $4 = 0, $numSamples = 0, $remainingSamples = 0, $49 = 0, $62 = 0, sp = 0;
 sp = STACKTOP;
 $2 = $stream;
 $4 = $maxSamples;
 $numSamples = HEAP32[$2 + 48 >> 2] | 0;
 $remainingSamples = 0;
 if (($numSamples | 0) == 0) {
  $1 = 0;
  $62 = $1;
  STACKTOP = sp;
  return $62 | 0;
 }
 if (($numSamples | 0) > ($4 | 0)) {
  $remainingSamples = $numSamples - $4 | 0;
  $numSamples = $4;
 }
 _memcpy($samples | 0, HEAP32[$2 + 4 >> 2] | 0, Math_imul($numSamples << 1, HEAP32[$2 + 28 >> 2] | 0) | 0) | 0;
 if (($remainingSamples | 0) > 0) {
  $49 = (HEAP32[$2 + 4 >> 2] | 0) + ((Math_imul($numSamples, HEAP32[$2 + 28 >> 2] | 0) | 0) << 1) | 0;
  _memmove(HEAP32[$2 + 4 >> 2] | 0, $49 | 0, Math_imul($remainingSamples << 1, HEAP32[$2 + 28 >> 2] | 0) | 0) | 0;
 }
 HEAP32[$2 + 48 >> 2] = $remainingSamples;
 $1 = $numSamples;
 $62 = $1;
 STACKTOP = sp;
 return $62 | 0;
}
function __ZL16SetPitchFormantsv() {
 var $ix = 0, $factor = 0, $pitch_value = 0, $1 = 0, $27 = 0, $48 = 0, $61 = 0, sp = 0;
 sp = STACKTOP;
 $factor = 256;
 $1 = HEAP32[19605] | 0;
 $pitch_value = $1;
 if (($1 | 0) > 101) {
  $pitch_value = 101;
 }
 if (($pitch_value | 0) > 50) {
  $factor = ((($pitch_value - 50 | 0) * 25 | 0 | 0) / 50 | 0) + 256 | 0;
 }
 $ix = 0;
 while (1) {
  if (($ix | 0) > 5) {
   break;
  }
  $27 = ((Math_imul(HEAP16[(HEAP32[8292] | 0) + 236 + ($ix << 1) >> 1] | 0, $factor) | 0) / 256 | 0) & 65535;
  HEAP16[(HEAP32[8292] | 0) + 164 + ($ix << 1) >> 1] = $27;
  $ix = $ix + 1 | 0;
 }
 $factor = (HEAP32[19610] | 0) * 3 | 0;
 $48 = ((Math_imul(HEAP16[(HEAP32[8292] | 0) + 254 >> 1] | 0, 256 - ($factor << 1) | 0) | 0) / 256 | 0) & 65535;
 HEAP16[(HEAP32[8292] | 0) + 182 >> 1] = $48;
 $61 = ((Math_imul(HEAP16[(HEAP32[8292] | 0) + 256 >> 1] | 0, 256 - $factor | 0) | 0) / 256 | 0) & 65535;
 HEAP16[(HEAP32[8292] | 0) + 184 >> 1] = $61;
 STACKTOP = sp;
 return;
}
function __Z6LookupP10TranslatorPKcPc($tr, $word, $ph_out) {
 $tr = $tr | 0;
 $word = $word | 0;
 $ph_out = $ph_out | 0;
 var $1 = 0, $3 = 0, $found = 0, $flags = 0, $say_as = 0, $word1 = 0, $text = 0, $27 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96 | 0;
 $flags = sp | 0;
 $word1 = sp + 8 | 0;
 $text = sp + 16 | 0;
 $1 = $tr;
 $3 = $ph_out;
 HEAP32[$word1 >> 2] = $word;
 HEAP32[$flags >> 2] = 0;
 HEAP32[$flags + 4 >> 2] = 1073741824;
 $found = __Z14LookupDictListP10TranslatorPPcS1_PjiP8WORD_TAB($1, $word1, $3, $flags | 0, 2, 0) | 0;
 if ((HEAP32[$flags >> 2] & 536870912 | 0) == 0) {
  $27 = $found;
  STACKTOP = sp;
  return $27 | 0;
 }
 $say_as = HEAP32[19464] | 0;
 HEAP32[19464] = 0;
 HEAP8[$text | 0] = 0;
 __Z8strncpy0PcPKci($text + 1 | 0, HEAP32[$word1 >> 2] | 0, 80);
 $found = __Z13TranslateWordP10TranslatorPciP8WORD_TABS1_($1, $text + 1 | 0, 0, 0, 0) | 0;
 _strcpy($3 | 0, 33176) | 0;
 HEAP32[19464] = $say_as;
 $27 = $found;
 STACKTOP = sp;
 return $27 | 0;
}
function __ZL15downSampleInputP17sonicStreamStructPsi($stream, $samples, $skip) {
 $stream = $stream | 0;
 $samples = $samples | 0;
 $skip = $skip | 0;
 var $1 = 0, $2 = 0, $3 = 0, $numSamples = 0, $samplesPerValue = 0, $i = 0, $j = 0, $value = 0, $downSamples = 0, $27 = 0, $42 = 0, sp = 0;
 sp = STACKTOP;
 $1 = $stream;
 $2 = $samples;
 $3 = $skip;
 $numSamples = (HEAP32[$1 + 64 >> 2] | 0) / ($3 | 0) | 0;
 $samplesPerValue = Math_imul(HEAP32[$1 + 28 >> 2] | 0, $3) | 0;
 $downSamples = HEAP32[$1 + 12 >> 2] | 0;
 $i = 0;
 while (1) {
  if (($i | 0) >= ($numSamples | 0)) {
   break;
  }
  $value = 0;
  $j = 0;
  while (1) {
   if (($j | 0) >= ($samplesPerValue | 0)) {
    break;
   }
   $27 = $2;
   $2 = $27 + 2 | 0;
   $value = $value + (HEAP16[$27 >> 1] | 0) | 0;
   $j = $j + 1 | 0;
  }
  $value = ($value | 0) / ($samplesPerValue | 0) | 0;
  $42 = $downSamples;
  $downSamples = $42 + 2 | 0;
  HEAP16[$42 >> 1] = $value;
  $i = $i + 1 | 0;
 }
 STACKTOP = sp;
 return;
}
function _towlower($c) {
 $c = $c | 0;
 var $1 = 0, $2 = 0, $x = 0, $ix = 0, $16 = 0, $53 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = $c;
 if ($2 >>> 0 < 128 >>> 0) {
  $1 = _tolower($2 | 0) | 0;
  $53 = $1;
  STACKTOP = sp;
  return $53 | 0;
 }
 do {
  if ($2 >>> 0 <= 591 >>> 0) {
   $16 = HEAPU8[112 + ($2 - 128) | 0] | 0;
   $x = $16;
   if (($16 | 0) >= 254) {
    break;
   }
   do {
    if (($x | 0) == 253) {
     $ix = 0;
     while (1) {
      if ((HEAP16[72 + ($ix << 1) >> 1] | 0) == 0) {
       label = 13;
       break;
      }
      if ((HEAP16[72 + ($ix << 1) >> 1] | 0) == ($2 | 0)) {
       break;
      }
      $ix = $ix + 2 | 0;
     }
     if ((label | 0) == 13) {
      break;
     }
     $1 = HEAP16[72 + ($ix + 1 << 1) >> 1] | 0;
     $53 = $1;
     STACKTOP = sp;
     return $53 | 0;
    }
   } while (0);
   $1 = $2 + $x | 0;
   $53 = $1;
   STACKTOP = sp;
   return $53 | 0;
  }
 } while (0);
 $1 = $2;
 $53 = $1;
 STACKTOP = sp;
 return $53 | 0;
}
function __Z10KlattReseti($control) {
 $control = $control | 0;
 var $1 = 0, $r_ix = 0, sp = 0;
 sp = STACKTOP;
 $1 = $control;
 if (($1 | 0) == 2) {
  HEAP32[31361] = ((HEAP32[31360] | 0) * 950 | 0 | 0) / 1e4 | 0;
  HEAP32[31362] = ((HEAP32[31360] | 0) * 630 | 0 | 0) / 1e4 | 0;
  HEAPF64[15688] = -3.1415927 / +(HEAP32[31360] | 0);
  HEAPF64[15689] = +HEAPF64[15688] * -2.0;
  __ZL6setabcllP11resonator_t(HEAP32[31361] | 0, HEAP32[31362] | 0, 126776);
 }
 if (($1 | 0) > 0) {
  HEAP32[31366] = 0;
  HEAP32[31368] = 0;
  HEAP32[31369] = 0;
  HEAP32[31370] = 0;
  $r_ix = 17;
  while (1) {
   if (($r_ix | 0) >= 20) {
    break;
   }
   HEAPF64[125648 + ($r_ix << 6) >> 3] = 0.0;
   HEAPF64[125656 + ($r_ix << 6) >> 3] = 0.0;
   $r_ix = $r_ix + 1 | 0;
  }
 }
 $r_ix = 0;
 while (1) {
  if (($r_ix | 0) > 16) {
   break;
  }
  HEAPF64[125648 + ($r_ix << 6) >> 3] = 0.0;
  HEAPF64[125656 + ($r_ix << 6) >> 3] = 0.0;
  $r_ix = $r_ix + 1 | 0;
 }
 STACKTOP = sp;
 return;
}
function __ZL13attrcopy_utf8PcPKwi($buf, $pw, $len) {
 $buf = $buf | 0;
 $pw = $pw | 0;
 $len = $len | 0;
 var $1 = 0, $2 = 0, $3 = 0, $c = 0, $ix = 0, $prev_c = 0, $13 = 0, $15 = 0, $18 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = $buf;
 $2 = $pw;
 $3 = $len;
 $ix = 0;
 $prev_c = 0;
 if (($2 | 0) == 0) {
  $38 = $ix;
  $39 = $1;
  $40 = $39 + $38 | 0;
  HEAP8[$40] = 0;
  $41 = $ix;
  STACKTOP = sp;
  return $41 | 0;
 }
 while (1) {
  if (($ix | 0) < ($3 - 4 | 0)) {
   $13 = $2;
   $2 = $13 + 4 | 0;
   $15 = HEAP32[$13 >> 2] | 0;
   $c = $15;
   $18 = ($15 | 0) != 0;
  } else {
   $18 = 0;
  }
  if (!$18) {
   break;
  }
  if (($c | 0) == 34) {
   if (($prev_c | 0) != 92) {
    label = 8;
    break;
   }
  }
  $ix = $ix + (__Z8utf8_outjPc($c, $1 + $ix | 0) | 0) | 0;
  $prev_c = $c;
 }
 if ((label | 0) == 8) {}
 $38 = $ix;
 $39 = $1;
 $40 = $39 + $38 | 0;
 HEAP8[$40] = 0;
 $41 = $ix;
 STACKTOP = sp;
 return $41 | 0;
}
function __Z13SetVoiceStackP12espeak_VOICEPKc($v, $variant_name) {
 $v = $v | 0;
 $variant_name = $variant_name | 0;
 var $1 = 0, $2 = 0, $sp = 0, sp = 0;
 sp = STACKTOP;
 $1 = $v;
 $2 = $variant_name;
 $sp = 123744;
 if (($1 | 0) == 0) {
  _memset($sp | 0, 0, 76) | 0;
  STACKTOP = sp;
  return;
 }
 if ((HEAP32[$1 + 4 >> 2] | 0) != 0) {
  _strcpy($sp + 56 | 0, HEAP32[$1 + 4 >> 2] | 0) | 0;
 }
 if ((HEAP32[$1 >> 2] | 0) != 0) {
  __Z8strncpy0PcPKci($sp + 16 | 0, HEAP32[$1 >> 2] | 0, 40);
 }
 HEAP32[$sp + 4 >> 2] = HEAPU8[$1 + 14 | 0] | 0;
 HEAP32[$sp + 12 >> 2] = HEAPU8[$1 + 13 | 0] | 0;
 HEAP32[$sp + 8 >> 2] = HEAPU8[$1 + 12 | 0] | 0;
 if ((_memcmp($2 | 0, 16216, 2) | 0) == 0) {
  $2 = $2 + 3 | 0;
 }
 __Z8strncpy0PcPKci(113392, $2, 40);
 HEAP32[32072] = HEAP32[22638];
 HEAP32[32073] = HEAP32[22639];
 HEAP32[32074] = HEAP32[22640];
 HEAP32[32075] = HEAP32[22641];
 HEAP32[32076] = HEAP32[22642];
 HEAP32[32077] = HEAP32[22643];
 STACKTOP = sp;
 return;
}
function __ZL10overlapAddiiPsS_S_($numSamples, $numChannels, $out, $rampDown, $rampUp) {
 $numSamples = $numSamples | 0;
 $numChannels = $numChannels | 0;
 $out = $out | 0;
 $rampDown = $rampDown | 0;
 $rampUp = $rampUp | 0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $o = 0, $u = 0, $d = 0, $i = 0, $t = 0, $31 = 0, sp = 0;
 sp = STACKTOP;
 $1 = $numSamples;
 $2 = $numChannels;
 $3 = $out;
 $4 = $rampDown;
 $5 = $rampUp;
 $i = 0;
 while (1) {
  if (($i | 0) >= ($2 | 0)) {
   break;
  }
  $o = $3 + ($i << 1) | 0;
  $u = $5 + ($i << 1) | 0;
  $d = $4 + ($i << 1) | 0;
  $t = 0;
  while (1) {
   if (($t | 0) >= ($1 | 0)) {
    break;
   }
   $31 = Math_imul(HEAP16[$d >> 1] | 0, $1 - $t | 0) | 0;
   HEAP16[$o >> 1] = ($31 + (Math_imul(HEAP16[$u >> 1] | 0, $t) | 0) | 0) / ($1 | 0) | 0;
   $o = $o + ($2 << 1) | 0;
   $d = $d + ($2 << 1) | 0;
   $u = $u + ($2 << 1) | 0;
   $t = $t + 1 | 0;
  }
  $i = $i + 1 | 0;
 }
 STACKTOP = sp;
 return;
}
function ___remdi3($a$0, $a$1, $b$0, $b$1) {
 $a$0 = $a$0 | 0;
 $a$1 = $a$1 | 0;
 $b$0 = $b$0 | 0;
 $b$1 = $b$1 | 0;
 var $rem = 0, $1$0 = 0, $1$1 = 0, $2$0 = 0, $2$1 = 0, $4$0 = 0, $4$1 = 0, $10$0 = 0, $10$1 = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 8 | 0;
 $rem = __stackBase__ | 0;
 $1$0 = $a$1 >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
 $1$1 = (($a$1 | 0) < 0 ? -1 : 0) >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
 $2$0 = $b$1 >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
 $2$1 = (($b$1 | 0) < 0 ? -1 : 0) >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
 $4$0 = _i64Subtract($1$0 ^ $a$0, $1$1 ^ $a$1, $1$0, $1$1) | 0;
 $4$1 = tempRet0;
 ___udivmoddi4($4$0, $4$1, _i64Subtract($2$0 ^ $b$0, $2$1 ^ $b$1, $2$0, $2$1) | 0, tempRet0, $rem) | 0;
 $10$0 = _i64Subtract(HEAP32[$rem >> 2] ^ $1$0, HEAP32[$rem + 4 >> 2] ^ $1$1, $1$0, $1$1) | 0;
 $10$1 = tempRet0;
 STACKTOP = __stackBase__;
 return (tempRet0 = $10$1, $10$0) | 0;
}
function __ZL12OpenWaveFilePKci($path, $rate) {
 $path = $path | 0;
 $rate = $rate | 0;
 var $1 = 0, $2 = 0, $3 = 0, $48 = 0, sp = 0;
 sp = STACKTOP;
 $2 = $path;
 $3 = $rate;
 if (($2 | 0) == 0) {
  $1 = 2;
  $48 = $1;
  STACKTOP = sp;
  return $48 | 0;
 }
 while (1) {
  if ((_isspace(HEAP8[$2] | 0) | 0) == 0) {
   break;
  }
  $2 = $2 + 1 | 0;
 }
 HEAP32[19594] = 0;
 if ((HEAP8[$2 | 0] | 0) != 0) {
  if ((_strcmp($2 | 0, 17528) | 0) == 0) {
   HEAP32[19594] = HEAP32[_stdout >> 2];
  } else {
   HEAP32[19594] = _fopen($2 | 0, 14112) | 0;
  }
 }
 if ((HEAP32[19594] | 0) != 0) {
  _fwrite(21064, 1, 24, HEAP32[19594] | 0) | 0;
  __Z11Write4BytesP8_IO_FILEi(HEAP32[19594] | 0, $3);
  __Z11Write4BytesP8_IO_FILEi(HEAP32[19594] | 0, $3 << 1);
  _fwrite(21096, 1, 12, HEAP32[19594] | 0) | 0;
  $1 = 0;
  $48 = $1;
  STACKTOP = sp;
  return $48 | 0;
 } else {
  $1 = 1;
  $48 = $1;
  STACKTOP = sp;
  return $48 | 0;
 }
 return 0;
}
function __ZL7SpeedUpPsiii($outbuf, $length_in, $length_out, $end_of_text) {
 $outbuf = $outbuf | 0;
 $length_in = $length_in | 0;
 $length_out = $length_out | 0;
 $end_of_text = $end_of_text | 0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $16 = 0.0, $44 = 0, sp = 0;
 sp = STACKTOP;
 $2 = $outbuf;
 $3 = $length_in;
 $4 = $length_out;
 $5 = $end_of_text;
 if (($3 | 0) > 0) {
  if ((HEAP32[28398] | 0) == 0) {
   HEAP32[28398] = _sonicCreateStream(22050, 1) | 0;
  }
  $16 = +_sonicGetSpeed(HEAP32[28398] | 0);
  if ($16 != +HEAPF64[83]) {
   _sonicSetSpeed(HEAP32[28398] | 0, +HEAPF64[83]);
  }
  _sonicWriteShortToStream(HEAP32[28398] | 0, $2, $3) | 0;
 }
 if ((HEAP32[28398] | 0) == 0) {
  $1 = 0;
  $44 = $1;
  STACKTOP = sp;
  return $44 | 0;
 }
 if (($5 | 0) != 0) {
  _sonicFlushStream(HEAP32[28398] | 0) | 0;
 }
 $1 = _sonicReadShortFromStream(HEAP32[28398] | 0, $2, $4) | 0;
 $44 = $1;
 STACKTOP = sp;
 return $44 | 0;
}
function __ZL14sampled_sourcei($source_num) {
 $source_num = $source_num | 0;
 var $itemp = 0, $ftemp = 0.0, $result = 0.0, $diff_value = 0.0, $samples = 0, $58 = 0.0, sp = 0;
 sp = STACKTOP;
 if (($source_num | 0) == 0) {
  $samples = 27752;
  HEAP32[31398] = 100;
 } else {
  $samples = 26864;
  HEAP32[31398] = 256;
 }
 if ((HEAP32[31368] | 0) != 0) {
  $ftemp = +(HEAP32[31366] | 0);
  $ftemp = $ftemp / +(HEAP32[31368] | 0);
  $ftemp = $ftemp * +(HEAP32[31398] | 0);
  $itemp = ~~$ftemp;
  $diff_value = +(HEAP16[$samples + ($itemp + 1 << 1) >> 1] | 0) - +(HEAP16[$samples + ($itemp << 1) >> 1] | 0);
  $diff_value = $diff_value * ($ftemp - +($itemp | 0));
  $result = +(HEAP16[$samples + ($itemp << 1) >> 1] | 0) + $diff_value;
  $result = $result * +HEAPF64[15700];
  $58 = $result;
  STACKTOP = sp;
  return +$58;
 } else {
  $result = 0.0;
  $58 = $result;
  STACKTOP = sp;
  return +$58;
 }
 return 0.0;
}
function __Z8utf8_outjPc($c, $buf) {
 $c = $c | 0;
 $buf = $buf | 0;
 var $1 = 0, $2 = 0, $3 = 0, $n_bytes = 0, $j = 0, $shift = 0, $65 = 0, sp = 0;
 sp = STACKTOP;
 $2 = $c;
 $3 = $buf;
 if ($2 >>> 0 < 128 >>> 0) {
  HEAP8[$3 | 0] = $2;
  $1 = 1;
  $65 = $1;
  STACKTOP = sp;
  return $65 | 0;
 }
 if ($2 >>> 0 >= 1114112 >>> 0) {
  HEAP8[$3 | 0] = 32;
  $1 = 1;
  $65 = $1;
  STACKTOP = sp;
  return $65 | 0;
 }
 if ($2 >>> 0 < 2048 >>> 0) {
  $n_bytes = 1;
 } else {
  if ($2 >>> 0 < 65536 >>> 0) {
   $n_bytes = 2;
  } else {
   $n_bytes = 3;
  }
 }
 $shift = $n_bytes * 6 | 0;
 HEAP8[$3 | 0] = HEAPU8[21280 + $n_bytes | 0] | 0 | $2 >>> ($shift >>> 0);
 $j = 0;
 while (1) {
  if (($j | 0) >= ($n_bytes | 0)) {
   break;
  }
  $shift = $shift - 6 | 0;
  HEAP8[$3 + ($j + 1) | 0] = ($2 >>> ($shift >>> 0) & 63) + 128;
  $j = $j + 1 | 0;
 }
 $1 = $n_bytes + 1 | 0;
 $65 = $1;
 STACKTOP = sp;
 return $65 | 0;
}
function __Z9towupper2j($c) {
 $c = $c | 0;
 var $1 = 0, $2 = 0, $ix = 0, $53 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = $c;
 if ($2 >>> 0 > 591 >>> 0) {
  $1 = _towupper($2) | 0;
  $53 = $1;
  STACKTOP = sp;
  return $53 | 0;
 }
 if ((__Z9towlower2j($2 - 32 | 0) | 0) == ($2 | 0)) {
  $1 = $2 - 32 | 0;
  $53 = $1;
  STACKTOP = sp;
  return $53 | 0;
 }
 if ((__Z9towlower2j($2 - 1 | 0) | 0) == ($2 | 0)) {
  $1 = $2 - 1 | 0;
  $53 = $1;
  STACKTOP = sp;
  return $53 | 0;
 }
 $ix = 0;
 while (1) {
  if ((HEAP16[8 + ($ix << 1) >> 1] | 0) == 0) {
   label = 13;
   break;
  }
  if ((HEAP16[8 + ($ix << 1) >> 1] | 0) == ($2 | 0)) {
   label = 10;
   break;
  }
  $ix = $ix + 2 | 0;
 }
 if ((label | 0) == 10) {
  $1 = HEAP16[8 + ($ix + 1 << 1) >> 1] | 0;
  $53 = $1;
  STACKTOP = sp;
  return $53 | 0;
 } else if ((label | 0) == 13) {
  $1 = $2;
  $53 = $1;
  STACKTOP = sp;
  return $53 | 0;
 }
 return 0;
}
function _scalbn($x, $n) {
 $x = +$x;
 $n = $n | 0;
 var $3 = 0.0, $4 = 0, $8 = 0, $13 = 0.0, $14 = 0, $18 = 0, $_0 = 0, $y_0 = 0.0;
 do {
  if (($n | 0) > 1023) {
   $3 = $x * 8.98846567431158e+307;
   $4 = $n - 1023 | 0;
   if (($4 | 0) <= 1023) {
    $y_0 = $3;
    $_0 = $4;
    break;
   }
   $8 = $n - 2046 | 0;
   $y_0 = $3 * 8.98846567431158e+307;
   $_0 = ($8 | 0) > 1023 ? 1023 : $8;
  } else {
   if (($n | 0) >= -1022) {
    $y_0 = $x;
    $_0 = $n;
    break;
   }
   $13 = $x * 2.2250738585072014e-308;
   $14 = $n + 1022 | 0;
   if (($14 | 0) >= -1022) {
    $y_0 = $13;
    $_0 = $14;
    break;
   }
   $18 = $n + 2044 | 0;
   $y_0 = $13 * 2.2250738585072014e-308;
   $_0 = ($18 | 0) < -1022 ? -1022 : $18;
  }
 } while (0);
 return +($y_0 * (HEAP32[tempDoublePtr >> 2] = 0 << 20 | 0 >>> 12, HEAP32[tempDoublePtr + 4 >> 2] = $_0 + 1023 << 20 | 0 >>> 12, +HEAPF64[tempDoublePtr >> 3]));
}
function __ZL17SetUpPhonemeTableii($number, $recursing) {
 $number = $number | 0;
 $recursing = $recursing | 0;
 var $1 = 0, $2 = 0, $ix = 0, $ph_code = 0, $phtab = 0, $10 = 0, $49 = 0, sp = 0;
 sp = STACKTOP;
 $1 = $number;
 $2 = $recursing;
 if (($2 | 0) == 0) {
  _memset(43e3, 0, 256) | 0;
 }
 $10 = HEAP32[38240 + ($1 * 48 | 0) >> 2] | 0;
 if (($10 | 0) > 0) {
  __ZL17SetUpPhonemeTableii($10 - 1 | 0, 1);
 }
 $phtab = HEAP32[38232 + ($1 * 48 | 0) >> 2] | 0;
 $ix = 0;
 while (1) {
  if (($ix | 0) >= (HEAP32[38236 + ($1 * 48 | 0) >> 2] | 0)) {
   break;
  }
  $ph_code = HEAPU8[$phtab + ($ix << 4) + 10 | 0] | 0;
  HEAP32[43256 + ($ph_code << 2) >> 2] = $phtab + ($ix << 4);
  if (($ph_code | 0) > (HEAP32[19560] | 0)) {
   HEAP32[19560] = $ph_code;
  }
  if (($2 | 0) == 0) {
   $49 = 43e3 + $ph_code | 0;
   HEAP8[$49] = HEAPU8[$49] | 0 | 1;
  }
  $ix = $ix + 1 | 0;
 }
 STACKTOP = sp;
 return;
}
function __Z11AddNameDataPKci($name, $wide) {
 $name = $name | 0;
 $wide = $wide | 0;
 var $1 = 0, $2 = 0, $len = 0, $32 = 0, $42 = 0, $52 = 0, sp = 0;
 sp = STACKTOP;
 $2 = $name;
 if (($wide | 0) != 0) {
  $len = (_wcslen($2) | 0) + 1 << 2;
  HEAP32[31346] = (((HEAP32[31346] | 0) + 4 - 1 | 0) >>> 0) % 4 | 0;
 } else {
  $len = (_strlen($2 | 0) | 0) + 1 | 0;
 }
 do {
  if (((HEAP32[28868] | 0) + $len | 0) >= (HEAP32[31346] | 0)) {
   $32 = _realloc(HEAP32[19552] | 0, (HEAP32[28868] | 0) + $len + 1e3 | 0) | 0;
   if (($32 | 0) != 0) {
    HEAP32[19552] = $32;
    HEAP32[31346] = (HEAP32[28868] | 0) + $len + 1e3;
    break;
   }
   $1 = -1;
   $52 = $1;
   STACKTOP = sp;
   return $52 | 0;
  }
 } while (0);
 $42 = HEAP32[28868] | 0;
 _memcpy((HEAP32[19552] | 0) + $42 | 0, $2 | 0, $len) | 0;
 HEAP32[28868] = (HEAP32[28868] | 0) + $len;
 $1 = $42;
 $52 = $1;
 STACKTOP = sp;
 return $52 | 0;
}
function __ZL7attrcmpPKwPKc($string1, $string2) {
 $string1 = $string1 | 0;
 $string2 = $string2 | 0;
 var $1 = 0, $2 = 0, $3 = 0, $ix = 0, $26 = 0, $53 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = $string1;
 $3 = $string2;
 if (($2 | 0) == 0) {
  $1 = 1;
  $53 = $1;
  STACKTOP = sp;
  return $53 | 0;
 }
 $ix = 0;
 while (1) {
  if ((HEAP32[$2 + ($ix << 2) >> 2] | 0) == (HEAP8[$3 + $ix | 0] | 0)) {
   $26 = (HEAP32[$2 + ($ix << 2) >> 2] | 0) != 0;
  } else {
   $26 = 0;
  }
  if (!$26) {
   break;
  }
  $ix = $ix + 1 | 0;
 }
 if ((HEAP32[$2 + ($ix << 2) >> 2] | 0) == 34) {
  label = 11;
 } else {
  if ((HEAP32[$2 + ($ix << 2) >> 2] | 0) == 39) {
   label = 11;
  }
 }
 do {
  if ((label | 0) == 11) {
   if ((HEAP8[$3 + $ix | 0] | 0) != 0) {
    break;
   }
   $1 = 0;
   $53 = $1;
   STACKTOP = sp;
   return $53 | 0;
  }
 } while (0);
 $1 = 1;
 $53 = $1;
 STACKTOP = sp;
 return $53 | 0;
}
function __ZL20compile_dictlist_endP8_IO_FILE($f_out) {
 $f_out = $f_out | 0;
 var $1 = 0, $hash = 0, $p = 0, $30 = 0, $31 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 8 | 0;
 $p = sp | 0;
 $1 = $f_out;
 if ((HEAP32[28344] | 0) != 0) {}
 $hash = 0;
 while (1) {
  if (($hash | 0) >= 1024) {
   break;
  }
  HEAP32[$p >> 2] = HEAP32[119584 + ($hash << 2) >> 2];
  HEAP32[115488 + ($hash << 2) >> 2] = _ftell($1 | 0) | 0;
  while (1) {
   if ((HEAP32[$p >> 2] | 0) == 0) {
    break;
   }
   _fwrite((HEAP32[$p >> 2] | 0) + 4 | 0, HEAP8[(HEAP32[$p >> 2] | 0) + 4 | 0] | 0, 1, $1 | 0) | 0;
   $30 = $p;
   $31 = HEAP32[$p >> 2] | 0;
   HEAP8[$30] = HEAP8[$31] | 0;
   HEAP8[$30 + 1 | 0] = HEAP8[$31 + 1 | 0] | 0;
   HEAP8[$30 + 2 | 0] = HEAP8[$31 + 2 | 0] | 0;
   HEAP8[$30 + 3 | 0] = HEAP8[$31 + 3 | 0] | 0;
  }
  _fputc(0, $1 | 0) | 0;
  $hash = $hash + 1 | 0;
 }
 STACKTOP = sp;
 return;
}
function __ZL14WavegenSetEchov() {
 var $delay = 0, $amp = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[26836] = HEAP32[(HEAP32[8292] | 0) + 112 >> 2];
 $delay = HEAP32[(HEAP32[8292] | 0) + 96 >> 2] | 0;
 $amp = HEAP32[(HEAP32[8292] | 0) + 100 >> 2] | 0;
 if (($delay | 0) >= 5500) {
  $delay = 5499;
 }
 if (($amp | 0) > 100) {
  $amp = 100;
 }
 _memset(79496, 0, 11e3) | 0;
 HEAP32[19870] = 0;
 if ((HEAP32[19609] | 0) > 0) {
  $amp = HEAP32[19609] | 0;
  $delay = 130;
 }
 if (($delay | 0) == 0) {
  $amp = 0;
 }
 HEAP32[19872] = (Math_imul($delay, HEAP32[9496] | 0) | 0) / 1e3 | 0;
 HEAP32[30926] = HEAP32[19872];
 if (($amp | 0) == 0) {
  HEAP32[30926] = 0;
 }
 if (($amp | 0) > 20) {
  HEAP32[30926] = HEAP32[19872] << 1;
 }
 HEAP32[22624] = $amp;
 HEAP32[6658] = __Z12GetAmplitudev() | 0;
 HEAP32[6658] = (Math_imul(HEAP32[6658] | 0, 500 - $amp | 0) | 0) / 500 | 0;
 STACKTOP = sp;
 return;
}
function __ZL10attrnumberPKwii($pw, $default_value, $type) {
 $pw = $pw | 0;
 $default_value = $default_value | 0;
 $type = $type | 0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $value = 0, $23 = 0, $42 = 0, sp = 0;
 sp = STACKTOP;
 $2 = $pw;
 $3 = $default_value;
 $4 = $type;
 $value = 0;
 do {
  if (($2 | 0) != 0) {
   if ((__Z9IsDigit09j(HEAP32[$2 >> 2] | 0) | 0) == 0) {
    break;
   }
   while (1) {
    if ((__Z9IsDigit09j(HEAP32[$2 >> 2] | 0) | 0) == 0) {
     break;
    }
    $23 = $2;
    $2 = $23 + 4 | 0;
    $value = ($value * 10 | 0) + (HEAP32[$23 >> 2] | 0) - 48 | 0;
   }
   do {
    if (($4 | 0) == 1) {
     if ((_towlower(HEAP32[$2 >> 2] | 0) | 0) != 115) {
      break;
     }
     $value = $value * 1e3 | 0;
    }
   } while (0);
   $1 = $value;
   $42 = $1;
   STACKTOP = sp;
   return $42 | 0;
  }
 } while (0);
 $1 = $3;
 $42 = $1;
 STACKTOP = sp;
 return $42 | 0;
}
function __Z14ReadTonePointsPcPi($string, $tone_pts) {
 $string = $string | 0;
 $tone_pts = $tone_pts | 0;
 var $1 = 0, $2 = 0, $ix = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 $1 = $string;
 $2 = $tone_pts;
 $ix = 0;
 while (1) {
  if (($ix | 0) >= 12) {
   break;
  }
  HEAP32[$2 + ($ix << 2) >> 2] = -1;
  $ix = $ix + 1 | 0;
 }
 _sscanf($1 | 0, 13704, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 80 | 0, HEAP32[tempVarArgs >> 2] = $2, HEAP32[tempVarArgs + 8 >> 2] = $2 + 4, HEAP32[tempVarArgs + 16 >> 2] = $2 + 8, HEAP32[tempVarArgs + 24 >> 2] = $2 + 12, HEAP32[tempVarArgs + 32 >> 2] = $2 + 16, HEAP32[tempVarArgs + 40 >> 2] = $2 + 20, HEAP32[tempVarArgs + 48 >> 2] = $2 + 24, HEAP32[tempVarArgs + 56 >> 2] = $2 + 28, HEAP32[tempVarArgs + 64 >> 2] = $2 + 32, HEAP32[tempVarArgs + 72 >> 2] = $2 + 36, tempVarArgs) | 0) | 0;
 STACKTOP = tempVarArgs;
 STACKTOP = sp;
 return;
}
function _realloc($oldmem, $bytes) {
 $oldmem = $oldmem | 0;
 $bytes = $bytes | 0;
 var $14 = 0, $17 = 0, $23 = 0, $28 = 0, $33 = 0, $mem_0 = 0;
 if (($oldmem | 0) == 0) {
  $mem_0 = _malloc($bytes) | 0;
  return $mem_0 | 0;
 }
 if ($bytes >>> 0 > 4294967231 >>> 0) {
  HEAP32[(___errno_location() | 0) >> 2] = 12;
  $mem_0 = 0;
  return $mem_0 | 0;
 }
 if ($bytes >>> 0 < 11 >>> 0) {
  $14 = 16;
 } else {
  $14 = $bytes + 11 & -8;
 }
 $17 = _try_realloc_chunk($oldmem - 8 | 0, $14) | 0;
 if (($17 | 0) != 0) {
  $mem_0 = $17 + 8 | 0;
  return $mem_0 | 0;
 }
 $23 = _malloc($bytes) | 0;
 if (($23 | 0) == 0) {
  $mem_0 = 0;
  return $mem_0 | 0;
 }
 $28 = HEAP32[$oldmem - 4 >> 2] | 0;
 $33 = ($28 & -8) - (($28 & 3 | 0) == 0 ? 8 : 4) | 0;
 _memcpy($23 | 0, $oldmem | 0, $33 >>> 0 < $bytes >>> 0 ? $33 : $bytes) | 0;
 _free($oldmem);
 $mem_0 = $23;
 return $mem_0 | 0;
}
function __ZL28addShortSamplesToInputBufferP17sonicStreamStructPsi($stream, $samples, $numSamples) {
 $stream = $stream | 0;
 $samples = $samples | 0;
 $numSamples = $numSamples | 0;
 var $1 = 0, $2 = 0, $4 = 0, $26 = 0, $37 = 0, $41 = 0, sp = 0;
 sp = STACKTOP;
 $2 = $stream;
 $4 = $numSamples;
 if (($4 | 0) == 0) {
  $1 = 1;
  $41 = $1;
  STACKTOP = sp;
  return $41 | 0;
 }
 if ((__ZL26enlargeInputBufferIfNeededP17sonicStreamStructi($2, $4) | 0) != 0) {
  $26 = (HEAP32[$2 >> 2] | 0) + ((Math_imul(HEAP32[$2 + 44 >> 2] | 0, HEAP32[$2 + 28 >> 2] | 0) | 0) << 1) | 0;
  _memcpy($26 | 0, $samples | 0, Math_imul($4 << 1, HEAP32[$2 + 28 >> 2] | 0) | 0) | 0;
  $37 = $2 + 44 | 0;
  HEAP32[$37 >> 2] = (HEAP32[$37 >> 2] | 0) + $4;
  $1 = 1;
  $41 = $1;
  STACKTOP = sp;
  return $41 | 0;
 } else {
  $1 = 0;
  $41 = $1;
  STACKTOP = sp;
  return $41 | 0;
 }
 return 0;
}
function __Z15TranslateNumberP10TranslatorPcS1_PjP8WORD_TABi($tr, $word1, $ph_out, $flags, $wtab, $control) {
 $tr = $tr | 0;
 $word1 = $word1 | 0;
 $ph_out = $ph_out | 0;
 $flags = $flags | 0;
 $wtab = $wtab | 0;
 $control = $control | 0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $34 = 0, sp = 0;
 sp = STACKTOP;
 $2 = $tr;
 $3 = $word1;
 $4 = $ph_out;
 $5 = $flags;
 $6 = $wtab;
 $7 = $control;
 do {
  if ((HEAP32[19464] | 0) != 193) {
   if ((HEAP32[$6 >> 2] & 524288 | 0) != 0) {
    break;
   }
   if ((HEAP32[$2 + 200 >> 2] | 0) != 0) {
    $1 = __ZL17TranslateNumber_1P10TranslatorPcS1_PjP8WORD_TABi($2, $3, $4, $5, $6, $7) | 0;
    $34 = $1;
    STACKTOP = sp;
    return $34 | 0;
   } else {
    $1 = 0;
    $34 = $1;
    STACKTOP = sp;
    return $34 | 0;
   }
  }
 } while (0);
 $1 = 0;
 $34 = $1;
 STACKTOP = sp;
 return $34 | 0;
}
function __ZL11fgets_stripPciP8_IO_FILE($buf, $size, $f_in) {
 $buf = $buf | 0;
 $size = $size | 0;
 $f_in = $f_in | 0;
 var $1 = 0, $2 = 0, $len = 0, $26 = 0, $37 = 0, $44 = 0, $51 = 0, sp = 0;
 sp = STACKTOP;
 $2 = $buf;
 if ((_fgets($2 | 0, $size | 0, $f_in | 0) | 0) == 0) {
  $1 = 0;
  $51 = $1;
  STACKTOP = sp;
  return $51 | 0;
 }
 if ((HEAP8[$2 | 0] | 0) == 35) {
  HEAP8[$2 | 0] = 0;
  $1 = $2;
  $51 = $1;
  STACKTOP = sp;
  return $51 | 0;
 }
 $len = _strlen($2 | 0) | 0;
 while (1) {
  $26 = $len - 1 | 0;
  $len = $26;
  if (($26 | 0) > 0) {
   $37 = (_isspace(HEAP8[$2 + $len | 0] | 0) | 0) != 0;
  } else {
   $37 = 0;
  }
  if (!$37) {
   break;
  }
  HEAP8[$2 + $len | 0] = 0;
 }
 $44 = _strstr($2 | 0, 18320) | 0;
 if (($44 | 0) != 0) {
  HEAP8[$44] = 0;
 }
 $1 = $2;
 $51 = $1;
 STACKTOP = sp;
 return $51 | 0;
}
function __Z19CheckThousandsGroupPci($word, $group_len) {
 $word = $word | 0;
 $group_len = $group_len | 0;
 var $1 = 0, $2 = 0, $3 = 0, $ix = 0, $35 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = $word;
 $3 = $group_len;
 do {
  if ((__Z9IsDigit09j(HEAP8[$2 + $3 | 0] | 0) | 0) == 0) {
   if ((__Z9IsDigit09j(-1) | 0) != 0) {
    break;
   }
   $ix = 0;
   while (1) {
    if (($ix | 0) >= ($3 | 0)) {
     label = 10;
     break;
    }
    if ((__Z9IsDigit09j(HEAP8[$2 + $ix | 0] | 0) | 0) == 0) {
     label = 7;
     break;
    }
    $ix = $ix + 1 | 0;
   }
   if ((label | 0) == 7) {
    $1 = 0;
    $35 = $1;
    STACKTOP = sp;
    return $35 | 0;
   } else if ((label | 0) == 10) {
    $1 = 1;
    $35 = $1;
    STACKTOP = sp;
    return $35 | 0;
   }
  }
 } while (0);
 $1 = 0;
 $35 = $1;
 STACKTOP = sp;
 return $35 | 0;
}
function __ZL7DoPauseii($length, $control) {
 $length = $length | 0;
 $control = $control | 0;
 var $1 = 0, $len = 0, sp = 0;
 sp = STACKTOP;
 $1 = $length;
 if (($1 | 0) == 0) {
  $len = 0;
 } else {
  $len = __Z11PauseLengthii($1, $control) | 0;
  if ($len >>> 0 < 9e4 >>> 0) {
   $len = ((Math_imul($len, HEAP32[9496] | 0) | 0) >>> 0) / 1e3 | 0;
  } else {
   $len = ((Math_imul($len, (HEAP32[9496] | 0) / 25 | 0) | 0) >>> 0) / 40 | 0;
  }
 }
 __ZL8EndPitchi(1);
 HEAP32[33456 + (HEAP32[8360] << 4) >> 2] = 5;
 HEAP32[33460 + (HEAP32[8360] << 4) >> 2] = $len;
 __Z8WcmdqIncv();
 HEAP32[31356] = 0;
 if ((HEAP32[28512] | 0) == 0) {
  STACKTOP = sp;
  return;
 }
 HEAP32[33456 + (HEAP32[8360] << 4) >> 2] = 14;
 HEAP32[28512] = 0;
 HEAP32[33460 + (HEAP32[8360] << 4) >> 2] = 0;
 __Z8WcmdqIncv();
 STACKTOP = sp;
 return;
}
function __Z9DoSample3P12PHONEME_DATAii($phdata, $length_mod, $amp) {
 $phdata = $phdata | 0;
 $length_mod = $length_mod | 0;
 $amp = $amp | 0;
 var $1 = 0, $2 = 0, $3 = 0, $amp2 = 0, $len = 0, $44 = 0, sp = 0;
 sp = STACKTOP;
 $1 = $phdata;
 $2 = $length_mod;
 $3 = $amp;
 __ZL8EndPitchi(1);
 if (($3 | 0) == -1) {
  $amp2 = $3;
 } else {
  $amp2 = HEAP32[$1 + 92 >> 2] | 0;
  if (($amp2 | 0) == 0) {
   $amp2 = 100;
  }
  $amp2 = ($amp2 << 5 | 0) / 100 | 0;
 }
 HEAP32[9472] = 0;
 if ((HEAP32[$1 + 72 >> 2] | 0) == 0) {
  $len = 0;
  HEAP32[31356] = 0;
  $44 = $len;
  STACKTOP = sp;
  return $44 | 0;
 } else {
  $len = __ZL9DoSample2iiiiii(HEAP32[$1 + 72 >> 2] | 0, 2, HEAP32[$1 + 44 >> 2] << 1, HEAP32[$1 >> 2] | 0, $2, $amp2) | 0;
  HEAP32[31356] = 0;
  $44 = $len;
  STACKTOP = sp;
  return $44 | 0;
 }
 return 0;
}
function __Z15SetIndicLettersP10Translator($tr) {
 $tr = $tr | 0;
 var $1 = 0, sp = 0;
 sp = STACKTOP;
 $1 = $tr;
 _memset($1 + 464 | 0, 0, 256) | 0;
 __ZL18SetLetterBitsRangeP10Translatoriii($1, 0, 4, 20);
 __ZL18SetLetterBitsRangeP10Translatoriii($1, 0, 62, 77);
 __ZL13SetLetterBitsP10TranslatoriPKc($1, 0, 23408);
 __ZL18SetLetterBitsRangeP10Translatoriii($1, 1, 62, 77);
 __ZL13SetLetterBitsP10TranslatoriPKc($1, 1, 23408);
 __ZL18SetLetterBitsRangeP10Translatoriii($1, 2, 21, 57);
 __ZL13SetLetterBitsP10TranslatoriPKc($1, 2, 23392);
 __ZL18SetLetterBitsRangeP10Translatoriii($1, 6, 4, 20);
 __ZL18SetLetterBitsRangeP10Translatoriii($1, 6, 62, 76);
 __ZL13SetLetterBitsP10TranslatoriPKc($1, 6, 23408);
 HEAP32[$1 + 44 >> 2] = 1;
 HEAP32[$1 + 316 >> 2] = (HEAP32[$1 + 720 >> 2] | 0) + 77;
 STACKTOP = sp;
 return;
}
function __ZL10setzeroabcllP11resonator_t($f, $bw, $rp) {
 $f = $f | 0;
 $bw = $bw | 0;
 $rp = $rp | 0;
 var $1 = 0, $3 = 0, $r = 0.0, $arg = 0.0, $55 = 0, $63 = 0, sp = 0;
 sp = STACKTOP;
 $1 = $f;
 $3 = $rp;
 $1 = -$1 | 0;
 $arg = +HEAPF64[15688] * +($bw | 0);
 $r = +Math_exp($arg);
 HEAPF64[$3 + 16 >> 3] = -0.0 - $r * $r;
 $arg = +HEAPF64[15689] * +($1 | 0);
 HEAPF64[$3 + 8 >> 3] = $r * +Math_cos($arg) * 2.0;
 HEAPF64[$3 >> 3] = 1.0 - +HEAPF64[$3 + 8 >> 3] - +HEAPF64[$3 + 16 >> 3];
 if (+HEAPF64[$3 >> 3] == 0.0) {
  STACKTOP = sp;
  return;
 }
 HEAPF64[$3 >> 3] = 1.0 / +HEAPF64[$3 >> 3];
 $55 = $3 + 16 | 0;
 HEAPF64[$55 >> 3] = +HEAPF64[$55 >> 3] * (-0.0 - +HEAPF64[$3 >> 3]);
 $63 = $3 + 8 | 0;
 HEAPF64[$63 >> 3] = +HEAPF64[$63 >> 3] * (-0.0 - +HEAPF64[$3 >> 3]);
 STACKTOP = sp;
 return;
}
function ___divdi3($a$0, $a$1, $b$0, $b$1) {
 $a$0 = $a$0 | 0;
 $a$1 = $a$1 | 0;
 $b$0 = $b$0 | 0;
 $b$1 = $b$1 | 0;
 var $1$0 = 0, $1$1 = 0, $2$0 = 0, $2$1 = 0, $4$0 = 0, $4$1 = 0, $7$0 = 0, $7$1 = 0, $10$0 = 0;
 $1$0 = $a$1 >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
 $1$1 = (($a$1 | 0) < 0 ? -1 : 0) >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
 $2$0 = $b$1 >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
 $2$1 = (($b$1 | 0) < 0 ? -1 : 0) >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
 $4$0 = _i64Subtract($1$0 ^ $a$0, $1$1 ^ $a$1, $1$0, $1$1) | 0;
 $4$1 = tempRet0;
 $7$0 = $2$0 ^ $1$0;
 $7$1 = $2$1 ^ $1$1;
 $10$0 = _i64Subtract((___udivmoddi4($4$0, $4$1, _i64Subtract($2$0 ^ $b$0, $2$1 ^ $b$1, $2$0, $2$1) | 0, tempRet0, 0) | 0) ^ $7$0, tempRet0 ^ $7$1, $7$0, $7$1) | 0;
 return (tempRet0 = tempRet0, $10$0) | 0;
}
function __ZL18SetCyrillicLettersP10Translator($tr) {
 $tr = $tr | 0;
 var $1 = 0, sp = 0;
 sp = STACKTOP;
 $1 = $tr;
 HEAP32[$1 + 448 >> 2] = HEAP32[1740];
 HEAP32[$1 + 332 >> 2] = 1072;
 HEAP32[$1 + 328 >> 2] = 1105;
 HEAP32[$1 + 336 >> 2] = 0;
 HEAP32[$1 + 8300 >> 2] = 24736;
 HEAP32[$1 + 720 >> 2] = 1056;
 _memset($1 + 464 | 0, 0, 256) | 0;
 __ZL13SetLetterBitsP10TranslatoriPKc($1, 0, 23768);
 __ZL13SetLetterBitsP10TranslatoriPKc($1, 1, 19696);
 __ZL13SetLetterBitsP10TranslatoriPKc($1, 2, 28656);
 __ZL13SetLetterBitsP10TranslatoriPKc($1, 3, 19704);
 __ZL13SetLetterBitsP10TranslatoriPKc($1, 4, 19712);
 __ZL13SetLetterBitsP10TranslatoriPKc($1, 5, 19688);
 __ZL13SetLetterBitsP10TranslatoriPKc($1, 6, 19736);
 __ZL13SetLetterBitsP10TranslatoriPKc($1, 7, 23768);
 STACKTOP = sp;
 return;
}
function _towupper($c) {
 $c = $c | 0;
 var $1 = 0, $2 = 0, $ix = 0, $47 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = $c;
 if ((_towlower($2 - 32 | 0) | 0) == ($2 | 0)) {
  $1 = $2 - 32 | 0;
  $47 = $1;
  STACKTOP = sp;
  return $47 | 0;
 }
 if ((_towlower($2 - 1 | 0) | 0) == ($2 | 0)) {
  $1 = $2 - 1 | 0;
  $47 = $1;
  STACKTOP = sp;
  return $47 | 0;
 }
 $ix = 0;
 while (1) {
  if ((HEAP16[8 + ($ix << 1) >> 1] | 0) == 0) {
   label = 11;
   break;
  }
  if ((HEAP16[8 + ($ix << 1) >> 1] | 0) == ($2 | 0)) {
   label = 8;
   break;
  }
  $ix = $ix + 2 | 0;
 }
 if ((label | 0) == 11) {
  $1 = $2;
  $47 = $1;
  STACKTOP = sp;
  return $47 | 0;
 } else if ((label | 0) == 8) {
  $1 = HEAP16[8 + ($ix + 1 << 1) >> 1] | 0;
  $47 = $1;
  STACKTOP = sp;
  return $47 | 0;
 }
 return 0;
}
function __ZL18removeInputSamplesP17sonicStreamStructi($stream, $position) {
 $stream = $stream | 0;
 $position = $position | 0;
 var $1 = 0, $2 = 0, $remainingSamples = 0, $24 = 0, $32 = 0, $33 = 0, $34 = 0, sp = 0;
 sp = STACKTOP;
 $1 = $stream;
 $2 = $position;
 $remainingSamples = (HEAP32[$1 + 44 >> 2] | 0) - $2 | 0;
 if (($remainingSamples | 0) <= 0) {
  $32 = $remainingSamples;
  $33 = $1;
  $34 = $33 + 44 | 0;
  HEAP32[$34 >> 2] = $32;
  STACKTOP = sp;
  return;
 }
 $24 = (HEAP32[$1 >> 2] | 0) + ((Math_imul($2, HEAP32[$1 + 28 >> 2] | 0) | 0) << 1) | 0;
 _memmove(HEAP32[$1 >> 2] | 0, $24 | 0, Math_imul($remainingSamples << 1, HEAP32[$1 + 28 >> 2] | 0) | 0) | 0;
 $32 = $remainingSamples;
 $33 = $1;
 $34 = $33 + 44 | 0;
 HEAP32[$34 >> 2] = $32;
 STACKTOP = sp;
 return;
}
function __ZL12copyToOutputP17sonicStreamStructPsi($stream, $samples, $numSamples) {
 $stream = $stream | 0;
 $samples = $samples | 0;
 $numSamples = $numSamples | 0;
 var $1 = 0, $2 = 0, $4 = 0, $22 = 0, $33 = 0, $38 = 0, sp = 0;
 sp = STACKTOP;
 $2 = $stream;
 $4 = $numSamples;
 if ((__ZL27enlargeOutputBufferIfNeededP17sonicStreamStructi($2, $4) | 0) != 0) {
  $22 = (HEAP32[$2 + 4 >> 2] | 0) + ((Math_imul(HEAP32[$2 + 48 >> 2] | 0, HEAP32[$2 + 28 >> 2] | 0) | 0) << 1) | 0;
  _memcpy($22 | 0, $samples | 0, Math_imul($4 << 1, HEAP32[$2 + 28 >> 2] | 0) | 0) | 0;
  $33 = $2 + 48 | 0;
  HEAP32[$33 >> 2] = (HEAP32[$33 >> 2] | 0) + $4;
  $1 = $4;
  $38 = $1;
  STACKTOP = sp;
  return $38 | 0;
 } else {
  $1 = 0;
  $38 = $1;
  STACKTOP = sp;
  return $38 | 0;
 }
 return 0;
}
function __ZL14mbrola_is_idlev() {
 var $1 = 0, $p = 0, $buffer = 0, $38 = 0, $41 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 24 | 0;
 $buffer = sp | 0;
 if ((_lseek(HEAP32[28510] | 0, 0, 0) | 0) != 0) {
  $1 = 0;
  $41 = $1;
  STACKTOP = sp;
  return $41 | 0;
 }
 if ((_read(HEAP32[28510] | 0, $buffer | 0, 20) | 0) != 20) {
  $1 = 0;
  $41 = $1;
  STACKTOP = sp;
  return $41 | 0;
 }
 $p = _memchr($buffer | 0, 41, 20) | 0;
 do {
  if (($p | 0) != 0) {
   if (($p - $buffer | 0) >>> 0 >= 18 >>> 0) {
    break;
   }
   if ((HEAP8[$p + 1 | 0] | 0) == 32) {
    $38 = (HEAP8[$p + 2 | 0] | 0) == 83;
   } else {
    $38 = 0;
   }
   $1 = $38 & 1;
   $41 = $1;
   STACKTOP = sp;
   return $41 | 0;
  }
 } while (0);
 $1 = 0;
 $41 = $1;
 STACKTOP = sp;
 return $41 | 0;
}
function __ZL17copyInputToOutputP17sonicStreamStructi($stream, $position) {
 $stream = $stream | 0;
 $position = $position | 0;
 var $1 = 0, $2 = 0, $numSamples = 0, $34 = 0, $39 = 0, sp = 0;
 sp = STACKTOP;
 $2 = $stream;
 $numSamples = HEAP32[$2 + 68 >> 2] | 0;
 if (($numSamples | 0) > (HEAP32[$2 + 64 >> 2] | 0)) {
  $numSamples = HEAP32[$2 + 64 >> 2] | 0;
 }
 if ((__ZL12copyToOutputP17sonicStreamStructPsi($2, (HEAP32[$2 >> 2] | 0) + ((Math_imul($position, HEAP32[$2 + 28 >> 2] | 0) | 0) << 1) | 0, $numSamples) | 0) != 0) {
  $34 = $2 + 68 | 0;
  HEAP32[$34 >> 2] = (HEAP32[$34 >> 2] | 0) - $numSamples;
  $1 = $numSamples;
  $39 = $1;
  STACKTOP = sp;
  return $39 | 0;
 } else {
  $1 = 0;
  $39 = $1;
  STACKTOP = sp;
  return $39 | 0;
 }
 return 0;
}
function __ZL27enlargeOutputBufferIfNeededP17sonicStreamStructi($stream, $numSamples) {
 $stream = $stream | 0;
 $numSamples = $numSamples | 0;
 var $1 = 0, $2 = 0, $3 = 0, $21 = 0, $48 = 0, sp = 0;
 sp = STACKTOP;
 $2 = $stream;
 $3 = $numSamples;
 do {
  if (((HEAP32[$2 + 48 >> 2] | 0) + $3 | 0) > (HEAP32[$2 + 40 >> 2] | 0)) {
   $21 = $2 + 40 | 0;
   HEAP32[$21 >> 2] = (HEAP32[$21 >> 2] | 0) + ((HEAP32[$2 + 40 >> 2] >> 1) + $3);
   HEAP32[$2 + 4 >> 2] = _realloc(HEAP32[$2 + 4 >> 2] | 0, Math_imul(HEAP32[$2 + 40 >> 2] << 1, HEAP32[$2 + 28 >> 2] | 0) | 0) | 0;
   if ((HEAP32[$2 + 4 >> 2] | 0) != 0) {
    break;
   }
   $1 = 0;
   $48 = $1;
   STACKTOP = sp;
   return $48 | 0;
  }
 } while (0);
 $1 = 1;
 $48 = $1;
 STACKTOP = sp;
 return $48 | 0;
}
function __ZL26enlargeInputBufferIfNeededP17sonicStreamStructi($stream, $numSamples) {
 $stream = $stream | 0;
 $numSamples = $numSamples | 0;
 var $1 = 0, $2 = 0, $3 = 0, $21 = 0, $48 = 0, sp = 0;
 sp = STACKTOP;
 $2 = $stream;
 $3 = $numSamples;
 do {
  if (((HEAP32[$2 + 44 >> 2] | 0) + $3 | 0) > (HEAP32[$2 + 32 >> 2] | 0)) {
   $21 = $2 + 32 | 0;
   HEAP32[$21 >> 2] = (HEAP32[$21 >> 2] | 0) + ((HEAP32[$2 + 32 >> 2] >> 1) + $3);
   HEAP32[$2 >> 2] = _realloc(HEAP32[$2 >> 2] | 0, Math_imul(HEAP32[$2 + 32 >> 2] << 1, HEAP32[$2 + 28 >> 2] | 0) | 0) | 0;
   if ((HEAP32[$2 >> 2] | 0) != 0) {
    break;
   }
   $1 = 0;
   $48 = $1;
   STACKTOP = sp;
   return $48 | 0;
  }
 } while (0);
 $1 = 1;
 $48 = $1;
 STACKTOP = sp;
 return $48 | 0;
}
function __Z17InterpretPhoneme2iP12PHONEME_DATA($phcode, $phdata) {
 $phcode = $phcode | 0;
 $phdata = $phdata | 0;
 var $1 = 0, $2 = 0, $ix = 0, $plist = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96 | 0;
 $plist = sp | 0;
 $1 = $phcode;
 $2 = $phdata;
 _memset($plist | 0, 0, 96) | 0;
 $ix = 0;
 while (1) {
  if (($ix | 0) >= 4) {
   break;
  }
  HEAP8[$plist + ($ix * 24 | 0) + 2 | 0] = 9;
  HEAP32[$plist + ($ix * 24 | 0) + 8 >> 2] = HEAP32[10823];
  $ix = $ix + 1 | 0;
 }
 HEAP8[$plist + 26 | 0] = $1;
 HEAP32[$plist + 32 >> 2] = HEAP32[43256 + ($1 << 2) >> 2];
 HEAP16[$plist + 52 >> 1] = 1;
 __Z16InterpretPhonemeP10TranslatoriP12PHONEME_LISTP12PHONEME_DATAP12WORD_PH_DATA(0, 0, $plist + 24 | 0, $2, 0);
 STACKTOP = sp;
 return;
}
function __ZL13PopParamStackiPcPi($tag_type, $outbuf, $outix) {
 $tag_type = $tag_type | 0;
 $outbuf = $outbuf | 0;
 $outix = $outix | 0;
 var $1 = 0, $2 = 0, $3 = 0, $ix = 0, $top = 0, $33 = 0, $34 = 0, sp = 0;
 sp = STACKTOP;
 $1 = $tag_type;
 $2 = $outbuf;
 $3 = $outix;
 $top = 0;
 if (($1 | 0) >= 32) {
  $1 = $1 - 32 | 0;
 }
 $ix = 0;
 while (1) {
  if (($ix | 0) >= (HEAP32[28508] | 0)) {
   break;
  }
  if ((HEAP32[76488 + ($ix << 6) >> 2] | 0) == ($1 | 0)) {
   $top = $ix;
  }
  $ix = $ix + 1 | 0;
 }
 if (($top | 0) <= 0) {
  $33 = $2;
  $34 = $3;
  __ZL17ProcessParamStackPcPi($33, $34);
  STACKTOP = sp;
  return;
 }
 HEAP32[28508] = $top;
 $33 = $2;
 $34 = $3;
 __ZL17ProcessParamStackPcPi($33, $34);
 STACKTOP = sp;
 return;
}
function ___toread($f) {
 $f = $f | 0;
 var $1 = 0, $2 = 0, $5 = 0, $7 = 0, $17 = 0, $18 = 0, $27 = 0, $_0 = 0;
 $1 = $f + 74 | 0;
 $2 = HEAP8[$1] | 0;
 HEAP8[$1] = $2 - 1 & 255 | $2;
 $5 = $f + 20 | 0;
 $7 = $f + 44 | 0;
 if ((HEAP32[$5 >> 2] | 0) >>> 0 > (HEAP32[$7 >> 2] | 0) >>> 0) {
  FUNCTION_TABLE_iiii[HEAP32[$f + 36 >> 2] & 1]($f, 0, 0) | 0;
 }
 HEAP32[$f + 16 >> 2] = 0;
 HEAP32[$f + 28 >> 2] = 0;
 HEAP32[$5 >> 2] = 0;
 $17 = $f | 0;
 $18 = HEAP32[$17 >> 2] | 0;
 if (($18 & 20 | 0) == 0) {
  $27 = HEAP32[$7 >> 2] | 0;
  HEAP32[$f + 8 >> 2] = $27;
  HEAP32[$f + 4 >> 2] = $27;
  $_0 = 0;
  return $_0 | 0;
 }
 if (($18 & 4 | 0) == 0) {
  $_0 = -1;
  return $_0 | 0;
 }
 HEAP32[$17 >> 2] = $18 | 32;
 $_0 = -1;
 return $_0 | 0;
}
function __ZL15VoiceNameSorterPKvS0_($p1, $p2) {
 $p1 = $p1 | 0;
 $p2 = $p2 | 0;
 var $1 = 0, $ix = 0, $v1 = 0, $v2 = 0, $18 = 0, $35 = 0, $48 = 0, sp = 0;
 sp = STACKTOP;
 $v1 = HEAP32[$p1 >> 2] | 0;
 $v2 = HEAP32[$p2 >> 2] | 0;
 $18 = _strcmp((HEAP32[$v1 + 4 >> 2] | 0) + 1 | 0, (HEAP32[$v2 + 4 >> 2] | 0) + 1 | 0) | 0;
 $ix = $18;
 if (($18 | 0) != 0) {
  $1 = $ix;
  $48 = $1;
  STACKTOP = sp;
  return $48 | 0;
 }
 $35 = (HEAP8[HEAP32[$v1 + 4 >> 2] | 0] | 0) - (HEAP8[HEAP32[$v2 + 4 >> 2] | 0] | 0) | 0;
 $ix = $35;
 if (($35 | 0) != 0) {
  $1 = $ix;
  $48 = $1;
  STACKTOP = sp;
  return $48 | 0;
 } else {
  $1 = _strcmp(HEAP32[$v1 >> 2] | 0, HEAP32[$v2 >> 2] | 0) | 0;
  $48 = $1;
  STACKTOP = sp;
  return $48 | 0;
 }
 return 0;
}
function __ZL13set_frame_rmsP7frame_ti($fr, $new_rms) {
 $fr = $fr | 0;
 $new_rms = $new_rms | 0;
 var $1 = 0, $2 = 0, $x = 0, $ix = 0, sp = 0;
 sp = STACKTOP;
 $1 = $fr;
 $2 = $new_rms;
 if ((HEAP32[(HEAP32[144] | 0) + 132 >> 2] | 0) != 0) {
  if (($2 | 0) == -1) {
   HEAP8[$1 + 39 | 0] = 50;
  }
  STACKTOP = sp;
  return;
 }
 if ((HEAPU8[$1 + 17 | 0] | 0) == 0) {
  STACKTOP = sp;
  return;
 }
 $x = ($2 << 6 | 0) / (HEAPU8[$1 + 17 | 0] | 0) | 0;
 if (($x | 0) >= 200) {
  $x = 199;
 }
 $x = HEAP16[20280 + ($x << 1) >> 1] | 0;
 $ix = 0;
 while (1) {
  if (($ix | 0) >= 8) {
   break;
  }
  HEAP8[$1 + 18 + $ix | 0] = (Math_imul(HEAPU8[$1 + 18 + $ix | 0] | 0, $x) | 0) / 512 | 0;
  $ix = $ix + 1 | 0;
 }
 STACKTOP = sp;
 return;
}
function __Z16Word_EmbeddedCmdv() {
 var $embedded_cmd = 0, $value = 0, $2 = 0, $9 = 0, $33 = 0, sp = 0;
 sp = STACKTOP;
 do {
  $2 = HEAP32[28514] | 0;
  HEAP32[28514] = $2 + 1;
  $embedded_cmd = HEAP32[78480 + ($2 << 2) >> 2] | 0;
  $value = $embedded_cmd >> 8;
  $9 = $embedded_cmd & 31;
  if (($9 | 0) == 12) {
   if (($value | 0) == 0) {
    HEAP32[9546] = 0;
   } else {
    HEAP32[9546] = (HEAP32[9546] | 0) + $value;
   }
  } else if (($9 | 0) == 9) {
   HEAP32[19464] = $value;
  } else if (($9 | 0) == 13) {
   HEAP32[28444] = $value;
  }
  if (($embedded_cmd & 128 | 0) == 0) {
   $33 = (HEAP32[28514] | 0) < (HEAP32[30924] | 0);
  } else {
   $33 = 0;
  }
 } while ($33);
 STACKTOP = sp;
 return;
}
function __ZL22compile_dictlist_startv() {
 var $ix = 0, $p = 0, $p2 = 0, $12 = 0, $13 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 8 | 0;
 $p2 = sp | 0;
 $ix = 0;
 while (1) {
  if (($ix | 0) >= 1024) {
   break;
  }
  $p = HEAP32[119584 + ($ix << 2) >> 2] | 0;
  while (1) {
   if (($p | 0) == 0) {
    break;
   }
   $12 = $p2;
   $13 = $p;
   HEAP8[$12] = HEAP8[$13] | 0;
   HEAP8[$12 + 1 | 0] = HEAP8[$13 + 1 | 0] | 0;
   HEAP8[$12 + 2 | 0] = HEAP8[$13 + 2 | 0] | 0;
   HEAP8[$12 + 3 | 0] = HEAP8[$13 + 3 | 0] | 0;
   _free($p);
   $p = HEAP32[$p2 >> 2] | 0;
  }
  HEAP32[119584 + ($ix << 2) >> 2] = 0;
  HEAP32[115488 + ($ix << 2) >> 2] = 0;
  $ix = $ix + 1 | 0;
 }
 STACKTOP = sp;
 return;
}
function __ZL16count_incrementsiii($ix, $end_ix, $min_stress) {
 $ix = $ix | 0;
 $end_ix = $end_ix | 0;
 $min_stress = $min_stress | 0;
 var $1 = 0, $2 = 0, $3 = 0, $count = 0, $stress = 0, $9 = 0, $28 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = $ix;
 $2 = $end_ix;
 $3 = $min_stress;
 $count = 0;
 while (1) {
  if (($1 | 0) >= ($2 | 0)) {
   label = 9;
   break;
  }
  $9 = $1;
  $1 = $9 + 1 | 0;
  $stress = HEAP8[(HEAP32[28524] | 0) + ($9 * 6 | 0) | 0] | 0;
  if (($stress | 0) >= 7) {
   break;
  }
  if (($stress | 0) >= ($3 | 0)) {
   $count = $count + 1 | 0;
  }
 }
 if ((label | 0) == 9) {
  $28 = $count;
  STACKTOP = sp;
  return $28 | 0;
 }
 $28 = $count;
 STACKTOP = sp;
 return $28 | 0;
}
function __ZL10attrlookupPKwPK8MNEM_TAB($string1, $mtab) {
 $string1 = $string1 | 0;
 $mtab = $mtab | 0;
 var $1 = 0, $2 = 0, $3 = 0, $ix = 0, $37 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = $string1;
 $3 = $mtab;
 $ix = 0;
 while (1) {
  if ((HEAP32[$3 + ($ix << 3) >> 2] | 0) == 0) {
   label = 7;
   break;
  }
  if ((__ZL7attrcmpPKwPKc($2, HEAP32[$3 + ($ix << 3) >> 2] | 0) | 0) == 0) {
   label = 4;
   break;
  }
  $ix = $ix + 1 | 0;
 }
 if ((label | 0) == 4) {
  $1 = HEAP32[$3 + ($ix << 3) + 4 >> 2] | 0;
  $37 = $1;
  STACKTOP = sp;
  return $37 | 0;
 } else if ((label | 0) == 7) {
  $1 = HEAP32[$3 + ($ix << 3) + 4 >> 2] | 0;
  $37 = $1;
  STACKTOP = sp;
  return $37 | 0;
 }
 return 0;
}
function __ZL18removePitchSamplesP17sonicStreamStructi($stream, $numSamples) {
 $stream = $stream | 0;
 $numSamples = $numSamples | 0;
 var $1 = 0, $2 = 0, $numChannels = 0, $source = 0, $40 = 0, sp = 0;
 sp = STACKTOP;
 $1 = $stream;
 $2 = $numSamples;
 $numChannels = HEAP32[$1 + 28 >> 2] | 0;
 $source = (HEAP32[$1 + 8 >> 2] | 0) + ((Math_imul($2, $numChannels) | 0) << 1) | 0;
 if (($2 | 0) == 0) {
  STACKTOP = sp;
  return;
 }
 if (($2 | 0) != (HEAP32[$1 + 52 >> 2] | 0)) {
  _memmove(HEAP32[$1 + 8 >> 2] | 0, $source | 0, Math_imul((HEAP32[$1 + 52 >> 2] | 0) - $2 << 1, $numChannels) | 0) | 0;
 }
 $40 = $1 + 52 | 0;
 HEAP32[$40 >> 2] = (HEAP32[$40 >> 2] | 0) - $2;
 STACKTOP = sp;
 return;
}
function __Z8SetPitchiPhii($length, $env, $pitch1, $pitch2) {
 $length = $length | 0;
 $env = $env | 0;
 $pitch1 = $pitch1 | 0;
 $pitch2 = $pitch2 | 0;
 var $1 = 0, $5 = 0, $25 = 0, sp = 0;
 sp = STACKTOP;
 $1 = $length;
 $5 = $env;
 HEAP32[8344] = $5;
 if (($5 | 0) == 0) {
  HEAP32[8344] = 6648;
 }
 HEAP32[8346] = 0;
 if (($1 | 0) == 0) {
  HEAP32[8347] = 0;
 } else {
  HEAP32[8347] = 2097152 / ($1 | 0) | 0;
 }
 __Z9SetPitch2P7voice_tiiPiS1_(HEAP32[8292] | 0, $pitch1, $pitch2, 33392, 33396);
 $25 = (Math_imul(HEAPU8[HEAP32[8344] | 0] | 0, HEAP32[8349] | 0) | 0) >> 8;
 HEAP32[8345] = $25 + (HEAP32[8348] | 0);
 HEAP32[7700] = HEAP32[(HEAP32[8292] | 0) + 88 >> 2];
 STACKTOP = sp;
 return;
}
function __ZL15Unpronouncable2P10TranslatorPc($tr, $word) {
 $tr = $tr | 0;
 $word = $word | 0;
 var $1 = 0, $3 = 0, $c = 0, $end_flags = 0, $ph_buf = 0, $28 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 200 | 0;
 $ph_buf = sp | 0;
 $3 = $word;
 HEAP8[$ph_buf | 0] = 0;
 $c = HEAP8[$3 - 1 | 0] | 0;
 HEAP8[$3 - 1 | 0] = 32;
 $end_flags = __Z14TranslateRulesP10TranslatorPcS1_iS1_iPj($tr, $3, $ph_buf | 0, 200, 0, -2147483648, 0) | 0;
 HEAP8[$3 - 1 | 0] = $c;
 do {
  if (($end_flags | 0) != 0) {
   if (($end_flags & 32768 | 0) != 0) {
    break;
   }
   $1 = 0;
   $28 = $1;
   STACKTOP = sp;
   return $28 | 0;
  }
 } while (0);
 $1 = 1;
 $28 = $1;
 STACKTOP = sp;
 return $28 | 0;
}
function __ZL12Read8NumbersPcPi($data_in, $data) {
 $data_in = $data_in | 0;
 $data = $data | 0;
 var $2 = 0, $22 = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 $2 = $data;
 _memset($2 | 0, 0, 12) | 0;
 $22 = _sscanf($data_in | 0, 9488, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 64 | 0, HEAP32[tempVarArgs >> 2] = $2, HEAP32[tempVarArgs + 8 >> 2] = $2 + 4, HEAP32[tempVarArgs + 16 >> 2] = $2 + 8, HEAP32[tempVarArgs + 24 >> 2] = $2 + 12, HEAP32[tempVarArgs + 32 >> 2] = $2 + 16, HEAP32[tempVarArgs + 40 >> 2] = $2 + 20, HEAP32[tempVarArgs + 48 >> 2] = $2 + 24, HEAP32[tempVarArgs + 56 >> 2] = $2 + 28, tempVarArgs) | 0) | 0;
 STACKTOP = tempVarArgs;
 STACKTOP = sp;
 return $22 | 0;
}
function _strtod($s, $p) {
 $s = $s | 0;
 $p = $p | 0;
 var $f_i = 0, $2 = 0, $3 = 0, $6 = 0.0, $14 = 0, $21 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $f_i = sp | 0;
 _memset($f_i | 0, 0, 112) | 0;
 $2 = $f_i + 4 | 0;
 HEAP32[$2 >> 2] = $s;
 $3 = $f_i + 8 | 0;
 HEAP32[$3 >> 2] = -1;
 HEAP32[$f_i + 44 >> 2] = $s;
 HEAP32[$f_i + 76 >> 2] = -1;
 ___shlim($f_i, 0);
 $6 = +___floatscan($f_i, 1, 1);
 $14 = (HEAP32[$2 >> 2] | 0) - (HEAP32[$3 >> 2] | 0) + (HEAP32[$f_i + 108 >> 2] | 0) | 0;
 if (($p | 0) == 0) {
  STACKTOP = sp;
  return +$6;
 }
 if (($14 | 0) == 0) {
  $21 = $s;
 } else {
  $21 = $s + $14 | 0;
 }
 HEAP32[$p >> 2] = $21;
 STACKTOP = sp;
 return +$6;
}
function __ZL12scaleSamplesPsif($samples, $numSamples, $volume) {
 $samples = $samples | 0;
 $numSamples = $numSamples | 0;
 $volume = +$volume;
 var $1 = 0, $2 = 0, $fixedPointVolume = 0, $value = 0, $8 = 0, $29 = 0, sp = 0;
 sp = STACKTOP;
 $1 = $samples;
 $2 = $numSamples;
 $fixedPointVolume = ~~($volume * 4096.0);
 while (1) {
  $8 = $2;
  $2 = $8 - 1 | 0;
  if (($8 | 0) == 0) {
   break;
  }
  $value = (Math_imul(HEAP16[$1 >> 1] | 0, $fixedPointVolume) | 0) >> 12;
  if (($value | 0) > 32767) {
   $value = 32767;
  } else {
   if (($value | 0) < -32767) {
    $value = -32767;
   }
  }
  $29 = $1;
  $1 = $29 + 2 | 0;
  HEAP16[$29 >> 1] = $value;
 }
 STACKTOP = sp;
 return;
}
function _wcstod($str, $tailptr) {
 $str = $str | 0;
 $tailptr = $tailptr | 0;
 var $1 = 0, $2 = 0, $ix = 0, $buf = 0, $41 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 $buf = sp | 0;
 $1 = $str;
 $2 = $tailptr;
 while (1) {
  if ((_isspace(HEAP32[$1 >> 2] | 0) | 0) == 0) {
   break;
  }
  $1 = $1 + 4 | 0;
 }
 $ix = 0;
 while (1) {
  if (($ix | 0) >= 80) {
   break;
  }
  HEAP8[$buf + $ix | 0] = HEAP32[$1 + ($ix << 2) >> 2];
  if ((_isspace(HEAP8[$buf + $ix | 0] | 0) | 0) != 0) {
   label = 7;
   break;
  }
  $ix = $ix + 1 | 0;
 }
 if ((label | 0) == 7) {}
 HEAP32[$2 >> 2] = $1 + ($ix << 2);
 $41 = +_atof($buf | 0);
 STACKTOP = sp;
 return +$41;
}
function __ZL15LookupSoundiconi($c) {
 $c = $c | 0;
 var $1 = 0, $2 = 0, $ix = 0, $34 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = $c;
 $ix = 4;
 while (1) {
  if (($ix | 0) >= (HEAP32[1358] | 0)) {
   label = 11;
   break;
  }
  if ((HEAP32[36520 + ($ix << 4) >> 2] | 0) == ($2 | 0)) {
   break;
  }
  $ix = $ix + 1 | 0;
 }
 if ((label | 0) == 11) {
  $1 = -1;
  $34 = $1;
  STACKTOP = sp;
  return $34 | 0;
 }
 do {
  if ((HEAP32[36524 + ($ix << 4) >> 2] | 0) == 0) {
   if ((__ZL13LoadSoundFilePKci(0, $ix) | 0) == 0) {
    break;
   }
   $1 = -1;
   $34 = $1;
   STACKTOP = sp;
   return $34 | 0;
  }
 } while (0);
 $1 = $ix;
 $34 = $1;
 STACKTOP = sp;
 return $34 | 0;
}
function __Z20SetVoiceByPropertiesP12espeak_VOICE($voice_selector) {
 $voice_selector = $voice_selector | 0;
 var $1 = 0, $2 = 0, $voice_id = 0, $voice_found = 0, $14 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 8 | 0;
 $voice_found = sp | 0;
 $2 = $voice_selector;
 $voice_id = __Z11SelectVoiceP12espeak_VOICEPi($2, $voice_found) | 0;
 if ((HEAP32[$voice_found >> 2] | 0) == 0) {
  $1 = 2;
  $14 = $1;
  STACKTOP = sp;
  return $14 | 0;
 } else {
  __Z16LoadVoiceVariantPKci($voice_id, 0) | 0;
  __Z13DoVoiceChangeP7voice_t(HEAP32[144] | 0);
  __Z13SetVoiceStackP12espeak_VOICEPKc($2, 90664);
  $1 = 0;
  $14 = $1;
  STACKTOP = sp;
  return $14 | 0;
 }
 return 0;
}
function __ZL14antiresonator2P11resonator_td($r, $input) {
 $r = $r | 0;
 $input = +$input;
 var $1 = 0, $2 = 0.0, $x = 0.0, $36 = 0, $43 = 0, $50 = 0;
 $1 = $r;
 $2 = $input;
 $x = +HEAPF64[$1 >> 3] * $2 + +HEAPF64[$1 + 8 >> 3] * +HEAPF64[$1 + 24 >> 3] + +HEAPF64[$1 + 16 >> 3] * +HEAPF64[$1 + 32 >> 3];
 HEAPF64[$1 + 32 >> 3] = +HEAPF64[$1 + 24 >> 3];
 HEAPF64[$1 + 24 >> 3] = $2;
 $36 = $1 | 0;
 HEAPF64[$36 >> 3] = +HEAPF64[$36 >> 3] + +HEAPF64[$1 + 40 >> 3];
 $43 = $1 + 8 | 0;
 HEAPF64[$43 >> 3] = +HEAPF64[$43 >> 3] + +HEAPF64[$1 + 48 >> 3];
 $50 = $1 + 16 | 0;
 HEAPF64[$50 >> 3] = +HEAPF64[$50 >> 3] + +HEAPF64[$1 + 56 >> 3];
 STACKTOP = STACKTOP;
 return +$x;
}
function __Z11PhonemeCodej($mnem) {
 $mnem = $mnem | 0;
 var $1 = 0, $2 = 0, $ix = 0, $34 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = $mnem;
 $ix = 0;
 while (1) {
  if (($ix | 0) >= (HEAP32[19560] | 0)) {
   label = 9;
   break;
  }
  if ((HEAP32[43256 + ($ix << 2) >> 2] | 0) == 0) {} else {
   if ((HEAP32[HEAP32[43256 + ($ix << 2) >> 2] >> 2] | 0) == ($2 | 0)) {
    label = 6;
    break;
   }
  }
  $ix = $ix + 1 | 0;
 }
 if ((label | 0) == 9) {
  $1 = 0;
  $34 = $1;
  STACKTOP = sp;
  return $34 | 0;
 } else if ((label | 0) == 6) {
  $1 = HEAPU8[(HEAP32[43256 + ($ix << 2) >> 2] | 0) + 10 | 0] | 0;
  $34 = $1;
  STACKTOP = sp;
  return $34 | 0;
 }
 return 0;
}
function _memset(ptr, value, num) {
 ptr = ptr | 0;
 value = value | 0;
 num = num | 0;
 var stop = 0, value4 = 0, stop4 = 0, unaligned = 0;
 stop = ptr + num | 0;
 if ((num | 0) >= 20) {
  value = value & 255;
  unaligned = ptr & 3;
  value4 = value | value << 8 | value << 16 | value << 24;
  stop4 = stop & ~3;
  if (unaligned) {
   unaligned = ptr + 4 - unaligned | 0;
   while ((ptr | 0) < (unaligned | 0)) {
    HEAP8[ptr] = value;
    ptr = ptr + 1 | 0;
   }
  }
  while ((ptr | 0) < (stop4 | 0)) {
   HEAP32[ptr >> 2] = value4;
   ptr = ptr + 4 | 0;
  }
 }
 while ((ptr | 0) < (stop | 0)) {
  HEAP8[ptr] = value;
  ptr = ptr + 1 | 0;
 }
 return ptr - num | 0;
}
function __Z16LoadVoiceVariantPKci($vname, $variant_num) {
 $vname = $vname | 0;
 $variant_num = $variant_num | 0;
 var $1 = 0, $v = 0, $variant_name = 0, $buf = 0, $10 = 0, $25 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $buf = sp | 0;
 __Z8strncpy0PcPKci($buf | 0, $vname, 60);
 $variant_name = __ZL23ExtractVoiceVariantNamePcii($buf | 0, $variant_num, 1) | 0;
 $10 = __Z9LoadVoicePKci($buf | 0, 0) | 0;
 $v = $10;
 if (($10 | 0) == 0) {
  $1 = 0;
  $25 = $1;
  STACKTOP = sp;
  return $25 | 0;
 }
 if ((HEAP8[$variant_name | 0] | 0) != 0) {
  $v = __Z9LoadVoicePKci($variant_name, 2) | 0;
 }
 $1 = $v;
 $25 = $1;
 STACKTOP = sp;
 return $25 | 0;
}
function __Z11WavegenFilli($fill_zeros) {
 $fill_zeros = $fill_zeros | 0;
 var $finished = 0, $p_start = 0, $length = 0, $max_length = 0, $34 = 0, sp = 0;
 sp = STACKTOP;
 $p_start = HEAP32[19448] | 0;
 $finished = __Z12WavegenFill2i(0) | 0;
 if (+HEAPF64[83] <= 1.0) {
  $34 = $finished;
  STACKTOP = sp;
  return $34 | 0;
 }
 $max_length = (HEAP32[19450] | 0) - $p_start | 0;
 $length = (__ZL7SpeedUpPsiii($p_start, ((HEAP32[19448] | 0) - $p_start | 0) / 2 | 0, ($max_length | 0) / 2 | 0, $finished) | 0) << 1;
 HEAP32[19448] = $p_start + $length;
 if (($length | 0) >= ($max_length | 0)) {
  $finished = 0;
 }
 $34 = $finished;
 STACKTOP = sp;
 return $34 | 0;
}
function __Z14MbrolaGenerateP12PHONEME_LISTPii($phoneme_list, $n_ph, $resume) {
 $phoneme_list = $phoneme_list | 0;
 $n_ph = $n_ph | 0;
 $resume = $resume | 0;
 var $1 = 0, $3 = 0, $f_mbrola = 0, $again = 0, $28 = 0, sp = 0;
 sp = STACKTOP;
 $3 = $n_ph;
 $f_mbrola = 0;
 if ((HEAP32[$3 >> 2] | 0) == 0) {
  $1 = 0;
  $28 = $1;
  STACKTOP = sp;
  return $28 | 0;
 }
 if ((HEAP32[19540] | 0) != 0) {
  $f_mbrola = HEAP32[19596] | 0;
 }
 $again = __Z15MbrolaTranslateP12PHONEME_LISTiiP8_IO_FILE($phoneme_list, HEAP32[$3 >> 2] | 0, $resume, $f_mbrola) | 0;
 if (($again | 0) == 0) {
  HEAP32[$3 >> 2] = 0;
 }
 $1 = $again;
 $28 = $1;
 STACKTOP = sp;
 return $28 | 0;
}
function __ZL9set_pitchP8SYLLABLEii($syl, $base, $drop) {
 $syl = $syl | 0;
 $base = $base | 0;
 $drop = $drop | 0;
 var $1 = 0, $2 = 0, $3 = 0, $pitch1 = 0, $pitch2 = 0, $flags = 0, $40 = 0;
 $1 = $syl;
 $2 = $base;
 $3 = $drop;
 $flags = 0;
 if (($2 | 0) < 0) {
  $2 = 0;
 }
 $pitch2 = $2;
 if (($3 | 0) < 0) {
  $flags = 1;
  $3 = -$3 | 0;
 }
 $pitch1 = $pitch2 + $3 | 0;
 if (($pitch1 | 0) < 0) {
  $pitch1 = 0;
 }
 if (($pitch1 | 0) > 254) {
  $pitch1 = 254;
 }
 if (($pitch2 | 0) > 254) {
  $pitch2 = 254;
 }
 HEAP8[$1 + 4 | 0] = $pitch1;
 HEAP8[$1 + 5 | 0] = $pitch2;
 $40 = $1 + 2 | 0;
 HEAP8[$40] = HEAP8[$40] | $flags;
 STACKTOP = STACKTOP;
 return;
}
function __Z10isHexDigiti($c) {
 $c = $c | 0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = $c;
 do {
  if (($2 | 0) >= 48) {
   if (($2 | 0) > 57) {
    label = 4;
    break;
   }
   $1 = $2 - 48 | 0;
  } else {
   label = 4;
  }
 } while (0);
 L4 : do {
  if ((label | 0) == 4) {
   do {
    if (($2 | 0) >= 97) {
     if (($2 | 0) > 102) {
      break;
     }
     $1 = $2 - 97 + 10 | 0;
     break L4;
    }
   } while (0);
   do {
    if (($2 | 0) >= 65) {
     if (($2 | 0) > 70) {
      break;
     }
     $1 = $2 - 65 + 10 | 0;
     break L4;
    }
   } while (0);
   $1 = -1;
  }
 } while (0);
 STACKTOP = sp;
 return $1 | 0;
}
function __ZL10resonator2P11resonator_td($r, $input) {
 $r = $r | 0;
 $input = +$input;
 var $1 = 0, $x = 0.0, $36 = 0, $43 = 0, $50 = 0;
 $1 = $r;
 $x = +HEAPF64[$1 >> 3] * $input + +HEAPF64[$1 + 8 >> 3] * +HEAPF64[$1 + 24 >> 3] + +HEAPF64[$1 + 16 >> 3] * +HEAPF64[$1 + 32 >> 3];
 HEAPF64[$1 + 32 >> 3] = +HEAPF64[$1 + 24 >> 3];
 HEAPF64[$1 + 24 >> 3] = $x;
 $36 = $1 | 0;
 HEAPF64[$36 >> 3] = +HEAPF64[$36 >> 3] + +HEAPF64[$1 + 40 >> 3];
 $43 = $1 + 8 | 0;
 HEAPF64[$43 >> 3] = +HEAPF64[$43 >> 3] + +HEAPF64[$1 + 48 >> 3];
 $50 = $1 + 16 | 0;
 HEAPF64[$50 >> 3] = +HEAPF64[$50 >> 3] + +HEAPF64[$1 + 56 >> 3];
 STACKTOP = STACKTOP;
 return +$x;
}
function __ZL15CountUnstressediii($start, $end, $limit) {
 $start = $start | 0;
 $end = $end | 0;
 $limit = $limit | 0;
 var $1 = 0, $2 = 0, $3 = 0, $ix = 0, $24 = 0, $25 = 0, $26 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = $start;
 $2 = $end;
 $3 = $limit;
 $ix = $1;
 while (1) {
  if (($ix | 0) > ($2 | 0)) {
   label = 8;
   break;
  }
  if ((HEAP8[(HEAP32[28524] | 0) + ($ix * 6 | 0) | 0] | 0) >= ($3 | 0)) {
   break;
  }
  $ix = $ix + 1 | 0;
 }
 if ((label | 0) == 8) {
  $24 = $ix;
  $25 = $1;
  $26 = $24 - $25 | 0;
  STACKTOP = sp;
  return $26 | 0;
 }
 $24 = $ix;
 $25 = $1;
 $26 = $24 - $25 | 0;
 STACKTOP = sp;
 return $26 | 0;
}
function _calloc($n_elements, $elem_size) {
 $n_elements = $n_elements | 0;
 $elem_size = $elem_size | 0;
 var $3 = 0, $req_0 = 0, $10 = 0;
 do {
  if (($n_elements | 0) == 0) {
   $req_0 = 0;
  } else {
   $3 = Math_imul($elem_size, $n_elements) | 0;
   if (($elem_size | $n_elements) >>> 0 <= 65535 >>> 0) {
    $req_0 = $3;
    break;
   }
   $req_0 = (($3 >>> 0) / ($n_elements >>> 0) | 0 | 0) == ($elem_size | 0) ? $3 : -1;
  }
 } while (0);
 $10 = _malloc($req_0) | 0;
 if (($10 | 0) == 0) {
  return $10 | 0;
 }
 if ((HEAP32[$10 - 4 >> 2] & 3 | 0) == 0) {
  return $10 | 0;
 }
 _memset($10 | 0, 0, $req_0 | 0) | 0;
 return $10 | 0;
}
function __Z13IsSuperscripti($letter) {
 $letter = $letter | 0;
 var $1 = 0, $2 = 0, $ix = 0, $c = 0, $7 = 0, $30 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = $letter;
 $ix = 0;
 while (1) {
  $7 = HEAPU16[28080 + ($ix << 1) >> 1] | 0;
  $c = $7;
  if (($7 | 0) == 0) {
   break;
  }
  if (($c | 0) > ($2 | 0)) {
   label = 4;
   break;
  }
  if (($c | 0) == ($2 | 0)) {
   label = 6;
   break;
  }
  $ix = $ix + 2 | 0;
 }
 if ((label | 0) == 4) {} else if ((label | 0) == 6) {
  $1 = HEAPU16[28080 + ($ix + 1 << 1) >> 1] | 0;
  $30 = $1;
  STACKTOP = sp;
  return $30 | 0;
 }
 $1 = 0;
 $30 = $1;
 STACKTOP = sp;
 return $30 | 0;
}
function __ZL9CopyFrameP7frame_ti($frame1, $copy) {
 $frame1 = $frame1 | 0;
 $copy = $copy | 0;
 var $1 = 0, $2 = 0, $frame2 = 0, $27 = 0, $35 = 0, sp = 0;
 sp = STACKTOP;
 $2 = $frame1;
 do {
  if (($copy | 0) == 0) {
   if ((HEAP16[$2 >> 1] & 32768 | 0) == 0) {
    break;
   }
   $1 = $2;
   $35 = $1;
   STACKTOP = sp;
   return $35 | 0;
  }
 } while (0);
 $frame2 = __ZL10AllocFramev() | 0;
 if (($frame2 | 0) != 0) {
  _memcpy($frame2 | 0, $2 | 0, 64) | 0;
  HEAP8[$frame2 + 16 | 0] = 0;
  $27 = $frame2 | 0;
  HEAP16[$27 >> 1] = HEAP16[$27 >> 1] | 32768;
 }
 $1 = $frame2;
 $35 = $1;
 STACKTOP = sp;
 return $35 | 0;
}
function __ZL16prevPeriodBetterP17sonicStreamStructiii($stream, $period, $minDiff, $maxDiff) {
 $stream = $stream | 0;
 $period = $period | 0;
 $minDiff = $minDiff | 0;
 $maxDiff = $maxDiff | 0;
 var $1 = 0, $2 = 0, $5 = 0, $34 = 0, sp = 0;
 sp = STACKTOP;
 $2 = $stream;
 $5 = $maxDiff;
 do {
  if ((($5 * 3 | 0 | 0) / 2 | 0 | 0) < (HEAP32[$2 + 80 >> 2] | 0)) {
   if (+($5 | 0) * 3.0 * +(HEAP32[$2 + 84 >> 2] | 0) >= +(HEAP32[$2 + 80 >> 2] | 0) * +($minDiff | 0) * 2.0) {
    break;
   }
   $1 = 1;
   $34 = $1;
   STACKTOP = sp;
   return $34 | 0;
  }
 } while (0);
 $1 = 0;
 $34 = $1;
 STACKTOP = sp;
 return $34 | 0;
}
function __Z12lookupwchar2PKti($list, $c) {
 $list = $list | 0;
 $c = $c | 0;
 var $1 = 0, $2 = 0, $3 = 0, $ix = 0, $32 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = $list;
 $3 = $c;
 $ix = 0;
 while (1) {
  if ((HEAPU16[$2 + ($ix << 1) >> 1] | 0 | 0) == 0) {
   label = 7;
   break;
  }
  if ((HEAPU16[$2 + ($ix << 1) >> 1] | 0 | 0) == ($3 | 0)) {
   label = 4;
   break;
  }
  $ix = $ix + 2 | 0;
 }
 if ((label | 0) == 7) {
  $1 = 0;
  $32 = $1;
  STACKTOP = sp;
  return $32 | 0;
 } else if ((label | 0) == 4) {
  $1 = HEAPU16[$2 + ($ix + 1 << 1) >> 1] | 0;
  $32 = $1;
  STACKTOP = sp;
  return $32 | 0;
 }
 return 0;
}
function __Z10LookupMnemP8MNEM_TABPKc($table, $string) {
 $table = $table | 0;
 $string = $string | 0;
 var $1 = 0, $2 = 0, $3 = 0, $28 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = $table;
 $3 = $string;
 while (1) {
  if ((HEAP32[$2 >> 2] | 0) == 0) {
   label = 6;
   break;
  }
  if ((_strcmp($3 | 0, HEAP32[$2 >> 2] | 0) | 0) == 0) {
   label = 4;
   break;
  }
  $2 = $2 + 8 | 0;
 }
 if ((label | 0) == 4) {
  $1 = HEAP32[$2 + 4 >> 2] | 0;
  $28 = $1;
  STACKTOP = sp;
  return $28 | 0;
 } else if ((label | 0) == 6) {
  $1 = HEAP32[$2 + 4 >> 2] | 0;
  $28 = $1;
  STACKTOP = sp;
  return $28 | 0;
 }
 return 0;
}
function __ZL9fopen_logPKcS0_($fname, $access) {
 $fname = $fname | 0;
 $access = $access | 0;
 var $1 = 0, $2 = 0, $f = 0, $5 = 0, $17 = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 $1 = $fname;
 $2 = $access;
 $5 = _fopen($1 | 0, $2 | 0) | 0;
 $f = $5;
 if (($5 | 0) != 0) {
  $17 = $f;
  STACKTOP = sp;
  return $17 | 0;
 }
 if ((HEAP32[28344] | 0) != 0) {
  _fprintf(HEAP32[28344] | 0, 17072, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = $2, HEAP32[tempVarArgs + 8 >> 2] = $1, tempVarArgs) | 0) | 0;
  STACKTOP = tempVarArgs;
 }
 $17 = $f;
 STACKTOP = sp;
 return $17 | 0;
}
function __ZL8EndPitchi($voice_break) {
 $voice_break = $voice_break | 0;
 var $1 = 0, sp = 0;
 sp = STACKTOP;
 $1 = $voice_break;
 do {
  if ((HEAP32[28530] | 0) > 0) {
   if ((HEAP32[28466] | 0) < 0) {
    break;
   }
   if ((HEAP32[33460 + (HEAP32[28466] << 4) >> 2] | 0) == 0) {
    HEAP32[33460 + (HEAP32[28466] << 4) >> 2] = HEAP32[28530];
   }
   HEAP32[28530] = 0;
  }
 } while (0);
 if (($1 | 0) == 0) {
  STACKTOP = sp;
  return;
 }
 HEAP32[31354] = -1;
 HEAP32[31356] = 0;
 HEAP32[28526] = HEAP32[8360];
 __ZL11SmoothSpectv();
 HEAP32[28442] = -1;
 _memset(36408, 0, 16) | 0;
 STACKTOP = sp;
 return;
}
function __Z14NonAsciiNumberi($letter) {
 $letter = $letter | 0;
 var $1 = 0, $2 = 0, $p = 0, $base = 0, $5 = 0, $28 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = $letter;
 $p = 29296;
 while (1) {
  $5 = HEAP32[$p >> 2] | 0;
  $base = $5;
  if (($5 | 0) == 0) {
   break;
  }
  if (($2 | 0) < ($base | 0)) {
   label = 4;
   break;
  }
  if (($2 | 0) < ($base + 10 | 0)) {
   label = 6;
   break;
  }
  $p = $p + 4 | 0;
 }
 if ((label | 0) == 4) {} else if ((label | 0) == 6) {
  $1 = $2 - $base + 48 | 0;
  $28 = $1;
  STACKTOP = sp;
  return $28 | 0;
 }
 $1 = -1;
 $28 = $1;
 STACKTOP = sp;
 return $28 | 0;
}
function __Z15WavegenSetVoiceP7voice_t($v) {
 $v = $v | 0;
 var $1 = 0, sp = 0;
 sp = STACKTOP;
 $1 = $v;
 _memcpy(102672, $1 | 0, 1364) | 0;
 HEAP32[8292] = 102672;
 if ((HEAP32[$1 + 108 >> 2] | 0) == 0) {
  HEAP32[26718] = 4904;
 } else {
  HEAP32[26718] = 23784;
 }
 HEAP32[7424] = ((HEAP32[$1 + 120 >> 2] | 0) * 26 | 0 | 0) / 100 | 0;
 if ((HEAP32[9496] | 0) <= 11e3) {
  HEAP32[7424] = HEAP32[7424] << 1;
  HEAP32[6714] = 6;
 }
 __ZL14WavegenSetEchov();
 __ZL16SetPitchFormantsv();
 __Z11MarkerEventijiiPh(8, 0, HEAP32[(HEAP32[8292] | 0) + 128 >> 2] | 0, 0, HEAP32[19448] | 0);
 STACKTOP = sp;
 return;
}
function __ZL13CloseWaveFilev() {
 var $pos = 0, sp = 0;
 sp = STACKTOP;
 do {
  if ((HEAP32[19594] | 0) != 0) {
   if ((HEAP32[19594] | 0) == (HEAP32[_stdout >> 2] | 0)) {
    break;
   }
   _fflush(HEAP32[19594] | 0) | 0;
   $pos = _ftell(HEAP32[19594] | 0) | 0;
   _fseek(HEAP32[19594] | 0, 4, 0) | 0;
   __Z11Write4BytesP8_IO_FILEi(HEAP32[19594] | 0, $pos - 8 | 0);
   _fseek(HEAP32[19594] | 0, 40, 0) | 0;
   __Z11Write4BytesP8_IO_FILEi(HEAP32[19594] | 0, $pos - 44 | 0);
   _fclose(HEAP32[19594] | 0) | 0;
   HEAP32[19594] = 0;
   STACKTOP = sp;
   return;
  }
 } while (0);
 STACKTOP = sp;
 return;
}
function __Z16AlphabetFromChari($c) {
 $c = $c | 0;
 var $1 = 0, $2 = 0, $alphabet = 0, $30 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = $c;
 $alphabet = 7e3;
 while (1) {
  if ((HEAP32[$alphabet >> 2] | 0) == 0) {
   break;
  }
  if (($2 | 0) <= (HEAPU16[$alphabet + 10 >> 1] | 0 | 0)) {
   label = 4;
   break;
  }
  $alphabet = $alphabet + 20 | 0;
 }
 do {
  if ((label | 0) == 4) {
   if (($2 | 0) < (HEAPU16[$alphabet + 8 >> 1] | 0 | 0)) {
    break;
   }
   $1 = $alphabet;
   $30 = $1;
   STACKTOP = sp;
   return $30 | 0;
  }
 } while (0);
 $1 = 0;
 $30 = $1;
 STACKTOP = sp;
 return $30 | 0;
}
function _memcpy(dest, src, num) {
 dest = dest | 0;
 src = src | 0;
 num = num | 0;
 var ret = 0;
 ret = dest | 0;
 if ((dest & 3) == (src & 3)) {
  while (dest & 3) {
   if ((num | 0) == 0) return ret | 0;
   HEAP8[dest] = HEAP8[src] | 0;
   dest = dest + 1 | 0;
   src = src + 1 | 0;
   num = num - 1 | 0;
  }
  while ((num | 0) >= 4) {
   HEAP32[dest >> 2] = HEAP32[src >> 2];
   dest = dest + 4 | 0;
   src = src + 4 | 0;
   num = num - 4 | 0;
  }
 }
 while ((num | 0) > 0) {
  HEAP8[dest] = HEAP8[src] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
  num = num - 1 | 0;
 }
 return ret | 0;
}
function __ZL7DoPitchPhii($env, $pitch1, $pitch2) {
 $env = $env | 0;
 $pitch1 = $pitch1 | 0;
 $pitch2 = $pitch2 | 0;
 var $1 = 0, $2 = 0, $3 = 0, $q = 0, sp = 0;
 sp = STACKTOP;
 $1 = $env;
 $2 = $pitch1;
 $3 = $pitch2;
 __ZL8EndPitchi(0);
 if (($2 | 0) == 255) {
  $2 = 55;
  $3 = 76;
  $1 = HEAP32[1578] | 0;
 }
 HEAP32[28466] = HEAP32[8360];
 HEAP32[28530] = 0;
 if (($3 | 0) < 0) {
  $3 = 0;
 }
 $q = 33456 + (HEAP32[8360] << 4) | 0;
 HEAP32[$q >> 2] = 9;
 HEAP32[$q + 4 >> 2] = 0;
 HEAP32[$q + 8 >> 2] = $1;
 HEAP32[$q + 12 >> 2] = ($2 << 16) + $3;
 __Z8WcmdqIncv();
 STACKTOP = sp;
 return;
}
function __ZL11ApplyBreathv() {
 var $value = 0, $noise = 0, $ix = 0, $amp = 0, $12 = 0, sp = 0;
 sp = STACKTOP;
 $value = 0;
 $noise = ((_rand() | 0) & 16383) - 8192 | 0;
 $ix = 1;
 while (1) {
  if (($ix | 0) >= 9) {
   break;
  }
  $12 = HEAP32[(HEAP32[8292] | 0) + 292 + ($ix << 2) >> 2] | 0;
  $amp = $12;
  if (($12 | 0) != 0) {
   $amp = Math_imul($amp, HEAP32[112660 + ($ix * 80 | 0) >> 2] >> 14) | 0;
   $value = $value + (Math_imul(~~+__ZL9resonatorP9RESONATORd(107352 + ($ix * 40 | 0) | 0, +($noise | 0)), $amp) | 0) | 0;
  }
  $ix = $ix + 1 | 0;
 }
 STACKTOP = sp;
 return $value | 0;
}
function __Z15DoPhonemeMarkeriiiPc($type, $char_posn, $length, $name) {
 $type = $type | 0;
 $char_posn = $char_posn | 0;
 $length = $length | 0;
 $name = $name | 0;
 var $p = 0, sp = 0;
 sp = STACKTOP;
 if ((__Z9WcmdqFreev() | 0) <= 5) {
  STACKTOP = sp;
  return;
 }
 HEAP32[33456 + (HEAP32[8360] << 4) >> 2] = ($type << 8) + 10;
 HEAP32[33460 + (HEAP32[8360] << 4) >> 2] = $char_posn & 16777215 | $length << 24;
 $p = $name;
 HEAP32[33464 + (HEAP32[8360] << 4) >> 2] = HEAP32[$p >> 2];
 HEAP32[33468 + (HEAP32[8360] << 4) >> 2] = HEAP32[$p + 4 >> 2];
 __Z8WcmdqIncv();
 STACKTOP = sp;
 return;
}
function __Z11lookupwcharPKti($list, $c) {
 $list = $list | 0;
 $c = $c | 0;
 var $1 = 0, $2 = 0, $3 = 0, $ix = 0, $28 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = $list;
 $3 = $c;
 $ix = 0;
 while (1) {
  if ((HEAPU16[$2 + ($ix << 1) >> 1] | 0 | 0) == 0) {
   label = 7;
   break;
  }
  if ((HEAPU16[$2 + ($ix << 1) >> 1] | 0 | 0) == ($3 | 0)) {
   label = 4;
   break;
  }
  $ix = $ix + 1 | 0;
 }
 if ((label | 0) == 4) {
  $1 = $ix + 1 | 0;
  $28 = $1;
  STACKTOP = sp;
  return $28 | 0;
 } else if ((label | 0) == 7) {
  $1 = 0;
  $28 = $1;
  STACKTOP = sp;
  return $28 | 0;
 }
 return 0;
}
function __Z11PauseLengthii($pause, $control) {
 $pause = $pause | 0;
 $control = $control | 0;
 var $1 = 0, $len = 0, $31 = 0, sp = 0;
 sp = STACKTOP;
 $1 = $pause;
 if (($control | 0) == 0) {
  if (($1 | 0) >= 200) {
   $len = (Math_imul($1, HEAP32[9115] | 0) | 0) / 256 | 0;
  } else {
   $len = (Math_imul($1, HEAP32[9114] | 0) | 0) / 256 | 0;
  }
 } else {
  $len = (Math_imul($1, HEAP32[9117] | 0) | 0) / 256 | 0;
 }
 if ($len >>> 0 >= (HEAP32[9116] | 0) >>> 0) {
  $31 = $len;
  STACKTOP = sp;
  return $31 | 0;
 }
 $len = HEAP32[9116] | 0;
 $31 = $len;
 STACKTOP = sp;
 return $31 | 0;
}
function __Z16AlphabetFromNamePKc($name) {
 $name = $name | 0;
 var $1 = 0, $2 = 0, $alphabet = 0, $24 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = $name;
 $alphabet = 7e3;
 while (1) {
  if ((HEAP32[$alphabet >> 2] | 0) == 0) {
   label = 7;
   break;
  }
  if ((_strcmp($2 | 0, (HEAP32[$alphabet >> 2] | 0) + 1 | 0) | 0) == 0) {
   label = 4;
   break;
  }
  $alphabet = $alphabet + 20 | 0;
 }
 if ((label | 0) == 4) {
  $1 = $alphabet;
  $24 = $1;
  STACKTOP = sp;
  return $24 | 0;
 } else if ((label | 0) == 7) {
  $1 = 0;
  $24 = $1;
  STACKTOP = sp;
  return $24 | 0;
 }
 return 0;
}
function __ZL12setresonatorP9RESONATORiii($rp, $freq, $bwidth, $init) {
 $rp = $rp | 0;
 $freq = $freq | 0;
 $bwidth = $bwidth | 0;
 $init = $init | 0;
 var $1 = 0, $x = 0.0, $arg = 0.0;
 $1 = $rp;
 if (($init | 0) != 0) {
  HEAPF64[$1 + 24 >> 3] = 0.0;
  HEAPF64[$1 + 32 >> 3] = 0.0;
 }
 $arg = +HEAPF64[3960] * +($bwidth | 0);
 $x = +Math_exp($arg);
 HEAPF64[$1 + 16 >> 3] = -0.0 - $x * $x;
 $arg = +HEAPF64[3058] * +($freq | 0);
 HEAPF64[$1 + 8 >> 3] = $x * +Math_cos($arg) * 2.0;
 HEAPF64[$1 >> 3] = 1.0 - +HEAPF64[$1 + 8 >> 3] - +HEAPF64[$1 + 16 >> 3];
 STACKTOP = STACKTOP;
 return;
}
function __Z19LookupPhonemeStringPKc($string) {
 $string = $string | 0;
 var $1 = 0, $ix = 0, $mnem = 0, $29 = 0, $30 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = $string;
 $mnem = 0;
 $ix = 0;
 while (1) {
  if (($ix | 0) >= 4) {
   label = 9;
   break;
  }
  if ((HEAP8[$1 + $ix | 0] | 0) == 0) {
   break;
  }
  $mnem = $mnem | HEAPU8[$1 + $ix | 0] << ($ix << 3);
  $ix = $ix + 1 | 0;
 }
 if ((label | 0) == 9) {
  $29 = $mnem;
  $30 = __Z11PhonemeCodej($29) | 0;
  STACKTOP = sp;
  return $30 | 0;
 }
 $29 = $mnem;
 $30 = __Z11PhonemeCodej($29) | 0;
 STACKTOP = sp;
 return $30 | 0;
}
function __ZL13rgroup_sorterP6RGROUPS0_($a, $b) {
 $a = $a | 0;
 $b = $b | 0;
 var $1 = 0, $2 = 0, $3 = 0, $ix = 0, $7 = 0, $38 = 0, sp = 0;
 sp = STACKTOP;
 $2 = $a;
 $3 = $b;
 $7 = _strlen($3 | 0) | 0;
 $ix = $7 - (_strlen($2 | 0) | 0) | 0;
 if (($ix | 0) != 0) {
  $1 = $ix;
  $38 = $1;
  STACKTOP = sp;
  return $38 | 0;
 }
 $ix = _strcmp($2 | 0, $3 | 0) | 0;
 if (($ix | 0) != 0) {
  $1 = $ix;
  $38 = $1;
  STACKTOP = sp;
  return $38 | 0;
 } else {
  $1 = (HEAP32[$2 + 16 >> 2] | 0) - (HEAP32[$3 + 16 >> 2] | 0) | 0;
  $38 = $1;
  STACKTOP = sp;
  return $38 | 0;
 }
 return 0;
}
function __Z14LookupMnemNameP8MNEM_TABi($table, $value) {
 $table = $table | 0;
 $value = $value | 0;
 var $1 = 0, $2 = 0, $3 = 0, $24 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = $table;
 $3 = $value;
 while (1) {
  if ((HEAP32[$2 >> 2] | 0) == 0) {
   label = 6;
   break;
  }
  if ((HEAP32[$2 + 4 >> 2] | 0) == ($3 | 0)) {
   label = 4;
   break;
  }
  $2 = $2 + 8 | 0;
 }
 if ((label | 0) == 4) {
  $1 = HEAP32[$2 >> 2] | 0;
  $24 = $1;
  STACKTOP = sp;
  return $24 | 0;
 } else if ((label | 0) == 6) {
  $1 = 90656;
  $24 = $1;
  STACKTOP = sp;
  return $24 | 0;
 }
 return 0;
}
function __Z18LookupPhonemeTablePKc($name) {
 $name = $name | 0;
 var $1 = 0, $2 = 0, $ix = 0, $29 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = $name;
 $ix = 0;
 while (1) {
  if (($ix | 0) >= (HEAP32[19558] | 0)) {
   break;
  }
  if ((_strcmp($2 | 0, 38200 + ($ix * 48 | 0) | 0) | 0) == 0) {
   label = 4;
   break;
  }
  $ix = $ix + 1 | 0;
 }
 if ((label | 0) == 4) {
  HEAP32[9548] = $ix;
 }
 if (($ix | 0) == (HEAP32[19558] | 0)) {
  $1 = -1;
  $29 = $1;
  STACKTOP = sp;
  return $29 | 0;
 } else {
  $1 = $ix;
  $29 = $1;
  STACKTOP = sp;
  return $29 | 0;
 }
 return 0;
}
function __Z9InitText2v() {
 var $param = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[30932] = 0;
 HEAP32[28844] = 0;
 HEAP32[28538] = 1;
 HEAP32[28508] = 1;
 HEAP32[30936] = 0;
 $param = 0;
 while (1) {
  if (($param | 0) >= 15) {
   break;
  }
  HEAP32[113616 + ($param << 2) >> 2] = HEAP32[76492 + ($param << 2) >> 2];
  $param = $param + 1 | 0;
 }
 HEAP32[19468] = HEAP32[28409];
 HEAP32[19546] = HEAP32[28410];
 HEAP8[113712] = 0;
 HEAP32[28870] = 0;
 HEAP32[32078] = 0;
 HEAP32[28396] = 0;
 HEAP32[22654] = -1;
 HEAP32[31316] = 0;
 HEAP32[6230] = 0;
 STACKTOP = sp;
 return;
}
function _sonicDestroyStream($stream) {
 $stream = $stream | 0;
 var $1 = 0, $42 = 0, $43 = 0, sp = 0;
 sp = STACKTOP;
 $1 = $stream;
 if ((HEAP32[$1 >> 2] | 0) != 0) {
  _free(HEAP32[$1 >> 2] | 0);
 }
 if ((HEAP32[$1 + 4 >> 2] | 0) != 0) {
  _free(HEAP32[$1 + 4 >> 2] | 0);
 }
 if ((HEAP32[$1 + 8 >> 2] | 0) != 0) {
  _free(HEAP32[$1 + 8 >> 2] | 0);
 }
 if ((HEAP32[$1 + 12 >> 2] | 0) == 0) {
  $42 = $1;
  $43 = $42;
  _free($43);
  STACKTOP = sp;
  return;
 }
 _free(HEAP32[$1 + 12 >> 2] | 0);
 $42 = $1;
 $43 = $42;
 _free($43);
 STACKTOP = sp;
 return;
}
function __vwarnx($fmt, $ap) {
 $fmt = $fmt | 0;
 $ap = $ap | 0;
 var $1 = 0, $2 = 0, $fputc = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[_stderr >> 2] | 0;
 $2 = HEAP32[___progname >> 2] | 0;
 _fprintf($1 | 0, 15528, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = $2, tempVarArgs) | 0) | 0;
 STACKTOP = tempVarArgs;
 if (($fmt | 0) == 0) {
  $fputc = _fputc(10, $1 | 0) | 0;
  STACKTOP = sp;
  return;
 }
 _vfprintf($1 | 0, $fmt | 0, $ap | 0) | 0;
 $fputc = _fputc(10, $1 | 0) | 0;
 STACKTOP = sp;
 return;
}
function __Z13string_sorterPPcS0_($a, $b) {
 $a = $a | 0;
 $b = $b | 0;
 var $1 = 0, $pa = 0, $pb = 0, $5 = 0, $7 = 0, $8 = 0, $27 = 0, sp = 0;
 sp = STACKTOP;
 $5 = HEAP32[$a >> 2] | 0;
 $pa = $5;
 $7 = HEAP32[$b >> 2] | 0;
 $pb = $7;
 $8 = _strcmp($5 | 0, $7 | 0) | 0;
 if (($8 | 0) != 0) {
  $1 = $8;
  $27 = $1;
  STACKTOP = sp;
  return $27 | 0;
 } else {
  $pa = $pa + ((_strlen($pa | 0) | 0) + 1) | 0;
  $pb = $pb + ((_strlen($pb | 0) | 0) + 1) | 0;
  $1 = _strcmp($pa | 0, $pb | 0) | 0;
  $27 = $1;
  STACKTOP = sp;
  return $27 | 0;
 }
 return 0;
}
function __ZL10LookupTunePKc($name) {
 $name = $name | 0;
 var $1 = 0, $2 = 0, $ix = 0, $24 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = $name;
 $ix = 0;
 while (1) {
  if (($ix | 0) >= (HEAP32[19554] | 0)) {
   label = 7;
   break;
  }
  if ((_strcmp($2 | 0, (HEAP32[9108] | 0) + ($ix * 68 | 0) | 0) | 0) == 0) {
   label = 4;
   break;
  }
  $ix = $ix + 1 | 0;
 }
 if ((label | 0) == 4) {
  $1 = $ix;
  $24 = $1;
  STACKTOP = sp;
  return $24 | 0;
 } else if ((label | 0) == 7) {
  $1 = -1;
  $24 = $1;
  STACKTOP = sp;
  return $24 | 0;
 }
 return 0;
}
function __ZL18Translator_RussianP10Translator($tr) {
 $tr = $tr | 0;
 var $1 = 0, sp = 0;
 sp = STACKTOP;
 $1 = $tr;
 __Z15SetupTranslatorP10TranslatorPKsPKh($1, 19656, 19672);
 __ZL18SetCyrillicLettersP10Translator($1);
 __ZL13SetLetterBitsP10TranslatoriPKc($1, 6, 19680);
 HEAP32[$1 + 44 >> 2] = 1074;
 HEAP32[$1 + 40 >> 2] = 1;
 HEAP32[$1 + 64 >> 2] = 2;
 HEAP32[$1 + 8 >> 2] = 5;
 HEAP32[$1 + 12 >> 2] = 32;
 HEAP32[$1 + 200 >> 2] = 1032;
 HEAP32[$1 + 204 >> 2] = 66;
 HEAP32[$1 + 264 >> 2] = 1;
 HEAP32[$1 + 276 >> 2] = 2;
 STACKTOP = sp;
 return;
}
function __Z11GetEnvelopei($index) {
 $index = $index | 0;
 var $1 = 0, $2 = 0, $14 = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 $2 = $index;
 if (($2 | 0) == 0) {
  _fprintf(HEAP32[_stderr >> 2] | 0, 10032, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 7 & -8, HEAP32[tempVarArgs >> 2] = 0, tempVarArgs) | 0) | 0;
  STACKTOP = tempVarArgs;
  $1 = HEAP32[1578] | 0;
  $14 = $1;
  STACKTOP = sp;
  return $14 | 0;
 } else {
  $1 = (HEAP32[17080] | 0) + $2 | 0;
  $14 = $1;
  STACKTOP = sp;
  return $14 | 0;
 }
 return 0;
}
function __ZL14ReplaceKeyNamePciPi($outbuf, $index, $outix) {
 $outbuf = $outbuf | 0;
 $index = $index | 0;
 $outix = $outix | 0;
 var $1 = 0, $3 = 0, $letter = 0, $p = 0, $9 = 0, $22 = 0, sp = 0;
 sp = STACKTOP;
 $3 = $index;
 $p = $outbuf + $3 | 0;
 $9 = __Z10LookupMnemP8MNEM_TABPKc(19920, $p) | 0;
 $letter = $9;
 if (($9 | 0) != 0) {
  HEAP32[$outix >> 2] = $3 + (__Z8utf8_outjPc($letter, $p) | 0);
  $1 = $letter;
  $22 = $1;
  STACKTOP = sp;
  return $22 | 0;
 } else {
  $1 = 0;
  $22 = $1;
  STACKTOP = sp;
  return $22 | 0;
 }
 return 0;
}
function __ZL7flutterP13klatt_frame_t($frame) {
 $frame = $frame | 0;
 var $1 = 0, $delta_f0 = 0.0, $flc = 0.0, $fld = 0.0;
 $1 = $frame;
 $flc = +Math_sin(39.898227289999994 * +(HEAP32[22802] | 0));
 $fld = +Math_sin(22.305308169999996 * +(HEAP32[22802] | 0));
 $delta_f0 = +(HEAP32[31364] | 0) / 50.0 * (+(HEAP32[31403] | 0) / 100.0) * ($flc + $fld + +Math_sin(14.76548569 * +(HEAP32[22802] | 0))) * 10.0;
 HEAP32[$1 >> 2] = (HEAP32[$1 >> 2] | 0) + ~~$delta_f0;
 HEAP32[22802] = (HEAP32[22802] | 0) + 1;
 STACKTOP = STACKTOP;
 return;
}
function ___muldi3($a$0, $a$1, $b$0, $b$1) {
 $a$0 = $a$0 | 0;
 $a$1 = $a$1 | 0;
 $b$0 = $b$0 | 0;
 $b$1 = $b$1 | 0;
 var $x_sroa_0_0_extract_trunc = 0, $y_sroa_0_0_extract_trunc = 0, $1$0 = 0, $1$1 = 0;
 $x_sroa_0_0_extract_trunc = $a$0;
 $y_sroa_0_0_extract_trunc = $b$0;
 $1$0 = ___muldsi3($x_sroa_0_0_extract_trunc, $y_sroa_0_0_extract_trunc) | 0;
 $1$1 = tempRet0;
 return (tempRet0 = (Math_imul($a$1, $y_sroa_0_0_extract_trunc) | 0) + (Math_imul($b$1, $x_sroa_0_0_extract_trunc) | 0) + $1$1 | $1$1 & 0, $1$0 | 0 | 0) | 0;
}
function __Z7IsSpacej($c) {
 $c = $c | 0;
 var $1 = 0, $2 = 0, sp = 0;
 sp = STACKTOP;
 $2 = $c;
 L1 : do {
  if (($2 | 0) == 0) {
   $1 = 0;
  } else {
   do {
    if ($2 >>> 0 >= 9472 >>> 0) {
     if ($2 >>> 0 >= 9632 >>> 0) {
      break;
     }
     $1 = 1;
     break L1;
    }
   } while (0);
   do {
    if ($2 >>> 0 >= 65529 >>> 0) {
     if ($2 >>> 0 > 65535 >>> 0) {
      break;
     }
     $1 = 1;
     break L1;
    }
   } while (0);
   $1 = _iswspace($2) | 0;
  }
 } while (0);
 STACKTOP = sp;
 return $1 | 0;
}
function __ZL12SetAmplitudeiPhi($length, $amp_env, $value) {
 $length = $length | 0;
 $amp_env = $amp_env | 0;
 $value = $value | 0;
 var $1 = 0;
 $1 = $length;
 HEAP32[27982] = 0;
 if (($1 | 0) == 0) {
  HEAP32[26956] = 0;
 } else {
  HEAP32[26956] = 2097152 / ($1 | 0) | 0;
 }
 HEAP32[8357] = (Math_imul($value, HEAP32[6658] | 0) | 0) / 16 | 0;
 HEAP32[8358] = ((Math_imul(HEAP32[8357] | 0, HEAP32[(HEAP32[8292] | 0) + 124 >> 2] | 0) | 0) * 15 | 0 | 0) / 100 | 0;
 HEAP32[28520] = $amp_env;
 STACKTOP = STACKTOP;
 return;
}
function __ZL11DoEmbedded2Pi($embix) {
 $embix = $embix | 0;
 var $1 = 0, $word = 0, $3 = 0, $4 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 $1 = $embix;
 do {
  $3 = $1;
  $4 = HEAP32[$3 >> 2] | 0;
  HEAP32[$3 >> 2] = $4 + 1;
  $6 = 78480 + ($4 << 2) | 0;
  $word = HEAPU8[$6] | HEAPU8[$6 + 1 | 0] << 8 | HEAPU8[$6 + 2 | 0] << 16 | HEAPU8[$6 + 3 | 0] << 24 | 0;
  if (($word & 31 | 0) == 2) {
   __Z11SetEmbeddedii($word & 127, $word >>> 8);
   __Z8SetSpeedi(1);
  }
 } while (($word & 128 | 0) == 0);
 STACKTOP = sp;
 return;
}
function __Z8InitTexti($control) {
 $control = $control | 0;
 var sp = 0;
 sp = STACKTOP;
 HEAP32[22652] = 0;
 HEAP32[22650] = 0;
 HEAP32[19602] = 0;
 HEAP32[9454] = 0;
 HEAP8[37824] = 0;
 HEAP32[9452] = 0;
 HEAP32[9470] = 0;
 HEAP32[9450] = 0;
 HEAP32[19550] = 1;
 HEAP32[28422] = 0;
 HEAP32[19464] = 0;
 HEAP32[28504] = 0;
 HEAP32[28444] = 0;
 HEAP32[28470] = 0;
 HEAP32[28516] = 0;
 __Z9InitText2v();
 if (($control & 8192 | 0) != 0) {
  STACKTOP = sp;
  return;
 }
 __Z12InitNamedatav();
 STACKTOP = sp;
 return;
}
function _wcschr($str, $c) {
 $str = $str | 0;
 $c = $c | 0;
 var $1 = 0, $2 = 0, $3 = 0, $20 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = $str;
 $3 = $c;
 while (1) {
  if ((HEAP32[$2 >> 2] | 0) == 0) {
   label = 6;
   break;
  }
  if ((HEAP32[$2 >> 2] | 0) == ($3 | 0)) {
   label = 4;
   break;
  }
  $2 = $2 + 4 | 0;
 }
 if ((label | 0) == 4) {
  $1 = $2;
  $20 = $1;
  STACKTOP = sp;
  return $20 | 0;
 } else if ((label | 0) == 6) {
  $1 = 0;
  $20 = $1;
  STACKTOP = sp;
  return $20 | 0;
 }
 return 0;
}
function _sonicWriteShortToStream($stream, $samples, $numSamples) {
 $stream = $stream | 0;
 $samples = $samples | 0;
 $numSamples = $numSamples | 0;
 var $1 = 0, $2 = 0, $15 = 0, sp = 0;
 sp = STACKTOP;
 $2 = $stream;
 if ((__ZL28addShortSamplesToInputBufferP17sonicStreamStructPsi($2, $samples, $numSamples) | 0) != 0) {
  $1 = __ZL18processStreamInputP17sonicStreamStruct($2) | 0;
  $15 = $1;
  STACKTOP = sp;
  return $15 | 0;
 } else {
  $1 = 0;
  $15 = $1;
  STACKTOP = sp;
  return $15 | 0;
 }
 return 0;
}
function __ZL9SetBreathv() {
 var $pk = 0, sp = 0;
 sp = STACKTOP;
 if ((HEAP32[(HEAP32[8292] | 0) + 292 >> 2] | 0) == 0) {
  STACKTOP = sp;
  return;
 }
 $pk = 1;
 while (1) {
  if (($pk | 0) >= 9) {
   break;
  }
  if ((HEAP32[(HEAP32[8292] | 0) + 292 + ($pk << 2) >> 2] | 0) != 0) {
   __ZL12setresonatorP9RESONATORiii(107352 + ($pk * 40 | 0) | 0, HEAP32[112656 + ($pk * 80 | 0) >> 2] >> 16, HEAP32[(HEAP32[8292] | 0) + 328 + ($pk << 2) >> 2] | 0, 0);
  }
  $pk = $pk + 1 | 0;
 }
 STACKTOP = sp;
 return;
}
function __ZL3errPKcz($errmsg, varrp) {
 $errmsg = $errmsg | 0;
 varrp = varrp | 0;
 var $params = 0, $3 = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $params = sp | 0;
 $3 = $params | 0;
 HEAP32[$3 >> 2] = varrp;
 HEAP32[$3 + 4 >> 2] = 0;
 _vsnprintf(114160, 160, $errmsg | 0, $params | 0) | 0;
 __ZL3logPKcz(16384, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempVarArgs >> 2] = 114160, tempVarArgs) | 0);
 STACKTOP = tempVarArgs;
 STACKTOP = sp;
 return;
}
function __ZL16VoiceScoreSorterPKvS0_($p1, $p2) {
 $p1 = $p1 | 0;
 $p2 = $p2 | 0;
 var $1 = 0, $v1 = 0, $v2 = 0, $16 = 0, $29 = 0, sp = 0;
 sp = STACKTOP;
 $v1 = HEAP32[$p1 >> 2] | 0;
 $v2 = HEAP32[$p2 >> 2] | 0;
 $16 = (HEAP32[$v2 + 16 >> 2] | 0) - (HEAP32[$v1 + 16 >> 2] | 0) | 0;
 if (($16 | 0) != 0) {
  $1 = $16;
  $29 = $1;
  STACKTOP = sp;
  return $29 | 0;
 } else {
  $1 = _strcmp(HEAP32[$v1 >> 2] | 0, HEAP32[$v2 >> 2] | 0) | 0;
  $29 = $1;
  STACKTOP = sp;
  return $29 | 0;
 }
 return 0;
}
function _iswalpha($c) {
 $c = $c | 0;
 var $1 = 0, $2 = 0, sp = 0;
 sp = STACKTOP;
 $2 = $c;
 L1 : do {
  if ($2 >>> 0 < 128 >>> 0) {
   $1 = _isalpha($2 | 0) | 0;
  } else {
   do {
    if ($2 >>> 0 > 12352 >>> 0) {
     if ($2 >>> 0 > 42752 >>> 0) {
      break;
     }
     $1 = 1;
     break L1;
    }
   } while (0);
   if ($2 >>> 0 > 591 >>> 0) {
    $1 = 0;
    break;
   } else {
    $1 = HEAPU8[112 + ($2 - 128) | 0] | 0;
    break;
   }
  }
 } while (0);
 STACKTOP = sp;
 return $1 | 0;
}
function ___uflow($f) {
 $f = $f | 0;
 var $c = 0, $_0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 8 | 0;
 $c = sp | 0;
 if ((HEAP32[$f + 8 >> 2] | 0) == 0) {
  if ((___toread($f) | 0) == 0) {
   label = 3;
  } else {
   $_0 = -1;
  }
 } else {
  label = 3;
 }
 do {
  if ((label | 0) == 3) {
   if ((FUNCTION_TABLE_iiii[HEAP32[$f + 32 >> 2] & 1]($f, $c, 1) | 0) != 1) {
    $_0 = -1;
    break;
   }
   $_0 = HEAPU8[$c] | 0;
  }
 } while (0);
 STACKTOP = sp;
 return $_0 | 0;
}
function __Z8DoMarkeriiii($type, $char_posn, $length, $value) {
 $type = $type | 0;
 $char_posn = $char_posn | 0;
 $length = $length | 0;
 $value = $value | 0;
 var sp = 0;
 sp = STACKTOP;
 if ((__Z9WcmdqFreev() | 0) <= 5) {
  STACKTOP = sp;
  return;
 }
 HEAP32[33456 + (HEAP32[8360] << 4) >> 2] = ($type << 8) + 10;
 HEAP32[33460 + (HEAP32[8360] << 4) >> 2] = $char_posn & 16777215 | $length << 24;
 HEAP32[33464 + (HEAP32[8360] << 4) >> 2] = $value;
 __Z8WcmdqIncv();
 STACKTOP = sp;
 return;
}
function __Z9iswalpha2i($c) {
 $c = $c | 0;
 var $1 = 0, $2 = 0, sp = 0;
 sp = STACKTOP;
 $2 = $c;
 L1 : do {
  if (($2 | 0) < 128) {
   $1 = _isalpha($2 | 0) | 0;
  } else {
   do {
    if (($2 | 0) > 12352) {
     if (($2 | 0) > 42752) {
      break;
     }
     $1 = 1;
     break L1;
    }
   } while (0);
   if (($2 | 0) > 591) {
    $1 = _iswalpha($2) | 0;
    break;
   } else {
    $1 = HEAPU8[112 + ($2 - 128) | 0] | 0;
    break;
   }
  }
 } while (0);
 STACKTOP = sp;
 return $1 | 0;
}
function __Z9iswupper2i($c) {
 $c = $c | 0;
 var $1 = 0, $2 = 0, $19 = 0, sp = 0;
 sp = STACKTOP;
 $2 = $c;
 L1 : do {
  if (($2 | 0) < 128) {
   $1 = _isupper($2 | 0) | 0;
  } else {
   if (($2 | 0) > 591) {
    $1 = _iswupper($2) | 0;
    break;
   }
   $19 = HEAPU8[112 + ($2 - 128) | 0] | 0;
   do {
    if (($19 | 0) > 0) {
     if (($19 | 0) >= 254) {
      break;
     }
     $1 = 1;
     break L1;
    }
   } while (0);
   $1 = 0;
  }
 } while (0);
 STACKTOP = sp;
 return $1 | 0;
}
function _iswupper($c) {
 $c = $c | 0;
 var $1 = 0, $2 = 0, $16 = 0, sp = 0;
 sp = STACKTOP;
 $2 = $c;
 L1 : do {
  if ($2 >>> 0 < 128 >>> 0) {
   $1 = _isupper($2 | 0) | 0;
  } else {
   do {
    if ($2 >>> 0 <= 591 >>> 0) {
     $16 = HEAPU8[112 + ($2 - 128) | 0] | 0;
     if (($16 | 0) == 0) {
      break;
     }
     if (($16 | 0) == 255) {
      break;
     }
     $1 = 1;
     break L1;
    }
   } while (0);
   $1 = 0;
  }
 } while (0);
 STACKTOP = sp;
 return $1 | 0;
}
function __Z11LookupFlagsP10TranslatorPKcPPj($tr, $word, $flags_out) {
 $tr = $tr | 0;
 $word = $word | 0;
 $flags_out = $flags_out | 0;
 var $word1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $word1 = sp + 104 | 0;
 HEAP32[$word1 >> 2] = $word;
 HEAP32[26267] = 0;
 HEAP32[26266] = 0;
 __Z14LookupDictListP10TranslatorPPcS1_PjiP8WORD_TAB($tr, $word1, sp | 0, 105064, 0, 0) | 0;
 HEAP32[$flags_out >> 2] = 105064;
 STACKTOP = sp;
 return HEAP32[26266] | 0;
}
function __ZL13SetLetterBitsP10TranslatoriPKc($tr, $group, $string) {
 $tr = $tr | 0;
 $group = $group | 0;
 $string = $string | 0;
 var $1 = 0, $3 = 0, $bits = 0, $7 = 0, $9 = 0, $18 = 0, sp = 0;
 sp = STACKTOP;
 $1 = $tr;
 $3 = $string;
 $bits = 1 << $group;
 while (1) {
  $7 = $3;
  $3 = $7 + 1 | 0;
  $9 = HEAP8[$7] | 0;
  if (($9 & 255 | 0) == 0) {
   break;
  }
  $18 = $1 + 464 + ($9 & 255) | 0;
  HEAP8[$18] = HEAPU8[$18] | 0 | $bits;
 }
 STACKTOP = sp;
 return;
}
function __Z5Alloci($size) {
 $size = $size | 0;
 var $p = 0, $3 = 0, $9 = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 $3 = _malloc($size) | 0;
 $p = $3;
 if (($3 | 0) != 0) {
  $9 = $p;
  STACKTOP = sp;
  return $9 | 0;
 }
 _fprintf(HEAP32[_stderr >> 2] | 0, 18688, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 7 & -8, HEAP32[tempVarArgs >> 2] = 0, tempVarArgs) | 0) | 0;
 STACKTOP = tempVarArgs;
 $9 = $p;
 STACKTOP = sp;
 return $9 | 0;
}
function __ZL18SetLetterBitsRangeP10Translatoriii($tr, $group, $first, $last) {
 $tr = $tr | 0;
 $group = $group | 0;
 $first = $first | 0;
 $last = $last | 0;
 var $1 = 0, $4 = 0, $bits = 0, $ix = 0, $17 = 0, sp = 0;
 sp = STACKTOP;
 $1 = $tr;
 $4 = $last;
 $bits = 1 << $group;
 $ix = $first;
 while (1) {
  if (($ix | 0) > ($4 | 0)) {
   break;
  }
  $17 = $1 + 464 + $ix | 0;
  HEAP8[$17] = HEAPU8[$17] | 0 | $bits;
  $ix = $ix + 1 | 0;
 }
 STACKTOP = sp;
 return;
}
function __ZL12InvalidInstnP11PHONEME_TABi($ph, $instn) {
 $ph = $ph | 0;
 $instn = $instn | 0;
 var $3 = 0, $8 = 0, tempVarArgs = 0, sp = 0;
 sp = STACKTOP;
 $3 = HEAP32[_stderr >> 2] | 0;
 $8 = __Z12WordToStringj(HEAP32[$ph >> 2] | 0) | 0;
 _fprintf($3 | 0, 16280, (tempVarArgs = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempVarArgs >> 2] = $instn, HEAP32[tempVarArgs + 8 >> 2] = $8, tempVarArgs) | 0) | 0;
 STACKTOP = tempVarArgs;
 STACKTOP = sp;
 return;
}
function __ZL18formants_reduce_hfP7frame_ti($fr, $level) {
 $fr = $fr | 0;
 $level = $level | 0;
 var $1 = 0, $2 = 0, $ix = 0, sp = 0;
 sp = STACKTOP;
 $1 = $fr;
 $2 = $level;
 if ((HEAP32[(HEAP32[144] | 0) + 132 >> 2] | 0) != 0) {
  STACKTOP = sp;
  return;
 }
 $ix = 2;
 while (1) {
  if (($ix | 0) >= 8) {
   break;
  }
  HEAP8[$1 + 18 + $ix | 0] = (Math_imul(HEAPU8[$1 + 18 + $ix | 0] | 0, $2) | 0) / 100 | 0;
  $ix = $ix + 1 | 0;
 }
 STACKTOP = sp;
 return;
}
function __Z13SetLengthModsP10Translatori($tr, $value) {
 $tr = $tr | 0;
 $value = $value | 0;
 var $1 = 0, $2 = 0, $6 = 0, $14 = 0, sp = 0;
 sp = STACKTOP;
 $1 = $tr;
 $2 = $value;
 $6 = HEAP32[28056 + ((($2 | 0) % 100 | 0) << 2) >> 2] | 0;
 HEAP32[$1 + 192 >> 2] = $6;
 HEAP32[$1 + 196 >> 2] = $6;
 $14 = ($2 | 0) / 100 | 0;
 if (($14 | 0) == 0) {
  STACKTOP = sp;
  return;
 }
 HEAP32[$1 + 196 >> 2] = HEAP32[28056 + ($14 << 2) >> 2];
 STACKTOP = sp;
 return;
}
function __ZL18DuplicateLastFrameP10frameref_tii($seq, $n_frames, $length) {
 $seq = $seq | 0;
 $n_frames = $n_frames | 0;
 $length = $length | 0;
 var $1 = 0, $2 = 0, $fr = 0, sp = 0;
 sp = STACKTOP;
 $1 = $seq;
 $2 = $n_frames;
 HEAP16[$1 + ($2 - 1 << 3) >> 1] = $length;
 $fr = __ZL9CopyFrameP7frame_ti(HEAP32[$1 + ($2 - 1 << 3) + 4 >> 2] | 0, 1) | 0;
 HEAP32[$1 + ($2 << 3) + 4 >> 2] = $fr;
 HEAP16[$1 + ($2 << 3) >> 1] = 0;
 STACKTOP = sp;
 return $fr | 0;
}
function __Z14Wavegen_Klatt2iiiP7frame_tS0_($length, $modulation, $resume, $fr1, $fr2) {
 $length = $length | 0;
 $modulation = $modulation | 0;
 $resume = $resume | 0;
 $fr1 = $fr1 | 0;
 $fr2 = $fr2 | 0;
 var $3 = 0, $16 = 0, sp = 0;
 sp = STACKTOP;
 $3 = $resume;
 if (($3 | 0) == 0) {
  __Z14SetSynth_KlattiiP7frame_tS0_P7voice_ti($length, $modulation, $fr1, $fr2, HEAP32[8292] | 0, 1);
 }
 $16 = __Z13Wavegen_Klatti($3) | 0;
 STACKTOP = sp;
 return $16 | 0;
}
function __Z13GetFileLengthPKc($filename) {
 $filename = $filename | 0;
 var $1 = 0, $statbuf = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 $statbuf = sp | 0;
 do {
  if ((_stat($filename | 0, $statbuf | 0) | 0) != 0) {
   $1 = 0;
  } else {
   if ((HEAP32[$statbuf + 12 >> 2] & 61440 | 0) == 16384) {
    $1 = -2;
    break;
   } else {
    $1 = HEAP32[$statbuf + 36 >> 2] | 0;
    break;
   }
  }
 } while (0);
 STACKTOP = sp;
 return $1 | 0;
}
function copyTempDouble(ptr) {
 ptr = ptr | 0;
 HEAP8[tempDoublePtr] = HEAP8[ptr];
 HEAP8[tempDoublePtr + 1 | 0] = HEAP8[ptr + 1 | 0];
 HEAP8[tempDoublePtr + 2 | 0] = HEAP8[ptr + 2 | 0];
 HEAP8[tempDoublePtr + 3 | 0] = HEAP8[ptr + 3 | 0];
 HEAP8[tempDoublePtr + 4 | 0] = HEAP8[ptr + 4 | 0];
 HEAP8[tempDoublePtr + 5 | 0] = HEAP8[ptr + 5 | 0];
 HEAP8[tempDoublePtr + 6 | 0] = HEAP8[ptr + 6 | 0];
 HEAP8[tempDoublePtr + 7 | 0] = HEAP8[ptr + 7 | 0];
}
function __ZL13StringToWord2PKc($string) {
 $string = $string | 0;
 var $1 = 0, $ix = 0, $c = 0, $value = 0, $10 = 0, $13 = 0, sp = 0;
 sp = STACKTOP;
 $1 = $string;
 $value = 0;
 $ix = 0;
 while (1) {
  if (($ix | 0) < 4) {
   $10 = HEAP8[$1 + $ix | 0] | 0;
   $c = $10;
   $13 = ($10 | 0) != 0;
  } else {
   $13 = 0;
  }
  if (!$13) {
   break;
  }
  $value = $value << 8 | $c & 255;
  $ix = $ix + 1 | 0;
 }
 STACKTOP = sp;
 return $value | 0;
}
function __ZL6setabcllP11resonator_t($f, $bw, $rp) {
 $f = $f | 0;
 $bw = $bw | 0;
 $rp = $rp | 0;
 var $3 = 0, $r = 0.0, $arg = 0.0;
 $3 = $rp;
 $arg = +HEAPF64[15688] * +($bw | 0);
 $r = +Math_exp($arg);
 HEAPF64[$3 + 16 >> 3] = -0.0 - $r * $r;
 $arg = +HEAPF64[15689] * +($f | 0);
 HEAPF64[$3 + 8 >> 3] = $r * +Math_cos($arg) * 2.0;
 HEAPF64[$3 >> 3] = 1.0 - +HEAPF64[$3 + 8 >> 3] - +HEAPF64[$3 + 16 >> 3];
 STACKTOP = STACKTOP;
 return;
}
function ___muldsi3($a, $b) {
 $a = $a | 0;
 $b = $b | 0;
 var $1 = 0, $2 = 0, $3 = 0, $6 = 0, $8 = 0, $11 = 0, $12 = 0;
 $1 = $a & 65535;
 $2 = $b & 65535;
 $3 = Math_imul($2, $1) | 0;
 $6 = $a >>> 16;
 $8 = ($3 >>> 16) + (Math_imul($2, $6) | 0) | 0;
 $11 = $b >>> 16;
 $12 = Math_imul($11, $1) | 0;
 return (tempRet0 = ($8 >>> 16) + (Math_imul($11, $6) | 0) + ((($8 & 65535) + $12 | 0) >>> 16) | 0, $8 + $12 << 16 | $3 & 65535 | 0) | 0;
}
function __Z14HashDictionaryPKc($string) {
 $string = $string | 0;
 var $1 = 0, $chars = 0, $hash = 0, $3 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 $1 = $string;
 $chars = 0;
 $hash = 0;
 while (1) {
  $3 = $1;
  $1 = $3 + 1 | 0;
  $7 = HEAP8[$3] & 255;
  if (($7 | 0) == 0) {
   break;
  }
  $hash = ($hash << 3) + $7 | 0;
  $hash = $hash & 1023 ^ $hash >> 8;
  $chars = $chars + 1 | 0;
 }
 STACKTOP = sp;
 return $hash + $chars & 1023 | 0;
}
function __ZL8IsRomanUj($c) {
 $c = $c | 0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = $c;
 do {
  if (($2 | 0) == 73) {
   label = 5;
  } else {
   if (($2 | 0) == 86) {
    label = 5;
    break;
   }
   if (($2 | 0) == 88) {
    label = 5;
    break;
   }
   if (($2 | 0) == 76) {
    label = 5;
    break;
   }
   $1 = 0;
  }
 } while (0);
 if ((label | 0) == 5) {
  $1 = 1;
 }
 STACKTOP = sp;
 return $1 | 0;
}
function _memmove(dest, src, num) {
 dest = dest | 0;
 src = src | 0;
 num = num | 0;
 var ret = 0;
 if ((src | 0) < (dest | 0) & (dest | 0) < (src + num | 0)) {
  ret = dest;
  src = src + num | 0;
  dest = dest + num | 0;
  while ((num | 0) > 0) {
   dest = dest - 1 | 0;
   src = src - 1 | 0;
   num = num - 1 | 0;
   HEAP8[dest] = HEAP8[src] | 0;
  }
  dest = ret;
 } else {
  _memcpy(dest, src, num) | 0;
 }
 return dest | 0;
}
function __ZL14PushParamStacki($tag_type) {
 $tag_type = $tag_type | 0;
 var $ix = 0, $sp = 0, sp = 0;
 sp = STACKTOP;
 $sp = 76488 + (HEAP32[28508] << 6) | 0;
 if ((HEAP32[28508] | 0) < 19) {
  HEAP32[28508] = (HEAP32[28508] | 0) + 1;
 }
 HEAP32[$sp >> 2] = $tag_type;
 $ix = 0;
 while (1) {
  if (($ix | 0) >= 15) {
   break;
  }
  HEAP32[$sp + 4 + ($ix << 2) >> 2] = -1;
  $ix = $ix + 1 | 0;
 }
 STACKTOP = sp;
 return $sp | 0;
}
function __ZL11close_pipesPiS_S_($p1, $p2, $p3) {
 $p1 = $p1 | 0;
 $p2 = $p2 | 0;
 $p3 = $p3 | 0;
 var $1 = 0, $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 $1 = $p1;
 $2 = $p2;
 $3 = $p3;
 _close(HEAP32[$1 >> 2] | 0) | 0;
 _close(HEAP32[$1 + 4 >> 2] | 0) | 0;
 _close(HEAP32[$2 >> 2] | 0) | 0;
 _close(HEAP32[$2 + 4 >> 2] | 0) | 0;
 _close(HEAP32[$3 >> 2] | 0) | 0;
 _close(HEAP32[$3 + 4 >> 2] | 0) | 0;
 STACKTOP = sp;
 return;
}
function __ZL14natural_sourcev() {
 var $1 = 0.0, $17 = 0.0, sp = 0;
 sp = STACKTOP;
 if ((HEAP32[31366] | 0) < (HEAP32[31369] | 0)) {
  HEAPF64[15686] = +HEAPF64[15686] - +HEAPF64[15687];
  HEAPF64[2489] = +HEAPF64[2489] + +HEAPF64[15686];
  $1 = +HEAPF64[2489] * .028;
  $17 = $1;
  STACKTOP = sp;
  return +$17;
 } else {
  HEAPF64[2489] = 0.0;
  $1 = 0.0;
  $17 = $1;
  STACKTOP = sp;
  return +$17;
 }
 return 0.0;
}
function __ZL14CountSyllablesPh($phonemes) {
 $phonemes = $phonemes | 0;
 var $1 = 0, $count = 0, $3 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 $1 = $phonemes;
 $count = 0;
 while (1) {
  $3 = $1;
  $1 = $3 + 1 | 0;
  $6 = HEAPU8[$3] | 0;
  if (($6 | 0) == 0) {
   break;
  }
  if ((HEAPU8[(HEAP32[43256 + ($6 << 2) >> 2] | 0) + 11 | 0] | 0 | 0) == 2) {
   $count = $count + 1 | 0;
  }
 }
 STACKTOP = sp;
 return $count | 0;
}
function __ZL8Wavegen2iiiP7frame_tS0_($length, $modulation, $resume, $fr1, $fr2) {
 $length = $length | 0;
 $modulation = $modulation | 0;
 $resume = $resume | 0;
 $fr1 = $fr1 | 0;
 $fr2 = $fr2 | 0;
 var $15 = 0, sp = 0;
 sp = STACKTOP;
 if (($resume | 0) == 0) {
  __Z8SetSynthiiP7frame_tS0_P7voice_t($length, $modulation, $fr1, $fr2, HEAP32[8292] | 0);
 }
 $15 = __Z7Wavegenv() | 0;
 STACKTOP = sp;
 return $15 | 0;
}
function __Z15SetupTranslatorP10TranslatorPKsPKh($tr, $lengths, $amps) {
 $tr = $tr | 0;
 $lengths = $lengths | 0;
 $amps = $amps | 0;
 var $1 = 0, $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 $1 = $tr;
 $2 = $lengths;
 $3 = $amps;
 if (($2 | 0) != 0) {
  _memcpy($1 + 424 | 0, $2 | 0, 16) | 0;
 }
 if (($3 | 0) == 0) {
  STACKTOP = sp;
  return;
 }
 _memcpy($1 + 408 | 0, $3 | 0, 8) | 0;
 STACKTOP = sp;
 return;
}
function __Z9iswlower2i($c) {
 $c = $c | 0;
 var $1 = 0, $2 = 0, sp = 0;
 sp = STACKTOP;
 $2 = $c;
 do {
  if (($2 | 0) < 128) {
   $1 = _islower($2 | 0) | 0;
  } else {
   if (($2 | 0) > 591) {
    $1 = _iswlower($2) | 0;
    break;
   }
   if ((HEAPU8[112 + ($2 - 128) | 0] | 0 | 0) == 255) {
    $1 = 1;
    break;
   } else {
    $1 = 0;
    break;
   }
  }
 } while (0);
 STACKTOP = sp;
 return $1 | 0;
}
function _iswlower($c) {
 $c = $c | 0;
 var $1 = 0, $2 = 0, sp = 0;
 sp = STACKTOP;
 $2 = $c;
 L1 : do {
  if ($2 >>> 0 < 128 >>> 0) {
   $1 = _islower($2 | 0) | 0;
  } else {
   do {
    if ($2 >>> 0 <= 591 >>> 0) {
     if ((HEAPU8[112 + ($2 - 128) | 0] | 0 | 0) != 255) {
      break;
     }
     $1 = 1;
     break L1;
    }
   } while (0);
   $1 = 0;
  }
 } while (0);
 STACKTOP = sp;
 return $1 | 0;
}
function __ZL14VowelClosenessP7frame_t($fr) {
 $fr = $fr | 0;
 var $1 = 0, $f1 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 $7 = HEAP16[$fr + 4 >> 1] | 0;
 $f1 = $7;
 do {
  if (($7 | 0) < 300) {
   $1 = 3;
  } else {
   if (($f1 | 0) < 400) {
    $1 = 2;
    break;
   }
   if (($f1 | 0) < 500) {
    $1 = 1;
    break;
   } else {
    $1 = 0;
    break;
   }
  }
 } while (0);
 STACKTOP = sp;
 return $1 | 0;
}
function __Z13WordToString2j($word) {
 $word = $word | 0;
 var $1 = 0, $ix = 0, $p = 0, $10 = 0, sp = 0;
 sp = STACKTOP;
 $1 = $word;
 $p = 104408;
 $ix = 3;
 while (1) {
  if (($ix | 0) < 0) {
   break;
  }
  $10 = $1 >>> ($ix << 3 >>> 0) & 255;
  HEAP8[$p] = $10;
  if (($10 << 24 >> 24 | 0) != 0) {
   $p = $p + 1 | 0;
  }
  $ix = $ix - 1 | 0;
 }
 HEAP8[$p] = 0;
 STACKTOP = sp;
 return 104408;
}
function ___uremdi3($a$0, $a$1, $b$0, $b$1) {
 $a$0 = $a$0 | 0;
 $a$1 = $a$1 | 0;
 $b$0 = $b$0 | 0;
 $b$1 = $b$1 | 0;
 var $rem = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 8 | 0;
 $rem = __stackBase__ | 0;
 ___udivmoddi4($a$0, $a$1, $b$0, $b$1, $rem) | 0;
 STACKTOP = __stackBase__;
 return (tempRet0 = HEAP32[$rem + 4 >> 2] | 0, HEAP32[$rem >> 2] | 0) | 0;
}
function __Z11utf8_nbytesPKc($buf) {
 $buf = $buf | 0;
 var $1 = 0, $c = 0, sp = 0;
 sp = STACKTOP;
 $c = HEAP8[$buf | 0] | 0;
 do {
  if (($c & 255 | 0) < 128) {
   $1 = 1;
  } else {
   if (($c & 255 | 0) < 224) {
    $1 = 2;
    break;
   }
   if (($c & 255 | 0) < 240) {
    $1 = 3;
    break;
   } else {
    $1 = 4;
    break;
   }
  }
 } while (0);
 STACKTOP = sp;
 return $1 | 0;
}
function _read_MBR($buffer, $nb_samples) {
 $buffer = $buffer | 0;
 $nb_samples = $nb_samples | 0;
 var $result = 0, $13 = 0, sp = 0;
 sp = STACKTOP;
 $result = __ZL19receive_from_mbrolaPvj($buffer, $nb_samples << 1) | 0;
 if (($result | 0) <= 0) {
  $13 = $result;
  STACKTOP = sp;
  return $13 | 0;
 }
 $result = ($result | 0) / 2 | 0;
 $13 = $result;
 STACKTOP = sp;
 return $13 | 0;
}
function __ZL18CountVowelPositionP12PHONEME_LIST($plist) {
 $plist = $plist | 0;
 var $1 = 0, $count = 0, sp = 0;
 sp = STACKTOP;
 $1 = $plist;
 $count = 0;
 while (1) {
  if ((HEAPU8[(HEAP32[$1 + 8 >> 2] | 0) + 11 | 0] | 0 | 0) == 2) {
   $count = $count + 1 | 0;
  }
  if ((HEAPU16[$1 + 4 >> 1] | 0 | 0) != 0) {
   break;
  }
  $1 = $1 - 24 | 0;
 }
 STACKTOP = sp;
 return $count | 0;
}
function __Z22ProcessLanguageOptionsP16LANGUAGE_OPTIONS($langopts) {
 $langopts = $langopts | 0;
 var $1 = 0, sp = 0;
 sp = STACKTOP;
 $1 = $langopts;
 if ((HEAP32[$1 + 200 >> 2] & 8 | 0) != 0) {
  HEAP32[$1 + 220 >> 2] = 46;
  HEAP32[$1 + 224 >> 2] = 44;
 }
 if ((HEAP32[$1 + 200 >> 2] & 4 | 0) == 0) {
  STACKTOP = sp;
  return;
 }
 HEAP32[$1 + 220 >> 2] = 0;
 STACKTOP = sp;
 return;
}
function __ZL15ResetLetterBitsP10Translatori($tr, $groups) {
 $tr = $tr | 0;
 $groups = $groups | 0;
 var $1 = 0, $ix = 0, $mask = 0, $13 = 0, sp = 0;
 sp = STACKTOP;
 $1 = $tr;
 $mask = ~$groups;
 $ix = 0;
 while (1) {
  if ($ix >>> 0 >= 256 >>> 0) {
   break;
  }
  $13 = $1 + 464 + $ix | 0;
  HEAP8[$13] = (HEAPU8[$13] | 0) & $mask;
  $ix = $ix + 1 | 0;
 }
 STACKTOP = sp;
 return;
}
function ___shlim($f, $lim) {
 $f = $f | 0;
 $lim = $lim | 0;
 var $3 = 0, $5 = 0, $8 = 0;
 HEAP32[$f + 104 >> 2] = $lim;
 $3 = HEAP32[$f + 8 >> 2] | 0;
 $5 = HEAP32[$f + 4 >> 2] | 0;
 $8 = $3 - $5 | 0;
 HEAP32[$f + 108 >> 2] = $8;
 if (($lim | 0) != 0 & ($8 | 0) > ($lim | 0)) {
  HEAP32[$f + 100 >> 2] = $5 + $lim;
  return;
 } else {
  HEAP32[$f + 100 >> 2] = $3;
  return;
 }
}
function __ZL3logPKcz($msg, varrp) {
 $msg = $msg | 0;
 varrp = varrp | 0;
 var $params = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $params = sp | 0;
 $3 = $params | 0;
 HEAP32[$3 >> 2] = varrp;
 HEAP32[$3 + 4 >> 2] = 0;
 _vfprintf(HEAP32[_stderr >> 2] | 0, $msg | 0, $params | 0) | 0;
 _fputc(10, HEAP32[_stderr >> 2] | 0) | 0;
 STACKTOP = sp;
 return;
}
function __ZL11DoAmplitudeiPh($amp, $amp_env) {
 $amp = $amp | 0;
 $amp_env = $amp_env | 0;
 var $q = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[28586] = HEAP32[8360];
 HEAP32[32080] = 0;
 $q = 33456 + (HEAP32[8360] << 4) | 0;
 HEAP32[$q >> 2] = 8;
 HEAP32[$q + 4 >> 2] = 0;
 HEAP32[$q + 8 >> 2] = $amp_env;
 HEAP32[$q + 12 >> 2] = $amp;
 __Z8WcmdqIncv();
 STACKTOP = sp;
 return;
}
function __Z7IsDigitj($c) {
 $c = $c | 0;
 var $1 = 0, $2 = 0, sp = 0;
 sp = STACKTOP;
 $2 = $c;
 L1 : do {
  if ((_iswdigit($2) | 0) != 0) {
   $1 = 1;
  } else {
   do {
    if ($2 >>> 0 >= 2406 >>> 0) {
     if ($2 >>> 0 > 2415 >>> 0) {
      break;
     }
     $1 = 1;
     break L1;
    }
   } while (0);
   $1 = 0;
  }
 } while (0);
 STACKTOP = sp;
 return $1 | 0;
}
function _llvm_cttz_i32(x) {
 x = x | 0;
 var ret = 0;
 ret = HEAP8[cttz_i8 + (x & 255) | 0] | 0;
 if ((ret | 0) < 8) return ret | 0;
 ret = HEAP8[cttz_i8 + (x >> 8 & 255) | 0] | 0;
 if ((ret | 0) < 8) return ret + 8 | 0;
 ret = HEAP8[cttz_i8 + (x >> 16 & 255) | 0] | 0;
 if ((ret | 0) < 8) return ret + 16 | 0;
 return (HEAP8[cttz_i8 + (x >>> 24) | 0] | 0) + 24 | 0;
}
function _llvm_ctlz_i32(x) {
 x = x | 0;
 var ret = 0;
 ret = HEAP8[ctlz_i8 + (x >>> 24) | 0] | 0;
 if ((ret | 0) < 8) return ret | 0;
 ret = HEAP8[ctlz_i8 + (x >> 16 & 255) | 0] | 0;
 if ((ret | 0) < 8) return ret + 8 | 0;
 ret = HEAP8[ctlz_i8 + (x >> 8 & 255) | 0] | 0;
 if ((ret | 0) < 8) return ret + 16 | 0;
 return (HEAP8[ctlz_i8 + (x & 255) | 0] | 0) + 24 | 0;
}
function __ZL11stop_mbrolav() {
 if ((HEAP32[26688] | 0) == 0) {
  return;
 }
 _close(HEAP32[28510] | 0) | 0;
 _close(HEAP32[31352] | 0) | 0;
 _close(HEAP32[28582] | 0) | 0;
 _close(HEAP32[28580] | 0) | 0;
 if ((HEAP32[26928] | 0) != 0) {
  _kill(HEAP32[26928] | 0, 15) | 0;
  _wait(HEAP32[26928] | 0, 0, 0) | 0;
  HEAP32[26928] = 0;
 }
 HEAP32[26688] = 0;
 return;
}
function __ZL9resonatorP11resonator_td($r, $input) {
 $r = $r | 0;
 $input = +$input;
 var $1 = 0, $x = 0.0;
 $1 = $r;
 $x = +HEAPF64[$1 >> 3] * $input + +HEAPF64[$1 + 8 >> 3] * +HEAPF64[$1 + 24 >> 3] + +HEAPF64[$1 + 16 >> 3] * +HEAPF64[$1 + 32 >> 3];
 HEAPF64[$1 + 32 >> 3] = +HEAPF64[$1 + 24 >> 3];
 HEAPF64[$1 + 24 >> 3] = $x;
 STACKTOP = STACKTOP;
 return +$x;
}
function __Z13FreeVoiceListv() {
 var $ix = 0, sp = 0;
 sp = STACKTOP;
 $ix = 0;
 while (1) {
  if (($ix | 0) >= (HEAP32[28506] | 0)) {
   break;
  }
  if ((HEAP32[114376 + ($ix << 2) >> 2] | 0) != 0) {
   _free(HEAP32[114376 + ($ix << 2) >> 2] | 0);
   HEAP32[114376 + ($ix << 2) >> 2] = 0;
  }
  $ix = $ix + 1 | 0;
 }
 HEAP32[28506] = 0;
 STACKTOP = sp;
 return;
}
function __ZL9resonatorP9RESONATORd($r, $input) {
 $r = $r | 0;
 $input = +$input;
 var $1 = 0, $x = 0.0;
 $1 = $r;
 $x = +HEAPF64[$1 >> 3] * $input + +HEAPF64[$1 + 8 >> 3] * +HEAPF64[$1 + 24 >> 3] + +HEAPF64[$1 + 16 >> 3] * +HEAPF64[$1 + 32 >> 3];
 HEAPF64[$1 + 32 >> 3] = +HEAPF64[$1 + 24 >> 3];
 HEAPF64[$1 + 24 >> 3] = $x;
 STACKTOP = STACKTOP;
 return +$x;
}
function __ZL13SetWithRange0ii($value, $max) {
 $value = $value | 0;
 $max = $max | 0;
 var $1 = 0, $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 $2 = $value;
 $3 = $max;
 do {
  if (($2 | 0) < 0) {
   $1 = 0;
  } else {
   if (($2 | 0) > ($3 | 0)) {
    $1 = $3;
    break;
   } else {
    $1 = $2;
    break;
   }
  }
 } while (0);
 STACKTOP = sp;
 return $1 | 0;
}
function __Z9IsBracketi($c) {
 $c = $c | 0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = $c;
 do {
  if (($2 | 0) >= 8212) {
   if (($2 | 0) > 8223) {
    label = 4;
    break;
   }
   $1 = 1;
  } else {
   label = 4;
  }
 } while (0);
 if ((label | 0) == 4) {
  $1 = __Z11lookupwcharPKti(24832, $2) | 0;
 }
 STACKTOP = sp;
 return $1 | 0;
}
function __ZL7DBtoLINl($dB) {
 $dB = $dB | 0;
 var $1 = 0.0, $2 = 0, $16 = 0.0, sp = 0;
 sp = STACKTOP;
 $2 = $dB;
 do {
  if (($2 | 0) >= 0) {
   if (($2 | 0) > 87) {
    break;
   }
   $1 = +(HEAP16[18760 + ($2 << 1) >> 1] | 0) * .001;
   $16 = $1;
   STACKTOP = sp;
   return +$16;
  }
 } while (0);
 $1 = 0.0;
 $16 = $1;
 STACKTOP = sp;
 return +$16;
}
function _setVolumeRatio_MBR($value) {
 $value = +$value;
 var $1 = 0.0, sp = 0;
 sp = STACKTOP;
 $1 = $value;
 if ($1 == +HEAPF32[7922]) {
  STACKTOP = sp;
  return;
 }
 HEAPF32[7922] = $1;
 if ((HEAP32[26688] | 0) != 1) {
  STACKTOP = sp;
  return;
 } else {
  __ZL11stop_mbrolav();
  _init_MBR(HEAP32[28462] | 0) | 0;
  STACKTOP = sp;
  return;
 }
}
function __Z10InitBreathv() {
 var $ix = 0, sp = 0;
 sp = STACKTOP;
 HEAPF64[3960] = -3.1415927 / +(HEAP32[9496] | 0);
 HEAPF64[3058] = +HEAPF64[3960] * -2.0;
 $ix = 0;
 while (1) {
  if (($ix | 0) >= 9) {
   break;
  }
  __ZL12setresonatorP9RESONATORiii(107352 + ($ix * 40 | 0) | 0, 2e3, 200, 1);
  $ix = $ix + 1 | 0;
 }
 STACKTOP = sp;
 return;
}
function __Z11MarkerEventijiiPh($type, $char_position, $value, $value2, $out_ptr) {
 $type = $type | 0;
 $char_position = $char_position | 0;
 $value = $value | 0;
 $value2 = $value2 | 0;
 $out_ptr = $out_ptr | 0;
 var sp = 0;
 sp = STACKTOP;
 if (($type | 0) != 2) {
  STACKTOP = sp;
  return;
 }
 HEAP32[19600] = 1;
 STACKTOP = sp;
 return;
}
function __ZL10GetC_ungeti($c) {
 $c = $c | 0;
 var $1 = 0, sp = 0;
 sp = STACKTOP;
 $1 = $c;
 if ((HEAP32[26954] | 0) != 0) {
  _ungetc($1 | 0, HEAP32[26954] | 0) | 0;
  STACKTOP = sp;
  return;
 } else {
  HEAP32[19444] = (HEAP32[19444] | 0) - 1;
  HEAP8[HEAP32[19444] | 0] = $1;
  HEAP32[28590] = 0;
  STACKTOP = sp;
  return;
 }
}
function __Z9IsDigit09j($c) {
 $c = $c | 0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = $c;
 do {
  if ($2 >>> 0 >= 48 >>> 0) {
   if ($2 >>> 0 > 57 >>> 0) {
    label = 4;
    break;
   }
   $1 = 1;
  } else {
   label = 4;
  }
 } while (0);
 if ((label | 0) == 4) {
  $1 = 0;
 }
 STACKTOP = sp;
 return $1 | 0;
}
function __Z8isspace2j($c) {
 $c = $c | 0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = $c;
 do {
  if (($2 & 255 | 0) == 0) {
   label = 3;
  } else {
   if ($2 >>> 0 > 32 >>> 0) {
    label = 3;
    break;
   }
   $1 = 1;
  }
 } while (0);
 if ((label | 0) == 3) {
  $1 = 0;
 }
 STACKTOP = sp;
 return $1 | 0;
}
function __Z11Write4BytesP8_IO_FILEi($f, $value) {
 $f = $f | 0;
 $value = $value | 0;
 var $1 = 0, $2 = 0, $ix = 0, sp = 0;
 sp = STACKTOP;
 $1 = $f;
 $2 = $value;
 $ix = 0;
 while (1) {
  if (($ix | 0) >= 4) {
   break;
  }
  _fputc($2 & 255 | 0, $1 | 0) | 0;
  $2 = $2 >> 8;
  $ix = $ix + 1 | 0;
 }
 STACKTOP = sp;
 return;
}
function __Z10Read4BytesP8_IO_FILE($f) {
 $f = $f | 0;
 var $1 = 0, $ix = 0, $acc = 0, sp = 0;
 sp = STACKTOP;
 $1 = $f;
 $acc = 0;
 $ix = 0;
 while (1) {
  if (($ix | 0) >= 4) {
   break;
  }
  $acc = $acc + (((_fgetc($1 | 0) | 0) & 255 & 255) << ($ix << 3)) | 0;
  $ix = $ix + 1 | 0;
 }
 STACKTOP = sp;
 return $acc | 0;
}
function __Z3Eofv() {
 var $1 = 0, sp = 0;
 sp = STACKTOP;
 do {
  if ((HEAP32[30932] | 0) != 0) {
   $1 = 0;
  } else {
   if ((HEAP32[26954] | 0) != 0) {
    $1 = _feof(HEAP32[26954] | 0) | 0;
    break;
   } else {
    $1 = HEAP32[28590] | 0;
    break;
   }
  }
 } while (0);
 STACKTOP = sp;
 return $1 | 0;
}
function _iswspace($c) {
 $c = $c | 0;
 var $1 = 0, $2 = 0, sp = 0;
 sp = STACKTOP;
 $2 = $c;
 do {
  if ($2 >>> 0 < 128 >>> 0) {
   $1 = _isspace($2 | 0) | 0;
  } else {
   if (($2 | 0) == 160) {
    $1 = 1;
    break;
   } else {
    $1 = 0;
    break;
   }
  }
 } while (0);
 STACKTOP = sp;
 return $1 | 0;
}
function _strncpy(pdest, psrc, num) {
 pdest = pdest | 0;
 psrc = psrc | 0;
 num = num | 0;
 var padding = 0, i = 0;
 while ((i | 0) < (num | 0)) {
  HEAP8[pdest + i | 0] = padding ? 0 : HEAP8[psrc + i | 0] | 0;
  padding = padding ? 1 : (HEAP8[psrc + i | 0] | 0) == 0;
  i = i + 1 | 0;
 }
 return pdest | 0;
}
function __ZL9SetPlist2P13PHONEME_LIST2h($p, $phcode) {
 $p = $p | 0;
 $phcode = $phcode | 0;
 var $1 = 0;
 $1 = $p;
 HEAP8[$1 + 2 | 0] = $phcode;
 HEAP8[$1 + 3 | 0] = 0;
 HEAP8[$1 + 7 | 0] = 0;
 HEAP16[$1 >> 1] = HEAP32[28516];
 HEAP16[$1 + 4 >> 1] = 0;
 HEAP32[28516] = 0;
 STACKTOP = STACKTOP;
 return;
}
function __Z12WordToStringj($word) {
 $word = $word | 0;
 var $1 = 0, $ix = 0, sp = 0;
 sp = STACKTOP;
 $1 = $word;
 $ix = 0;
 while (1) {
  if (($ix | 0) >= 4) {
   break;
  }
  HEAP8[104416 + $ix | 0] = $1 >>> ($ix << 3 >>> 0);
  $ix = $ix + 1 | 0;
 }
 HEAP8[104420] = 0;
 STACKTOP = sp;
 return 104416;
}
function __Z22SelectPhonemeTableNamePKc($name) {
 $name = $name | 0;
 var $1 = 0, $ix = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 $4 = __Z18LookupPhonemeTablePKc($name) | 0;
 $ix = $4;
 if (($4 | 0) == -1) {
  $1 = -1;
 } else {
  __Z18SelectPhonemeTablei($ix);
  $1 = $ix;
 }
 STACKTOP = sp;
 return $1 | 0;
}
function _memcmp(p1, p2, num) {
 p1 = p1 | 0;
 p2 = p2 | 0;
 num = num | 0;
 var i = 0, v1 = 0, v2 = 0;
 while ((i | 0) < (num | 0)) {
  v1 = HEAPU8[p1 + i | 0] | 0;
  v2 = HEAPU8[p2 + i | 0] | 0;
  if ((v1 | 0) != (v2 | 0)) return ((v1 | 0) > (v2 | 0) ? 1 : -1) | 0;
  i = i + 1 | 0;
 }
 return 0;
}
function __Z13DoVoiceChangeP7voice_t($v) {
 $v = $v | 0;
 var $v2 = 0, sp = 0;
 sp = STACKTOP;
 $v2 = _malloc(1364) | 0;
 _memcpy($v2 | 0, $v | 0, 1364) | 0;
 HEAP32[33456 + (HEAP32[8360] << 4) >> 2] = 11;
 HEAP32[33464 + (HEAP32[8360] << 4) >> 2] = $v2;
 __Z8WcmdqIncv();
 STACKTOP = sp;
 return;
}
function __ZL17free_pending_datav() {
 var $p = 0, $head = 0, sp = 0;
 sp = STACKTOP;
 $head = HEAP32[28360] | 0;
 while (1) {
  if (($head | 0) == 0) {
   break;
  }
  $p = $head;
  $head = HEAP32[$head >> 2] | 0;
  _free($p);
 }
 HEAP32[28360] = 0;
 HEAP32[28358] = 0;
 STACKTOP = sp;
 return;
}
function _bitshift64Ashr(low, high, bits) {
 low = low | 0;
 high = high | 0;
 bits = bits | 0;
 if ((bits | 0) < 32) {
  tempRet0 = high >> bits;
  return low >>> bits | (high & (1 << bits) - 1) << 32 - bits;
 }
 tempRet0 = (high | 0) < 0 ? -1 : 0;
 return high >> bits - 32 | 0;
}
function __warnx($fmt, varrp) {
 $fmt = $fmt | 0;
 varrp = varrp | 0;
 var $ap = 0, $2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $ap = sp | 0;
 $2 = $ap;
 HEAP32[$2 >> 2] = varrp;
 HEAP32[$2 + 4 >> 2] = 0;
 __vwarnx($fmt, $ap | 0);
 STACKTOP = sp;
 return;
}
function _strcat(pdest, psrc) {
 pdest = pdest | 0;
 psrc = psrc | 0;
 var i = 0, pdestEnd = 0;
 pdestEnd = pdest + (_strlen(pdest) | 0) | 0;
 do {
  HEAP8[pdestEnd + i | 0] = HEAP8[psrc + i | 0];
  i = i + 1 | 0;
 } while (HEAP8[psrc + (i - 1) | 0] | 0);
 return pdest | 0;
}
function _getopt_long($nargc, $nargv, $options, $long_options, $idx) {
 $nargc = $nargc | 0;
 $nargv = $nargv | 0;
 $options = $options | 0;
 $long_options = $long_options | 0;
 $idx = $idx | 0;
 return _getopt_internal($nargc, $nargv, $options, $long_options, $idx, 1) | 0;
}
function __Z8strncpy0PcPKci($to, $from, $size) {
 $to = $to | 0;
 $from = $from | 0;
 $size = $size | 0;
 var $1 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 $1 = $to;
 $3 = $size;
 _strncpy($1 | 0, $from | 0, $3 | 0) | 0;
 HEAP8[$1 + ($3 - 1) | 0] = 0;
 STACKTOP = sp;
 return;
}
function _bitshift64Shl(low, high, bits) {
 low = low | 0;
 high = high | 0;
 bits = bits | 0;
 if ((bits | 0) < 32) {
  tempRet0 = high << bits | (low & (1 << bits) - 1 << 32 - bits) >>> 32 - bits;
  return low << bits;
 }
 tempRet0 = low << bits - 32;
 return 0;
}
function __Z18SelectPhonemeTablei($number) {
 $number = $number | 0;
 var $1 = 0, sp = 0;
 sp = STACKTOP;
 $1 = $number;
 HEAP32[19560] = 0;
 __ZL17SetUpPhonemeTableii($1, 0);
 HEAP32[19560] = (HEAP32[19560] | 0) + 1;
 HEAP32[22646] = $1;
 STACKTOP = sp;
 return;
}
function _bitshift64Lshr(low, high, bits) {
 low = low | 0;
 high = high | 0;
 bits = bits | 0;
 if ((bits | 0) < 32) {
  tempRet0 = high >>> bits;
  return low >>> bits | (high & (1 << bits) - 1) << 32 - bits;
 }
 tempRet0 = 0;
 return high >>> bits - 32 | 0;
}
function __ZL9gen_noised($noise) {
 $noise = +$noise;
 var $1 = 0.0, sp = 0;
 sp = STACKTOP;
 $1 = $noise;
 HEAP32[31371] = ((_rand() | 0) % 16383 | 0) - 8191;
 $1 = +(HEAP32[31371] | 0) + +HEAPF64[2339] * .75;
 HEAPF64[2339] = $1;
 STACKTOP = sp;
 return +$1;
}
function __Z16DeleteTranslatorP10Translator($tr) {
 $tr = $tr | 0;
 var $1 = 0, sp = 0;
 sp = STACKTOP;
 $1 = $tr;
 if ((HEAP32[$1 + 808 >> 2] | 0) != 0) {
  __Z4FreePv(HEAP32[$1 + 808 >> 2] | 0);
 }
 __Z4FreePv($1);
 STACKTOP = sp;
 return;
}
function __Z9WcmdqStopv() {
 HEAP32[8362] = 0;
 HEAP32[8360] = 0;
 if ((HEAP32[28398] | 0) != 0) {
  _sonicDestroyStream(HEAP32[28398] | 0);
  HEAP32[28398] = 0;
 }
 if ((HEAP8[78288] | 0) == 0) {
  return;
 }
 __Z11MbrolaResetv();
 return;
}
function copyTempFloat(ptr) {
 ptr = ptr | 0;
 HEAP8[tempDoublePtr] = HEAP8[ptr];
 HEAP8[tempDoublePtr + 1 | 0] = HEAP8[ptr + 1 | 0];
 HEAP8[tempDoublePtr + 2 | 0] = HEAP8[ptr + 2 | 0];
 HEAP8[tempDoublePtr + 3 | 0] = HEAP8[ptr + 3 | 0];
}
function __ZL16impulsive_sourcev() {
 if ((HEAP32[31366] | 0) < 3) {
  HEAPF64[2478] = +HEAPF64[19800 + (HEAP32[31366] << 3) >> 3];
 } else {
  HEAPF64[2478] = 0.0;
 }
 return +(+__ZL9resonatorP11resonator_td(126712, +HEAPF64[2478]));
}
function __Z8strchr_wPKci($s, $c) {
 $s = $s | 0;
 $c = $c | 0;
 var $1 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 $3 = $c;
 if (($3 | 0) >= 128) {
  $1 = 0;
 } else {
  $1 = _strchr($s | 0, $3 | 0) | 0;
 }
 STACKTOP = sp;
 return $1 | 0;
}
function __ZL12EndAmplitudev() {
 if ((HEAP32[32080] | 0) <= 0) {
  return;
 }
 if ((HEAP32[33460 + (HEAP32[28586] << 4) >> 2] | 0) == 0) {
  HEAP32[33460 + (HEAP32[28586] << 4) >> 2] = HEAP32[32080];
 }
 HEAP32[32080] = 0;
 return;
}
function __Z12DoSonicSpeedi($value) {
 $value = $value | 0;
 var sp = 0;
 sp = STACKTOP;
 HEAP32[33456 + (HEAP32[8360] << 4) >> 2] = 15;
 HEAP32[33460 + (HEAP32[8360] << 4) >> 2] = $value;
 __Z8WcmdqIncv();
 STACKTOP = sp;
 return;
}
function _wcslen($str) {
 $str = $str | 0;
 var $1 = 0, $ix = 0, sp = 0;
 sp = STACKTOP;
 $1 = $str;
 $ix = 0;
 while (1) {
  if ((HEAP32[$1 >> 2] | 0) == 0) {
   break;
  }
  $ix = $ix + 1 | 0;
 }
 STACKTOP = sp;
 return $ix | 0;
}
function ___udivdi3($a$0, $a$1, $b$0, $b$1) {
 $a$0 = $a$0 | 0;
 $a$1 = $a$1 | 0;
 $b$0 = $b$0 | 0;
 $b$1 = $b$1 | 0;
 var $1$0 = 0;
 $1$0 = ___udivmoddi4($a$0, $a$1, $b$0, $b$1, 0) | 0;
 return (tempRet0 = tempRet0, $1$0) | 0;
}
function __ZL14SetLetterVowelP10Translatori($tr, $c) {
 $tr = $tr | 0;
 $c = $c | 0;
 var $1 = 0, $2 = 0;
 $1 = $tr;
 $2 = $c;
 HEAP8[$1 + 464 + $2 | 0] = HEAP8[$1 + 464 + $2 | 0] & 64 | 129;
 STACKTOP = STACKTOP;
 return;
}
function __Z7IsVowelP10Translatori($tr, $letter) {
 $tr = $tr | 0;
 $letter = $letter | 0;
 var $5 = 0, sp = 0;
 sp = STACKTOP;
 $5 = __ZL8IsLetterP10Translatorii($tr, $letter, 7) | 0;
 STACKTOP = sp;
 return $5 | 0;
}
function __Z12GetAmplitudev() {
 HEAP32[6658] = (Math_imul(((HEAP32[19607] | 0) * 55 | 0 | 0) / 100 | 0, HEAPU8[23632 + (HEAP32[19617] | 0) | 0] | 0) | 0) / 16 | 0;
 STACKTOP = STACKTOP;
 return HEAP32[6658] | 0;
}
function _strtok($s, $delim) {
 $s = $s | 0;
 $delim = $delim | 0;
 var $5 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 8 | 0;
 $5 = ___strtok_r($s, $delim, sp | 0, 1) | 0;
 STACKTOP = sp;
 return $5 | 0;
}
function _strcpy(pdest, psrc) {
 pdest = pdest | 0;
 psrc = psrc | 0;
 var i = 0;
 do {
  HEAP8[pdest + i | 0] = HEAP8[psrc + i | 0];
  i = i + 1 | 0;
 } while (HEAP8[psrc + (i - 1) | 0] | 0);
 return pdest | 0;
}
function __ZL10RemoveCharPc($p) {
 $p = $p | 0;
 var $1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 8 | 0;
 $1 = $p;
 _memset($1 | 0, 32, __Z7utf8_inPiPKc(sp | 0, $1) | 0) | 0;
 STACKTOP = sp;
 return;
}
function _iswalnum($c) {
 $c = $c | 0;
 var $1 = 0, $2 = 0, sp = 0;
 sp = STACKTOP;
 $2 = $c;
 if ((_iswdigit($2) | 0) != 0) {
  $1 = 1;
 } else {
  $1 = _iswalpha($2) | 0;
 }
 STACKTOP = sp;
 return $1 | 0;
}
function _iswpunct($c) {
 $c = $c | 0;
 var $1 = 0, $2 = 0, sp = 0;
 sp = STACKTOP;
 $2 = $c;
 if ($2 >>> 0 < 256 >>> 0) {
  $1 = _ispunct($2 | 0) | 0;
 } else {
  $1 = 0;
 }
 STACKTOP = sp;
 return $1 | 0;
}
function _iswdigit($c) {
 $c = $c | 0;
 var $1 = 0, $2 = 0, sp = 0;
 sp = STACKTOP;
 $2 = $c;
 if ($2 >>> 0 < 128 >>> 0) {
  $1 = _isdigit($2 | 0) | 0;
 } else {
  $1 = 0;
 }
 STACKTOP = sp;
 return $1 | 0;
}
function _i64Subtract(a, b, c, d) {
 a = a | 0;
 b = b | 0;
 c = c | 0;
 d = d | 0;
 var h = 0;
 h = b - d >>> 0;
 h = b - d - (c >>> 0 > a >>> 0 | 0) >>> 0;
 return (tempRet0 = h, a - c >>> 0 | 0) | 0;
}
function __Z7utf8_inPiPKc($c, $buf) {
 $c = $c | 0;
 $buf = $buf | 0;
 var $5 = 0, sp = 0;
 sp = STACKTOP;
 $5 = __Z8utf8_in2PiPKci($c, $buf, 0) | 0;
 STACKTOP = sp;
 return $5 | 0;
}
function _write_MBR($data) {
 $data = $data | 0;
 var $3 = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[26688] = 2;
 $3 = __ZL14send_to_mbrolaPKc($data) | 0;
 STACKTOP = sp;
 return $3 | 0;
}
function _i64Add(a, b, c, d) {
 a = a | 0;
 b = b | 0;
 c = c | 0;
 d = d | 0;
 var l = 0;
 l = a + c >>> 0;
 return (tempRet0 = b + d + (l >>> 0 < a >>> 0 | 0) >>> 0, l | 0) | 0;
}
function __Z9WcmdqFreev() {
 var $i = 0;
 $i = (HEAP32[8362] | 0) - (HEAP32[8360] | 0) | 0;
 if (($i | 0) <= 0) {
  $i = $i + 170 | 0;
 }
 STACKTOP = STACKTOP;
 return $i | 0;
}
function __ZL10AllocFramev() {
 HEAP32[22872] = (HEAP32[22872] | 0) + 1;
 if ((HEAP32[22872] | 0) >= 170) {
  HEAP32[22872] = 0;
 }
 return 91496 + (HEAP32[22872] << 6) | 0;
}
function __Z12InitNamedatav() {
 HEAP32[28868] = 0;
 if ((HEAP32[19552] | 0) == 0) {
  return;
 }
 _free(HEAP32[19552] | 0);
 HEAP32[19552] = 0;
 HEAP32[31346] = 0;
 return;
}
function dynCall_iiii(index, a1, a2, a3) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 return FUNCTION_TABLE_iiii[index & 1](a1 | 0, a2 | 0, a3 | 0) | 0;
}
function __Z14SynthesizeInitv() {
 HEAP32[28466] = 0;
 HEAP32[28586] = 0;
 HEAP32[31356] = 0;
 HEAP32[28442] = -1;
 HEAP8[125377] = 0;
 HEAP8[125381] = 0;
 return;
}
function stackAlloc(size) {
 size = size | 0;
 var ret = 0;
 ret = STACKTOP;
 STACKTOP = STACKTOP + size | 0;
 STACKTOP = STACKTOP + 7 & -8;
 return ret | 0;
}
function __Z4FreePv($ptr) {
 $ptr = $ptr | 0;
 var $1 = 0, sp = 0;
 sp = STACKTOP;
 $1 = $ptr;
 if (($1 | 0) != 0) {
  _free($1);
 }
 STACKTOP = sp;
 return;
}
function _sonicSetSpeed($stream, $speed) {
 $stream = $stream | 0;
 $speed = +$speed;
 HEAPF32[$stream + 16 >> 2] = $speed;
 STACKTOP = STACKTOP;
 return;
}
function _close_MBR() {
 __ZL11stop_mbrolav();
 __ZL17free_pending_datav();
 _free(HEAP32[28462] | 0);
 HEAP32[28462] = 0;
 HEAPF32[7922] = 1.0;
 return;
}
function setThrew(threw, value) {
 threw = threw | 0;
 value = value | 0;
 if ((__THREW__ | 0) == 0) {
  __THREW__ = threw;
  threwValue = value;
 }
}
function __ZL12WcmdqIncHeadv() {
 HEAP32[8362] = (HEAP32[8362] | 0) + 1;
 if ((HEAP32[8362] | 0) < 170) {
  return;
 }
 HEAP32[8362] = 0;
 return;
}
function dynCall_iii(index, a1, a2) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 return FUNCTION_TABLE_iii[index & 15](a1 | 0, a2 | 0) | 0;
}
function _strlen(ptr) {
 ptr = ptr | 0;
 var curr = 0;
 curr = ptr;
 while (HEAP8[curr] | 0) {
  curr = curr + 1 | 0;
 }
 return curr - ptr | 0;
}
function _tolower(chr) {
 chr = chr | 0;
 if ((chr | 0) < 65) return chr | 0;
 if ((chr | 0) > 90) return chr | 0;
 return chr - 65 + 97 | 0;
}
function __Z8WcmdqIncv() {
 HEAP32[8360] = (HEAP32[8360] | 0) + 1;
 if ((HEAP32[8360] | 0) < 170) {
  return;
 }
 HEAP32[8360] = 0;
 return;
}
function __ZL13StartSyllablev() {
 if ((HEAP32[28526] | 0) != (HEAP32[28454] | 0)) {
  return;
 }
 HEAP32[28526] = HEAP32[8360];
 return;
}
function dynCall_vii(index, a1, a2) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 FUNCTION_TABLE_vii[index & 3](a1 | 0, a2 | 0);
}
function _sonicGetSpeed($stream) {
 $stream = $stream | 0;
 STACKTOP = STACKTOP;
 return +(+HEAPF32[$stream + 16 >> 2]);
}
function dynCall_ii(index, a1) {
 index = index | 0;
 a1 = a1 | 0;
 return FUNCTION_TABLE_ii[index & 1](a1 | 0) | 0;
}
function dynCall_vi(index, a1) {
 index = index | 0;
 a1 = a1 | 0;
 FUNCTION_TABLE_vi[index & 1](a1 | 0);
}
function __Z13Reverse4Bytesi($word) {
 $word = $word | 0;
 STACKTOP = STACKTOP;
 return $word | 0;
}
function _setNoError_MBR($no_error) {
 $no_error = $no_error | 0;
 STACKTOP = STACKTOP;
 return;
}
function __ZL17WavegenInitPkDatai($which) {
 $which = $which | 0;
 STACKTOP = STACKTOP;
 return;
}
function __ZL6UngetCi($c) {
 $c = $c | 0;
 HEAP32[30932] = $c;
 STACKTOP = STACKTOP;
 return;
}
function b0(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 abort(0);
 return 0;
}
function _scalbnl($x, $n) {
 $x = +$x;
 $n = $n | 0;
 return +(+_scalbn($x, $n));
}
function dynCall_v(index) {
 index = index | 0;
 FUNCTION_TABLE_v[index & 1]();
}
function _flush_MBR() {
 return (__ZL14send_to_mbrolaPKc(9936) | 0) == 3 | 0;
}
function b5(p0, p1) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 abort(5);
 return 0;
}
function __Z9WcmdqUsedv() {
 return 170 - (__Z9WcmdqFreev() | 0) | 0;
}
function setTempRet9(value) {
 value = value | 0;
 tempRet9 = value;
}
function setTempRet8(value) {
 value = value | 0;
 tempRet8 = value;
}
function setTempRet7(value) {
 value = value | 0;
 tempRet7 = value;
}
function setTempRet6(value) {
 value = value | 0;
 tempRet6 = value;
}
function setTempRet5(value) {
 value = value | 0;
 tempRet5 = value;
}
function setTempRet4(value) {
 value = value | 0;
 tempRet4 = value;
}
function setTempRet3(value) {
 value = value | 0;
 tempRet3 = value;
}
function setTempRet2(value) {
 value = value | 0;
 tempRet2 = value;
}
function setTempRet1(value) {
 value = value | 0;
 tempRet1 = value;
}
function setTempRet0(value) {
 value = value | 0;
 tempRet0 = value;
}
function _atof($s) {
 $s = $s | 0;
 return +(+_strtod($s, 0));
}
function stackRestore(top) {
 top = top | 0;
 STACKTOP = top;
}
function b2(p0, p1) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 abort(2);
}
function __Z11MbrolaResetv() {
 _reset_MBR() | 0;
 return;
}
function b3(p0) {
 p0 = p0 | 0;
 abort(3);
 return 0;
}
function __Z16WavegenOpenSoundv() {
 return 0;
}
function __Z16WavegenInitSoundv() {
 return 0;
}
function stackSave() {
 return STACKTOP | 0;
}
function b1(p0) {
 p0 = p0 | 0;
 abort(1);
}
function b4() {
 abort(4);
}
function runPostSets() {
}
// EMSCRIPTEN_END_FUNCS
  var FUNCTION_TABLE_iiii = [b0,b0];
  var FUNCTION_TABLE_vi = [b1,b1];
  var FUNCTION_TABLE_vii = [b2,b2,__warnx,b2];
  var FUNCTION_TABLE_ii = [b3,b3];
  var FUNCTION_TABLE_v = [b4,b4];
  var FUNCTION_TABLE_iii = [b5,b5,__ZL13rgroup_sorterP6RGROUPS0_,b5,__Z13string_sorterPPcS0_,b5,__ZL15VoiceNameSorterPKvS0_,b5,__ZL16VoiceScoreSorterPKvS0_,b5,b5,b5,b5,b5,b5,b5];
  return { _memcmp: _memcmp, _strlen: _strlen, _strcat: _strcat, _free: _free, _main: _main, _realloc: _realloc, _strncpy: _strncpy, _memmove: _memmove, _tolower: _tolower, _memset: _memset, _malloc: _malloc, _memcpy: _memcpy, _strcpy: _strcpy, _calloc: _calloc, runPostSets: runPostSets, stackAlloc: stackAlloc, stackSave: stackSave, stackRestore: stackRestore, setThrew: setThrew, setTempRet0: setTempRet0, setTempRet1: setTempRet1, setTempRet2: setTempRet2, setTempRet3: setTempRet3, setTempRet4: setTempRet4, setTempRet5: setTempRet5, setTempRet6: setTempRet6, setTempRet7: setTempRet7, setTempRet8: setTempRet8, setTempRet9: setTempRet9, dynCall_iiii: dynCall_iiii, dynCall_vi: dynCall_vi, dynCall_vii: dynCall_vii, dynCall_ii: dynCall_ii, dynCall_v: dynCall_v, dynCall_iii: dynCall_iii };
})
// EMSCRIPTEN_END_ASM
({ "Math": Math, "Int8Array": Int8Array, "Int16Array": Int16Array, "Int32Array": Int32Array, "Uint8Array": Uint8Array, "Uint16Array": Uint16Array, "Uint32Array": Uint32Array, "Float32Array": Float32Array, "Float64Array": Float64Array }, { "abort": abort, "assert": assert, "asmPrintInt": asmPrintInt, "asmPrintFloat": asmPrintFloat, "min": Math_min, "invoke_iiii": invoke_iiii, "invoke_vi": invoke_vi, "invoke_vii": invoke_vii, "invoke_ii": invoke_ii, "invoke_v": invoke_v, "invoke_iii": invoke_iii, "_llvm_lifetime_end": _llvm_lifetime_end, "_lseek": _lseek, "_rand": _rand, "__scanString": __scanString, "_fclose": _fclose, "_kill": _kill, "_fflush": _fflush, "_strtol": _strtol, "_fputc": _fputc, "_fwrite": _fwrite, "_send": _send, "_isspace": _isspace, "_dup2": _dup2, "_read": _read, "_execl": _execl, "_strstr": _strstr, "_fsync": _fsync, "_signal": _signal, "_remove": _remove, "_opendir": _opendir, "_fmod": _fmod, "_strcmp": _strcmp, "_memchr": _memchr, "_strncmp": _strncmp, "_snprintf": _snprintf, "_fgetc": _fgetc, "_readdir": _readdir, "__getFloat": __getFloat, "_fgets": _fgets, "_close": _close, "_mktemp": _mktemp, "_poll": _poll, "___setErrNo": ___setErrNo, "_access": _access, "_ftell": _ftell, "_abs": _abs, "_exit": _exit, "_sprintf": _sprintf, "_strrchr": _strrchr, "_fcntl": _fcntl, "_copysign": _copysign, "_recv": _recv, "_wait": _wait, "_cos": _cos, "_islower": _islower, "__exit": __exit, "_isupper": _isupper, "_llvm_va_end": _llvm_va_end, "_setlocale": _setlocale, "_printf": _printf, "_pread": _pread, "_fopen": _fopen, "_open": _open, "_sysconf": _sysconf, "_isalnum": _isalnum, "_qsort": _qsort, "_system": _system, "_isalpha": _isalpha, "_rmdir": _rmdir, "_strdup": _strdup, "_fork": _fork, "__formatString": __formatString, "_getenv": _getenv, "_atoi": _atoi, "_vfprintf": _vfprintf, "_llvm_pow_f64": _llvm_pow_f64, "_sbrk": _sbrk, "___errno_location": ___errno_location, "_strerror": _strerror, "_llvm_lifetime_start": _llvm_lifetime_start, "__parseInt": __parseInt, "_ungetc": _ungetc, "_vsnprintf": _vsnprintf, "_sscanf": _sscanf, "_creat": _creat, "_fread": _fread, "_abort": _abort, "_fprintf": _fprintf, "_isdigit": _isdigit, "___buildEnvironment": ___buildEnvironment, "_feof": _feof, "_ispunct": _ispunct, "_fabs": _fabs, "__reallyNegative": __reallyNegative, "_fseek": _fseek, "_write": _write, "_mkstemp": _mkstemp, "_sin": _sin, "_strchr": _strchr, "_stat": _stat, "_time": _time, "_closedir": _closedir, "_unlink": _unlink, "_pwrite": _pwrite, "_strerror_r": _strerror_r, "_pipe": _pipe, "_exp": _exp, "_readdir_r": _readdir_r, "STACKTOP": STACKTOP, "STACK_MAX": STACK_MAX, "tempDoublePtr": tempDoublePtr, "ABORT": ABORT, "cttz_i8": cttz_i8, "ctlz_i8": ctlz_i8, "NaN": NaN, "Infinity": Infinity, "_stdin": _stdin, "___progname": ___progname, "_stderr": _stderr, "_stdout": _stdout }, buffer);
var _memcmp = Module["_memcmp"] = asm["_memcmp"];
var _strlen = Module["_strlen"] = asm["_strlen"];
var _strcat = Module["_strcat"] = asm["_strcat"];
var _free = Module["_free"] = asm["_free"];
var _main = Module["_main"] = asm["_main"];
var _realloc = Module["_realloc"] = asm["_realloc"];
var _strncpy = Module["_strncpy"] = asm["_strncpy"];
var _memmove = Module["_memmove"] = asm["_memmove"];
var _tolower = Module["_tolower"] = asm["_tolower"];
var _memset = Module["_memset"] = asm["_memset"];
var _malloc = Module["_malloc"] = asm["_malloc"];
var _memcpy = Module["_memcpy"] = asm["_memcpy"];
var _strcpy = Module["_strcpy"] = asm["_strcpy"];
var _calloc = Module["_calloc"] = asm["_calloc"];
var runPostSets = Module["runPostSets"] = asm["runPostSets"];
var dynCall_iiii = Module["dynCall_iiii"] = asm["dynCall_iiii"];
var dynCall_vi = Module["dynCall_vi"] = asm["dynCall_vi"];
var dynCall_vii = Module["dynCall_vii"] = asm["dynCall_vii"];
var dynCall_ii = Module["dynCall_ii"] = asm["dynCall_ii"];
var dynCall_v = Module["dynCall_v"] = asm["dynCall_v"];
var dynCall_iii = Module["dynCall_iii"] = asm["dynCall_iii"];
Runtime.stackAlloc = function(size) { return asm['stackAlloc'](size) };
Runtime.stackSave = function() { return asm['stackSave']() };
Runtime.stackRestore = function(top) { asm['stackRestore'](top) };
// TODO: strip out parts of this we do not need
//======= begin closure i64 code =======
// Copyright 2009 The Closure Library Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * @fileoverview Defines a Long class for representing a 64-bit two's-complement
 * integer value, which faithfully simulates the behavior of a Java "long". This
 * implementation is derived from LongLib in GWT.
 *
 */
var i64Math = (function() { // Emscripten wrapper
  var goog = { math: {} };
  /**
   * Constructs a 64-bit two's-complement integer, given its low and high 32-bit
   * values as *signed* integers.  See the from* functions below for more
   * convenient ways of constructing Longs.
   *
   * The internal representation of a long is the two given signed, 32-bit values.
   * We use 32-bit pieces because these are the size of integers on which
   * Javascript performs bit-operations.  For operations like addition and
   * multiplication, we split each number into 16-bit pieces, which can easily be
   * multiplied within Javascript's floating-point representation without overflow
   * or change in sign.
   *
   * In the algorithms below, we frequently reduce the negative case to the
   * positive case by negating the input(s) and then post-processing the result.
   * Note that we must ALWAYS check specially whether those values are MIN_VALUE
   * (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as
   * a positive number, it overflows back into a negative).  Not handling this
   * case would often result in infinite recursion.
   *
   * @param {number} low  The low (signed) 32 bits of the long.
   * @param {number} high  The high (signed) 32 bits of the long.
   * @constructor
   */
  goog.math.Long = function(low, high) {
    /**
     * @type {number}
     * @private
     */
    this.low_ = low | 0;  // force into 32 signed bits.
    /**
     * @type {number}
     * @private
     */
    this.high_ = high | 0;  // force into 32 signed bits.
  };
  // NOTE: Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the
  // from* methods on which they depend.
  /**
   * A cache of the Long representations of small integer values.
   * @type {!Object}
   * @private
   */
  goog.math.Long.IntCache_ = {};
  /**
   * Returns a Long representing the given (32-bit) integer value.
   * @param {number} value The 32-bit integer in question.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromInt = function(value) {
    if (-128 <= value && value < 128) {
      var cachedObj = goog.math.Long.IntCache_[value];
      if (cachedObj) {
        return cachedObj;
      }
    }
    var obj = new goog.math.Long(value | 0, value < 0 ? -1 : 0);
    if (-128 <= value && value < 128) {
      goog.math.Long.IntCache_[value] = obj;
    }
    return obj;
  };
  /**
   * Returns a Long representing the given value, provided that it is a finite
   * number.  Otherwise, zero is returned.
   * @param {number} value The number in question.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromNumber = function(value) {
    if (isNaN(value) || !isFinite(value)) {
      return goog.math.Long.ZERO;
    } else if (value <= -goog.math.Long.TWO_PWR_63_DBL_) {
      return goog.math.Long.MIN_VALUE;
    } else if (value + 1 >= goog.math.Long.TWO_PWR_63_DBL_) {
      return goog.math.Long.MAX_VALUE;
    } else if (value < 0) {
      return goog.math.Long.fromNumber(-value).negate();
    } else {
      return new goog.math.Long(
          (value % goog.math.Long.TWO_PWR_32_DBL_) | 0,
          (value / goog.math.Long.TWO_PWR_32_DBL_) | 0);
    }
  };
  /**
   * Returns a Long representing the 64-bit integer that comes by concatenating
   * the given high and low bits.  Each is assumed to use 32 bits.
   * @param {number} lowBits The low 32-bits.
   * @param {number} highBits The high 32-bits.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromBits = function(lowBits, highBits) {
    return new goog.math.Long(lowBits, highBits);
  };
  /**
   * Returns a Long representation of the given string, written using the given
   * radix.
   * @param {string} str The textual representation of the Long.
   * @param {number=} opt_radix The radix in which the text is written.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromString = function(str, opt_radix) {
    if (str.length == 0) {
      throw Error('number format error: empty string');
    }
    var radix = opt_radix || 10;
    if (radix < 2 || 36 < radix) {
      throw Error('radix out of range: ' + radix);
    }
    if (str.charAt(0) == '-') {
      return goog.math.Long.fromString(str.substring(1), radix).negate();
    } else if (str.indexOf('-') >= 0) {
      throw Error('number format error: interior "-" character: ' + str);
    }
    // Do several (8) digits each time through the loop, so as to
    // minimize the calls to the very expensive emulated div.
    var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 8));
    var result = goog.math.Long.ZERO;
    for (var i = 0; i < str.length; i += 8) {
      var size = Math.min(8, str.length - i);
      var value = parseInt(str.substring(i, i + size), radix);
      if (size < 8) {
        var power = goog.math.Long.fromNumber(Math.pow(radix, size));
        result = result.multiply(power).add(goog.math.Long.fromNumber(value));
      } else {
        result = result.multiply(radixToPower);
        result = result.add(goog.math.Long.fromNumber(value));
      }
    }
    return result;
  };
  // NOTE: the compiler should inline these constant values below and then remove
  // these variables, so there should be no runtime penalty for these.
  /**
   * Number used repeated below in calculations.  This must appear before the
   * first call to any from* function below.
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_16_DBL_ = 1 << 16;
  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_24_DBL_ = 1 << 24;
  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_32_DBL_ =
      goog.math.Long.TWO_PWR_16_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;
  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_31_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ / 2;
  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_48_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;
  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_64_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_32_DBL_;
  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_63_DBL_ =
      goog.math.Long.TWO_PWR_64_DBL_ / 2;
  /** @type {!goog.math.Long} */
  goog.math.Long.ZERO = goog.math.Long.fromInt(0);
  /** @type {!goog.math.Long} */
  goog.math.Long.ONE = goog.math.Long.fromInt(1);
  /** @type {!goog.math.Long} */
  goog.math.Long.NEG_ONE = goog.math.Long.fromInt(-1);
  /** @type {!goog.math.Long} */
  goog.math.Long.MAX_VALUE =
      goog.math.Long.fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0);
  /** @type {!goog.math.Long} */
  goog.math.Long.MIN_VALUE = goog.math.Long.fromBits(0, 0x80000000 | 0);
  /**
   * @type {!goog.math.Long}
   * @private
   */
  goog.math.Long.TWO_PWR_24_ = goog.math.Long.fromInt(1 << 24);
  /** @return {number} The value, assuming it is a 32-bit integer. */
  goog.math.Long.prototype.toInt = function() {
    return this.low_;
  };
  /** @return {number} The closest floating-point representation to this value. */
  goog.math.Long.prototype.toNumber = function() {
    return this.high_ * goog.math.Long.TWO_PWR_32_DBL_ +
           this.getLowBitsUnsigned();
  };
  /**
   * @param {number=} opt_radix The radix in which the text should be written.
   * @return {string} The textual representation of this value.
   */
  goog.math.Long.prototype.toString = function(opt_radix) {
    var radix = opt_radix || 10;
    if (radix < 2 || 36 < radix) {
      throw Error('radix out of range: ' + radix);
    }
    if (this.isZero()) {
      return '0';
    }
    if (this.isNegative()) {
      if (this.equals(goog.math.Long.MIN_VALUE)) {
        // We need to change the Long value before it can be negated, so we remove
        // the bottom-most digit in this base and then recurse to do the rest.
        var radixLong = goog.math.Long.fromNumber(radix);
        var div = this.div(radixLong);
        var rem = div.multiply(radixLong).subtract(this);
        return div.toString(radix) + rem.toInt().toString(radix);
      } else {
        return '-' + this.negate().toString(radix);
      }
    }
    // Do several (6) digits each time through the loop, so as to
    // minimize the calls to the very expensive emulated div.
    var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 6));
    var rem = this;
    var result = '';
    while (true) {
      var remDiv = rem.div(radixToPower);
      var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt();
      var digits = intval.toString(radix);
      rem = remDiv;
      if (rem.isZero()) {
        return digits + result;
      } else {
        while (digits.length < 6) {
          digits = '0' + digits;
        }
        result = '' + digits + result;
      }
    }
  };
  /** @return {number} The high 32-bits as a signed value. */
  goog.math.Long.prototype.getHighBits = function() {
    return this.high_;
  };
  /** @return {number} The low 32-bits as a signed value. */
  goog.math.Long.prototype.getLowBits = function() {
    return this.low_;
  };
  /** @return {number} The low 32-bits as an unsigned value. */
  goog.math.Long.prototype.getLowBitsUnsigned = function() {
    return (this.low_ >= 0) ?
        this.low_ : goog.math.Long.TWO_PWR_32_DBL_ + this.low_;
  };
  /**
   * @return {number} Returns the number of bits needed to represent the absolute
   *     value of this Long.
   */
  goog.math.Long.prototype.getNumBitsAbs = function() {
    if (this.isNegative()) {
      if (this.equals(goog.math.Long.MIN_VALUE)) {
        return 64;
      } else {
        return this.negate().getNumBitsAbs();
      }
    } else {
      var val = this.high_ != 0 ? this.high_ : this.low_;
      for (var bit = 31; bit > 0; bit--) {
        if ((val & (1 << bit)) != 0) {
          break;
        }
      }
      return this.high_ != 0 ? bit + 33 : bit + 1;
    }
  };
  /** @return {boolean} Whether this value is zero. */
  goog.math.Long.prototype.isZero = function() {
    return this.high_ == 0 && this.low_ == 0;
  };
  /** @return {boolean} Whether this value is negative. */
  goog.math.Long.prototype.isNegative = function() {
    return this.high_ < 0;
  };
  /** @return {boolean} Whether this value is odd. */
  goog.math.Long.prototype.isOdd = function() {
    return (this.low_ & 1) == 1;
  };
  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long equals the other.
   */
  goog.math.Long.prototype.equals = function(other) {
    return (this.high_ == other.high_) && (this.low_ == other.low_);
  };
  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long does not equal the other.
   */
  goog.math.Long.prototype.notEquals = function(other) {
    return (this.high_ != other.high_) || (this.low_ != other.low_);
  };
  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is less than the other.
   */
  goog.math.Long.prototype.lessThan = function(other) {
    return this.compare(other) < 0;
  };
  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is less than or equal to the other.
   */
  goog.math.Long.prototype.lessThanOrEqual = function(other) {
    return this.compare(other) <= 0;
  };
  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is greater than the other.
   */
  goog.math.Long.prototype.greaterThan = function(other) {
    return this.compare(other) > 0;
  };
  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is greater than or equal to the other.
   */
  goog.math.Long.prototype.greaterThanOrEqual = function(other) {
    return this.compare(other) >= 0;
  };
  /**
   * Compares this Long with the given one.
   * @param {goog.math.Long} other Long to compare against.
   * @return {number} 0 if they are the same, 1 if the this is greater, and -1
   *     if the given one is greater.
   */
  goog.math.Long.prototype.compare = function(other) {
    if (this.equals(other)) {
      return 0;
    }
    var thisNeg = this.isNegative();
    var otherNeg = other.isNegative();
    if (thisNeg && !otherNeg) {
      return -1;
    }
    if (!thisNeg && otherNeg) {
      return 1;
    }
    // at this point, the signs are the same, so subtraction will not overflow
    if (this.subtract(other).isNegative()) {
      return -1;
    } else {
      return 1;
    }
  };
  /** @return {!goog.math.Long} The negation of this value. */
  goog.math.Long.prototype.negate = function() {
    if (this.equals(goog.math.Long.MIN_VALUE)) {
      return goog.math.Long.MIN_VALUE;
    } else {
      return this.not().add(goog.math.Long.ONE);
    }
  };
  /**
   * Returns the sum of this and the given Long.
   * @param {goog.math.Long} other Long to add to this one.
   * @return {!goog.math.Long} The sum of this and the given Long.
   */
  goog.math.Long.prototype.add = function(other) {
    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.
    var a48 = this.high_ >>> 16;
    var a32 = this.high_ & 0xFFFF;
    var a16 = this.low_ >>> 16;
    var a00 = this.low_ & 0xFFFF;
    var b48 = other.high_ >>> 16;
    var b32 = other.high_ & 0xFFFF;
    var b16 = other.low_ >>> 16;
    var b00 = other.low_ & 0xFFFF;
    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
    c00 += a00 + b00;
    c16 += c00 >>> 16;
    c00 &= 0xFFFF;
    c16 += a16 + b16;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c32 += a32 + b32;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c48 += a48 + b48;
    c48 &= 0xFFFF;
    return goog.math.Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);
  };
  /**
   * Returns the difference of this and the given Long.
   * @param {goog.math.Long} other Long to subtract from this.
   * @return {!goog.math.Long} The difference of this and the given Long.
   */
  goog.math.Long.prototype.subtract = function(other) {
    return this.add(other.negate());
  };
  /**
   * Returns the product of this and the given long.
   * @param {goog.math.Long} other Long to multiply with this.
   * @return {!goog.math.Long} The product of this and the other.
   */
  goog.math.Long.prototype.multiply = function(other) {
    if (this.isZero()) {
      return goog.math.Long.ZERO;
    } else if (other.isZero()) {
      return goog.math.Long.ZERO;
    }
    if (this.equals(goog.math.Long.MIN_VALUE)) {
      return other.isOdd() ? goog.math.Long.MIN_VALUE : goog.math.Long.ZERO;
    } else if (other.equals(goog.math.Long.MIN_VALUE)) {
      return this.isOdd() ? goog.math.Long.MIN_VALUE : goog.math.Long.ZERO;
    }
    if (this.isNegative()) {
      if (other.isNegative()) {
        return this.negate().multiply(other.negate());
      } else {
        return this.negate().multiply(other).negate();
      }
    } else if (other.isNegative()) {
      return this.multiply(other.negate()).negate();
    }
    // If both longs are small, use float multiplication
    if (this.lessThan(goog.math.Long.TWO_PWR_24_) &&
        other.lessThan(goog.math.Long.TWO_PWR_24_)) {
      return goog.math.Long.fromNumber(this.toNumber() * other.toNumber());
    }
    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.
    // We can skip products that would overflow.
    var a48 = this.high_ >>> 16;
    var a32 = this.high_ & 0xFFFF;
    var a16 = this.low_ >>> 16;
    var a00 = this.low_ & 0xFFFF;
    var b48 = other.high_ >>> 16;
    var b32 = other.high_ & 0xFFFF;
    var b16 = other.low_ >>> 16;
    var b00 = other.low_ & 0xFFFF;
    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
    c00 += a00 * b00;
    c16 += c00 >>> 16;
    c00 &= 0xFFFF;
    c16 += a16 * b00;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c16 += a00 * b16;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c32 += a32 * b00;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c32 += a16 * b16;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c32 += a00 * b32;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;
    c48 &= 0xFFFF;
    return goog.math.Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);
  };
  /**
   * Returns this Long divided by the given one.
   * @param {goog.math.Long} other Long by which to divide.
   * @return {!goog.math.Long} This Long divided by the given one.
   */
  goog.math.Long.prototype.div = function(other) {
    if (other.isZero()) {
      throw Error('division by zero');
    } else if (this.isZero()) {
      return goog.math.Long.ZERO;
    }
    if (this.equals(goog.math.Long.MIN_VALUE)) {
      if (other.equals(goog.math.Long.ONE) ||
          other.equals(goog.math.Long.NEG_ONE)) {
        return goog.math.Long.MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE
      } else if (other.equals(goog.math.Long.MIN_VALUE)) {
        return goog.math.Long.ONE;
      } else {
        // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.
        var halfThis = this.shiftRight(1);
        var approx = halfThis.div(other).shiftLeft(1);
        if (approx.equals(goog.math.Long.ZERO)) {
          return other.isNegative() ? goog.math.Long.ONE : goog.math.Long.NEG_ONE;
        } else {
          var rem = this.subtract(other.multiply(approx));
          var result = approx.add(rem.div(other));
          return result;
        }
      }
    } else if (other.equals(goog.math.Long.MIN_VALUE)) {
      return goog.math.Long.ZERO;
    }
    if (this.isNegative()) {
      if (other.isNegative()) {
        return this.negate().div(other.negate());
      } else {
        return this.negate().div(other).negate();
      }
    } else if (other.isNegative()) {
      return this.div(other.negate()).negate();
    }
    // Repeat the following until the remainder is less than other:  find a
    // floating-point that approximates remainder / other *from below*, add this
    // into the result, and subtract it from the remainder.  It is critical that
    // the approximate value is less than or equal to the real value so that the
    // remainder never becomes negative.
    var res = goog.math.Long.ZERO;
    var rem = this;
    while (rem.greaterThanOrEqual(other)) {
      // Approximate the result of division. This may be a little greater or
      // smaller than the actual value.
      var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));
      // We will tweak the approximate result by changing it in the 48-th digit or
      // the smallest non-fractional digit, whichever is larger.
      var log2 = Math.ceil(Math.log(approx) / Math.LN2);
      var delta = (log2 <= 48) ? 1 : Math.pow(2, log2 - 48);
      // Decrease the approximation until it is smaller than the remainder.  Note
      // that if it is too large, the product overflows and is negative.
      var approxRes = goog.math.Long.fromNumber(approx);
      var approxRem = approxRes.multiply(other);
      while (approxRem.isNegative() || approxRem.greaterThan(rem)) {
        approx -= delta;
        approxRes = goog.math.Long.fromNumber(approx);
        approxRem = approxRes.multiply(other);
      }
      // We know the answer can't be zero... and actually, zero would cause
      // infinite recursion since we would make no progress.
      if (approxRes.isZero()) {
        approxRes = goog.math.Long.ONE;
      }
      res = res.add(approxRes);
      rem = rem.subtract(approxRem);
    }
    return res;
  };
  /**
   * Returns this Long modulo the given one.
   * @param {goog.math.Long} other Long by which to mod.
   * @return {!goog.math.Long} This Long modulo the given one.
   */
  goog.math.Long.prototype.modulo = function(other) {
    return this.subtract(this.div(other).multiply(other));
  };
  /** @return {!goog.math.Long} The bitwise-NOT of this value. */
  goog.math.Long.prototype.not = function() {
    return goog.math.Long.fromBits(~this.low_, ~this.high_);
  };
  /**
   * Returns the bitwise-AND of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to AND.
   * @return {!goog.math.Long} The bitwise-AND of this and the other.
   */
  goog.math.Long.prototype.and = function(other) {
    return goog.math.Long.fromBits(this.low_ & other.low_,
                                   this.high_ & other.high_);
  };
  /**
   * Returns the bitwise-OR of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to OR.
   * @return {!goog.math.Long} The bitwise-OR of this and the other.
   */
  goog.math.Long.prototype.or = function(other) {
    return goog.math.Long.fromBits(this.low_ | other.low_,
                                   this.high_ | other.high_);
  };
  /**
   * Returns the bitwise-XOR of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to XOR.
   * @return {!goog.math.Long} The bitwise-XOR of this and the other.
   */
  goog.math.Long.prototype.xor = function(other) {
    return goog.math.Long.fromBits(this.low_ ^ other.low_,
                                   this.high_ ^ other.high_);
  };
  /**
   * Returns this Long with bits shifted to the left by the given amount.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the left by the given amount.
   */
  goog.math.Long.prototype.shiftLeft = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var low = this.low_;
      if (numBits < 32) {
        var high = this.high_;
        return goog.math.Long.fromBits(
            low << numBits,
            (high << numBits) | (low >>> (32 - numBits)));
      } else {
        return goog.math.Long.fromBits(0, low << (numBits - 32));
      }
    }
  };
  /**
   * Returns this Long with bits shifted to the right by the given amount.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the right by the given amount.
   */
  goog.math.Long.prototype.shiftRight = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var high = this.high_;
      if (numBits < 32) {
        var low = this.low_;
        return goog.math.Long.fromBits(
            (low >>> numBits) | (high << (32 - numBits)),
            high >> numBits);
      } else {
        return goog.math.Long.fromBits(
            high >> (numBits - 32),
            high >= 0 ? 0 : -1);
      }
    }
  };
  /**
   * Returns this Long with bits shifted to the right by the given amount, with
   * the new top bits matching the current sign bit.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the right by the given amount, with
   *     zeros placed into the new leading bits.
   */
  goog.math.Long.prototype.shiftRightUnsigned = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var high = this.high_;
      if (numBits < 32) {
        var low = this.low_;
        return goog.math.Long.fromBits(
            (low >>> numBits) | (high << (32 - numBits)),
            high >>> numBits);
      } else if (numBits == 32) {
        return goog.math.Long.fromBits(high, 0);
      } else {
        return goog.math.Long.fromBits(high >>> (numBits - 32), 0);
      }
    }
  };
  //======= begin jsbn =======
  var navigator = { appName: 'Modern Browser' }; // polyfill a little
  // Copyright (c) 2005  Tom Wu
  // All Rights Reserved.
  // http://www-cs-students.stanford.edu/~tjw/jsbn/
  /*
   * Copyright (c) 2003-2005  Tom Wu
   * All Rights Reserved.
   *
   * Permission is hereby granted, free of charge, to any person obtaining
   * a copy of this software and associated documentation files (the
   * "Software"), to deal in the Software without restriction, including
   * without limitation the rights to use, copy, modify, merge, publish,
   * distribute, sublicense, and/or sell copies of the Software, and to
   * permit persons to whom the Software is furnished to do so, subject to
   * the following conditions:
   *
   * The above copyright notice and this permission notice shall be
   * included in all copies or substantial portions of the Software.
   *
   * THE SOFTWARE IS PROVIDED "AS-IS" AND WITHOUT WARRANTY OF ANY KIND, 
   * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY 
   * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  
   *
   * IN NO EVENT SHALL TOM WU BE LIABLE FOR ANY SPECIAL, INCIDENTAL,
   * INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND, OR ANY DAMAGES WHATSOEVER
   * RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER OR NOT ADVISED OF
   * THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF LIABILITY, ARISING OUT
   * OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
   *
   * In addition, the following condition applies:
   *
   * All redistributions must retain an intact copy of this copyright notice
   * and disclaimer.
   */
  // Basic JavaScript BN library - subset useful for RSA encryption.
  // Bits per digit
  var dbits;
  // JavaScript engine analysis
  var canary = 0xdeadbeefcafe;
  var j_lm = ((canary&0xffffff)==0xefcafe);
  // (public) Constructor
  function BigInteger(a,b,c) {
    if(a != null)
      if("number" == typeof a) this.fromNumber(a,b,c);
      else if(b == null && "string" != typeof a) this.fromString(a,256);
      else this.fromString(a,b);
  }
  // return new, unset BigInteger
  function nbi() { return new BigInteger(null); }
  // am: Compute w_j += (x*this_i), propagate carries,
  // c is initial carry, returns final carry.
  // c < 3*dvalue, x < 2*dvalue, this_i < dvalue
  // We need to select the fastest one that works in this environment.
  // am1: use a single mult and divide to get the high bits,
  // max digit bits should be 26 because
  // max internal value = 2*dvalue^2-2*dvalue (< 2^53)
  function am1(i,x,w,j,c,n) {
    while(--n >= 0) {
      var v = x*this[i++]+w[j]+c;
      c = Math.floor(v/0x4000000);
      w[j++] = v&0x3ffffff;
    }
    return c;
  }
  // am2 avoids a big mult-and-extract completely.
  // Max digit bits should be <= 30 because we do bitwise ops
  // on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)
  function am2(i,x,w,j,c,n) {
    var xl = x&0x7fff, xh = x>>15;
    while(--n >= 0) {
      var l = this[i]&0x7fff;
      var h = this[i++]>>15;
      var m = xh*l+h*xl;
      l = xl*l+((m&0x7fff)<<15)+w[j]+(c&0x3fffffff);
      c = (l>>>30)+(m>>>15)+xh*h+(c>>>30);
      w[j++] = l&0x3fffffff;
    }
    return c;
  }
  // Alternately, set max digit bits to 28 since some
  // browsers slow down when dealing with 32-bit numbers.
  function am3(i,x,w,j,c,n) {
    var xl = x&0x3fff, xh = x>>14;
    while(--n >= 0) {
      var l = this[i]&0x3fff;
      var h = this[i++]>>14;
      var m = xh*l+h*xl;
      l = xl*l+((m&0x3fff)<<14)+w[j]+c;
      c = (l>>28)+(m>>14)+xh*h;
      w[j++] = l&0xfffffff;
    }
    return c;
  }
  if(j_lm && (navigator.appName == "Microsoft Internet Explorer")) {
    BigInteger.prototype.am = am2;
    dbits = 30;
  }
  else if(j_lm && (navigator.appName != "Netscape")) {
    BigInteger.prototype.am = am1;
    dbits = 26;
  }
  else { // Mozilla/Netscape seems to prefer am3
    BigInteger.prototype.am = am3;
    dbits = 28;
  }
  BigInteger.prototype.DB = dbits;
  BigInteger.prototype.DM = ((1<<dbits)-1);
  BigInteger.prototype.DV = (1<<dbits);
  var BI_FP = 52;
  BigInteger.prototype.FV = Math.pow(2,BI_FP);
  BigInteger.prototype.F1 = BI_FP-dbits;
  BigInteger.prototype.F2 = 2*dbits-BI_FP;
  // Digit conversions
  var BI_RM = "0123456789abcdefghijklmnopqrstuvwxyz";
  var BI_RC = new Array();
  var rr,vv;
  rr = "0".charCodeAt(0);
  for(vv = 0; vv <= 9; ++vv) BI_RC[rr++] = vv;
  rr = "a".charCodeAt(0);
  for(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;
  rr = "A".charCodeAt(0);
  for(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;
  function int2char(n) { return BI_RM.charAt(n); }
  function intAt(s,i) {
    var c = BI_RC[s.charCodeAt(i)];
    return (c==null)?-1:c;
  }
  // (protected) copy this to r
  function bnpCopyTo(r) {
    for(var i = this.t-1; i >= 0; --i) r[i] = this[i];
    r.t = this.t;
    r.s = this.s;
  }
  // (protected) set from integer value x, -DV <= x < DV
  function bnpFromInt(x) {
    this.t = 1;
    this.s = (x<0)?-1:0;
    if(x > 0) this[0] = x;
    else if(x < -1) this[0] = x+DV;
    else this.t = 0;
  }
  // return bigint initialized to value
  function nbv(i) { var r = nbi(); r.fromInt(i); return r; }
  // (protected) set from string and radix
  function bnpFromString(s,b) {
    var k;
    if(b == 16) k = 4;
    else if(b == 8) k = 3;
    else if(b == 256) k = 8; // byte array
    else if(b == 2) k = 1;
    else if(b == 32) k = 5;
    else if(b == 4) k = 2;
    else { this.fromRadix(s,b); return; }
    this.t = 0;
    this.s = 0;
    var i = s.length, mi = false, sh = 0;
    while(--i >= 0) {
      var x = (k==8)?s[i]&0xff:intAt(s,i);
      if(x < 0) {
        if(s.charAt(i) == "-") mi = true;
        continue;
      }
      mi = false;
      if(sh == 0)
        this[this.t++] = x;
      else if(sh+k > this.DB) {
        this[this.t-1] |= (x&((1<<(this.DB-sh))-1))<<sh;
        this[this.t++] = (x>>(this.DB-sh));
      }
      else
        this[this.t-1] |= x<<sh;
      sh += k;
      if(sh >= this.DB) sh -= this.DB;
    }
    if(k == 8 && (s[0]&0x80) != 0) {
      this.s = -1;
      if(sh > 0) this[this.t-1] |= ((1<<(this.DB-sh))-1)<<sh;
    }
    this.clamp();
    if(mi) BigInteger.ZERO.subTo(this,this);
  }
  // (protected) clamp off excess high words
  function bnpClamp() {
    var c = this.s&this.DM;
    while(this.t > 0 && this[this.t-1] == c) --this.t;
  }
  // (public) return string representation in given radix
  function bnToString(b) {
    if(this.s < 0) return "-"+this.negate().toString(b);
    var k;
    if(b == 16) k = 4;
    else if(b == 8) k = 3;
    else if(b == 2) k = 1;
    else if(b == 32) k = 5;
    else if(b == 4) k = 2;
    else return this.toRadix(b);
    var km = (1<<k)-1, d, m = false, r = "", i = this.t;
    var p = this.DB-(i*this.DB)%k;
    if(i-- > 0) {
      if(p < this.DB && (d = this[i]>>p) > 0) { m = true; r = int2char(d); }
      while(i >= 0) {
        if(p < k) {
          d = (this[i]&((1<<p)-1))<<(k-p);
          d |= this[--i]>>(p+=this.DB-k);
        }
        else {
          d = (this[i]>>(p-=k))&km;
          if(p <= 0) { p += this.DB; --i; }
        }
        if(d > 0) m = true;
        if(m) r += int2char(d);
      }
    }
    return m?r:"0";
  }
  // (public) -this
  function bnNegate() { var r = nbi(); BigInteger.ZERO.subTo(this,r); return r; }
  // (public) |this|
  function bnAbs() { return (this.s<0)?this.negate():this; }
  // (public) return + if this > a, - if this < a, 0 if equal
  function bnCompareTo(a) {
    var r = this.s-a.s;
    if(r != 0) return r;
    var i = this.t;
    r = i-a.t;
    if(r != 0) return (this.s<0)?-r:r;
    while(--i >= 0) if((r=this[i]-a[i]) != 0) return r;
    return 0;
  }
  // returns bit length of the integer x
  function nbits(x) {
    var r = 1, t;
    if((t=x>>>16) != 0) { x = t; r += 16; }
    if((t=x>>8) != 0) { x = t; r += 8; }
    if((t=x>>4) != 0) { x = t; r += 4; }
    if((t=x>>2) != 0) { x = t; r += 2; }
    if((t=x>>1) != 0) { x = t; r += 1; }
    return r;
  }
  // (public) return the number of bits in "this"
  function bnBitLength() {
    if(this.t <= 0) return 0;
    return this.DB*(this.t-1)+nbits(this[this.t-1]^(this.s&this.DM));
  }
  // (protected) r = this << n*DB
  function bnpDLShiftTo(n,r) {
    var i;
    for(i = this.t-1; i >= 0; --i) r[i+n] = this[i];
    for(i = n-1; i >= 0; --i) r[i] = 0;
    r.t = this.t+n;
    r.s = this.s;
  }
  // (protected) r = this >> n*DB
  function bnpDRShiftTo(n,r) {
    for(var i = n; i < this.t; ++i) r[i-n] = this[i];
    r.t = Math.max(this.t-n,0);
    r.s = this.s;
  }
  // (protected) r = this << n
  function bnpLShiftTo(n,r) {
    var bs = n%this.DB;
    var cbs = this.DB-bs;
    var bm = (1<<cbs)-1;
    var ds = Math.floor(n/this.DB), c = (this.s<<bs)&this.DM, i;
    for(i = this.t-1; i >= 0; --i) {
      r[i+ds+1] = (this[i]>>cbs)|c;
      c = (this[i]&bm)<<bs;
    }
    for(i = ds-1; i >= 0; --i) r[i] = 0;
    r[ds] = c;
    r.t = this.t+ds+1;
    r.s = this.s;
    r.clamp();
  }
  // (protected) r = this >> n
  function bnpRShiftTo(n,r) {
    r.s = this.s;
    var ds = Math.floor(n/this.DB);
    if(ds >= this.t) { r.t = 0; return; }
    var bs = n%this.DB;
    var cbs = this.DB-bs;
    var bm = (1<<bs)-1;
    r[0] = this[ds]>>bs;
    for(var i = ds+1; i < this.t; ++i) {
      r[i-ds-1] |= (this[i]&bm)<<cbs;
      r[i-ds] = this[i]>>bs;
    }
    if(bs > 0) r[this.t-ds-1] |= (this.s&bm)<<cbs;
    r.t = this.t-ds;
    r.clamp();
  }
  // (protected) r = this - a
  function bnpSubTo(a,r) {
    var i = 0, c = 0, m = Math.min(a.t,this.t);
    while(i < m) {
      c += this[i]-a[i];
      r[i++] = c&this.DM;
      c >>= this.DB;
    }
    if(a.t < this.t) {
      c -= a.s;
      while(i < this.t) {
        c += this[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += this.s;
    }
    else {
      c += this.s;
      while(i < a.t) {
        c -= a[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c -= a.s;
    }
    r.s = (c<0)?-1:0;
    if(c < -1) r[i++] = this.DV+c;
    else if(c > 0) r[i++] = c;
    r.t = i;
    r.clamp();
  }
  // (protected) r = this * a, r != this,a (HAC 14.12)
  // "this" should be the larger one if appropriate.
  function bnpMultiplyTo(a,r) {
    var x = this.abs(), y = a.abs();
    var i = x.t;
    r.t = i+y.t;
    while(--i >= 0) r[i] = 0;
    for(i = 0; i < y.t; ++i) r[i+x.t] = x.am(0,y[i],r,i,0,x.t);
    r.s = 0;
    r.clamp();
    if(this.s != a.s) BigInteger.ZERO.subTo(r,r);
  }
  // (protected) r = this^2, r != this (HAC 14.16)
  function bnpSquareTo(r) {
    var x = this.abs();
    var i = r.t = 2*x.t;
    while(--i >= 0) r[i] = 0;
    for(i = 0; i < x.t-1; ++i) {
      var c = x.am(i,x[i],r,2*i,0,1);
      if((r[i+x.t]+=x.am(i+1,2*x[i],r,2*i+1,c,x.t-i-1)) >= x.DV) {
        r[i+x.t] -= x.DV;
        r[i+x.t+1] = 1;
      }
    }
    if(r.t > 0) r[r.t-1] += x.am(i,x[i],r,2*i,0,1);
    r.s = 0;
    r.clamp();
  }
  // (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)
  // r != q, this != m.  q or r may be null.
  function bnpDivRemTo(m,q,r) {
    var pm = m.abs();
    if(pm.t <= 0) return;
    var pt = this.abs();
    if(pt.t < pm.t) {
      if(q != null) q.fromInt(0);
      if(r != null) this.copyTo(r);
      return;
    }
    if(r == null) r = nbi();
    var y = nbi(), ts = this.s, ms = m.s;
    var nsh = this.DB-nbits(pm[pm.t-1]);	// normalize modulus
    if(nsh > 0) { pm.lShiftTo(nsh,y); pt.lShiftTo(nsh,r); }
    else { pm.copyTo(y); pt.copyTo(r); }
    var ys = y.t;
    var y0 = y[ys-1];
    if(y0 == 0) return;
    var yt = y0*(1<<this.F1)+((ys>1)?y[ys-2]>>this.F2:0);
    var d1 = this.FV/yt, d2 = (1<<this.F1)/yt, e = 1<<this.F2;
    var i = r.t, j = i-ys, t = (q==null)?nbi():q;
    y.dlShiftTo(j,t);
    if(r.compareTo(t) >= 0) {
      r[r.t++] = 1;
      r.subTo(t,r);
    }
    BigInteger.ONE.dlShiftTo(ys,t);
    t.subTo(y,y);	// "negative" y so we can replace sub with am later
    while(y.t < ys) y[y.t++] = 0;
    while(--j >= 0) {
      // Estimate quotient digit
      var qd = (r[--i]==y0)?this.DM:Math.floor(r[i]*d1+(r[i-1]+e)*d2);
      if((r[i]+=y.am(0,qd,r,j,0,ys)) < qd) {	// Try it out
        y.dlShiftTo(j,t);
        r.subTo(t,r);
        while(r[i] < --qd) r.subTo(t,r);
      }
    }
    if(q != null) {
      r.drShiftTo(ys,q);
      if(ts != ms) BigInteger.ZERO.subTo(q,q);
    }
    r.t = ys;
    r.clamp();
    if(nsh > 0) r.rShiftTo(nsh,r);	// Denormalize remainder
    if(ts < 0) BigInteger.ZERO.subTo(r,r);
  }
  // (public) this mod a
  function bnMod(a) {
    var r = nbi();
    this.abs().divRemTo(a,null,r);
    if(this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) a.subTo(r,r);
    return r;
  }
  // Modular reduction using "classic" algorithm
  function Classic(m) { this.m = m; }
  function cConvert(x) {
    if(x.s < 0 || x.compareTo(this.m) >= 0) return x.mod(this.m);
    else return x;
  }
  function cRevert(x) { return x; }
  function cReduce(x) { x.divRemTo(this.m,null,x); }
  function cMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }
  function cSqrTo(x,r) { x.squareTo(r); this.reduce(r); }
  Classic.prototype.convert = cConvert;
  Classic.prototype.revert = cRevert;
  Classic.prototype.reduce = cReduce;
  Classic.prototype.mulTo = cMulTo;
  Classic.prototype.sqrTo = cSqrTo;
  // (protected) return "-1/this % 2^DB"; useful for Mont. reduction
  // justification:
  //         xy == 1 (mod m)
  //         xy =  1+km
  //   xy(2-xy) = (1+km)(1-km)
  // x[y(2-xy)] = 1-k^2m^2
  // x[y(2-xy)] == 1 (mod m^2)
  // if y is 1/x mod m, then y(2-xy) is 1/x mod m^2
  // should reduce x and y(2-xy) by m^2 at each step to keep size bounded.
  // JS multiply "overflows" differently from C/C++, so care is needed here.
  function bnpInvDigit() {
    if(this.t < 1) return 0;
    var x = this[0];
    if((x&1) == 0) return 0;
    var y = x&3;		// y == 1/x mod 2^2
    y = (y*(2-(x&0xf)*y))&0xf;	// y == 1/x mod 2^4
    y = (y*(2-(x&0xff)*y))&0xff;	// y == 1/x mod 2^8
    y = (y*(2-(((x&0xffff)*y)&0xffff)))&0xffff;	// y == 1/x mod 2^16
    // last step - calculate inverse mod DV directly;
    // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints
    y = (y*(2-x*y%this.DV))%this.DV;		// y == 1/x mod 2^dbits
    // we really want the negative inverse, and -DV < y < DV
    return (y>0)?this.DV-y:-y;
  }
  // Montgomery reduction
  function Montgomery(m) {
    this.m = m;
    this.mp = m.invDigit();
    this.mpl = this.mp&0x7fff;
    this.mph = this.mp>>15;
    this.um = (1<<(m.DB-15))-1;
    this.mt2 = 2*m.t;
  }
  // xR mod m
  function montConvert(x) {
    var r = nbi();
    x.abs().dlShiftTo(this.m.t,r);
    r.divRemTo(this.m,null,r);
    if(x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) this.m.subTo(r,r);
    return r;
  }
  // x/R mod m
  function montRevert(x) {
    var r = nbi();
    x.copyTo(r);
    this.reduce(r);
    return r;
  }
  // x = x/R mod m (HAC 14.32)
  function montReduce(x) {
    while(x.t <= this.mt2)	// pad x so am has enough room later
      x[x.t++] = 0;
    for(var i = 0; i < this.m.t; ++i) {
      // faster way of calculating u0 = x[i]*mp mod DV
      var j = x[i]&0x7fff;
      var u0 = (j*this.mpl+(((j*this.mph+(x[i]>>15)*this.mpl)&this.um)<<15))&x.DM;
      // use am to combine the multiply-shift-add into one call
      j = i+this.m.t;
      x[j] += this.m.am(0,u0,x,i,0,this.m.t);
      // propagate carry
      while(x[j] >= x.DV) { x[j] -= x.DV; x[++j]++; }
    }
    x.clamp();
    x.drShiftTo(this.m.t,x);
    if(x.compareTo(this.m) >= 0) x.subTo(this.m,x);
  }
  // r = "x^2/R mod m"; x != r
  function montSqrTo(x,r) { x.squareTo(r); this.reduce(r); }
  // r = "xy/R mod m"; x,y != r
  function montMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }
  Montgomery.prototype.convert = montConvert;
  Montgomery.prototype.revert = montRevert;
  Montgomery.prototype.reduce = montReduce;
  Montgomery.prototype.mulTo = montMulTo;
  Montgomery.prototype.sqrTo = montSqrTo;
  // (protected) true iff this is even
  function bnpIsEven() { return ((this.t>0)?(this[0]&1):this.s) == 0; }
  // (protected) this^e, e < 2^32, doing sqr and mul with "r" (HAC 14.79)
  function bnpExp(e,z) {
    if(e > 0xffffffff || e < 1) return BigInteger.ONE;
    var r = nbi(), r2 = nbi(), g = z.convert(this), i = nbits(e)-1;
    g.copyTo(r);
    while(--i >= 0) {
      z.sqrTo(r,r2);
      if((e&(1<<i)) > 0) z.mulTo(r2,g,r);
      else { var t = r; r = r2; r2 = t; }
    }
    return z.revert(r);
  }
  // (public) this^e % m, 0 <= e < 2^32
  function bnModPowInt(e,m) {
    var z;
    if(e < 256 || m.isEven()) z = new Classic(m); else z = new Montgomery(m);
    return this.exp(e,z);
  }
  // protected
  BigInteger.prototype.copyTo = bnpCopyTo;
  BigInteger.prototype.fromInt = bnpFromInt;
  BigInteger.prototype.fromString = bnpFromString;
  BigInteger.prototype.clamp = bnpClamp;
  BigInteger.prototype.dlShiftTo = bnpDLShiftTo;
  BigInteger.prototype.drShiftTo = bnpDRShiftTo;
  BigInteger.prototype.lShiftTo = bnpLShiftTo;
  BigInteger.prototype.rShiftTo = bnpRShiftTo;
  BigInteger.prototype.subTo = bnpSubTo;
  BigInteger.prototype.multiplyTo = bnpMultiplyTo;
  BigInteger.prototype.squareTo = bnpSquareTo;
  BigInteger.prototype.divRemTo = bnpDivRemTo;
  BigInteger.prototype.invDigit = bnpInvDigit;
  BigInteger.prototype.isEven = bnpIsEven;
  BigInteger.prototype.exp = bnpExp;
  // public
  BigInteger.prototype.toString = bnToString;
  BigInteger.prototype.negate = bnNegate;
  BigInteger.prototype.abs = bnAbs;
  BigInteger.prototype.compareTo = bnCompareTo;
  BigInteger.prototype.bitLength = bnBitLength;
  BigInteger.prototype.mod = bnMod;
  BigInteger.prototype.modPowInt = bnModPowInt;
  // "constants"
  BigInteger.ZERO = nbv(0);
  BigInteger.ONE = nbv(1);
  // jsbn2 stuff
  // (protected) convert from radix string
  function bnpFromRadix(s,b) {
    this.fromInt(0);
    if(b == null) b = 10;
    var cs = this.chunkSize(b);
    var d = Math.pow(b,cs), mi = false, j = 0, w = 0;
    for(var i = 0; i < s.length; ++i) {
      var x = intAt(s,i);
      if(x < 0) {
        if(s.charAt(i) == "-" && this.signum() == 0) mi = true;
        continue;
      }
      w = b*w+x;
      if(++j >= cs) {
        this.dMultiply(d);
        this.dAddOffset(w,0);
        j = 0;
        w = 0;
      }
    }
    if(j > 0) {
      this.dMultiply(Math.pow(b,j));
      this.dAddOffset(w,0);
    }
    if(mi) BigInteger.ZERO.subTo(this,this);
  }
  // (protected) return x s.t. r^x < DV
  function bnpChunkSize(r) { return Math.floor(Math.LN2*this.DB/Math.log(r)); }
  // (public) 0 if this == 0, 1 if this > 0
  function bnSigNum() {
    if(this.s < 0) return -1;
    else if(this.t <= 0 || (this.t == 1 && this[0] <= 0)) return 0;
    else return 1;
  }
  // (protected) this *= n, this >= 0, 1 < n < DV
  function bnpDMultiply(n) {
    this[this.t] = this.am(0,n-1,this,0,0,this.t);
    ++this.t;
    this.clamp();
  }
  // (protected) this += n << w words, this >= 0
  function bnpDAddOffset(n,w) {
    if(n == 0) return;
    while(this.t <= w) this[this.t++] = 0;
    this[w] += n;
    while(this[w] >= this.DV) {
      this[w] -= this.DV;
      if(++w >= this.t) this[this.t++] = 0;
      ++this[w];
    }
  }
  // (protected) convert to radix string
  function bnpToRadix(b) {
    if(b == null) b = 10;
    if(this.signum() == 0 || b < 2 || b > 36) return "0";
    var cs = this.chunkSize(b);
    var a = Math.pow(b,cs);
    var d = nbv(a), y = nbi(), z = nbi(), r = "";
    this.divRemTo(d,y,z);
    while(y.signum() > 0) {
      r = (a+z.intValue()).toString(b).substr(1) + r;
      y.divRemTo(d,y,z);
    }
    return z.intValue().toString(b) + r;
  }
  // (public) return value as integer
  function bnIntValue() {
    if(this.s < 0) {
      if(this.t == 1) return this[0]-this.DV;
      else if(this.t == 0) return -1;
    }
    else if(this.t == 1) return this[0];
    else if(this.t == 0) return 0;
    // assumes 16 < DB < 32
    return ((this[1]&((1<<(32-this.DB))-1))<<this.DB)|this[0];
  }
  // (protected) r = this + a
  function bnpAddTo(a,r) {
    var i = 0, c = 0, m = Math.min(a.t,this.t);
    while(i < m) {
      c += this[i]+a[i];
      r[i++] = c&this.DM;
      c >>= this.DB;
    }
    if(a.t < this.t) {
      c += a.s;
      while(i < this.t) {
        c += this[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += this.s;
    }
    else {
      c += this.s;
      while(i < a.t) {
        c += a[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += a.s;
    }
    r.s = (c<0)?-1:0;
    if(c > 0) r[i++] = c;
    else if(c < -1) r[i++] = this.DV+c;
    r.t = i;
    r.clamp();
  }
  BigInteger.prototype.fromRadix = bnpFromRadix;
  BigInteger.prototype.chunkSize = bnpChunkSize;
  BigInteger.prototype.signum = bnSigNum;
  BigInteger.prototype.dMultiply = bnpDMultiply;
  BigInteger.prototype.dAddOffset = bnpDAddOffset;
  BigInteger.prototype.toRadix = bnpToRadix;
  BigInteger.prototype.intValue = bnIntValue;
  BigInteger.prototype.addTo = bnpAddTo;
  //======= end jsbn =======
  // Emscripten wrapper
  var Wrapper = {
    abs: function(l, h) {
      var x = new goog.math.Long(l, h);
      var ret;
      if (x.isNegative()) {
        ret = x.negate();
      } else {
        ret = x;
      }
      HEAP32[tempDoublePtr>>2] = ret.low_;
      HEAP32[tempDoublePtr+4>>2] = ret.high_;
    },
    ensureTemps: function() {
      if (Wrapper.ensuredTemps) return;
      Wrapper.ensuredTemps = true;
      Wrapper.two32 = new BigInteger();
      Wrapper.two32.fromString('4294967296', 10);
      Wrapper.two64 = new BigInteger();
      Wrapper.two64.fromString('18446744073709551616', 10);
      Wrapper.temp1 = new BigInteger();
      Wrapper.temp2 = new BigInteger();
    },
    lh2bignum: function(l, h) {
      var a = new BigInteger();
      a.fromString(h.toString(), 10);
      var b = new BigInteger();
      a.multiplyTo(Wrapper.two32, b);
      var c = new BigInteger();
      c.fromString(l.toString(), 10);
      var d = new BigInteger();
      c.addTo(b, d);
      return d;
    },
    stringify: function(l, h, unsigned) {
      var ret = new goog.math.Long(l, h).toString();
      if (unsigned && ret[0] == '-') {
        // unsign slowly using jsbn bignums
        Wrapper.ensureTemps();
        var bignum = new BigInteger();
        bignum.fromString(ret, 10);
        ret = new BigInteger();
        Wrapper.two64.addTo(bignum, ret);
        ret = ret.toString(10);
      }
      return ret;
    },
    fromString: function(str, base, min, max, unsigned) {
      Wrapper.ensureTemps();
      var bignum = new BigInteger();
      bignum.fromString(str, base);
      var bigmin = new BigInteger();
      bigmin.fromString(min, 10);
      var bigmax = new BigInteger();
      bigmax.fromString(max, 10);
      if (unsigned && bignum.compareTo(BigInteger.ZERO) < 0) {
        var temp = new BigInteger();
        bignum.addTo(Wrapper.two64, temp);
        bignum = temp;
      }
      var error = false;
      if (bignum.compareTo(bigmin) < 0) {
        bignum = bigmin;
        error = true;
      } else if (bignum.compareTo(bigmax) > 0) {
        bignum = bigmax;
        error = true;
      }
      var ret = goog.math.Long.fromString(bignum.toString()); // min-max checks should have clamped this to a range goog.math.Long can handle well
      HEAP32[tempDoublePtr>>2] = ret.low_;
      HEAP32[tempDoublePtr+4>>2] = ret.high_;
      if (error) throw 'range error';
    }
  };
  return Wrapper;
})();
//======= end closure i64 code =======
// === Auto-generated postamble setup entry stuff ===
if (memoryInitializer) {
  function applyData(data) {
    HEAPU8.set(data, STATIC_BASE);
  }
  if (ENVIRONMENT_IS_NODE || ENVIRONMENT_IS_SHELL) {
    applyData(Module['readBinary'](memoryInitializer));
  } else {
    addRunDependency('memory initializer');
    Browser.asyncLoad(memoryInitializer, function(data) {
      applyData(data);
      removeRunDependency('memory initializer');
    }, function(data) {
      throw 'could not load memory initializer ' + memoryInitializer;
    });
  }
}
function ExitStatus(status) {
  this.name = "ExitStatus";
  this.message = "Program terminated with exit(" + status + ")";
  this.status = status;
};
ExitStatus.prototype = new Error();
ExitStatus.prototype.constructor = ExitStatus;
var initialStackTop;
var preloadStartTime = null;
var calledMain = false;
dependenciesFulfilled = function runCaller() {
  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)
  if (!Module['calledRun'] && shouldRunNow) run();
  if (!Module['calledRun']) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled
}
Module['callMain'] = Module.callMain = function callMain(args) {
  assert(runDependencies == 0, 'cannot call main when async dependencies remain! (listen on __ATMAIN__)');
  assert(__ATPRERUN__.length == 0, 'cannot call main when preRun functions remain to be called');
  args = args || [];
  if (ENVIRONMENT_IS_WEB && preloadStartTime !== null) {
    Module.printErr('preload time: ' + (Date.now() - preloadStartTime) + ' ms');
  }
  ensureInitRuntime();
  var argc = args.length+1;
  function pad() {
    for (var i = 0; i < 4-1; i++) {
      argv.push(0);
    }
  }
  var argv = [allocate(intArrayFromString("/bin/this.program"), 'i8', ALLOC_NORMAL) ];
  pad();
  for (var i = 0; i < argc-1; i = i + 1) {
    argv.push(allocate(intArrayFromString(args[i]), 'i8', ALLOC_NORMAL));
    pad();
  }
  argv.push(0);
  argv = allocate(argv, 'i32', ALLOC_NORMAL);
  initialStackTop = STACKTOP;
  try {
    var ret = Module['_main'](argc, argv, 0);
    // if we're not running an evented main loop, it's time to exit
    if (!Module['noExitRuntime']) {
      exit(ret);
    }
  }
  catch(e) {
    if (e instanceof ExitStatus) {
      // exit() throws this once it's done to make sure execution
      // has been stopped completely
      return;
    } else if (e == 'SimulateInfiniteLoop') {
      // running an evented main loop, don't immediately exit
      Module['noExitRuntime'] = true;
      return;
    } else {
      if (e && typeof e === 'object' && e.stack) Module.printErr('exception thrown: ' + [e, e.stack]);
      throw e;
    }
  } finally {
    calledMain = true;
  }
}
function run(args) {
  args = args || Module['arguments'];
  if (preloadStartTime === null) preloadStartTime = Date.now();
  if (runDependencies > 0) {
    Module.printErr('run() called, but dependencies remain, so not running');
    return;
  }
  preRun();
  if (runDependencies > 0) return; // a preRun added a dependency, run will be called later
  if (Module['calledRun']) return; // run may have just been called through dependencies being fulfilled just in this very frame
  function doRun() {
    ensureInitRuntime();
    preMain();
    assert(!Module['calledRun']);
    Module['calledRun'] = true;
    if (Module['_main'] && shouldRunNow) {
      Module['callMain'](args);
    }
    postRun();
  }
  if (Module['setStatus']) {
    Module['setStatus']('Running...');
    setTimeout(function() {
      setTimeout(function() {
        Module['setStatus']('');
      }, 1);
      if (!ABORT) doRun();
    }, 1);
  } else {
    doRun();
  }
}
Module['run'] = Module.run = run;
function exit(status) {
  ABORT = true;
  EXITSTATUS = status;
  STACKTOP = initialStackTop;
  // exit the runtime
  exitRuntime();
  // TODO We should handle this differently based on environment.
  // In the browser, the best we can do is throw an exception
  // to halt execution, but in node we could process.exit and
  // I'd imagine SM shell would have something equivalent.
  // This would let us set a proper exit status (which
  // would be great for checking test exit statuses).
  // https://github.com/kripken/emscripten/issues/1371
  // throw an exception to halt the current execution
  throw new ExitStatus(status);
}
Module['exit'] = Module.exit = exit;
function abort(text) {
  if (text) {
    Module.print(text);
    Module.printErr(text);
  }
  ABORT = true;
  EXITSTATUS = 1;
  throw 'abort() at ' + stackTrace();
}
Module['abort'] = Module.abort = abort;
// {{PRE_RUN_ADDITIONS}}
if (Module['preInit']) {
  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];
  while (Module['preInit'].length > 0) {
    Module['preInit'].pop()();
  }
}
// shouldRunNow refers to calling main(), not run().
var shouldRunNow = true;

// {{POST_RUN_ADDITIONS}}
// {{MODULE_ADDITIONS}}
  FS.ignorePermissions = true;
  FS.createPath('/', 'espeak/espeak-data', true, false);
  [['phontab', phontab], ['phonindex', phonindex], ['phondata', phondata], ['intonations', intonations], ['en_dict', en_dict] /*, ['fr_dict', fr_dict] */].forEach(function(pair) { // commented-out code here is needed for French
    var id = pair[0];
    var data = pair[1];
    FS.createDataFile('/espeak/espeak-data', id, data, true, false);
  });
  //FS.createPath('/', 'espeak/espeak-data/voices', true, false); // Needed for French
  //FS.createDataFile('/espeak/espeak-data/voices', 'fr', fr, true, false); // Needed for French
  FS.createPath('/', 'espeak/espeak-data/voices/en', true, false);
  FS.createDataFile('/espeak/espeak-data/voices/en', 'en-us', en_us, true, false);
  FS.root.write = true;
  FS.ignorePermissions = false;
  function unsignedStream(wav) {
    var i, l= wav.length; out=new Array(l);
    for (i = 0; i < l; i++) out[i] = unSign(wav[i], 8);
    return out;
  }
  var args = this['args'] || {};
  Module.arguments = [
    '-w', 'wav.wav',
    // options
    '-a', args['amplitude'] ? String(args['amplitude']) : '100',
    '-g', args['wordgap'] ? String(args['wordgap']) : '0', // XXX
    '-p', args['pitch'] ? String(args['pitch']) : '50',
    '-s', args['speed'] ? String(args['speed']) : '175',
    '-v', args['voice'] ? String(args['voice']) : 'en-us',
    // end options
    '--path=/espeak',
    this['text']
  ];
  run();
  console.log(FS.root.contents['wav.wav']);
  this['ret'] = unsignedStream(FS.root.contents['wav.wav'].contents);
  }).call(self);
  return self.ret;
}

